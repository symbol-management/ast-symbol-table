{
 "e3fp": {
  "data": {
   "symbols_in_volume": [
    "e3fp.version",
    "e3fp.version_info",
    "str"
   ]
  },
  "type": "module"
 },
 "e3fp.__version__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "e3fp.config": {
  "data": {},
  "type": "module"
 },
 "e3fp.config.params": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "e3fp.config.params.CONFIG_DIR",
    "e3fp.config.params.os",
    "e3fp.config.params.read_params"
   ]
  },
  "type": "module"
 },
 "e3fp.config.params.CONFIG_DIR": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "e3fp.config.params.DEF_PARAM_FILE": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "e3fp.config.params.DuplicateSectionError": {
  "data": {
   "shadows": "configparser.DuplicateSectionError"
  },
  "type": "import"
 },
 "e3fp.config.params.NoSectionError": {
  "data": {
   "shadows": "configparser.NoSectionError"
  },
  "type": "import"
 },
 "e3fp.config.params.SafeConfigParser": {
  "data": {
   "shadows": "configparser.SafeConfigParser"
  },
  "type": "import"
 },
 "e3fp.config.params.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "e3fp.config.params.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "e3fp.config.params.default_params": {
  "data": {
   "lineno": 203
  },
  "type": "constant"
 },
 "e3fp.config.params.get_default_value": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "e3fp.config.params.get_value"
   ]
  },
  "type": "function"
 },
 "e3fp.config.params.get_value": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "SyntaxError",
    "ValueError",
    "bool",
    "e3fp.config.params.ast",
    "float",
    "get_function",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "e3fp.config.params.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "e3fp.config.params.params_to_sections_dict": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "configparser.NoSectionError",
    "dict",
    "e3fp.config.params.get_value",
    "e3fp.config.params.read_params"
   ]
  },
  "type": "function"
 },
 "e3fp.config.params.read_params": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "configparser.SafeConfigParser",
    "e3fp.config.params.DEF_PARAM_FILE",
    "e3fp.config.params.copy",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "e3fp.config.params.update_params": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "configparser.DuplicateSectionError",
    "configparser.SafeConfigParser",
    "e3fp.config.params.read_params",
    "str"
   ]
  },
  "type": "function"
 },
 "e3fp.config.params.write_params": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "e3fp.conformer": {
  "data": {},
  "type": "module"
 },
 "e3fp.conformer.generate": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bool",
    "dict",
    "e3fp.config.params.get_default_value",
    "e3fp.conformer.generate.COMPRESS_DEF",
    "e3fp.conformer.generate.FIRST_DEF",
    "e3fp.conformer.generate.FORCEFIELD_DEF",
    "e3fp.conformer.generate.MAX_ENERGY_DIFF_DEF",
    "e3fp.conformer.generate.NUM_CONF_DEF",
    "e3fp.conformer.generate.OUTDIR_DEF",
    "e3fp.conformer.generate.POOL_MULTIPLIER_DEF",
    "e3fp.conformer.generate.RMSD_CUTOFF_DEF",
    "e3fp.conformer.generate.SEED_DEF",
    "e3fp.conformer.generate.STANDARDISE_DEF",
    "e3fp.conformer.generate.argparse",
    "e3fp.conformer.generate.kwargs",
    "e3fp.conformer.generate.params",
    "e3fp.conformer.generate.parser",
    "e3fp.conformer.generate.run",
    "e3fp.conformer.generator.FORCEFIELD_CHOICES",
    "float",
    "int",
    "list",
    "python_utilities.parallel.ALL_PARALLEL_MODES",
    "str"
   ]
  },
  "type": "module"
 },
 "e3fp.conformer.generate.ALL_PARALLEL_MODES": {
  "data": {
   "shadows": "python_utilities.parallel.ALL_PARALLEL_MODES"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.AllChem": {
  "data": {
   "shadows": "rdkit.Chem.AllChem"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.COMPRESS_DEF": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "e3fp.conformer.generate.ConformerGenerator": {
  "data": {
   "shadows": "e3fp.conformer.generator.ConformerGenerator"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.FIRST_DEF": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "e3fp.conformer.generate.FORCEFIELD_CHOICES": {
  "data": {
   "shadows": "e3fp.conformer.generator.FORCEFIELD_CHOICES"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.FORCEFIELD_DEF": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "e3fp.conformer.generate.HDF5Buffer": {
  "data": {
   "shadows": "python_utilities.io_tools.HDF5Buffer"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.MAX_ENERGY_DIFF_DEF": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "e3fp.conformer.generate.NUM_CONF_DEF": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "e3fp.conformer.generate.OUTDIR_DEF": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "e3fp.conformer.generate.POOL_MULTIPLIER_DEF": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "e3fp.conformer.generate.Parallelizer": {
  "data": {
   "shadows": "python_utilities.parallel.Parallelizer"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.RMSD_CUTOFF_DEF": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "e3fp.conformer.generate.SEED_DEF": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "e3fp.conformer.generate.STANDARDISE_DEF": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "e3fp.conformer.generate.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.generate_conformers": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "Exception",
    "e3fp.conformer.generate.COMPRESS_DEF",
    "e3fp.conformer.generate.FIRST_DEF",
    "e3fp.conformer.generate.FORCEFIELD_DEF",
    "e3fp.conformer.generate.MAX_ENERGY_DIFF_DEF",
    "e3fp.conformer.generate.NUM_CONF_DEF",
    "e3fp.conformer.generate.OUTDIR_DEF",
    "e3fp.conformer.generate.POOL_MULTIPLIER_DEF",
    "e3fp.conformer.generate.RMSD_CUTOFF_DEF",
    "e3fp.conformer.generate.SEED_DEF",
    "e3fp.conformer.generate.STANDARDISE_DEF",
    "e3fp.conformer.generate.logging",
    "e3fp.conformer.generate.os",
    "e3fp.conformer.generator.ConformerGenerator",
    "e3fp.conformer.util.mol_to_sdf",
    "e3fp.conformer.util.mol_to_standardised_mol",
    "rdkit.Chem.AllChem.CalcNumRotatableBonds"
   ]
  },
  "type": "function"
 },
 "e3fp.conformer.generate.get_default_value": {
  "data": {
   "shadows": "e3fp.config.params.get_default_value"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.get_value": {
  "data": {
   "shadows": "e3fp.config.params.get_value"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.kwargs": {
  "data": {
   "lineno": 600
  },
  "type": "constant"
 },
 "e3fp.conformer.generate.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.make_data_iterator": {
  "data": {
   "shadows": "python_utilities.parallel.make_data_iterator"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.mol2_generator": {
  "data": {
   "shadows": "e3fp.conformer.util.mol2_generator"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.mol_from_mol2": {
  "data": {
   "shadows": "e3fp.conformer.util.mol_from_mol2"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.mol_from_smiles": {
  "data": {
   "shadows": "e3fp.conformer.util.mol_from_smiles"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.mol_to_sdf": {
  "data": {
   "shadows": "e3fp.conformer.util.mol_to_sdf"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.mol_to_standardised_mol": {
  "data": {
   "shadows": "e3fp.conformer.util.mol_to_standardised_mol"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.params": {
  "data": {
   "lineno": 598
  },
  "type": "constant"
 },
 "e3fp.conformer.generate.parser": {
  "data": {
   "lineno": 450
  },
  "type": "constant"
 },
 "e3fp.conformer.generate.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.read_params": {
  "data": {
   "shadows": "e3fp.config.params.read_params"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.run": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "e3fp.config.params.get_value",
    "e3fp.config.params.read_params",
    "e3fp.conformer.generate.COMPRESS_DEF",
    "e3fp.conformer.generate.FIRST_DEF",
    "e3fp.conformer.generate.FORCEFIELD_DEF",
    "e3fp.conformer.generate.MAX_ENERGY_DIFF_DEF",
    "e3fp.conformer.generate.NUM_CONF_DEF",
    "e3fp.conformer.generate.OUTDIR_DEF",
    "e3fp.conformer.generate.POOL_MULTIPLIER_DEF",
    "e3fp.conformer.generate.RMSD_CUTOFF_DEF",
    "e3fp.conformer.generate.SEED_DEF",
    "e3fp.conformer.generate.STANDARDISE_DEF",
    "e3fp.conformer.generate.generate_conformers",
    "e3fp.conformer.generate.logging",
    "e3fp.conformer.generate.os",
    "e3fp.conformer.generate.sys",
    "e3fp.conformer.generate.values_to_hdf5",
    "e3fp.conformer.generator.FORCEFIELD_CHOICES",
    "e3fp.conformer.util.mol2_generator",
    "e3fp.conformer.util.mol_from_mol2",
    "e3fp.conformer.util.mol_from_smiles",
    "e3fp.conformer.util.smiles_generator",
    "float",
    "int",
    "iter",
    "len",
    "python_utilities.io_tools.HDF5Buffer",
    "python_utilities.io_tools.touch_dir",
    "python_utilities.parallel.Parallelizer",
    "python_utilities.parallel.make_data_iterator",
    "python_utilities.scripting.setup_logging",
    "rdkit.Chem.AllChem.CalcExactMolWt",
    "rdkit.Chem.AllChem.CalcNumRotatableBonds",
    "sorted"
   ]
  },
  "type": "function"
 },
 "e3fp.conformer.generate.setup_logging": {
  "data": {
   "shadows": "python_utilities.scripting.setup_logging"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.smiles_generator": {
  "data": {
   "shadows": "e3fp.conformer.util.smiles_generator"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.touch_dir": {
  "data": {
   "shadows": "python_utilities.io_tools.touch_dir"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.values_to_hdf5": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "e3fp.conformer.generate.logging",
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "e3fp.conformer.generator": {
  "data": {},
  "type": "module"
 },
 "e3fp.conformer.generator.AllChem": {
  "data": {
   "shadows": "rdkit.Chem.AllChem"
  },
  "type": "import"
 },
 "e3fp.conformer.generator.Chem": {
  "data": {
   "shadows": "rdkit.Chem"
  },
  "type": "import"
 },
 "e3fp.conformer.generator.ConformerGenerator": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "e3fp.conformer.generator.ConformerGenerator.__call__": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "e3fp.conformer.generator.ConformerGenerator.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ValueError",
    "e3fp.conformer.generator.FIRST_DEF",
    "e3fp.conformer.generator.FORCEFIELD_CHOICES",
    "e3fp.conformer.generator.FORCEFIELD_DEF",
    "e3fp.conformer.generator.MAX_ENERGY_DIFF_DEF",
    "e3fp.conformer.generator.NUM_CONF_DEF",
    "e3fp.conformer.generator.POOL_MULTIPLIER_DEF",
    "e3fp.conformer.generator.RMSD_CUTOFF_DEF",
    "e3fp.conformer.generator.SEED_DEF"
   ]
  },
  "type": "function"
 },
 "e3fp.conformer.generator.ConformerGenerator.__repr__": {
  "data": {
   "lineno": 400
  },
  "type": "function"
 },
 "e3fp.conformer.generator.ConformerGenerator.__str__": {
  "data": {
   "lineno": 415
  },
  "type": "function"
 },
 "e3fp.conformer.generator.ConformerGenerator.embed_molecule": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "e3fp.conformer.generator.logging",
    "int",
    "rdkit.Chem.AddHs",
    "rdkit.Chem.AllChem.EmbedMultipleConfs",
    "rdkit.Chem.SanitizeMol",
    "type"
   ]
  },
  "type": "function"
 },
 "e3fp.conformer.generator.ConformerGenerator.filter_conformers": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "e3fp.conformer.generator.logging",
    "enumerate",
    "len",
    "numpy.argsort",
    "numpy.array",
    "numpy.asarray",
    "numpy.bool_",
    "numpy.float",
    "numpy.int",
    "numpy.ix_",
    "numpy.ones_like",
    "numpy.zeros",
    "rdkit.Chem.AllChem.GetBestRMS",
    "rdkit.Chem.PropertyMol.PropertyMol",
    "rdkit.Chem.RemoveHs"
   ]
  },
  "type": "function"
 },
 "e3fp.conformer.generator.ConformerGenerator.generate_conformers": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "RuntimeError",
    "add_conformer_energies_to_mol",
    "numpy.triu_indices_from"
   ]
  },
  "type": "function"
 },
 "e3fp.conformer.generator.ConformerGenerator.get_conformer_energies": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "enumerate",
    "numpy.empty",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "e3fp.conformer.generator.ConformerGenerator.get_molecule_force_field": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "ValueError",
    "rdkit.Chem.AllChem.MMFFGetMoleculeForceField",
    "rdkit.Chem.AllChem.MMFFGetMoleculeProperties",
    "rdkit.Chem.AllChem.MMFFSanitizeMolecule",
    "rdkit.Chem.AllChem.UFFGetMoleculeForceField"
   ]
  },
  "type": "function"
 },
 "e3fp.conformer.generator.ConformerGenerator.get_num_conformers": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "rdkit.Chem.AllChem.CalcNumRotatableBonds",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "e3fp.conformer.generator.ConformerGenerator.minimize_conformers": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "e3fp.conformer.generator.logging"
   ]
  },
  "type": "function"
 },
 "e3fp.conformer.generator.ConformerGenerator.reverse_enumerate": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "len",
    "range",
    "reversed",
    "staticmethod",
    "zip"
   ]
  },
  "type": "function"
 },
 "e3fp.conformer.generator.FIRST_DEF": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "e3fp.conformer.generator.FORCEFIELD_CHOICES": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "e3fp.conformer.generator.FORCEFIELD_DEF": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "e3fp.conformer.generator.MAX_ENERGY_DIFF_DEF": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "e3fp.conformer.generator.NUM_CONF_DEF": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "e3fp.conformer.generator.POOL_MULTIPLIER_DEF": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "e3fp.conformer.generator.PropertyMol": {
  "data": {
   "shadows": "rdkit.Chem.PropertyMol"
  },
  "type": "import"
 },
 "e3fp.conformer.generator.RMSD_CUTOFF_DEF": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "e3fp.conformer.generator.SEED_DEF": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "e3fp.conformer.generator.__author__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "e3fp.conformer.generator.__copyright__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "e3fp.conformer.generator.__license__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "e3fp.conformer.generator.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "e3fp.conformer.generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "e3fp.conformer.protonation": {
  "data": {},
  "type": "module"
 },
 "e3fp.conformer.protonation._chunk_iter_to_lists": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "e3fp.conformer.protonation.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "e3fp.conformer.protonation.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "e3fp.conformer.protonation.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "e3fp.conformer.protonation.smiles_dict_to_proto_smiles_dict": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "MolItemName",
    "e3fp.conformer.protonation._chunk_iter_to_lists",
    "e3fp.conformer.protonation.itertools",
    "e3fp.conformer.protonation.logging",
    "e3fp.conformer.protonation.smiles_list_to_proto_smiles_list",
    "iter"
   ]
  },
  "type": "function"
 },
 "e3fp.conformer.protonation.smiles_list_to_proto_smiles_list": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "Exception",
    "MolItemName",
    "ValueError",
    "e3fp.conformer.protonation.logging",
    "e3fp.conformer.protonation.os",
    "e3fp.conformer.protonation.subprocess",
    "e3fp.conformer.protonation.tempfile",
    "float",
    "iter",
    "iter_to_smiles",
    "next"
   ]
  },
  "type": "function"
 },
 "e3fp.conformer.protonation.smiles_to_proto_smiles": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "MolItemName",
    "OSError",
    "ValueError",
    "e3fp.conformer.protonation.logging",
    "e3fp.conformer.protonation.subprocess",
    "float",
    "iter",
    "next"
   ]
  },
  "type": "function"
 },
 "e3fp.conformer.protonation.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "e3fp.conformer.protonation.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "e3fp.fingerprint": {
  "data": {},
  "type": "module"
 },
 "e3fp.fingerprint.array_ops": {
  "data": {
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.identity"
   ]
  },
  "type": "module"
 },
 "e3fp.fingerprint.array_ops.EPS": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "e3fp.fingerprint.array_ops.QUATERNION_DTYPE": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "e3fp.fingerprint.array_ops.as_unit": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "e3fp.fingerprint.array_ops.EPS",
    "numpy.array",
    "numpy.einsum",
    "numpy.expand_dims",
    "numpy.float64",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "e3fp.fingerprint.array_ops.calculate_angles": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "e3fp.fingerprint.array_ops.as_unit",
    "e3fp.fingerprint.array_ops.rotate_angles",
    "numpy.all",
    "numpy.arccos",
    "numpy.clip",
    "numpy.cross",
    "numpy.dot",
    "numpy.pi",
    "numpy.sign",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "e3fp.fingerprint.array_ops.make_distance_matrix": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "scipy.spatial.distance.pdist",
    "scipy.spatial.distance.squareform"
   ]
  },
  "type": "function"
 },
 "e3fp.fingerprint.array_ops.make_rotation_matrix": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "e3fp.fingerprint.array_ops.as_unit",
    "numpy.all",
    "numpy.array",
    "numpy.cross",
    "numpy.dot",
    "numpy.float64",
    "numpy.identity",
    "numpy.outer"
   ]
  },
  "type": "function"
 },
 "e3fp.fingerprint.array_ops.make_transform_matrix": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "e3fp.fingerprint.array_ops.as_unit",
    "e3fp.fingerprint.array_ops.make_rotation_matrix",
    "numpy.asarray",
    "numpy.atleast_2d",
    "numpy.cross",
    "numpy.dot",
    "numpy.float64",
    "numpy.identity"
   ]
  },
  "type": "function"
 },
 "e3fp.fingerprint.array_ops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "e3fp.fingerprint.array_ops.pad_array": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "list",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "e3fp.fingerprint.array_ops.pdist": {
  "data": {
   "shadows": "scipy.spatial.distance.pdist"
  },
  "type": "import"
 },
 "e3fp.fingerprint.array_ops.project_to_plane": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "e3fp.fingerprint.array_ops.as_unit",
    "numpy.array",
    "numpy.dot",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "e3fp.fingerprint.array_ops.quaternion_to_transform_matrix": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.identity",
    "numpy.linalg.norm",
    "numpy.outer",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "e3fp.fingerprint.array_ops.rotate_angles": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "e3fp.fingerprint.array_ops.squareform": {
  "data": {
   "shadows": "scipy.spatial.distance.squareform"
  },
  "type": "import"
 },
 "e3fp.fingerprint.array_ops.transform_array": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "e3fp.fingerprint.array_ops.pad_array",
    "e3fp.fingerprint.array_ops.unpad_array",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "e3fp.fingerprint.array_ops.transform_matrix_to_quaternion": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "e3fp.fingerprint.array_ops.QUATERNION_DTYPE",
    "numpy.array",
    "numpy.float64",
    "numpy.sqrt",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "e3fp.fingerprint.array_ops.unpad_array": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "e3fp.fingerprint.generate": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bool",
    "dict",
    "e3fp.config.params.get_default_value",
    "e3fp.fingerprint.fprinter.BITS",
    "e3fp.fingerprint.generate.COUNTS_DEF",
    "e3fp.fingerprint.generate.FIRST_DEF",
    "e3fp.fingerprint.generate.LEVEL_DEF",
    "e3fp.fingerprint.generate.OUT_EXT_DEF",
    "e3fp.fingerprint.generate.RADIUS_MULTIPLIER_DEF",
    "e3fp.fingerprint.generate.STEREO_DEF",
    "e3fp.fingerprint.generate.argparse",
    "e3fp.fingerprint.generate.kwargs",
    "e3fp.fingerprint.generate.params",
    "e3fp.fingerprint.generate.parser",
    "e3fp.fingerprint.generate.run",
    "e3fp.fingerprint.generate.sdf_files",
    "float",
    "int",
    "list",
    "python_utilities.parallel.ALL_PARALLEL_MODES",
    "str"
   ]
  },
  "type": "module"
 },
 "e3fp.fingerprint.generate.ALL_PARALLEL_MODES": {
  "data": {
   "shadows": "python_utilities.parallel.ALL_PARALLEL_MODES"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.BITS": {
  "data": {
   "shadows": "e3fp.fingerprint.fprinter.BITS"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.COUNTS_DEF": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "e3fp.fingerprint.generate.EXCLUDE_FLOATING_DEF": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "e3fp.fingerprint.generate.FIRST_DEF": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "e3fp.fingerprint.generate.FingerprintDatabase": {
  "data": {
   "shadows": "e3fp.fingerprint.db.FingerprintDatabase"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.Fingerprinter": {
  "data": {
   "shadows": "e3fp.fingerprint.fprinter.Fingerprinter"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.INCLUDE_DISCONNECTED_DEF": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "e3fp.fingerprint.generate.LEVEL_DEF": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "e3fp.fingerprint.generate.MolItemName": {
  "data": {
   "shadows": "e3fp.conformer.util.MolItemName"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.OUT_EXT_DEF": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "e3fp.fingerprint.generate.Parallelizer": {
  "data": {
   "shadows": "python_utilities.parallel.Parallelizer"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.RADIUS_MULTIPLIER_DEF": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "e3fp.fingerprint.generate.RDKIT_INVARIANTS_DEF": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "e3fp.fingerprint.generate.REMOVE_DUPLICATE_SUBSTRUCTS_DEF": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "e3fp.fingerprint.generate.STEREO_DEF": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "e3fp.fingerprint.generate.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.fp": {
  "data": {
   "shadows": "e3fp.fingerprint.fprint"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.fprints_dict_from_mol": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "Exception",
    "e3fp.conformer.util.MolItemName.from_str",
    "e3fp.fingerprint.fprint.savez",
    "e3fp.fingerprint.fprinter.BITS",
    "e3fp.fingerprint.fprinter.Fingerprinter",
    "e3fp.fingerprint.generate.COUNTS_DEF",
    "e3fp.fingerprint.generate.EXCLUDE_FLOATING_DEF",
    "e3fp.fingerprint.generate.FIRST_DEF",
    "e3fp.fingerprint.generate.INCLUDE_DISCONNECTED_DEF",
    "e3fp.fingerprint.generate.LEVEL_DEF",
    "e3fp.fingerprint.generate.OUT_EXT_DEF",
    "e3fp.fingerprint.generate.RADIUS_MULTIPLIER_DEF",
    "e3fp.fingerprint.generate.RDKIT_INVARIANTS_DEF",
    "e3fp.fingerprint.generate.REMOVE_DUPLICATE_SUBSTRUCTS_DEF",
    "e3fp.fingerprint.generate.STEREO_DEF",
    "e3fp.fingerprint.generate.logging",
    "e3fp.fingerprint.generate.os",
    "enumerate",
    "max",
    "python_utilities.io_tools.touch_dir",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "e3fp.fingerprint.generate.fprints_dict_from_sdf": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "Exception",
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.generate.fprints_dict_from_mol",
    "e3fp.fingerprint.generate.logging"
   ]
  },
  "type": "function"
 },
 "e3fp.fingerprint.generate.get_default_value": {
  "data": {
   "shadows": "e3fp.config.params.get_default_value"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.get_value": {
  "data": {
   "shadows": "e3fp.config.params.get_value"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.kwargs": {
  "data": {
   "lineno": 512
  },
  "type": "constant"
 },
 "e3fp.fingerprint.generate.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.make_data_iterator": {
  "data": {
   "shadows": "python_utilities.parallel.make_data_iterator"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.mol_from_sdf": {
  "data": {
   "shadows": "e3fp.conformer.util.mol_from_sdf"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.params": {
  "data": {
   "lineno": 510
  },
  "type": "constant"
 },
 "e3fp.fingerprint.generate.parser": {
  "data": {
   "lineno": 378
  },
  "type": "constant"
 },
 "e3fp.fingerprint.generate.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.read_params": {
  "data": {
   "shadows": "e3fp.config.params.read_params"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.run": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "bool",
    "e3fp.config.params.get_value",
    "e3fp.config.params.read_params",
    "e3fp.fingerprint.db.FingerprintDatabase",
    "e3fp.fingerprint.fprinter.BITS",
    "e3fp.fingerprint.generate.COUNTS_DEF",
    "e3fp.fingerprint.generate.EXCLUDE_FLOATING_DEF",
    "e3fp.fingerprint.generate.FIRST_DEF",
    "e3fp.fingerprint.generate.INCLUDE_DISCONNECTED_DEF",
    "e3fp.fingerprint.generate.LEVEL_DEF",
    "e3fp.fingerprint.generate.OUT_EXT_DEF",
    "e3fp.fingerprint.generate.RADIUS_MULTIPLIER_DEF",
    "e3fp.fingerprint.generate.RDKIT_INVARIANTS_DEF",
    "e3fp.fingerprint.generate.REMOVE_DUPLICATE_SUBSTRUCTS_DEF",
    "e3fp.fingerprint.generate.STEREO_DEF",
    "e3fp.fingerprint.generate.fprints_dict_from_sdf",
    "e3fp.fingerprint.generate.logging",
    "e3fp.fingerprint.generate.os",
    "e3fp.fingerprint.generate.sys",
    "float",
    "glob.glob",
    "int",
    "iter",
    "len",
    "list",
    "max",
    "python_utilities.parallel.Parallelizer",
    "python_utilities.parallel.make_data_iterator",
    "python_utilities.scripting.setup_logging",
    "type"
   ]
  },
  "type": "function"
 },
 "e3fp.fingerprint.generate.sdf_files": {
  "data": {
   "lineno": 513
  },
  "type": "constant"
 },
 "e3fp.fingerprint.generate.setup_logging": {
  "data": {
   "shadows": "python_utilities.scripting.setup_logging"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.touch_dir": {
  "data": {
   "shadows": "python_utilities.io_tools.touch_dir"
  },
  "type": "import"
 },
 "e3fp.fingerprint.metrics.fprint_metrics": {
  "data": {},
  "type": "module"
 },
 "e3fp.fingerprint.metrics.fprint_metrics.cosine": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "sum"
   ]
  },
  "type": "function"
 },
 "e3fp.fingerprint.metrics.fprint_metrics.dice": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "numpy.intersect1d"
   ]
  },
  "type": "function"
 },
 "e3fp.fingerprint.metrics.fprint_metrics.distance": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "e3fp.fingerprint.metrics.fprint_metrics.hamming"
   ]
  },
  "type": "function"
 },
 "e3fp.fingerprint.metrics.fprint_metrics.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "e3fp.fingerprint.metrics.fprint_metrics.hamming": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "numpy.intersect1d"
   ]
  },
  "type": "function"
 },
 "e3fp.fingerprint.metrics.fprint_metrics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "e3fp.fingerprint.metrics.fprint_metrics.pearson": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "sum"
   ]
  },
  "type": "function"
 },
 "e3fp.fingerprint.metrics.fprint_metrics.soergel": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "abs",
    "diff_counts_dict",
    "e3fp.fingerprint.metrics.fprint_metrics.tanimoto",
    "isinstance",
    "max",
    "numpy.asarray",
    "numpy.float",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "e3fp.fingerprint.metrics.fprint_metrics.tanimoto": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "numpy.intersect1d"
   ]
  },
  "type": "function"
 },
 "e3fp.fingerprint.util": {
  "data": {},
  "type": "module"
 },
 "e3fp.fingerprint.util.E3FPBitsValueError": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "e3fp.fingerprint.util.E3FPCountsError": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "e3fp.fingerprint.util.E3FPInvalidFingerprintError": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "class"
 },
 "e3fp.fingerprint.util.E3FPMolError": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "class"
 },
 "e3fp.fingerprint.util.E3FPOptionError": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "e3fp.pipeline": {
  "data": {},
  "type": "module"
 },
 "e3fp.pipeline.confs_from_smiles": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "generate_conformers",
    "mol_from_smiles"
   ]
  },
  "type": "function"
 },
 "e3fp.pipeline.fprints_from_fprints_dict": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "max"
   ]
  },
  "type": "function"
 },
 "e3fp.pipeline.fprints_from_mol": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "e3fp.pipeline.fprints_from_fprints_dict",
    "fprints_dict_from_mol"
   ]
  },
  "type": "function"
 },
 "e3fp.pipeline.fprints_from_sdf": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "e3fp.pipeline.fprints_from_mol",
    "mol_from_sdf"
   ]
  },
  "type": "function"
 },
 "e3fp.pipeline.fprints_from_smiles": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "e3fp.pipeline.confs_from_smiles",
    "e3fp.pipeline.fprints_from_mol"
   ]
  },
  "type": "function"
 },
 "e3fp.pipeline.params_to_dicts": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "params_to_sections_dict"
   ]
  },
  "type": "function"
 },
 "e3fp.pipeline.sdf_from_smiles": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "e3fp.pipeline.confs_from_smiles",
    "mol_to_sdf"
   ]
  },
  "type": "function"
 },
 "e3fp.test": {
  "data": {},
  "type": "module"
 },
 "e3fp.test.test_config": {
  "data": {},
  "type": "module"
 },
 "e3fp.test.test_config.DEF_PARAM_FILE": {
  "data": {
   "shadows": "e3fp.config.params.DEF_PARAM_FILE"
  },
  "type": "import"
 },
 "e3fp.test.test_config.TestConfig": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "e3fp.test.test_config.TestConfig.test_config_file_exists": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "e3fp.config.params.DEF_PARAM_FILE",
    "e3fp.test.test_config.os"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "e3fp.test.test_conformer": {
  "data": {},
  "type": "module"
 },
 "e3fp.test.test_conformer.AllChem": {
  "data": {
   "shadows": "rdkit.Chem.AllChem"
  },
  "type": "import"
 },
 "e3fp.test.test_conformer.TestConformer": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "e3fp.test.test_conformer.TestConformer.test_default_is_unseeded": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "e3fp.conformer.generate.generate_conformers",
    "e3fp.conformer.util.mol_from_smiles",
    "range",
    "rdkit.Chem.AllChem.GetBestRMS"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_conformer.TestConformer.test_seed_produces_same_conformers": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "e3fp.conformer.generate.generate_conformers",
    "e3fp.conformer.util.mol_from_smiles",
    "range",
    "rdkit.Chem.AllChem.GetBestRMS"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_conformer.TestConformer.test_standardisation": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_smiles",
    "e3fp.conformer.util.mol_to_standardised_mol"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_conformer.generate_conformers": {
  "data": {
   "shadows": "e3fp.conformer.generate.generate_conformers"
  },
  "type": "import"
 },
 "e3fp.test.test_conformer.mol_from_smiles": {
  "data": {
   "shadows": "e3fp.conformer.util.mol_from_smiles"
  },
  "type": "import"
 },
 "e3fp.test.test_conformer.mol_to_standardised_mol": {
  "data": {
   "shadows": "e3fp.conformer.util.mol_to_standardised_mol"
  },
  "type": "import"
 },
 "e3fp.test.test_conformer.rdkit.Chem": {
  "data": {
   "shadows": "rdkit.Chem"
  },
  "type": "import"
 },
 "e3fp.test.test_dependencies": {
  "data": {},
  "type": "module"
 },
 "e3fp.test.test_dependencies.TestOptionalFeatureDependencies": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "e3fp.test.test_dependencies.TestOptionalFeatureDependencies.test_h5py": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "e3fp.test.test_dependencies.TestOptionalFeatureDependencies.test_standardiser": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "e3fp.test.test_dependencies.TestOptionalParallelDependencies": {
  "data": {
   "lineno": 33
  },
  "type": "class"
 },
 "e3fp.test.test_dependencies.TestOptionalParallelDependencies.test_concurrent": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "e3fp.test.test_dependencies.TestOptionalParallelDependencies.test_mpi4py": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "e3fp.test.test_dependencies.TestOptionalParallelDependencies.test_python_utilities": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "e3fp.test.test_dependencies.TestRequiredDependencies": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "e3fp.test.test_dependencies.TestRequiredDependencies.test_murmurhash": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "e3fp.test.test_dependencies.TestRequiredDependencies.test_numpy": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "e3fp.test.test_dependencies.TestRequiredDependencies.test_python_utilities": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "e3fp.test.test_dependencies.TestRequiredDependencies.test_rdkit": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "e3fp.test.test_dependencies.TestRequiredDependencies.test_scipy": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "e3fp.test.test_dependencies.concurrent.futures": {
  "data": {
   "shadows": "concurrent.futures"
  },
  "type": "import"
 },
 "e3fp.test.test_dependencies.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "e3fp.test.test_dependencies.mmh3": {
  "data": {
   "shadows": "mmh3"
  },
  "type": "import"
 },
 "e3fp.test.test_dependencies.mpi4py": {
  "data": {
   "shadows": "mpi4py"
  },
  "type": "import"
 },
 "e3fp.test.test_dependencies.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "e3fp.test.test_dependencies.python_utilities": {
  "data": {
   "shadows": "python_utilities"
  },
  "type": "import"
 },
 "e3fp.test.test_dependencies.python_utilities.parallel": {
  "data": {
   "shadows": "python_utilities.parallel"
  },
  "type": "import"
 },
 "e3fp.test.test_dependencies.rdkit": {
  "data": {
   "shadows": "rdkit"
  },
  "type": "import"
 },
 "e3fp.test.test_dependencies.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "e3fp.test.test_dependencies.standardiser": {
  "data": {
   "shadows": "standardiser"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprint": {
  "data": {},
  "type": "module"
 },
 "e3fp.test.test_fingerprint.CountFingerprint": {
  "data": {
   "shadows": "e3fp.fingerprint.fprint.CountFingerprint"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprint.Fingerprint": {
  "data": {
   "shadows": "e3fp.fingerprint.fprint.Fingerprint"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprint.FloatFingerprint": {
  "data": {
   "shadows": "e3fp.fingerprint.fprint.FloatFingerprint"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprint.TestFingerprintAlgebra": {
  "data": {
   "lineno": 131
  },
  "type": "class"
 },
 "e3fp.test.test_fingerprint.TestFingerprintComparison": {
  "data": {
   "lineno": 135
  },
  "type": "class"
 },
 "e3fp.test.test_fingerprint.TestFingerprintIO": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "e3fp.test.test_fingerprint.TestFingerprintIO.test_basic_properties": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "e3fp.fingerprint.fprint.CountFingerprint",
    "e3fp.fingerprint.fprint.Fingerprint",
    "e3fp.fingerprint.fprint.FloatFingerprint",
    "e3fp.test.test_fingerprint.pytest",
    "float",
    "int",
    "len",
    "numpy.random.randint",
    "numpy.unique",
    "range"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprint.TestFingerprintIO.test_bitstring_io": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "e3fp.fingerprint.fprint.CountFingerprint",
    "e3fp.fingerprint.fprint.Fingerprint",
    "e3fp.fingerprint.fprint.FloatFingerprint"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprint.TestFingerprintIO.test_countfprint_from_counts": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "e3fp.fingerprint.fprint.CountFingerprint.from_counts"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprint.TestFingerprintIO.test_floatfprint_from_counts": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "e3fp.fingerprint.fprint.FloatFingerprint.from_counts"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprint.TestFingerprintIO.test_fprint_from_fprint": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "e3fp.fingerprint.fprint.CountFingerprint",
    "e3fp.fingerprint.fprint.Fingerprint",
    "e3fp.fingerprint.fprint.FloatFingerprint"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprint.TestFingerprintIO.test_fprint_from_indices": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "e3fp.fingerprint.fprint.CountFingerprint",
    "e3fp.fingerprint.fprint.Fingerprint",
    "e3fp.fingerprint.fprint.FloatFingerprint",
    "sorted"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprint.TestFingerprintIO.test_rdkit_io": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "e3fp.fingerprint.fprint.CountFingerprint",
    "e3fp.fingerprint.fprint.Fingerprint",
    "e3fp.fingerprint.fprint.FloatFingerprint"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprint.TestFingerprintIO.test_unique_indices": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "e3fp.fingerprint.fprint.CountFingerprint",
    "e3fp.fingerprint.fprint.Fingerprint",
    "e3fp.fingerprint.fprint.FloatFingerprint",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprint.TestFingerprintIO.test_vector_io": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "e3fp.fingerprint.fprint.CountFingerprint",
    "e3fp.fingerprint.fprint.Fingerprint",
    "e3fp.fingerprint.fprint.FloatFingerprint",
    "numpy.array",
    "numpy.bool_",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprint.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprint.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "e3fp.test.test_fingerprinting.DATA_DIR",
    "e3fp.test.test_fingerprinting.os"
   ]
  },
  "type": "module"
 },
 "e3fp.test.test_fingerprinting.DATA_DIR": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "e3fp.test.test_fingerprinting.ENANT1_SDF_FILE": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "e3fp.test.test_fingerprinting.ENANT2_SDF_FILE": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "e3fp.test.test_fingerprinting.Fingerprinter": {
  "data": {
   "shadows": "e3fp.fingerprint.fprinter.Fingerprinter"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.NONPLANAR_SDF_FILE": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "e3fp.test.test_fingerprinting.RAND_SDF_DIR": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "e3fp.test.test_fingerprinting.Shell": {
  "data": {
   "shadows": "e3fp.fingerprint.structs.Shell"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.ShellsGenerator": {
  "data": {
   "shadows": "e3fp.fingerprint.fprinter.ShellsGenerator"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.TestArrayVector": {
  "data": {
   "lineno": 318
  },
  "type": "class"
 },
 "e3fp.test.test_fingerprinting.TestArrayVector.test_rot_matrix_array_rotation_correct": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "e3fp.fingerprint.array_ops.as_unit",
    "e3fp.fingerprint.array_ops.make_rotation_matrix",
    "numpy.dot",
    "numpy.random.uniform",
    "numpy.testing.assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestArrayVector.test_rot_matrix_vector_rotation_correct": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "e3fp.fingerprint.array_ops.as_unit",
    "e3fp.fingerprint.array_ops.make_rotation_matrix",
    "numpy.dot",
    "numpy.random.uniform",
    "numpy.testing.assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestArrayVector.test_transform_matrix_rotation_only_correct": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "e3fp.fingerprint.array_ops.Y_AXIS.flatten",
    "e3fp.fingerprint.array_ops.as_unit",
    "e3fp.fingerprint.array_ops.make_transform_matrix",
    "e3fp.fingerprint.array_ops.pad_array",
    "e3fp.fingerprint.array_ops.unpad_array",
    "numpy.dot",
    "numpy.float",
    "numpy.random.uniform",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestArrayVector.test_transform_matrix_with_translation_correct": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "e3fp.fingerprint.array_ops.Y_AXIS.flatten",
    "e3fp.fingerprint.array_ops.as_unit",
    "e3fp.fingerprint.array_ops.make_transform_matrix",
    "e3fp.fingerprint.array_ops.pad_array",
    "e3fp.fingerprint.array_ops.unpad_array",
    "numpy.dot",
    "numpy.random.uniform",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestArrayVector.test_two_axis_transform_correct1": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "e3fp.fingerprint.array_ops.Y_AXIS.flatten",
    "e3fp.fingerprint.array_ops.as_unit",
    "e3fp.fingerprint.array_ops.make_transform_matrix",
    "e3fp.fingerprint.array_ops.pad_array",
    "e3fp.fingerprint.array_ops.unpad_array",
    "e3fp.test.test_fingerprinting.pytest",
    "numpy.dot",
    "numpy.random.uniform",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestArrayVector.test_two_axis_transform_correct2": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "e3fp.fingerprint.array_ops.Y_AXIS.flatten",
    "e3fp.fingerprint.array_ops.as_unit",
    "e3fp.fingerprint.array_ops.make_transform_matrix",
    "e3fp.fingerprint.array_ops.transform_array",
    "e3fp.test.test_fingerprinting.pytest",
    "numpy.random.uniform",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestAtomInvariant": {
  "data": {
   "lineno": 929
  },
  "type": "class"
 },
 "e3fp.test.test_fingerprinting.TestAtomInvariant.test_daylight_invariants": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.fprinter.invariants_from_atom",
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE",
    "list"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestAtomInvariant.test_rdkit_invariants": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.fprinter.rdkit_invariants_from_atom",
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE",
    "list"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestFingerprinterCreation": {
  "data": {
   "lineno": 435
  },
  "type": "class"
 },
 "e3fp.test.test_fingerprinting.TestFingerprinterCreation.test_fingerprint_is_transform_invariant": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "AssertionError",
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.array_ops.make_transform_matrix",
    "e3fp.fingerprint.array_ops.transform_array",
    "e3fp.fingerprint.fprinter.Fingerprinter",
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE",
    "e3fp.test.test_fingerprinting.pytest",
    "list",
    "map",
    "numpy.array",
    "numpy.dot",
    "numpy.float",
    "numpy.random.uniform",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestFingerprinterCreation.test_main_parameter_ranges_run_without_fail": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.fprinter",
    "e3fp.fingerprint.fprinter.Fingerprinter",
    "e3fp.fingerprint.fprinter.get_fingerprint_at_level",
    "e3fp.fingerprint.fprinter.run",
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestFingerprinterCreation.test_quick": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.fprinter.Fingerprinter",
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestFingerprinterCreation.test_repeated_runs_produce_same_results": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.fprinter.Fingerprinter",
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestGenerateFingerprint": {
  "data": {
   "lineno": 761
  },
  "type": "class"
 },
 "e3fp.test.test_fingerprinting.TestGenerateFingerprint.test_initial_identifiers_assigned_correctly": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.fprinter.Fingerprinter",
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE",
    "set"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestGenerateFingerprint.test_remove_dupe_substructs_makes_same_substruts_diff_shells": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.fprinter.Fingerprinter",
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE",
    "set"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestGenerateFingerprint.test_reordering_conformers_produces_same_fprints": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.fprinter.Fingerprinter",
    "e3fp.test.test_fingerprinting.RAND_SDF_DIR",
    "e3fp.test.test_fingerprinting.glob",
    "e3fp.test.test_fingerprinting.os",
    "e3fp.test.test_fingerprinting.random",
    "list"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestGenerateFingerprint.test_reordering_mols_produces_same_fprints": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.fprinter.Fingerprinter",
    "e3fp.test.test_fingerprinting.RAND_SDF_DIR",
    "e3fp.test.test_fingerprinting.glob",
    "e3fp.test.test_fingerprinting.random",
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestGenerateFingerprint.test_runs_without_exception_on_random_mols": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.fprinter.Fingerprinter",
    "e3fp.test.test_fingerprinting.RAND_SDF_DIR",
    "e3fp.test.test_fingerprinting.glob",
    "len",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestGenerateFingerprint.test_stereoisomers_produce_equal_fingerprints_nonstereo": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.fprinter.Fingerprinter",
    "e3fp.test.test_fingerprinting.ENANT1_SDF_FILE",
    "e3fp.test.test_fingerprinting.ENANT2_SDF_FILE"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestGenerateFingerprint.test_stereoisomers_produce_nonequal_fingerprints_stereo": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.fprinter.Fingerprinter",
    "e3fp.test.test_fingerprinting.ENANT1_SDF_FILE",
    "e3fp.test.test_fingerprinting.ENANT2_SDF_FILE"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestHashing": {
  "data": {
   "lineno": 540
  },
  "type": "class"
 },
 "e3fp.test.test_fingerprinting.TestHashing.test_hashing_produces_example_result": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "e3fp.fingerprint.fprinter.hash_int64_array",
    "numpy.array",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestHashing.test_hashing_wrong_dtype_fails1": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "TypeError",
    "e3fp.fingerprint.fprinter.hash_int64_array",
    "e3fp.test.test_fingerprinting.pytest",
    "numpy.arange",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestHashing.test_hashing_wrong_dtype_fails2": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "TypeError",
    "e3fp.fingerprint.fprinter.hash_int64_array",
    "e3fp.test.test_fingerprinting.pytest",
    "numpy.arange",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestHashing.test_mmh3_produces_example_result": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "e3fp.test.test_fingerprinting.mmh3"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestShellCreation": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "e3fp.test.test_fingerprinting.TestShellCreation.test_atom_coords_calculated_correctly": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "dict",
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.fprinter.coords_from_atoms",
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE",
    "len",
    "list",
    "numpy.float",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestShellCreation.test_connected_match_atoms_rad0_correct": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.fprinter.ShellsGenerator",
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE",
    "list",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestShellCreation.test_connected_match_atoms_rad1_correct1": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.fprinter.ShellsGenerator",
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE",
    "list",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestShellCreation.test_connected_match_atoms_rad1_correct2": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.fprinter.ShellsGenerator",
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestShellCreation.test_connected_substructs_converge": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.fprinter.ShellsGenerator",
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE",
    "list",
    "next",
    "range",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestShellCreation.test_disconnected_substructs_converge": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.fprinter.ShellsGenerator",
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE",
    "list",
    "next",
    "range"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestShellCreation.test_distance_matrix_calculated_correctly1": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "e3fp.fingerprint.array_ops.make_distance_matrix",
    "numpy.float",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestShellCreation.test_distance_matrix_calculated_correctly2": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "e3fp.fingerprint.array_ops.make_distance_matrix",
    "numpy.array",
    "numpy.eye",
    "numpy.float",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestShellCreation.test_generates_correct_connected_shells_level0": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.fprinter.ShellsGenerator",
    "e3fp.fingerprint.structs.Shell",
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE",
    "list",
    "next",
    "range"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestShellCreation.test_generates_correct_connected_shells_level1": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.fprinter.ShellsGenerator",
    "e3fp.fingerprint.structs.Shell",
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE",
    "list",
    "next",
    "range",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestShellCreation.test_generates_correct_connected_shells_level2": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.fprinter.ShellsGenerator",
    "e3fp.fingerprint.structs.Shell",
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE",
    "list",
    "next",
    "range",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestShellCreation.test_generates_correct_disconnected_shells_level0": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.fprinter.ShellsGenerator",
    "e3fp.fingerprint.structs.Shell",
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE",
    "list",
    "next",
    "range"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestShellCreation.test_generates_correct_disconnected_shells_level1": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.fprinter.ShellsGenerator",
    "e3fp.fingerprint.structs.Shell",
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE",
    "list",
    "next",
    "range"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestShellCreation.test_generates_correct_disconnected_shells_level2": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.fprinter.ShellsGenerator",
    "e3fp.fingerprint.structs.Shell",
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE",
    "list",
    "next",
    "range"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestShellCreation.test_shells_generator_creation_success": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.fprinter.ShellsGenerator",
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestShellCreation.test_shells_generator_next_works_correctly": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.fprinter.ShellsGenerator",
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE",
    "next"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestStereo": {
  "data": {
   "lineno": 564
  },
  "type": "class"
 },
 "e3fp.test.test_fingerprinting.TestStereo.test_all_indicators_correctly_assigned": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "e3fp.fingerprint.fprinter.quad_indicators_from_coords",
    "list",
    "numpy.array",
    "numpy.float",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestStereo.test_empty_tuples_returns_empty": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "e3fp.fingerprint.fprinter.stereo_indicators_from_shell",
    "e3fp.fingerprint.structs.Shell",
    "len",
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestStereo.test_no_neighbors_transform_matrix_is_translate": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "e3fp.fingerprint.fprinter.stereo_indicators_from_shell",
    "e3fp.fingerprint.structs.Shell",
    "numpy.random.uniform",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestStereo.test_no_unique_y_along_poles_correct": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "e3fp.fingerprint.fprinter.stereo_indicators_from_shell",
    "e3fp.fingerprint.structs.Shell"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestStereo.test_no_unique_y_three_evenly_spaced_produces_zeros": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "e3fp.fingerprint.fprinter.stereo_indicators_from_shell",
    "e3fp.fingerprint.structs.Shell"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestStereo.test_no_unique_y_two_evenly_spaced_correct": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "e3fp.fingerprint.fprinter.stereo_indicators_from_shell",
    "e3fp.fingerprint.structs.Shell"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestStereo.test_stereo_indicators_for_frame": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "dict",
    "e3fp.fingerprint.array_ops.make_transform_matrix",
    "e3fp.fingerprint.array_ops.project_to_plane",
    "e3fp.fingerprint.array_ops.transform_array",
    "e3fp.fingerprint.fprinter.stereo_indicators_from_shell",
    "e3fp.fingerprint.structs.Shell",
    "list",
    "numpy.asarray",
    "numpy.float",
    "numpy.linalg.inv",
    "numpy.random.uniform",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.TestStereo.test_stereo_sets_correct_transform_matrix": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "dict",
    "e3fp.fingerprint.array_ops.make_transform_matrix",
    "e3fp.fingerprint.array_ops.project_to_plane",
    "e3fp.fingerprint.array_ops.transform_array",
    "e3fp.fingerprint.fprinter.stereo_indicators_from_shell",
    "e3fp.fingerprint.structs.Shell",
    "list",
    "numpy.asarray",
    "numpy.dot",
    "numpy.float",
    "numpy.identity",
    "numpy.linalg.inv",
    "numpy.random.uniform",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.Y_AXIS": {
  "data": {
   "shadows": "e3fp.fingerprint.array_ops.Y_AXIS"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.as_unit": {
  "data": {
   "shadows": "e3fp.fingerprint.array_ops.as_unit"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.coords_from_atoms": {
  "data": {
   "shadows": "e3fp.fingerprint.fprinter.coords_from_atoms"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.fprinter": {
  "data": {
   "shadows": "e3fp.fingerprint.fprinter"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.hash_int64_array": {
  "data": {
   "shadows": "e3fp.fingerprint.fprinter.hash_int64_array"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.make_distance_matrix": {
  "data": {
   "shadows": "e3fp.fingerprint.array_ops.make_distance_matrix"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.make_rotation_matrix": {
  "data": {
   "shadows": "e3fp.fingerprint.array_ops.make_rotation_matrix"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.make_transform_matrix": {
  "data": {
   "shadows": "e3fp.fingerprint.array_ops.make_transform_matrix"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.mmh3": {
  "data": {
   "shadows": "mmh3"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.mol_from_sdf": {
  "data": {
   "shadows": "e3fp.conformer.util.mol_from_sdf"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.pad_array": {
  "data": {
   "shadows": "e3fp.fingerprint.array_ops.pad_array"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.project_to_plane": {
  "data": {
   "shadows": "e3fp.fingerprint.array_ops.project_to_plane"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.quad_indicators_from_coords": {
  "data": {
   "shadows": "e3fp.fingerprint.fprinter.quad_indicators_from_coords"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.stereo_indicators_from_shell": {
  "data": {
   "shadows": "e3fp.fingerprint.fprinter.stereo_indicators_from_shell"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.transform_array": {
  "data": {
   "shadows": "e3fp.fingerprint.array_ops.transform_array"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.unpad_array": {
  "data": {
   "shadows": "e3fp.fingerprint.array_ops.unpad_array"
  },
  "type": "import"
 },
 "e3fp.test.test_fprint_db": {
  "data": {},
  "type": "module"
 },
 "e3fp.test.test_fprint_db.CountFingerprint": {
  "data": {
   "shadows": "e3fp.fingerprint.fprint.CountFingerprint"
  },
  "type": "import"
 },
 "e3fp.test.test_fprint_db.E3FPEfficiencyWarning": {
  "data": {
   "shadows": "e3fp.util.E3FPEfficiencyWarning"
  },
  "type": "import"
 },
 "e3fp.test.test_fprint_db.E3FPInvalidFingerprintError": {
  "data": {
   "shadows": "e3fp.fingerprint.util.E3FPInvalidFingerprintError"
  },
  "type": "import"
 },
 "e3fp.test.test_fprint_db.Fingerprint": {
  "data": {
   "shadows": "e3fp.fingerprint.fprint.Fingerprint"
  },
  "type": "import"
 },
 "e3fp.test.test_fprint_db.FingerprintDatabase": {
  "data": {
   "shadows": "e3fp.fingerprint.db.FingerprintDatabase"
  },
  "type": "import"
 },
 "e3fp.test.test_fprint_db.TestFingerprintDatabase": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "e3fp.test.test_fprint_db.TestFingerprintDatabase.test_add_fingerprints": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "e3fp.fingerprint.db.FingerprintDatabase",
    "e3fp.fingerprint.fprint.CountFingerprint",
    "e3fp.fingerprint.fprint.CountFingerprint.from_vector",
    "enumerate",
    "int",
    "len",
    "numpy.double",
    "numpy.issubdtype",
    "numpy.random.uniform",
    "numpy.testing.assert_almost_equal",
    "numpy.uint16",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.TestFingerprintDatabase.test_add_fingerprints_two_batches": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "e3fp.fingerprint.db.FingerprintDatabase",
    "e3fp.fingerprint.fprint.CountFingerprint",
    "e3fp.fingerprint.fprint.CountFingerprint.from_vector",
    "enumerate",
    "int",
    "len",
    "numpy.double",
    "numpy.issubdtype",
    "numpy.random.uniform",
    "numpy.testing.assert_almost_equal",
    "numpy.uint16",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.TestFingerprintDatabase.test_concat_dbs": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "e3fp.fingerprint.db.FingerprintDatabase.from_array",
    "e3fp.fingerprint.db.concat",
    "float",
    "numpy.random.uniform",
    "numpy.testing.assert_array_equal",
    "numpy.uint16",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.TestFingerprintDatabase.test_create": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "e3fp.fingerprint.db.FingerprintDatabase",
    "e3fp.fingerprint.fprint.CountFingerprint"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.TestFingerprintDatabase.test_create_from_array": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "e3fp.fingerprint.db.FingerprintDatabase",
    "e3fp.fingerprint.db.FingerprintDatabase.from_array",
    "e3fp.fingerprint.fprint.CountFingerprint",
    "e3fp.fingerprint.fprint.Fingerprint.from_vector",
    "enumerate",
    "numpy.random.uniform",
    "numpy.testing.assert_array_equal",
    "numpy.uint16",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.TestFingerprintDatabase.test_db_equality": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "e3fp.fingerprint.db.FingerprintDatabase",
    "e3fp.fingerprint.fprint.CountFingerprint",
    "e3fp.fingerprint.fprint.Fingerprint.from_vector",
    "enumerate",
    "numpy.random.uniform",
    "numpy.uint16",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.TestFingerprintDatabase.test_duplicate_fprint_names_detected": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "e3fp.fingerprint.db.FingerprintDatabase",
    "e3fp.fingerprint.fprint.CountFingerprint",
    "e3fp.fingerprint.fprint.CountFingerprint.from_vector",
    "enumerate",
    "int",
    "len",
    "numpy.double",
    "numpy.issubdtype",
    "numpy.random.uniform",
    "numpy.testing.assert_almost_equal",
    "numpy.uint16",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.TestFingerprintDatabase.test_fingerprint_has_props": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "e3fp.fingerprint.db.FingerprintDatabase.from_array",
    "enumerate",
    "float",
    "numpy.random.uniform",
    "numpy.uint16",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.TestFingerprintDatabase.test_fold_db": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "e3fp.fingerprint.db.FingerprintDatabase",
    "e3fp.fingerprint.fprint.CountFingerprint",
    "e3fp.fingerprint.fprint.Fingerprint",
    "enumerate",
    "numpy.double",
    "numpy.random.uniform",
    "numpy.testing.assert_array_equal",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.TestFingerprintDatabase.test_get_db_subset": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "e3fp.fingerprint.db.FingerprintDatabase.from_array",
    "numpy.random.uniform",
    "numpy.uint16",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.TestFingerprintDatabase.test_load_efficiency_warning": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "e3fp.fingerprint.db.FingerprintDatabase.from_array",
    "e3fp.test.test_fprint_db.os",
    "e3fp.test.test_fprint_db.pytest",
    "e3fp.test.test_fprint_db.scipy",
    "e3fp.test.test_fprint_db.tempfile",
    "e3fp.test.test_fprint_db.warnings",
    "e3fp.util.E3FPEfficiencyWarning",
    "numpy.random.uniform",
    "numpy.uint16",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.TestFingerprintDatabase.test_lookup": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "e3fp.fingerprint.db.FingerprintDatabase",
    "e3fp.fingerprint.db.FingerprintDatabase.from_array",
    "e3fp.fingerprint.fprint.Fingerprint.from_vector",
    "numpy.bool_",
    "numpy.random.uniform",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.TestFingerprintDatabase.test_roundtrip": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "e3fp.fingerprint.db.FingerprintDatabase.from_array",
    "e3fp.test.test_fprint_db.os",
    "e3fp.test.test_fprint_db.tempfile",
    "list",
    "numpy.random.uniform",
    "numpy.uint16",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.TestFingerprintDatabase.test_roundtrip2": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "e3fp.fingerprint.db.FingerprintDatabase",
    "e3fp.fingerprint.fprint.Fingerprint",
    "e3fp.fingerprint.fprint.Fingerprint.from_indices",
    "e3fp.test.test_fprint_db.os",
    "e3fp.test.test_fprint_db.tempfile",
    "float",
    "list",
    "numpy.random.uniform",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.TestFingerprintDatabase.test_roundtrip_zlib": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "e3fp.fingerprint.db.FingerprintDatabase.from_array",
    "e3fp.test.test_fprint_db.os",
    "e3fp.test.test_fprint_db.tempfile",
    "list",
    "numpy.random.uniform",
    "numpy.uint16",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.TestFingerprintDatabase.test_save_txt": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "e3fp.fingerprint.db.FingerprintDatabase.from_array",
    "e3fp.test.test_fprint_db.os",
    "e3fp.test.test_fprint_db.tempfile",
    "numpy.array",
    "numpy.bool_",
    "python_utilities.io_tools.smart_open"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.TestFingerprintDatabase.test_save_txt_errors": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "e3fp.fingerprint.db.FingerprintDatabase.from_array",
    "e3fp.fingerprint.fprint.CountFingerprint",
    "e3fp.fingerprint.util.E3FPInvalidFingerprintError",
    "e3fp.test.test_fprint_db.os",
    "e3fp.test.test_fprint_db.pytest",
    "e3fp.test.test_fprint_db.tempfile",
    "e3fp.test.test_fprint_db.warnings",
    "e3fp.util.E3FPEfficiencyWarning",
    "numpy.array",
    "numpy.bool_",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.TestFingerprintDatabase.test_update_props": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "e3fp.fingerprint.db.FingerprintDatabase",
    "e3fp.fingerprint.fprint.CountFingerprint",
    "e3fp.fingerprint.fprint.CountFingerprint.from_vector",
    "enumerate",
    "len",
    "list",
    "numpy.double",
    "numpy.random.uniform",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.concat": {
  "data": {
   "shadows": "e3fp.fingerprint.db.concat"
  },
  "type": "import"
 },
 "e3fp.test.test_fprint_db.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "e3fp.test.test_fprint_db.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "e3fp.test.test_fprint_db.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "e3fp.test.test_fprint_db.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "e3fp.test.test_fprint_db.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "e3fp.test.test_fprint_db.smart_open": {
  "data": {
   "shadows": "python_utilities.io_tools.smart_open"
  },
  "type": "import"
 },
 "e3fp.test.test_fprint_db.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "e3fp.test.test_fprint_db.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "e3fp.test.test_metrics": {
  "data": {},
  "type": "module"
 },
 "e3fp.test.test_metrics.TestArrayMetrics": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "e3fp.test.test_metrics.TestArrayMetrics._eval": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "func",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_metrics.TestArrayMetrics.test_cosine": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "e3fp.fingerprint.metrics.array_metrics.cosine",
    "e3fp.test.test_metrics._create_random_sparse",
    "func",
    "numpy.testing.assert_allclose",
    "scipy.spatial.distance.cdist"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_metrics.TestArrayMetrics.test_dice": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "e3fp.fingerprint.metrics.array_metrics.dice",
    "e3fp.test.test_metrics._create_random_sparse",
    "func",
    "numpy.testing.assert_allclose",
    "scipy.spatial.distance.cdist"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_metrics.TestArrayMetrics.test_pearson": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "e3fp.fingerprint.metrics.array_metrics.pearson",
    "e3fp.test.test_metrics._create_random_sparse",
    "func",
    "numpy.testing.assert_allclose",
    "scipy.corrcoef"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_metrics.TestArrayMetrics.test_soergel": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "e3fp.fingerprint.metrics.array_metrics.soergel",
    "e3fp.test.test_metrics._create_random_sparse",
    "func",
    "numpy.diag",
    "numpy.ones",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_metrics.TestArrayMetrics.test_tanimoto": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "e3fp.fingerprint.metrics.array_metrics.tanimoto",
    "e3fp.test.test_metrics._create_random_sparse",
    "func",
    "numpy.diag",
    "numpy.ones",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_metrics.TestArrayMetrics.test_tanimoto_soergel_equal_for_binary": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "e3fp.fingerprint.metrics.array_metrics.soergel",
    "e3fp.fingerprint.metrics.array_metrics.tanimoto",
    "e3fp.test.test_metrics._create_random_sparse",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_metrics.TestFlexibleMetrics": {
  "data": {
   "lineno": 157
  },
  "type": "class"
 },
 "e3fp.test.test_metrics.TestFlexibleMetrics.test_binary_db_vs_db": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "e3fp.fingerprint.db.FingerprintDatabase.from_array",
    "e3fp.fingerprint.fprint.Fingerprint",
    "e3fp.fingerprint.metrics",
    "e3fp.fingerprint.metrics.array_metrics",
    "e3fp.test.test_metrics._create_random_sparse",
    "getattr",
    "numpy.testing.assert_allclose",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_metrics.TestFlexibleMetrics.test_binary_fprint_vs_db": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "e3fp.fingerprint.db.FingerprintDatabase.from_array",
    "e3fp.fingerprint.fprint.Fingerprint",
    "e3fp.fingerprint.fprint.Fingerprint.from_vector",
    "e3fp.fingerprint.metrics",
    "e3fp.fingerprint.metrics.array_metrics",
    "e3fp.test.test_metrics._create_random_sparse",
    "getattr",
    "numpy.testing.assert_allclose",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_metrics.TestFlexibleMetrics.test_binary_fprint_vs_fprint": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "e3fp.fingerprint.fprint.Fingerprint.from_vector",
    "e3fp.fingerprint.metrics",
    "e3fp.fingerprint.metrics.array_metrics",
    "e3fp.fingerprint.metrics.fprint_metrics",
    "e3fp.test.test_metrics._create_random_sparse",
    "e3fp.test.test_metrics.pytest",
    "getattr"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_metrics.TestFlexibleMetrics.test_count_db_vs_db": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "e3fp.fingerprint.db.FingerprintDatabase.from_array",
    "e3fp.fingerprint.fprint.CountFingerprint",
    "e3fp.fingerprint.metrics",
    "e3fp.fingerprint.metrics.array_metrics",
    "e3fp.test.test_metrics._create_random_sparse",
    "getattr",
    "numpy.testing.assert_allclose",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_metrics.TestFlexibleMetrics.test_count_fprint_vs_db": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "e3fp.fingerprint.db.FingerprintDatabase.from_array",
    "e3fp.fingerprint.fprint.CountFingerprint",
    "e3fp.fingerprint.fprint.CountFingerprint.from_vector",
    "e3fp.fingerprint.metrics",
    "e3fp.fingerprint.metrics.array_metrics",
    "e3fp.test.test_metrics._create_random_sparse",
    "getattr",
    "numpy.testing.assert_allclose",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_metrics.TestFlexibleMetrics.test_count_fprint_vs_fprint": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "e3fp.fingerprint.fprint.CountFingerprint.from_vector",
    "e3fp.fingerprint.metrics",
    "e3fp.fingerprint.metrics.array_metrics",
    "e3fp.fingerprint.metrics.fprint_metrics",
    "e3fp.test.test_metrics._create_random_sparse",
    "e3fp.test.test_metrics.pytest",
    "getattr"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_metrics._create_random_sparse": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.double",
    "numpy.random.randint",
    "numpy.random.uniform",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_metrics.array_metrics": {
  "data": {
   "shadows": "e3fp.fingerprint.metrics.array_metrics"
  },
  "type": "import"
 },
 "e3fp.test.test_metrics.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "e3fp.test.test_metrics.corrcoef": {
  "data": {
   "shadows": "scipy.corrcoef"
  },
  "type": "import"
 },
 "e3fp.test.test_metrics.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "e3fp.test.test_metrics.db": {
  "data": {
   "shadows": "e3fp.fingerprint.db"
  },
  "type": "import"
 },
 "e3fp.test.test_metrics.fprint": {
  "data": {
   "shadows": "e3fp.fingerprint.fprint"
  },
  "type": "import"
 },
 "e3fp.test.test_metrics.fprint_metrics": {
  "data": {
   "shadows": "e3fp.fingerprint.metrics.fprint_metrics"
  },
  "type": "import"
 },
 "e3fp.test.test_metrics.metrics": {
  "data": {
   "shadows": "e3fp.fingerprint.metrics"
  },
  "type": "import"
 },
 "e3fp.test.test_metrics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "e3fp.test.test_metrics.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "e3fp.test.test_struct": {
  "data": {
   "symbols_in_volume": [
    "e3fp.test.test_struct.DATA_DIR",
    "e3fp.test.test_struct.os"
   ]
  },
  "type": "module"
 },
 "e3fp.test.test_struct.DATA_DIR": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "e3fp.test.test_struct.FormatError": {
  "data": {
   "shadows": "e3fp.fingerprint.structs.FormatError"
  },
  "type": "import"
 },
 "e3fp.test.test_struct.PLANAR_SDF_FILE": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "e3fp.test.test_struct.Shell": {
  "data": {
   "shadows": "e3fp.fingerprint.structs.Shell"
  },
  "type": "import"
 },
 "e3fp.test.test_struct.Substruct": {
  "data": {
   "shadows": "e3fp.fingerprint.structs.Substruct"
  },
  "type": "import"
 },
 "e3fp.test.test_struct.TestShellComparison": {
  "data": {
   "lineno": 91
  },
  "type": "class"
 },
 "e3fp.test.test_struct.TestShellComparison.test_equal_shells_hash_to_same_value": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.structs.Shell",
    "e3fp.test.test_struct.PLANAR_SDF_FILE",
    "hash",
    "list"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_struct.TestShellComparison.test_same_shell_hashes_to_same_value": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.structs.Shell",
    "e3fp.test.test_struct.PLANAR_SDF_FILE",
    "hash",
    "list"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_struct.TestShellComparison.test_shells_diff_center_same_atoms_nonequal": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.structs.Shell",
    "e3fp.test.test_struct.PLANAR_SDF_FILE",
    "list"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_struct.TestShellComparison.test_shells_same_center_diff_atoms_nonequal": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.structs.Shell",
    "e3fp.test.test_struct.PLANAR_SDF_FILE",
    "list"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_struct.TestShellComparison.test_shells_same_center_same_atoms_equal": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.structs.Shell",
    "e3fp.test.test_struct.PLANAR_SDF_FILE",
    "list"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_struct.TestShellCreation": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "e3fp.test.test_struct.TestShellCreation.test_atoms_converted_to_shells": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.structs.Shell",
    "e3fp.test.test_struct.PLANAR_SDF_FILE",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_struct.TestShellCreation.test_create_shell_no_shell": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.structs.Shell",
    "e3fp.test.test_struct.PLANAR_SDF_FILE",
    "list"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_struct.TestShellCreation.test_create_shell_with_same_center_fails": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.structs.FormatError",
    "e3fp.fingerprint.structs.Shell",
    "e3fp.test.test_struct.PLANAR_SDF_FILE",
    "e3fp.test.test_struct.pytest",
    "list"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_struct.TestShellCreation.test_creation_with_atoms_or_ids_equivalent": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.structs.Shell",
    "e3fp.test.test_struct.PLANAR_SDF_FILE",
    "list"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_struct.TestShellCreation.test_creation_with_atoms_or_shells_equal": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.structs.Shell",
    "e3fp.test.test_struct.PLANAR_SDF_FILE",
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_struct.TestShellCreation.test_error_when_center_not_atom": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "TypeError",
    "e3fp.fingerprint.structs.Shell",
    "e3fp.test.test_struct.pytest"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_struct.TestShellCreation.test_error_when_shells_has_non_shell": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "TypeError",
    "e3fp.fingerprint.structs.Shell",
    "e3fp.test.test_struct.pytest"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_struct.TestShellCreation.test_recursive_atom_shells_correct": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.structs.Shell",
    "e3fp.test.test_struct.PLANAR_SDF_FILE",
    "list"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_struct.TestShellSubstructInterface": {
  "data": {
   "lineno": 146
  },
  "type": "class"
 },
 "e3fp.test.test_struct.TestShellSubstructInterface.test_recursive_shell_substruct_correct1": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.structs.Shell",
    "e3fp.test.test_struct.PLANAR_SDF_FILE",
    "list"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_struct.TestShellSubstructInterface.test_recursive_shell_substruct_correct2": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.structs.Shell",
    "e3fp.test.test_struct.PLANAR_SDF_FILE",
    "list"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_struct.TestShellSubstructInterface.test_shell_creation_from_substruct": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.structs.Shell.from_substruct",
    "e3fp.fingerprint.structs.Substruct",
    "e3fp.test.test_struct.PLANAR_SDF_FILE",
    "list"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_struct.TestShellSubstructInterface.test_shell_creation_from_substruct_without_center_fails": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.structs.FormatError",
    "e3fp.fingerprint.structs.Shell.from_substruct",
    "e3fp.fingerprint.structs.Substruct",
    "e3fp.test.test_struct.PLANAR_SDF_FILE",
    "e3fp.test.test_struct.pytest",
    "list"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_struct.TestShellSubstructInterface.test_substruct_creation_from_shell": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.structs.Shell",
    "e3fp.fingerprint.structs.Substruct.from_shell",
    "e3fp.test.test_struct.PLANAR_SDF_FILE",
    "list"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_struct.TestSubstructCreation": {
  "data": {
   "lineno": 202
  },
  "type": "class"
 },
 "e3fp.test.test_struct.TestSubstructCreation.test_center_atom_auto_added_to_atoms": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.structs.Substruct",
    "e3fp.test.test_struct.PLANAR_SDF_FILE",
    "list"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_struct.TestSubstructCreation.test_error_when_atoms_has_non_atom": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "TypeError",
    "e3fp.fingerprint.structs.Substruct",
    "e3fp.test.test_struct.pytest"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_struct.TestSubstructCreation.test_error_when_center_not_atom": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "TypeError",
    "e3fp.fingerprint.structs.Substruct",
    "e3fp.test.test_struct.pytest"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_struct.TestSubstructCreationComparison": {
  "data": {
   "lineno": 227
  },
  "type": "class"
 },
 "e3fp.test.test_struct.TestSubstructCreationComparison.test_equal_shells_hash_to_same_value": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.structs.Substruct",
    "e3fp.test.test_struct.PLANAR_SDF_FILE",
    "hash",
    "list"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_struct.TestSubstructCreationComparison.test_same_shells_hash_to_same_value": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.structs.Substruct",
    "e3fp.test.test_struct.PLANAR_SDF_FILE",
    "hash",
    "list"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_struct.TestSubstructCreationComparison.test_substructs_diff_center_same_atoms_equal": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.structs.Substruct",
    "e3fp.test.test_struct.PLANAR_SDF_FILE",
    "list"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_struct.TestSubstructCreationComparison.test_substructs_same_center_diff_atoms_nonequal": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.structs.Substruct",
    "e3fp.test.test_struct.PLANAR_SDF_FILE",
    "list"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_struct.TestSubstructCreationComparison.test_substructs_same_center_same_atoms_equal": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "e3fp.conformer.util.mol_from_sdf",
    "e3fp.fingerprint.structs.Substruct",
    "e3fp.test.test_struct.PLANAR_SDF_FILE",
    "list"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_struct.mol_from_sdf": {
  "data": {
   "shadows": "e3fp.conformer.util.mol_from_sdf"
  },
  "type": "import"
 },
 "e3fp.test.test_struct.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "e3fp.test.test_struct.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "e3fp.test.test_util": {
  "data": {},
  "type": "module"
 },
 "e3fp.test.test_util.E3FPDeprecationWarning": {
  "data": {
   "shadows": "e3fp.util.E3FPDeprecationWarning"
  },
  "type": "import"
 },
 "e3fp.test.test_util.E3FPEfficiencyWarning": {
  "data": {
   "shadows": "e3fp.util.E3FPEfficiencyWarning"
  },
  "type": "import"
 },
 "e3fp.test.test_util.TestUtil": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "e3fp.test.test_util.TestUtil.test_deprecated": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "dep_method",
    "dep_method.__doc__",
    "e3fp.test.test_util.warnings",
    "e3fp.util.E3FPDeprecationWarning",
    "issubclass",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_util.TestUtil.test_deprecated.dep_method": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "e3fp.util.deprecated"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_util.TestUtil.test_efficiency_warning": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "e3fp.test.test_util.pytest",
    "e3fp.test.test_util.warnings",
    "e3fp.util.E3FPEfficiencyWarning",
    "test"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_util.TestUtil.test_efficiency_warning.test": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "e3fp.util.E3FPEfficiencyWarning"
   ]
  },
  "type": "function"
 },
 "e3fp.test.test_util.deprecated": {
  "data": {
   "shadows": "e3fp.util.deprecated"
  },
  "type": "import"
 },
 "e3fp.test.test_util.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "e3fp.test.test_util.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "e3fp.util": {
  "data": {
   "symbols_in_volume": [
    "e3fp.util.E3FPWarning",
    "e3fp.util.warnings"
   ]
  },
  "type": "module"
 },
 "e3fp.util.E3FPDeprecationWarning": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "DeprecationWarning",
    "e3fp.util.E3FPWarning"
   ]
  },
  "type": "class"
 },
 "e3fp.util.E3FPEfficiencyWarning": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "RuntimeWarning",
    "e3fp.util.E3FPWarning"
   ]
  },
  "type": "class"
 },
 "e3fp.util.E3FPError": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "e3fp.util.E3FPWarning": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "e3fp.util.deprecated": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "e3fp.util.deprecated.__call__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ValueError",
    "e3fp.util.inspect"
   ]
  },
  "type": "function"
 },
 "e3fp.util.deprecated.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "int",
    "len",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "e3fp.util.deprecated.deprecate_function": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "f.__dict__",
    "f.__doc__",
    "f.__name__"
   ]
  },
  "type": "function"
 },
 "e3fp.util.deprecated.deprecate_function.new_func": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "e3fp.util.E3FPDeprecationWarning",
    "e3fp.util.warnings",
    "f"
   ]
  },
  "type": "function"
 },
 "e3fp.util.deprecated.update_docstring": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "e3fp.util.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "e3fp.util.maybe_jit": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "e3fp.util.maybe_jit.wrapper": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ImportError",
    "e3fp.util.numba"
   ]
  },
  "type": "function"
 },
 "e3fp.util.numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "e3fp.util.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "e3fp.version": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "e3fp.version_info": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 }
}