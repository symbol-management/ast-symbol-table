{
 "typer": {
  "data": {},
  "type": "module"
 },
 "typer.Abort": {
  "data": {
   "shadows": "click.exceptions.Abort"
  },
  "type": "import"
 },
 "typer.BadParameter": {
  "data": {
   "shadows": "click.exceptions.BadParameter"
  },
  "type": "import"
 },
 "typer.Exit": {
  "data": {
   "shadows": "click.exceptions.Exit"
  },
  "type": "import"
 },
 "typer.__version__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "typer.clear": {
  "data": {
   "shadows": "click.termui.clear"
  },
  "type": "import"
 },
 "typer.colors": {
  "data": {},
  "type": "module"
 },
 "typer.colors.BLACK": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "typer.colors.BLUE": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "typer.colors.BRIGHT_BLACK": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "typer.colors.BRIGHT_BLUE": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "typer.colors.BRIGHT_CYAN": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "typer.colors.BRIGHT_GREEN": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "typer.colors.BRIGHT_MAGENTA": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "typer.colors.BRIGHT_RED": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "typer.colors.BRIGHT_WHITE": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "typer.colors.BRIGHT_YELLOW": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "typer.colors.CYAN": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "typer.colors.GREEN": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "typer.colors.MAGENTA": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "typer.colors.RED": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "typer.colors.RESET": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "typer.colors.WHITE": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "typer.colors.YELLOW": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "typer.completion": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "typer.completion.COMPLETION_SCRIPT_BASH",
    "typer.completion.COMPLETION_SCRIPT_FISH",
    "typer.completion.COMPLETION_SCRIPT_POWER_SHELL",
    "typer.completion.COMPLETION_SCRIPT_ZSH"
   ]
  },
  "type": "module"
 },
 "typer.completion.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "typer.completion.COMPLETION_SCRIPT_BASH": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "typer.completion.COMPLETION_SCRIPT_FISH": {
  "data": {
   "lineno": 136
  },
  "type": "constant"
 },
 "typer.completion.COMPLETION_SCRIPT_POWER_SHELL": {
  "data": {
   "lineno": 138
  },
  "type": "constant"
 },
 "typer.completion.COMPLETION_SCRIPT_ZSH": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "typer.completion.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "typer.completion.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "typer.completion.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "typer.completion.Shells": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "enum.Enum",
    "str"
   ]
  },
  "type": "class"
 },
 "typer.completion.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "typer.completion._click_patched": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "typer.completion._completion_scripts": {
  "data": {
   "lineno": 405
  },
  "type": "constant"
 },
 "typer.completion._install_completion_no_auto_placeholder_function": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "Option",
    "typer.completion.Shells",
    "typer.completion.install_callback",
    "typer.completion.show_callback",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "typer.completion._install_completion_placeholder_function": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "Option",
    "bool",
    "typer.completion.install_callback",
    "typer.completion.show_callback",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "typer.completion.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "typer.completion.click._bashcomplete": {
  "data": {
   "shadows": "click._bashcomplete"
  },
  "type": "import"
 },
 "typer.completion.completion_init": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "typer.completion._click_patched",
    "typer.completion.click",
    "typer.completion.handle_shell_complete",
    "typer.completion.os"
   ]
  },
  "type": "function"
 },
 "typer.completion.completion_init.testing_handle_shell_complete": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "bool",
    "str",
    "typer.completion.click",
    "typer.completion.handle_shell_complete",
    "typer.completion.sys"
   ]
  },
  "type": "function"
 },
 "typer.completion.do_bash_complete": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "IndexError",
    "bool",
    "int",
    "str",
    "typer.completion.click",
    "typer.completion.os"
   ]
  },
  "type": "function"
 },
 "typer.completion.do_fish_complete": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "bool",
    "help",
    "str",
    "typer.completion.click",
    "typer.completion.os",
    "typer.completion.re",
    "typer.completion.sys"
   ]
  },
  "type": "function"
 },
 "typer.completion.do_powershell_complete": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "bool",
    "help",
    "str",
    "typer.completion.click",
    "typer.completion.os"
   ]
  },
  "type": "function"
 },
 "typer.completion.do_shell_complete": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "bool",
    "str",
    "typer.completion.click",
    "typer.completion.do_bash_complete",
    "typer.completion.do_fish_complete",
    "typer.completion.do_powershell_complete",
    "typer.completion.do_zsh_complete"
   ]
  },
  "type": "function"
 },
 "typer.completion.do_zsh_complete": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "bool",
    "escape",
    "help",
    "str",
    "typer.completion.click",
    "typer.completion.os"
   ]
  },
  "type": "function"
 },
 "typer.completion.do_zsh_complete.escape": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "typer.completion.get_completion_inspect_parameters": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "completion_init",
    "get_params_from_function",
    "typer.completion.os",
    "typer.completion.shellingham",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "typer.completion.get_completion_script": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "dict",
    "str",
    "typer.completion._completion_scripts",
    "typer.completion.click",
    "typer.completion.sys"
   ]
  },
  "type": "function"
 },
 "typer.completion.handle_shell_complete": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "bool",
    "str",
    "typer.completion.click",
    "typer.completion.do_shell_complete",
    "typer.completion.get_completion_script",
    "typer.completion.sys"
   ]
  },
  "type": "function"
 },
 "typer.completion.install": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "install_bash",
    "install_fish",
    "install_powershell",
    "install_zsh",
    "pathlib.Path",
    "str",
    "typer.completion.click",
    "typer.completion.shellingham",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "typer.completion.install_bash": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "get_completion_script",
    "pathlib.Path",
    "pathlib.Path.home",
    "str"
   ]
  },
  "type": "function"
 },
 "typer.completion.install_callback": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "install",
    "isinstance",
    "str",
    "typer.completion.click",
    "typer.completion.sys",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "typer.completion.install_fish": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "get_completion_script",
    "pathlib.Path",
    "pathlib.Path.home",
    "str"
   ]
  },
  "type": "function"
 },
 "typer.completion.install_powershell": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "bytes",
    "get_completion_script",
    "isinstance",
    "pathlib.Path",
    "str",
    "typer.completion.click",
    "typer.completion.subprocess"
   ]
  },
  "type": "function"
 },
 "typer.completion.install_zsh": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "get_completion_script",
    "pathlib.Path",
    "pathlib.Path.home",
    "str"
   ]
  },
  "type": "function"
 },
 "typer.completion.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "typer.completion.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "typer.completion.shellingham": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "typer.completion.show_callback": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "get_completion_script",
    "isinstance",
    "str",
    "typer.completion.click",
    "typer.completion.shellingham",
    "typer.completion.sys",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "typer.completion.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "typer.completion.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "typer.confirm": {
  "data": {
   "shadows": "click.termui.confirm"
  },
  "type": "import"
 },
 "typer.core": {
  "data": {},
  "type": "module"
 },
 "typer.core.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "typer.core.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "typer.core.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "typer.core.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "typer.core.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "typer.core.TyperArgument": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "typer.core.TyperArgument.__init__": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "bool",
    "help",
    "int",
    "str",
    "super",
    "type",
    "typing.Any",
    "typing.Callable",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "typer.core.TyperArgument.get_help_record": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "help",
    "isinstance",
    "list",
    "str",
    "tuple",
    "typer.core.inspect",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "typer.core.TyperArgument.make_metavar": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "typer.core.TyperCommand": {
  "data": {
   "lineno": 100
  },
  "type": "class"
 },
 "typer.core.TyperCommand.format_options": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "typer.core.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "typer.core.click.core": {
  "data": {
   "shadows": "click.core"
  },
  "type": "import"
 },
 "typer.core.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "typer.echo": {
  "data": {
   "shadows": "click.utils.echo"
  },
  "type": "import"
 },
 "typer.echo_via_pager": {
  "data": {
   "shadows": "click.termui.echo_via_pager"
  },
  "type": "import"
 },
 "typer.edit": {
  "data": {
   "shadows": "click.termui.edit"
  },
  "type": "import"
 },
 "typer.format_filename": {
  "data": {
   "shadows": "click.utils.format_filename"
  },
  "type": "import"
 },
 "typer.get_app_dir": {
  "data": {
   "shadows": "click.utils.get_app_dir"
  },
  "type": "import"
 },
 "typer.get_binary_stream": {
  "data": {
   "shadows": "click.utils.get_binary_stream"
  },
  "type": "import"
 },
 "typer.get_terminal_size": {
  "data": {
   "shadows": "click.termui.get_terminal_size"
  },
  "type": "import"
 },
 "typer.get_text_stream": {
  "data": {
   "shadows": "click.utils.get_text_stream"
  },
  "type": "import"
 },
 "typer.getchar": {
  "data": {
   "shadows": "click.termui.getchar"
  },
  "type": "import"
 },
 "typer.launch": {
  "data": {
   "shadows": "click.termui.launch"
  },
  "type": "import"
 },
 "typer.main": {
  "data": {},
  "type": "module"
 },
 "typer.main.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "typer.main.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "typer.main.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "typer.main.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "typer.main.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "typer.main.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "typer.main.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "typer.main.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "typer.main.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "typer.main.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "typer.main.Typer": {
  "data": {
   "lineno": 41
  },
  "type": "class"
 },
 "typer.main.Typer.__call__": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "get_command",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "typer.main.Typer.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "Default",
    "TyperInfo",
    "bool",
    "help",
    "str",
    "typer.main.click",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "typer.main.Typer.add_typer": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "Default",
    "TyperInfo",
    "bool",
    "help",
    "str",
    "typer.main.click",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "typer.main.Typer.callback": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "Default",
    "bool",
    "str",
    "typer.main.click",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "typer.main.Typer.callback.decorator": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "TyperInfo",
    "help"
   ]
  },
  "type": "function"
 },
 "typer.main.Typer.command": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "bool",
    "str",
    "typer.main.click",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "typer.main.Typer.command.decorator": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "CommandInfo",
    "help"
   ]
  },
  "type": "function"
 },
 "typer.main.UUID": {
  "data": {
   "shadows": "uuid.UUID"
  },
  "type": "import"
 },
 "typer.main.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "typer.main.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "typer.main.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "typer.main.generate_enum_convertor": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "enum.Enum",
    "str",
    "typing.Callable",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "typer.main.generate_enum_convertor.convertor": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "enum",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "typer.main.generate_iter_convertor": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "typer.main.generate_iter_convertor.internal_convertor": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "convertor",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "typer.main.get_callback": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "callback",
    "functools.update_wrapper",
    "get_params_from_function",
    "str",
    "typer.main.click",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "typer.main.get_callback.wrapper": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "callback",
    "typer.main.click",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "typer.main.get_click_param": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "ArgumentInfo",
    "OptionInfo",
    "TyperArgument",
    "bool",
    "convertor",
    "enum.Enum",
    "get_param_callback",
    "get_param_completion",
    "getattr",
    "isinstance",
    "len",
    "pathlib.Path",
    "str",
    "tuple",
    "typer.main.click",
    "typer.main.generate_enum_convertor",
    "typer.main.generate_iter_convertor",
    "typer.main.get_click_type",
    "typer.main.get_command_name",
    "typer.main.lenient_issubclass",
    "typer.main.param_path_convertor",
    "typing.Any",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "typer.main.get_click_type": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "RuntimeError",
    "bool",
    "datetime.datetime",
    "enum.Enum",
    "float",
    "int",
    "lenient_issubclass",
    "pathlib.Path",
    "str",
    "typer.main.click",
    "typing.Any",
    "uuid.UUID"
   ]
  },
  "type": "function"
 },
 "typer.main.get_command": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "get_command_from_info",
    "len",
    "typer.main.Typer",
    "typer.main.click",
    "typer.main.get_group",
    "typer.main.get_install_completion_arguments"
   ]
  },
  "type": "function"
 },
 "typer.main.get_command_from_info": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "CommandInfo",
    "cls",
    "get_callback",
    "typer.main.click",
    "typer.main.get_command_name",
    "typer.main.get_params_convertors_ctx_param_name_from_function",
    "typer.main.inspect"
   ]
  },
  "type": "function"
 },
 "typer.main.get_command_name": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "typer.main.get_group": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "TyperInfo",
    "get_group_from_info",
    "typer.main.Typer",
    "typer.main.click"
   ]
  },
  "type": "function"
 },
 "typer.main.get_group_from_info": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "TyperInfo",
    "cls",
    "get_callback",
    "get_command_from_info",
    "get_params_convertors_ctx_param_name_from_function",
    "str",
    "typer.main.click",
    "typer.main.solve_typer_info_defaults",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "typer.main.get_group_name": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "TyperInfo",
    "get_command_name",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "typer.main.get_install_completion_arguments": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "get_click_param",
    "get_completion_inspect_parameters",
    "typer.main.click",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "typer.main.get_param_callback": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "callback",
    "functools.update_wrapper",
    "get_params_from_function",
    "str",
    "typer.main.click",
    "typer.main.lenient_issubclass",
    "typing.Callable",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "typer.main.get_param_callback.wrapper": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "callback",
    "convertor",
    "str",
    "typer.main.click",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "typer.main.get_param_completion": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "callback",
    "functools.update_wrapper",
    "get_params_from_function",
    "getattr",
    "str",
    "typer.main.click",
    "typer.main.lenient_issubclass",
    "typing.Callable",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "typer.main.get_param_completion.wrapper": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "callback",
    "str",
    "typer.main.click",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "typer.main.get_params_convertors_ctx_param_name_from_function": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "get_click_param",
    "get_params_from_function",
    "lenient_issubclass",
    "str",
    "typer.main.click",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "typer.main.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "typer.main.lenient_issubclass": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "bool",
    "cls",
    "isinstance",
    "issubclass",
    "type",
    "typing.Any",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "typer.main.param_path_convertor": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "pathlib.Path",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "typer.main.run": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "app",
    "typer.main.Typer",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "typer.main.solve_typer_info_defaults": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "AttributeError",
    "TyperInfo",
    "getattr",
    "isinstance",
    "str",
    "typer.main.get_group_name",
    "typer.main.solve_typer_info_help",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "typer.main.solve_typer_info_help": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "AttributeError",
    "TyperInfo",
    "isinstance",
    "str",
    "typer.main.inspect"
   ]
  },
  "type": "function"
 },
 "typer.main.update_wrapper": {
  "data": {
   "shadows": "functools.update_wrapper"
  },
  "type": "import"
 },
 "typer.models": {
  "data": {
   "symbols_in_volume": [
    "type",
    "typing.Any",
    "typing.Callable",
    "typing.TYPE_CHECKING",
    "typing.Type",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "typer.models.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "typer.models.AnyType": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "typer.models.ArgumentInfo": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "typer.models.ParameterInfo"
   ]
  },
  "type": "class"
 },
 "typer.models.ArgumentInfo.__init__": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "float",
    "help",
    "int",
    "max",
    "min",
    "str",
    "super",
    "typing.Any",
    "typing.Callable",
    "typing.List",
    "typing.Optional",
    "typing.Sequence",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "typer.models.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "typer.models.CallbackParam": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "typer.models.click"
   ]
  },
  "type": "class"
 },
 "typer.models.CommandFunctionType": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "typer.models.CommandInfo": {
  "data": {
   "lineno": 83
  },
  "type": "class"
 },
 "typer.models.CommandInfo.__init__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "bool",
    "help",
    "str",
    "typer.models.click",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "typer.models.Context": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "typer.models.click"
   ]
  },
  "type": "class"
 },
 "typer.models.Default": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "typer.models.DefaultPlaceholder",
    "typer.models.DefaultType"
   ]
  },
  "type": "function"
 },
 "typer.models.DefaultPlaceholder": {
  "data": {
   "lineno": 53
  },
  "type": "class"
 },
 "typer.models.DefaultPlaceholder.__bool__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "typer.models.DefaultPlaceholder.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "typer.models.DefaultType": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "typer.models.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "typer.models.FileBinaryRead": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "typer.models.io"
   ]
  },
  "type": "class"
 },
 "typer.models.FileBinaryWrite": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "typer.models.io"
   ]
  },
  "type": "class"
 },
 "typer.models.FileText": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "typer.models.io"
   ]
  },
  "type": "class"
 },
 "typer.models.FileTextWrite": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "typer.models.FileText"
   ]
  },
  "type": "class"
 },
 "typer.models.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "typer.models.NoneType": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "typer.models.OptionInfo": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "typer.models.ParameterInfo"
   ]
  },
  "type": "class"
 },
 "typer.models.OptionInfo.__init__": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "float",
    "help",
    "int",
    "max",
    "min",
    "str",
    "super",
    "typing.Any",
    "typing.Callable",
    "typing.List",
    "typing.Optional",
    "typing.Sequence",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "typer.models.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "typer.models.ParamMeta": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "typer.models.inspect"
   ]
  },
  "type": "class"
 },
 "typer.models.ParamMeta.__init__": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "str",
    "typer.models.inspect",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "typer.models.ParameterInfo": {
  "data": {
   "lineno": 156
  },
  "type": "class"
 },
 "typer.models.ParameterInfo.__init__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "float",
    "help",
    "int",
    "max",
    "min",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.List",
    "typing.Optional",
    "typing.Sequence",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "typer.models.Required": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "typer.models.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "typer.models.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "typer.models.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "typer.models.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "typer.models.TyperInfo": {
  "data": {
   "lineno": 114
  },
  "type": "class"
 },
 "typer.models.TyperInfo.__init__": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "bool",
    "help",
    "str",
    "typer.models.Default",
    "typer.models.click",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "typer.models.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "typer.models.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "typer.models.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "typer.models.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "typer.open_file": {
  "data": {
   "shadows": "click.utils.open_file"
  },
  "type": "import"
 },
 "typer.params": {
  "data": {},
  "type": "module"
 },
 "typer.params.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "typer.params.Argument": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ArgumentInfo",
    "bool",
    "bytes",
    "float",
    "help",
    "int",
    "max",
    "min",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.List",
    "typing.Optional",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "typer.params.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "typer.params.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "typer.params.Option": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "OptionInfo",
    "bool",
    "bytes",
    "float",
    "help",
    "int",
    "max",
    "min",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.List",
    "typing.Optional",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "typer.params.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "typer.params.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "typer.params.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "typer.pause": {
  "data": {
   "shadows": "click.termui.pause"
  },
  "type": "import"
 },
 "typer.progressbar": {
  "data": {
   "shadows": "click.termui.progressbar"
  },
  "type": "import"
 },
 "typer.prompt": {
  "data": {
   "shadows": "click.termui.prompt"
  },
  "type": "import"
 },
 "typer.secho": {
  "data": {
   "shadows": "click.termui.secho"
  },
  "type": "import"
 },
 "typer.style": {
  "data": {
   "shadows": "click.termui.style"
  },
  "type": "import"
 },
 "typer.testing": {
  "data": {},
  "type": "module"
 },
 "typer.testing.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "typer.testing.CliRunner": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "click.testing.CliRunner"
   ]
  },
  "type": "class"
 },
 "typer.testing.CliRunner.invoke": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "click.testing.Result",
    "input",
    "str",
    "super",
    "typer.main.Typer",
    "typer.main.get_command",
    "typing.Any",
    "typing.IO",
    "typing.Iterable",
    "typing.Mapping",
    "typing.Optional",
    "typing.Text",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "typer.testing.ClickCliRunner": {
  "data": {
   "shadows": "click.testing.CliRunner"
  },
  "type": "import"
 },
 "typer.testing.IO": {
  "data": {
   "shadows": "typing.IO"
  },
  "type": "import"
 },
 "typer.testing.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "typer.testing.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "typer.testing.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "typer.testing.Result": {
  "data": {
   "shadows": "click.testing.Result"
  },
  "type": "import"
 },
 "typer.testing.Text": {
  "data": {
   "shadows": "typing.Text"
  },
  "type": "import"
 },
 "typer.testing.Typer": {
  "data": {
   "shadows": "typer.main.Typer"
  },
  "type": "import"
 },
 "typer.testing.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "typer.testing._get_command": {
  "data": {
   "shadows": "typer.main.get_command"
  },
  "type": "import"
 },
 "typer.unstyle": {
  "data": {
   "shadows": "click.termui.unstyle"
  },
  "type": "import"
 },
 "typer.utils": {
  "data": {},
  "type": "module"
 },
 "typer.utils.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "typer.utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "typer.utils.get_params_from_function": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ParamMeta",
    "str",
    "typer.utils.inspect",
    "typing.Callable",
    "typing.Dict",
    "typing.get_type_hints"
   ]
  },
  "type": "function"
 },
 "typer.utils.get_type_hints": {
  "data": {
   "shadows": "typing.get_type_hints"
  },
  "type": "import"
 },
 "typer.utils.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 }
}