{
 "pypsa": {
  "data": {},
  "type": "module"
 },
 "pypsa.__author__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pypsa.__copyright__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pypsa.__version__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pypsa.components": {
  "data": {
   "symbols_in_volume": [
    "Dict",
    "__name__",
    "collections.namedtuple",
    "float",
    "pandas.read_csv",
    "pypsa.components.component_attrs",
    "pypsa.components.component_attrs_dir_name",
    "pypsa.components.components",
    "pypsa.components.dir_name",
    "pypsa.components.file_name",
    "pypsa.components.logging",
    "pypsa.components.os",
    "pypsa.components.sys"
   ]
  },
  "type": "module"
 },
 "pypsa.components.Basic": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pypsa.components.Basic.__init__": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "pypsa.components.Basic.__repr__": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "pypsa.components.Common": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "pypsa.components.Basic"
   ]
  },
  "type": "class"
 },
 "pypsa.components.Common.__init__": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "pypsa.components.Basic",
    "weakref.ref"
   ]
  },
  "type": "function"
 },
 "pypsa.components.Common.network": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pypsa.components.Component": {
  "data": {
   "lineno": 121
  },
  "type": "constant"
 },
 "pypsa.components.Network": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "pypsa.components.Basic"
   ]
  },
  "type": "class"
 },
 "pypsa.components.Network.__getitem__": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "isinstance",
    "pandas.DataFrame",
    "setattr",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pypsa.components.Network.__init__": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "Dict",
    "bool",
    "float",
    "int",
    "isinstance",
    "numpy.dtype",
    "numpy.nan",
    "pandas.Index",
    "pandas.Series",
    "pypsa.components.Basic",
    "pypsa.components.component_attrs",
    "pypsa.components.components",
    "pypsa.components.logger",
    "pypsa.components.logging",
    "set",
    "setattr",
    "six.iteritems",
    "str",
    "str.replace"
   ]
  },
  "type": "function"
 },
 "pypsa.components.Network._build_dataframes": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "Dict",
    "float",
    "numpy.dtype",
    "pandas.DataFrame",
    "pandas.Series",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pypsa.components.Network._retrieve_overridden_components": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "Dict",
    "list",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pypsa.components.Network.add": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.Series",
    "pypsa.components.logger",
    "setattr",
    "six.iteritems",
    "str",
    "typ"
   ]
  },
  "type": "function"
 },
 "pypsa.components.Network.branches": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "pypsa.components.Network.consistency_check": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "get_switchable_as_dense",
    "getattr",
    "len",
    "numpy.isinf",
    "pypsa.components.logger",
    "typ"
   ]
  },
  "type": "function"
 },
 "pypsa.components.Network.consistency_check.bad_by_type": {
  "data": {
   "lineno": 990
  },
  "type": "function"
 },
 "pypsa.components.Network.controllable_branches": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": [
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "pypsa.components.Network.copy": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "getattr",
    "import_components_from_dataframe",
    "setattr",
    "six.iterkeys",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pypsa.components.Network.determine_network_topology": {
  "data": {
   "lineno": 906,
   "symbols_in_volume": [
    "find_cycles",
    "len",
    "numpy.arange",
    "pypsa.components.SubNetwork",
    "pypsa.components.logger",
    "scipy.sparse.csgraph.connected_components",
    "str"
   ]
  },
  "type": "function"
 },
 "pypsa.components.Network.df": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pypsa.components.Network.iterate_components": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "pypsa.components.Component",
    "pypsa.components.components"
   ]
  },
  "type": "function"
 },
 "pypsa.components.Network.lopf": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "network_lopf",
    "pypsa.components.logger"
   ]
  },
  "type": "function"
 },
 "pypsa.components.Network.madd": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pypsa.components.logger",
    "six.iteritems",
    "str"
   ]
  },
  "type": "function"
 },
 "pypsa.components.Network.mremove": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Index",
    "pypsa.components.logger",
    "six.itervalues"
   ]
  },
  "type": "function"
 },
 "pypsa.components.Network.passive_branches": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "pypsa.components.Network.pnl": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pypsa.components.Network.read_in_default_standard_types": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "pandas.read_csv",
    "pypsa.components.dir_name",
    "pypsa.components.file_name",
    "pypsa.components.os",
    "pypsa.components.standard_types_dir_name"
   ]
  },
  "type": "function"
 },
 "pypsa.components.Network.remove": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "pypsa.components.logger",
    "six.itervalues"
   ]
  },
  "type": "function"
 },
 "pypsa.components.Network.set_snapshots": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pypsa.components.SubNetwork": {
  "data": {
   "lineno": 1119,
   "symbols_in_volume": [
    "pypsa.components.Common"
   ]
  },
  "type": "class"
 },
 "pypsa.components.SubNetwork.branches": {
  "data": {
   "lineno": 1169
  },
  "type": "function"
 },
 "pypsa.components.SubNetwork.branches_i": {
  "data": {
   "lineno": 1161,
   "symbols_in_volume": [
    "len",
    "list",
    "pandas.MultiIndex.from_arrays"
   ]
  },
  "type": "function"
 },
 "pypsa.components.SubNetwork.buses": {
  "data": {
   "lineno": 1194
  },
  "type": "function"
 },
 "pypsa.components.SubNetwork.buses_i": {
  "data": {
   "lineno": 1152
  },
  "type": "function"
 },
 "pypsa.components.SubNetwork.generators": {
  "data": {
   "lineno": 1197
  },
  "type": "function"
 },
 "pypsa.components.SubNetwork.generators_i": {
  "data": {
   "lineno": 1173
  },
  "type": "function"
 },
 "pypsa.components.SubNetwork.iterate_components": {
  "data": {
   "lineno": 1209,
   "symbols_in_volume": [
    "getattr",
    "len",
    "pypsa.components.Component",
    "pypsa.components.components"
   ]
  },
  "type": "function"
 },
 "pypsa.components.SubNetwork.lines_i": {
  "data": {
   "lineno": 1155
  },
  "type": "function"
 },
 "pypsa.components.SubNetwork.loads": {
  "data": {
   "lineno": 1200
  },
  "type": "function"
 },
 "pypsa.components.SubNetwork.loads_i": {
  "data": {
   "lineno": 1177
  },
  "type": "function"
 },
 "pypsa.components.SubNetwork.shunt_impedances": {
  "data": {
   "lineno": 1203
  },
  "type": "function"
 },
 "pypsa.components.SubNetwork.shunt_impedances_i": {
  "data": {
   "lineno": 1181
  },
  "type": "function"
 },
 "pypsa.components.SubNetwork.storage_units": {
  "data": {
   "lineno": 1206
  },
  "type": "function"
 },
 "pypsa.components.SubNetwork.storage_units_i": {
  "data": {
   "lineno": 1185
  },
  "type": "function"
 },
 "pypsa.components.SubNetwork.stores_i": {
  "data": {
   "lineno": 1189
  },
  "type": "function"
 },
 "pypsa.components.SubNetwork.transformers_i": {
  "data": {
   "lineno": 1158
  },
  "type": "function"
 },
 "pypsa.components.__author__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pypsa.components.__copyright__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pypsa.components.component_attrs": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "pypsa.components.component_attrs_dir_name": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "pypsa.components.components": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "pypsa.components.csgraph": {
  "data": {
   "shadows": "scipy.sparse.csgraph"
  },
  "type": "import"
 },
 "pypsa.components.dir_name": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "pypsa.components.file_name": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "pypsa.components.inf": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "pypsa.components.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "pypsa.components.iterkeys": {
  "data": {
   "shadows": "six.iterkeys"
  },
  "type": "import"
 },
 "pypsa.components.itervalues": {
  "data": {
   "shadows": "six.itervalues"
  },
  "type": "import"
 },
 "pypsa.components.logger": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "pypsa.components.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pypsa.components.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pypsa.components.network_lopf_lowmem": {
  "data": {
   "shadows": "network_lopf"
  },
  "type": "import"
 },
 "pypsa.components.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pypsa.components.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pypsa.components.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pypsa.components.pypsa_version": {
  "data": {
   "shadows": "__version__"
  },
  "type": "import"
 },
 "pypsa.components.ref": {
  "data": {
   "shadows": "weakref.ref"
  },
  "type": "import"
 },
 "pypsa.components.standard_types_dir_name": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "pypsa.components.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pypsa.contingency": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pypsa.contingency.logging"
   ]
  },
  "type": "module"
 },
 "pypsa.contingency.__author__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pypsa.contingency.__copyright__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pypsa.contingency.add_contingency_constraints": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "l_constraint",
    "pypsa.contingency.logger",
    "range",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pypsa.contingency.add_contingency_constraints_lowmem": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "get_extendable_i",
    "get_var",
    "hasattr",
    "isinstance",
    "len",
    "linexpr",
    "numpy.float64",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.concat",
    "set",
    "set_conref",
    "tuple",
    "write_constraint"
   ]
  },
  "type": "function"
 },
 "pypsa.contingency.add_contingency_constraints_lowmem.contingency_flow": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "linexpr"
   ]
  },
  "type": "function"
 },
 "pypsa.contingency.calculate_BODF": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "calculate_PTDF",
    "numpy.diag",
    "numpy.fill_diagonal",
    "numpy.r_",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "pypsa.contingency.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pypsa.contingency.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "pypsa.contingency.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pypsa.contingency.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "pypsa.contingency.logger": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pypsa.contingency.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pypsa.contingency.network_lpf_contingency": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series",
    "pypsa.contingency.collections",
    "pypsa.contingency.logger",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pypsa.contingency.network_sclopf": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "_as_snapshots"
   ]
  },
  "type": "function"
 },
 "pypsa.contingency.network_sclopf._extra_functionality": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "extra_functionality",
    "pypsa.contingency.add_contingency_constraints",
    "pypsa.contingency.add_contingency_constraints_lowmem"
   ]
  },
  "type": "function"
 },
 "pypsa.contingency.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pypsa.contingency.ones": {
  "data": {
   "shadows": "numpy.ones"
  },
  "type": "import"
 },
 "pypsa.contingency.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pypsa.contingency.r_": {
  "data": {
   "shadows": "numpy.r_"
  },
  "type": "import"
 },
 "pypsa.contingency.shstack": {
  "data": {
   "shadows": "scipy.sparse.hstack"
  },
  "type": "import"
 },
 "pypsa.contingency.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "pypsa.descriptors": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "__name__",
    "distutils.version.LooseVersion",
    "distutils.version.StrictVersion",
    "networkx.__version__",
    "pypsa.descriptors._nx_version",
    "pypsa.descriptors.logging"
   ]
  },
  "type": "module"
 },
 "pypsa.descriptors.Dict": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "dict",
    "pypsa.descriptors.re"
   ]
  },
  "type": "class"
 },
 "pypsa.descriptors.Dict.__delattr__": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "pypsa.descriptors.Dict.__dir__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "dir",
    "isinstance",
    "list",
    "pypsa.descriptors.Dict",
    "str"
   ]
  },
  "type": "function"
 },
 "pypsa.descriptors.Dict.__getattr__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError"
   ]
  },
  "type": "function"
 },
 "pypsa.descriptors.Dict.__setattr__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr",
    "pypsa.descriptors.Dict"
   ]
  },
  "type": "function"
 },
 "pypsa.descriptors.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pypsa.descriptors.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pypsa.descriptors.OrderedGraph": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "networkx.MultiGraph"
   ]
  },
  "type": "class"
 },
 "pypsa.descriptors.OrderedGraph.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "isinstance",
    "ndf",
    "networkx.NetworkXError",
    "networkx.convert.from_dict_of_dicts",
    "networkx.convert.to_networkx_graph",
    "pypsa.descriptors.OrderedGraph"
   ]
  },
  "type": "function"
 },
 "pypsa.descriptors.StrictVersion": {
  "data": {
   "shadows": "distutils.version.StrictVersion"
  },
  "type": "import"
 },
 "pypsa.descriptors.__author__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pypsa.descriptors.__copyright__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pypsa.descriptors._nx_version": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pypsa.descriptors.additional_linkports": {
  "data": {
   "lineno": 362
  },
  "type": "function"
 },
 "pypsa.descriptors.allocate_series_dataframes": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "pypsa.descriptors.degree": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "pypsa.descriptors.expand_series": {
  "data": {
   "lineno": 303
  },
  "type": "function"
 },
 "pypsa.descriptors.free_output_series_dataframes": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pypsa.descriptors.get_bounds_pu": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pypsa.descriptors.expand_series",
    "pypsa.descriptors.get_switchable_as_dense",
    "pypsa.descriptors.nominal_attrs",
    "slice"
   ]
  },
  "type": "function"
 },
 "pypsa.descriptors.get_extendable_i": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "pypsa.descriptors.nominal_attrs"
   ]
  },
  "type": "function"
 },
 "pypsa.descriptors.get_non_extendable_i": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "pypsa.descriptors.nominal_attrs"
   ]
  },
  "type": "function"
 },
 "pypsa.descriptors.get_switchable_as_dense": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "len",
    "numpy.repeat",
    "pandas.DataFrame",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "pypsa.descriptors.get_switchable_as_iter": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "is_same_indices",
    "itertools.repeat",
    "len",
    "pandas.Index",
    "reindex_maybe"
   ]
  },
  "type": "function"
 },
 "pypsa.descriptors.get_switchable_as_iter.is_same_indices": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pypsa.descriptors.get_switchable_as_iter.reindex_maybe": {
  "data": {
   "lineno": 237
  },
  "type": "function"
 },
 "pypsa.descriptors.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "pypsa.descriptors.logger": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pypsa.descriptors.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pypsa.descriptors.nominal_attrs": {
  "data": {
   "lineno": 296
  },
  "type": "constant"
 },
 "pypsa.descriptors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pypsa.descriptors.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "pypsa.descriptors.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pypsa.descriptors.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pypsa.descriptors.repeat": {
  "data": {
   "shadows": "itertools.repeat"
  },
  "type": "import"
 },
 "pypsa.descriptors.zsum": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "pypsa.geo": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pypsa.geo.logging"
   ]
  },
  "type": "module"
 },
 "pypsa.geo.__author__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pypsa.geo.__copyright__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pypsa.geo.area_from_lon_lat_poly": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "functools.partial",
    "pypsa.geo.pyproj",
    "shapely.ops.transform"
   ]
  },
  "type": "function"
 },
 "pypsa.geo.haversine": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ensure_dimensions",
    "numpy.newaxis",
    "pypsa.geo.haversine_pts"
   ]
  },
  "type": "function"
 },
 "pypsa.geo.haversine.ensure_dimensions": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "pypsa.geo.haversine_pts": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "float",
    "numpy.arctan2",
    "numpy.asarray",
    "numpy.cos",
    "numpy.deg2rad",
    "numpy.sin",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "pypsa.geo.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pypsa.geo.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pypsa.geo.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pypsa.geo.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "pypsa.geo.pyproj": {
  "data": {
   "shadows": "pyproj"
  },
  "type": "import"
 },
 "pypsa.geo.transform": {
  "data": {
   "shadows": "shapely.ops.transform"
  },
  "type": "import"
 },
 "pypsa.graph": {
  "data": {},
  "type": "module"
 },
 "pypsa.graph.adjacency_matrix": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "len",
    "numpy.concatenate",
    "numpy.ones",
    "scipy.sparse.coo_matrix",
    "slice"
   ]
  },
  "type": "function"
 },
 "pypsa.graph.graph": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "OrderedGraph",
    "TypeError",
    "gen_edges",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pypsa.graph.graph.gen_edges": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "numpy.isinf",
    "slice"
   ]
  },
  "type": "function"
 },
 "pypsa.graph.incidence_matrix": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "len",
    "numpy.concatenate",
    "numpy.ones",
    "numpy.r_",
    "scipy.sparse.csr_matrix",
    "slice"
   ]
  },
  "type": "function"
 },
 "pypsa.graph.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pypsa.graph.sp": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "pypsa.linopf": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.read_csv",
    "pypsa.linopf.logging",
    "pypsa.linopf.os"
   ]
  },
  "type": "module"
 },
 "pypsa.linopf.assign_solution": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "Dict",
    "additional_linkports",
    "get_con",
    "isinstance",
    "len",
    "list",
    "map_dual",
    "map_solution",
    "pandas.DataFrame",
    "pandas.concat",
    "pypsa.linopf.lookup",
    "set_from_frame",
    "sign",
    "v_ang_for_"
   ]
  },
  "type": "function"
 },
 "pypsa.linopf.assign_solution.map_dual": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "Dict",
    "get_con",
    "isinstance",
    "pandas.DataFrame",
    "set_from_frame"
   ]
  },
  "type": "function"
 },
 "pypsa.linopf.assign_solution.map_solution": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "Dict",
    "additional_linkports",
    "get_var",
    "isinstance",
    "pandas.DataFrame",
    "pypsa.linopf.lookup",
    "set_from_frame"
   ]
  },
  "type": "function"
 },
 "pypsa.linopf.assign_solution.set_from_frame": {
  "data": {
   "lineno": 671
  },
  "type": "function"
 },
 "pypsa.linopf.assign_solution.v_ang_for_": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "len",
    "numpy.linalg.pinv",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pypsa.linopf.define_committable_generator_constraints": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "define_constraints",
    "get_bounds_pu",
    "get_var",
    "linexpr"
   ]
  },
  "type": "function"
 },
 "pypsa.linopf.define_dispatch_for_extendable_and_committable_variables": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "define_variables",
    "get_extendable_i",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "pypsa.linopf.define_dispatch_for_extendable_constraints": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "define_constraints",
    "get_bounds_pu",
    "get_extendable_i",
    "get_var",
    "linexpr"
   ]
  },
  "type": "function"
 },
 "pypsa.linopf.define_dispatch_for_non_extendable_variables": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "define_constraints",
    "define_variables",
    "get_bounds_pu",
    "get_non_extendable_i",
    "linexpr",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "pypsa.linopf.define_fixed_variable_constraints": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "get_var",
    "linexpr",
    "set_conref",
    "write_constraint"
   ]
  },
  "type": "function"
 },
 "pypsa.linopf.define_generator_status_variables": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "define_binaries",
    "get_extendable_i",
    "pypsa.linopf.logger"
   ]
  },
  "type": "function"
 },
 "pypsa.linopf.define_global_constraints": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "get_var",
    "join_exprs",
    "len",
    "linexpr",
    "pandas.Index",
    "pypsa.linopf.re",
    "set_conref",
    "substr",
    "write_constraint"
   ]
  },
  "type": "function"
 },
 "pypsa.linopf.define_kirchhoff_constraints": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "get_var",
    "len",
    "pandas.DataFrame",
    "pandas.concat",
    "set",
    "set_conref",
    "write_constraint"
   ]
  },
  "type": "function"
 },
 "pypsa.linopf.define_kirchhoff_constraints.cycle_flow": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "linexpr"
   ]
  },
  "type": "function"
 },
 "pypsa.linopf.define_nodal_balance_constraints": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "additional_linkports",
    "bus_injection",
    "define_constraints",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "pypsa.linopf.define_nodal_balance_constraints.bus_injection": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "get_var",
    "linexpr"
   ]
  },
  "type": "function"
 },
 "pypsa.linopf.define_nominal_for_extendable_variables": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "define_variables",
    "get_extendable_i"
   ]
  },
  "type": "function"
 },
 "pypsa.linopf.define_objective": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "get_extendable_i",
    "get_var",
    "linexpr",
    "pypsa.linopf.lookup",
    "write_bound",
    "write_objective"
   ]
  },
  "type": "function"
 },
 "pypsa.linopf.define_ramp_limit_constraints": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "define_constraints",
    "get_extendable_i",
    "get_non_extendable_i",
    "get_var",
    "linexpr"
   ]
  },
  "type": "function"
 },
 "pypsa.linopf.define_storage_unit_constraints": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "define_constraints",
    "expand_series",
    "get_var",
    "linexpr",
    "masked_term",
    "set_varref",
    "write_bound"
   ]
  },
  "type": "function"
 },
 "pypsa.linopf.define_storage_unit_constraints.masked_term": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "linexpr"
   ]
  },
  "type": "function"
 },
 "pypsa.linopf.define_store_constraints": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "define_constraints",
    "expand_series",
    "get_var",
    "linexpr",
    "masked_term",
    "numpy.inf",
    "pandas.DataFrame",
    "set_varref",
    "write_bound"
   ]
  },
  "type": "function"
 },
 "pypsa.linopf.define_store_constraints.masked_term": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "linexpr"
   ]
  },
  "type": "function"
 },
 "pypsa.linopf.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pypsa.linopf.get_as_dense": {
  "data": {
   "shadows": "get_switchable_as_dense"
  },
  "type": "import"
 },
 "pypsa.linopf.ilopf": {
  "data": {
   "lineno": 946,
   "symbols_in_volume": [
    "bool",
    "get_extendable_i",
    "msq_diff",
    "numpy.sqrt",
    "pandas.Series",
    "pypsa.linopf.logger",
    "pypsa.linopf.network_lopf",
    "save_optimal_capacities",
    "update_line_params"
   ]
  },
  "type": "function"
 },
 "pypsa.linopf.ilopf.msq_diff": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": [
    "numpy.sqrt",
    "pypsa.linopf.logger"
   ]
  },
  "type": "function"
 },
 "pypsa.linopf.ilopf.save_optimal_capacities": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "pandas.Series",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pypsa.linopf.ilopf.update_line_params": {
  "data": {
   "lineno": 989
  },
  "type": "function"
 },
 "pypsa.linopf.inf": {
  "data": {
   "shadows": "numpy.inf"
  },
  "type": "import"
 },
 "pypsa.linopf.logger": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pypsa.linopf.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pypsa.linopf.lookup": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pypsa.linopf.mkstemp": {
  "data": {
   "shadows": "tempfile.mkstemp"
  },
  "type": "import"
 },
 "pypsa.linopf.network_lopf": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "NotImplementedError",
    "_as_snapshots",
    "eval",
    "extra_functionality",
    "pypsa.linopf.assign_solution",
    "pypsa.linopf.gc",
    "pypsa.linopf.logger",
    "pypsa.linopf.os",
    "pypsa.linopf.prepare_lopf",
    "solve",
    "tempfile.mkstemp"
   ]
  },
  "type": "function"
 },
 "pypsa.linopf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pypsa.linopf.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pypsa.linopf.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pypsa.linopf.prepare_lopf": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "Dict",
    "align_with_static_component",
    "delattr",
    "dict",
    "extra_functionality",
    "getattr",
    "open",
    "pandas.DataFrame",
    "pypsa.linopf.define_committable_generator_constraints",
    "pypsa.linopf.define_dispatch_for_extendable_and_committable_variables",
    "pypsa.linopf.define_dispatch_for_extendable_constraints",
    "pypsa.linopf.define_dispatch_for_non_extendable_variables",
    "pypsa.linopf.define_fixed_variable_constraints",
    "pypsa.linopf.define_generator_status_variables",
    "pypsa.linopf.define_global_constraints",
    "pypsa.linopf.define_kirchhoff_constraints",
    "pypsa.linopf.define_nodal_balance_constraints",
    "pypsa.linopf.define_nominal_for_extendable_variables",
    "pypsa.linopf.define_objective",
    "pypsa.linopf.define_ramp_limit_constraints",
    "pypsa.linopf.define_storage_unit_constraints",
    "pypsa.linopf.define_store_constraints",
    "pypsa.linopf.logger",
    "pypsa.linopf.lookup",
    "pypsa.linopf.os",
    "pypsa.linopf.shutil",
    "pypsa.linopf.time",
    "round",
    "tempfile.mkstemp"
   ]
  },
  "type": "function"
 },
 "pypsa.linopf.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pypsa.linopf.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pypsa.linopf.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pypsa.networkclustering": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "collections.namedtuple",
    "pypsa.networkclustering.logging"
   ]
  },
  "type": "module"
 },
 "pypsa.networkclustering.Clustering": {
  "data": {
   "lineno": 231
  },
  "type": "constant"
 },
 "pypsa.networkclustering.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "pypsa.networkclustering.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pypsa.networkclustering.__author__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pypsa.networkclustering.__copyright__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pypsa.networkclustering._flatten_multiindex": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "next",
    "six.moves.map",
    "six.moves.range",
    "six.moves.reduce"
   ]
  },
  "type": "function"
 },
 "pypsa.networkclustering._make_consense": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "pypsa.networkclustering._make_consense.consense": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "pypsa.networkclustering._normed": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "pypsa.networkclustering.aggregatebuses": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "dict",
    "numpy.max",
    "numpy.mean",
    "numpy.min",
    "pypsa.networkclustering._make_consense",
    "set"
   ]
  },
  "type": "function"
 },
 "pypsa.networkclustering.aggregategenerators": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "dict",
    "numpy.min",
    "numpy.sum",
    "pandas.concat",
    "pypsa.networkclustering._flatten_multiindex",
    "pypsa.networkclustering._make_consense",
    "set",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "pypsa.networkclustering.aggregategenerators.normed_or_uniform": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "len",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pypsa.networkclustering.aggregatelines": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "len",
    "pandas.concat",
    "pypsa.networkclustering._make_consense",
    "set",
    "six.moves.range",
    "str"
   ]
  },
  "type": "function"
 },
 "pypsa.networkclustering.aggregatelines.aggregatelinegroup": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "dict",
    "haversine_pts",
    "list",
    "numpy.asarray",
    "pandas.Series",
    "pypsa.networkclustering._normed"
   ]
  },
  "type": "function"
 },
 "pypsa.networkclustering.aggregateoneport": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "numpy.sum",
    "pypsa.networkclustering._flatten_multiindex",
    "pypsa.networkclustering._make_consense",
    "set",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "pypsa.networkclustering.aggregateoneport.aggregate_max_hours": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "pypsa.networkclustering._normed"
   ]
  },
  "type": "function"
 },
 "pypsa.networkclustering.busmap_by_kmeans": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "ModuleNotFoundError",
    "importlib.util.find_spec",
    "int",
    "pandas.Series",
    "sklearn.cluster.KMeans",
    "str"
   ]
  },
  "type": "function"
 },
 "pypsa.networkclustering.busmap_by_length": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "pypsa.networkclustering.busmap_by_linemask"
   ]
  },
  "type": "function"
 },
 "pypsa.networkclustering.busmap_by_linemask": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "enumerate",
    "networkx.OrderedGraph",
    "networkx.connected_components",
    "pandas.Series",
    "str"
   ]
  },
  "type": "function"
 },
 "pypsa.networkclustering.busmap_by_louvain": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "ModuleNotFoundError",
    "dict",
    "importlib.util.find_spec",
    "networkx.Graph",
    "pandas.Series",
    "pypsa.networkclustering.community",
    "str"
   ]
  },
  "type": "function"
 },
 "pypsa.networkclustering.busmap_by_rectangular_grid": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "pandas.Series",
    "pandas.cut",
    "six.itervalues",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pypsa.networkclustering.busmap_by_spectral_clustering": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "ModuleNotFoundError",
    "dict",
    "importlib.util.find_spec",
    "list",
    "networkx.Graph",
    "networkx.adjacency_matrix",
    "pandas.Series",
    "six.moves.map",
    "sklearn.cluster.spectral_clustering",
    "str"
   ]
  },
  "type": "function"
 },
 "pypsa.networkclustering.busmap_by_stubs": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "attrs_match",
    "len",
    "list",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pypsa.networkclustering.busmap_by_stubs.attrs_match": {
  "data": {
   "lineno": 522
  },
  "type": "function"
 },
 "pypsa.networkclustering.community": {
  "data": {
   "shadows": "community"
  },
  "type": "import"
 },
 "pypsa.networkclustering.find_spec": {
  "data": {
   "shadows": "importlib.util.find_spec"
  },
  "type": "import"
 },
 "pypsa.networkclustering.get_buses_linemap_and_lines": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "dict",
    "pypsa.networkclustering.aggregatebuses",
    "pypsa.networkclustering.aggregatelines"
   ]
  },
  "type": "function"
 },
 "pypsa.networkclustering.get_clustering_from_busmap": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "Network",
    "dict",
    "haversine_pts",
    "numpy.where",
    "pypsa.networkclustering.Clustering",
    "pypsa.networkclustering.aggregategenerators",
    "pypsa.networkclustering.aggregateoneport",
    "pypsa.networkclustering.get_buses_linemap_and_lines",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "pypsa.networkclustering.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "pypsa.networkclustering.itervalues": {
  "data": {
   "shadows": "six.itervalues"
  },
  "type": "import"
 },
 "pypsa.networkclustering.kmeans_clustering": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "pypsa.networkclustering.busmap_by_kmeans",
    "pypsa.networkclustering.get_clustering_from_busmap"
   ]
  },
  "type": "function"
 },
 "pypsa.networkclustering.length_clustering": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "pypsa.networkclustering.busmap_by_length",
    "pypsa.networkclustering.get_clustering_from_busmap"
   ]
  },
  "type": "function"
 },
 "pypsa.networkclustering.logger": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pypsa.networkclustering.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pypsa.networkclustering.louvain_clustering": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "pypsa.networkclustering.busmap_by_louvain",
    "pypsa.networkclustering.get_clustering_from_busmap"
   ]
  },
  "type": "function"
 },
 "pypsa.networkclustering.map": {
  "data": {
   "shadows": "six.moves.map"
  },
  "type": "import"
 },
 "pypsa.networkclustering.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pypsa.networkclustering.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pypsa.networkclustering.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "pypsa.networkclustering.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pypsa.networkclustering.range": {
  "data": {
   "shadows": "six.moves.range"
  },
  "type": "import"
 },
 "pypsa.networkclustering.rectangular_grid_clustering": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "pypsa.networkclustering.busmap_by_rectangular_grid",
    "pypsa.networkclustering.get_clustering_from_busmap"
   ]
  },
  "type": "function"
 },
 "pypsa.networkclustering.reduce": {
  "data": {
   "shadows": "six.moves.reduce"
  },
  "type": "import"
 },
 "pypsa.networkclustering.sk_spectral_clustering": {
  "data": {
   "shadows": "sklearn.cluster.spectral_clustering"
  },
  "type": "import"
 },
 "pypsa.networkclustering.spectral_clustering": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "pypsa.networkclustering.busmap_by_spectral_clustering",
    "pypsa.networkclustering.get_clustering_from_busmap"
   ]
  },
  "type": "function"
 },
 "pypsa.networkclustering.stubs_clustering": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "pypsa.networkclustering.busmap_by_stubs",
    "pypsa.networkclustering.get_clustering_from_busmap"
   ]
  },
  "type": "function"
 },
 "pypsa.opf": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pandas.Series.zsum",
    "pypsa.opf.logging"
   ]
  },
  "type": "module"
 },
 "pypsa.opf.Binary": {
  "data": {
   "shadows": "pyomo.environ.Binary"
  },
  "type": "import"
 },
 "pypsa.opf.ConcreteModel": {
  "data": {
   "shadows": "pyomo.environ.ConcreteModel"
  },
  "type": "import"
 },
 "pypsa.opf.Constraint": {
  "data": {
   "shadows": "pyomo.environ.Constraint"
  },
  "type": "import"
 },
 "pypsa.opf.NonNegativeReals": {
  "data": {
   "shadows": "pyomo.environ.NonNegativeReals"
  },
  "type": "import"
 },
 "pypsa.opf.PersistentSolver": {
  "data": {
   "lineno": 39
  },
  "type": "class"
 },
 "pypsa.opf.Reals": {
  "data": {
   "shadows": "pyomo.environ.Reals"
  },
  "type": "import"
 },
 "pypsa.opf.SolverFactory": {
  "data": {
   "shadows": "pyomo.environ.SolverFactory"
  },
  "type": "import"
 },
 "pypsa.opf.Suffix": {
  "data": {
   "shadows": "pyomo.environ.Suffix"
  },
  "type": "import"
 },
 "pypsa.opf.Var": {
  "data": {
   "shadows": "pyomo.environ.Var"
  },
  "type": "import"
 },
 "pypsa.opf.__author__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pypsa.opf.__copyright__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pypsa.opf.define_branch_extension_variables": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "free_pyomo_initializers",
    "list",
    "pyomo.environ.NonNegativeReals",
    "pyomo.environ.Var"
   ]
  },
  "type": "function"
 },
 "pypsa.opf.define_branch_extension_variables.branch_p_nom_bounds": {
  "data": {
   "lineno": 695
  },
  "type": "function"
 },
 "pypsa.opf.define_branch_extension_variables.branch_s_nom_bounds": {
  "data": {
   "lineno": 682
  },
  "type": "function"
 },
 "pypsa.opf.define_generator_variables_constraints": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "LConstraint",
    "LExpression",
    "enumerate",
    "free_pyomo_initializers",
    "get_switchable_as_dense",
    "l_constraint",
    "len",
    "list",
    "min",
    "pyomo.environ.Binary",
    "pyomo.environ.Constraint",
    "pyomo.environ.NonNegativeReals",
    "pyomo.environ.Reals",
    "pyomo.environ.Var",
    "pypsa.opf.logger",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pypsa.opf.define_generator_variables_constraints.force_down": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "pypsa.opf.define_generator_variables_constraints.force_up": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "pypsa.opf.define_generator_variables_constraints.gen_p_bounds_f": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "pypsa.opf.define_generator_variables_constraints.gen_p_nom_bounds": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "pypsa.opf.define_generator_variables_constraints.gen_rule": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "len",
    "min",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "pypsa.opf.define_global_constraints": {
  "data": {
   "lineno": 1089,
   "symbols_in_volume": [
    "LConstraint",
    "l_constraint",
    "list",
    "sum"
   ]
  },
  "type": "function"
 },
 "pypsa.opf.define_linear_objective": {
  "data": {
   "lineno": 1142,
   "symbols_in_volume": [
    "LExpression",
    "get_switchable_as_iter",
    "l_objective",
    "zip"
   ]
  },
  "type": "function"
 },
 "pypsa.opf.define_link_flows": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "LConstraint",
    "LExpression",
    "get_switchable_as_dense",
    "l_constraint",
    "list",
    "pyomo.environ.Var"
   ]
  },
  "type": "function"
 },
 "pypsa.opf.define_nodal_balance_constraints": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": [
    "LConstraint",
    "LExpression",
    "l_constraint",
    "list",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "pypsa.opf.define_nodal_balances": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": [
    "LExpression",
    "get_switchable_as_dense",
    "int"
   ]
  },
  "type": "function"
 },
 "pypsa.opf.define_passive_branch_constraints": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "get_switchable_as_dense",
    "l_constraint",
    "list",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "pypsa.opf.define_passive_branch_flows": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "pypsa.opf.define_passive_branch_flows_with_PTDF",
    "pypsa.opf.define_passive_branch_flows_with_angles",
    "pypsa.opf.define_passive_branch_flows_with_cycles",
    "pypsa.opf.define_passive_branch_flows_with_kirchhoff"
   ]
  },
  "type": "function"
 },
 "pypsa.opf.define_passive_branch_flows_with_PTDF": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "LConstraint",
    "LExpression",
    "abs",
    "calculate_PTDF",
    "enumerate",
    "find_bus_controls",
    "l_constraint",
    "len",
    "list",
    "pyomo.environ.Var",
    "sum"
   ]
  },
  "type": "function"
 },
 "pypsa.opf.define_passive_branch_flows_with_angles": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "LConstraint",
    "LExpression",
    "l_constraint",
    "list",
    "numpy.pi",
    "pyomo.environ.Var"
   ]
  },
  "type": "function"
 },
 "pypsa.opf.define_passive_branch_flows_with_cycles": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "LConstraint",
    "LExpression",
    "calculate_B_H",
    "enumerate",
    "find_bus_controls",
    "find_cycles",
    "find_tree",
    "l_constraint",
    "len",
    "list",
    "pyomo.environ.Reals",
    "pyomo.environ.Var",
    "pypsa.opf.define_sub_network_cycle_constraints",
    "pypsa.opf.logger",
    "sum"
   ]
  },
  "type": "function"
 },
 "pypsa.opf.define_passive_branch_flows_with_kirchhoff": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": [
    "calculate_B_H",
    "find_bus_controls",
    "find_cycles",
    "find_tree",
    "l_constraint",
    "len",
    "list",
    "pyomo.environ.Var",
    "pypsa.opf.define_sub_network_cycle_constraints"
   ]
  },
  "type": "function"
 },
 "pypsa.opf.define_storage_variables_constraints": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "enumerate",
    "free_pyomo_initializers",
    "get_switchable_as_dense",
    "l_constraint",
    "list",
    "pandas.isnull",
    "pyomo.environ.Constraint",
    "pyomo.environ.NonNegativeReals",
    "pyomo.environ.Var"
   ]
  },
  "type": "function"
 },
 "pypsa.opf.define_storage_variables_constraints.su_p_dispatch_bounds": {
  "data": {
   "lineno": 448
  },
  "type": "function"
 },
 "pypsa.opf.define_storage_variables_constraints.su_p_lower": {
  "data": {
   "lineno": 508
  },
  "type": "function"
 },
 "pypsa.opf.define_storage_variables_constraints.su_p_nom_bounds": {
  "data": {
   "lineno": 490
  },
  "type": "function"
 },
 "pypsa.opf.define_storage_variables_constraints.su_p_spill_bounds": {
  "data": {
   "lineno": 480
  },
  "type": "function"
 },
 "pypsa.opf.define_storage_variables_constraints.su_p_store_bounds": {
  "data": {
   "lineno": 463
  },
  "type": "function"
 },
 "pypsa.opf.define_storage_variables_constraints.su_p_upper": {
  "data": {
   "lineno": 501
  },
  "type": "function"
 },
 "pypsa.opf.define_store_variables_constraints": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "LConstraint",
    "enumerate",
    "free_pyomo_initializers",
    "get_switchable_as_dense",
    "l_constraint",
    "list",
    "pyomo.environ.Constraint",
    "pyomo.environ.Reals",
    "pyomo.environ.Var"
   ]
  },
  "type": "function"
 },
 "pypsa.opf.define_store_variables_constraints.store_e_bounds": {
  "data": {
   "lineno": 610
  },
  "type": "function"
 },
 "pypsa.opf.define_store_variables_constraints.store_e_lower": {
  "data": {
   "lineno": 637
  },
  "type": "function"
 },
 "pypsa.opf.define_store_variables_constraints.store_e_nom_bounds": {
  "data": {
   "lineno": 620
  },
  "type": "function"
 },
 "pypsa.opf.define_store_variables_constraints.store_e_upper": {
  "data": {
   "lineno": 630
  },
  "type": "function"
 },
 "pypsa.opf.define_sub_network_balance_constraints": {
  "data": {
   "lineno": 1074,
   "symbols_in_volume": [
    "LConstraint",
    "LExpression",
    "l_constraint",
    "list"
   ]
  },
  "type": "function"
 },
 "pypsa.opf.define_sub_network_cycle_constraints": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "LConstraint",
    "LExpression",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "pypsa.opf.extract_optimisation_results": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "allocate_series_dataframes",
    "extra_postprocessing",
    "get_shadows",
    "get_switchable_as_dense",
    "get_values",
    "int",
    "len",
    "list",
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.concat",
    "pypsa.opf.logger",
    "scipy.sparse.linalg.spsolve",
    "set_from_series"
   ]
  },
  "type": "function"
 },
 "pypsa.opf.extract_optimisation_results.clear_indexedvar": {
  "data": {
   "lineno": 1248,
   "symbols_in_volume": [
    "six.itervalues"
   ]
  },
  "type": "function"
 },
 "pypsa.opf.extract_optimisation_results.get_shadows": {
  "data": {
   "lineno": 1261,
   "symbols_in_volume": [
    "len",
    "list",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pypsa.opf.extract_optimisation_results.get_values": {
  "data": {
   "lineno": 1252,
   "symbols_in_volume": [
    "clear_indexedvar",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pypsa.opf.extract_optimisation_results.set_from_series": {
  "data": {
   "lineno": 1258
  },
  "type": "function"
 },
 "pypsa.opf.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "pypsa.opf.itervalues": {
  "data": {
   "shadows": "six.itervalues"
  },
  "type": "import"
 },
 "pypsa.opf.logger": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pypsa.opf.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pypsa.opf.network_lopf": {
  "data": {
   "lineno": 1595,
   "symbols_in_volume": [
    "_as_snapshots",
    "extra_functionality",
    "extra_postprocessing",
    "pypsa.opf.network_lopf_build_model",
    "pypsa.opf.network_lopf_prepare_solver",
    "pypsa.opf.network_lopf_solve"
   ]
  },
  "type": "function"
 },
 "pypsa.opf.network_lopf_build_model": {
  "data": {
   "lineno": 1419,
   "symbols_in_volume": [
    "_as_snapshots",
    "calculate_dependent_values",
    "find_slack_bus",
    "pyomo.environ.ConcreteModel",
    "pyomo.environ.Suffix",
    "pyomo.environ.Suffix.IMPORT",
    "pypsa.opf.define_branch_extension_variables",
    "pypsa.opf.define_generator_variables_constraints",
    "pypsa.opf.define_global_constraints",
    "pypsa.opf.define_linear_objective",
    "pypsa.opf.define_link_flows",
    "pypsa.opf.define_nodal_balance_constraints",
    "pypsa.opf.define_nodal_balances",
    "pypsa.opf.define_passive_branch_constraints",
    "pypsa.opf.define_passive_branch_flows",
    "pypsa.opf.define_storage_variables_constraints",
    "pypsa.opf.define_store_variables_constraints",
    "pypsa.opf.define_sub_network_balance_constraints",
    "pypsa.opf.logger"
   ]
  },
  "type": "function"
 },
 "pypsa.opf.network_lopf_prepare_solver": {
  "data": {
   "lineno": 1490,
   "symbols_in_volume": [
    "isinstance",
    "patch_optsolver_record_memusage_before_solving",
    "pyomo.environ.SolverFactory",
    "pyomo.solvers.plugins.solvers.persistent_solver.PersistentSolver"
   ]
  },
  "type": "function"
 },
 "pypsa.opf.network_lopf_solve": {
  "data": {
   "lineno": 1518,
   "symbols_in_volume": [
    "_as_snapshots",
    "empty_network",
    "extra_postprocessing",
    "isinstance",
    "pyomo.solvers.plugins.solvers.persistent_solver.PersistentSolver",
    "pypsa.opf.extract_optimisation_results",
    "pypsa.opf.logger",
    "pypsa.opf.logging",
    "six.string_types"
   ]
  },
  "type": "function"
 },
 "pypsa.opf.network_opf": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pypsa.opf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pypsa.opf.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pypsa.opf.spsolve": {
  "data": {
   "shadows": "scipy.sparse.linalg.spsolve"
  },
  "type": "import"
 },
 "pypsa.opf.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "pypsa.opt": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pypsa.opt.logging"
   ]
  },
  "type": "module"
 },
 "pypsa.opt.ComponentUID": {
  "data": {
   "shadows": "pyomo.environ.ComponentUID"
  },
  "type": "import"
 },
 "pypsa.opt.Constraint": {
  "data": {
   "shadows": "pyomo.environ.Constraint"
  },
  "type": "import"
 },
 "pypsa.opt.LConstraint": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pypsa.opt.LConstraint.__init__": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "pypsa.opt.LExpression"
   ]
  },
  "type": "function"
 },
 "pypsa.opt.LConstraint.__repr__": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "pypsa.opt.LExpression": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pypsa.opt.LExpression.__add__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "pypsa.opt.LExpression",
    "pypsa.opt.logger"
   ]
  },
  "type": "function"
 },
 "pypsa.opt.LExpression.__init__": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "pypsa.opt.LExpression.__mul__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "float",
    "pypsa.opt.LExpression",
    "pypsa.opt.logger"
   ]
  },
  "type": "function"
 },
 "pypsa.opt.LExpression.__neg__": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "pypsa.opt.LExpression.__pos__": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "pypsa.opt.LExpression.__radd__": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "pypsa.opt.LExpression.__repr__": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "pypsa.opt.LExpression.__rmul__": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "pypsa.opt.LinearExpression": {
  "data": {
   "shadows": "pyomo.core.expr.numeric_expr.LinearExpression"
  },
  "type": "import"
 },
 "pypsa.opt.Objective": {
  "data": {
   "shadows": "pyomo.environ.Objective"
  },
  "type": "import"
 },
 "pypsa.opt.Var": {
  "data": {
   "shadows": "pyomo.environ.Var"
  },
  "type": "import"
 },
 "pypsa.opt.__author__": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pypsa.opt.__copyright__": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "pypsa.opt._build_sum_expression": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "pyomo.core.expr.numeric_expr.LinearExpression"
   ]
  },
  "type": "function"
 },
 "pypsa.opt.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "pypsa.opt.empty_model": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "getattr",
    "open",
    "pyomo.environ.Constraint",
    "pyomo.environ.Var",
    "pypsa.opt.gc",
    "pypsa.opt.logger",
    "pypsa.opt.os",
    "pypsa.opt.tempfile",
    "six.iteritems",
    "six.moves.cPickle.dump",
    "six.moves.cPickle.load"
   ]
  },
  "type": "function"
 },
 "pypsa.opt.empty_network": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "getattr",
    "open",
    "pypsa.opt.gc",
    "pypsa.opt.logger",
    "pypsa.opt.os",
    "pypsa.opt.tempfile",
    "setattr",
    "six.iteritems",
    "six.moves.cPickle.dump",
    "six.moves.cPickle.load"
   ]
  },
  "type": "function"
 },
 "pypsa.opt.free_pyomo_initializers": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "NotImplementedError",
    "hasattr",
    "isinstance",
    "pyomo.environ.Constraint",
    "pyomo.environ.Var",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pypsa.opt.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pypsa.opt.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "pypsa.opt.l_constraint": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "KeyError",
    "getattr",
    "isinstance",
    "pyomo.environ.Constraint",
    "pypsa.opt.LConstraint",
    "pypsa.opt._build_sum_expression",
    "pypsa.opt.pyomo",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pypsa.opt.l_objective": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "pyomo.environ.Objective",
    "pyomo.environ.minimize",
    "pypsa.opt.LExpression",
    "pypsa.opt._build_sum_expression"
   ]
  },
  "type": "function"
 },
 "pypsa.opt.logger": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pypsa.opt.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pypsa.opt.minimize": {
  "data": {
   "shadows": "pyomo.environ.minimize"
  },
  "type": "import"
 },
 "pypsa.opt.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pypsa.opt.patch_optsolver_free_model_before_solving": {
  "data": {
   "lineno": 344
  },
  "type": "function"
 },
 "pypsa.opt.patch_optsolver_free_model_before_solving.wrapper": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "orig_apply_solver",
    "pypsa.opt.empty_model"
   ]
  },
  "type": "function"
 },
 "pypsa.opt.patch_optsolver_record_memusage_before_solving": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "ImportError",
    "orig_apply_solver",
    "pypsa.opt.logger"
   ]
  },
  "type": "function"
 },
 "pypsa.opt.patch_optsolver_record_memusage_before_solving.wrapper": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "orig_apply_solver",
    "pypsa.opt.resource"
   ]
  },
  "type": "function"
 },
 "pypsa.opt.pickle": {
  "data": {
   "shadows": "six.moves.cPickle"
  },
  "type": "import"
 },
 "pypsa.opt.pyomo": {
  "data": {
   "shadows": "pyomo"
  },
  "type": "import"
 },
 "pypsa.opt.resource": {
  "data": {
   "shadows": "resource"
  },
  "type": "import"
 },
 "pypsa.opt.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pypsa.plot": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pypsa.plot.logging"
   ]
  },
  "type": "module"
 },
 "pypsa.plot.Circle": {
  "data": {
   "shadows": "matplotlib.patches.Circle"
  },
  "type": "import"
 },
 "pypsa.plot.FancyArrow": {
  "data": {
   "shadows": "matplotlib.patches.FancyArrow"
  },
  "type": "import"
 },
 "pypsa.plot.LineCollection": {
  "data": {
   "shadows": "matplotlib.collections.LineCollection"
  },
  "type": "import"
 },
 "pypsa.plot.LineString": {
  "data": {
   "shadows": "shapely.geometry.LineString"
  },
  "type": "import"
 },
 "pypsa.plot.PatchCollection": {
  "data": {
   "shadows": "matplotlib.collections.PatchCollection"
  },
  "type": "import"
 },
 "pypsa.plot.Wedge": {
  "data": {
   "shadows": "matplotlib.patches.Wedge"
  },
  "type": "import"
 },
 "pypsa.plot.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pypsa.plot.__copyright__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pypsa.plot._flow_ds_from_arg": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "isinstance",
    "pandas.MultiIndex",
    "pandas.Series",
    "pandas.concat",
    "str"
   ]
  },
  "type": "function"
 },
 "pypsa.plot._get_coordinates": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "layouter",
    "numpy.nan",
    "pypsa.plot.autogenerate_coordinates"
   ]
  },
  "type": "function"
 },
 "pypsa.plot._open__mb_styles": {
  "data": {
   "lineno": 537
  },
  "type": "constant"
 },
 "pypsa.plot._token_required_mb_styles": {
  "data": {
   "lineno": 534
  },
  "type": "constant"
 },
 "pypsa.plot.as_branch_series": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "list",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pypsa.plot.autogenerate_coordinates": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "layouter",
    "networkx.check_planarity",
    "networkx.kamada_kawai_layout",
    "networkx.planar_layout",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pypsa.plot.cartopy": {
  "data": {
   "shadows": "cartopy"
  },
  "type": "import"
 },
 "pypsa.plot.cartopy.mpl.geoaxes": {
  "data": {
   "shadows": "cartopy.mpl.geoaxes"
  },
  "type": "import"
 },
 "pypsa.plot.cartopy_present": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pypsa.plot.ccrs": {
  "data": {
   "shadows": "cartopy.crs"
  },
  "type": "import"
 },
 "pypsa.plot.compute_bbox_with_margins": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "numpy.asarray",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pypsa.plot.directed_flow": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "matplotlib.collections.PatchCollection",
    "matplotlib.patches.FancyArrow",
    "numpy.sign",
    "numpy.sqrt",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pypsa.plot.draw_map_cartopy": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "bool",
    "dict",
    "isinstance",
    "pypsa.plot.cartopy",
    "pypsa.plot.compute_bbox_with_margins",
    "pypsa.plot.get_projection_from_crs"
   ]
  },
  "type": "function"
 },
 "pypsa.plot.get_projection_from_crs": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "ValueError",
    "cartopy.crs.PlateCarree",
    "cartopy.crs.epsg",
    "pypsa.plot.logger",
    "pypsa.plot.requests"
   ]
  },
  "type": "function"
 },
 "pypsa.plot.go": {
  "data": {
   "shadows": "plotly.graph_objects"
  },
  "type": "import"
 },
 "pypsa.plot.iplot": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "TypeError",
    "bus_cmap",
    "dict",
    "isinstance",
    "layouter",
    "len",
    "numpy.random.uniform",
    "pandas.MultiIndex",
    "pandas.Series",
    "plotly.graph_objects.Scattermapbox",
    "plotly.offline.iplot",
    "pypsa.plot._get_coordinates",
    "pypsa.plot._open__mb_styles",
    "pypsa.plot._token_required_mb_styles",
    "pypsa.plot.as_branch_series",
    "pypsa.plot.logger",
    "pypsa.plot.pltly_present"
   ]
  },
  "type": "function"
 },
 "pypsa.plot.loads": {
  "data": {
   "shadows": "shapely.wkt.loads"
  },
  "type": "import"
 },
 "pypsa.plot.logger": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pypsa.plot.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pypsa.plot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pypsa.plot.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "pypsa.plot.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pypsa.plot.plot": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "TypeError",
    "all",
    "bus_cmap",
    "dict",
    "isinstance",
    "issubclass",
    "len",
    "list",
    "matplotlib.collections.LineCollection",
    "matplotlib.collections.PatchCollection",
    "matplotlib.patches.Circle",
    "matplotlib.patches.Wedge",
    "matplotlib.pyplot.Normalize",
    "matplotlib.pyplot.cm.get_cmap",
    "matplotlib.pyplot.gca",
    "norm",
    "numpy.asarray",
    "numpy.dtype",
    "numpy.number",
    "numpy.random.uniform",
    "numpy.sqrt",
    "pandas.DataFrame",
    "pandas.MultiIndex",
    "pandas.Series",
    "pypsa.plot._flow_ds_from_arg",
    "pypsa.plot._get_coordinates",
    "pypsa.plot.as_branch_series",
    "pypsa.plot.cartopy",
    "pypsa.plot.cartopy_present",
    "pypsa.plot.compute_bbox_with_margins",
    "pypsa.plot.directed_flow",
    "pypsa.plot.draw_map_cartopy",
    "pypsa.plot.get_projection_from_crs",
    "pypsa.plot.logger",
    "pypsa.plot.projected_area_factor",
    "shapely.geometry.LineString",
    "shapely.wkt.loads",
    "str",
    "sum",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pypsa.plot.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pypsa.plot.pltly": {
  "data": {
   "shadows": "plotly.offline"
  },
  "type": "import"
 },
 "pypsa.plot.pltly_present": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "pypsa.plot.projected_area_factor": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "abs",
    "cartopy.crs.PlateCarree",
    "hasattr",
    "isinstance",
    "numpy.array",
    "numpy.sqrt",
    "pypsa.plot.get_projection_from_crs"
   ]
  },
  "type": "function"
 },
 "pypsa.plot.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "pypsa.plot.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "pypsa.plot.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pypsa.stats": {
  "data": {
   "symbols_in_volume": [
    "pandas.IndexSlice"
   ]
  },
  "type": "module"
 },
 "pypsa.stats.calculate_costs": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pypsa.stats.calculate_curtailment": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "pypsa.stats.check_constraints": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "pypsa.stats.constraint_stats",
    "str.title"
   ]
  },
  "type": "function"
 },
 "pypsa.stats.constraint_stats": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "pandas.concat",
    "pypsa.stats.describe_cycle_constraints",
    "pypsa.stats.describe_lower_dispatch_constraints",
    "pypsa.stats.describe_nodal_balance_constraint",
    "pypsa.stats.describe_storage_unit_contraints",
    "pypsa.stats.describe_store_contraints",
    "pypsa.stats.describe_upper_dispatch_constraints"
   ]
  },
  "type": "function"
 },
 "pypsa.stats.describe_cycle_constraints": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "cycle_flow",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "pypsa.stats.describe_cycle_constraints.cycle_flow": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pypsa.stats.describe_lower_dispatch_constraints": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "pypsa.stats.describe_nodal_balance_constraint": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "pypsa.stats.describe_storage_unit_contraints": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "expand_series",
    "pandas.Series",
    "pandas.concat",
    "pypsa.stats.logging"
   ]
  },
  "type": "function"
 },
 "pypsa.stats.describe_store_contraints": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "expand_series"
   ]
  },
  "type": "function"
 },
 "pypsa.stats.describe_upper_dispatch_constraints": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "pypsa.stats.get_as_dense": {
  "data": {
   "shadows": "get_switchable_as_dense"
  },
  "type": "import"
 },
 "pypsa.stats.idx": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pypsa.stats.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pypsa.stats.opt_name": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pypsa.stats.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 }
}