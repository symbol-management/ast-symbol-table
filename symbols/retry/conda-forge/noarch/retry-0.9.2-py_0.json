{
 "retry": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.NullHandler",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "retry.NullHandler": {
  "lineno": 12,
  "symbols_in_volume": [
   "logging.Handler"
  ],
  "type": "class"
 },
 "retry.NullHandler.emit": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "retry.api": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "retry.api.__retry_internal": {
  "lineno": 13,
  "symbols_in_volume": [
   "random.uniform",
   "time.sleep"
  ],
  "type": "function"
 },
 "retry.api.retry": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "retry.api.retry.retry_decorator": {
  "lineno": 69,
  "symbols_in_volume": [
   "functools.partial",
   "retry.compat.decorator"
  ],
  "type": "function"
 },
 "retry.api.retry_call": {
  "lineno": 79,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "retry.compat": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "retry.compat.decorator": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "retry.compat.decorator.decor": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "retry.compat.decorator.decor.wrapper": {
  "lineno": 14,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "retry.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "retry.tests.test_retry": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "retry.tests.test_retry.test_fixed_jitter": {
  "lineno": 99,
  "symbols_in_volume": [
   "pytest.raises",
   "time"
  ],
  "type": "function"
 },
 "retry.tests.test_retry.test_fixed_jitter.f": {
  "lineno": 112,
  "symbols_in_volume": [
   "retry.api.retry"
  ],
  "type": "function"
 },
 "retry.tests.test_retry.test_fixed_jitter.mock_sleep": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "retry.tests.test_retry.test_max_delay": {
  "lineno": 73,
  "symbols_in_volume": [
   "pytest.raises",
   "time"
  ],
  "type": "function"
 },
 "retry.tests.test_retry.test_max_delay.f": {
  "lineno": 88,
  "symbols_in_volume": [
   "retry.api.retry"
  ],
  "type": "function"
 },
 "retry.tests.test_retry.test_max_delay.mock_sleep": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "retry.tests.test_retry.test_retry": {
  "lineno": 19,
  "symbols_in_volume": [
   "pytest.raises",
   "time"
  ],
  "type": "function"
 },
 "retry.tests.test_retry.test_retry.f": {
  "lineno": 33,
  "symbols_in_volume": [
   "retry.api.retry"
  ],
  "type": "function"
 },
 "retry.tests.test_retry.test_retry.mock_sleep": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "retry.tests.test_retry.test_retry_call": {
  "lineno": 123,
  "symbols_in_volume": [
   "mock.MagicMock",
   "retry.api.retry_call"
  ],
  "type": "function"
 },
 "retry.tests.test_retry.test_retry_call_2": {
  "lineno": 134,
  "symbols_in_volume": [
   "mock.MagicMock",
   "retry.api.retry_call"
  ],
  "type": "function"
 },
 "retry.tests.test_retry.test_retry_call_with_args": {
  "lineno": 148,
  "symbols_in_volume": [
   "mock.MagicMock",
   "retry.api.retry_call"
  ],
  "type": "function"
 },
 "retry.tests.test_retry.test_retry_call_with_args.f": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "retry.tests.test_retry.test_retry_call_with_kwargs": {
  "lineno": 168,
  "symbols_in_volume": [
   "mock.MagicMock",
   "retry.api.retry_call"
  ],
  "type": "function"
 },
 "retry.tests.test_retry.test_retry_call_with_kwargs.f": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "retry.tests.test_retry.test_tries_inf": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "retry.tests.test_retry.test_tries_inf.f": {
  "lineno": 49,
  "symbols_in_volume": [
   "retry.api.retry"
  ],
  "type": "function"
 },
 "retry.tests.test_retry.test_tries_minus1": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "retry.tests.test_retry.test_tries_minus1.f": {
  "lineno": 63,
  "symbols_in_volume": [
   "retry.api.retry"
  ],
  "type": "function"
 }
}