{
 "resample": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "resample.bootstrap": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "resample.bootstrap._confidence_interval_bca": {
  "lineno": 334,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.ndarray",
   "numpy.sum",
   "resample.empirical.quantile_function_gen",
   "scipy.stats.norm",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "resample.bootstrap._confidence_interval_percentile": {
  "lineno": 327,
  "symbols_in_volume": [
   "numpy.ndarray",
   "resample.empirical.quantile_function_gen",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "resample.bootstrap._fit_parametric_family": {
  "lineno": 293,
  "symbols_in_volume": [
   "numpy.cov",
   "numpy.mean",
   "numpy.ndarray",
   "scipy.stats.beta",
   "scipy.stats.f",
   "scipy.stats.gamma",
   "scipy.stats.invgauss",
   "scipy.stats.lognorm",
   "scipy.stats.multivariate_normal",
   "scipy.stats.pareto",
   "scipy.stats.rv_continuous",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "resample.bootstrap._resample_balanced": {
  "lineno": 281,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.random.Generator",
   "typing.Generator"
  ],
  "type": "function"
 },
 "resample.bootstrap._resample_ordinary": {
  "lineno": 272,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.random.Generator",
   "typing.Generator"
  ],
  "type": "function"
 },
 "resample.bootstrap._resample_parametric": {
  "lineno": 308,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.ndarray",
   "numpy.random.Generator",
   "scipy.stats.poisson",
   "typing.Generator"
  ],
  "type": "function"
 },
 "resample.bootstrap._resample_stratified": {
  "lineno": 257,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.ndarray",
   "numpy.random.Generator",
   "numpy.unique",
   "typing.Generator"
  ],
  "type": "function"
 },
 "resample.bootstrap.bias": {
  "lineno": 179,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.mean",
   "numpy.ndarray",
   "typing.Callable",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "resample.bootstrap.bias_corrected": {
  "lineno": 212,
  "symbols_in_volume": [
   "numpy.ndarray",
   "typing.Callable",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "resample.bootstrap.bootstrap": {
  "lineno": 102,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ndarray",
   "typing.Callable",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "resample.bootstrap.confidence_interval": {
  "lineno": 123,
  "symbols_in_volume": [
   "resample.jackknife.jackknife",
   "typing.Callable",
   "typing.Sequence",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "resample.bootstrap.resample": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.atleast_1d",
   "numpy.ndarray",
   "numpy.random.Generator",
   "numpy.random.default_rng",
   "scipy.stats",
   "scipy.stats.invgauss.get",
   "scipy.stats.lognorm.get",
   "scipy.stats.multivariate_normal",
   "scipy.stats.norm",
   "scipy.stats.norm.get",
   "scipy.stats.t.get",
   "typing.Generator",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "resample.bootstrap.variance": {
  "lineno": 234,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.var",
   "typing.Callable",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "resample.empirical": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "resample.empirical.cdf_gen": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.searchsorted",
   "numpy.sort",
   "typing.Callable",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "resample.empirical.influence": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.ndarray",
   "resample.jackknife.jackknife",
   "typing.Callable",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "resample.empirical.quantile_function_gen": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.sort",
   "typing.Callable",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "resample.empirical.quantile_function_gen.quant": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.atleast_1d",
   "numpy.ceil",
   "numpy.empty",
   "numpy.int",
   "numpy.maximum",
   "numpy.nan",
   "numpy.ndim"
  ],
  "type": "function"
 },
 "resample.jackknife": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "resample.jackknife.bias": {
  "lineno": 102,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.ndarray",
   "typing.Callable",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "resample.jackknife.bias_corrected": {
  "lineno": 131,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.ndarray",
   "typing.Callable",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "resample.jackknife.jackknife": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ndarray",
   "typing.Callable",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "resample.jackknife.resample": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.atleast_1d",
   "numpy.ndarray",
   "typing.Generator",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "resample.jackknife.variance": {
  "lineno": 161,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.var",
   "typing.Callable",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "resample.permutation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "resample.permutation.anova": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.apply_along_axis",
   "numpy.asarray",
   "numpy.concatenate",
   "numpy.cumsum",
   "numpy.isnan",
   "numpy.mean",
   "numpy.ndarray",
   "numpy.random.default_rng",
   "numpy.reshape",
   "numpy.sum",
   "numpy.tile",
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "resample.permutation.anova.g": {
  "lineno": 102,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.sum",
   "numpy.var"
  ],
  "type": "function"
 },
 "resample.permutation.corr_test": {
  "lineno": 238,
  "symbols_in_volume": [
   "numpy.amax",
   "numpy.apply_along_axis",
   "numpy.asarray",
   "numpy.column_stack",
   "numpy.isnan",
   "numpy.mean",
   "numpy.ndarray",
   "numpy.random.default_rng",
   "scipy.stats.rankdata",
   "typing.Dict"
  ],
  "type": "function"
 },
 "resample.permutation.corr_test.corr": {
  "lineno": 300,
  "symbols_in_volume": [
   "numpy.corrcoef"
  ],
  "type": "function"
 },
 "resample.permutation.kruskal_wallis": {
  "lineno": 179,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.apply_along_axis",
   "numpy.asarray",
   "numpy.concatenate",
   "numpy.cumsum",
   "numpy.isnan",
   "numpy.mean",
   "numpy.ndarray",
   "numpy.random.default_rng",
   "numpy.reshape",
   "numpy.sum",
   "numpy.tile",
   "scipy.stats.rankdata",
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "resample.permutation.kruskal_wallis.g": {
  "lineno": 217,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "resample.permutation.ks_test": {
  "lineno": 310,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.apply_along_axis",
   "numpy.asarray",
   "numpy.isnan",
   "numpy.max",
   "numpy.mean",
   "numpy.ndarray",
   "numpy.random.default_rng",
   "numpy.reshape",
   "numpy.sort",
   "numpy.tile",
   "resample.empirical.cdf_gen",
   "typing.Dict"
  ],
  "type": "function"
 },
 "resample.permutation.ks_test.g": {
  "lineno": 357,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.max",
   "numpy.ones"
  ],
  "type": "function"
 },
 "resample.permutation.ks_test.h": {
  "lineno": 354,
  "symbols_in_volume": [
   "numpy.searchsorted"
  ],
  "type": "function"
 },
 "resample.permutation.ttest": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.apply_along_axis",
   "numpy.asarray",
   "numpy.isnan",
   "numpy.mean",
   "numpy.ndarray",
   "numpy.random.default_rng",
   "numpy.reshape",
   "numpy.tile",
   "typing.Dict"
  ],
  "type": "function"
 },
 "resample.permutation.ttest.g": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.sqrt",
   "numpy.var"
  ],
  "type": "function"
 },
 "resample.permutation.wilcoxon": {
  "lineno": 125,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.apply_along_axis",
   "numpy.asarray",
   "numpy.isnan",
   "numpy.mean",
   "numpy.ndarray",
   "numpy.random.default_rng",
   "numpy.reshape",
   "numpy.sum",
   "numpy.tile",
   "scipy.stats.rankdata",
   "typing.Dict"
  ],
  "type": "function"
 },
 "resample.version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 }
}