{
 "tests.theanolm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.theanolm.basiclayer_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "tests.theanolm.basiclayer_test.DummyLayer": {
  "lineno": 26,
  "symbols_in_volume": [
   "theanolm.network.basiclayer.BasicLayer"
  ],
  "type": "class"
 },
 "tests.theanolm.basiclayer_test.DummyLayer.__init__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.basiclayer_test.DummyLayer.create_structure": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.basiclayer_test.DummyParameters": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.theanolm.basiclayer_test.DummyParameters.__getitem__": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.basiclayer_test.DummyParameters.__init__": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.basiclayer_test.DummyParameters.add": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.basiclayer_test.DummyParameters.get_device": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.basiclayer_test.TestBasicLayer": {
  "lineno": 34,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.theanolm.basiclayer_test.TestBasicLayer.setUp": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.basiclayer_test.TestBasicLayer.tearDown": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.basiclayer_test.TestBasicLayer.test_get_param": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.basiclayer_test.TestBasicLayer.test_init_bias": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.ones",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tests.theanolm.basiclayer_test.TestBasicLayer.test_init_weight": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.identity",
   "numpy.max",
   "numpy.min",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "tests.theanolm.basiclayer_test.TestBasicLayer.test_param_path": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.basiclayer_test.TestBasicLayer.test_size_per_device": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.basiclayer_test.TestBasicLayer.test_split_to_devices": {
  "lineno": 149,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "tests.theanolm.classdistribution_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "tests.theanolm.classdistribution_test.TestClassDistribution": {
  "lineno": 14,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.theanolm.classdistribution_test.TestClassDistribution.setUp": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.random.randint",
   "theano.config.compute_test_value",
   "theano.sandbox.rng_mrg.MRG_RandomStreams"
  ],
  "type": "function"
 },
 "tests.theanolm.classdistribution_test.TestClassDistribution.tearDown": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.classdistribution_test.TestClassDistribution.test_log_uniform_distribution_probs": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.log",
   "theano.function",
   "theano.tensor.vector",
   "theanolm.backend.LogUniformDistribution"
  ],
  "type": "function"
 },
 "tests.theanolm.classdistribution_test.TestClassDistribution.test_log_uniform_distribution_sample": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.greater_equal",
   "numpy.less",
   "theano.function",
   "theanolm.backend.LogUniformDistribution"
  ],
  "type": "function"
 },
 "tests.theanolm.classdistribution_test.TestClassDistribution.test_multinomial_distribution_probs": {
  "lineno": 103,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "theano.function",
   "theano.shared",
   "theano.tensor.vector",
   "theanolm.backend.MultinomialDistribution"
  ],
  "type": "function"
 },
 "tests.theanolm.classdistribution_test.TestClassDistribution.test_multinomial_distribution_sample": {
  "lineno": 87,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.greater_equal",
   "numpy.less",
   "theano.function",
   "theano.shared",
   "theanolm.backend.MultinomialDistribution"
  ],
  "type": "function"
 },
 "tests.theanolm.classdistribution_test.TestClassDistribution.test_uniform_distribution_probs": {
  "lineno": 45,
  "symbols_in_volume": [
   "numpy.array",
   "theano.tensor.vector",
   "theanolm.backend.UniformDistribution"
  ],
  "type": "function"
 },
 "tests.theanolm.classdistribution_test.TestClassDistribution.test_uniform_distribution_sample": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.greater_equal",
   "numpy.less",
   "theano.function",
   "theanolm.backend.UniformDistribution"
  ],
  "type": "function"
 },
 "tests.theanolm.iterators_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "tests.theanolm.iterators_test.TestIterators": {
  "lineno": 16,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.theanolm.iterators_test.TestIterators._assert_oos_counts": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.iterators_test.TestIterators._assert_shortlist_counts": {
  "lineno": 353,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.iterators_test.TestIterators._compute_word_counts": {
  "lineno": 323,
  "symbols_in_volume": [
   "numpy.add.at",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tests.theanolm.iterators_test.TestIterators.setUp": {
  "lineno": 17,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join",
   "os.path.realpath",
   "theanolm.Vocabulary.from_file"
  ],
  "type": "function"
 },
 "tests.theanolm.iterators_test.TestIterators.tearDown": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.iterators_test.TestIterators.test_find_sentence_starts": {
  "lineno": 40,
  "symbols_in_volume": [
   "mmap.ACCESS_READ",
   "mmap.mmap",
   "theanolm.parsing.functions.find_sentence_starts"
  ],
  "type": "function"
 },
 "tests.theanolm.iterators_test.TestIterators.test_linear_batch_iterator": {
  "lineno": 181,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "theanolm.parsing.LinearBatchIterator"
  ],
  "type": "function"
 },
 "tests.theanolm.iterators_test.TestIterators.test_scoring_batch_iterator": {
  "lineno": 260,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "theanolm.parsing.ScoringBatchIterator"
  ],
  "type": "function"
 },
 "tests.theanolm.iterators_test.TestIterators.test_shuffling_batch_iterator": {
  "lineno": 73,
  "symbols_in_volume": [
   "numpy.count_nonzero",
   "numpy.testing.assert_equal",
   "numpy.unique",
   "theanolm.parsing.ShufflingBatchIterator"
  ],
  "type": "function"
 },
 "tests.theanolm.lattice_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "tests.theanolm.lattice_test.TestLattice": {
  "lineno": 12,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.theanolm.lattice_test.TestLattice.setUp": {
  "lineno": 13,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join",
   "os.path.realpath"
  ],
  "type": "function"
 },
 "tests.theanolm.lattice_test.TestLattice.tearDown": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.lattice_test.TestLattice.test_init": {
  "lineno": 200,
  "symbols_in_volume": [
   "theanolm.scoring.slflattice.SLFLattice"
  ],
  "type": "function"
 },
 "tests.theanolm.lattice_test.TestLattice.test_move_words_to_links": {
  "lineno": 120,
  "symbols_in_volume": [
   "theanolm.scoring.lattice.Lattice.Node",
   "theanolm.scoring.slflattice.SLFLattice"
  ],
  "type": "function"
 },
 "tests.theanolm.lattice_test.TestLattice.test_read_slf_header": {
  "lineno": 36,
  "symbols_in_volume": [
   "math.log",
   "theanolm.scoring.slflattice.SLFLattice"
  ],
  "type": "function"
 },
 "tests.theanolm.lattice_test.TestLattice.test_read_slf_link": {
  "lineno": 72,
  "symbols_in_volume": [
   "theanolm.scoring.lattice.Lattice.Node",
   "theanolm.scoring.slflattice.SLFLattice"
  ],
  "type": "function"
 },
 "tests.theanolm.lattice_test.TestLattice.test_read_slf_node": {
  "lineno": 56,
  "symbols_in_volume": [
   "theanolm.scoring.lattice.Lattice.Node",
   "theanolm.scoring.slflattice.SLFLattice"
  ],
  "type": "function"
 },
 "tests.theanolm.lattice_test.TestLattice.test_sorted_nodes": {
  "lineno": 144,
  "symbols_in_volume": [
   "theanolm.scoring.lattice.Lattice",
   "theanolm.scoring.lattice.Lattice.Node",
   "theanolm.scoring.slflattice.SLFLattice"
  ],
  "type": "function"
 },
 "tests.theanolm.lattice_test.TestLattice.test_sorted_nodes.reachable": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.lattice_test.TestLattice.test_split_slf_field": {
  "lineno": 30,
  "symbols_in_volume": [
   "theanolm.scoring.slflattice.SLFLattice",
   "theanolm.scoring.slflattice._split_slf_field"
  ],
  "type": "function"
 },
 "tests.theanolm.lattice_test.TestLattice.test_split_slf_line": {
  "lineno": 20,
  "symbols_in_volume": [
   "theanolm.scoring.slflattice._split_slf_line"
  ],
  "type": "function"
 },
 "tests.theanolm.latticedecoder_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "tests.theanolm.latticedecoder_test.DummyLatticeDecoder": {
  "lineno": 45,
  "symbols_in_volume": [
   "theanolm.scoring.LatticeDecoder"
  ],
  "type": "class"
 },
 "tests.theanolm.latticedecoder_test.DummyLatticeDecoder.__init__": {
  "lineno": 46,
  "symbols_in_volume": [
   "theanolm.scoring.LatticeDecoder.Token",
   "theanolm.scoring.lattice.Lattice.Node"
  ],
  "type": "function"
 },
 "tests.theanolm.latticedecoder_test.DummyNetwork": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.theanolm.latticedecoder_test.DummyNetwork.__init__": {
  "lineno": 23,
  "symbols_in_volume": [
   "theano.config.floatX",
   "theano.tensor.matrix",
   "theano.tensor.scalar",
   "theano.tensor.tensor3"
  ],
  "type": "function"
 },
 "tests.theanolm.latticedecoder_test.DummyNetwork.target_probs": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.latticedecoder_test.TestLatticeDecoder": {
  "lineno": 75,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.theanolm.latticedecoder_test.TestLatticeDecoder.setUp": {
  "lineno": 76,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join",
   "os.path.realpath",
   "theano.config.floatX",
   "theano.tensor.set_subtensor",
   "theano.tensor.zeros",
   "theanolm.Vocabulary.from_file",
   "theanolm.scoring.SLFLattice"
  ],
  "type": "function"
 },
 "tests.theanolm.latticedecoder_test.TestLatticeDecoder.tearDown": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.latticedecoder_test.TestLatticeDecoder.test_append_word": {
  "lineno": 196,
  "symbols_in_volume": [
   "math.log",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "theano.config.floatX",
   "theanolm.network.RecurrentState",
   "theanolm.scoring.LatticeDecoder",
   "theanolm.scoring.LatticeDecoder.Token"
  ],
  "type": "function"
 },
 "tests.theanolm.latticedecoder_test.TestLatticeDecoder.test_copy_token": {
  "lineno": 131,
  "symbols_in_volume": [
   "theanolm.scoring.LatticeDecoder.Token",
   "theanolm.scoring.LatticeDecoder.Token.copy"
  ],
  "type": "function"
 },
 "tests.theanolm.latticedecoder_test.TestLatticeDecoder.test_decode": {
  "lineno": 332,
  "symbols_in_volume": [
   "math.log",
   "theano.config.floatX",
   "theano.tensor.ones",
   "theanolm.Vocabulary.from_word_counts",
   "theanolm.scoring.LatticeDecoder"
  ],
  "type": "function"
 },
 "tests.theanolm.latticedecoder_test.TestLatticeDecoder.test_prune": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.latticedecoder_test.TestLatticeDecoder.test_recompute_hash": {
  "lineno": 139,
  "symbols_in_volume": [
   "theanolm.scoring.LatticeDecoder.Token"
  ],
  "type": "function"
 },
 "tests.theanolm.latticedecoder_test.TestLatticeDecoder.test_recompute_total": {
  "lineno": 152,
  "symbols_in_volume": [
   "math.log",
   "numpy.testing.assert_almost_equal",
   "theanolm.scoring.LatticeDecoder.Token"
  ],
  "type": "function"
 },
 "tests.theanolm.operations_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "tests.theanolm.operations_test.Test": {
  "lineno": 11,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.theanolm.operations_test.Test.setUp": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.operations_test.Test.tearDown": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.operations_test.Test.test_conv1d": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "theano.function",
   "theano.tensor.tensor3",
   "theanolm.backend.conv1d"
  ],
  "type": "function"
 },
 "tests.theanolm.operations_test.Test.test_conv2d": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.zeros",
   "theano.function",
   "theano.tensor.tensor4",
   "theanolm.backend.conv2d"
  ],
  "type": "function"
 },
 "tests.theanolm.probfunctions_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "tests.theanolm.probfunctions_test.TestProbFunctions": {
  "lineno": 9,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.theanolm.probfunctions_test.TestProbFunctions.setUp": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.probfunctions_test.TestProbFunctions.tearDown": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.probfunctions_test.TestProbFunctions.test_interpolate_linear": {
  "lineno": 16,
  "symbols_in_volume": [
   "math.log"
  ],
  "type": "function"
 },
 "tests.theanolm.probfunctions_test.TestProbFunctions.test_interpolate_loglinear": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.recurrentstate_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "tests.theanolm.recurrentstate_test.TestRecurrentState": {
  "lineno": 12,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.theanolm.recurrentstate_test.TestRecurrentState.setUp": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.recurrentstate_test.TestRecurrentState.tearDown": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.recurrentstate_test.TestRecurrentState.test_combine_sequences": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.testing.assert_equal",
   "theanolm.network.RecurrentState",
   "theanolm.network.RecurrentState.combine_sequences"
  ],
  "type": "function"
 },
 "tests.theanolm.recurrentstate_test.TestRecurrentState.test_init": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "theanolm.network.RecurrentState"
  ],
  "type": "function"
 },
 "tests.theanolm.recurrentstate_test.TestRecurrentState.test_set": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_equal",
   "theanolm.network.RecurrentState"
  ],
  "type": "function"
 },
 "tests.theanolm.score_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "tests.theanolm.score_test.TestScore": {
  "lineno": 10,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.theanolm.score_test.TestScore.setUp": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.score_test.TestScore.tearDown": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.score_test.TestScore.test_merge_subwords": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "theanolm.commands.score._merge_subwords"
  ],
  "type": "function"
 },
 "tests.theanolm.statistics_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "tests.theanolm.statistics_test.TestStatistics": {
  "lineno": 10,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.theanolm.statistics_test.TestStatistics.setUp": {
  "lineno": 11,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join",
   "os.path.realpath"
  ],
  "type": "function"
 },
 "tests.theanolm.statistics_test.TestStatistics.tearDown": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.statistics_test.TestStatistics.test_bigram_statistics": {
  "lineno": 30,
  "symbols_in_volume": [
   "theanolm.Vocabulary.from_word_counts",
   "theanolm.vocabulary.BigramStatistics",
   "theanolm.vocabulary.compute_word_counts"
  ],
  "type": "function"
 },
 "tests.theanolm.statistics_test.TestStatistics.test_compute_word_counts": {
  "lineno": 19,
  "symbols_in_volume": [
   "theanolm.vocabulary.compute_word_counts"
  ],
  "type": "function"
 },
 "tests.theanolm.textsampler_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "tests.theanolm.textsampler_test.DummyNetwork": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.theanolm.textsampler_test.DummyNetwork.__init__": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.zeros",
   "theano.sandbox.rng_mrg.MRG_RandomStreams",
   "theano.tensor.matrix",
   "theano.tensor.scalar"
  ],
  "type": "function"
 },
 "tests.theanolm.textsampler_test.DummyNetwork.output_probs": {
  "lineno": 38,
  "symbols_in_volume": [
   "theano.tensor.set_subtensor",
   "theano.tensor.zeros"
  ],
  "type": "function"
 },
 "tests.theanolm.textsampler_test.TestTextSampler": {
  "lineno": 63,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.theanolm.textsampler_test.TestTextSampler.setUp": {
  "lineno": 64,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join",
   "os.path.realpath",
   "theano.config.compute_test_value",
   "theanolm.Vocabulary.from_file"
  ],
  "type": "function"
 },
 "tests.theanolm.textsampler_test.TestTextSampler.tearDown": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.textsampler_test.TestTextSampler.test_generate": {
  "lineno": 76,
  "symbols_in_volume": [
   "theanolm.TextSampler"
  ],
  "type": "function"
 },
 "tests.theanolm.textscorer_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "tests.theanolm.textscorer_test.DummyNetwork": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.theanolm.textscorer_test.DummyNetwork.__init__": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.log",
   "theano.shared",
   "theano.tensor.matrix",
   "theano.tensor.scalar"
  ],
  "type": "function"
 },
 "tests.theanolm.textscorer_test.DummyNetwork.target_probs": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.textscorer_test.TestTextScorer": {
  "lineno": 34,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.theanolm.textscorer_test.TestTextScorer.setUp": {
  "lineno": 35,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join",
   "os.path.realpath",
   "theanolm.Vocabulary.from_file"
  ],
  "type": "function"
 },
 "tests.theanolm.textscorer_test.TestTextScorer.tearDown": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.textscorer_test.TestTextScorer.test_score_batch": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.log",
   "numpy.ones_like",
   "numpy.testing.assert_almost_equal",
   "theanolm.scoring.TextScorer"
  ],
  "type": "function"
 },
 "tests.theanolm.textscorer_test.TestTextScorer.test_score_sequence": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.log",
   "numpy.ones_like",
   "theanolm.scoring.TextScorer"
  ],
  "type": "function"
 },
 "tests.theanolm.trainers_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "tests.theanolm.trainers_test.DummyTrainer": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.theanolm.trainers_test.TestTrainers": {
  "lineno": 11,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.theanolm.trainers_test.TestTrainers.setUp": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.trainers_test.TestTrainers.tearDown": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.trainers_test.TestTrainers.test_is_scheduled": {
  "lineno": 18,
  "symbols_in_volume": [
   "theanolm.training.Trainer._is_scheduled"
  ],
  "type": "function"
 },
 "tests.theanolm.vocabulary_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "tests.theanolm.vocabulary_test.TestVocabulary": {
  "lineno": 13,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.theanolm.vocabulary_test.TestVocabulary.setUp": {
  "lineno": 14,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join",
   "os.path.realpath"
  ],
  "type": "function"
 },
 "tests.theanolm.vocabulary_test.TestVocabulary.tearDown": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.vocabulary_test.TestVocabulary.test_class_ids": {
  "lineno": 108,
  "symbols_in_volume": [
   "theanolm.vocabulary.Vocabulary.from_file"
  ],
  "type": "function"
 },
 "tests.theanolm.vocabulary_test.TestVocabulary.test_compute_probs": {
  "lineno": 126,
  "symbols_in_volume": [
   "theanolm.vocabulary.Vocabulary.from_file",
   "theanolm.vocabulary.compute_word_counts"
  ],
  "type": "function"
 },
 "tests.theanolm.vocabulary_test.TestVocabulary.test_from_file": {
  "lineno": 35,
  "symbols_in_volume": [
   "theanolm.vocabulary.Vocabulary.from_file"
  ],
  "type": "function"
 },
 "tests.theanolm.vocabulary_test.TestVocabulary.test_from_state": {
  "lineno": 88,
  "symbols_in_volume": [
   "h5py.File",
   "numpy.array_equal",
   "theanolm.vocabulary.Vocabulary.from_file",
   "theanolm.vocabulary.Vocabulary.from_state",
   "theanolm.vocabulary.compute_word_counts"
  ],
  "type": "function"
 },
 "tests.theanolm.vocabulary_test.TestVocabulary.test_from_word_counts": {
  "lineno": 50,
  "symbols_in_volume": [
   "theanolm.vocabulary.Vocabulary.from_word_counts",
   "theanolm.vocabulary.compute_word_counts"
  ],
  "type": "function"
 },
 "tests.theanolm.vocabulary_test.TestVocabulary.test_get_class_memberships": {
  "lineno": 188,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal",
   "theanolm.vocabulary.Vocabulary.from_file",
   "theanolm.vocabulary.compute_word_counts"
  ],
  "type": "function"
 },
 "tests.theanolm.vocabulary_test.TestVocabulary.test_get_class_probs": {
  "lineno": 252,
  "symbols_in_volume": [
   "theanolm.vocabulary.Vocabulary.from_word_counts"
  ],
  "type": "function"
 },
 "tests.theanolm.vocabulary_test.TestVocabulary.test_get_oos_probs": {
  "lineno": 237,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "theanolm.vocabulary.Vocabulary.from_file"
  ],
  "type": "function"
 },
 "tests.theanolm.wordclass_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "tests.theanolm.wordclass_test.TestWordClass": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.theanolm.wordclass_test.TestWordClass.setUp": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.theanolm.wordclass_test.TestWordClass.test_normalize_probs": {
  "lineno": 12,
  "symbols_in_volume": [
   "theanolm.vocabulary.wordclass.WordClass"
  ],
  "type": "function"
 },
 "tests.wordclasses": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.wordclasses.bigramoptimizer_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "tests.wordclasses.bigramoptimizer_test.TestBigramOptimizer": {
  "lineno": 14,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.wordclasses.bigramoptimizer_test.TestBigramOptimizer.assert_optimizers_equal": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.array_equal"
  ],
  "type": "function"
 },
 "tests.wordclasses.bigramoptimizer_test.TestBigramOptimizer.setUp": {
  "lineno": 15,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join",
   "os.path.realpath",
   "theano.config.compute_test_value",
   "theanolm.vocabulary.BigramStatistics",
   "theanolm.vocabulary.Vocabulary.from_word_counts",
   "theanolm.vocabulary.compute_word_counts"
  ],
  "type": "function"
 },
 "tests.wordclasses.bigramoptimizer_test.TestBigramOptimizer.tearDown": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.wordclasses.bigramoptimizer_test.TestBigramOptimizer.test_evaluate": {
  "lineno": 161,
  "symbols_in_volume": [
   "numpy.isclose",
   "wordclasses.NumpyBigramOptimizer",
   "wordclasses.TheanoBigramOptimizer"
  ],
  "type": "function"
 },
 "tests.wordclasses.bigramoptimizer_test.TestBigramOptimizer.test_move_and_back": {
  "lineno": 80,
  "symbols_in_volume": [
   "numpy.array_equal",
   "numpy.copy",
   "numpy.count_nonzero",
   "numpy.sum",
   "wordclasses.NumpyBigramOptimizer",
   "wordclasses.TheanoBigramOptimizer"
  ],
  "type": "function"
 },
 "tests.wordclasses.bigramoptimizer_test.TestBigramOptimizer.test_move_and_recompute": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.array_equal",
   "numpy.count_nonzero",
   "numpy.zeros",
   "wordclasses.NumpyBigramOptimizer",
   "wordclasses.TheanoBigramOptimizer"
  ],
  "type": "function"
 },
 "tests.wordclasses.bigramoptimizer_test.TestBigramOptimizer.test_statistics": {
  "lineno": 39,
  "symbols_in_volume": [
   "wordclasses.NumpyBigramOptimizer",
   "wordclasses.TheanoBigramOptimizer"
  ],
  "type": "function"
 },
 "theanolm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.backend": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.backend.classdistribution": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.backend.classdistribution.ClassDistribution": {
  "lineno": 13,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "theanolm.backend.classdistribution.ClassDistribution.__init__": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.dtype",
   "theano.config.floatX"
  ],
  "type": "function"
 },
 "theanolm.backend.classdistribution.ClassDistribution.probs": {
  "lineno": 37,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "theanolm.backend.classdistribution.ClassDistribution.sample": {
  "lineno": 30,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "theanolm.backend.classdistribution.LogUniformDistribution": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "class"
 },
 "theanolm.backend.classdistribution.LogUniformDistribution.__init__": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "theanolm.backend.classdistribution.LogUniformDistribution.probs": {
  "lineno": 143,
  "symbols_in_volume": [
   "theano.tensor.log"
  ],
  "type": "function"
 },
 "theanolm.backend.classdistribution.LogUniformDistribution.sample": {
  "lineno": 123,
  "symbols_in_volume": [
   "theano.tensor.exp"
  ],
  "type": "function"
 },
 "theanolm.backend.classdistribution.MultinomialDistribution": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "class"
 },
 "theanolm.backend.classdistribution.MultinomialDistribution.__init__": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.backend.classdistribution.MultinomialDistribution.probs": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.backend.classdistribution.MultinomialDistribution.sample": {
  "lineno": 178,
  "symbols_in_volume": [
   "theano.tensor.tile"
  ],
  "type": "function"
 },
 "theanolm.backend.classdistribution.UniformDistribution": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "class"
 },
 "theanolm.backend.classdistribution.UniformDistribution.__init__": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.backend.classdistribution.UniformDistribution.probs": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.backend.classdistribution.UniformDistribution.sample": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.backend.debugfunctions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.backend.debugfunctions.assert_tensor_eq": {
  "lineno": 26,
  "symbols_in_volume": [
   "theano.tensor.eq",
   "theano.tensor.opt.Assert"
  ],
  "type": "function"
 },
 "theanolm.backend.debugfunctions.print_tensor": {
  "lineno": 8,
  "symbols_in_volume": [
   "theano.printing.Print"
  ],
  "type": "function"
 },
 "theanolm.backend.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.backend.exceptions.IncompatibleStateError": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "theanolm.backend.exceptions.InputError": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "theanolm.backend.exceptions.NumberError": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "theanolm.backend.exceptions.TheanoConfigurationError": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "theanolm.backend.filetypes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.backend.filetypes.BinaryFileType": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "class"
 },
 "theanolm.backend.filetypes.BinaryFileType.__call__": {
  "lineno": 74,
  "symbols_in_volume": [
   "argparse.ArgumentTypeError",
   "gzip.open",
   "sys.stdin.buffer",
   "sys.stdout.buffer"
  ],
  "type": "function"
 },
 "theanolm.backend.filetypes.BinaryFileType.__init__": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.backend.filetypes.BinaryFileType.__repr__": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.backend.filetypes.TextFileType": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "theanolm.backend.filetypes.TextFileType.__call__": {
  "lineno": 29,
  "symbols_in_volume": [
   "argparse.ArgumentTypeError",
   "gzip.open",
   "io.TextIOWrapper",
   "sys.stdin.buffer",
   "sys.stdout.buffer"
  ],
  "type": "function"
 },
 "theanolm.backend.filetypes.TextFileType.__init__": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.backend.filetypes.TextFileType.__repr__": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.backend.matrixfunctions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.backend.matrixfunctions.test_value": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.rand",
   "numpy.random.randint",
   "theano.config.floatX"
  ],
  "type": "function"
 },
 "theanolm.backend.operations": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.backend.operations.conv1d": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.backend.operations.conv2d": {
  "lineno": 11,
  "symbols_in_volume": [
   "theano.gof.MissingInputError",
   "theano.tensor.nnet.conv2d"
  ],
  "type": "function"
 },
 "theanolm.backend.parameters": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.backend.parameters.Parameters": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "theanolm.backend.parameters.Parameters.__getitem__": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.backend.parameters.Parameters.__init__": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.backend.parameters.Parameters.add": {
  "lineno": 38,
  "symbols_in_volume": [
   "logging.debug",
   "theano.config.device.startswith",
   "theano.shared",
   "theanolm.backend.exceptions.TheanoConfigurationError"
  ],
  "type": "function"
 },
 "theanolm.backend.parameters.Parameters.get_state": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.backend.parameters.Parameters.get_variables": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.backend.parameters.Parameters.set_state": {
  "lineno": 93,
  "symbols_in_volume": [
   "logging.debug",
   "theanolm.backend.exceptions.IncompatibleStateError"
  ],
  "type": "function"
 },
 "theanolm.backend.probfunctions": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.dtype",
   "theano.config.floatX"
  ],
  "type": "module"
 },
 "theanolm.backend.probfunctions.interpolate_linear": {
  "lineno": 14,
  "symbols_in_volume": [
   "decimal.Decimal",
   "decimal.getcontext",
   "numpy.exp",
   "numpy.float64",
   "numpy.log"
  ],
  "type": "function"
 },
 "theanolm.backend.probfunctions.interpolate_loglinear": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.isnan"
  ],
  "type": "function"
 },
 "theanolm.commands": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.commands.decode": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.commands.decode.add_arguments": {
  "lineno": 17,
  "symbols_in_volume": [
   "theanolm.backend.TextFileType"
  ],
  "type": "function"
 },
 "theanolm.commands.decode.decode": {
  "lineno": 131,
  "symbols_in_volume": [
   "logging",
   "logging.basicConfig",
   "logging.debug",
   "logging.info",
   "numpy.log",
   "os.path.basename",
   "sys.exit",
   "sys.stdout",
   "sys.stdout.flush",
   "theano.config.compute_test_value",
   "theano.config.profile",
   "theano.config.profile_memory",
   "theanolm.Network.Mode",
   "theanolm.Network.from_file",
   "theanolm.backend.TextFileType",
   "theanolm.scoring.LatticeDecoder",
   "theanolm.scoring.SLFLattice"
  ],
  "type": "function"
 },
 "theanolm.commands.decode.format_token": {
  "lineno": 226,
  "symbols_in_volume": [
   "sys.exit"
  ],
  "type": "function"
 },
 "theanolm.commands.sample": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.commands.sample.add_arguments": {
  "lineno": 15,
  "symbols_in_volume": [
   "theanolm.backend.TextFileType"
  ],
  "type": "function"
 },
 "theanolm.commands.sample.sample": {
  "lineno": 46,
  "symbols_in_volume": [
   "h5py.File",
   "numpy.random.seed",
   "sys.stdout.flush",
   "theano.config.compute_test_value",
   "theanolm.Architecture.from_state",
   "theanolm.Network",
   "theanolm.Network.Mode",
   "theanolm.TextSampler",
   "theanolm.Vocabulary.from_state"
  ],
  "type": "function"
 },
 "theanolm.commands.score": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.commands.score._merge_subwords": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.commands.score._score_text": {
  "lineno": 124,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.isneginf",
   "numpy.log",
   "theanolm.parsing.ScoringBatchIterator"
  ],
  "type": "function"
 },
 "theanolm.commands.score._score_utterances": {
  "lineno": 373,
  "symbols_in_volume": [
   "numpy.log",
   "sys.stdout.flush"
  ],
  "type": "function"
 },
 "theanolm.commands.score._write_word_scores": {
  "lineno": 310,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.commands.score._write_word_scores.word_info": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.commands.score.add_arguments": {
  "lineno": 17,
  "symbols_in_volume": [
   "theanolm.backend.TextFileType"
  ],
  "type": "function"
 },
 "theanolm.commands.score.score": {
  "lineno": 77,
  "symbols_in_volume": [
   "logging",
   "logging.basicConfig",
   "sys.exit",
   "sys.stdout",
   "sys.stdout.flush",
   "theano.config.compute_test_value",
   "theano.config.profile",
   "theano.config.profile_memory",
   "theanolm.Network.from_file",
   "theanolm.scoring.TextScorer"
  ],
  "type": "function"
 },
 "theanolm.commands.train": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.commands.train._read_vocabulary": {
  "lineno": 210,
  "symbols_in_volume": [
   "numpy.asarray",
   "sys.stdout.flush",
   "theanolm.Vocabulary.from_file",
   "theanolm.Vocabulary.from_state",
   "theanolm.Vocabulary.from_word_counts",
   "theanolm.vocabulary.compute_word_counts"
  ],
  "type": "function"
 },
 "theanolm.commands.train.add_arguments": {
  "lineno": 22,
  "symbols_in_volume": [
   "theanolm.backend.TextFileType"
  ],
  "type": "function"
 },
 "theanolm.commands.train.train": {
  "lineno": 288,
  "symbols_in_volume": [
   "h5py.File",
   "logging",
   "logging.basicConfig",
   "logging.debug",
   "mmap.PROT_READ",
   "mmap.mmap",
   "numpy.ones",
   "numpy.random.seed",
   "sys.exit",
   "sys.stdout",
   "sys.stdout.flush",
   "theano.config.compute_test_value",
   "theano.config.floatX",
   "theano.config.profile",
   "theano.config.profile_memory",
   "theano.printing.debugprint",
   "theanolm.Architecture.from_description",
   "theanolm.Architecture.from_package",
   "theanolm.Network",
   "theanolm.parsing.LinearBatchIterator",
   "theanolm.scoring.TextScorer",
   "theanolm.training.BlackoutCost",
   "theanolm.training.CrossEntropyCost",
   "theanolm.training.NCECost",
   "theanolm.training.Trainer",
   "theanolm.training.create_optimizer"
  ],
  "type": "function"
 },
 "theanolm.commands.version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.commands.version.version": {
  "lineno": 11,
  "symbols_in_volume": [
   "pygpu.__version__",
   "theano.version.version",
   "theanolm.__version__"
  ],
  "type": "function"
 },
 "theanolm.network": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.network.architecture": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.network.architecture.Architecture": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "theanolm.network.architecture.Architecture.__init__": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.architecture.Architecture._check_h5_dict": {
  "lineno": 308,
  "symbols_in_volume": [
   "theanolm.backend.IncompatibleStateError"
  ],
  "type": "function"
 },
 "theanolm.network.architecture.Architecture._read_h5_dict": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.architecture.Architecture._write_h5_dict": {
  "lineno": 284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.architecture.Architecture.check_state": {
  "lineno": 217,
  "symbols_in_volume": [
   "theanolm.backend.IncompatibleStateError"
  ],
  "type": "function"
 },
 "theanolm.network.architecture.Architecture.from_description": {
  "lineno": 88,
  "symbols_in_volume": [
   "theanolm.backend.InputError"
  ],
  "type": "function"
 },
 "theanolm.network.architecture.Architecture.from_package": {
  "lineno": 171,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "theanolm.network.architecture.Architecture.from_state": {
  "lineno": 45,
  "symbols_in_volume": [
   "theanolm.backend.IncompatibleStateError"
  ],
  "type": "function"
 },
 "theanolm.network.architecture.Architecture.get_state": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.basiclayer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.network.basiclayer.BasicLayer": {
  "lineno": 14,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "theanolm.network.basiclayer.BasicLayer.__init__": {
  "lineno": 18,
  "symbols_in_volume": [
   "logging.debug",
   "theanolm.backend.Parameters"
  ],
  "type": "function"
 },
 "theanolm.network.basiclayer.BasicLayer._get_param": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.basiclayer.BasicLayer._init_bias": {
  "lineno": 201,
  "symbols_in_volume": [
   "theanolm.network.weightfunctions.matrix_from_value"
  ],
  "type": "function"
 },
 "theanolm.network.basiclayer.BasicLayer._init_weight": {
  "lineno": 152,
  "symbols_in_volume": [
   "theanolm.network.weightfunctions.random_matrix"
  ],
  "type": "function"
 },
 "theanolm.network.basiclayer.BasicLayer._param_path": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.basiclayer.BasicLayer._size_per_device": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.basiclayer.BasicLayer._split_to_devices": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.basiclayer.BasicLayer._tensor_preact": {
  "lineno": 311,
  "symbols_in_volume": [
   "theano.tensor.dot"
  ],
  "type": "function"
 },
 "theanolm.network.basiclayer.BasicLayer.create_structure": {
  "lineno": 58,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "theanolm.network.basiclayer.BasicLayer.get_state": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.basiclayer.BasicLayer.get_variables": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.basiclayer.BasicLayer.num_params": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.basiclayer.BasicLayer.set_state": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.bidirectionallayer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.network.bidirectionallayer.BidirectionalLayer": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "theanolm.network.bidirectionallayer.BidirectionalLayer.__init__": {
  "lineno": 30,
  "symbols_in_volume": [
   "copy.copy",
   "theanolm.network.grulayer.GRULayer",
   "theanolm.network.lstmlayer.LSTMLayer"
  ],
  "type": "function"
 },
 "theanolm.network.bidirectionallayer.BidirectionalLayer.create_structure": {
  "lineno": 59,
  "symbols_in_volume": [
   "theano.tensor.concatenate"
  ],
  "type": "function"
 },
 "theanolm.network.bidirectionallayer.BidirectionalLayer.get_state": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.bidirectionallayer.BidirectionalLayer.get_variables": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.bidirectionallayer.BidirectionalLayer.num_params": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.bidirectionallayer.BidirectionalLayer.set_state": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.dropoutlayer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.network.dropoutlayer.DropoutLayer": {
  "lineno": 14,
  "symbols_in_volume": [
   "theanolm.network.basiclayer.BasicLayer"
  ],
  "type": "class"
 },
 "theanolm.network.dropoutlayer.DropoutLayer.__init__": {
  "lineno": 26,
  "symbols_in_volume": [
   "logging.debug"
  ],
  "type": "function"
 },
 "theanolm.network.dropoutlayer.DropoutLayer.create_structure": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.dtype",
   "theano.config.floatX",
   "theano.tensor.cast",
   "theano.tensor.concatenate",
   "theano.tensor.switch"
  ],
  "type": "function"
 },
 "theanolm.network.glulayer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.network.glulayer.GLULayer": {
  "lineno": 13,
  "symbols_in_volume": [
   "theanolm.network.basiclayer.BasicLayer"
  ],
  "type": "class"
 },
 "theanolm.network.glulayer.GLULayer.__init__": {
  "lineno": 23,
  "symbols_in_volume": [
   "logging.debug"
  ],
  "type": "function"
 },
 "theanolm.network.glulayer.GLULayer._tensor_conv1d": {
  "lineno": 93,
  "symbols_in_volume": [
   "theanolm.backend.conv1d"
  ],
  "type": "function"
 },
 "theanolm.network.glulayer.GLULayer.create_structure": {
  "lineno": 54,
  "symbols_in_volume": [
   "theano.tensor.concatenate",
   "theano.tensor.nnet.sigmoid",
   "theano.tensor.zeros"
  ],
  "type": "function"
 },
 "theanolm.network.grulayer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.network.grulayer.GRULayer": {
  "lineno": 12,
  "symbols_in_volume": [
   "theanolm.network.basiclayer.BasicLayer"
  ],
  "type": "class"
 },
 "theanolm.network.grulayer.GRULayer.__init__": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.grulayer.GRULayer._create_time_step": {
  "lineno": 130,
  "symbols_in_volume": [
   "theano.tensor.dot",
   "theano.tensor.nnet.sigmoid",
   "theano.tensor.switch",
   "theano.tensor.tanh",
   "theanolm.network.weightfunctions.get_submatrix"
  ],
  "type": "function"
 },
 "theanolm.network.grulayer.GRULayer.create_structure": {
  "lineno": 49,
  "symbols_in_volume": [
   "theano.config.floatX",
   "theano.scan",
   "theano.tensor.concatenate",
   "theano.tensor.zeros"
  ],
  "type": "function"
 },
 "theanolm.network.highwaytanhlayer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.network.highwaytanhlayer.HighwayTanhLayer": {
  "lineno": 11,
  "symbols_in_volume": [
   "theanolm.network.basiclayer.BasicLayer"
  ],
  "type": "class"
 },
 "theanolm.network.highwaytanhlayer.HighwayTanhLayer.__init__": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.highwaytanhlayer.HighwayTanhLayer.create_structure": {
  "lineno": 42,
  "symbols_in_volume": [
   "theano.tensor.concatenate",
   "theano.tensor.nnet.sigmoid",
   "theano.tensor.tanh",
   "theanolm.network.weightfunctions.get_submatrix"
  ],
  "type": "function"
 },
 "theanolm.network.hsoftmaxlayer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.network.hsoftmaxlayer.HSoftmaxLayer": {
  "lineno": 13,
  "symbols_in_volume": [
   "theanolm.network.basiclayer.BasicLayer"
  ],
  "type": "class"
 },
 "theanolm.network.hsoftmaxlayer.HSoftmaxLayer.__init__": {
  "lineno": 20,
  "symbols_in_volume": [
   "logging.debug",
   "numpy.ceil",
   "numpy.int",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "theanolm.network.hsoftmaxlayer.HSoftmaxLayer.create_structure": {
  "lineno": 55,
  "symbols_in_volume": [
   "theano.tensor.concatenate",
   "theano.tensor.nnet.h_softmax"
  ],
  "type": "function"
 },
 "theanolm.network.lstmlayer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.network.lstmlayer.LSTMLayer": {
  "lineno": 11,
  "symbols_in_volume": [
   "theanolm.network.basiclayer.BasicLayer"
  ],
  "type": "class"
 },
 "theanolm.network.lstmlayer.LSTMLayer.__init__": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.lstmlayer.LSTMLayer._create_time_step": {
  "lineno": 145,
  "symbols_in_volume": [
   "theano.tensor.dot",
   "theano.tensor.nnet.sigmoid",
   "theano.tensor.switch",
   "theano.tensor.tanh",
   "theanolm.network.weightfunctions.get_submatrix"
  ],
  "type": "function"
 },
 "theanolm.network.lstmlayer.LSTMLayer.create_structure": {
  "lineno": 53,
  "symbols_in_volume": [
   "theano.config.floatX",
   "theano.scan",
   "theano.tensor.concatenate",
   "theano.tensor.zeros"
  ],
  "type": "function"
 },
 "theanolm.network.network": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.network.network.Network": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "class"
 },
 "theanolm.network.network.Network.Mode": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "class"
 },
 "theanolm.network.network.Network.Mode.__init__": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.network.Network.__init__": {
  "lineno": 88,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "logging.debug",
   "numpy.log",
   "numpy.random.randint",
   "theano.config.floatX",
   "theano.sandbox.rng_mrg.MRG_RandomStreams",
   "theano.shared",
   "theano.tensor.matrix",
   "theano.tensor.ones",
   "theano.tensor.scalar",
   "theanolm.backend.test_value",
   "theanolm.network.networkinput.NetworkInput"
  ],
  "type": "function"
 },
 "theanolm.network.network.Network._layer_options_from_description": {
  "lineno": 493,
  "symbols_in_volume": [
   "theanolm.backend.InputError"
  ],
  "type": "function"
 },
 "theanolm.network.network.Network.add_recurrent_state": {
  "lineno": 396,
  "symbols_in_volume": [
   "theano.config.floatX",
   "theano.tensor.tensor3",
   "theanolm.backend.test_value"
  ],
  "type": "function"
 },
 "theanolm.network.network.Network.from_file": {
  "lineno": 247,
  "symbols_in_volume": [
   "h5py.File",
   "sys.stdout.flush",
   "theanolm.Vocabulary.from_state",
   "theanolm.network.architecture.Architecture.from_state"
  ],
  "type": "function"
 },
 "theanolm.network.network.Network.get_state": {
  "lineno": 345,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.network.Network.get_variables": {
  "lineno": 380,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.network.Network.noise_sample": {
  "lineno": 469,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.network.Network.output_probs": {
  "lineno": 424,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.network.Network.set_sampling": {
  "lineno": 280,
  "symbols_in_volume": [
   "numpy.power",
   "theano.config.floatX",
   "theano.shared",
   "theanolm.backend.LogUniformDistribution",
   "theanolm.backend.MultinomialDistribution",
   "theanolm.backend.UniformDistribution"
  ],
  "type": "function"
 },
 "theanolm.network.network.Network.set_state": {
  "lineno": 360,
  "symbols_in_volume": [
   "theanolm.backend.IncompatibleStateError"
  ],
  "type": "function"
 },
 "theanolm.network.network.Network.target_probs": {
  "lineno": 436,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.network.Network.unnormalized_logprobs": {
  "lineno": 450,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.network.create_layer": {
  "lineno": 34,
  "symbols_in_volume": [
   "theanolm.network.bidirectionallayer.BidirectionalLayer",
   "theanolm.network.dropoutlayer.DropoutLayer",
   "theanolm.network.glulayer.GLULayer",
   "theanolm.network.grulayer.GRULayer",
   "theanolm.network.highwaytanhlayer.HighwayTanhLayer",
   "theanolm.network.hsoftmaxlayer.HSoftmaxLayer",
   "theanolm.network.lstmlayer.LSTMLayer",
   "theanolm.network.projectionlayer.ProjectionLayer",
   "theanolm.network.softmaxlayer.SoftmaxLayer",
   "theanolm.network.tanhlayer.TanhLayer"
  ],
  "type": "function"
 },
 "theanolm.network.networkinput": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.network.networkinput.NetworkInput": {
  "lineno": 8,
  "symbols_in_volume": [
   "theanolm.network.basiclayer.BasicLayer"
  ],
  "type": "class"
 },
 "theanolm.network.networkinput.NetworkInput.__init__": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.networkinput.NetworkInput.create_structure": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.projectionlayer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.network.projectionlayer.ProjectionLayer": {
  "lineno": 10,
  "symbols_in_volume": [
   "theanolm.network.basiclayer.BasicLayer"
  ],
  "type": "class"
 },
 "theanolm.network.projectionlayer.ProjectionLayer.__init__": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.projectionlayer.ProjectionLayer.create_structure": {
  "lineno": 32,
  "symbols_in_volume": [
   "theano.tensor.concatenate"
  ],
  "type": "function"
 },
 "theanolm.network.recurrentstate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.network.recurrentstate.RecurrentState": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "theanolm.network.recurrentstate.RecurrentState.__init__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.recurrentstate.RecurrentState.combine_sequences": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "theanolm.network.recurrentstate.RecurrentState.get": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.recurrentstate.RecurrentState.reset": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.zeros",
   "theano.config.floatX"
  ],
  "type": "function"
 },
 "theanolm.network.recurrentstate.RecurrentState.set": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.samplingoutputlayer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.network.samplingoutputlayer.SamplingOutputLayer": {
  "lineno": 15,
  "symbols_in_volume": [
   "abc.ABCMeta",
   "theanolm.network.basiclayer.BasicLayer"
  ],
  "type": "class"
 },
 "theanolm.network.samplingoutputlayer.SamplingOutputLayer._get_target_list_preact": {
  "lineno": 193,
  "symbols_in_volume": [
   "theano.tensor.dot"
  ],
  "type": "function"
 },
 "theanolm.network.samplingoutputlayer.SamplingOutputLayer._get_target_preact": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.samplingoutputlayer.SamplingOutputLayer._get_target_seq_preact": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.samplingoutputlayer.SamplingOutputLayer._get_unnormalized_logprobs": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.samplingoutputlayer.SamplingOutputLayer.get_sample_tensors": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.int64"
  ],
  "type": "function"
 },
 "theanolm.network.samplingoutputlayer.SamplingOutputLayer.get_seqshared_sample_tensors": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.int64"
  ],
  "type": "function"
 },
 "theanolm.network.samplingoutputlayer.SamplingOutputLayer.get_shared_sample_tensors": {
  "lineno": 102,
  "symbols_in_volume": [
   "numpy.int64"
  ],
  "type": "function"
 },
 "theanolm.network.softmaxlayer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.network.softmaxlayer.SoftmaxLayer": {
  "lineno": 12,
  "symbols_in_volume": [
   "theanolm.network.samplingoutputlayer.SamplingOutputLayer"
  ],
  "type": "class"
 },
 "theanolm.network.softmaxlayer.SoftmaxLayer.__init__": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "theanolm.network.softmaxlayer.SoftmaxLayer.create_structure": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.dtype",
   "theano.config.floatX",
   "theano.tensor.arange",
   "theano.tensor.concatenate",
   "theano.tensor.nnet.softmax",
   "theano.tensor.set_subtensor"
  ],
  "type": "function"
 },
 "theanolm.network.tanhlayer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.network.tanhlayer.TanhLayer": {
  "lineno": 10,
  "symbols_in_volume": [
   "theanolm.network.basiclayer.BasicLayer"
  ],
  "type": "class"
 },
 "theanolm.network.tanhlayer.TanhLayer.__init__": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.tanhlayer.TanhLayer.create_structure": {
  "lineno": 30,
  "symbols_in_volume": [
   "theano.tensor.concatenate",
   "theano.tensor.tanh"
  ],
  "type": "function"
 },
 "theanolm.network.weightfunctions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.network.weightfunctions.get_submatrix": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.network.weightfunctions.matrix_from_value": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.empty",
   "numpy.ndarray",
   "numpy.zeros",
   "theano.config.floatX"
  ],
  "type": "function"
 },
 "theanolm.network.weightfunctions.random_matrix": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "theanolm.network.weightfunctions.random_normal_matrix": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.random.randn",
   "theano.config.floatX"
  ],
  "type": "function"
 },
 "theanolm.network.weightfunctions.random_orthogonal_matrix": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.linalg.svd",
   "numpy.random.randn",
   "theano.config.floatX"
  ],
  "type": "function"
 },
 "theanolm.parsing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.parsing.batchiterator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.parsing.batchiterator.BatchIterator": {
  "lineno": 13,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "theanolm.parsing.batchiterator.BatchIterator.__init__": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.parsing.batchiterator.BatchIterator.__iter__": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.parsing.batchiterator.BatchIterator.__len__": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.parsing.batchiterator.BatchIterator.__next__": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.parsing.batchiterator.BatchIterator._prepare_batch": {
  "lineno": 180,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.int8",
   "numpy.max",
   "numpy.ones",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "theanolm.parsing.batchiterator.BatchIterator._read_sequence": {
  "lineno": 132,
  "symbols_in_volume": [
   "theanolm.parsing.functions.utterance_from_line"
  ],
  "type": "function"
 },
 "theanolm.parsing.batchiterator.BatchIterator._readline": {
  "lineno": 168,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "theanolm.parsing.batchiterator.BatchIterator._reset": {
  "lineno": 122,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "theanolm.parsing.functions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.parsing.functions.find_sentence_starts": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.parsing.functions.utterance_from_line": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.parsing.linearbatchiterator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.parsing.linearbatchiterator.LinearBatchIterator": {
  "lineno": 9,
  "symbols_in_volume": [
   "theanolm.parsing.batchiterator.BatchIterator"
  ],
  "type": "class"
 },
 "theanolm.parsing.linearbatchiterator.LinearBatchIterator.__init__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.parsing.linearbatchiterator.LinearBatchIterator._readline": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.parsing.linearbatchiterator.LinearBatchIterator._reset": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.parsing.scoringbatchiterator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.parsing.scoringbatchiterator.ScoringBatchIterator": {
  "lineno": 10,
  "symbols_in_volume": [
   "theanolm.parsing.linearbatchiterator.LinearBatchIterator"
  ],
  "type": "class"
 },
 "theanolm.parsing.scoringbatchiterator.ScoringBatchIterator.__init__": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.parsing.scoringbatchiterator.ScoringBatchIterator._prepare_batch": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.int8",
   "numpy.max",
   "numpy.ones",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "theanolm.parsing.shufflingbatchiterator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.parsing.shufflingbatchiterator.SentencePointers": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "theanolm.parsing.shufflingbatchiterator.SentencePointers.__getitem__": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.parsing.shufflingbatchiterator.SentencePointers.__init__": {
  "lineno": 23,
  "symbols_in_volume": [
   "logging.debug",
   "mmap.PROT_READ",
   "mmap.mmap",
   "sys.stdout.flush",
   "theanolm.parsing.functions.find_sentence_starts"
  ],
  "type": "function"
 },
 "theanolm.parsing.shufflingbatchiterator.SentencePointers.__len__": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.parsing.shufflingbatchiterator.ShufflingBatchIterator": {
  "lineno": 84,
  "symbols_in_volume": [
   "theanolm.parsing.batchiterator.BatchIterator"
  ],
  "type": "class"
 },
 "theanolm.parsing.shufflingbatchiterator.ShufflingBatchIterator.__init__": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "theanolm.parsing.shufflingbatchiterator.ShufflingBatchIterator._readline": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.parsing.shufflingbatchiterator.ShufflingBatchIterator._reset": {
  "lineno": 191,
  "symbols_in_volume": [
   "logging.debug",
   "numpy.arange",
   "numpy.concatenate",
   "numpy.random.choice",
   "numpy.random.shuffle"
  ],
  "type": "function"
 },
 "theanolm.parsing.shufflingbatchiterator.ShufflingBatchIterator.get_state": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.parsing.shufflingbatchiterator.ShufflingBatchIterator.set_state": {
  "lineno": 159,
  "symbols_in_volume": [
   "logging.debug",
   "theanolm.backend.IncompatibleStateError"
  ],
  "type": "function"
 },
 "theanolm.scoring": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.scoring.lattice": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.scoring.lattice.Lattice": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "theanolm.scoring.lattice.Lattice.Link": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "theanolm.scoring.lattice.Lattice.Link.__init__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.scoring.lattice.Lattice.Node": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "class"
 },
 "theanolm.scoring.lattice.Lattice.Node.__init__": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.scoring.lattice.Lattice.__init__": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.scoring.lattice.Lattice._add_link": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.scoring.lattice.Lattice.sorted_nodes": {
  "lineno": 76,
  "symbols_in_volume": [
   "logging.warning",
   "theanolm.backend.InputError"
  ],
  "type": "function"
 },
 "theanolm.scoring.latticedecoder": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.scoring.latticedecoder.LatticeDecoder": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "theanolm.scoring.latticedecoder.LatticeDecoder.Token": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "theanolm.scoring.latticedecoder.LatticeDecoder.Token.__init__": {
  "lineno": 30,
  "symbols_in_volume": [
   "theanolm.backend.logprob_type"
  ],
  "type": "function"
 },
 "theanolm.scoring.latticedecoder.LatticeDecoder.Token.__str__": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.scoring.latticedecoder.LatticeDecoder.Token.copy": {
  "lineno": 74,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "theanolm.scoring.latticedecoder.LatticeDecoder.Token.history_words": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.scoring.latticedecoder.LatticeDecoder.Token.recompute_hash": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.scoring.latticedecoder.LatticeDecoder.Token.recompute_total": {
  "lineno": 112,
  "symbols_in_volume": [
   "theanolm.backend.interpolate_linear",
   "theanolm.backend.interpolate_loglinear"
  ],
  "type": "function"
 },
 "theanolm.scoring.latticedecoder.LatticeDecoder.__init__": {
  "lineno": 198,
  "symbols_in_volume": [
   "numpy.int8",
   "numpy.log",
   "theano.config.floatX",
   "theano.function",
   "theano.tensor.log",
   "theanolm.backend.logprob_type"
  ],
  "type": "function"
 },
 "theanolm.scoring.latticedecoder.LatticeDecoder._append_word": {
  "lineno": 494,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.log",
   "numpy.ones",
   "theanolm.network.RecurrentState",
   "theanolm.network.RecurrentState.combine_sequences"
  ],
  "type": "function"
 },
 "theanolm.scoring.latticedecoder.LatticeDecoder._append_word.limit_to_shortlist": {
  "lineno": 511,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.scoring.latticedecoder.LatticeDecoder._handle_unk_logprob": {
  "lineno": 550,
  "symbols_in_volume": [
   "logging.debug"
  ],
  "type": "function"
 },
 "theanolm.scoring.latticedecoder.LatticeDecoder._propagate": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.scoring.latticedecoder.LatticeDecoder._prune": {
  "lineno": 447,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.scoring.latticedecoder.LatticeDecoder.decode": {
  "lineno": 309,
  "symbols_in_volume": [
   "logging.debug",
   "math.ceil",
   "theanolm.backend.InputError",
   "theanolm.backend.logprob_type",
   "theanolm.network.RecurrentState"
  ],
  "type": "function"
 },
 "theanolm.scoring.slflattice": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.scoring.slflattice.SLFLattice": {
  "lineno": 55,
  "symbols_in_volume": [
   "theanolm.scoring.lattice.Lattice"
  ],
  "type": "class"
 },
 "theanolm.scoring.slflattice.SLFLattice.__init__": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.log",
   "theanolm.backend.InputError",
   "theanolm.backend.logprob_type"
  ],
  "type": "function"
 },
 "theanolm.scoring.slflattice.SLFLattice._move_words_to_links": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.scoring.slflattice.SLFLattice._move_words_to_links.visit_link": {
  "lineno": 261,
  "symbols_in_volume": [
   "theanolm.backend.InputError"
  ],
  "type": "function"
 },
 "theanolm.scoring.slflattice.SLFLattice._read_slf_header": {
  "lineno": 149,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.log",
   "theanolm.backend.InputError",
   "theanolm.backend.logprob_type"
  ],
  "type": "function"
 },
 "theanolm.scoring.slflattice.SLFLattice._read_slf_link": {
  "lineno": 203,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.log",
   "theanolm.backend.InputError",
   "theanolm.backend.logprob_type"
  ],
  "type": "function"
 },
 "theanolm.scoring.slflattice.SLFLattice._read_slf_node": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.scoring.slflattice._split_slf_field": {
  "lineno": 37,
  "symbols_in_volume": [
   "theanolm.backend.InputError"
  ],
  "type": "function"
 },
 "theanolm.scoring.slflattice._split_slf_line": {
  "lineno": 15,
  "symbols_in_volume": [
   "shlex.shlex"
  ],
  "type": "function"
 },
 "theanolm.scoring.textscorer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.scoring.textscorer.TextScorer": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "theanolm.scoring.textscorer.TextScorer.__init__": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.int8",
   "theano.config.floatX",
   "theano.function",
   "theano.tensor.cast",
   "theano.tensor.ge",
   "theano.tensor.log",
   "theano.tensor.lt",
   "theano.tensor.matrix",
   "theano.tensor.neq",
   "theano.tensor.set_subtensor",
   "theano.tensor.switch",
   "theanolm.backend.test_value"
  ],
  "type": "function"
 },
 "theanolm.scoring.textscorer.TextScorer._debug_log_batch": {
  "lineno": 346,
  "symbols_in_volume": [
   "logging.debug",
   "theano.config.floatX"
  ],
  "type": "function"
 },
 "theanolm.scoring.textscorer.TextScorer.compute_perplexity": {
  "lineno": 199,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.isnan",
   "numpy.isneginf",
   "theano.config.floatX",
   "theanolm.backend.NumberError"
  ],
  "type": "function"
 },
 "theanolm.scoring.textscorer.TextScorer.score_batch": {
  "lineno": 144,
  "symbols_in_volume": [
   "theano.config.floatX"
  ],
  "type": "function"
 },
 "theanolm.scoring.textscorer.TextScorer.score_line": {
  "lineno": 305,
  "symbols_in_volume": [
   "numpy.count_nonzero",
   "theanolm.parsing.utterance_from_line"
  ],
  "type": "function"
 },
 "theanolm.scoring.textscorer.TextScorer.score_sequence": {
  "lineno": 256,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.int8",
   "numpy.isnan",
   "numpy.isneginf",
   "numpy.newaxis",
   "numpy.ones",
   "numpy.transpose",
   "theano.config.floatX",
   "theanolm.backend.NumberError"
  ],
  "type": "function"
 },
 "theanolm.textsampler": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.textsampler.TextSampler": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "theanolm.textsampler.TextSampler.__init__": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.int8",
   "numpy.zeros",
   "theano.config.compute_test_value",
   "theano.function"
  ],
  "type": "function"
 },
 "theanolm.textsampler.TextSampler.generate": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.newaxis",
   "numpy.ones",
   "theanolm.network.RecurrentState"
  ],
  "type": "function"
 },
 "theanolm.training": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.training.adadeltaoptimizer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.training.adadeltaoptimizer.AdadeltaOptimizer": {
  "lineno": 12,
  "symbols_in_volume": [
   "theanolm.training.basicoptimizer.BasicOptimizer"
  ],
  "type": "class"
 },
 "theanolm.training.adadeltaoptimizer.AdadeltaOptimizer.__init__": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.zeros_like",
   "theanolm.backend.Parameters"
  ],
  "type": "function"
 },
 "theanolm.training.adadeltaoptimizer.AdadeltaOptimizer._gradient_update_exprs": {
  "lineno": 56,
  "symbols_in_volume": [
   "theano.tensor.sqr"
  ],
  "type": "function"
 },
 "theanolm.training.adadeltaoptimizer.AdadeltaOptimizer._model_update_exprs": {
  "lineno": 69,
  "symbols_in_volume": [
   "theano.tensor.sqr",
   "theano.tensor.sqrt"
  ],
  "type": "function"
 },
 "theanolm.training.adagradoptimizer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.training.adagradoptimizer.AdaGradOptimizer": {
  "lineno": 12,
  "symbols_in_volume": [
   "theanolm.training.basicoptimizer.BasicOptimizer"
  ],
  "type": "class"
 },
 "theanolm.training.adagradoptimizer.AdaGradOptimizer.__init__": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.zeros_like",
   "theanolm.backend.Parameters"
  ],
  "type": "function"
 },
 "theanolm.training.adagradoptimizer.AdaGradOptimizer._gradient_update_exprs": {
  "lineno": 49,
  "symbols_in_volume": [
   "theano.tensor.sqr"
  ],
  "type": "function"
 },
 "theanolm.training.adagradoptimizer.AdaGradOptimizer._model_update_exprs": {
  "lineno": 60,
  "symbols_in_volume": [
   "theano.tensor.sqrt"
  ],
  "type": "function"
 },
 "theanolm.training.adamoptimizer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.training.adamoptimizer.AdamOptimizer": {
  "lineno": 13,
  "symbols_in_volume": [
   "theanolm.training.basicoptimizer.BasicOptimizer"
  ],
  "type": "class"
 },
 "theanolm.training.adamoptimizer.AdamOptimizer.__init__": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.zeros_like",
   "theano.config.floatX",
   "theanolm.backend.Parameters"
  ],
  "type": "function"
 },
 "theanolm.training.adamoptimizer.AdamOptimizer._gradient_update_exprs": {
  "lineno": 63,
  "symbols_in_volume": [
   "theano.tensor.sqr"
  ],
  "type": "function"
 },
 "theanolm.training.adamoptimizer.AdamOptimizer._model_update_exprs": {
  "lineno": 81,
  "symbols_in_volume": [
   "theano.tensor.sqrt"
  ],
  "type": "function"
 },
 "theanolm.training.basicoptimizer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.training.basicoptimizer.BasicOptimizer": {
  "lineno": 16,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "theanolm.training.basicoptimizer.BasicOptimizer.__init__": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.int64",
   "numpy.int8",
   "theano.config.floatX",
   "theano.function",
   "theano.tensor.grad",
   "theano.tensor.matrix",
   "theano.tensor.scalar",
   "theanolm.backend.test_value"
  ],
  "type": "function"
 },
 "theanolm.training.basicoptimizer.BasicOptimizer._get_blackout_cost": {
  "lineno": 257,
  "symbols_in_volume": [
   "theano.tensor.exp",
   "theano.tensor.log"
  ],
  "type": "function"
 },
 "theanolm.training.basicoptimizer.BasicOptimizer._get_nce_cost": {
  "lineno": 195,
  "symbols_in_volume": [
   "numpy.log",
   "theano.tensor.log",
   "theano.tensor.nnet.softplus"
  ],
  "type": "function"
 },
 "theanolm.training.basicoptimizer.BasicOptimizer._gradient_update_exprs": {
  "lineno": 318,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "theanolm.training.basicoptimizer.BasicOptimizer._model_update_exprs": {
  "lineno": 329,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "theanolm.training.basicoptimizer.BasicOptimizer._normalize": {
  "lineno": 343,
  "symbols_in_volume": [
   "theano.tensor.clip",
   "theano.tensor.sqr",
   "theano.tensor.sqrt",
   "theano.tensor.sum"
  ],
  "type": "function"
 },
 "theanolm.training.basicoptimizer.BasicOptimizer.get_state": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.training.basicoptimizer.BasicOptimizer.set_state": {
  "lineno": 138,
  "symbols_in_volume": [
   "theanolm.backend.IncompatibleStateError"
  ],
  "type": "function"
 },
 "theanolm.training.basicoptimizer.BasicOptimizer.update_minibatch": {
  "lineno": 159,
  "symbols_in_volume": [
   "numpy.dtype",
   "theano.config.floatX"
  ],
  "type": "function"
 },
 "theanolm.training.cost": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.training.cost.BlackoutCost": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "class"
 },
 "theanolm.training.cost.BlackoutCost.__init__": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.training.cost.BlackoutCost._get_logprobs": {
  "lineno": 198,
  "symbols_in_volume": [
   "theano.tensor.exp",
   "theano.tensor.log"
  ],
  "type": "function"
 },
 "theanolm.training.cost.Cost": {
  "lineno": 16,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "theanolm.training.cost.Cost.__init__": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.training.cost.Cost._get_logprobs": {
  "lineno": 40,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "theanolm.training.cost.Cost.get_tensor": {
  "lineno": 52,
  "symbols_in_volume": [
   "theano.config.floatX",
   "theano.tensor.cast",
   "theano.tensor.neq"
  ],
  "type": "function"
 },
 "theanolm.training.cost.CrossEntropyCost": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "class"
 },
 "theanolm.training.cost.CrossEntropyCost.__init__": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.training.cost.CrossEntropyCost._get_logprobs": {
  "lineno": 98,
  "symbols_in_volume": [
   "theano.tensor.log"
  ],
  "type": "function"
 },
 "theanolm.training.cost.NCECost": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "class"
 },
 "theanolm.training.cost.NCECost.__init__": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.training.cost.NCECost._get_logprobs": {
  "lineno": 136,
  "symbols_in_volume": [
   "theano.tensor.log",
   "theano.tensor.nnet.softplus"
  ],
  "type": "function"
 },
 "theanolm.training.create_optimizer": {
  "lineno": 16,
  "symbols_in_volume": [
   "theanolm.training.adadeltaoptimizer.AdadeltaOptimizer",
   "theanolm.training.adagradoptimizer.AdaGradOptimizer",
   "theanolm.training.adamoptimizer.AdamOptimizer",
   "theanolm.training.nesterovoptimizer.NesterovOptimizer",
   "theanolm.training.rmspropnesterovoptimizer.RMSPropNesterovOptimizer",
   "theanolm.training.rmspropsgdoptimizer.RMSPropSGDOptimizer",
   "theanolm.training.sgdoptimizer.SGDOptimizer"
  ],
  "type": "function"
 },
 "theanolm.training.nesterovoptimizer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.training.nesterovoptimizer.NesterovOptimizer": {
  "lineno": 11,
  "symbols_in_volume": [
   "theanolm.training.basicoptimizer.BasicOptimizer"
  ],
  "type": "class"
 },
 "theanolm.training.nesterovoptimizer.NesterovOptimizer.__init__": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.zeros_like",
   "theanolm.backend.Parameters"
  ],
  "type": "function"
 },
 "theanolm.training.nesterovoptimizer.NesterovOptimizer._gradient_update_exprs": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.training.nesterovoptimizer.NesterovOptimizer._model_update_exprs": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.training.rmspropnesterovoptimizer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.training.rmspropnesterovoptimizer.RMSPropNesterovOptimizer": {
  "lineno": 12,
  "symbols_in_volume": [
   "theanolm.training.basicoptimizer.BasicOptimizer"
  ],
  "type": "class"
 },
 "theanolm.training.rmspropnesterovoptimizer.RMSPropNesterovOptimizer.__init__": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.ones_like",
   "numpy.zeros_like",
   "theanolm.backend.Parameters"
  ],
  "type": "function"
 },
 "theanolm.training.rmspropnesterovoptimizer.RMSPropNesterovOptimizer._gradient_update_exprs": {
  "lineno": 71,
  "symbols_in_volume": [
   "theano.tensor.sqr"
  ],
  "type": "function"
 },
 "theanolm.training.rmspropnesterovoptimizer.RMSPropNesterovOptimizer._model_update_exprs": {
  "lineno": 84,
  "symbols_in_volume": [
   "theano.tensor.sqrt"
  ],
  "type": "function"
 },
 "theanolm.training.rmspropsgdoptimizer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.training.rmspropsgdoptimizer.RMSPropSGDOptimizer": {
  "lineno": 12,
  "symbols_in_volume": [
   "theanolm.training.basicoptimizer.BasicOptimizer"
  ],
  "type": "class"
 },
 "theanolm.training.rmspropsgdoptimizer.RMSPropSGDOptimizer.__init__": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.ones_like",
   "numpy.zeros_like",
   "theanolm.backend.Parameters"
  ],
  "type": "function"
 },
 "theanolm.training.rmspropsgdoptimizer.RMSPropSGDOptimizer._gradient_update_exprs": {
  "lineno": 53,
  "symbols_in_volume": [
   "theano.tensor.sqr"
  ],
  "type": "function"
 },
 "theanolm.training.rmspropsgdoptimizer.RMSPropSGDOptimizer._model_update_exprs": {
  "lineno": 66,
  "symbols_in_volume": [
   "theano.tensor.sqrt"
  ],
  "type": "function"
 },
 "theanolm.training.sgdoptimizer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.training.sgdoptimizer.SGDOptimizer": {
  "lineno": 11,
  "symbols_in_volume": [
   "theanolm.training.basicoptimizer.BasicOptimizer"
  ],
  "type": "class"
 },
 "theanolm.training.sgdoptimizer.SGDOptimizer.__init__": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.zeros_like",
   "theanolm.backend.Parameters"
  ],
  "type": "function"
 },
 "theanolm.training.sgdoptimizer.SGDOptimizer._gradient_update_exprs": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.training.sgdoptimizer.SGDOptimizer._model_update_exprs": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.training.stoppers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.training.stoppers.AnnealingCountStopper": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "class"
 },
 "theanolm.training.stoppers.AnnealingCountStopper.__init__": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.training.stoppers.AnnealingCountStopper.improvement_ceased": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.training.stoppers.AnnealingCountStopper.start_new_minibatch": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.training.stoppers.BasicStopper": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "theanolm.training.stoppers.BasicStopper.__init__": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.training.stoppers.BasicStopper.improvement_ceased": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.training.stoppers.BasicStopper.start_new_epoch": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.training.stoppers.BasicStopper.start_new_minibatch": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.training.stoppers.NoImprovementStopper": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "class"
 },
 "theanolm.training.stoppers.NoImprovementStopper.__init__": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.training.stoppers.NoImprovementStopper.improvement_ceased": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.training.stoppers.NoImprovementStopper.start_new_minibatch": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.training.stoppers.create_stopper": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.training.trainer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.training.trainer.Trainer": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "theanolm.training.trainer.Trainer.__init__": {
  "lineno": 26,
  "symbols_in_volume": [
   "logging.debug",
   "numpy.asarray",
   "numpy.log",
   "numpy.median",
   "sys.stdout.flush",
   "theanolm.parsing.LinearBatchIterator",
   "theanolm.parsing.ShufflingBatchIterator",
   "theanolm.training.stoppers.create_stopper"
  ],
  "type": "function"
 },
 "theanolm.training.trainer.Trainer._decrease_learning_rate": {
  "lineno": 377,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.training.trainer.Trainer._has_improved": {
  "lineno": 397,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.training.trainer.Trainer._is_scheduled": {
  "lineno": 564,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.training.trainer.Trainer._log_update": {
  "lineno": 417,
  "symbols_in_volume": [
   "logging.info"
  ],
  "type": "function"
 },
 "theanolm.training.trainer.Trainer._log_validation": {
  "lineno": 429,
  "symbols_in_volume": [
   "logging.debug"
  ],
  "type": "function"
 },
 "theanolm.training.trainer.Trainer._reset_state": {
  "lineno": 285,
  "symbols_in_volume": [
   "logging.info",
   "numpy.asarray",
   "theano.config.floatX",
   "theanolm.backend.IncompatibleStateError"
  ],
  "type": "function"
 },
 "theanolm.training.trainer.Trainer._set_candidate_state": {
  "lineno": 442,
  "symbols_in_volume": [
   "logging.info"
  ],
  "type": "function"
 },
 "theanolm.training.trainer.Trainer._validate": {
  "lineno": 471,
  "symbols_in_volume": [
   "h5py.File",
   "logging.debug",
   "numpy.append"
  ],
  "type": "function"
 },
 "theanolm.training.trainer.Trainer.candidate_cost": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.training.trainer.Trainer.get_state": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.training.trainer.Trainer.initialize": {
  "lineno": 162,
  "symbols_in_volume": [
   "numpy.asarray",
   "sys.stdout.flush",
   "theano.config.floatX"
  ],
  "type": "function"
 },
 "theanolm.training.trainer.Trainer.num_validations": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.training.trainer.Trainer.set_logging": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.training.trainer.Trainer.set_validation": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.training.trainer.Trainer.train": {
  "lineno": 198,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "theanolm.training.trainer.Trainer.validations_since_candidate": {
  "lineno": 348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.vocabulary": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.vocabulary.statistics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.vocabulary.statistics.BigramStatistics": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "class"
 },
 "theanolm.vocabulary.statistics.BigramStatistics.__init__": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.zeros",
   "scipy.sparse.dok_matrix",
   "theanolm.parsing.utterance_from_line"
  ],
  "type": "function"
 },
 "theanolm.vocabulary.statistics.compute_word_counts": {
  "lineno": 12,
  "symbols_in_volume": [
   "theanolm.parsing.utterance_from_line"
  ],
  "type": "function"
 },
 "theanolm.vocabulary.vocabulary": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.vocabulary.vocabulary.Vocabulary": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "class"
 },
 "theanolm.vocabulary.vocabulary.Vocabulary.__contains__": {
  "lineno": 620,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.vocabulary.vocabulary.Vocabulary.__init__": {
  "lineno": 73,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "theanolm.vocabulary.vocabulary.Vocabulary.class_ids_to_word_ids": {
  "lineno": 493,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.vocabulary.vocabulary.Vocabulary.compute_probs": {
  "lineno": 337,
  "symbols_in_volume": [
   "logging.debug",
   "numpy.log",
   "numpy.zeros",
   "theano.config.floatX"
  ],
  "type": "function"
 },
 "theanolm.vocabulary.vocabulary.Vocabulary.from_file": {
  "lineno": 120,
  "symbols_in_volume": [
   "theanolm.backend.InputError",
   "theanolm.vocabulary.wordclass.WordClass"
  ],
  "type": "function"
 },
 "theanolm.vocabulary.vocabulary.Vocabulary.from_state": {
  "lineno": 276,
  "symbols_in_volume": [
   "logging.debug",
   "numpy.log",
   "theanolm.backend.IncompatibleStateError",
   "theanolm.vocabulary.wordclass.WordClass"
  ],
  "type": "function"
 },
 "theanolm.vocabulary.vocabulary.Vocabulary.from_word_counts": {
  "lineno": 218,
  "symbols_in_volume": [
   "theanolm.vocabulary.wordclass.WordClass"
  ],
  "type": "function"
 },
 "theanolm.vocabulary.vocabulary.Vocabulary.get_class_memberships": {
  "lineno": 521,
  "symbols_in_volume": [
   "numpy.copy",
   "numpy.vectorize"
  ],
  "type": "function"
 },
 "theanolm.vocabulary.vocabulary.Vocabulary.get_class_probs": {
  "lineno": 600,
  "symbols_in_volume": [
   "numpy.add.at",
   "numpy.zeros",
   "theano.config.floatX"
  ],
  "type": "function"
 },
 "theanolm.vocabulary.vocabulary.Vocabulary.get_oos_probs": {
  "lineno": 576,
  "symbols_in_volume": [
   "numpy.copy"
  ],
  "type": "function"
 },
 "theanolm.vocabulary.vocabulary.Vocabulary.get_state": {
  "lineno": 399,
  "symbols_in_volume": [
   "h5py.special_dtype"
  ],
  "type": "function"
 },
 "theanolm.vocabulary.vocabulary.Vocabulary.get_word_prob": {
  "lineno": 507,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.vocabulary.vocabulary.Vocabulary.has_unigram_probs": {
  "lineno": 565,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.vocabulary.vocabulary.Vocabulary.in_shortlist": {
  "lineno": 553,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.vocabulary.vocabulary.Vocabulary.num_classes": {
  "lineno": 465,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.vocabulary.vocabulary.Vocabulary.num_shortlist_words": {
  "lineno": 455,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.vocabulary.vocabulary.Vocabulary.num_words": {
  "lineno": 445,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.vocabulary.vocabulary.Vocabulary.words": {
  "lineno": 543,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.vocabulary.vocabulary.Vocabulary.words_to_ids": {
  "lineno": 474,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "theanolm.vocabulary.vocabulary._add_special_tokens": {
  "lineno": 16,
  "symbols_in_volume": [
   "theanolm.vocabulary.wordclass.WordClass"
  ],
  "type": "function"
 },
 "theanolm.vocabulary.wordclass": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "theanolm.vocabulary.wordclass.WordClass": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "theanolm.vocabulary.wordclass.WordClass.__eq__": {
  "lineno": 119,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "theanolm.vocabulary.wordclass.WordClass.__init__": {
  "lineno": 22,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "theanolm.vocabulary.wordclass.WordClass.__iter__": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.vocabulary.wordclass.WordClass.__len__": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.vocabulary.wordclass.WordClass.__ne__": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.vocabulary.wordclass.WordClass.__str__": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.vocabulary.wordclass.WordClass.add": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.vocabulary.wordclass.WordClass.get_prob": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.vocabulary.wordclass.WordClass.normalize_probs": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "theanolm.vocabulary.wordclass.WordClass.sample": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.flatnonzero",
   "numpy.random.multinomial"
  ],
  "type": "function"
 },
 "theanolm.vocabulary.wordclass.WordClass.set_prob": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "wordclasses": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "wordclasses.bigramoptimizer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "wordclasses.bigramoptimizer.BigramOptimizer": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "wordclasses.bigramoptimizer.BigramOptimizer.__init__": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "wordclasses.bigramoptimizer.BigramOptimizer._class_size": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "wordclasses.bigramoptimizer.BigramOptimizer._compute_class_statistics": {
  "lineno": 53,
  "symbols_in_volume": [
   "logging.debug",
   "numpy.add.at",
   "numpy.zeros",
   "wordclasses.functions.byte_size"
  ],
  "type": "function"
 },
 "wordclasses.bigramoptimizer.BigramOptimizer._evaluate": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "wordclasses.bigramoptimizer.BigramOptimizer._find_best_move": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.inf"
  ],
  "type": "function"
 },
 "wordclasses.bigramoptimizer.BigramOptimizer._move": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "wordclasses.bigramoptimizer.BigramOptimizer.get_word_class": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "wordclasses.bigramoptimizer.BigramOptimizer.get_word_id": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "wordclasses.bigramoptimizer.BigramOptimizer.get_word_prob": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "wordclasses.bigramoptimizer.BigramOptimizer.log_likelihood": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "wordclasses.bigramoptimizer.BigramOptimizer.move_to_best_class": {
  "lineno": 29,
  "symbols_in_volume": [
   "logging.debug"
  ],
  "type": "function"
 },
 "wordclasses.bigramoptimizer.BigramOptimizer.words": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "wordclasses.functions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "wordclasses.functions.byte_size": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "function"
 },
 "wordclasses.functions.is_scheduled": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "wordclasses.numpybigramoptimizer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "wordclasses.numpybigramoptimizer.NumpyBigramOptimizer": {
  "lineno": 9,
  "symbols_in_volume": [
   "wordclasses.bigramoptimizer.BigramOptimizer"
  ],
  "type": "class"
 },
 "wordclasses.numpybigramoptimizer.NumpyBigramOptimizer.__init__": {
  "lineno": 13,
  "symbols_in_volume": [
   "logging.debug",
   "logging.info",
   "numpy.array",
   "wordclasses.functions.byte_size"
  ],
  "type": "function"
 },
 "wordclasses.numpybigramoptimizer.NumpyBigramOptimizer._class_size": {
  "lineno": 225,
  "symbols_in_volume": [
   "numpy.count_nonzero"
  ],
  "type": "function"
 },
 "wordclasses.numpybigramoptimizer.NumpyBigramOptimizer._evaluate": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.log",
   "numpy.ma.log"
  ],
  "type": "function"
 },
 "wordclasses.numpybigramoptimizer.NumpyBigramOptimizer._ll_change": {
  "lineno": 175,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "wordclasses.numpybigramoptimizer.NumpyBigramOptimizer._move": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.add.at",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "wordclasses.numpybigramoptimizer.NumpyBigramOptimizer.get_word_class": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "wordclasses.numpybigramoptimizer.NumpyBigramOptimizer.get_word_prob": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "wordclasses.numpybigramoptimizer.NumpyBigramOptimizer.log_likelihood": {
  "lineno": 81,
  "symbols_in_volume": [
   "numpy.ma.log"
  ],
  "type": "function"
 },
 "wordclasses.theanobigramoptimizer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "wordclasses.theanobigramoptimizer.TheanoBigramOptimizer": {
  "lineno": 12,
  "symbols_in_volume": [
   "wordclasses.bigramoptimizer.BigramOptimizer"
  ],
  "type": "class"
 },
 "wordclasses.theanobigramoptimizer.TheanoBigramOptimizer.__init__": {
  "lineno": 16,
  "symbols_in_volume": [
   "logging.debug",
   "logging.info",
   "numpy.array",
   "theano.shared",
   "wordclasses.functions.byte_size"
  ],
  "type": "function"
 },
 "wordclasses.theanobigramoptimizer.TheanoBigramOptimizer._create_class_size_function": {
  "lineno": 287,
  "symbols_in_volume": [
   "theano.function",
   "theano.tensor.eq",
   "theano.tensor.scalar"
  ],
  "type": "function"
 },
 "wordclasses.theanobigramoptimizer.TheanoBigramOptimizer._create_evaluate_function": {
  "lineno": 105,
  "symbols_in_volume": [
   "theano.function",
   "theano.tensor.arange",
   "theano.tensor.log",
   "theano.tensor.neq",
   "theano.tensor.scalar"
  ],
  "type": "function"
 },
 "wordclasses.theanobigramoptimizer.TheanoBigramOptimizer._create_get_word_prob_function": {
  "lineno": 85,
  "symbols_in_volume": [
   "theano.function",
   "theano.tensor.neq",
   "theano.tensor.scalar",
   "theano.tensor.switch"
  ],
  "type": "function"
 },
 "wordclasses.theanobigramoptimizer.TheanoBigramOptimizer._create_log_likelihood_function": {
  "lineno": 273,
  "symbols_in_volume": [
   "theano.function"
  ],
  "type": "function"
 },
 "wordclasses.theanobigramoptimizer.TheanoBigramOptimizer._create_move_function": {
  "lineno": 199,
  "symbols_in_volume": [
   "theano.function",
   "theano.sparse.csm_properties",
   "theano.tensor.inc_subtensor",
   "theano.tensor.neq",
   "theano.tensor.scalar",
   "theano.tensor.set_subtensor"
  ],
  "type": "function"
 },
 "wordclasses.theanobigramoptimizer.TheanoBigramOptimizer._ll_change": {
  "lineno": 307,
  "symbols_in_volume": [
   "theano.tensor.log"
  ],
  "type": "function"
 },
 "wordclasses.theanobigramoptimizer.TheanoBigramOptimizer._xlogx": {
  "lineno": 320,
  "symbols_in_volume": [
   "theano.tensor.log",
   "theano.tensor.neq",
   "theano.tensor.switch"
  ],
  "type": "function"
 },
 "wordclasses.theanobigramoptimizer.TheanoBigramOptimizer.get_word_class": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "wordclasses.wctool": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "wordclasses.wctool.main": {
  "lineno": 40,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "logging",
   "logging.basicConfig",
   "logging.info",
   "sys.stdout",
   "theanolm.backend.TextFileType",
   "theanolm.vocabulary.BigramStatistics",
   "theanolm.vocabulary.Vocabulary.from_file",
   "theanolm.vocabulary.Vocabulary.from_word_counts",
   "theanolm.vocabulary.compute_word_counts",
   "time.time",
   "wordclasses.NumpyBigramOptimizer",
   "wordclasses.TheanoBigramOptimizer",
   "wordclasses.functions.is_scheduled"
  ],
  "type": "function"
 },
 "wordclasses.wctool.save": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 }
}