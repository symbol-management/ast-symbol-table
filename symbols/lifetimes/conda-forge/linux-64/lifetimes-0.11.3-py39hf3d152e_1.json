{
 "lifetimes": {
  "data": {},
  "type": "module"
 },
 "lifetimes.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "lifetimes.datasets": {
  "data": {},
  "type": "module"
 },
 "lifetimes.datasets.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "lifetimes.datasets.load_cdnow_summary": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "lifetimes.datasets.load_dataset"
   ]
  },
  "type": "function"
 },
 "lifetimes.datasets.load_cdnow_summary_data_with_monetary_value": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "lifetimes.datasets.load_dataset"
   ]
  },
  "type": "function"
 },
 "lifetimes.datasets.load_dataset": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pandas.read_csv",
    "pkg_resources.resource_filename"
   ]
  },
  "type": "function"
 },
 "lifetimes.datasets.load_donations": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "lifetimes.datasets.load_dataset"
   ]
  },
  "type": "function"
 },
 "lifetimes.datasets.load_transaction_data": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "lifetimes.datasets.load_dataset"
   ]
  },
  "type": "function"
 },
 "lifetimes.datasets.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "lifetimes.datasets.resource_filename": {
  "data": {
   "shadows": "pkg_resources.resource_filename"
  },
  "type": "import"
 },
 "lifetimes.fitters": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "lifetimes.fitters.warnings"
   ]
  },
  "type": "module"
 },
 "lifetimes.fitters.BaseFitter": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "lifetimes.fitters.BaseFitter.__repr__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "AttributeError",
    "sorted"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.BaseFitter._compute_confidence_intervals": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.BaseFitter._compute_standard_errors": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.sqrt",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.BaseFitter._compute_variance_matrix": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "numpy.linalg.inv",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.BaseFitter._fit": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ConvergenceError",
    "autograd.hessian",
    "autograd.value_and_grad",
    "numpy.ones",
    "print",
    "scipy.optimize.minimize",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.BaseFitter._unload_params": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.BaseFitter.load_model": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "lifetimes.fitters.dill",
    "open"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.BaseFitter.save_model": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "_save_obj_without_attr"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.BaseFitter.summary": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "property"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.beta_geo_beta_binom_fitter": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "lifetimes.fitters.beta_geo_beta_binom_fitter.warnings"
   ]
  },
  "type": "module"
 },
 "lifetimes.fitters.beta_geo_beta_binom_fitter.BetaGeoBetaBinomFitter": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "lifetimes.fitters.beta_geo_beta_binom_fitter.BetaGeoBetaBinomFitter.__init__": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "lifetimes.fitters.beta_geo_beta_binom_fitter.BetaGeoBetaBinomFitter._loglikelihood": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "FutureWarning",
    "autograd.numpy.log",
    "autograd.numpy.logaddexp",
    "autograd.scipy.special.beta",
    "autograd.scipy.special.betaln",
    "lifetimes.fitters.beta_geo_beta_binom_fitter.warnings",
    "numpy.arange",
    "numpy.ones_like",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.beta_geo_beta_binom_fitter.BetaGeoBetaBinomFitter._negative_log_likelihood": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "autograd.numpy.exp",
    "lifetimes.fitters.beta_geo_beta_binom_fitter.BetaGeoBetaBinomFitter",
    "staticmethod",
    "sum"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.beta_geo_beta_binom_fitter.BetaGeoBetaBinomFitter.conditional_expected_number_of_purchases_up_to_time": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "autograd.numpy.exp",
    "autograd.scipy.special.beta",
    "autograd.scipy.special.betaln",
    "autograd.scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.beta_geo_beta_binom_fitter.BetaGeoBetaBinomFitter.conditional_probability_alive": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "autograd.numpy.exp",
    "autograd.scipy.special.beta",
    "autograd.scipy.special.betaln"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.beta_geo_beta_binom_fitter.BetaGeoBetaBinomFitter.expected_number_of_transactions_in_first_n_periods": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "autograd.numpy.exp",
    "autograd.scipy.special.beta",
    "autograd.scipy.special.betaln",
    "numpy.arange",
    "numpy.asarray",
    "numpy.fromfunction",
    "pandas.DataFrame",
    "pandas.Index",
    "scipy.special.binom"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.beta_geo_beta_binom_fitter.BetaGeoBetaBinomFitter.expected_number_of_transactions_in_first_n_periods.p2": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "autograd.numpy.exp",
    "autograd.scipy.special.beta",
    "autograd.scipy.special.betaln",
    "int",
    "numpy.sum",
    "numpy.vectorize",
    "scipy.special.binom"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.beta_geo_beta_binom_fitter.BetaGeoBetaBinomFitter.fit": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "_check_inputs",
    "beta_geometric_beta_binom_model",
    "int",
    "numpy.array",
    "numpy.asarray",
    "numpy.exp",
    "numpy.ones_like",
    "pandas.DataFrame",
    "pandas.Series",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.beta_geo_beta_binom_fitter.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "lifetimes.fitters.beta_geo_beta_binom_fitter.betaf": {
  "data": {
   "shadows": "autograd.scipy.special.beta"
  },
  "type": "import"
 },
 "lifetimes.fitters.beta_geo_beta_binom_fitter.betaln": {
  "data": {
   "shadows": "autograd.scipy.special.betaln"
  },
  "type": "import"
 },
 "lifetimes.fitters.beta_geo_beta_binom_fitter.binom": {
  "data": {
   "shadows": "scipy.special.binom"
  },
  "type": "import"
 },
 "lifetimes.fitters.beta_geo_beta_binom_fitter.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "lifetimes.fitters.beta_geo_beta_binom_fitter.exp": {
  "data": {
   "shadows": "autograd.numpy.exp"
  },
  "type": "import"
 },
 "lifetimes.fitters.beta_geo_beta_binom_fitter.gammaln": {
  "data": {
   "shadows": "autograd.scipy.special.gammaln"
  },
  "type": "import"
 },
 "lifetimes.fitters.beta_geo_beta_binom_fitter.log": {
  "data": {
   "shadows": "autograd.numpy.log"
  },
  "type": "import"
 },
 "lifetimes.fitters.beta_geo_beta_binom_fitter.logaddexp": {
  "data": {
   "shadows": "autograd.numpy.logaddexp"
  },
  "type": "import"
 },
 "lifetimes.fitters.beta_geo_beta_binom_fitter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lifetimes.fitters.beta_geo_beta_binom_fitter.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "lifetimes.fitters.beta_geo_beta_binom_fitter.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "lifetimes.fitters.beta_geo_beta_binom_fitter.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "lifetimes.fitters.beta_geo_fitter": {
  "data": {},
  "type": "module"
 },
 "lifetimes.fitters.beta_geo_fitter.BetaGeoFitter": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "lifetimes.fitters.beta_geo_fitter.BetaGeoFitter.__init__": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "lifetimes.fitters.beta_geo_fitter.BetaGeoFitter._negative_log_likelihood": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "FutureWarning",
    "autograd.numpy.exp",
    "autograd.numpy.log",
    "autograd.numpy.maximum",
    "autograd.scipy.special.gammaln",
    "lifetimes.fitters.beta_geo_fitter.warnings",
    "staticmethod",
    "sum"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.beta_geo_fitter.BetaGeoFitter.conditional_expected_number_of_purchases_up_to_time": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "autograd.numpy.exp",
    "autograd.numpy.isinf",
    "autograd.numpy.log",
    "autograd.numpy.where",
    "scipy.special.hyp2f1"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.beta_geo_fitter.BetaGeoFitter.conditional_probability_alive": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "autograd.numpy.atleast_1d",
    "autograd.numpy.log",
    "autograd.numpy.maximum",
    "autograd.numpy.where",
    "scipy.special.expit"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.beta_geo_fitter.BetaGeoFitter.conditional_probability_alive_matrix": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "autograd.numpy.fromfunction",
    "int"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.beta_geo_fitter.BetaGeoFitter.expected_number_of_purchases_up_to_time": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "scipy.special.hyp2f1"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.beta_geo_fitter.BetaGeoFitter.fit": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "_check_inputs",
    "_scale_time",
    "autograd.numpy.asarray",
    "autograd.numpy.exp",
    "autograd.numpy.ones_like",
    "beta_geometric_nbd_model",
    "int",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.beta_geo_fitter.BetaGeoFitter.probability_of_n_purchases_up_to_time": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "autograd.numpy.arange",
    "autograd.scipy.special.beta",
    "autograd.scipy.special.gamma"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.beta_geo_fitter.beta": {
  "data": {
   "shadows": "autograd.scipy.special.beta"
  },
  "type": "import"
 },
 "lifetimes.fitters.beta_geo_fitter.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "lifetimes.fitters.beta_geo_fitter.expit": {
  "data": {
   "shadows": "scipy.special.expit"
  },
  "type": "import"
 },
 "lifetimes.fitters.beta_geo_fitter.gamma": {
  "data": {
   "shadows": "autograd.scipy.special.gamma"
  },
  "type": "import"
 },
 "lifetimes.fitters.beta_geo_fitter.gammaln": {
  "data": {
   "shadows": "autograd.scipy.special.gammaln"
  },
  "type": "import"
 },
 "lifetimes.fitters.beta_geo_fitter.hyp2f1": {
  "data": {
   "shadows": "scipy.special.hyp2f1"
  },
  "type": "import"
 },
 "lifetimes.fitters.beta_geo_fitter.np": {
  "data": {
   "shadows": "autograd.numpy"
  },
  "type": "import"
 },
 "lifetimes.fitters.beta_geo_fitter.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "lifetimes.fitters.beta_geo_fitter.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "lifetimes.fitters.beta_geo_fitter.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "lifetimes.fitters.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "lifetimes.fitters.dill": {
  "data": {
   "shadows": "dill"
  },
  "type": "import"
 },
 "lifetimes.fitters.gamma_gamma_fitter": {
  "data": {},
  "type": "module"
 },
 "lifetimes.fitters.gamma_gamma_fitter.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "lifetimes.fitters.gamma_gamma_fitter.GammaGammaFitter": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "lifetimes.fitters.gamma_gamma_fitter.GammaGammaFitter.__init__": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "lifetimes.fitters.gamma_gamma_fitter.GammaGammaFitter._negative_log_likelihood": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "FutureWarning",
    "autograd.numpy.exp",
    "autograd.numpy.log",
    "autograd.scipy.special.gammaln",
    "lifetimes.fitters.gamma_gamma_fitter.warnings",
    "staticmethod",
    "sum"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.gamma_gamma_fitter.GammaGammaFitter.conditional_expected_average_profit": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "lifetimes.fitters.gamma_gamma_fitter.GammaGammaFitter.customer_lifetime_value": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "_customer_lifetime_value"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.gamma_gamma_fitter.GammaGammaFitter.fit": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "_check_inputs",
    "autograd.numpy.asarray",
    "autograd.numpy.exp",
    "autograd.numpy.ones_like",
    "float",
    "int",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.gamma_gamma_fitter.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "lifetimes.fitters.gamma_gamma_fitter.gammaln": {
  "data": {
   "shadows": "autograd.scipy.special.gammaln"
  },
  "type": "import"
 },
 "lifetimes.fitters.gamma_gamma_fitter.np": {
  "data": {
   "shadows": "autograd.numpy"
  },
  "type": "import"
 },
 "lifetimes.fitters.gamma_gamma_fitter.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "lifetimes.fitters.gamma_gamma_fitter.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "lifetimes.fitters.gamma_gamma_fitter.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "lifetimes.fitters.hessian": {
  "data": {
   "shadows": "autograd.hessian"
  },
  "type": "import"
 },
 "lifetimes.fitters.minimize": {
  "data": {
   "shadows": "scipy.optimize.minimize"
  },
  "type": "import"
 },
 "lifetimes.fitters.modified_beta_geo_fitter": {
  "data": {},
  "type": "module"
 },
 "lifetimes.fitters.modified_beta_geo_fitter.BetaGeoFitter": {
  "data": {
   "shadows": "lifetimes.BetaGeoFitter"
  },
  "type": "import"
 },
 "lifetimes.fitters.modified_beta_geo_fitter.ModifiedBetaGeoFitter": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "lifetimes.BetaGeoFitter"
   ]
  },
  "type": "class"
 },
 "lifetimes.fitters.modified_beta_geo_fitter.ModifiedBetaGeoFitter.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "lifetimes.fitters.modified_beta_geo_fitter.ModifiedBetaGeoFitter",
    "super"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.modified_beta_geo_fitter.ModifiedBetaGeoFitter._negative_log_likelihood": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "FutureWarning",
    "autograd.numpy.exp",
    "autograd.numpy.log",
    "autograd.numpy.logaddexp",
    "autograd.scipy.special.gammaln",
    "lifetimes.fitters.modified_beta_geo_fitter.warnings",
    "staticmethod",
    "sum"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.modified_beta_geo_fitter.ModifiedBetaGeoFitter.conditional_expected_number_of_purchases_up_to_time": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "scipy.special.hyp2f1"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.modified_beta_geo_fitter.ModifiedBetaGeoFitter.conditional_probability_alive": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "autograd.numpy.atleast_1d"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.modified_beta_geo_fitter.ModifiedBetaGeoFitter.expected_number_of_purchases_up_to_time": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "scipy.special.hyp2f1"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.modified_beta_geo_fitter.ModifiedBetaGeoFitter.fit": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "lifetimes.fitters.modified_beta_geo_fitter.ModifiedBetaGeoFitter",
    "lifetimes.generate_data.modified_beta_geometric_nbd_model",
    "super"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.modified_beta_geo_fitter.ModifiedBetaGeoFitter.probability_of_n_purchases_up_to_time": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "autograd.numpy.arange",
    "autograd.scipy.special.beta",
    "autograd.scipy.special.gamma"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.modified_beta_geo_fitter.beta": {
  "data": {
   "shadows": "autograd.scipy.special.beta"
  },
  "type": "import"
 },
 "lifetimes.fitters.modified_beta_geo_fitter.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "lifetimes.fitters.modified_beta_geo_fitter.gamma": {
  "data": {
   "shadows": "autograd.scipy.special.gamma"
  },
  "type": "import"
 },
 "lifetimes.fitters.modified_beta_geo_fitter.gammaln": {
  "data": {
   "shadows": "autograd.scipy.special.gammaln"
  },
  "type": "import"
 },
 "lifetimes.fitters.modified_beta_geo_fitter.hyp2f1": {
  "data": {
   "shadows": "scipy.special.hyp2f1"
  },
  "type": "import"
 },
 "lifetimes.fitters.modified_beta_geo_fitter.log": {
  "data": {
   "shadows": "autograd.numpy.log"
  },
  "type": "import"
 },
 "lifetimes.fitters.modified_beta_geo_fitter.logaddexp": {
  "data": {
   "shadows": "autograd.numpy.logaddexp"
  },
  "type": "import"
 },
 "lifetimes.fitters.modified_beta_geo_fitter.modified_beta_geometric_nbd_model": {
  "data": {
   "shadows": "lifetimes.generate_data.modified_beta_geometric_nbd_model"
  },
  "type": "import"
 },
 "lifetimes.fitters.modified_beta_geo_fitter.np": {
  "data": {
   "shadows": "autograd.numpy"
  },
  "type": "import"
 },
 "lifetimes.fitters.modified_beta_geo_fitter.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "lifetimes.fitters.modified_beta_geo_fitter.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "lifetimes.fitters.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lifetimes.fitters.pareto_nbd_fitter": {
  "data": {},
  "type": "module"
 },
 "lifetimes.fitters.pareto_nbd_fitter.BaseFitter": {
  "data": {
   "shadows": "lifetimes.fitters.BaseFitter"
  },
  "type": "import"
 },
 "lifetimes.fitters.pareto_nbd_fitter.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "lifetimes.fitters.pareto_nbd_fitter.ParetoNBDFitter": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "lifetimes.fitters.BaseFitter"
   ]
  },
  "type": "class"
 },
 "lifetimes.fitters.pareto_nbd_fitter.ParetoNBDFitter.__init__": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "lifetimes.fitters.pareto_nbd_fitter.ParetoNBDFitter._conditional_log_likelihood": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "lifetimes.fitters.pareto_nbd_fitter.ParetoNBDFitter",
    "numpy.log",
    "numpy.logaddexp",
    "scipy.special.gammaln",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.pareto_nbd_fitter.ParetoNBDFitter._fit": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "min",
    "numpy.random.normal",
    "print",
    "scipy.optimize.minimize"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.pareto_nbd_fitter.ParetoNBDFitter._log_A_0": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "numpy.log",
    "numpy.ones",
    "scipy.special.hyp2f1",
    "scipy.special.logsumexp",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.pareto_nbd_fitter.ParetoNBDFitter._negative_log_likelihood": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "lifetimes.fitters.pareto_nbd_fitter.ParetoNBDFitter",
    "numpy.any",
    "numpy.asarray",
    "numpy.inf",
    "staticmethod",
    "sum"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.pareto_nbd_fitter.ParetoNBDFitter.conditional_expected_number_of_purchases_up_to_time": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.log",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.pareto_nbd_fitter.ParetoNBDFitter.conditional_probability_alive": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.pareto_nbd_fitter.ParetoNBDFitter.conditional_probability_alive_matrix": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "numpy.arange",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.pareto_nbd_fitter.ParetoNBDFitter.conditional_probability_of_n_purchases_up_to_time": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "TypeError",
    "_log_B_three",
    "len",
    "numpy.exp",
    "numpy.log",
    "numpy.ones",
    "range",
    "scipy.special.betaln",
    "scipy.special.gammaln",
    "scipy.special.hyp2f1",
    "scipy.special.logsumexp"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.pareto_nbd_fitter.ParetoNBDFitter.conditional_probability_of_n_purchases_up_to_time._log_B_three": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "numpy.log",
    "scipy.special.betaln",
    "scipy.special.gammaln",
    "scipy.special.hyp2f1"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.pareto_nbd_fitter.ParetoNBDFitter.expected_number_of_purchases_up_to_time": {
  "data": {
   "lineno": 359
  },
  "type": "function"
 },
 "lifetimes.fitters.pareto_nbd_fitter.ParetoNBDFitter.fit": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "int",
    "lifetimes.generate_data.pareto_nbd_model",
    "lifetimes.utils._check_inputs",
    "lifetimes.utils._scale_time",
    "numpy.asarray",
    "numpy.int64",
    "numpy.ones",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "lifetimes.fitters.pareto_nbd_fitter._check_inputs": {
  "data": {
   "shadows": "lifetimes.utils._check_inputs"
  },
  "type": "import"
 },
 "lifetimes.fitters.pareto_nbd_fitter._scale_time": {
  "data": {
   "shadows": "lifetimes.utils._scale_time"
  },
  "type": "import"
 },
 "lifetimes.fitters.pareto_nbd_fitter.asarray": {
  "data": {
   "shadows": "numpy.asarray"
  },
  "type": "import"
 },
 "lifetimes.fitters.pareto_nbd_fitter.betaln": {
  "data": {
   "shadows": "scipy.special.betaln"
  },
  "type": "import"
 },
 "lifetimes.fitters.pareto_nbd_fitter.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "lifetimes.fitters.pareto_nbd_fitter.exp": {
  "data": {
   "shadows": "numpy.exp"
  },
  "type": "import"
 },
 "lifetimes.fitters.pareto_nbd_fitter.gammaln": {
  "data": {
   "shadows": "scipy.special.gammaln"
  },
  "type": "import"
 },
 "lifetimes.fitters.pareto_nbd_fitter.hyp2f1": {
  "data": {
   "shadows": "scipy.special.hyp2f1"
  },
  "type": "import"
 },
 "lifetimes.fitters.pareto_nbd_fitter.log": {
  "data": {
   "shadows": "numpy.log"
  },
  "type": "import"
 },
 "lifetimes.fitters.pareto_nbd_fitter.logaddexp": {
  "data": {
   "shadows": "numpy.logaddexp"
  },
  "type": "import"
 },
 "lifetimes.fitters.pareto_nbd_fitter.logsumexp": {
  "data": {
   "shadows": "scipy.special.logsumexp"
  },
  "type": "import"
 },
 "lifetimes.fitters.pareto_nbd_fitter.minimize": {
  "data": {
   "shadows": "scipy.optimize.minimize"
  },
  "type": "import"
 },
 "lifetimes.fitters.pareto_nbd_fitter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lifetimes.fitters.pareto_nbd_fitter.npany": {
  "data": {
   "shadows": "numpy.any"
  },
  "type": "import"
 },
 "lifetimes.fitters.pareto_nbd_fitter.pareto_nbd_model": {
  "data": {
   "shadows": "lifetimes.generate_data.pareto_nbd_model"
  },
  "type": "import"
 },
 "lifetimes.fitters.pareto_nbd_fitter.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "lifetimes.fitters.pareto_nbd_fitter.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "lifetimes.fitters.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "lifetimes.fitters.value_and_grad": {
  "data": {
   "shadows": "autograd.value_and_grad"
  },
  "type": "import"
 },
 "lifetimes.fitters.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "lifetimes.generate_data": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "lifetimes.generate_data.warnings"
   ]
  },
  "type": "module"
 },
 "lifetimes.generate_data.beta_geometric_beta_binom_model": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "numpy.asarray",
    "numpy.int64",
    "numpy.ones",
    "numpy.random.beta",
    "numpy.random.binomial",
    "numpy.zeros",
    "pandas.DataFrame",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "lifetimes.generate_data.beta_geometric_nbd_model": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.max",
    "numpy.ones",
    "numpy.random.beta",
    "numpy.random.exponential",
    "numpy.random.gamma",
    "numpy.random.random",
    "numpy.sum",
    "numpy.unique",
    "numpy.zeros",
    "pandas.DataFrame",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "lifetimes.generate_data.beta_geometric_nbd_model_transactional_data": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.asarray",
    "numpy.ones",
    "numpy.random.beta",
    "numpy.random.exponential",
    "numpy.random.gamma",
    "numpy.random.random",
    "pandas.DataFrame",
    "pandas.Timedelta",
    "pandas.to_datetime",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "lifetimes.generate_data.modified_beta_geometric_nbd_model": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.max",
    "numpy.ones",
    "numpy.random.beta",
    "numpy.random.exponential",
    "numpy.random.gamma",
    "numpy.random.random",
    "numpy.sum",
    "numpy.unique",
    "numpy.zeros",
    "pandas.DataFrame",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "lifetimes.generate_data.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lifetimes.generate_data.pareto_nbd_model": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "min",
    "numpy.array",
    "numpy.asarray",
    "numpy.max",
    "numpy.ones",
    "numpy.random.exponential",
    "numpy.random.gamma",
    "numpy.sum",
    "numpy.unique",
    "numpy.zeros",
    "pandas.DataFrame",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "lifetimes.generate_data.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "lifetimes.generate_data.random": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "lifetimes.generate_data.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "lifetimes.utils": {
  "data": {
   "symbols_in_volume": [
    "pandas.options.mode.chained_assignment"
   ]
  },
  "type": "module"
 },
 "lifetimes.utils.ConvergenceError": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "lifetimes.utils.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "lifetimes.utils._check_inputs": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "int",
    "numpy.any",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "lifetimes.utils._customer_lifetime_value": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifetimes.utils._find_first_transactions": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Period",
    "pandas.to_datetime",
    "type"
   ]
  },
  "type": "function"
 },
 "lifetimes.utils._save_obj_without_attr": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "len",
    "lifetimes.utils.dill",
    "open",
    "setattr",
    "zip"
   ]
  },
  "type": "function"
 },
 "lifetimes.utils._scale_time": {
  "data": {
   "lineno": 390
  },
  "type": "function"
 },
 "lifetimes.utils.calculate_alive_path": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.append",
    "numpy.arange",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "lifetimes.utils.calibration_and_holdout_data": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "lifetimes.utils.summary_data_from_transaction_data",
    "pandas.to_datetime",
    "to_period"
   ]
  },
  "type": "function"
 },
 "lifetimes.utils.calibration_and_holdout_data.to_period": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "lifetimes.utils.dill": {
  "data": {
   "shadows": "dill"
  },
  "type": "import"
 },
 "lifetimes.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "lifetimes.utils.expected_cumulative_transactions": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "lifetimes.utils._find_first_transactions",
    "numpy.array",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.to_datetime",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "lifetimes.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lifetimes.utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "lifetimes.utils.summary_data_from_transaction_data": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "float",
    "lifetimes.utils._find_first_transactions",
    "numpy.nan",
    "numpy.timedelta64",
    "pandas.Index",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "lifetimes.version": {
  "data": {},
  "type": "module"
 },
 "lifetimes.version.__version__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "lifetimes.version.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 }
}