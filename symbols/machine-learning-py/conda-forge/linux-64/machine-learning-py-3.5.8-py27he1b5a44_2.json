{
 "*": {
  "data": {
   "imports": [
    "numpy"
   ]
  },
  "type": "star-import"
 },
 "mlpy": {
  "data": {
   "symbols_in_volume": [
    "mlpy.__all__"
   ]
  },
  "type": "module"
 },
 "mlpy.__all__": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "mlpy.__version__": {
  "data": {
   "shadows": "v"
  },
  "type": "import"
 },
 "mlpy.bordacount": {
  "data": {},
  "type": "module"
 },
 "mlpy.bordacount.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "mlpy.bordacount.borda": {
  "data": {},
  "type": "module"
 },
 "mlpy.bordacount.borda.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mlpy.bordacount.borda.borda_count": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.int",
    "numpy.lexsort"
   ]
  },
  "type": "function"
 },
 "mlpy.bordacount.borda.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlpy.bordacount.borda.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlpy.crossval": {
  "data": {},
  "type": "module"
 },
 "mlpy.crossval.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mlpy.crossval.cv_all": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "list",
    "mlpy.crossval.itertools",
    "numpy.arange",
    "numpy.asarray",
    "numpy.setdiff1d"
   ]
  },
  "type": "function"
 },
 "mlpy.crossval.cv_kfold": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array_split",
    "numpy.asarray",
    "numpy.concatenate",
    "numpy.int",
    "numpy.min",
    "numpy.random.seed",
    "numpy.random.shuffle",
    "numpy.sum",
    "numpy.unique",
    "numpy.where",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mlpy.crossval.cv_random": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.asarray",
    "numpy.concatenate",
    "numpy.int",
    "numpy.min",
    "numpy.random.seed",
    "numpy.random.shuffle",
    "numpy.sum",
    "numpy.unique",
    "numpy.where",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mlpy.crossval.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "mlpy.crossval.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlpy.da": {
  "data": {},
  "type": "module"
 },
 "mlpy.da.DLDA": {
  "data": {
   "lineno": 150
  },
  "type": "class"
 },
 "mlpy.da.DLDA.__init__": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "mlpy.da.DLDA._prob": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mlpy.da.DLDA._score": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mlpy.da.DLDA.dprime": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "mlpy.da.DLDA.labels": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "mlpy.da.DLDA.learn": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.abs",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float",
    "numpy.int",
    "numpy.mean",
    "numpy.median",
    "numpy.sign",
    "numpy.sqrt",
    "numpy.std",
    "numpy.sum",
    "numpy.unique",
    "range"
   ]
  },
  "type": "function"
 },
 "mlpy.da.DLDA.pred": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "ValueError",
    "numpy.argmax",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float",
    "numpy.int",
    "range"
   ]
  },
  "type": "function"
 },
 "mlpy.da.DLDA.prob": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float",
    "range"
   ]
  },
  "type": "function"
 },
 "mlpy.da.DLDA.sel": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "numpy.sum",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mlpy.da.KFDAC": {
  "data": {
   "lineno": 299
  },
  "type": "class"
 },
 "mlpy.da.KFDAC.__init__": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "mlpy.da.KFDAC.alpha": {
  "data": {
   "lineno": 421
  },
  "type": "function"
 },
 "mlpy.da.KFDAC.b": {
  "data": {
   "lineno": 426
  },
  "type": "function"
 },
 "mlpy.da.KFDAC.labels": {
  "data": {
   "lineno": 387
  },
  "type": "function"
 },
 "mlpy.da.KFDAC.learn": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.asarray",
    "numpy.diag",
    "numpy.dot",
    "numpy.eye",
    "numpy.float",
    "numpy.int",
    "numpy.linalg.inv",
    "numpy.linalg.solve",
    "numpy.repeat",
    "numpy.sum",
    "numpy.unique",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mlpy.da.KFDAC.pred": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.dot",
    "numpy.float",
    "numpy.int",
    "numpy.sign",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mlpy.da.LDAC": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "mlpy.da.LDAC.__init__": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "mlpy.da.LDAC.bias": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "mlpy.da.LDAC.labels": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "mlpy.da.LDAC.learn": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.asarray",
    "numpy.dot",
    "numpy.empty",
    "numpy.float",
    "numpy.int",
    "numpy.linalg.inv",
    "numpy.log",
    "numpy.mean",
    "numpy.sum",
    "numpy.unique",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mlpy.da.LDAC.pred": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ValueError",
    "numpy.argmax",
    "numpy.asarray",
    "numpy.dot",
    "numpy.empty",
    "numpy.float",
    "range"
   ]
  },
  "type": "function"
 },
 "mlpy.da.LDAC.w": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "mlpy.da.__all__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mlpy.da.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlpy.dimred": {
  "data": {},
  "type": "module"
 },
 "mlpy.dimred.KFDA": {
  "data": {
   "lineno": 483
  },
  "type": "class"
 },
 "mlpy.dimred.KFDA.__init__": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "ValueError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "mlpy.dimred.KFDA.coeff": {
  "data": {
   "lineno": 559
  },
  "type": "function"
 },
 "mlpy.dimred.KFDA.learn": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "ValueError",
    "mlpy.dimred.kfda",
    "numpy.array",
    "numpy.asarray",
    "numpy.float",
    "numpy.int",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "mlpy.dimred.KFDA.transform": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.dot",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "mlpy.dimred.KPCA": {
  "data": {
   "lineno": 750
  },
  "type": "class"
 },
 "mlpy.dimred.KPCA.__init__": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "ValueError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "mlpy.dimred.KPCA.coeff": {
  "data": {
   "lineno": 829
  },
  "type": "function"
 },
 "mlpy.dimred.KPCA.evals": {
  "data": {
   "lineno": 836
  },
  "type": "function"
 },
 "mlpy.dimred.KPCA.learn": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "ValueError",
    "mlpy.dimred.kpca",
    "numpy.asarray",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "mlpy.dimred.KPCA.transform": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.dot",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "mlpy.dimred.LDA": {
  "data": {
   "lineno": 352
  },
  "type": "class"
 },
 "mlpy.dimred.LDA.__init__": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "mlpy.dimred.LDA.coeff": {
  "data": {
   "lineno": 412
  },
  "type": "function"
 },
 "mlpy.dimred.LDA.learn": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "ValueError",
    "mlpy.dimred.lda",
    "mlpy.dimred.lda_fast",
    "numpy.asarray",
    "numpy.float",
    "numpy.int",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "mlpy.dimred.LDA.transform": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.dot",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "mlpy.dimred.PCA": {
  "data": {
   "lineno": 566
  },
  "type": "class"
 },
 "mlpy.dimred.PCA.__init__": {
  "data": {
   "lineno": 570
  },
  "type": "function"
 },
 "mlpy.dimred.PCA.coeff": {
  "data": {
   "lineno": 650
  },
  "type": "function"
 },
 "mlpy.dimred.PCA.coeff_inv": {
  "data": {
   "lineno": 659
  },
  "type": "function"
 },
 "mlpy.dimred.PCA.evals": {
  "data": {
   "lineno": 666
  },
  "type": "function"
 },
 "mlpy.dimred.PCA.learn": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mlpy.dimred.pca",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float",
    "numpy.mean",
    "numpy.sqrt",
    "range"
   ]
  },
  "type": "function"
 },
 "mlpy.dimred.PCA.transform": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.dot",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "mlpy.dimred.PCA.transform_inv": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.dot",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "mlpy.dimred.PCAFast": {
  "data": {
   "lineno": 673
  },
  "type": "class"
 },
 "mlpy.dimred.PCAFast.__init__": {
  "data": {
   "lineno": 677
  },
  "type": "function"
 },
 "mlpy.dimred.PCAFast.coeff": {
  "data": {
   "lineno": 733
  },
  "type": "function"
 },
 "mlpy.dimred.PCAFast.coeff_inv": {
  "data": {
   "lineno": 742
  },
  "type": "function"
 },
 "mlpy.dimred.PCAFast.learn": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "ValueError",
    "mlpy.dimred.pca_fast",
    "numpy.asarray",
    "numpy.float",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "mlpy.dimred.PCAFast.transform": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.dot",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "mlpy.dimred.PCAFast.transform_inv": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.dot",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "mlpy.dimred.SRDA": {
  "data": {
   "lineno": 421
  },
  "type": "class"
 },
 "mlpy.dimred.SRDA.__init__": {
  "data": {
   "lineno": 425
  },
  "type": "function"
 },
 "mlpy.dimred.SRDA.coeff": {
  "data": {
   "lineno": 474
  },
  "type": "function"
 },
 "mlpy.dimred.SRDA.learn": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "ValueError",
    "mlpy.dimred.srda",
    "numpy.asarray",
    "numpy.float",
    "numpy.int",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "mlpy.dimred.SRDA.transform": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.dot",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "mlpy.dimred.__all__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mlpy.dimred.gso": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "mlpy.dimred.proj",
    "numpy.linalg.norm",
    "range"
   ]
  },
  "type": "function"
 },
 "mlpy.dimred.kfda": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "float",
    "numpy.diag",
    "numpy.dot",
    "numpy.eye",
    "numpy.linalg.solve",
    "numpy.repeat",
    "numpy.sum",
    "numpy.unique",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mlpy.dimred.kpca": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "len",
    "numpy.argsort",
    "numpy.linalg.eigh",
    "numpy.sqrt",
    "range"
   ]
  },
  "type": "function"
 },
 "mlpy.dimred.lda": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.cov",
    "numpy.float",
    "numpy.unique",
    "numpy.where",
    "numpy.zeros",
    "scipy.linalg.eig"
   ]
  },
  "type": "function"
 },
 "mlpy.dimred.lda_fast": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "mlpy.dimred.gso",
    "numpy.empty",
    "numpy.float",
    "numpy.unique",
    "numpy.zeros",
    "ols_base",
    "range"
   ]
  },
  "type": "function"
 },
 "mlpy.dimred.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlpy.dimred.pca": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "ValueError",
    "numpy.argsort",
    "numpy.cov",
    "numpy.linalg.eigh",
    "numpy.linalg.svd",
    "numpy.mean",
    "numpy.min",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "mlpy.dimred.pca_fast": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "int",
    "numpy.abs",
    "numpy.copy",
    "numpy.cov",
    "numpy.dot",
    "numpy.linalg.norm",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "mlpy.dimred.proj": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "mlpy.dimred.spla": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mlpy.dimred.srda": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "mlpy.dimred.gso",
    "numpy.empty",
    "numpy.float",
    "numpy.unique",
    "numpy.zeros",
    "range",
    "ridge_base"
   ]
  },
  "type": "function"
 },
 "mlpy.dimred.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlpy.elasticnet": {
  "data": {},
  "type": "module"
 },
 "mlpy.elasticnet.ElasticNet": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlpy.elasticnet.ElasticNet.__init__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "mlpy.elasticnet.ElasticNet.beta": {
  "data": {
   "lineno": 237
  },
  "type": "function"
 },
 "mlpy.elasticnet.ElasticNet.beta0": {
  "data": {
   "lineno": 243
  },
  "type": "function"
 },
 "mlpy.elasticnet.ElasticNet.iters": {
  "data": {
   "lineno": 231
  },
  "type": "function"
 },
 "mlpy.elasticnet.ElasticNet.learn": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "ValueError",
    "mlpy.elasticnet.elasticnet_base",
    "numpy.array",
    "numpy.dot",
    "numpy.float",
    "numpy.mean",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mlpy.elasticnet.ElasticNet.pred": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.dot",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "mlpy.elasticnet.ElasticNetC": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "mlpy.elasticnet.ElasticNet"
   ]
  },
  "type": "class"
 },
 "mlpy.elasticnet.ElasticNetC.__init__": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "mlpy.elasticnet.ElasticNet"
   ]
  },
  "type": "function"
 },
 "mlpy.elasticnet.ElasticNetC.bias": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "ValueError",
    "mlpy.elasticnet.ElasticNet",
    "mlpy.elasticnet.ElasticNetC",
    "super"
   ]
  },
  "type": "function"
 },
 "mlpy.elasticnet.ElasticNetC.labels": {
  "data": {
   "lineno": 337
  },
  "type": "function"
 },
 "mlpy.elasticnet.ElasticNetC.learn": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "ValueError",
    "mlpy.elasticnet.ElasticNet",
    "numpy.asarray",
    "numpy.int",
    "numpy.unique",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mlpy.elasticnet.ElasticNetC.pred": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "mlpy.elasticnet.ElasticNet",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mlpy.elasticnet.ElasticNetC.w": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "ValueError",
    "mlpy.elasticnet.ElasticNet",
    "mlpy.elasticnet.ElasticNetC",
    "super"
   ]
  },
  "type": "function"
 },
 "mlpy.elasticnet.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mlpy.elasticnet.elasticnet_base": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "mlpy.elasticnet.softt",
    "numpy.abs",
    "numpy.any",
    "numpy.asarray",
    "numpy.dot",
    "numpy.float",
    "numpy.floor",
    "numpy.linalg.eigvalsh",
    "numpy.log10",
    "numpy.max",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mlpy.elasticnet.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlpy.elasticnet.softt": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "mlpy.fastcluster": {
  "data": {},
  "type": "module"
 },
 "mlpy.fastcluster.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "mlpy.fastcluster.fasthc": {
  "data": {},
  "type": "module"
 },
 "mlpy.fastcluster.fasthc.MFastHCluster": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "mlpy.fastcluster.fasthc.MFastHCluster.Z": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "mlpy.fastcluster.fasthc.MFastHCluster.__init__": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "mlpy.fastcluster.fasthc.MFastHCluster.cut": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "scipy.cluster.hierarchy.fcluster"
   ]
  },
  "type": "function"
 },
 "mlpy.fastcluster.fasthc.MFastHCluster.linkage": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "mlpy.fastcluster.fasthc.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mlpy.fastcluster.fasthc.hierarchy": {
  "data": {
   "shadows": "scipy.cluster.hierarchy"
  },
  "type": "import"
 },
 "mlpy.fastcluster.fasthc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlpy.golub": {
  "data": {},
  "type": "module"
 },
 "mlpy.golub.Golub": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "mlpy.golub.Golub.__init__": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "mlpy.golub.Golub.labels": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "mlpy.golub.Golub.learn": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.float",
    "numpy.int",
    "numpy.mean",
    "numpy.std",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "mlpy.golub.Golub.pred": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.dot",
    "numpy.float",
    "numpy.int",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mlpy.golub.Golub.w": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "mlpy.golub.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mlpy.golub.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlpy.hcluster": {
  "data": {},
  "type": "module"
 },
 "mlpy.hcluster.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "mlpy.hcluster.hc": {
  "data": {},
  "type": "module"
 },
 "mlpy.hcluster.hc.HCluster": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "mlpy.hcluster.hc.HCluster.__init__": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "mlpy.hcluster.hc.HCluster.cut": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "mlpy.hcluster.hc.HCluster.linkage": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.asarray",
    "numpy.ceil",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "mlpy.hcluster.hc.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mlpy.hcluster.hc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlpy.hcluster.hc.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlpy.irelief": {
  "data": {},
  "type": "module"
 },
 "mlpy.irelief.IRelief": {
  "data": {
   "lineno": 169
  },
  "type": "class"
 },
 "mlpy.irelief.IRelief.__init__": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "mlpy.irelief.IRelief.learn": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "ValueError",
    "asarray",
    "float",
    "int",
    "mlpy.irelief.compute_irelief",
    "unique"
   ]
  },
  "type": "function"
 },
 "mlpy.irelief.IRelief.loops": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "mlpy.irelief.IRelief.weights": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "mlpy.irelief.SigmaError": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "mlpy.irelief.__all__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mlpy.irelief.compute_M_H": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "range",
    "where"
   ]
  },
  "type": "function"
 },
 "mlpy.irelief.compute_distance_kernel": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "float",
    "mlpy.irelief.kernel",
    "mlpy.irelief.norm_w",
    "range",
    "zeros"
   ]
  },
  "type": "function"
 },
 "mlpy.irelief.compute_gn": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "float",
    "mlpy.irelief.SigmaError",
    "range"
   ]
  },
  "type": "function"
 },
 "mlpy.irelief.compute_irelief": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "float",
    "mlpy.irelief.compute_M_H",
    "mlpy.irelief.compute_w",
    "mlpy.irelief.norm",
    "ones",
    "range"
   ]
  },
  "type": "function"
 },
 "mlpy.irelief.compute_prob": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "float",
    "mlpy.irelief.SigmaError"
   ]
  },
  "type": "function"
 },
 "mlpy.irelief.compute_w": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "abs",
    "float",
    "maximum",
    "mlpy.irelief.compute_distance_kernel",
    "mlpy.irelief.compute_gn",
    "mlpy.irelief.compute_prob",
    "mlpy.irelief.norm",
    "range",
    "zeros"
   ]
  },
  "type": "function"
 },
 "mlpy.irelief.kernel": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "exp",
    "float"
   ]
  },
  "type": "function"
 },
 "mlpy.irelief.norm": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "abs",
    "float",
    "sum"
   ]
  },
  "type": "function"
 },
 "mlpy.irelief.norm_w": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "mlpy.kernel_class": {
  "data": {},
  "type": "module"
 },
 "mlpy.kernel_class.Kernel": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "mlpy.kernel_class.KernelExponential": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "mlpy.kernel_class.Kernel"
   ]
  },
  "type": "class"
 },
 "mlpy.kernel_class.KernelExponential.__init__": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "mlpy.kernel_class.KernelExponential.kernel": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "mlpy.kernel_class.KernelGaussian": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "mlpy.kernel_class.Kernel"
   ]
  },
  "type": "class"
 },
 "mlpy.kernel_class.KernelGaussian.__init__": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "mlpy.kernel_class.KernelGaussian.kernel": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "mlpy.kernel_class.KernelLinear": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "mlpy.kernel_class.Kernel"
   ]
  },
  "type": "class"
 },
 "mlpy.kernel_class.KernelLinear.__init__": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "mlpy.kernel_class.KernelLinear.kernel": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "mlpy.kernel_class.KernelPolynomial": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "mlpy.kernel_class.Kernel"
   ]
  },
  "type": "class"
 },
 "mlpy.kernel_class.KernelPolynomial.__init__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "mlpy.kernel_class.KernelPolynomial.kernel": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "mlpy.kernel_class.KernelSigmoid": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "mlpy.kernel_class.Kernel"
   ]
  },
  "type": "class"
 },
 "mlpy.kernel_class.KernelSigmoid.__init__": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "mlpy.kernel_class.KernelSigmoid.kernel": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "mlpy.kernel_class.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mlpy.kernel_class.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlpy.lars": {
  "data": {},
  "type": "module"
 },
 "mlpy.lars.LARS": {
  "data": {
   "lineno": 109
  },
  "type": "class"
 },
 "mlpy.lars.LARS.__init__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "mlpy.lars.LARS.active": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "mlpy.lars.LARS.beta": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "mlpy.lars.LARS.beta0": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "mlpy.lars.LARS.est": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "mlpy.lars.LARS.learn": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "ValueError",
    "mlpy.lars.lars_base",
    "numpy.array",
    "numpy.copy",
    "numpy.dot",
    "numpy.float",
    "numpy.mean",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mlpy.lars.LARS.pred": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.dot",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "mlpy.lars.LARS.steps": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "mlpy.lars.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mlpy.lars.lars_base": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.argmax",
    "numpy.asarray",
    "numpy.concatenate",
    "numpy.dot",
    "numpy.float",
    "numpy.linalg.inv",
    "numpy.min",
    "numpy.ones",
    "numpy.sign",
    "numpy.sum",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mlpy.lars.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlpy.metrics": {
  "data": {},
  "type": "module"
 },
 "mlpy.metrics.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mlpy.metrics.accuracy": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.asarray",
    "numpy.int"
   ]
  },
  "type": "function"
 },
 "mlpy.metrics.auc_wmw": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "mlpy.metrics.is_binary",
    "numpy.asarray",
    "numpy.float",
    "numpy.int",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mlpy.metrics.error": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.asarray",
    "numpy.int"
   ]
  },
  "type": "function"
 },
 "mlpy.metrics.error_n": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "mlpy.metrics.false_pos",
    "mlpy.metrics.is_binary",
    "mlpy.metrics.true_neg",
    "numpy.asarray",
    "numpy.int"
   ]
  },
  "type": "function"
 },
 "mlpy.metrics.error_p": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "mlpy.metrics.false_neg",
    "mlpy.metrics.is_binary",
    "mlpy.metrics.true_pos",
    "numpy.asarray",
    "numpy.int"
   ]
  },
  "type": "function"
 },
 "mlpy.metrics.false_neg": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "mlpy.metrics.false_pos": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "mlpy.metrics.is_binary": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "mlpy.metrics.mcc": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "ValueError",
    "mlpy.metrics.false_neg",
    "mlpy.metrics.false_pos",
    "mlpy.metrics.is_binary",
    "mlpy.metrics.true_neg",
    "mlpy.metrics.true_pos",
    "numpy.asarray",
    "numpy.float",
    "numpy.int",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "mlpy.metrics.mse": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.float",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mlpy.metrics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlpy.metrics.npv": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "mlpy.metrics.false_neg",
    "mlpy.metrics.is_binary",
    "mlpy.metrics.true_neg",
    "numpy.asarray",
    "numpy.int"
   ]
  },
  "type": "function"
 },
 "mlpy.metrics.ppv": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "mlpy.metrics.false_pos",
    "mlpy.metrics.is_binary",
    "mlpy.metrics.true_pos",
    "numpy.asarray",
    "numpy.int"
   ]
  },
  "type": "function"
 },
 "mlpy.metrics.r2": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.float",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mlpy.metrics.r2_corr": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.corrcoef",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "mlpy.metrics.sensitivity": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "mlpy.metrics.false_neg",
    "mlpy.metrics.is_binary",
    "mlpy.metrics.true_pos",
    "numpy.asarray",
    "numpy.int"
   ]
  },
  "type": "function"
 },
 "mlpy.metrics.specificity": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "mlpy.metrics.false_pos",
    "mlpy.metrics.is_binary",
    "mlpy.metrics.true_neg",
    "numpy.asarray",
    "numpy.int"
   ]
  },
  "type": "function"
 },
 "mlpy.metrics.true_neg": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "mlpy.metrics.true_pos": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "mlpy.ols": {
  "data": {},
  "type": "module"
 },
 "mlpy.ols.OLS": {
  "data": {
   "lineno": 51
  },
  "type": "class"
 },
 "mlpy.ols.OLS.__init__": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "mlpy.ols.OLS.beta": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "mlpy.ols.OLS.beta0": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "mlpy.ols.OLS.learn": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ValueError",
    "mlpy.ols.ols_base",
    "numpy.array",
    "numpy.asarray",
    "numpy.concatenate",
    "numpy.float",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "mlpy.ols.OLS.pred": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.dot",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "mlpy.ols.OLS.rank": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "mlpy.ols.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mlpy.ols.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlpy.ols.ols_base": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.linalg.lstsq"
   ]
  },
  "type": "function"
 },
 "mlpy.parzen": {
  "data": {},
  "type": "module"
 },
 "mlpy.parzen.Parzen": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "mlpy.parzen.Parzen.__init__": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "mlpy.parzen.Parzen.alpha": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "mlpy.parzen.Parzen.b": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "mlpy.parzen.Parzen.labels": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "mlpy.parzen.Parzen.learn": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.dot",
    "numpy.float",
    "numpy.int",
    "numpy.sum",
    "numpy.unique",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mlpy.parzen.Parzen.pred": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.dot",
    "numpy.float",
    "numpy.int",
    "numpy.sign",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mlpy.parzen.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mlpy.parzen.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlpy.perceptron": {
  "data": {},
  "type": "module"
 },
 "mlpy.perceptron.Perceptron": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "mlpy.perceptron.Perceptron.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "mlpy.perceptron.Perceptron.bias": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "mlpy.perceptron.Perceptron.err": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "mlpy.perceptron.Perceptron.iters": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "mlpy.perceptron.Perceptron.labels": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "mlpy.perceptron.Perceptron.learn": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.asarray",
    "numpy.dot",
    "numpy.float",
    "numpy.int",
    "numpy.sum",
    "numpy.unique",
    "numpy.where",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mlpy.perceptron.Perceptron.pred": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.dot",
    "numpy.float",
    "numpy.int",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mlpy.perceptron.Perceptron.w": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "mlpy.perceptron.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mlpy.perceptron.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlpy.pls": {
  "data": {},
  "type": "module"
 },
 "mlpy.pls.PLS": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "mlpy.pls.PLS.__init__": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "mlpy.pls.PLS.beta": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "mlpy.pls.PLS.beta0": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "mlpy.pls.PLS.learn": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.dot",
    "numpy.empty",
    "numpy.float",
    "numpy.linalg.norm",
    "numpy.linalg.solve",
    "numpy.mean",
    "numpy.ravel",
    "range"
   ]
  },
  "type": "function"
 },
 "mlpy.pls.PLS.pred": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.dot",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "mlpy.pls.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mlpy.pls.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlpy.rfe": {
  "data": {},
  "type": "module"
 },
 "mlpy.rfe.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mlpy.rfe.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlpy.rfe.rayleigh": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "bool",
    "float",
    "numpy.diag",
    "numpy.dot",
    "numpy.empty",
    "numpy.eye",
    "numpy.float",
    "numpy.ones",
    "numpy.repeat",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "mlpy.rfe.rfe_kfda": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "KFDAC",
    "ValueError",
    "int",
    "isinstance",
    "len",
    "mlpy.rfe.rayleigh",
    "numpy.arange",
    "numpy.argsort",
    "numpy.asarray",
    "numpy.ceil",
    "numpy.concatenate",
    "numpy.float",
    "numpy.int",
    "numpy.max",
    "numpy.unique",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mlpy.rfe.rfe_w2": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "int",
    "len",
    "numpy.arange",
    "numpy.argsort",
    "numpy.asarray",
    "numpy.ceil",
    "numpy.concatenate",
    "numpy.float",
    "numpy.int",
    "numpy.max",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "mlpy.ridge": {
  "data": {},
  "type": "module"
 },
 "mlpy.ridge.KernelRidge": {
  "data": {
   "lineno": 172
  },
  "type": "class"
 },
 "mlpy.ridge.KernelRidge.__init__": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "mlpy.ridge.KernelRidge.alpha": {
  "data": {
   "lineno": 275
  },
  "type": "function"
 },
 "mlpy.ridge.KernelRidge.b": {
  "data": {
   "lineno": 281
  },
  "type": "function"
 },
 "mlpy.ridge.KernelRidge.learn": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "ValueError",
    "numpy.append",
    "numpy.asarray",
    "numpy.empty",
    "numpy.eye",
    "numpy.float",
    "numpy.linalg.solve"
   ]
  },
  "type": "function"
 },
 "mlpy.ridge.KernelRidge.pred": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.dot",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "mlpy.ridge.Ridge": {
  "data": {
   "lineno": 78
  },
  "type": "class"
 },
 "mlpy.ridge.Ridge.__init__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ValueError",
    "float"
   ]
  },
  "type": "function"
 },
 "mlpy.ridge.Ridge.beta": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "mlpy.ridge.Ridge.beta0": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "mlpy.ridge.Ridge.learn": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ValueError",
    "mlpy.ridge.ridge_base",
    "numpy.array",
    "numpy.asarray",
    "numpy.dot",
    "numpy.float",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "mlpy.ridge.Ridge.pred": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.dot",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "mlpy.ridge.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mlpy.ridge.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlpy.ridge.ridge_base": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.dot",
    "numpy.eye",
    "numpy.linalg.solve"
   ]
  },
  "type": "function"
 },
 "mlpy.stats": {
  "data": {},
  "type": "module"
 },
 "mlpy.stats.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mlpy.stats.bootstrap_ci": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.empty",
    "numpy.float",
    "numpy.mean",
    "numpy.random.random_integers",
    "numpy.random.seed",
    "numpy.ravel",
    "range"
   ]
  },
  "type": "function"
 },
 "mlpy.stats.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlpy.stats.quantile": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float",
    "numpy.ravel"
   ]
  },
  "type": "function"
 },
 "mlpy.stats.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlpy.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlpy.version": {
  "data": {},
  "type": "module"
 },
 "mlpy.version.v": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "mlpy.wavelet": {
  "data": {
   "symbols_in_volume": [
    "mlpy.wavelet.__all__"
   ]
  },
  "type": "module"
 },
 "mlpy.wavelet.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mlpy.wavelet.continuous": {
  "data": {},
  "type": "module"
 },
 "mlpy.wavelet.continuous.PI2": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mlpy.wavelet.continuous.__all__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mlpy.wavelet.continuous.angularfreq": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "empty",
    "range"
   ]
  },
  "type": "function"
 },
 "mlpy.wavelet.continuous.autoscales": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "ValueError",
    "empty",
    "floor",
    "log2",
    "range",
    "sqrt"
   ]
  },
  "type": "function"
 },
 "mlpy.wavelet.continuous.cwt": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "ValueError",
    "asarray",
    "empty",
    "mean",
    "mlpy.wavelet.continuous.angularfreq",
    "mlpy.wavelet.continuous.dogft",
    "mlpy.wavelet.continuous.morletft",
    "mlpy.wavelet.continuous.paulft",
    "range"
   ]
  },
  "type": "function"
 },
 "mlpy.wavelet.continuous.dogft": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "exp",
    "mlpy.wavelet.continuous.normalization",
    "range",
    "sqrt",
    "zeros"
   ]
  },
  "type": "function"
 },
 "mlpy.wavelet.continuous.fourier_from_scales": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "ValueError",
    "asarray",
    "float",
    "sqrt"
   ]
  },
  "type": "function"
 },
 "mlpy.wavelet.continuous.icwt": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "ValueError",
    "asarray",
    "empty_like",
    "range",
    "real",
    "sqrt",
    "sum"
   ]
  },
  "type": "function"
 },
 "mlpy.wavelet.continuous.morletft": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "exp",
    "mlpy.wavelet.continuous.normalization",
    "range",
    "zeros"
   ]
  },
  "type": "function"
 },
 "mlpy.wavelet.continuous.normalization": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "mlpy.wavelet.continuous.PI2",
    "sqrt"
   ]
  },
  "type": "function"
 },
 "mlpy.wavelet.continuous.paulft": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "exp",
    "mlpy.wavelet.continuous.normalization",
    "range",
    "sqrt",
    "zeros"
   ]
  },
  "type": "function"
 },
 "mlpy.wavelet.continuous.scales_from_fourier": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "ValueError",
    "asarray",
    "sqrt"
   ]
  },
  "type": "function"
 },
 "mlpy.wavelet.padding": {
  "data": {},
  "type": "module"
 },
 "mlpy.wavelet.padding.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mlpy.wavelet.padding.next_p2": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "mlpy.wavelet.padding.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlpy.wavelet.padding.pad": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "mlpy.wavelet.padding.next_p2",
    "numpy.asarray",
    "numpy.bool",
    "numpy.concatenate",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mlpy.wavelet.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlpy.wavelet.uwt_align": {
  "data": {},
  "type": "module"
 },
 "mlpy.wavelet.uwt_align.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mlpy.wavelet.uwt_align.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlpy.wavelet.uwt_align.uwt_align_d4": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.roll",
    "range"
   ]
  },
  "type": "function"
 },
 "mlpy.wavelet.uwt_align.uwt_align_h2": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.roll",
    "range"
   ]
  },
  "type": "function"
 }
}