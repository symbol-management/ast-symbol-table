{
 "myst_parser": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "myst_parser.FigureMarkdown": {
  "data": {
   "shadows": "myst_parser.directives.FigureMarkdown"
  },
  "type": "import"
 },
 "myst_parser.MdParserConfig": {
  "data": {
   "shadows": "myst_parser.main.MdParserConfig"
  },
  "type": "import"
 },
 "myst_parser.MystParser": {
  "data": {
   "shadows": "myst_parser.sphinx_parser.MystParser"
  },
  "type": "import"
 },
 "myst_parser.MystReferenceResolver": {
  "data": {
   "shadows": "myst_parser.myst_refs.MystReferenceResolver"
  },
  "type": "import"
 },
 "myst_parser.Sphinx": {
  "data": {
   "shadows": "sphinx.application.Sphinx"
  },
  "type": "import"
 },
 "myst_parser.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "myst_parser.__version__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "myst_parser.bold": {
  "data": {
   "shadows": "sphinx.util.console.bold"
  },
  "type": "import"
 },
 "myst_parser.cli": {
  "data": {},
  "type": "module"
 },
 "myst_parser.cli.MdParserConfig": {
  "data": {
   "shadows": "myst_parser.main.MdParserConfig"
  },
  "type": "import"
 },
 "myst_parser.cli.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "myst_parser.cli.default_parser": {
  "data": {
   "shadows": "myst_parser.main.default_parser"
  },
  "type": "import"
 },
 "myst_parser.cli.print_anchors": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "int",
    "myst_parser.cli.argparse",
    "myst_parser.cli.sys",
    "myst_parser.main.MdParserConfig",
    "myst_parser.main.default_parser"
   ]
  },
  "type": "function"
 },
 "myst_parser.cli.print_anchors._filter_plugin": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "myst_parser.cli.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "myst_parser.create_myst_config": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "__name__",
    "myst_parser.__version__",
    "myst_parser.main.MdParserConfig",
    "sphinx.util.console.bold",
    "sphinx.util.logging.getLogger"
   ]
  },
  "type": "function"
 },
 "myst_parser.directives": {
  "data": {},
  "type": "module"
 },
 "myst_parser.directives.FigureMarkdown": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "docutils.parsers.rst.directives.class_option",
    "docutils.parsers.rst.directives.unchanged",
    "myst_parser.directives.align",
    "myst_parser.directives.figwidth_value",
    "sphinx.directives.SphinxDirective"
   ]
  },
  "type": "class"
 },
 "myst_parser.directives.FigureMarkdown.figure_error": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "docutils.nodes.literal_block"
   ]
  },
  "type": "function"
 },
 "myst_parser.directives.FigureMarkdown.run": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "docutils.nodes.Element",
    "docutils.nodes.Node",
    "docutils.nodes.caption",
    "docutils.nodes.figure",
    "docutils.nodes.image",
    "docutils.nodes.paragraph",
    "isinstance",
    "len",
    "myst_parser.directives.align",
    "set",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "myst_parser.directives.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "myst_parser.directives.SphinxDirective": {
  "data": {
   "shadows": "sphinx.directives.SphinxDirective"
  },
  "type": "import"
 },
 "myst_parser.directives.align": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "docutils.parsers.rst.directives.choice"
   ]
  },
  "type": "function"
 },
 "myst_parser.directives.directives": {
  "data": {
   "shadows": "docutils.parsers.rst.directives"
  },
  "type": "import"
 },
 "myst_parser.directives.figwidth_value": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "docutils.parsers.rst.directives.length_or_percentage_or_unitless"
   ]
  },
  "type": "function"
 },
 "myst_parser.directives.nodes": {
  "data": {
   "shadows": "docutils.nodes"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "docutils.nodes.admonition",
    "docutils.nodes.attention",
    "docutils.nodes.caution",
    "docutils.nodes.danger",
    "docutils.nodes.error",
    "docutils.nodes.hint",
    "docutils.nodes.important",
    "docutils.nodes.note",
    "docutils.nodes.tip",
    "docutils.nodes.warning",
    "myst_parser.docutils_renderer.STD_ADMONITIONS",
    "myst_parser.docutils_renderer.re",
    "sphinx.addnodes.seealso"
   ]
  },
  "type": "module"
 },
 "myst_parser.docutils_renderer.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.AttrDict": {
  "data": {
   "shadows": "markdown_it.utils.AttrDict"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.Directive": {
  "data": {
   "shadows": "docutils.parsers.rst.Directive"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.DirectiveError": {
  "data": {
   "shadows": "docutils.parsers.rst.DirectiveError"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer": {
  "data": {
   "lineno": 83
  },
  "type": "class"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.__init__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "markdown_it.MarkdownIt",
    "myst_parser.docutils_renderer.inspect"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.add_line_and_source_path": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "ValueError",
    "markdown_it.token.NestedTokens",
    "markdown_it.token.Token",
    "myst_parser.docutils_renderer.token_line",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.add_section": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "dict",
    "max"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.current_node_context": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "bool",
    "contextlib.contextmanager",
    "docutils.nodes.Element"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.handle_cross_reference": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "myst_parser.docutils_renderer.token_line"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.is_section_level": {
  "data": {
   "lineno": 261
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.nested_render_text": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "markdown_it.token.nest_tokens",
    "myst_parser.docutils_renderer.token_line",
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "docutils.nodes.footnote_reference",
    "docutils.nodes.transition",
    "enumerate",
    "markdown_it.token.Token",
    "markdown_it.token.nest_tokens",
    "markdown_it.utils.AttrDict",
    "myst_parser.docutils_renderer.token_line",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.renderInlineAsText": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "markdown_it.token.Token",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_autolink": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "docutils.nodes.reference",
    "markdown_it.common.utils.escapeHtml",
    "markdown_it.token.NestedTokens"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_blockquote_open": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "docutils.nodes.block_quote",
    "markdown_it.token.NestedTokens"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_bullet_list_open": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "docutils.nodes.bullet_list",
    "markdown_it.token.NestedTokens"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_children": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "enumerate",
    "markdown_it.token.NestedTokens",
    "markdown_it.token.Token",
    "myst_parser.docutils_renderer.token_line",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_code_block": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "docutils.nodes.literal_block",
    "markdown_it.token.Token"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_code_inline": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "docutils.nodes.literal",
    "markdown_it.token.Token"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_colon_fence": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "list",
    "markdown_it.token.Token",
    "myst_parser.docutils_renderer.REGEX_ADMONTION",
    "myst_parser.docutils_renderer.STD_ADMONITIONS",
    "myst_parser.docutils_renderer.token_line"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_directive": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "len",
    "markdown_it.token.Token",
    "myst_parser.docutils_renderer.token_line"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_dl_open": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "docutils.nodes.definition",
    "docutils.nodes.definition_list",
    "docutils.nodes.definition_list_item",
    "docutils.nodes.term",
    "isinstance",
    "markdown_it.token.NestedTokens",
    "myst_parser.docutils_renderer.token_line"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_em_open": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "docutils.nodes.emphasis",
    "markdown_it.token.NestedTokens"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_fence": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "AttributeError",
    "docutils.nodes.literal_block",
    "markdown_it.token.Token",
    "myst_parser.docutils_renderer.make_document",
    "myst_parser.docutils_renderer.token_line",
    "myst_parser.mocking.MockRSTParser"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_footnote_ref": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "docutils.nodes.Text",
    "docutils.nodes.footnote_reference",
    "markdown_it.token.Token"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_footnote_reference_open": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "docutils.nodes.footnote",
    "docutils.nodes.label",
    "markdown_it.token.NestedTokens"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_front_matter": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "copy.deepcopy",
    "dict",
    "dict_to_field_list",
    "docutils.nodes.literal_block",
    "html_meta_to_nodes",
    "isinstance",
    "markdown_it.token.Token",
    "myst_parser.docutils_renderer.token_line",
    "myst_parser.docutils_renderer.yaml",
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_hardbreak": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "docutils.nodes.raw",
    "markdown_it.token.Token"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_heading_open": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "docutils.nodes.Element",
    "docutils.nodes.fully_normalize_name",
    "docutils.nodes.section",
    "docutils.nodes.title",
    "int",
    "isinstance",
    "markdown_it.token.NestedTokens",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_hr": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "docutils.nodes.transition",
    "markdown_it.token.Token"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_html_block": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "html_to_nodes",
    "markdown_it.token.Token",
    "myst_parser.docutils_renderer.token_line"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_html_inline": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "markdown_it.token.Token"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_image": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "docutils.nodes.image",
    "is_external_url",
    "markdown_it.token.Token",
    "myst_parser.docutils_renderer.os"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_inline": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "markdown_it.token.Token"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_link_open": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "docutils.nodes.reference",
    "is_external_url",
    "markdown_it.token.NestedTokens",
    "myst_parser.docutils_renderer.os"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_list_item_open": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "docutils.nodes.list_item",
    "markdown_it.token.NestedTokens"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_math_block": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "docutils.nodes.math_block",
    "markdown_it.token.Token"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_math_inline": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "docutils.nodes.math",
    "markdown_it.token.Token"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_math_single": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "docutils.nodes.math",
    "markdown_it.token.Token"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_myst_block_break": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "docutils.nodes.comment",
    "markdown_it.token.Token"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_myst_line_comment": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "docutils.nodes.comment",
    "markdown_it.token.Token"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_myst_role": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "docutils.nodes",
    "docutils.parsers.rst.roles.role",
    "markdown_it.token.Token",
    "myst_parser.docutils_renderer.token_line",
    "myst_parser.mocking.MockInliner",
    "role_func"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_myst_target": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "docutils.nodes.fully_normalize_name",
    "docutils.nodes.target",
    "markdown_it.token.Token"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_ordered_list_open": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "docutils.nodes.enumerated_list",
    "markdown_it.token.Token"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_paragraph_open": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "docutils.nodes.paragraph",
    "markdown_it.token.NestedTokens"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_softbreak": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "docutils.nodes.Text",
    "markdown_it.token.Token"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_strong_open": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "docutils.nodes.strong",
    "markdown_it.token.NestedTokens"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_substitution": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "AttributeError",
    "Exception",
    "bool",
    "docutils.nodes.Element",
    "docutils.statemachine.StringList",
    "getattr",
    "myst_parser.docutils_renderer.REGEX_DIRECTIVE_START",
    "myst_parser.docutils_renderer.jinja2",
    "myst_parser.mocking.MockState",
    "myst_parser.mocking.MockStateMachine",
    "set"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_substitution_block": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "markdown_it.token.Token"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_substitution_inline": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "markdown_it.token.Token"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_table_open": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "docutils.nodes.colspec",
    "docutils.nodes.table",
    "docutils.nodes.tbody",
    "docutils.nodes.tgroup",
    "docutils.nodes.thead",
    "len",
    "markdown_it.token.NestedTokens",
    "markdown_it.token.Token",
    "round",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_table_row": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "docutils.nodes.entry",
    "docutils.nodes.paragraph",
    "docutils.nodes.row",
    "markdown_it.token.Token"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.render_text": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "docutils.nodes.Text",
    "markdown_it.token.Token"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.run_directive": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "directive_class",
    "docutils.nodes.Element",
    "docutils.nodes.Node",
    "docutils.nodes.literal_block",
    "docutils.parsers.rst.DirectiveError",
    "docutils.parsers.rst.directives.directive",
    "docutils.parsers.rst.directives.flag",
    "docutils.parsers.rst.directives.misc.Include",
    "docutils.parsers.rst.directives.path",
    "docutils.statemachine.StringList",
    "int",
    "isinstance",
    "issubclass",
    "len",
    "list",
    "myst_parser.mocking.MockIncludeDirective",
    "myst_parser.mocking.MockState",
    "myst_parser.mocking.MockStateMachine",
    "myst_parser.mocking.MockingError",
    "parse_directive_text",
    "range",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.DocutilsRenderer.setup_render": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "docutils.languages.get_language",
    "docutils.nodes.Element",
    "docutils.nodes.document",
    "docutils.utils.Reporter",
    "int",
    "myst_parser.docutils_renderer.make_document",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.Filter": {
  "data": {
   "shadows": "docutils.transforms.components.Filter"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.Include": {
  "data": {
   "shadows": "docutils.parsers.rst.directives.misc.Include"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.MarkdownIt": {
  "data": {
   "shadows": "markdown_it.MarkdownIt"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.MetaBody": {
  "data": {
   "shadows": "docutils.parsers.rst.directives.html.MetaBody"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.MockIncludeDirective": {
  "data": {
   "shadows": "myst_parser.mocking.MockIncludeDirective"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.MockInliner": {
  "data": {
   "shadows": "myst_parser.mocking.MockInliner"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.MockRSTParser": {
  "data": {
   "shadows": "myst_parser.mocking.MockRSTParser"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.MockState": {
  "data": {
   "shadows": "myst_parser.mocking.MockState"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.MockStateMachine": {
  "data": {
   "shadows": "myst_parser.mocking.MockStateMachine"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.MockingError": {
  "data": {
   "shadows": "myst_parser.mocking.MockingError"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.NestedTokens": {
  "data": {
   "shadows": "markdown_it.token.NestedTokens"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.OptionParser": {
  "data": {
   "shadows": "docutils.frontend.OptionParser"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.REGEX_ADMONTION": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "myst_parser.docutils_renderer.REGEX_DIRECTIVE_START": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "myst_parser.docutils_renderer.RSTParser": {
  "data": {
   "shadows": "docutils.parsers.rst.Parser"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.Reporter": {
  "data": {
   "shadows": "docutils.utils.Reporter"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.STD_ADMONITIONS": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "myst_parser.docutils_renderer.StringList": {
  "data": {
   "shadows": "docutils.statemachine.StringList"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.Token": {
  "data": {
   "shadows": "markdown_it.token.Token"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.addnodes": {
  "data": {
   "shadows": "sphinx.addnodes"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.dict_to_field_list": {
  "data": {
   "lineno": 1039,
   "symbols_in_volume": [
    "datetime.date",
    "datetime.datetime",
    "docutils.nodes.Text",
    "docutils.nodes.field",
    "docutils.nodes.field_body",
    "docutils.nodes.field_list",
    "docutils.nodes.field_name",
    "float",
    "int",
    "isinstance",
    "myst_parser.docutils_renderer.json",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.directives": {
  "data": {
   "shadows": "docutils.parsers.rst.directives"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.escapeHtml": {
  "data": {
   "shadows": "markdown_it.common.utils.escapeHtml"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.get_language": {
  "data": {
   "shadows": "docutils.languages.get_language"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.html_meta_to_nodes": {
  "data": {
   "lineno": 1085,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "docutils.nodes.document",
    "docutils.nodes.pending",
    "docutils.nodes.system_message",
    "docutils.parsers.rst.directives.html.MetaBody.meta",
    "docutils.transforms.components.Filter",
    "docutils.utils.Reporter",
    "enumerate",
    "int",
    "sphinx.addnodes.meta",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.jinja2": {
  "data": {
   "shadows": "jinja2"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.make_document": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "docutils.frontend.OptionParser",
    "docutils.nodes.document",
    "docutils.parsers.rst.Parser",
    "docutils.utils.new_document"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.meta_cls": {
  "data": {
   "shadows": "sphinx.addnodes.meta"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.nest_tokens": {
  "data": {
   "shadows": "markdown_it.token.nest_tokens"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.new_document": {
  "data": {
   "shadows": "docutils.utils.new_document"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.nodes": {
  "data": {
   "shadows": "docutils.nodes"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.roles": {
  "data": {
   "shadows": "docutils.parsers.rst.roles"
  },
  "type": "import"
 },
 "myst_parser.docutils_renderer.token_line": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "int",
    "markdown_it.token.NestedTokens",
    "markdown_it.token.Token",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "myst_parser.docutils_renderer.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "myst_parser.html_to_nodes": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "myst_parser.html_to_nodes.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "myst_parser.html_to_nodes.OPTION_KEYS_ADMONITION": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "myst_parser.html_to_nodes.OPTION_KEYS_IMAGE": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "myst_parser.html_to_nodes.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "myst_parser.html_to_nodes.default_html": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "docutils.nodes.Element",
    "docutils.nodes.raw",
    "int",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "myst_parser.html_to_nodes.html_to_nodes": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "Data",
    "Exception",
    "all",
    "docutils.nodes.Element",
    "int",
    "len",
    "myst_parser.html_to_nodes.OPTION_KEYS_ADMONITION",
    "myst_parser.html_to_nodes.OPTION_KEYS_IMAGE",
    "myst_parser.html_to_nodes.default_html",
    "sorted",
    "str",
    "tokenize_html",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "myst_parser.html_to_nodes.make_error": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "docutils.nodes.document",
    "docutils.nodes.literal_block",
    "docutils.nodes.system_message",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.html_to_nodes.nodes": {
  "data": {
   "shadows": "docutils.nodes"
  },
  "type": "import"
 },
 "myst_parser.logging": {
  "data": {
   "shadows": "sphinx.util.logging"
  },
  "type": "import"
 },
 "myst_parser.main": {
  "data": {},
  "type": "module"
 },
 "myst_parser.main.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "myst_parser.main.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "myst_parser.main.DocutilsRenderer": {
  "data": {
   "shadows": "myst_parser.docutils_renderer.DocutilsRenderer"
  },
  "type": "import"
 },
 "myst_parser.main.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "myst_parser.main.MarkdownIt": {
  "data": {
   "shadows": "markdown_it.MarkdownIt"
  },
  "type": "import"
 },
 "myst_parser.main.MdParserConfig": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "attr.validators.deep_iterable",
    "attr.validators.deep_mapping",
    "attr.validators.in_",
    "attr.validators.instance_of",
    "attr.validators.optional",
    "bool",
    "dict",
    "float",
    "int",
    "list",
    "myst_parser.main.attr",
    "str",
    "tuple",
    "typing.Dict",
    "typing.Iterable",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "myst_parser.main.MdParserConfig.as_dict": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "dict",
    "myst_parser.main.attr"
   ]
  },
  "type": "function"
 },
 "myst_parser.main.MdParserConfig.check_extensions": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "set",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "myst_parser.main.MdParserConfig.check_sub_delimiters": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "len",
    "list",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "myst_parser.main.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "myst_parser.main.RendererHTML": {
  "data": {
   "shadows": "markdown_it.renderer.RendererHTML"
  },
  "type": "import"
 },
 "myst_parser.main.SphinxRenderer": {
  "data": {
   "shadows": "myst_parser.sphinx_renderer.SphinxRenderer"
  },
  "type": "import"
 },
 "myst_parser.main.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "myst_parser.main.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "myst_parser.main.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "myst_parser.main.amsmath_plugin": {
  "data": {
   "shadows": "mdit_py_plugins.amsmath.amsmath_plugin"
  },
  "type": "import"
 },
 "myst_parser.main.anchors_plugin": {
  "data": {
   "shadows": "mdit_py_plugins.anchors.anchors_plugin"
  },
  "type": "import"
 },
 "myst_parser.main.attr": {
  "data": {
   "shadows": "attr"
  },
  "type": "import"
 },
 "myst_parser.main.colon_fence_plugin": {
  "data": {
   "shadows": "mdit_py_plugins.colon_fence.colon_fence_plugin"
  },
  "type": "import"
 },
 "myst_parser.main.deep_iterable": {
  "data": {
   "shadows": "attr.validators.deep_iterable"
  },
  "type": "import"
 },
 "myst_parser.main.deep_mapping": {
  "data": {
   "shadows": "attr.validators.deep_mapping"
  },
  "type": "import"
 },
 "myst_parser.main.default_parser": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "markdown_it.MarkdownIt",
    "markdown_it.renderer.RendererHTML",
    "mdit_py_plugins.amsmath.amsmath_plugin",
    "mdit_py_plugins.anchors.anchors_plugin",
    "mdit_py_plugins.colon_fence.colon_fence_plugin",
    "mdit_py_plugins.deflist.deflist_plugin",
    "mdit_py_plugins.dollarmath.dollarmath_plugin",
    "mdit_py_plugins.footnote.footnote_plugin",
    "mdit_py_plugins.front_matter.front_matter_plugin",
    "mdit_py_plugins.myst_blocks.myst_block_plugin",
    "mdit_py_plugins.myst_role.myst_role_plugin",
    "mdit_py_plugins.substitution.substitution_plugin",
    "myst_parser.docutils_renderer.DocutilsRenderer",
    "myst_parser.main.MdParserConfig",
    "myst_parser.sphinx_renderer.SphinxRenderer",
    "set",
    "typing.Any",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "myst_parser.main.deflist_plugin": {
  "data": {
   "shadows": "mdit_py_plugins.deflist.deflist_plugin"
  },
  "type": "import"
 },
 "myst_parser.main.dollarmath_plugin": {
  "data": {
   "shadows": "mdit_py_plugins.dollarmath.dollarmath_plugin"
  },
  "type": "import"
 },
 "myst_parser.main.footnote_plugin": {
  "data": {
   "shadows": "mdit_py_plugins.footnote.footnote_plugin"
  },
  "type": "import"
 },
 "myst_parser.main.front_matter_plugin": {
  "data": {
   "shadows": "mdit_py_plugins.front_matter.front_matter_plugin"
  },
  "type": "import"
 },
 "myst_parser.main.in_": {
  "data": {
   "shadows": "attr.validators.in_"
  },
  "type": "import"
 },
 "myst_parser.main.instance_of": {
  "data": {
   "shadows": "attr.validators.instance_of"
  },
  "type": "import"
 },
 "myst_parser.main.make_document": {
  "data": {
   "shadows": "myst_parser.docutils_renderer.make_document"
  },
  "type": "import"
 },
 "myst_parser.main.mock_sphinx_env": {
  "data": {
   "shadows": "myst_parser.sphinx_renderer.mock_sphinx_env"
  },
  "type": "import"
 },
 "myst_parser.main.myst_block_plugin": {
  "data": {
   "shadows": "mdit_py_plugins.myst_blocks.myst_block_plugin"
  },
  "type": "import"
 },
 "myst_parser.main.myst_role_plugin": {
  "data": {
   "shadows": "mdit_py_plugins.myst_role.myst_role_plugin"
  },
  "type": "import"
 },
 "myst_parser.main.optional": {
  "data": {
   "shadows": "attr.validators.optional"
  },
  "type": "import"
 },
 "myst_parser.main.substitution_plugin": {
  "data": {
   "shadows": "mdit_py_plugins.substitution.substitution_plugin"
  },
  "type": "import"
 },
 "myst_parser.main.to_docutils": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "bool",
    "myst_parser.docutils_renderer.make_document",
    "myst_parser.main.MdParserConfig",
    "myst_parser.main.default_parser",
    "myst_parser.sphinx_renderer.mock_sphinx_env",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "myst_parser.main.to_html": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "myst_parser.main.MdParserConfig",
    "myst_parser.main.default_parser",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "myst_parser.main.to_tokens": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "myst_parser.main.MdParserConfig",
    "myst_parser.main.default_parser",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "myst_parser.mathjax": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "sphinx.util.logging.getLogger"
   ]
  },
  "type": "module"
 },
 "myst_parser.mathjax.HTMLTranslator": {
  "data": {
   "shadows": "sphinx.writers.html.HTMLTranslator"
  },
  "type": "import"
 },
 "myst_parser.mathjax.Sphinx": {
  "data": {
   "shadows": "sphinx.application.Sphinx"
  },
  "type": "import"
 },
 "myst_parser.mathjax._": {
  "data": {
   "shadows": "sphinx.locale._"
  },
  "type": "import"
 },
 "myst_parser.mathjax.get_node_equation_number": {
  "data": {
   "shadows": "sphinx.util.math.get_node_equation_number"
  },
  "type": "import"
 },
 "myst_parser.mathjax.html_visit_displaymath": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "docutils.nodes.SkipNode",
    "docutils.nodes.math_block",
    "sphinx.ext.mathjax.html_visit_displaymath",
    "sphinx.locale._",
    "sphinx.util.math.get_node_equation_number",
    "sphinx.writers.html.HTMLTranslator"
   ]
  },
  "type": "function"
 },
 "myst_parser.mathjax.logger": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "myst_parser.mathjax.logging": {
  "data": {
   "shadows": "sphinx.util.logging"
  },
  "type": "import"
 },
 "myst_parser.mathjax.mathjax": {
  "data": {
   "shadows": "sphinx.ext.mathjax"
  },
  "type": "import"
 },
 "myst_parser.mathjax.nodes": {
  "data": {
   "shadows": "docutils.nodes"
  },
  "type": "import"
 },
 "myst_parser.mathjax.override_mathjax": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "myst_parser.mathjax.logger",
    "sphinx.application.Sphinx"
   ]
  },
  "type": "function"
 },
 "myst_parser.mocking": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "myst_parser.mocking.Body": {
  "data": {
   "shadows": "docutils.parsers.rst.states.Body"
  },
  "type": "import"
 },
 "myst_parser.mocking.CodeBlock": {
  "data": {
   "shadows": "docutils.parsers.rst.directives.body.CodeBlock"
  },
  "type": "import"
 },
 "myst_parser.mocking.Directive": {
  "data": {
   "shadows": "docutils.parsers.rst.Directive"
  },
  "type": "import"
 },
 "myst_parser.mocking.DirectiveError": {
  "data": {
   "shadows": "docutils.parsers.rst.DirectiveError"
  },
  "type": "import"
 },
 "myst_parser.mocking.DocutilsRenderer": {
  "data": {
   "shadows": "myst_parser.docutils_renderer.DocutilsRenderer"
  },
  "type": "import"
 },
 "myst_parser.mocking.Include": {
  "data": {
   "shadows": "docutils.parsers.rst.directives.misc.Include"
  },
  "type": "import"
 },
 "myst_parser.mocking.Inliner": {
  "data": {
   "shadows": "docutils.parsers.rst.states.Inliner"
  },
  "type": "import"
 },
 "myst_parser.mocking.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "myst_parser.mocking.MockIncludeDirective": {
  "data": {
   "lineno": 307
  },
  "type": "class"
 },
 "myst_parser.mocking.MockIncludeDirective.__init__": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "dict",
    "docutils.parsers.rst.directives.misc.Include",
    "int",
    "list",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "myst_parser.mocking.MockIncludeDirective.add_name": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "docutils.nodes.Element",
    "docutils.nodes.fully_normalize_name"
   ]
  },
  "type": "function"
 },
 "myst_parser.mocking.MockIncludeDirective.run": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "AttributeError",
    "Exception",
    "ValueError",
    "docutils.nodes.Element",
    "docutils.nodes.Text",
    "docutils.nodes.inline",
    "docutils.nodes.literal_block",
    "docutils.parsers.rst.DirectiveError",
    "docutils.parsers.rst.directives.body.CodeBlock",
    "docutils.parsers.rst.directives.body.NumberLines",
    "getattr",
    "int",
    "len",
    "myst_parser.mocking.MockState",
    "myst_parser.mocking.MockStateMachine",
    "myst_parser.mocking.os",
    "pathlib.Path",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "myst_parser.mocking.MockInliner": {
  "data": {
   "lineno": 29
  },
  "type": "class"
 },
 "myst_parser.mocking.MockInliner.__getattr__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "docutils.parsers.rst.states.Inliner",
    "hasattr",
    "myst_parser.mocking.MockingError",
    "myst_parser.mocking.sys",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "myst_parser.mocking.MockInliner.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "hasattr",
    "int"
   ]
  },
  "type": "function"
 },
 "myst_parser.mocking.MockInliner.problematic": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "docutils.nodes.problematic",
    "docutils.nodes.system_message",
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.mocking.MockRSTParser": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "docutils.parsers.rst.Parser"
   ]
  },
  "type": "class"
 },
 "myst_parser.mocking.MockRSTParser.parse": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "docutils.nodes.document",
    "docutils.parsers.rst.roles._roles",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "myst_parser.mocking.MockState": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "myst_parser.mocking.re"
   ]
  },
  "type": "class"
 },
 "myst_parser.mocking.MockState.__getattr__": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "docutils.parsers.rst.states.Body",
    "hasattr",
    "myst_parser.mocking.MockingError",
    "myst_parser.mocking.sys",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "myst_parser.mocking.MockState.__init__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "myst_parser.mocking.MockState.__init__.Struct": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "max",
    "myst_parser.mocking.MockInliner",
    "str",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "myst_parser.mocking.MockState.block_quote": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "docutils.nodes.Element",
    "docutils.nodes.attribution",
    "docutils.nodes.block_quote",
    "enumerate",
    "int",
    "len",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "myst_parser.mocking.MockState.build_table": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "docutils.parsers.rst.states.Body.build_table",
    "int"
   ]
  },
  "type": "function"
 },
 "myst_parser.mocking.MockState.build_table_row": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "docutils.parsers.rst.states.Body.build_table_row"
   ]
  },
  "type": "function"
 },
 "myst_parser.mocking.MockState.inline_text": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "dict",
    "docutils.nodes.Element",
    "docutils.nodes.paragraph",
    "int",
    "myst_parser.docutils_renderer.DocutilsRenderer",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "myst_parser.mocking.MockState.nested_parse": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "bool",
    "docutils.nodes.Element",
    "docutils.statemachine.StringList",
    "int"
   ]
  },
  "type": "function"
 },
 "myst_parser.mocking.MockState.parse_directive_block": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "dict",
    "docutils.parsers.rst.Directive",
    "docutils.statemachine.StringList",
    "int",
    "len",
    "list",
    "myst_parser.mocking.MockingError",
    "parse_directive_text",
    "typing.Tuple",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "myst_parser.mocking.MockState.parse_target": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "docutils.utils.unescape",
    "int"
   ]
  },
  "type": "function"
 },
 "myst_parser.mocking.MockStateMachine": {
  "data": {
   "lineno": 271
  },
  "type": "class"
 },
 "myst_parser.mocking.MockStateMachine.__getattr__": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "docutils.parsers.rst.states.RSTStateMachine",
    "hasattr",
    "myst_parser.mocking.MockingError",
    "myst_parser.mocking.sys",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "myst_parser.mocking.MockStateMachine.__init__": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "bool",
    "docutils.nodes.Element",
    "docutils.parsers.rst.languages.get_language",
    "int"
   ]
  },
  "type": "function"
 },
 "myst_parser.mocking.MockStateMachine.get_source": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "int",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "myst_parser.mocking.MockStateMachine.get_source_and_line": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "int",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "myst_parser.mocking.MockingError": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "myst_parser.mocking.NumberLines": {
  "data": {
   "shadows": "docutils.parsers.rst.directives.body.NumberLines"
  },
  "type": "import"
 },
 "myst_parser.mocking.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "myst_parser.mocking.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "myst_parser.mocking.RSTParser": {
  "data": {
   "shadows": "docutils.parsers.rst.Parser"
  },
  "type": "import"
 },
 "myst_parser.mocking.RSTStateMachine": {
  "data": {
   "shadows": "docutils.parsers.rst.states.RSTStateMachine"
  },
  "type": "import"
 },
 "myst_parser.mocking.StringList": {
  "data": {
   "shadows": "docutils.statemachine.StringList"
  },
  "type": "import"
 },
 "myst_parser.mocking.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "myst_parser.mocking.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "myst_parser.mocking.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "myst_parser.mocking.get_language": {
  "data": {
   "shadows": "docutils.parsers.rst.languages.get_language"
  },
  "type": "import"
 },
 "myst_parser.mocking.nodes": {
  "data": {
   "shadows": "docutils.nodes"
  },
  "type": "import"
 },
 "myst_parser.mocking.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "myst_parser.mocking.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "myst_parser.mocking.roles": {
  "data": {
   "shadows": "docutils.parsers.rst.roles"
  },
  "type": "import"
 },
 "myst_parser.mocking.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "myst_parser.mocking.unescape": {
  "data": {
   "shadows": "docutils.utils.unescape"
  },
  "type": "import"
 },
 "myst_parser.myst_refs": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "sphinx.util.logging.getLogger"
   ]
  },
  "type": "module"
 },
 "myst_parser.myst_refs.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "myst_parser.myst_refs.Element": {
  "data": {
   "shadows": "docutils.nodes.Element"
  },
  "type": "import"
 },
 "myst_parser.myst_refs.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "myst_parser.myst_refs.MystReferenceResolver": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "sphinx.transforms.post_transforms.ReferencesResolver"
   ]
  },
  "type": "class"
 },
 "myst_parser.myst_refs.MystReferenceResolver._resolve_anchor": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "docutils.nodes.Element",
    "hasattr",
    "myst_parser.myst_refs.os",
    "sphinx.addnodes.pending_xref",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "myst_parser.myst_refs.MystReferenceResolver._resolve_doc_nested": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "docutils.nodes.Element",
    "docutils.nodes.inline",
    "myst_parser.myst_refs.os",
    "sphinx.addnodes.pending_xref",
    "sphinx.util.docname_join",
    "sphinx.util.nodes.clean_astext",
    "sphinx.util.nodes.make_refnode",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "myst_parser.myst_refs.MystReferenceResolver._resolve_ref_nested": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "docutils.nodes.Element",
    "docutils.nodes.inline",
    "sphinx.addnodes.pending_xref",
    "sphinx.domains.std.StandardDomain",
    "sphinx.util.nodes.make_refnode",
    "str",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "myst_parser.myst_refs.MystReferenceResolver.resolve_myst_ref": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "NotImplementedError",
    "docutils.nodes.Element",
    "isinstance",
    "len",
    "myst_parser.myst_refs.logger",
    "sphinx.addnodes.pending_xref",
    "sphinx.domains.std.StandardDomain",
    "sphinx.locale.__",
    "sphinx.util.nodes.make_refnode",
    "str",
    "stringify",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "myst_parser.myst_refs.MystReferenceResolver.resolve_myst_ref.stringify": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "myst_parser.myst_refs.MystReferenceResolver.run": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "dict",
    "docutils.nodes.TextElement",
    "docutils.nodes.document",
    "sphinx.addnodes.pending_xref",
    "sphinx.environment.NoUri",
    "sphinx.version_info",
    "typing.Any",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "myst_parser.myst_refs.NoUri": {
  "data": {
   "shadows": "sphinx.environment.NoUri"
  },
  "type": "import"
 },
 "myst_parser.myst_refs.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "myst_parser.myst_refs.ReferencesResolver": {
  "data": {
   "shadows": "sphinx.transforms.post_transforms.ReferencesResolver"
  },
  "type": "import"
 },
 "myst_parser.myst_refs.StandardDomain": {
  "data": {
   "shadows": "sphinx.domains.std.StandardDomain"
  },
  "type": "import"
 },
 "myst_parser.myst_refs.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "myst_parser.myst_refs.__": {
  "data": {
   "shadows": "sphinx.locale.__"
  },
  "type": "import"
 },
 "myst_parser.myst_refs.addnodes": {
  "data": {
   "shadows": "sphinx.addnodes"
  },
  "type": "import"
 },
 "myst_parser.myst_refs.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "myst_parser.myst_refs.clean_astext": {
  "data": {
   "shadows": "sphinx.util.nodes.clean_astext"
  },
  "type": "import"
 },
 "myst_parser.myst_refs.docname_join": {
  "data": {
   "shadows": "sphinx.util.docname_join"
  },
  "type": "import"
 },
 "myst_parser.myst_refs.document": {
  "data": {
   "shadows": "docutils.nodes.document"
  },
  "type": "import"
 },
 "myst_parser.myst_refs.logger": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "myst_parser.myst_refs.logging": {
  "data": {
   "shadows": "sphinx.util.logging"
  },
  "type": "import"
 },
 "myst_parser.myst_refs.make_refnode": {
  "data": {
   "shadows": "sphinx.util.nodes.make_refnode"
  },
  "type": "import"
 },
 "myst_parser.myst_refs.nodes": {
  "data": {
   "shadows": "docutils.nodes"
  },
  "type": "import"
 },
 "myst_parser.myst_refs.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "myst_parser.myst_refs.pending_xref": {
  "data": {
   "shadows": "sphinx.addnodes.pending_xref"
  },
  "type": "import"
 },
 "myst_parser.myst_refs.version_info": {
  "data": {
   "shadows": "sphinx.version_info"
  },
  "type": "import"
 },
 "myst_parser.override_mathjax": {
  "data": {
   "shadows": "myst_parser.mathjax.override_mathjax"
  },
  "type": "import"
 },
 "myst_parser.parse_directives": {
  "data": {},
  "type": "module"
 },
 "myst_parser.parse_directives.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "myst_parser.parse_directives.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "myst_parser.parse_directives.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "myst_parser.parse_directives.Directive": {
  "data": {
   "shadows": "docutils.parsers.rst.Directive"
  },
  "type": "import"
 },
 "myst_parser.parse_directives.DirectiveParsingError": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "myst_parser.parse_directives.TestDirective": {
  "data": {
   "shadows": "docutils.parsers.rst.directives.misc.TestDirective"
  },
  "type": "import"
 },
 "myst_parser.parse_directives.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "myst_parser.parse_directives.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "myst_parser.parse_directives.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "myst_parser.parse_directives.parse_directive_arguments": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "len",
    "myst_parser.parse_directives.DirectiveParsingError"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_directives.parse_directive_options": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bool",
    "convertor",
    "dict",
    "docutils.parsers.rst.Directive",
    "docutils.parsers.rst.directives.misc.TestDirective",
    "float",
    "int",
    "isinstance",
    "issubclass",
    "list",
    "myst_parser.parse_directives.DirectiveParsingError",
    "myst_parser.parse_directives.datetime",
    "myst_parser.parse_directives.re",
    "myst_parser.parse_directives.yaml",
    "str",
    "textwrap.dedent",
    "typing.Any",
    "typing.Dict",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_directives.parse_directive_text": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "bool",
    "docutils.parsers.rst.Directive",
    "myst_parser.parse_directives.DirectiveParsingError",
    "parse_directive_arguments",
    "parse_directive_options",
    "str",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_directives.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "myst_parser.parse_directives.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "myst_parser.parse_html": {
  "data": {},
  "type": "module"
 },
 "myst_parser.parse_html.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "myst_parser.parse_html.Attribute": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "myst_parser.parse_html.Attribute.__getitem__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Attribute.__str__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Attribute.classes": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "myst_parser.parse_html.Char": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "myst_parser.parse_html.TerminalElement"
   ]
  },
  "type": "class"
 },
 "myst_parser.parse_html.Char.render": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Comment": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "myst_parser.parse_html.TerminalElement"
   ]
  },
  "type": "class"
 },
 "myst_parser.parse_html.Comment.render": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Data": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "myst_parser.parse_html.TerminalElement"
   ]
  },
  "type": "class"
 },
 "myst_parser.parse_html.Data.render": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Declaration": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "myst_parser.parse_html.TerminalElement"
   ]
  },
  "type": "class"
 },
 "myst_parser.parse_html.Declaration.render": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "myst_parser.parse_html.Element": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "collections.abc.MutableSequence"
   ]
  },
  "type": "class"
 },
 "myst_parser.parse_html.Element.__delitem__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Element.__eq__": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "bool",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Element.__getitem__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Element.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "dict",
    "myst_parser.parse_html.Attribute",
    "myst_parser.parse_html.Element",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Element.__iter__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Element.__len__": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Element.__repr__": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Element.__setitem__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "AssertionError",
    "int",
    "isinstance",
    "myst_parser.parse_html.Element"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Element.__str__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Element.children": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "property",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Element.deepcopy": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "myst_parser.parse_html.Element.find": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "bool",
    "dict",
    "isinstance",
    "myst_parser.parse_html.inspect",
    "myst_parser.parse_html.itertools",
    "set",
    "str",
    "test_func",
    "typing.Iterable",
    "typing.Iterator",
    "typing.Optional",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Element.insert": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "AssertionError",
    "int",
    "isinstance",
    "myst_parser.parse_html.Element"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Element.parent": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "property",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Element.render": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "NotImplementedError",
    "dict",
    "str",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Element.reset_children": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "AssertionError",
    "bool",
    "enumerate",
    "isinstance",
    "myst_parser.parse_html.Element",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Element.strip": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Element.walk": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "bool",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Entity": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "myst_parser.parse_html.TerminalElement"
   ]
  },
  "type": "class"
 },
 "myst_parser.parse_html.Entity.render": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.HTMLParser": {
  "data": {
   "shadows": "html.parser.HTMLParser"
  },
  "type": "import"
 },
 "myst_parser.parse_html.HtmlToAst": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "html.parser.HTMLParser"
   ]
  },
  "type": "class"
 },
 "myst_parser.parse_html.HtmlToAst.__init__": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "bool",
    "myst_parser.parse_html.Tree",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.HtmlToAst.feed": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "myst_parser.parse_html.Root",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.HtmlToAst.handle_charref": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "myst_parser.parse_html.Char",
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.HtmlToAst.handle_comment": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "myst_parser.parse_html.Comment",
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.HtmlToAst.handle_data": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "myst_parser.parse_html.Data",
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.HtmlToAst.handle_decl": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "myst_parser.parse_html.Declaration",
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.HtmlToAst.handle_endtag": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.HtmlToAst.handle_entityref": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "myst_parser.parse_html.Entity",
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.HtmlToAst.handle_pi": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "myst_parser.parse_html.Pi",
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.HtmlToAst.handle_startendtag": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.HtmlToAst.handle_starttag": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.HtmlToAst.unknown_decl": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "myst_parser.parse_html.Declaration",
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "myst_parser.parse_html.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "myst_parser.parse_html.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "myst_parser.parse_html.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "myst_parser.parse_html.Pi": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "myst_parser.parse_html.TerminalElement"
   ]
  },
  "type": "class"
 },
 "myst_parser.parse_html.Pi.render": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Root": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "myst_parser.parse_html.Element"
   ]
  },
  "type": "class"
 },
 "myst_parser.parse_html.Root.render": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Tag": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "myst_parser.parse_html.Element"
   ]
  },
  "type": "class"
 },
 "myst_parser.parse_html.Tag.render": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "dict",
    "myst_parser.parse_html.Element",
    "str",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.TerminalElement": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "myst_parser.parse_html.Element"
   ]
  },
  "type": "class"
 },
 "myst_parser.parse_html.TerminalElement.__init__": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.TerminalElement.__repr__": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.TerminalElement.deepcopy": {
  "data": {
   "lineno": 255
  },
  "type": "function"
 },
 "myst_parser.parse_html.Tree": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "myst_parser.parse_html.Tree.__init__": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "collections.deque",
    "myst_parser.parse_html.Root",
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Tree.clear": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "myst_parser.parse_html.Root"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Tree.enclose": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "range",
    "reversed",
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Tree.last": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "myst_parser.parse_html.Element"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Tree.nest_tag": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "dict",
    "myst_parser.parse_html.Tag",
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Tree.nest_terminal": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "klass",
    "myst_parser.parse_html.TerminalElement",
    "str",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Tree.nest_vtag": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "dict",
    "myst_parser.parse_html.VoidTag",
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Tree.nest_xtag": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "dict",
    "myst_parser.parse_html.XTag",
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "myst_parser.parse_html.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "myst_parser.parse_html.VoidTag": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "myst_parser.parse_html.Element"
   ]
  },
  "type": "class"
 },
 "myst_parser.parse_html.VoidTag.render": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.XTag": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "myst_parser.parse_html.Element"
   ]
  },
  "type": "class"
 },
 "myst_parser.parse_html.XTag.render": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "dict",
    "myst_parser.parse_html.Element",
    "str",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "myst_parser.parse_html.abc": {
  "data": {
   "shadows": "collections.abc"
  },
  "type": "import"
 },
 "myst_parser.parse_html.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "myst_parser.parse_html.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "myst_parser.parse_html.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "myst_parser.parse_html.tokenize_html": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "bool",
    "myst_parser.parse_html.HtmlToAst",
    "myst_parser.parse_html.Root",
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.setup": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "myst_parser.__version__",
    "myst_parser.sphinx_parser.MystParser",
    "setup_sphinx"
   ]
  },
  "type": "function"
 },
 "myst_parser.setup_sphinx": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "myst_parser.directives.FigureMarkdown",
    "myst_parser.main.MdParserConfig",
    "myst_parser.mathjax.override_mathjax",
    "myst_parser.myst_refs.MystReferenceResolver"
   ]
  },
  "type": "function"
 },
 "myst_parser.sphinx_parser": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "sphinx.util.logging.getLogger"
   ]
  },
  "type": "module"
 },
 "myst_parser.sphinx_parser.AttrDict": {
  "data": {
   "shadows": "markdown_it.utils.AttrDict"
  },
  "type": "import"
 },
 "myst_parser.sphinx_parser.MdParserConfig": {
  "data": {
   "shadows": "myst_parser.main.MdParserConfig"
  },
  "type": "import"
 },
 "myst_parser.sphinx_parser.MystParser": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "dict",
    "docutils.frontend.validate_boolean",
    "docutils.frontend.validate_nonnegative_int",
    "docutils.frontend.validate_smartquotes_locales",
    "docutils.frontend.validate_ternary",
    "docutils.frontend.validate_url_trailing_slash",
    "sphinx.parsers.Parser"
   ]
  },
  "type": "class"
 },
 "myst_parser.sphinx_parser.MystParser.parse": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "docutils.nodes.document",
    "markdown_it.token.Token",
    "markdown_it.utils.AttrDict",
    "myst_parser.main.MdParserConfig",
    "myst_parser.main.default_parser",
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.sphinx_parser.Parser": {
  "data": {
   "shadows": "sphinx.parsers.Parser"
  },
  "type": "import"
 },
 "myst_parser.sphinx_parser.SPHINX_LOGGER": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "myst_parser.sphinx_parser.Sphinx": {
  "data": {
   "shadows": "sphinx.application.Sphinx"
  },
  "type": "import"
 },
 "myst_parser.sphinx_parser.SphinxStandaloneReader": {
  "data": {
   "shadows": "sphinx.io.SphinxStandaloneReader"
  },
  "type": "import"
 },
 "myst_parser.sphinx_parser.Token": {
  "data": {
   "shadows": "markdown_it.token.Token"
  },
  "type": "import"
 },
 "myst_parser.sphinx_parser.default_parser": {
  "data": {
   "shadows": "myst_parser.main.default_parser"
  },
  "type": "import"
 },
 "myst_parser.sphinx_parser.frontend": {
  "data": {
   "shadows": "docutils.frontend"
  },
  "type": "import"
 },
 "myst_parser.sphinx_parser.logging": {
  "data": {
   "shadows": "sphinx.util.logging"
  },
  "type": "import"
 },
 "myst_parser.sphinx_parser.nodes": {
  "data": {
   "shadows": "docutils.nodes"
  },
  "type": "import"
 },
 "myst_parser.sphinx_parser.parse": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "docutils.core.publish_doctree",
    "docutils.nodes.document",
    "myst_parser.sphinx_parser.MystParser",
    "myst_parser.sphinx_parser.time",
    "os.path.join",
    "sphinx.application.Sphinx",
    "sphinx.io.SphinxStandaloneReader",
    "sphinx.util.docutils.sphinx_domains",
    "str"
   ]
  },
  "type": "function"
 },
 "myst_parser.sphinx_parser.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "myst_parser.sphinx_parser.publish_doctree": {
  "data": {
   "shadows": "docutils.core.publish_doctree"
  },
  "type": "import"
 },
 "myst_parser.sphinx_parser.sphinx_domains": {
  "data": {
   "shadows": "sphinx.util.docutils.sphinx_domains"
  },
  "type": "import"
 },
 "myst_parser.sphinx_parser.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "myst_parser.sphinx_renderer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "sphinx.util.logging.getLogger"
   ]
  },
  "type": "module"
 },
 "myst_parser.sphinx_renderer.BuildEnvironment": {
  "data": {
   "shadows": "sphinx.environment.BuildEnvironment"
  },
  "type": "import"
 },
 "myst_parser.sphinx_renderer.Config": {
  "data": {
   "shadows": "sphinx.config.Config"
  },
  "type": "import"
 },
 "myst_parser.sphinx_renderer.DocutilsRenderer": {
  "data": {
   "shadows": "myst_parser.docutils_renderer.DocutilsRenderer"
  },
  "type": "import"
 },
 "myst_parser.sphinx_renderer.EventManager": {
  "data": {
   "shadows": "sphinx.events.EventManager"
  },
  "type": "import"
 },
 "myst_parser.sphinx_renderer.LOGGER": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "myst_parser.sphinx_renderer.MathDomain": {
  "data": {
   "shadows": "sphinx.domains.math.MathDomain"
  },
  "type": "import"
 },
 "myst_parser.sphinx_renderer.NestedTokens": {
  "data": {
   "shadows": "markdown_it.token.NestedTokens"
  },
  "type": "import"
 },
 "myst_parser.sphinx_renderer.Project": {
  "data": {
   "shadows": "sphinx.project.Project"
  },
  "type": "import"
 },
 "myst_parser.sphinx_renderer.Sphinx": {
  "data": {
   "shadows": "sphinx.application.Sphinx"
  },
  "type": "import"
 },
 "myst_parser.sphinx_renderer.SphinxComponentRegistry": {
  "data": {
   "shadows": "sphinx.registry.SphinxComponentRegistry"
  },
  "type": "import"
 },
 "myst_parser.sphinx_renderer.SphinxRenderer": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "myst_parser.docutils_renderer.DocutilsRenderer"
   ]
  },
  "type": "class"
 },
 "myst_parser.sphinx_renderer.SphinxRenderer._random_label": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "str",
    "uuid.uuid4"
   ]
  },
  "type": "function"
 },
 "myst_parser.sphinx_renderer.SphinxRenderer.add_math_target": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "docutils.nodes.make_id",
    "docutils.nodes.math_block",
    "docutils.nodes.target",
    "sphinx.domains.math.MathDomain",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "myst_parser.sphinx_renderer.SphinxRenderer.doc_env": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "property",
    "sphinx.environment.BuildEnvironment"
   ]
  },
  "type": "function"
 },
 "myst_parser.sphinx_renderer.SphinxRenderer.handle_cross_reference": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "docutils.nodes.inline",
    "len",
    "markdown_it.token.Token",
    "sphinx.addnodes.pending_xref",
    "str",
    "urllib.parse.unquote"
   ]
  },
  "type": "function"
 },
 "myst_parser.sphinx_renderer.SphinxRenderer.render_amsmath": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "docutils.nodes.math_block",
    "markdown_it.token.Token"
   ]
  },
  "type": "function"
 },
 "myst_parser.sphinx_renderer.SphinxRenderer.render_heading_open": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "hasattr",
    "markdown_it.token.NestedTokens",
    "myst_parser.sphinx_renderer.LOGGER",
    "sphinx.domains.std.StandardDomain",
    "sphinx.locale.__",
    "sphinx.util.nodes.clean_astext",
    "super",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "myst_parser.sphinx_renderer.SphinxRenderer.render_math_block_eqno": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "docutils.nodes.math_block",
    "markdown_it.token.Token"
   ]
  },
  "type": "function"
 },
 "myst_parser.sphinx_renderer.StandardDomain": {
  "data": {
   "shadows": "sphinx.domains.std.StandardDomain"
  },
  "type": "import"
 },
 "myst_parser.sphinx_renderer.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "myst_parser.sphinx_renderer.Tags": {
  "data": {
   "shadows": "sphinx.util.tags.Tags"
  },
  "type": "import"
 },
 "myst_parser.sphinx_renderer.Token": {
  "data": {
   "shadows": "markdown_it.token.Token"
  },
  "type": "import"
 },
 "myst_parser.sphinx_renderer.__": {
  "data": {
   "shadows": "sphinx.locale.__"
  },
  "type": "import"
 },
 "myst_parser.sphinx_renderer.additional_nodes": {
  "data": {
   "shadows": "sphinx.util.docutils.additional_nodes"
  },
  "type": "import"
 },
 "myst_parser.sphinx_renderer.addnodes": {
  "data": {
   "shadows": "sphinx.addnodes"
  },
  "type": "import"
 },
 "myst_parser.sphinx_renderer.builtin_extensions": {
  "data": {
   "shadows": "sphinx.application.builtin_extensions"
  },
  "type": "import"
 },
 "myst_parser.sphinx_renderer.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "myst_parser.sphinx_renderer.clean_astext": {
  "data": {
   "shadows": "sphinx.util.nodes.clean_astext"
  },
  "type": "import"
 },
 "myst_parser.sphinx_renderer.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "myst_parser.sphinx_renderer.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "myst_parser.sphinx_renderer.directives": {
  "data": {
   "shadows": "docutils.parsers.rst.directives"
  },
  "type": "import"
 },
 "myst_parser.sphinx_renderer.logging": {
  "data": {
   "shadows": "sphinx.util.logging"
  },
  "type": "import"
 },
 "myst_parser.sphinx_renderer.minimal_sphinx_app": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "MockSphinx"
   ]
  },
  "type": "function"
 },
 "myst_parser.sphinx_renderer.minimal_sphinx_app.MockSphinx": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "sphinx.application.Sphinx"
   ]
  },
  "type": "class"
 },
 "myst_parser.sphinx_renderer.minimal_sphinx_app.MockSphinx.__init__": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "io.StringIO",
    "myst_parser.sphinx_renderer.tempfile",
    "sphinx.application.builtin_extensions",
    "sphinx.config.Config",
    "sphinx.environment.BuildEnvironment",
    "sphinx.events.EventManager",
    "sphinx.project.Project",
    "sphinx.registry.SphinxComponentRegistry",
    "sphinx.util.logging.setup",
    "sphinx.util.tags.Tags"
   ]
  },
  "type": "function"
 },
 "myst_parser.sphinx_renderer.mock_sphinx_env": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "docutils.parsers.rst.directives._directives",
    "docutils.parsers.rst.roles._roles",
    "list",
    "myst_parser.sphinx_renderer.copy",
    "myst_parser.sphinx_renderer.minimal_sphinx_app",
    "sphinx.util.docutils.additional_nodes",
    "sphinx.util.docutils.additional_nodes.discard",
    "sphinx.util.docutils.sphinx_domains",
    "sphinx.util.docutils.unregister_node"
   ]
  },
  "type": "function"
 },
 "myst_parser.sphinx_renderer.nodes": {
  "data": {
   "shadows": "docutils.nodes"
  },
  "type": "import"
 },
 "myst_parser.sphinx_renderer.roles": {
  "data": {
   "shadows": "docutils.parsers.rst.roles"
  },
  "type": "import"
 },
 "myst_parser.sphinx_renderer.sphinx_domains": {
  "data": {
   "shadows": "sphinx.util.docutils.sphinx_domains"
  },
  "type": "import"
 },
 "myst_parser.sphinx_renderer.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "myst_parser.sphinx_renderer.unquote": {
  "data": {
   "shadows": "urllib.parse.unquote"
  },
  "type": "import"
 },
 "myst_parser.sphinx_renderer.unregister_node": {
  "data": {
   "shadows": "sphinx.util.docutils.unregister_node"
  },
  "type": "import"
 },
 "myst_parser.sphinx_renderer.uuid4": {
  "data": {
   "shadows": "uuid.uuid4"
  },
  "type": "import"
 },
 "myst_parser.utils": {
  "data": {},
  "type": "module"
 },
 "myst_parser.utils.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "myst_parser.utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "myst_parser.utils.escape_url": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "myst_parser.utils.html",
    "str",
    "urllib.parse.quote"
   ]
  },
  "type": "function"
 },
 "myst_parser.utils.html": {
  "data": {
   "shadows": "html"
  },
  "type": "import"
 },
 "myst_parser.utils.is_external_url": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Iterable",
    "typing.Optional",
    "urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "myst_parser.utils.quote": {
  "data": {
   "shadows": "urllib.parse.quote"
  },
  "type": "import"
 },
 "myst_parser.utils.urlparse": {
  "data": {
   "shadows": "urllib.parse.urlparse"
  },
  "type": "import"
 }
}