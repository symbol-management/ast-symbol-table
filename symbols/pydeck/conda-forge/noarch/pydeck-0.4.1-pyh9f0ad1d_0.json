{
 "pydeck": {
  "data": {},
  "type": "module"
 },
 "pydeck._version": {
  "data": {},
  "type": "module"
 },
 "pydeck._version.__version__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pydeck.bindings": {
  "data": {},
  "type": "module"
 },
 "pydeck.bindings.deck": {
  "data": {},
  "type": "module"
 },
 "pydeck.bindings.deck.Deck": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "pydeck.bindings.deck.Deck.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "DeckGLWidget",
    "UserWarning",
    "View",
    "ViewState",
    "isinstance",
    "pydeck.bindings.deck.os",
    "pydeck.bindings.deck.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "pydeck.bindings.deck.Deck.selected_data": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ast.literal_eval",
    "property"
   ]
  },
  "type": "function"
 },
 "pydeck.bindings.deck.Deck.show": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "pydeck.bindings.deck.Deck.to_html": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "deck_to_html"
   ]
  },
  "type": "function"
 },
 "pydeck.bindings.deck.Deck.update": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "pydeck.bindings.deck.literal_eval": {
  "data": {
   "shadows": "ast.literal_eval"
  },
  "type": "import"
 },
 "pydeck.bindings.deck.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pydeck.bindings.deck.pydeck_settings": {
  "data": {
   "shadows": "settings"
  },
  "type": "import"
 },
 "pydeck.bindings.deck.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pydeck.bindings.json_tools": {
  "data": {},
  "type": "module"
 },
 "pydeck.bindings.json_tools.IGNORE_KEYS": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "pydeck.bindings.json_tools.JSONMixin": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pydeck.bindings.json_tools.JSONMixin.__repr__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "pydeck.bindings.json_tools.serialize"
   ]
  },
  "type": "function"
 },
 "pydeck.bindings.json_tools.JSONMixin.to_json": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "pydeck.bindings.json_tools.serialize"
   ]
  },
  "type": "function"
 },
 "pydeck.bindings.json_tools.camel_and_lower": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pydeck.bindings.json_tools.lower_first_letter",
    "pydeck.bindings.json_tools.to_camel_case"
   ]
  },
  "type": "function"
 },
 "pydeck.bindings.json_tools.default_serialize": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "pydeck.bindings.json_tools.IGNORE_KEYS",
    "pydeck.bindings.json_tools.lower_camel_case_keys",
    "remap_function",
    "vars"
   ]
  },
  "type": "function"
 },
 "pydeck.bindings.json_tools.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pydeck.bindings.json_tools.lower_camel_case_keys": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "list",
    "pydeck.bindings.json_tools.camel_and_lower"
   ]
  },
  "type": "function"
 },
 "pydeck.bindings.json_tools.lower_first_letter": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "pydeck.bindings.json_tools.serialize": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "pydeck.bindings.json_tools.default_serialize",
    "pydeck.bindings.json_tools.json"
   ]
  },
  "type": "function"
 },
 "pydeck.bindings.json_tools.to_camel_case": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "pydeck.bindings.layer": {
  "data": {},
  "type": "module"
 },
 "pydeck.bindings.layer.BinaryTransportException": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pydeck.bindings.layer.FUNCTION_IDENTIFIER": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pydeck.bindings.layer.Layer": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "pydeck.bindings.layer.Layer.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "enumerate",
    "id",
    "isinstance",
    "len",
    "list",
    "pydeck.bindings.layer.FUNCTION_IDENTIFIER",
    "pydeck.bindings.layer.QUOTE_CHARS",
    "pydeck.bindings.layer.uuid",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pydeck.bindings.layer.Layer._prepare_binary_data": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "camel_and_lower",
    "dict",
    "is_pandas_df",
    "list",
    "numpy.stack",
    "pydeck.bindings.layer.BinaryTransportException",
    "set",
    "type"
   ]
  },
  "type": "function"
 },
 "pydeck.bindings.layer.Layer.data": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "has_geo_interface",
    "is_pandas_df",
    "records_from_geo_interface"
   ]
  },
  "type": "function"
 },
 "pydeck.bindings.layer.Layer.get_binary_data": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "pydeck.bindings.layer.BinaryTransportException"
   ]
  },
  "type": "function"
 },
 "pydeck.bindings.layer.Layer.type": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "pydeck.bindings.layer.TYPE_IDENTIFIER",
    "type.setter"
   ]
  },
  "type": "function"
 },
 "pydeck.bindings.layer.QUOTE_CHARS": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pydeck.bindings.layer.TYPE_IDENTIFIER": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pydeck.bindings.layer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pydeck.bindings.layer.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "pydeck.bindings.light_settings": {
  "data": {},
  "type": "module"
 },
 "pydeck.bindings.light_settings.LightSettings": {
  "data": {
   "lineno": 4
  },
  "type": "class"
 },
 "pydeck.bindings.light_settings.LightSettings.__init__": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "pydeck.bindings.map_styles": {
  "data": {},
  "type": "module"
 },
 "pydeck.bindings.map_styles.DARK": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "pydeck.bindings.map_styles.DARK_NO_LABELS": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "pydeck.bindings.map_styles.LIGHT": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "pydeck.bindings.map_styles.SATELLITE": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pydeck.bindings.providers": {
  "data": {},
  "type": "module"
 },
 "pydeck.bindings.providers.Providers": {
  "data": {
   "lineno": 2
  },
  "type": "class"
 },
 "pydeck.bindings.view": {
  "data": {},
  "type": "module"
 },
 "pydeck.bindings.view.TYPE_IDENTIFIER": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "pydeck.bindings.view.View": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "pydeck.bindings.view.View.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "pydeck.bindings.view.View.type": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pydeck.bindings.view.TYPE_IDENTIFIER",
    "type.setter"
   ]
  },
  "type": "function"
 },
 "pydeck.bindings.view_state": {
  "data": {},
  "type": "module"
 },
 "pydeck.bindings.view_state.ViewState": {
  "data": {
   "lineno": 4
  },
  "type": "class"
 },
 "pydeck.bindings.view_state.ViewState.__init__": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "pydeck.data_utils": {
  "data": {},
  "type": "module"
 },
 "pydeck.data_utils.binary_transfer": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "pydeck.data_utils.binary_transfer.serialize_columns"
   ]
  },
  "type": "module"
 },
 "pydeck.data_utils.binary_transfer.array_to_binary": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "memoryview",
    "numpy.ascontiguousarray",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "str"
   ]
  },
  "type": "function"
 },
 "pydeck.data_utils.binary_transfer.data_buffer_serialization": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "pydeck.data_utils.binary_transfer.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pydeck.data_utils.binary_transfer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pydeck.data_utils.binary_transfer.serialize_columns": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dict",
    "max",
    "pydeck.data_utils.binary_transfer.array_to_binary"
   ]
  },
  "type": "function"
 },
 "pydeck.data_utils.color_scales": {
  "data": {},
  "type": "module"
 },
 "pydeck.data_utils.color_scales.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pydeck.data_utils.color_scales.assign_random_colors": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "list",
    "pydeck.data_utils.color_scales.get_random_rgb",
    "set",
    "sorted",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "pydeck.data_utils.color_scales.get_random_rgb": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "pydeck.data_utils.color_scales.random",
    "range",
    "round"
   ]
  },
  "type": "function"
 },
 "pydeck.data_utils.color_scales.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pydeck.data_utils.type_checking": {
  "data": {},
  "type": "module"
 },
 "pydeck.data_utils.type_checking.has_geo_interface": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pydeck.data_utils.type_checking.is_pandas_df": {
  "data": {
   "lineno": 1
  },
  "type": "function"
 },
 "pydeck.data_utils.type_checking.records_from_geo_interface": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "pydeck.data_utils.viewport_helpers": {
  "data": {},
  "type": "module"
 },
 "pydeck.data_utils.viewport_helpers._squared_diff": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "pydeck.data_utils.viewport_helpers.bbox_to_zoom_level": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "int",
    "max",
    "min",
    "pydeck.data_utils.viewport_helpers.math"
   ]
  },
  "type": "function"
 },
 "pydeck.data_utils.viewport_helpers.compute_view": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "is_pandas_df",
    "pydeck.data_utils.viewport_helpers.bbox_to_zoom_level",
    "pydeck.data_utils.viewport_helpers.geometric_mean",
    "pydeck.data_utils.viewport_helpers.get_bbox",
    "pydeck.data_utils.viewport_helpers.get_n_pct",
    "view_type"
   ]
  },
  "type": "function"
 },
 "pydeck.data_utils.viewport_helpers.euclidean": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "Exception",
    "len",
    "pydeck.data_utils.viewport_helpers._squared_diff",
    "pydeck.data_utils.viewport_helpers.math",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "pydeck.data_utils.viewport_helpers.geometric_mean": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "float",
    "len",
    "sum"
   ]
  },
  "type": "function"
 },
 "pydeck.data_utils.viewport_helpers.get_bbox": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "pydeck.data_utils.viewport_helpers.get_n_pct": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "len",
    "pydeck.data_utils.viewport_helpers.geometric_mean",
    "pydeck.data_utils.viewport_helpers.k_nearest_neighbors",
    "pydeck.data_utils.viewport_helpers.math"
   ]
  },
  "type": "function"
 },
 "pydeck.data_utils.viewport_helpers.k_nearest_neighbors": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "int",
    "pydeck.data_utils.viewport_helpers.euclidean",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pydeck.data_utils.viewport_helpers.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pydeck.frontend_semver": {
  "data": {},
  "type": "module"
 },
 "pydeck.frontend_semver.DECKGL_SEMVER": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pydeck.io": {
  "data": {},
  "type": "module"
 },
 "pydeck.io.html": {
  "data": {
   "symbols_in_volume": [
    "pydeck.io.html.TEMPLATES_PATH",
    "pydeck.io.html.jinja2",
    "pydeck.io.html.os",
    "pydeck.io.html.sys"
   ]
  },
  "type": "module"
 },
 "pydeck.io.html.CDN_URL": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pydeck.io.html.HTML": {
  "data": {
   "shadows": "IPython.display.HTML"
  },
  "type": "import"
 },
 "pydeck.io.html.TEMPLATES_PATH": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pydeck.io.html.cdn_picker": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "open",
    "os.path.dirname",
    "os.path.join",
    "print",
    "pydeck.io.html.CDN_URL",
    "pydeck.io.html.os"
   ]
  },
  "type": "function"
 },
 "pydeck.io.html.convert_js_bool": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "bool",
    "type"
   ]
  },
  "type": "function"
 },
 "pydeck.io.html.deck_to_html": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "open",
    "os.path.realpath",
    "pydeck.io.html.display_html",
    "pydeck.io.html.iframe_with_srcdoc",
    "pydeck.io.html.in_google_colab",
    "pydeck.io.html.in_jupyter",
    "pydeck.io.html.render_for_colab",
    "pydeck.io.html.render_json_to_html"
   ]
  },
  "type": "function"
 },
 "pydeck.io.html.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "pydeck.io.html.display_html": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "pydeck.io.html.time",
    "pydeck.io.html.webbrowser"
   ]
  },
  "type": "function"
 },
 "pydeck.io.html.html": {
  "data": {
   "shadows": "html"
  },
  "type": "import"
 },
 "pydeck.io.html.iframe_with_srcdoc": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "IPython.display.HTML",
    "pydeck.io.html.html",
    "pydeck.io.html.warnings",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pydeck.io.html.in_google_colab": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pydeck.io.html.in_jupyter": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "NameError",
    "get_ipython"
   ]
  },
  "type": "function"
 },
 "pydeck.io.html.j2_env": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pydeck.io.html.jinja2": {
  "data": {
   "shadows": "jinja2"
  },
  "type": "import"
 },
 "pydeck.io.html.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "pydeck.io.html.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pydeck.io.html.realpath": {
  "data": {
   "shadows": "os.path.realpath"
  },
  "type": "import"
 },
 "pydeck.io.html.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "pydeck.io.html.render_for_colab": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "IPython.display.HTML",
    "Javascript",
    "display"
   ]
  },
  "type": "function"
 },
 "pydeck.io.html.render_json_to_html": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "pydeck.io.html.cdn_picker",
    "pydeck.io.html.convert_js_bool",
    "pydeck.io.html.j2_env"
   ]
  },
  "type": "function"
 },
 "pydeck.io.html.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pydeck.io.html.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pydeck.io.html.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pydeck.io.html.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pydeck.io.html.webbrowser": {
  "data": {
   "shadows": "webbrowser"
  },
  "type": "import"
 },
 "pydeck.nbextension": {
  "data": {},
  "type": "module"
 },
 "pydeck.nbextension._jupyter_nbextension_paths": {
  "data": {
   "lineno": 1
  },
  "type": "function"
 },
 "pydeck.settings": {
  "data": {
   "symbols_in_volume": [
    "pydeck.settings.Settings",
    "pydeck.settings.settings"
   ]
  },
  "type": "module"
 },
 "pydeck.settings.Settings": {
  "data": {
   "lineno": 4
  },
  "type": "class"
 },
 "pydeck.settings.Settings.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pydeck.settings.settings"
   ]
  },
  "type": "function"
 },
 "pydeck.settings.settings": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pydeck.widget": {
  "data": {},
  "type": "module"
 },
 "pydeck.widget._frontend": {
  "data": {},
  "type": "module"
 },
 "pydeck.widget._frontend.module_name": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pydeck.widget._frontend.module_version": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pydeck.widget.widget": {
  "data": {},
  "type": "module"
 },
 "pydeck.widget.widget.Any": {
  "data": {
   "shadows": "traitlets.Any"
  },
  "type": "import"
 },
 "pydeck.widget.widget.Bool": {
  "data": {
   "shadows": "traitlets.Bool"
  },
  "type": "import"
 },
 "pydeck.widget.widget.DeckGLWidget": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ipywidgets.DOMWidget",
    "ipywidgets.register",
    "traitlets.Any",
    "traitlets.Bool",
    "traitlets.Int",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "pydeck.widget.widget.Int": {
  "data": {
   "shadows": "traitlets.Int"
  },
  "type": "import"
 },
 "pydeck.widget.widget.Unicode": {
  "data": {
   "shadows": "traitlets.Unicode"
  },
  "type": "import"
 },
 "pydeck.widget.widget.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "pydeck.widget.widget.widgets": {
  "data": {
   "shadows": "ipywidgets"
  },
  "type": "import"
 },
 "tests": {
  "data": {},
  "type": "module"
 },
 "tests.bindings": {
  "data": {},
  "type": "module"
 },
 "tests.bindings.data_utils.test_binary_transfer": {
  "data": {
   "symbols_in_volume": [
    "memoryview",
    "numpy.array",
    "numpy.stack"
   ]
  },
  "type": "module"
 },
 "tests.bindings.data_utils.test_binary_transfer.EXAMPLE_INPUT": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tests.bindings.data_utils.test_binary_transfer.EXPECTED_OUTPUT": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "tests.bindings.data_utils.test_binary_transfer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.bindings.data_utils.test_binary_transfer.serialize_columns": {
  "data": {
   "shadows": "pydeck.data_utils.binary_transfer.serialize_columns"
  },
  "type": "import"
 },
 "tests.bindings.data_utils.test_binary_transfer.test_serialize_columns": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "numpy.array_equal",
    "numpy.frombuffer",
    "pydeck.data_utils.binary_transfer.serialize_columns",
    "set",
    "tests.bindings.data_utils.test_binary_transfer.EXAMPLE_INPUT",
    "tests.bindings.data_utils.test_binary_transfer.EXPECTED_OUTPUT"
   ]
  },
  "type": "function"
 },
 "tests.bindings.data_utils.test_binary_transfer.test_serialize_columns_none_input": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pydeck.data_utils.binary_transfer.serialize_columns"
   ]
  },
  "type": "function"
 },
 "tests.bindings.pydeck_examples": {
  "data": {},
  "type": "module"
 },
 "tests.bindings.pydeck_examples.geojson_layer": {
  "data": {},
  "type": "module"
 },
 "tests.bindings.pydeck_examples.geojson_layer.Deck": {
  "data": {
   "shadows": "pydeck.Deck"
  },
  "type": "import"
 },
 "tests.bindings.pydeck_examples.geojson_layer.Layer": {
  "data": {
   "shadows": "pydeck.Layer"
  },
  "type": "import"
 },
 "tests.bindings.pydeck_examples.geojson_layer.ViewState": {
  "data": {
   "shadows": "pydeck.ViewState"
  },
  "type": "import"
 },
 "tests.bindings.pydeck_examples.geojson_layer.create_geojson_layer_test_object": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "pydeck.Deck",
    "pydeck.Layer",
    "pydeck.ViewState",
    "tests.bindings.pydeck_examples.geojson_layer.features"
   ]
  },
  "type": "function"
 },
 "tests.bindings.pydeck_examples.geojson_layer.features": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "tests.bindings.pydeck_examples.geojson_layer_with_gmaps": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tests.bindings.pydeck_examples.geojson_layer_with_gmaps.create_geojson_layer_with_gmaps_test_object"
   ]
  },
  "type": "module"
 },
 "tests.bindings.pydeck_examples.geojson_layer_with_gmaps.Deck": {
  "data": {
   "shadows": "pydeck.Deck"
  },
  "type": "import"
 },
 "tests.bindings.pydeck_examples.geojson_layer_with_gmaps.Layer": {
  "data": {
   "shadows": "pydeck.Layer"
  },
  "type": "import"
 },
 "tests.bindings.pydeck_examples.geojson_layer_with_gmaps.ViewState": {
  "data": {
   "shadows": "pydeck.ViewState"
  },
  "type": "import"
 },
 "tests.bindings.pydeck_examples.geojson_layer_with_gmaps.create_geojson_layer_with_gmaps_test_object": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "pydeck.Deck",
    "pydeck.Layer",
    "pydeck.ViewState",
    "tests.bindings.pydeck_examples.geojson_layer_with_gmaps.features"
   ]
  },
  "type": "function"
 },
 "tests.bindings.pydeck_examples.geojson_layer_with_gmaps.features": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "tests.bindings.pydeck_examples.hexagon_layer_function": {
  "data": {},
  "type": "module"
 },
 "tests.bindings.pydeck_examples.hexagon_layer_function.Deck": {
  "data": {
   "shadows": "pydeck.Deck"
  },
  "type": "import"
 },
 "tests.bindings.pydeck_examples.hexagon_layer_function.Layer": {
  "data": {
   "shadows": "pydeck.Layer"
  },
  "type": "import"
 },
 "tests.bindings.pydeck_examples.hexagon_layer_function.View": {
  "data": {
   "shadows": "pydeck.View"
  },
  "type": "import"
 },
 "tests.bindings.pydeck_examples.hexagon_layer_function.ViewState": {
  "data": {
   "shadows": "pydeck.ViewState"
  },
  "type": "import"
 },
 "tests.bindings.pydeck_examples.hexagon_layer_function.color_range": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "tests.bindings.pydeck_examples.hexagon_layer_function.create_heatmap_test_object": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "pydeck.Deck",
    "pydeck.Layer",
    "pydeck.View",
    "pydeck.ViewState",
    "tests.bindings.pydeck_examples.hexagon_layer_function.color_range",
    "tests.bindings.pydeck_examples.hexagon_layer_function.data"
   ]
  },
  "type": "function"
 },
 "tests.bindings.pydeck_examples.hexagon_layer_function.data": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "tests.bindings.pydeck_examples.minimal": {
  "data": {},
  "type": "module"
 },
 "tests.bindings.pydeck_examples.minimal.Deck": {
  "data": {
   "shadows": "pydeck.Deck"
  },
  "type": "import"
 },
 "tests.bindings.pydeck_examples.minimal.Layer": {
  "data": {
   "shadows": "pydeck.Layer"
  },
  "type": "import"
 },
 "tests.bindings.pydeck_examples.minimal.LightSettings": {
  "data": {
   "shadows": "pydeck.LightSettings"
  },
  "type": "import"
 },
 "tests.bindings.pydeck_examples.minimal.View": {
  "data": {
   "shadows": "pydeck.View"
  },
  "type": "import"
 },
 "tests.bindings.pydeck_examples.minimal.ViewState": {
  "data": {
   "shadows": "pydeck.ViewState"
  },
  "type": "import"
 },
 "tests.bindings.pydeck_examples.minimal.create_minimal_test_object": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "pydeck.Deck",
    "pydeck.Layer",
    "pydeck.LightSettings",
    "pydeck.View",
    "pydeck.ViewState"
   ]
  },
  "type": "function"
 },
 "tests.bindings.pydeck_examples.multilayers": {
  "data": {},
  "type": "module"
 },
 "tests.bindings.pydeck_examples.multilayers.Deck": {
  "data": {
   "shadows": "pydeck.Deck"
  },
  "type": "import"
 },
 "tests.bindings.pydeck_examples.multilayers.Layer": {
  "data": {
   "shadows": "pydeck.Layer"
  },
  "type": "import"
 },
 "tests.bindings.pydeck_examples.multilayers.ViewState": {
  "data": {
   "shadows": "pydeck.ViewState"
  },
  "type": "import"
 },
 "tests.bindings.pydeck_examples.multilayers.create_multi_layer_test_object": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "pydeck.Deck",
    "pydeck.Layer",
    "pydeck.ViewState"
   ]
  },
  "type": "function"
 },
 "tests.bindings.pydeck_examples.scatterplot": {
  "data": {},
  "type": "module"
 },
 "tests.bindings.pydeck_examples.scatterplot.Deck": {
  "data": {
   "shadows": "pydeck.Deck"
  },
  "type": "import"
 },
 "tests.bindings.pydeck_examples.scatterplot.Layer": {
  "data": {
   "shadows": "pydeck.Layer"
  },
  "type": "import"
 },
 "tests.bindings.pydeck_examples.scatterplot.ViewState": {
  "data": {
   "shadows": "pydeck.ViewState"
  },
  "type": "import"
 },
 "tests.bindings.pydeck_examples.scatterplot.create_scatterplot_test_object": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "pydeck.Deck",
    "pydeck.Layer",
    "pydeck.ViewState"
   ]
  },
  "type": "function"
 },
 "tests.bindings.pydeck_examples.stacked": {
  "data": {
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "module"
 },
 "tests.bindings.pydeck_examples.stacked.Deck": {
  "data": {
   "shadows": "pydeck.Deck"
  },
  "type": "import"
 },
 "tests.bindings.pydeck_examples.stacked.Layer": {
  "data": {
   "shadows": "pydeck.Layer"
  },
  "type": "import"
 },
 "tests.bindings.pydeck_examples.stacked.ViewState": {
  "data": {
   "shadows": "pydeck.ViewState"
  },
  "type": "import"
 },
 "tests.bindings.pydeck_examples.stacked.create_stacked_test_object": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pydeck.Deck",
    "pydeck.Layer",
    "pydeck.ViewState",
    "tests.bindings.pydeck_examples.stacked.data",
    "tests.bindings.pydeck_examples.stacked.df"
   ]
  },
  "type": "function"
 },
 "tests.bindings.pydeck_examples.stacked.data": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "tests.bindings.pydeck_examples.stacked.df": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tests.bindings.pydeck_examples.stacked.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tests.bindings.test_deck": {
  "data": {},
  "type": "module"
 },
 "tests.bindings.test_deck.Deck": {
  "data": {
   "shadows": "pydeck.Deck"
  },
  "type": "import"
 },
 "tests.bindings.test_deck.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "tests.bindings.test_deck.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tests.bindings.test_deck.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.bindings.test_deck.test_deck_layer_args": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pydeck.Deck"
   ]
  },
  "type": "function"
 },
 "tests.bindings.test_deck.test_json_output": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "tests.bindings.test_deck.json"
   ]
  },
  "type": "function"
 },
 "tests.bindings.test_deck.test_update": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "str",
    "tests.bindings.test_deck.json"
   ]
  },
  "type": "function"
 },
 "tests.bindings.test_deck.test_warning": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "UserWarning",
    "dict",
    "len",
    "pydeck.Deck",
    "tests.bindings.test_deck.os",
    "tests.bindings.test_deck.pytest"
   ]
  },
  "type": "function"
 },
 "tests.bindings.test_layer": {
  "data": {
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "module"
 },
 "tests.bindings.test_layer.Deck": {
  "data": {
   "shadows": "pydeck.Deck"
  },
  "type": "import"
 },
 "tests.bindings.test_layer.Layer": {
  "data": {
   "shadows": "pydeck.Layer"
  },
  "type": "import"
 },
 "tests.bindings.test_layer.df": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "tests.bindings.test_layer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.bindings.test_layer.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tests.bindings.test_layer.test_constructor_binary_transport": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.array_equal",
    "pydeck.Deck",
    "pydeck.Layer",
    "tests.bindings.test_layer.df"
   ]
  },
  "type": "function"
 },
 "tests.browser": {
  "data": {},
  "type": "module"
 },
 "tests.browser.image_diff": {
  "data": {},
  "type": "module"
 },
 "tests.browser.image_diff.Image": {
  "data": {
   "shadows": "PIL.Image"
  },
  "type": "import"
 },
 "tests.browser.image_diff.diff_images": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "PIL.Image.open",
    "abs",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "tests.browser.screenshot_utils": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "TimeoutError",
    "get_notebook_page_height",
    "go_to_url",
    "pyppeteer.launch",
    "str",
    "tests.browser.screenshot_utils.CELL_DROPDOWN_SELECTOR",
    "tests.browser.screenshot_utils.RUN_ALL_SELECTOR",
    "tests.browser.screenshot_utils.SECONDS_BEFORE_REEXECUTION",
    "tests.browser.screenshot_utils.SECONDS_BEFORE_SCREENSHOT",
    "tests.browser.screenshot_utils.asyncio",
    "tests.browser.screenshot_utils.browser",
    "tests.browser.screenshot_utils.is_ipynb",
    "tests.browser.screenshot_utils.logging",
    "tests.browser.screenshot_utils.num_attempts",
    "tests.browser.screenshot_utils.os",
    "tests.browser.screenshot_utils.page",
    "tests.browser.screenshot_utils.page_height",
    "tests.browser.screenshot_utils.rename_png",
    "tests.browser.screenshot_utils.screenshot_path",
    "tests.browser.screenshot_utils.str_path",
    "tests.browser.screenshot_utils.typing",
    "typing_extensions.Coroutine"
   ]
  },
  "type": "module"
 },
 "tests.browser.screenshot_utils.CELL_DROPDOWN_SELECTOR": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "tests.browser.screenshot_utils.Coroutine": {
  "data": {
   "shadows": "typing_extensions.Coroutine"
  },
  "type": "import"
 },
 "tests.browser.screenshot_utils.Image": {
  "data": {
   "shadows": "PIL.Image"
  },
  "type": "import"
 },
 "tests.browser.screenshot_utils.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "tests.browser.screenshot_utils.RUN_ALL_SELECTOR": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "tests.browser.screenshot_utils.SECONDS_BEFORE_REEXECUTION": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "tests.browser.screenshot_utils.SECONDS_BEFORE_SCREENSHOT": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "tests.browser.screenshot_utils.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "tests.browser.screenshot_utils.browser": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "tests.browser.screenshot_utils.is_ipynb": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "tests.browser.screenshot_utils.launch": {
  "data": {
   "shadows": "pyppeteer.launch"
  },
  "type": "import"
 },
 "tests.browser.screenshot_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "tests.browser.screenshot_utils.num_attempts": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "tests.browser.screenshot_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tests.browser.screenshot_utils.page": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "tests.browser.screenshot_utils.page_height": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "tests.browser.screenshot_utils.rename_png": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "pathlib.Path",
    "str"
   ]
  },
  "type": "function"
 },
 "tests.browser.screenshot_utils.screenshot_path": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "tests.browser.screenshot_utils.str_path": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "tests.browser.screenshot_utils.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "tests.browser.test_examples": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "__name__",
    "go_to_page_and_screenshot",
    "run_notebooks",
    "start_notebook",
    "stop_notebook",
    "str",
    "tests.browser.test_examples.file_names",
    "tests.browser.test_examples.here",
    "tests.browser.test_examples.jupyter_execution_directory",
    "tests.browser.test_examples.list_notebooks",
    "tests.browser.test_examples.logging",
    "tests.browser.test_examples.main",
    "tests.browser.test_examples.make_nb_url",
    "tests.browser.test_examples.my_env",
    "tests.browser.test_examples.nb_process",
    "tests.browser.test_examples.notebook_directory",
    "tests.browser.test_examples.os",
    "tests.browser.test_examples.pytest",
    "tests.browser.test_examples.subprocess",
    "tests.browser.test_examples.token",
    "tests.browser.test_examples.url",
    "tests.browser.test_examples.uuid"
   ]
  },
  "type": "module"
 },
 "tests.browser.test_examples.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "tests.browser.test_examples.file_names": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "tests.browser.test_examples.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "tests.browser.test_examples.here": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "tests.browser.test_examples.jupyter_execution_directory": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tests.browser.test_examples.list_notebooks": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "sorted",
    "tests.browser.test_examples.glob",
    "tests.browser.test_examples.notebook_directory",
    "tests.browser.test_examples.os"
   ]
  },
  "type": "function"
 },
 "tests.browser.test_examples.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "tests.browser.test_examples.main": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "run_notebooks",
    "tests.browser.test_examples.asyncio",
    "tests.browser.test_examples.logging"
   ]
  },
  "type": "function"
 },
 "tests.browser.test_examples.make_nb_url": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "tests.browser.test_examples.token",
    "tests.browser.test_examples.urllib"
   ]
  },
  "type": "function"
 },
 "tests.browser.test_examples.my_env": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "tests.browser.test_examples.nb_process": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "tests.browser.test_examples.notebook_directory": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "tests.browser.test_examples.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tests.browser.test_examples.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.browser.test_examples.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "tests.browser.test_examples.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tests.browser.test_examples.token": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "tests.browser.test_examples.url": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "tests.browser.test_examples.urllib": {
  "data": {
   "shadows": "urllib"
  },
  "type": "import"
 },
 "tests.browser.test_examples.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "tests.browser.test_html_renderer": {
  "data": {
   "symbols_in_volume": [
    "go_to_page_and_screenshot",
    "pydeck.Deck",
    "pydeck.Layer",
    "pydeck.ViewState",
    "str",
    "tests.browser.test_html_renderer.d",
    "tests.browser.test_html_renderer.fname",
    "tests.browser.test_html_renderer.has_pyppeteer",
    "tests.browser.test_html_renderer.os",
    "tests.browser.test_html_renderer.pytest",
    "tests.browser.test_html_renderer.scatterplot_data",
    "tests.browser.test_html_renderer.text_data",
    "tests.browser.test_html_renderer.v"
   ]
  },
  "type": "module"
 },
 "tests.browser.test_html_renderer.Deck": {
  "data": {
   "shadows": "pydeck.Deck"
  },
  "type": "import"
 },
 "tests.browser.test_html_renderer.Layer": {
  "data": {
   "shadows": "pydeck.Layer"
  },
  "type": "import"
 },
 "tests.browser.test_html_renderer.ViewState": {
  "data": {
   "shadows": "pydeck.ViewState"
  },
  "type": "import"
 },
 "tests.browser.test_html_renderer.d": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "tests.browser.test_html_renderer.fname": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "tests.browser.test_html_renderer.has_pyppeteer": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "function"
 },
 "tests.browser.test_html_renderer.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tests.browser.test_html_renderer.pyppeteer": {
  "data": {
   "shadows": "pyppeteer"
  },
  "type": "import"
 },
 "tests.browser.test_html_renderer.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.browser.test_html_renderer.scatterplot_data": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "tests.browser.test_html_renderer.text_data": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "tests.browser.test_html_renderer.v": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "tests.conftest": {
  "data": {
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "module"
 },
 "tests.conftest.Comm": {
  "data": {
   "shadows": "ipykernel.comm.Comm"
  },
  "type": "import"
 },
 "tests.conftest.MockComm": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ipykernel.comm.Comm"
   ]
  },
  "type": "class"
 },
 "tests.conftest.MockComm.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "super",
    "tests.conftest.MockComm"
   ]
  },
  "type": "function"
 },
 "tests.conftest.MockComm.close": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "tests.conftest.MockComm.open": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "tests.conftest.MockComm.send": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "tests.conftest.Widget": {
  "data": {
   "shadows": "ipywidgets.Widget"
  },
  "type": "import"
 },
 "tests.conftest._widget_attrs": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "tests.conftest.mock_comm": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "delattr",
    "getattr",
    "ipywidgets.Widget",
    "ipywidgets.Widget._comm_default",
    "ipywidgets.Widget._ipython_display_",
    "setattr",
    "tests.conftest.MockComm",
    "tests.conftest._widget_attrs",
    "tests.conftest.pytest",
    "tests.conftest.undefined"
   ]
  },
  "type": "function"
 },
 "tests.conftest.mock_comm.raise_not_implemented": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tests.conftest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.conftest.undefined": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "tests.dev-containers.snap": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "__name__",
    "go_to_page_and_screenshot",
    "pyppeteer.launch",
    "screenshot",
    "str",
    "tests.dev-containers.snap.LAB_PLAY_BUTTON_XPATH",
    "tests.dev-containers.snap.LAB_URL",
    "tests.dev-containers.snap.NB_PLAY_BUTTON_XPATH",
    "tests.dev-containers.snap.NOTEBOOK_URL",
    "tests.dev-containers.snap.asyncio",
    "tests.dev-containers.snap.browser",
    "tests.dev-containers.snap.elements",
    "tests.dev-containers.snap.logging",
    "tests.dev-containers.snap.os",
    "tests.dev-containers.snap.page",
    "tests.dev-containers.snap.path"
   ]
  },
  "type": "module"
 },
 "tests.dev-containers.snap.LAB_PLAY_BUTTON_XPATH": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "tests.dev-containers.snap.LAB_URL": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "tests.dev-containers.snap.NB_PLAY_BUTTON_XPATH": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "tests.dev-containers.snap.NOTEBOOK_URL": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "tests.dev-containers.snap.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "tests.dev-containers.snap.browser": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "tests.dev-containers.snap.elements": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "tests.dev-containers.snap.launch": {
  "data": {
   "shadows": "pyppeteer.launch"
  },
  "type": "import"
 },
 "tests.dev-containers.snap.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "tests.dev-containers.snap.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tests.dev-containers.snap.page": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "tests.dev-containers.snap.path": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "tests.fixtures": {
  "data": {
   "symbols_in_volume": [
    "open",
    "tests.fixtures.fixture_name",
    "tests.fixtures.fixture_path",
    "tests.fixtures.fixture_text",
    "tests.fixtures.fixtures",
    "tests.fixtures.glob",
    "tests.fixtures.here",
    "tests.fixtures.json_glob",
    "tests.fixtures.os"
   ]
  },
  "type": "module"
 },
 "tests.fixtures.fixture_name": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "tests.fixtures.fixture_path": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "tests.fixtures.fixture_text": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "tests.fixtures.fixtures": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "tests.fixtures.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "tests.fixtures.here": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "tests.fixtures.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "tests.fixtures.json_glob": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "tests.fixtures.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "tests.fixtures.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tests.io": {
  "data": {},
  "type": "module"
 },
 "tests.io.test_html": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "tests.io.test_html.CDN_URL": {
  "data": {
   "shadows": "pydeck.io.html.CDN_URL"
  },
  "type": "import"
 },
 "tests.io.test_html.IPython": {
  "data": {
   "shadows": "IPython"
  },
  "type": "import"
 },
 "tests.io.test_html.MagicMock": {
  "data": {
   "shadows": "mock.MagicMock"
  },
  "type": "import"
 },
 "tests.io.test_html.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "tests.io.test_html.cdn_picker": {
  "data": {
   "shadows": "pydeck.io.html.cdn_picker"
  },
  "type": "import"
 },
 "tests.io.test_html.display_html": {
  "data": {
   "shadows": "pydeck.io.html.display_html"
  },
  "type": "import"
 },
 "tests.io.test_html.html": {
  "data": {
   "shadows": "html"
  },
  "type": "import"
 },
 "tests.io.test_html.iframe_with_srcdoc": {
  "data": {
   "shadows": "pydeck.io.html.iframe_with_srcdoc"
  },
  "type": "import"
 },
 "tests.io.test_html.in_jupyter": {
  "data": {
   "shadows": "pydeck.io.html.in_jupyter"
  },
  "type": "import"
 },
 "tests.io.test_html.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tests.io.test_html.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.io.test_html.render_json_to_html": {
  "data": {
   "shadows": "pydeck.io.html.render_json_to_html"
  },
  "type": "import"
 },
 "tests.io.test_html.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tests.io.test_html.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tests.io.test_html.test_cdn_picker": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "len",
    "pydeck.io.html.CDN_URL",
    "pydeck.io.html.cdn_picker"
   ]
  },
  "type": "function"
 },
 "tests.io.test_html.test_display_html": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "mock.MagicMock",
    "pydeck.io.html.display_html",
    "tests.io.test_html.webbrowser"
   ]
  },
  "type": "function"
 },
 "tests.io.test_html.test_iframe_with_srcdoc": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "mock.MagicMock",
    "pydeck.io.html.iframe_with_srcdoc",
    "tests.io.test_html.IPython",
    "tests.io.test_html.html"
   ]
  },
  "type": "function"
 },
 "tests.io.test_html.test_in_jupyter": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pydeck.io.html.in_jupyter"
   ]
  },
  "type": "function"
 },
 "tests.io.test_html.test_rendering_is_not_broken": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "pydeck.io.html.render_json_to_html"
   ]
  },
  "type": "function"
 },
 "tests.io.test_html.webbrowser": {
  "data": {
   "shadows": "webbrowser"
  },
  "type": "import"
 },
 "tests.notebooks": {
  "data": {},
  "type": "module"
 },
 "tests.notebooks.notebook_utils": {
  "data": {},
  "type": "module"
 },
 "tests.notebooks.notebook_utils.nbconvert": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "Exception",
    "tests.notebooks.notebook_utils.os",
    "tests.notebooks.notebook_utils.subprocess"
   ]
  },
  "type": "function"
 },
 "tests.notebooks.notebook_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tests.notebooks.notebook_utils.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "tests.notebooks.test_nbconvert": {
  "data": {
   "symbols_in_volume": [
    "tests.notebooks.test_nbconvert.here",
    "tests.notebooks.test_nbconvert.nb_path",
    "tests.notebooks.test_nbconvert.os"
   ]
  },
  "type": "module"
 },
 "tests.notebooks.test_nbconvert.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "tests.notebooks.test_nbconvert.here": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "tests.notebooks.test_nbconvert.nb_glob": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "tests.notebooks.test_nbconvert.nb_path": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "tests.notebooks.test_nbconvert.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tests.notebooks.test_nbconvert.test_nbconvert": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "nbconvert",
    "print",
    "tests.notebooks.test_nbconvert.glob",
    "tests.notebooks.test_nbconvert.nb_glob"
   ]
  },
  "type": "function"
 },
 "tests.test_data_utils": {
  "data": {},
  "type": "module"
 },
 "tests.test_data_utils.POINTS": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tests.test_data_utils.ViewState": {
  "data": {
   "shadows": "pydeck.ViewState"
  },
  "type": "import"
 },
 "tests.test_data_utils.bbox_to_zoom_level": {
  "data": {
   "shadows": "pydeck.data_utils.viewport_helpers.bbox_to_zoom_level"
  },
  "type": "import"
 },
 "tests.test_data_utils.compute_view": {
  "data": {
   "shadows": "pydeck.data_utils.viewport_helpers.compute_view"
  },
  "type": "import"
 },
 "tests.test_data_utils.euclidean": {
  "data": {
   "shadows": "pydeck.data_utils.viewport_helpers.euclidean"
  },
  "type": "import"
 },
 "tests.test_data_utils.geometric_mean": {
  "data": {
   "shadows": "pydeck.data_utils.viewport_helpers.geometric_mean"
  },
  "type": "import"
 },
 "tests.test_data_utils.get_bbox": {
  "data": {
   "shadows": "pydeck.data_utils.viewport_helpers.get_bbox"
  },
  "type": "import"
 },
 "tests.test_data_utils.get_n_pct": {
  "data": {
   "shadows": "pydeck.data_utils.viewport_helpers.get_n_pct"
  },
  "type": "import"
 },
 "tests.test_data_utils.is_pandas_df": {
  "data": {
   "shadows": "pydeck.data_utils.viewport_helpers.is_pandas_df"
  },
  "type": "import"
 },
 "tests.test_data_utils.k_nearest_neighbors": {
  "data": {
   "shadows": "pydeck.data_utils.viewport_helpers.k_nearest_neighbors"
  },
  "type": "import"
 },
 "tests.test_data_utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tests.test_data_utils.test_bbox_to_zoom_level": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pydeck.data_utils.viewport_helpers.bbox_to_zoom_level"
   ]
  },
  "type": "function"
 },
 "tests.test_data_utils.test_compute_view": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pydeck.ViewState",
    "pydeck.data_utils.viewport_helpers.compute_view",
    "str",
    "tests.test_data_utils.POINTS"
   ]
  },
  "type": "function"
 },
 "tests.test_data_utils.test_euclidean": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pydeck.data_utils.viewport_helpers.euclidean"
   ]
  },
  "type": "function"
 },
 "tests.test_data_utils.test_geometric_mean": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pydeck.data_utils.viewport_helpers.geometric_mean"
   ]
  },
  "type": "function"
 },
 "tests.test_data_utils.test_get_bbox": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "pydeck.data_utils.viewport_helpers.get_bbox"
   ]
  },
  "type": "function"
 },
 "tests.test_data_utils.test_get_n_pct": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "pydeck.data_utils.viewport_helpers.get_n_pct",
    "sum",
    "tests.test_data_utils.POINTS"
   ]
  },
  "type": "function"
 },
 "tests.test_data_utils.test_is_pandas_df": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pydeck.data_utils.viewport_helpers.is_pandas_df"
   ]
  },
  "type": "function"
 },
 "tests.test_data_utils.test_k_nearest_neighbors": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "pydeck.data_utils.viewport_helpers.k_nearest_neighbors",
    "tests.test_data_utils.POINTS"
   ]
  },
  "type": "function"
 },
 "tests.test_deckgl_widget": {
  "data": {},
  "type": "module"
 },
 "tests.test_deckgl_widget.DeckGLWidget": {
  "data": {
   "shadows": "pydeck.DeckGLWidget"
  },
  "type": "import"
 },
 "tests.test_deckgl_widget.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tests.test_deckgl_widget.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_deckgl_widget.test_example_creation_blank": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pydeck.DeckGLWidget"
   ]
  },
  "type": "function"
 },
 "tests.test_nbextension_path": {
  "data": {},
  "type": "module"
 },
 "tests.test_nbextension_path._jupyter_nbextension_paths": {
  "data": {
   "shadows": "pydeck._jupyter_nbextension_paths"
  },
  "type": "import"
 },
 "tests.test_nbextension_path.test_nbextension_path": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "len",
    "pydeck._jupyter_nbextension_paths"
   ]
  },
  "type": "function"
 },
 "tests.test_settings": {
  "data": {},
  "type": "module"
 },
 "tests.test_settings.pydeck": {
  "data": {
   "shadows": "pydeck"
  },
  "type": "import"
 },
 "tests.test_settings.test_settings_is_imported": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "tests.test_settings.pydeck"
   ]
  },
  "type": "function"
 }
}