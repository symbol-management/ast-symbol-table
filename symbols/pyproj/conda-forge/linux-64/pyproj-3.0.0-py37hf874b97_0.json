{
 "pyproj": {
  "lineno": null,
  "symbols_in_volume": [
   "pyproj._datadir._pyproj_global_context_initialize",
   "pyproj.exceptions.DataDirError",
   "pyproj.transformer.proj_version_str",
   "warnings.warn"
  ],
  "type": "module"
 },
 "pyproj.__main__": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "pyproj.__proj_version__",
   "pyproj.__version__"
  ],
  "type": "module"
 },
 "pyproj.__main__.main": {
  "lineno": 114,
  "symbols_in_volume": [
   "os.path.sep",
   "pyproj._show_versions.show_versions",
   "pyproj.aoi.BBox",
   "pyproj.datadir.get_data_dir",
   "pyproj.datadir.get_user_data_dir",
   "pyproj.sync._download_resource_file",
   "pyproj.sync.get_proj_endpoint",
   "pyproj.sync.get_transform_grid_list"
  ],
  "type": "function"
 },
 "pyproj._show_versions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyproj._show_versions._get_deps_info": {
  "lineno": 54,
  "symbols_in_volume": [
   "importlib.import_module",
   "sys.modules"
  ],
  "type": "function"
 },
 "pyproj._show_versions._get_deps_info.get_version": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj._show_versions._get_proj_info": {
  "lineno": 28,
  "symbols_in_volume": [
   "pyproj.__proj_version__",
   "pyproj.__version__",
   "pyproj.datadir.get_data_dir",
   "pyproj.datadir.get_user_data_dir",
   "pyproj.exceptions.DataDirError"
  ],
  "type": "function"
 },
 "pyproj._show_versions._get_sys_info": {
  "lineno": 12,
  "symbols_in_volume": [
   "platform.platform",
   "sys.executable",
   "sys.version.replace"
  ],
  "type": "function"
 },
 "pyproj._show_versions._print_info_dict": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj._show_versions.show_versions": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.aoi": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyproj.aoi.AreaOfInterest": {
  "lineno": 7,
  "symbols_in_volume": [
   "typing.NamedTuple"
  ],
  "type": "class"
 },
 "pyproj.aoi.AreaOfUse": {
  "lineno": 27,
  "symbols_in_volume": [
   "typing.NamedTuple",
   "typing.Optional"
  ],
  "type": "class"
 },
 "pyproj.aoi.AreaOfUse.__str__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.aoi.AreaOfUse.bounds": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.aoi.BBox": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyproj.aoi.BBox.__init__": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.aoi.BBox.__repr__": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.aoi.BBox.contains": {
  "lineno": 87,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "pyproj.aoi.BBox.intersects": {
  "lineno": 68,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "pyproj.compat": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyproj.compat.cstrencode": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.compat.pystrdecode": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyproj.crs._cf1x8": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyproj.crs._cf1x8._albers_conical_equal_area": {
  "lineno": 99,
  "symbols_in_volume": [
   "pyproj.crs.coordinate_operation.AlbersEqualAreaConversion"
  ],
  "type": "function"
 },
 "pyproj.crs._cf1x8._albers_conical_equal_area__to_cf": {
  "lineno": 372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs._cf1x8._azimuthal_equidistant": {
  "lineno": 116,
  "symbols_in_volume": [
   "pyproj.crs.coordinate_operation.AzumuthalEquidistantConversion"
  ],
  "type": "function"
 },
 "pyproj.crs._cf1x8._azimuthal_equidistant__to_cf": {
  "lineno": 391,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs._cf1x8._geostationary": {
  "lineno": 128,
  "symbols_in_volume": [
   "pyproj.crs.coordinate_operation.GeostationarySatelliteConversion"
  ],
  "type": "function"
 },
 "pyproj.crs._cf1x8._geostationary__to_cf": {
  "lineno": 405,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs._cf1x8._get_standard_parallels": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs._cf1x8._horizontal_datum_from_params": {
  "lineno": 36,
  "symbols_in_volume": [
   "pyproj._crs.Datum.from_name",
   "pyproj._crs.Ellipsoid.from_name",
   "pyproj._crs.PrimeMeridian.from_name",
   "pyproj.crs.datum.CustomDatum",
   "pyproj.crs.datum.CustomEllipsoid",
   "pyproj.crs.datum.CustomPrimeMeridian",
   "pyproj.exceptions.CRSError"
  ],
  "type": "function"
 },
 "pyproj.crs._cf1x8._lambert_azimuthal_equal_area": {
  "lineno": 146,
  "symbols_in_volume": [
   "pyproj.crs.coordinate_operation.LambertAzumuthalEqualAreaConversion"
  ],
  "type": "function"
 },
 "pyproj.crs._cf1x8._lambert_azimuthal_equal_area__to_cf": {
  "lineno": 426,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs._cf1x8._lambert_conformal_conic": {
  "lineno": 158,
  "symbols_in_volume": [
   "pyproj.crs.coordinate_operation.LambertConformalConic1SPConversion",
   "pyproj.crs.coordinate_operation.LambertConformalConic2SPConversion"
  ],
  "type": "function"
 },
 "pyproj.crs._cf1x8._lambert_conformal_conic__to_cf": {
  "lineno": 440,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs._cf1x8._lambert_cylindrical_equal_area": {
  "lineno": 182,
  "symbols_in_volume": [
   "pyproj.crs.coordinate_operation.LambertCylindricalEqualAreaConversion",
   "pyproj.crs.coordinate_operation.LambertCylindricalEqualAreaScaleConversion"
  ],
  "type": "function"
 },
 "pyproj.crs._cf1x8._lambert_cylindrical_equal_area__to_cf": {
  "lineno": 466,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs._cf1x8._mercator": {
  "lineno": 203,
  "symbols_in_volume": [
   "pyproj.crs.coordinate_operation.MercatorAConversion",
   "pyproj.crs.coordinate_operation.MercatorBConversion"
  ],
  "type": "function"
 },
 "pyproj.crs._cf1x8._mercator__to_cf": {
  "lineno": 480,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs._cf1x8._oblique_mercator": {
  "lineno": 225,
  "symbols_in_volume": [
   "pyproj.crs.coordinate_operation.HotineObliqueMercatorBConversion"
  ],
  "type": "function"
 },
 "pyproj.crs._cf1x8._oblique_mercator__to_cf": {
  "lineno": 505,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pyproj.crs._cf1x8._orthographic": {
  "lineno": 242,
  "symbols_in_volume": [
   "pyproj.crs.coordinate_operation.OrthographicConversion"
  ],
  "type": "function"
 },
 "pyproj.crs._cf1x8._orthographic__to_cf": {
  "lineno": 525,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs._cf1x8._polar_stereographic": {
  "lineno": 254,
  "symbols_in_volume": [
   "pyproj.crs.coordinate_operation.PolarStereographicAConversion",
   "pyproj.crs.coordinate_operation.PolarStereographicBConversion"
  ],
  "type": "function"
 },
 "pyproj.crs._cf1x8._polar_stereographic__to_cf": {
  "lineno": 539,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs._cf1x8._rotated_latitude_longitude": {
  "lineno": 332,
  "symbols_in_volume": [
   "pyproj.crs.coordinate_operation.RotatedLatitudeLongitudeConversion"
  ],
  "type": "function"
 },
 "pyproj.crs._cf1x8._rotated_latitude_longitude__to_cf": {
  "lineno": 620,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs._cf1x8._sinusoidal": {
  "lineno": 276,
  "symbols_in_volume": [
   "pyproj.crs.coordinate_operation.SinusoidalConversion"
  ],
  "type": "function"
 },
 "pyproj.crs._cf1x8._sinusoidal__to_cf": {
  "lineno": 562,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs._cf1x8._stereographic": {
  "lineno": 287,
  "symbols_in_volume": [
   "pyproj.crs.coordinate_operation.StereographicConversion"
  ],
  "type": "function"
 },
 "pyproj.crs._cf1x8._stereographic__to_cf": {
  "lineno": 575,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs._cf1x8._to_dict": {
  "lineno": 365,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs._cf1x8._transverse_mercator": {
  "lineno": 302,
  "symbols_in_volume": [
   "pyproj.crs.coordinate_operation.TransverseMercatorConversion"
  ],
  "type": "function"
 },
 "pyproj.crs._cf1x8._transverse_mercator__to_cf": {
  "lineno": 590,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs._cf1x8._try_list_if_string": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs._cf1x8._vertical_perspective": {
  "lineno": 317,
  "symbols_in_volume": [
   "pyproj.crs.coordinate_operation.VerticalPerspectiveConversion"
  ],
  "type": "function"
 },
 "pyproj.crs._cf1x8._vertical_perspective__to_cf": {
  "lineno": 605,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs.coordinate_operation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyproj.crs.coordinate_operation.AlbersEqualAreaConversion": {
  "lineno": 14,
  "symbols_in_volume": [
   "pyproj._crs.CoordinateOperation"
  ],
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.AlbersEqualAreaConversion.__new__": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.AzumuthalEquidistantConversion": {
  "lineno": 106,
  "symbols_in_volume": [
   "pyproj._crs.CoordinateOperation"
  ],
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.AzumuthalEquidistantConversion.__new__": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.EquidistantCylindricalConversion": {
  "lineno": 1401,
  "symbols_in_volume": [
   "pyproj._crs.CoordinateOperation"
  ],
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.EquidistantCylindricalConversion.__new__": {
  "lineno": 1410,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.GeostationarySatelliteConversion": {
  "lineno": 173,
  "symbols_in_volume": [
   "pyproj._crs.CoordinateOperation"
  ],
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.GeostationarySatelliteConversion.__new__": {
  "lineno": 182,
  "symbols_in_volume": [
   "pyproj.exceptions.CRSError",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.HotineObliqueMercatorBConversion": {
  "lineno": 749,
  "symbols_in_volume": [
   "pyproj._crs.CoordinateOperation"
  ],
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.HotineObliqueMercatorBConversion.__new__": {
  "lineno": 758,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.LambertAzumuthalEqualAreaConversion": {
  "lineno": 260,
  "symbols_in_volume": [
   "pyproj._crs.CoordinateOperation"
  ],
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.LambertAzumuthalEqualAreaConversion.__new__": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.LambertConformalConic1SPConversion": {
  "lineno": 412,
  "symbols_in_volume": [
   "pyproj._crs.CoordinateOperation"
  ],
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.LambertConformalConic1SPConversion.__new__": {
  "lineno": 421,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.LambertConformalConic2SPConversion": {
  "lineno": 327,
  "symbols_in_volume": [
   "pyproj._crs.CoordinateOperation"
  ],
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.LambertConformalConic2SPConversion.__new__": {
  "lineno": 336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.LambertCylindricalEqualAreaConversion": {
  "lineno": 488,
  "symbols_in_volume": [
   "pyproj._crs.CoordinateOperation"
  ],
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.LambertCylindricalEqualAreaConversion.__new__": {
  "lineno": 497,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.LambertCylindricalEqualAreaScaleConversion": {
  "lineno": 555,
  "symbols_in_volume": [
   "pyproj._crs.CoordinateOperation"
  ],
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.LambertCylindricalEqualAreaScaleConversion.__new__": {
  "lineno": 570,
  "symbols_in_volume": [
   "pyproj.crs.CRS"
  ],
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.MercatorAConversion": {
  "lineno": 606,
  "symbols_in_volume": [
   "pyproj._crs.CoordinateOperation"
  ],
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.MercatorAConversion.__new__": {
  "lineno": 615,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.MercatorBConversion": {
  "lineno": 682,
  "symbols_in_volume": [
   "pyproj._crs.CoordinateOperation"
  ],
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.MercatorBConversion.__new__": {
  "lineno": 691,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.OrthographicConversion": {
  "lineno": 842,
  "symbols_in_volume": [
   "pyproj._crs.CoordinateOperation"
  ],
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.OrthographicConversion.__new__": {
  "lineno": 851,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.PolarStereographicAConversion": {
  "lineno": 909,
  "symbols_in_volume": [
   "pyproj._crs.CoordinateOperation"
  ],
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.PolarStereographicAConversion.__new__": {
  "lineno": 918,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.PolarStereographicBConversion": {
  "lineno": 986,
  "symbols_in_volume": [
   "pyproj._crs.CoordinateOperation"
  ],
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.PolarStereographicBConversion.__new__": {
  "lineno": 995,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.RotatedLatitudeLongitudeConversion": {
  "lineno": 1364,
  "symbols_in_volume": [
   "pyproj._crs.CoordinateOperation"
  ],
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.RotatedLatitudeLongitudeConversion.__new__": {
  "lineno": 1373,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.SinusoidalConversion": {
  "lineno": 1053,
  "symbols_in_volume": [
   "pyproj._crs.CoordinateOperation"
  ],
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.SinusoidalConversion.__new__": {
  "lineno": 1062,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.StereographicConversion": {
  "lineno": 1108,
  "symbols_in_volume": [
   "pyproj._crs.CoordinateOperation"
  ],
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.StereographicConversion.__new__": {
  "lineno": 1117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.ToWGS84Transformation": {
  "lineno": 1480,
  "symbols_in_volume": [
   "pyproj._crs.CoordinateOperation"
  ],
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.ToWGS84Transformation.__new__": {
  "lineno": 1487,
  "symbols_in_volume": [
   "pyproj.crs.CRS.from_user_input",
   "typing.Any"
  ],
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.TransverseMercatorConversion": {
  "lineno": 1203,
  "symbols_in_volume": [
   "pyproj._crs.CoordinateOperation"
  ],
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.TransverseMercatorConversion.__new__": {
  "lineno": 1212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.UTMConversion": {
  "lineno": 1182,
  "symbols_in_volume": [
   "pyproj._crs.CoordinateOperation"
  ],
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.UTMConversion.__new__": {
  "lineno": 1191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.VerticalPerspectiveConversion": {
  "lineno": 1279,
  "symbols_in_volume": [
   "pyproj._crs.CoordinateOperation"
  ],
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.VerticalPerspectiveConversion.__new__": {
  "lineno": 1288,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs.coordinate_system": {
  "lineno": null,
  "symbols_in_volume": [
   "pyproj.crs.enums.Cartesian2DCSAxis.EASTING_NORTHING",
   "pyproj.crs.enums.Cartesian2DCSAxis.EASTING_NORTHING_FT",
   "pyproj.crs.enums.Cartesian2DCSAxis.EASTING_NORTHING_US_FT",
   "pyproj.crs.enums.Cartesian2DCSAxis.NORTHING_EASTING",
   "pyproj.crs.enums.Cartesian2DCSAxis.NORTHING_EASTING_FT",
   "pyproj.crs.enums.Cartesian2DCSAxis.NORTHING_EASTING_US_FT",
   "pyproj.crs.enums.Cartesian2DCSAxis.NORTH_POLE_EASTING_SOUTH_NORTHING_SOUTH",
   "pyproj.crs.enums.Cartesian2DCSAxis.SOUTH_POLE_EASTING_NORTH_NORTHING_NORTH",
   "pyproj.crs.enums.Cartesian2DCSAxis.WESTING_SOUTHING",
   "pyproj.crs.enums.Ellipsoidal2DCSAxis.LATITUDE_LONGITUDE",
   "pyproj.crs.enums.Ellipsoidal2DCSAxis.LONGITUDE_LATITUDE",
   "pyproj.crs.enums.Ellipsoidal3DCSAxis.LATITUDE_LONGITUDE_HEIGHT",
   "pyproj.crs.enums.Ellipsoidal3DCSAxis.LONGITUDE_LATITUDE_HEIGHT",
   "pyproj.crs.enums.VerticalCSAxis.DEPTH",
   "pyproj.crs.enums.VerticalCSAxis.DEPTH_FT",
   "pyproj.crs.enums.VerticalCSAxis.DEPTH_US_FT",
   "pyproj.crs.enums.VerticalCSAxis.GRAVITY_HEIGHT",
   "pyproj.crs.enums.VerticalCSAxis.GRAVITY_HEIGHT_FT",
   "pyproj.crs.enums.VerticalCSAxis.GRAVITY_HEIGHT_US_FT",
   "pyproj.crs.enums.VerticalCSAxis.UP",
   "pyproj.crs.enums.VerticalCSAxis.UP_FT",
   "pyproj.crs.enums.VerticalCSAxis.UP_US_FT"
  ],
  "type": "module"
 },
 "pyproj.crs.coordinate_system.Cartesian2DCS": {
  "lineno": 275,
  "symbols_in_volume": [
   "pyproj._crs.CoordinateSystem"
  ],
  "type": "class"
 },
 "pyproj.crs.coordinate_system.Cartesian2DCS.__new__": {
  "lineno": 282,
  "symbols_in_volume": [
   "pyproj.crs.enums.Cartesian2DCSAxis",
   "pyproj.crs.enums.Cartesian2DCSAxis.EASTING_NORTHING",
   "pyproj.crs.enums.Cartesian2DCSAxis.create",
   "typing.Union"
  ],
  "type": "function"
 },
 "pyproj.crs.coordinate_system.Ellipsoidal2DCS": {
  "lineno": 57,
  "symbols_in_volume": [
   "pyproj._crs.CoordinateSystem"
  ],
  "type": "class"
 },
 "pyproj.crs.coordinate_system.Ellipsoidal2DCS.__new__": {
  "lineno": 64,
  "symbols_in_volume": [
   "pyproj.crs.enums.Ellipsoidal2DCSAxis",
   "pyproj.crs.enums.Ellipsoidal2DCSAxis.LONGITUDE_LATITUDE",
   "pyproj.crs.enums.Ellipsoidal2DCSAxis.create",
   "typing.Union"
  ],
  "type": "function"
 },
 "pyproj.crs.coordinate_system.Ellipsoidal3DCS": {
  "lineno": 127,
  "symbols_in_volume": [
   "pyproj._crs.CoordinateSystem"
  ],
  "type": "class"
 },
 "pyproj.crs.coordinate_system.Ellipsoidal3DCS.__new__": {
  "lineno": 134,
  "symbols_in_volume": [
   "pyproj.crs.enums.Ellipsoidal3DCSAxis",
   "pyproj.crs.enums.Ellipsoidal3DCSAxis.LONGITUDE_LATITUDE_HEIGHT",
   "pyproj.crs.enums.Ellipsoidal3DCSAxis.create",
   "typing.Union"
  ],
  "type": "function"
 },
 "pyproj.crs.coordinate_system.VerticalCS": {
  "lineno": 358,
  "symbols_in_volume": [
   "pyproj._crs.CoordinateSystem"
  ],
  "type": "class"
 },
 "pyproj.crs.coordinate_system.VerticalCS.__new__": {
  "lineno": 365,
  "symbols_in_volume": [
   "pyproj.crs.enums.VerticalCSAxis",
   "pyproj.crs.enums.VerticalCSAxis.GRAVITY_HEIGHT",
   "pyproj.crs.enums.VerticalCSAxis.create",
   "typing.Union"
  ],
  "type": "function"
 },
 "pyproj.crs.crs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyproj.crs.crs.BoundCRS": {
  "lineno": 1272,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyproj.crs.crs.BoundCRS.__init__": {
  "lineno": 1279,
  "symbols_in_volume": [
   "pyproj._crs.CoordinateOperation.from_user_input",
   "typing.Any"
  ],
  "type": "function"
 },
 "pyproj.crs.crs.CRS": {
  "lineno": 115,
  "symbols_in_volume": [
   "pyproj._crs._CRS"
  ],
  "type": "class"
 },
 "pyproj.crs.crs.CRS.__eq__": {
  "lineno": 992,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "pyproj.crs.crs.CRS.__hash__": {
  "lineno": 1002,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs.crs.CRS.__init__": {
  "lineno": 138,
  "symbols_in_volume": [
   "pyproj.exceptions.CRSError",
   "typing.Any"
  ],
  "type": "function"
 },
 "pyproj.crs.crs.CRS.__ne__": {
  "lineno": 995,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "pyproj.crs.crs.CRS.__reduce__": {
  "lineno": 998,
  "symbols_in_volume": [
   "typing.Tuple",
   "typing.Type"
  ],
  "type": "function"
 },
 "pyproj.crs.crs.CRS.__repr__": {
  "lineno": 1008,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs.crs.CRS.__str__": {
  "lineno": 1005,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs.crs.CRS.cs_to_cf": {
  "lineno": 799,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "pyproj.crs.crs.CRS.cs_to_cf.rotated_pole": {
  "lineno": 815,
  "symbols_in_volume": [
   "pyproj.crs._cf1x8._INVERSE_GEOGRAPHIC_GRID_MAPPING_NAME_MAP"
  ],
  "type": "function"
 },
 "pyproj.crs.crs.CRS.equals": {
  "lineno": 882,
  "symbols_in_volume": [
   "pyproj.exceptions.CRSError",
   "typing.Any"
  ],
  "type": "function"
 },
 "pyproj.crs.crs.CRS.from_authority": {
  "lineno": 298,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "pyproj.crs.crs.CRS.from_cf": {
  "lineno": 672,
  "symbols_in_volume": [
   "pyproj._crs.CoordinateSystem.from_user_input",
   "pyproj.crs._cf1x8._GEOGRAPHIC_GRID_MAPPING_NAME_MAP",
   "pyproj.crs._cf1x8._GRID_MAPPING_NAME_MAP",
   "pyproj.crs._cf1x8._horizontal_datum_from_params",
   "pyproj.crs._cf1x8._try_list_if_string",
   "pyproj.crs.coordinate_operation.ToWGS84Transformation",
   "pyproj.exceptions.CRSError",
   "typing.Any"
  ],
  "type": "function"
 },
 "pyproj.crs.crs.CRS.from_dict": {
  "lineno": 457,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs.crs.CRS.from_epsg": {
  "lineno": 318,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "pyproj.crs.crs.CRS.from_json": {
  "lineno": 475,
  "symbols_in_volume": [
   "pyproj._crs._load_proj_json"
  ],
  "type": "function"
 },
 "pyproj.crs.crs.CRS.from_json_dict": {
  "lineno": 493,
  "symbols_in_volume": [
   "json.dumps"
  ],
  "type": "function"
 },
 "pyproj.crs.crs.CRS.from_proj4": {
  "lineno": 333,
  "symbols_in_volume": [
   "pyproj._crs.is_proj",
   "pyproj.exceptions.CRSError"
  ],
  "type": "function"
 },
 "pyproj.crs.crs.CRS.from_string": {
  "lineno": 373,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs.crs.CRS.from_user_input": {
  "lineno": 414,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "pyproj.crs.crs.CRS.from_wkt": {
  "lineno": 353,
  "symbols_in_volume": [
   "pyproj._crs.is_wkt",
   "pyproj.exceptions.CRSError"
  ],
  "type": "function"
 },
 "pyproj.crs.crs.CRS.geodetic_crs": {
  "lineno": 909,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "pyproj.crs.crs.CRS.get_geod": {
  "lineno": 442,
  "symbols_in_volume": [
   "pyproj.geod.Geod",
   "typing.Optional"
  ],
  "type": "function"
 },
 "pyproj.crs.crs.CRS.is_exact_same": {
  "lineno": 861,
  "symbols_in_volume": [
   "pyproj.exceptions.CRSError",
   "typing.Any"
  ],
  "type": "function"
 },
 "pyproj.crs.crs.CRS.source_crs": {
  "lineno": 925,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "pyproj.crs.crs.CRS.sub_crs_list": {
  "lineno": 956,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "pyproj.crs.crs.CRS.target_crs": {
  "lineno": 940,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "pyproj.crs.crs.CRS.to_cf": {
  "lineno": 554,
  "symbols_in_volume": [
   "pyproj.crs._cf1x8._INVERSE_GEOGRAPHIC_GRID_MAPPING_NAME_MAP",
   "pyproj.crs._cf1x8._INVERSE_GRID_MAPPING_NAME_MAP",
   "pyproj.enums.WktVersion",
   "pyproj.enums.WktVersion.WKT2_2019",
   "typing.Union",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pyproj.crs.crs.CRS.to_dict": {
  "lineno": 511,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs.crs.CRS.to_dict.parse": {
  "lineno": 528,
  "symbols_in_volume": [
   "pyproj.crs._cf1x8._try_list_if_string"
  ],
  "type": "function"
 },
 "pyproj.crs.crs.CRS.to_string": {
  "lineno": 395,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs.crs.CRS.utm_zone": {
  "lineno": 967,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "pyproj.crs.crs.CompoundCRS": {
  "lineno": 1242,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyproj.crs.crs.CompoundCRS.__init__": {
  "lineno": 1249,
  "symbols_in_volume": [
   "typing.Any",
   "typing.List"
  ],
  "type": "function"
 },
 "pyproj.crs.crs.DerivedGeographicCRS": {
  "lineno": 1104,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyproj.crs.crs.DerivedGeographicCRS.__init__": {
  "lineno": 1111,
  "symbols_in_volume": [
   "pyproj._crs.CoordinateOperation.from_user_input",
   "pyproj._crs.CoordinateSystem.from_user_input",
   "pyproj.crs.coordinate_system.Ellipsoidal2DCS",
   "typing.Any"
  ],
  "type": "function"
 },
 "pyproj.crs.crs.GeographicCRS": {
  "lineno": 1066,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyproj.crs.crs.GeographicCRS.__init__": {
  "lineno": 1073,
  "symbols_in_volume": [
   "pyproj._crs.CoordinateSystem.from_user_input",
   "pyproj._crs.Datum.from_user_input",
   "pyproj.crs.coordinate_system.Ellipsoidal2DCS",
   "typing.Any"
  ],
  "type": "function"
 },
 "pyproj.crs.crs.ProjectedCRS": {
  "lineno": 1149,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyproj.crs.crs.ProjectedCRS.__init__": {
  "lineno": 1156,
  "symbols_in_volume": [
   "pyproj._crs.CoordinateOperation.from_user_input",
   "pyproj._crs.CoordinateSystem.from_user_input",
   "pyproj.crs.coordinate_system.Cartesian2DCS",
   "typing.Any"
  ],
  "type": "function"
 },
 "pyproj.crs.crs.VerticalCRS": {
  "lineno": 1196,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyproj.crs.crs.VerticalCRS.__init__": {
  "lineno": 1206,
  "symbols_in_volume": [
   "pyproj._crs.CoordinateSystem.from_user_input",
   "pyproj._crs.Datum.from_user_input",
   "pyproj.crs.coordinate_system.VerticalCS",
   "typing.Any",
   "typing.Optional"
  ],
  "type": "function"
 },
 "pyproj.crs.crs._prepare_from_authority": {
  "lineno": 107,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "pyproj.crs.crs._prepare_from_dict": {
  "lineno": 36,
  "symbols_in_volume": [
   "json.dumps"
  ],
  "type": "function"
 },
 "pyproj.crs.crs._prepare_from_epsg": {
  "lineno": 111,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "pyproj.crs.crs._prepare_from_string": {
  "lineno": 56,
  "symbols_in_volume": [
   "json.loads",
   "pyproj._crs.is_proj",
   "pyproj.exceptions.CRSError",
   "re.sub",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pyproj.crs.datum": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyproj.crs.datum.CustomDatum": {
  "lineno": 10,
  "symbols_in_volume": [
   "pyproj._crs.Datum"
  ],
  "type": "class"
 },
 "pyproj.crs.datum.CustomDatum.__new__": {
  "lineno": 17,
  "symbols_in_volume": [
   "pyproj._crs.Ellipsoid.from_user_input",
   "pyproj._crs.PrimeMeridian.from_user_input",
   "typing.Any"
  ],
  "type": "function"
 },
 "pyproj.crs.datum.CustomEllipsoid": {
  "lineno": 46,
  "symbols_in_volume": [
   "pyproj._crs.Ellipsoid"
  ],
  "type": "class"
 },
 "pyproj.crs.datum.CustomEllipsoid.__new__": {
  "lineno": 53,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "pyproj.crs.datum.CustomPrimeMeridian": {
  "lineno": 94,
  "symbols_in_volume": [
   "pyproj._crs.PrimeMeridian"
  ],
  "type": "class"
 },
 "pyproj.crs.datum.CustomPrimeMeridian.__new__": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.crs.enums": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyproj.crs.enums.Cartesian2DCSAxis": {
  "lineno": 50,
  "symbols_in_volume": [
   "pyproj.enums.BaseEnum"
  ],
  "type": "class"
 },
 "pyproj.crs.enums.CoordinateOperationType": {
  "lineno": 29,
  "symbols_in_volume": [
   "pyproj.enums.BaseEnum"
  ],
  "type": "class"
 },
 "pyproj.crs.enums.DatumType": {
  "lineno": 7,
  "symbols_in_volume": [
   "pyproj.enums.BaseEnum"
  ],
  "type": "class"
 },
 "pyproj.crs.enums.Ellipsoidal2DCSAxis": {
  "lineno": 81,
  "symbols_in_volume": [
   "pyproj.enums.BaseEnum"
  ],
  "type": "class"
 },
 "pyproj.crs.enums.Ellipsoidal3DCSAxis": {
  "lineno": 98,
  "symbols_in_volume": [
   "pyproj.enums.BaseEnum"
  ],
  "type": "class"
 },
 "pyproj.crs.enums.VerticalCSAxis": {
  "lineno": 115,
  "symbols_in_volume": [
   "pyproj.enums.BaseEnum"
  ],
  "type": "class"
 },
 "pyproj.datadir": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyproj.datadir.append_data_dir": {
  "lineno": 40,
  "symbols_in_volume": [
   "os.pathsep.join",
   "pathlib.Path",
   "typing.Union"
  ],
  "type": "function"
 },
 "pyproj.datadir.get_data_dir": {
  "lineno": 52,
  "symbols_in_volume": [
   "distutils.spawn.find_executable",
   "os.environ.get",
   "pathlib.Path",
   "pyproj.exceptions.DataDirError",
   "sys.prefix"
  ],
  "type": "function"
 },
 "pyproj.datadir.get_data_dir.valid_data_dir": {
  "lineno": 77,
  "symbols_in_volume": [
   "pathlib.Path"
  ],
  "type": "function"
 },
 "pyproj.datadir.get_data_dir.valid_data_dirs": {
  "lineno": 85,
  "symbols_in_volume": [
   "os.pathsep"
  ],
  "type": "function"
 },
 "pyproj.datadir.set_data_dir": {
  "lineno": 20,
  "symbols_in_volume": [
   "pathlib.Path",
   "pyproj._datadir._global_context_set_data_dir",
   "typing.Union"
  ],
  "type": "function"
 },
 "pyproj.enums": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyproj.enums.BaseEnum": {
  "lineno": 7,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "pyproj.enums.BaseEnum.create": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.enums.PJType": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyproj.enums.ProjVersion": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyproj.enums.TransformDirection": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyproj.enums.WktVersion": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyproj.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyproj.exceptions.CRSError": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyproj.exceptions.DataDirError": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyproj.exceptions.GeodError": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyproj.exceptions.ProjError": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyproj.exceptions.ProjError.__init__": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.exceptions.ProjError.clear": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.geod": {
  "lineno": null,
  "symbols_in_volume": [
   "pyproj.list.get_ellps_map"
  ],
  "type": "module"
 },
 "pyproj.geod.Geod": {
  "lineno": 25,
  "symbols_in_volume": [
   "pyproj._geod.Geod"
  ],
  "type": "class"
 },
 "pyproj.geod.Geod.__eq__": {
  "lineno": 615,
  "symbols_in_volume": [
   "pyproj._geod.Geod",
   "typing.Any"
  ],
  "type": "function"
 },
 "pyproj.geod.Geod.__init__": {
  "lineno": 53,
  "symbols_in_volume": [
   "math.fabs",
   "math.sqrt",
   "typing.Optional"
  ],
  "type": "function"
 },
 "pyproj.geod.Geod.__repr__": {
  "lineno": 601,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.geod.Geod.fwd": {
  "lineno": 179,
  "symbols_in_volume": [
   "pyproj.utils._convertback",
   "pyproj.utils._copytobuffer",
   "typing.Any",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "pyproj.geod.Geod.geometry_area_perimeter": {
  "lineno": 517,
  "symbols_in_volume": [
   "pyproj.exceptions.GeodError",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "pyproj.geod.Geod.geometry_length": {
  "lineno": 472,
  "symbols_in_volume": [
   "pyproj.exceptions.GeodError"
  ],
  "type": "function"
 },
 "pyproj.geod.Geod.inv": {
  "lineno": 224,
  "symbols_in_volume": [
   "pyproj.utils._convertback",
   "pyproj.utils._copytobuffer",
   "typing.Any",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "pyproj.geod.Geod.line_length": {
  "lineno": 351,
  "symbols_in_volume": [
   "pyproj.utils._copytobuffer",
   "typing.Any"
  ],
  "type": "function"
 },
 "pyproj.geod.Geod.line_lengths": {
  "lineno": 387,
  "symbols_in_volume": [
   "pyproj.utils._convertback",
   "pyproj.utils._copytobuffer",
   "typing.Any"
  ],
  "type": "function"
 },
 "pyproj.geod.Geod.npts": {
  "lineno": 268,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "pyproj.geod.Geod.polygon_area_perimeter": {
  "lineno": 423,
  "symbols_in_volume": [
   "pyproj.utils._copytobuffer",
   "typing.Any",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "pyproj.network": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyproj.network.set_ca_bundle_path": {
  "lineno": 17,
  "symbols_in_volume": [
   "certifi.where",
   "os.environ",
   "pathlib.Path",
   "pyproj._network._set_ca_bundle_path",
   "typing.Union"
  ],
  "type": "function"
 },
 "pyproj.proj": {
  "lineno": null,
  "symbols_in_volume": [
   "pyproj.list.get_proj_operations_map"
  ],
  "type": "module"
 },
 "pyproj.proj.Proj": {
  "lineno": 32,
  "symbols_in_volume": [
   "pyproj.transformer.Transformer"
  ],
  "type": "class"
 },
 "pyproj.proj.Proj.__call__": {
  "lineno": 136,
  "symbols_in_volume": [
   "pyproj.enums.TransformDirection.FORWARD",
   "pyproj.enums.TransformDirection.INVERSE",
   "typing.Any",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "pyproj.proj.Proj.__init__": {
  "lineno": 47,
  "symbols_in_volume": [
   "pyproj._transformer._Transformer.from_pipeline",
   "pyproj.compat.cstrencode",
   "pyproj.crs.CRS",
   "pyproj.crs.CRS.from_user_input",
   "re.sub",
   "typing.Any",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "pyproj.proj.Proj.__reduce__": {
  "lineno": 281,
  "symbols_in_volume": [
   "typing.Tuple",
   "typing.Type"
  ],
  "type": "function"
 },
 "pyproj.proj.Proj.definition_string": {
  "lineno": 263,
  "symbols_in_volume": [
   "pyproj.compat.pystrdecode"
  ],
  "type": "function"
 },
 "pyproj.proj.Proj.get_factors": {
  "lineno": 190,
  "symbols_in_volume": [
   "pyproj._transformer.Factors",
   "pyproj.utils._convertback",
   "pyproj.utils._copytobuffer",
   "typing.Any"
  ],
  "type": "function"
 },
 "pyproj.proj.Proj.to_latlong": {
  "lineno": 276,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.proj.Proj.to_latlong_def": {
  "lineno": 271,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "pyproj.sync": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyproj.sync._bbox_from_coords": {
  "lineno": 20,
  "symbols_in_volume": [
   "pyproj.aoi.BBox",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "pyproj.sync._bbox_from_geom": {
  "lineno": 42,
  "symbols_in_volume": [
   "pyproj.aoi.BBox",
   "typing.Any",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "pyproj.sync._download_resource_file": {
  "lineno": 168,
  "symbols_in_volume": [
   "os.remove",
   "pathlib.Path",
   "urllib.request.urlretrieve"
  ],
  "type": "function"
 },
 "pyproj.sync._filter_bbox": {
  "lineno": 78,
  "symbols_in_volume": [
   "pyproj.aoi.BBox",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "pyproj.sync._filter_download_needed": {
  "lineno": 142,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "pyproj.sync._filter_properties": {
  "lineno": 104,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "pyproj.sync._is_download_needed": {
  "lineno": 129,
  "symbols_in_volume": [
   "os.pathsep",
   "pathlib.Path",
   "pyproj.datadir.get_data_dir",
   "pyproj.datadir.get_user_data_dir"
  ],
  "type": "function"
 },
 "pyproj.sync._load_grid_geojson": {
  "lineno": 189,
  "symbols_in_volume": [
   "datetime.datetime.fromtimestamp",
   "datetime.datetime.utcnow",
   "json.loads",
   "pathlib.Path",
   "pyproj._sync.get_proj_endpoint",
   "pyproj.datadir.get_user_data_dir",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "pyproj.sync._sha256sum": {
  "lineno": 155,
  "symbols_in_volume": [
   "hashlib.sha256"
  ],
  "type": "function"
 },
 "pyproj.sync.get_transform_grid_list": {
  "lineno": 211,
  "symbols_in_volume": [
   "functools.partial",
   "pyproj.aoi.BBox",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "pyproj.transformer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyproj.transformer.Transformer": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyproj.transformer.Transformer.__eq__": {
  "lineno": 711,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "pyproj.transformer.Transformer.__init__": {
  "lineno": 178,
  "symbols_in_volume": [
   "pyproj._transformer._Transformer",
   "pyproj.exceptions.ProjError",
   "pyproj.exceptions.ProjError.clear",
   "typing.Optional"
  ],
  "type": "function"
 },
 "pyproj.transformer.Transformer.__repr__": {
  "lineno": 704,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.transformer.Transformer.__str__": {
  "lineno": 701,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.transformer.Transformer.accuracy": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.transformer.Transformer.area_of_use": {
  "lineno": 222,
  "symbols_in_volume": [
   "pyproj._crs.AreaOfUse"
  ],
  "type": "function"
 },
 "pyproj.transformer.Transformer.definition": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.transformer.Transformer.description": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.transformer.Transformer.from_crs": {
  "lineno": 331,
  "symbols_in_volume": [
   "pyproj.CRS.from_user_input",
   "pyproj._transformer.AreaOfInterest",
   "pyproj._transformer._Transformer.from_crs",
   "typing.Any",
   "typing.Optional"
  ],
  "type": "function"
 },
 "pyproj.transformer.Transformer.from_pipeline": {
  "lineno": 377,
  "symbols_in_volume": [
   "pyproj._transformer._Transformer.from_pipeline",
   "pyproj.compat.cstrencode"
  ],
  "type": "function"
 },
 "pyproj.transformer.Transformer.from_proj": {
  "lineno": 280,
  "symbols_in_volume": [
   "pyproj.Proj",
   "pyproj._transformer.AreaOfInterest",
   "typing.Any",
   "typing.Optional"
  ],
  "type": "function"
 },
 "pyproj.transformer.Transformer.has_inverse": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.transformer.Transformer.is_exact_same": {
  "lineno": 716,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "pyproj.transformer.Transformer.is_network_enabled": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.transformer.Transformer.itransform": {
  "lineno": 511,
  "symbols_in_volume": [
   "array.array",
   "itertools.chain",
   "itertools.islice",
   "pyproj.enums.TransformDirection",
   "pyproj.enums.TransformDirection.FORWARD",
   "typing.Any",
   "typing.Iterable",
   "typing.Iterator",
   "typing.Union"
  ],
  "type": "function"
 },
 "pyproj.transformer.Transformer.name": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.transformer.Transformer.operations": {
  "lineno": 258,
  "symbols_in_volume": [
   "pyproj._crs.CoordinateOperation",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "pyproj.transformer.Transformer.remarks": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.transformer.Transformer.scope": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.transformer.Transformer.to_json": {
  "lineno": 668,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.transformer.Transformer.to_json_dict": {
  "lineno": 688,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.transformer.Transformer.to_wkt": {
  "lineno": 636,
  "symbols_in_volume": [
   "pyproj.enums.WktVersion",
   "pyproj.enums.WktVersion.WKT2_2019",
   "typing.Union"
  ],
  "type": "function"
 },
 "pyproj.transformer.Transformer.transform": {
  "lineno": 395,
  "symbols_in_volume": [
   "pyproj.enums.TransformDirection",
   "pyproj.enums.TransformDirection.FORWARD",
   "pyproj.utils._convertback",
   "pyproj.utils._copytobuffer",
   "typing.Any",
   "typing.Union"
  ],
  "type": "function"
 },
 "pyproj.transformer.TransformerGroup": {
  "lineno": 34,
  "symbols_in_volume": [
   "pyproj._transformer._TransformerGroup"
  ],
  "type": "class"
 },
 "pyproj.transformer.TransformerGroup.__init__": {
  "lineno": 50,
  "symbols_in_volume": [
   "pyproj.CRS.from_user_input",
   "pyproj._transformer.AreaOfInterest",
   "typing.Any",
   "typing.Optional"
  ],
  "type": "function"
 },
 "pyproj.transformer.TransformerGroup.__repr__": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.transformer.TransformerGroup.best_available": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyproj.transformer.TransformerGroup.download_grids": {
  "lineno": 116,
  "symbols_in_volume": [
   "pathlib.Path",
   "pyproj.datadir.get_user_data_dir",
   "pyproj.sync._download_resource_file",
   "typing.Optional",
   "typing.Union",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pyproj.transformer.TransformerGroup.transformers": {
  "lineno": 91,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "pyproj.transformer.TransformerGroup.unavailable_operations": {
  "lineno": 100,
  "symbols_in_volume": [
   "pyproj._crs.CoordinateOperation",
   "typing.List"
  ],
  "type": "function"
 },
 "pyproj.transformer.itransform": {
  "lineno": 823,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Iterable",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pyproj.transformer.transform": {
  "lineno": 722,
  "symbols_in_volume": [
   "typing.Any",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pyproj.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyproj.utils._convertback": {
  "lineno": 87,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "pyproj.utils._copytobuffer": {
  "lineno": 21,
  "symbols_in_volume": [
   "array.array",
   "typing.Any",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "pyproj.utils._copytobuffer_return_scalar": {
  "lineno": 8,
  "symbols_in_volume": [
   "array.array",
   "typing.Any",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.conftest": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pyproj.__proj_version__",
   "pyproj.network.is_network_enabled"
  ],
  "type": "module"
 },
 "test.conftest.get_wgs84_datum_name": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.conftest.grids_available": {
  "lineno": 59,
  "symbols_in_volume": [
   "os.environ.get",
   "pathlib.Path",
   "pyproj.datadir.get_data_dir",
   "pyproj.datadir.get_user_data_dir"
  ],
  "type": "function"
 },
 "test.conftest.proj_env": {
  "lineno": 29,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "pyproj.datadir.get_data_dir",
   "pyproj.datadir.set_data_dir"
  ],
  "type": "function"
 },
 "test.conftest.proj_network_env": {
  "lineno": 18,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "pyproj.network.set_network_enabled"
  ],
  "type": "function"
 },
 "test.conftest.tmp_chdir": {
  "lineno": 44,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "os.chdir",
   "os.getcwd"
  ],
  "type": "function"
 },
 "test.conftest.unset_data_dir": {
  "lineno": 13,
  "symbols_in_volume": [
   "pyproj.datadir._USER_PROJ_DATA",
   "pyproj.datadir._VALIDATED_PROJ_DATA"
  ],
  "type": "function"
 },
 "test.test_aoi": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.test_aoi.test_backwards_compatible_import_paths": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.test_aoi.test_contains": {
  "lineno": 8,
  "symbols_in_volume": [
   "pyproj.aoi.BBox"
  ],
  "type": "function"
 },
 "test.test_aoi.test_intersects": {
  "lineno": 16,
  "symbols_in_volume": [
   "pyproj.aoi.BBox"
  ],
  "type": "function"
 },
 "test.test_aoi.test_not_contains": {
  "lineno": 12,
  "symbols_in_volume": [
   "pyproj.aoi.BBox"
  ],
  "type": "function"
 },
 "test.test_aoi.test_not_intersects": {
  "lineno": 20,
  "symbols_in_volume": [
   "pyproj.aoi.BBox"
  ],
  "type": "function"
 },
 "test.test_awips221": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.test_awips221.test_awips221": {
  "lineno": 14,
  "symbols_in_volume": [
   "array.array",
   "numpy.fabs",
   "numpy.indices",
   "numpy.maximum.reduce",
   "numpy.minimum.reduce",
   "numpy.ravel",
   "numpy.testing.assert_allclose",
   "pyproj.Proj",
   "pyproj.__proj_version__",
   "time.clock"
  ],
  "type": "function"
 },
 "test.test_cli": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sys.executable"
  ],
  "type": "module"
 },
 "test.test_cli._check_list_files_header": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.test_cli.test_main": {
  "lineno": 21,
  "symbols_in_volume": [
   "pytest.mark.cli",
   "subprocess.STDOUT",
   "subprocess.check_output",
   "test.conftest.tmp_chdir"
  ],
  "type": "function"
 },
 "test.test_cli.test_main__verbose": {
  "lineno": 33,
  "symbols_in_volume": [
   "pytest.mark.cli",
   "pytest.mark.parametrize",
   "subprocess.STDOUT",
   "subprocess.check_output",
   "test.conftest.tmp_chdir"
  ],
  "type": "function"
 },
 "test.test_cli.test_sync": {
  "lineno": 51,
  "symbols_in_volume": [
   "pytest.mark.cli",
   "pytest.mark.parametrize",
   "subprocess.STDOUT",
   "subprocess.check_output",
   "test.conftest.tmp_chdir"
  ],
  "type": "function"
 },
 "test.test_cli.test_sync__all__exclusive_error": {
  "lineno": 198,
  "symbols_in_volume": [
   "pytest.mark.cli",
   "pytest.mark.parametrize",
   "pytest.raises",
   "subprocess.CalledProcessError",
   "subprocess.STDOUT",
   "subprocess.check_output",
   "test.conftest.tmp_chdir"
  ],
  "type": "function"
 },
 "test.test_cli.test_sync__area_of_use__list": {
  "lineno": 103,
  "symbols_in_volume": [
   "pytest.mark.cli",
   "pytest.mark.network",
   "subprocess.STDOUT",
   "subprocess.check_output",
   "test.conftest.tmp_chdir"
  ],
  "type": "function"
 },
 "test.test_cli.test_sync__bbox__list": {
  "lineno": 149,
  "symbols_in_volume": [
   "pytest.mark.cli",
   "pytest.mark.network",
   "subprocess.STDOUT",
   "subprocess.check_output",
   "test.conftest.tmp_chdir"
  ],
  "type": "function"
 },
 "test.test_cli.test_sync__bbox__list__exclude_world_coverage": {
  "lineno": 173,
  "symbols_in_volume": [
   "pytest.mark.cli",
   "pytest.mark.network",
   "subprocess.STDOUT",
   "subprocess.check_output",
   "test.conftest.tmp_chdir"
  ],
  "type": "function"
 },
 "test.test_cli.test_sync__download_grids": {
  "lineno": 319,
  "symbols_in_volume": [
   "argparse.Namespace",
   "glob.glob",
   "pathlib.Path",
   "pyproj.__main__.main",
   "pyproj.datadir.append_data_dir",
   "pytest.mark.network",
   "test.conftest.grids_available",
   "test.conftest.proj_env",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "test.test_cli.test_sync__file__list": {
  "lineno": 126,
  "symbols_in_volume": [
   "pytest.mark.cli",
   "pytest.mark.network",
   "subprocess.STDOUT",
   "subprocess.check_output",
   "test.conftest.tmp_chdir"
  ],
  "type": "function"
 },
 "test.test_cli.test_sync__source_id__list": {
  "lineno": 80,
  "symbols_in_volume": [
   "pytest.mark.cli",
   "pytest.mark.network",
   "subprocess.STDOUT",
   "subprocess.check_output",
   "test.conftest.tmp_chdir"
  ],
  "type": "function"
 },
 "test.test_cli.test_sync_download": {
  "lineno": 218,
  "symbols_in_volume": [
   "argparse.Namespace",
   "pyproj.__main__.main",
   "pyproj.datadir.get_user_data_dir",
   "pytest.mark.network",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "test.test_cli.test_sync_download__directory": {
  "lineno": 248,
  "symbols_in_volume": [
   "argparse.Namespace",
   "pyproj.__main__.main",
   "pyproj.sync._load_grid_geojson",
   "pytest.mark.network",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "test.test_cli.test_sync_download__system_directory": {
  "lineno": 283,
  "symbols_in_volume": [
   "argparse.Namespace",
   "os.path.sep",
   "pyproj.__main__.main",
   "pyproj.datadir.get_data_dir",
   "pyproj.sync._load_grid_geojson",
   "pytest.mark.network",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "test.test_database": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.test_database.test_backwards_compatible_import_paths": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.test_database.test_get_authorities": {
  "lineno": 78,
  "symbols_in_volume": [
   "pyproj.get_authorities"
  ],
  "type": "function"
 },
 "test.test_database.test_get_codes": {
  "lineno": 82,
  "symbols_in_volume": [
   "pyproj.enums.PJType.CRS",
   "pyproj.enums.PJType.ELLIPSOID",
   "pyproj.get_codes",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.test_database.test_get_codes__empty": {
  "lineno": 99,
  "symbols_in_volume": [
   "pyproj.enums.PJType.BOUND_CRS",
   "pyproj.get_codes",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.test_database.test_get_codes__invalid_auth": {
  "lineno": 107,
  "symbols_in_volume": [
   "pyproj.enums.PJType.BOUND_CRS",
   "pyproj.get_codes",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.test_database.test_get_codes__invalid_code": {
  "lineno": 112,
  "symbols_in_volume": [
   "pyproj.get_codes",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.test_database.test_query_crs_info": {
  "lineno": 117,
  "symbols_in_volume": [
   "pyproj.database.query_crs_info",
   "pyproj.enums.PJType.GEOGRAPHIC_2D_CRS",
   "pyproj.enums.PJType.GEOGRAPHIC_3D_CRS",
   "pyproj.enums.PJType.PROJECTED_CRS",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.test_database.test_query_crs_info__aoi": {
  "lineno": 161,
  "symbols_in_volume": [
   "pyproj.aoi.AreaOfInterest",
   "pyproj.aoi.BBox",
   "pyproj.database.query_crs_info",
   "pyproj.enums.PJType.PROJECTED_CRS"
  ],
  "type": "function"
 },
 "test.test_database.test_query_crs_info__aoi_contains": {
  "lineno": 186,
  "symbols_in_volume": [
   "pyproj.aoi.AreaOfInterest",
   "pyproj.aoi.BBox",
   "pyproj.database.query_crs_info",
   "pyproj.enums.PJType.PROJECTED_CRS"
  ],
  "type": "function"
 },
 "test.test_database.test_query_crs_info__empty": {
  "lineno": 138,
  "symbols_in_volume": [
   "pyproj.database.query_crs_info",
   "pyproj.enums.PJType.BOUND_CRS",
   "pyproj.enums.PJType.ELLIPSOID",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.test_database.test_query_crs_info__invalid_auth": {
  "lineno": 151,
  "symbols_in_volume": [
   "pyproj.database.query_crs_info",
   "pyproj.enums.PJType.BOUND_CRS",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.test_database.test_query_crs_info__invalid_code": {
  "lineno": 156,
  "symbols_in_volume": [
   "pyproj.database.query_crs_info",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.test_database.test_query_utm_crs_info__aoi_contains": {
  "lineno": 230,
  "symbols_in_volume": [
   "pyproj.aoi.AreaOfInterest",
   "pyproj.aoi.BBox",
   "pyproj.database.query_utm_crs_info",
   "pyproj.enums.PJType.PROJECTED_CRS"
  ],
  "type": "function"
 },
 "test.test_database.test_query_utm_crs_info__aoi_datum_name": {
  "lineno": 207,
  "symbols_in_volume": [
   "pyproj.aoi.AreaOfInterest",
   "pyproj.aoi.BBox",
   "pyproj.database.query_utm_crs_info",
   "pyproj.enums.PJType.PROJECTED_CRS",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.test_database.test_units_map__auth_name": {
  "lineno": 54,
  "symbols_in_volume": [
   "pyproj.get_units_map",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.test_database.test_units_map__category": {
  "lineno": 35,
  "symbols_in_volume": [
   "pyproj.get_units_map",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.test_database.test_units_map__default": {
  "lineno": 19,
  "symbols_in_volume": [
   "pyproj.database.Unit",
   "pyproj.get_units_map"
  ],
  "type": "function"
 },
 "test.test_database.test_units_map__deprecated": {
  "lineno": 62,
  "symbols_in_volume": [
   "pyproj.get_units_map",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.test_database.test_units_map__invalid": {
  "lineno": 72,
  "symbols_in_volume": [
   "pyproj.get_units_map",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.test_datadir": {
  "lineno": null,
  "symbols_in_volume": [
   "pathlib.Path"
  ],
  "type": "module"
 },
 "test.test_datadir.create_projdb": {
  "lineno": 53,
  "symbols_in_volume": [
   "pathlib.Path"
  ],
  "type": "function"
 },
 "test.test_datadir.proj_context_env": {
  "lineno": 24,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "test.test_datadir.proj_logging_env": {
  "lineno": 36,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "logging.DEBUG",
   "logging.Formatter",
   "logging.StreamHandler",
   "logging.getLogger"
  ],
  "type": "function"
 },
 "test.test_datadir.test_append_data_dir__internal": {
  "lineno": 159,
  "symbols_in_volume": [
   "os.environ",
   "os.pathsep.join",
   "pathlib.Path",
   "pyproj.datadir.append_data_dir",
   "pyproj.datadir.get_data_dir",
   "pytest.mark.parametrize",
   "test.conftest.proj_env",
   "unittest.mock.patch",
   "unittest.mock.patch.dict"
  ],
  "type": "function"
 },
 "test.test_datadir.test_creating_multiple_crs_without_file_limit": {
  "lineno": 175,
  "symbols_in_volume": [
   "pyproj.CRS.from_epsg",
   "pyproj.enums.PJType.PROJECTED_CRS",
   "pyproj.get_codes",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "test.test_datadir.test_get_data_dir__from_env_var": {
  "lineno": 118,
  "symbols_in_volume": [
   "os.environ",
   "pyproj.datadir.get_data_dir",
   "test.conftest.proj_env",
   "unittest.mock.patch",
   "unittest.mock.patch.dict"
  ],
  "type": "function"
 },
 "test.test_datadir.test_get_data_dir__from_env_var__multiple": {
  "lineno": 128,
  "symbols_in_volume": [
   "os.environ",
   "os.pathsep.join",
   "pyproj.datadir.get_data_dir",
   "test.conftest.proj_env",
   "unittest.mock.patch",
   "unittest.mock.patch.dict"
  ],
  "type": "function"
 },
 "test.test_datadir.test_get_data_dir__from_path": {
  "lineno": 147,
  "symbols_in_volume": [
   "os.environ",
   "pyproj.datadir.get_data_dir",
   "test.conftest.proj_env",
   "unittest.mock.patch",
   "unittest.mock.patch.dict"
  ],
  "type": "function"
 },
 "test.test_datadir.test_get_data_dir__from_prefix": {
  "lineno": 137,
  "symbols_in_volume": [
   "os.environ",
   "pyproj.datadir.get_data_dir",
   "test.conftest.proj_env",
   "unittest.mock.patch",
   "unittest.mock.patch.dict"
  ],
  "type": "function"
 },
 "test.test_datadir.test_get_data_dir__from_user": {
  "lineno": 80,
  "symbols_in_volume": [
   "os.environ",
   "pathlib.Path",
   "pyproj.datadir.get_data_dir",
   "pyproj.datadir.set_data_dir",
   "pytest.mark.parametrize",
   "test.conftest.proj_env",
   "unittest.mock.patch",
   "unittest.mock.patch.dict"
  ],
  "type": "function"
 },
 "test.test_datadir.test_get_data_dir__internal": {
  "lineno": 100,
  "symbols_in_volume": [
   "os.environ",
   "pyproj.datadir.get_data_dir",
   "test.conftest.proj_env",
   "unittest.mock.patch",
   "unittest.mock.patch.dict"
  ],
  "type": "function"
 },
 "test.test_datadir.test_get_data_dir__missing": {
  "lineno": 60,
  "symbols_in_volume": [
   "os.environ",
   "pyproj.datadir.DataDirError",
   "pyproj.datadir.get_data_dir",
   "pytest.raises",
   "test.conftest.proj_env",
   "unittest.mock.patch",
   "unittest.mock.patch.dict"
  ],
  "type": "function"
 },
 "test.test_datadir.test_get_user_data_dir": {
  "lineno": 188,
  "symbols_in_volume": [
   "pyproj.datadir.get_user_data_dir"
  ],
  "type": "function"
 },
 "test.test_datadir.test_proj_debug_logging": {
  "lineno": 227,
  "symbols_in_volume": [
   "os.environ.get",
   "pyproj.Transformer.from_proj",
   "pytest.warns"
  ],
  "type": "function"
 },
 "test.test_datadir.test_proj_debug_logging__error": {
  "lineno": 243,
  "symbols_in_volume": [
   "os.environ.get",
   "pyproj.CRS",
   "pyproj.exceptions.CRSError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.test_datadir.test_pyproj_global_context_initialize__datadir_missing": {
  "lineno": 73,
  "symbols_in_volume": [
   "pyproj._datadir._pyproj_global_context_initialize",
   "pyproj.datadir.DataDirError",
   "pytest.raises",
   "test.conftest.proj_env",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "test.test_datadir.test_set_use_global_context__default": {
  "lineno": 206,
  "symbols_in_volume": [
   "pyproj.set_use_global_context",
   "unittest.mock.patch.dict"
  ],
  "type": "function"
 },
 "test.test_datadir.test_set_use_global_context__default_off": {
  "lineno": 199,
  "symbols_in_volume": [
   "pyproj.set_use_global_context",
   "unittest.mock.patch.dict"
  ],
  "type": "function"
 },
 "test.test_datadir.test_set_use_global_context__default_on": {
  "lineno": 192,
  "symbols_in_volume": [
   "pyproj.set_use_global_context",
   "unittest.mock.patch.dict"
  ],
  "type": "function"
 },
 "test.test_datadir.test_set_use_global_context__off": {
  "lineno": 220,
  "symbols_in_volume": [
   "pyproj.set_use_global_context",
   "unittest.mock.patch.dict"
  ],
  "type": "function"
 },
 "test.test_datadir.test_set_use_global_context__on": {
  "lineno": 213,
  "symbols_in_volume": [
   "pyproj.set_use_global_context",
   "unittest.mock.patch.dict"
  ],
  "type": "function"
 },
 "test.test_datum": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.test_datum.test_datum": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.CRS",
   "pyproj.Proj",
   "pyproj.transform",
   "pytest.mark.grid",
   "pytest.mark.parametrize",
   "pytest.warns",
   "test.conftest.grids_available"
  ],
  "type": "function"
 },
 "test.test_datum_shift": {
  "lineno": null,
  "symbols_in_volume": [
   "pyproj.Proj",
   "pytest.warns"
  ],
  "type": "module"
 },
 "test.test_datum_shift.test_shift_gaussb_to_wgs84_no_ellisoidal_height": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.transform",
   "pytest.warns"
  ],
  "type": "function"
 },
 "test.test_datum_shift.test_shift_utm33_to_wgs84": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.transform",
   "pytest.warns"
  ],
  "type": "function"
 },
 "test.test_datum_shift.test_shift_wgs84_to_gaussb_no_ellisoidal_height": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.transform",
   "pytest.warns"
  ],
  "type": "function"
 },
 "test.test_datum_shift.test_shift_wgs84_to_utm33": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.transform",
   "pytest.warns"
  ],
  "type": "function"
 },
 "test.test_doctest_wrapper": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.test_doctest_wrapper.test_doctests": {
  "lineno": 13,
  "symbols_in_volume": [
   "doctest.testmod",
   "pyproj.crs",
   "pyproj.geod",
   "pyproj.proj",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "test.test_doctest_wrapper.test_doctests__network": {
  "lineno": 40,
  "symbols_in_volume": [
   "doctest.testmod",
   "pyproj.network.set_network_enabled",
   "pyproj.transformer",
   "pytest.mark.network",
   "pytest.warns",
   "test.conftest.proj_network_env"
  ],
  "type": "function"
 },
 "test.test_exception_logging": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.test_exception_logging.test_crs_exception": {
  "lineno": 12,
  "symbols_in_volume": [
   "pyproj.CRS",
   "pyproj.exceptions.CRSError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.test_exception_logging.test_proj_exception": {
  "lineno": 7,
  "symbols_in_volume": [
   "pyproj.Proj",
   "pyproj.exceptions.ProjError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.test_geod": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "module"
 },
 "test.test_geod.temporary_directory": {
  "lineno": 34,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "shutil.rmtree",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "test.test_geod.test_geod_cities": {
  "lineno": 100,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "os.path.join",
   "pickle.dump",
   "pickle.load",
   "pyproj.Geod"
  ],
  "type": "function"
 },
 "test.test_geod.test_geod_fwd_honours_input_types": {
  "lineno": 452,
  "symbols_in_volume": [
   "itertools.permutations",
   "pyproj.Geod",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.test_geod.test_geod_inv_honours_input_types": {
  "lineno": 464,
  "symbols_in_volume": [
   "itertools.permutations",
   "pyproj.Geod",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.test_geod.test_geod_inverse_transform": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.Geod"
  ],
  "type": "function"
 },
 "test.test_geod.test_geometry_area_perimeter__linearring": {
  "lineno": 336,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.Geod",
   "shapely.geometry.LineString",
   "shapely.geometry.LinearRing",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "test.test_geod.test_geometry_area_perimeter__linestring": {
  "lineno": 308,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.Geod",
   "shapely.geometry.LineString",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "test.test_geod.test_geometry_area_perimeter__linestring__radians": {
  "lineno": 318,
  "symbols_in_volume": [
   "math.radians",
   "numpy.testing.assert_almost_equal",
   "pyproj.Geod",
   "shapely.geometry.LineString",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "test.test_geod.test_geometry_area_perimeter__multilinestring": {
  "lineno": 433,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.Geod",
   "shapely.geometry.LineString",
   "shapely.geometry.MultiLineString",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "test.test_geod.test_geometry_area_perimeter__multipoint": {
  "lineno": 444,
  "symbols_in_volume": [
   "pyproj.Geod",
   "shapely.geometry.MultiPoint",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "test.test_geod.test_geometry_area_perimeter__multipolygon": {
  "lineno": 403,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.Geod",
   "shapely.geometry.LineString",
   "shapely.geometry.MultiPolygon",
   "shapely.geometry.Point",
   "shapely.geometry.Polygon"
  ],
  "type": "function"
 },
 "test.test_geod.test_geometry_area_perimeter__multipolygon__radians": {
  "lineno": 414,
  "symbols_in_volume": [
   "math.radians",
   "numpy.testing.assert_almost_equal",
   "pyproj.Geod",
   "shapely.geometry.LineString",
   "shapely.geometry.MultiPolygon",
   "shapely.geometry.Point",
   "shapely.geometry.Polygon"
  ],
  "type": "function"
 },
 "test.test_geod.test_geometry_area_perimeter__point": {
  "lineno": 302,
  "symbols_in_volume": [
   "pyproj.Geod",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "test.test_geod.test_geometry_area_perimeter__polygon": {
  "lineno": 348,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.Geod",
   "shapely.geometry.LineString",
   "shapely.geometry.Point",
   "shapely.geometry.Polygon"
  ],
  "type": "function"
 },
 "test.test_geod.test_geometry_area_perimeter__polygon__holes": {
  "lineno": 381,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.Geod",
   "shapely.geometry.LineString",
   "shapely.geometry.Point",
   "shapely.geometry.Polygon",
   "shapely.geometry.polygon.orient"
  ],
  "type": "function"
 },
 "test.test_geod.test_geometry_area_perimeter__polygon__radians": {
  "lineno": 360,
  "symbols_in_volume": [
   "math.radians",
   "numpy.testing.assert_almost_equal",
   "pyproj.Geod",
   "shapely.geometry.LineString",
   "shapely.geometry.Point",
   "shapely.geometry.Polygon"
  ],
  "type": "function"
 },
 "test.test_geod.test_geometry_length__linearring": {
  "lineno": 208,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.Geod",
   "shapely.geometry.LineString",
   "shapely.geometry.LinearRing",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "test.test_geod.test_geometry_length__linestring": {
  "lineno": 180,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.Geod",
   "shapely.geometry.LineString",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "test.test_geod.test_geometry_length__linestring__radians": {
  "lineno": 190,
  "symbols_in_volume": [
   "math.radians",
   "numpy.testing.assert_almost_equal",
   "pyproj.Geod",
   "shapely.geometry.LineString",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "test.test_geod.test_geometry_length__multilinestring": {
  "lineno": 283,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.Geod",
   "shapely.geometry.LineString",
   "shapely.geometry.MultiLineString",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "test.test_geod.test_geometry_length__multipoint": {
  "lineno": 294,
  "symbols_in_volume": [
   "pyproj.Geod",
   "shapely.geometry.MultiPoint",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "test.test_geod.test_geometry_length__multipolygon": {
  "lineno": 253,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.Geod",
   "shapely.geometry.LineString",
   "shapely.geometry.MultiPolygon",
   "shapely.geometry.Point",
   "shapely.geometry.Polygon"
  ],
  "type": "function"
 },
 "test.test_geod.test_geometry_length__multipolygon__radians": {
  "lineno": 264,
  "symbols_in_volume": [
   "math.radians",
   "numpy.testing.assert_almost_equal",
   "pyproj.Geod",
   "shapely.geometry.LineString",
   "shapely.geometry.MultiPolygon",
   "shapely.geometry.Point",
   "shapely.geometry.Polygon"
  ],
  "type": "function"
 },
 "test.test_geod.test_geometry_length__point": {
  "lineno": 174,
  "symbols_in_volume": [
   "pyproj.Geod",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "test.test_geod.test_geometry_length__polygon": {
  "lineno": 220,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.Geod",
   "shapely.geometry.LineString",
   "shapely.geometry.Point",
   "shapely.geometry.Polygon"
  ],
  "type": "function"
 },
 "test.test_geod.test_geometry_length__polygon__radians": {
  "lineno": 232,
  "symbols_in_volume": [
   "math.radians",
   "numpy.testing.assert_almost_equal",
   "pyproj.Geod",
   "shapely.geometry.LineString",
   "shapely.geometry.Point",
   "shapely.geometry.Polygon"
  ],
  "type": "function"
 },
 "test.test_geod.test_line_length__radians": {
  "lineno": 150,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.Geod"
  ],
  "type": "function"
 },
 "test.test_geod.test_line_length__single_point": {
  "lineno": 145,
  "symbols_in_volume": [
   "pyproj.Geod"
  ],
  "type": "function"
 },
 "test.test_geod.test_line_lengths__radians": {
  "lineno": 161,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.Geod"
  ],
  "type": "function"
 },
 "test.test_geod.test_line_lengths__single_point": {
  "lineno": 156,
  "symbols_in_volume": [
   "pyproj.Geod"
  ],
  "type": "function"
 },
 "test.test_geod.test_polygon_area_perimeter__single_point": {
  "lineno": 167,
  "symbols_in_volume": [
   "pyproj.Geod"
  ],
  "type": "function"
 },
 "test.test_list": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.test_list.test_backwards_compatible_import_paths": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.test_list.test_get_ellps_map": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.get_ellps_map"
  ],
  "type": "function"
 },
 "test.test_list.test_get_prime_meridians_map": {
  "lineno": 21,
  "symbols_in_volume": [
   "pyproj.get_prime_meridians_map"
  ],
  "type": "function"
 },
 "test.test_list.test_get_proj_operations_map": {
  "lineno": 26,
  "symbols_in_volume": [
   "pyproj.get_proj_operations_map"
  ],
  "type": "function"
 },
 "test.test_network": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.test_network.test_ca_bundle_path__always_certifi": {
  "lineno": 16,
  "symbols_in_volume": [
   "certifi.where",
   "pyproj.network.set_ca_bundle_path",
   "pytest.mark.parametrize",
   "unittest.mock.patch",
   "unittest.mock.patch.dict"
  ],
  "type": "function"
 },
 "test.test_network.test_ca_bundle_path__custom_path": {
  "lineno": 43,
  "symbols_in_volume": [
   "pyproj.network.set_ca_bundle_path",
   "pytest.mark.parametrize",
   "unittest.mock.patch",
   "unittest.mock.patch.dict"
  ],
  "type": "function"
 },
 "test.test_network.test_ca_bundle_path__default": {
  "lineno": 9,
  "symbols_in_volume": [
   "certifi.where",
   "pyproj.network.set_ca_bundle_path",
   "unittest.mock.patch",
   "unittest.mock.patch.dict"
  ],
  "type": "function"
 },
 "test.test_network.test_ca_bundle_path__env_var_skip": {
  "lineno": 33,
  "symbols_in_volume": [
   "pyproj.network.set_ca_bundle_path",
   "pytest.mark.parametrize",
   "unittest.mock.patch",
   "unittest.mock.patch.dict"
  ],
  "type": "function"
 },
 "test.test_network.test_ca_bundle_path__skip": {
  "lineno": 26,
  "symbols_in_volume": [
   "pyproj.network.set_ca_bundle_path",
   "unittest.mock.patch",
   "unittest.mock.patch.dict"
  ],
  "type": "function"
 },
 "test.test_pickle": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.test_pickle.temporary_directory": {
  "lineno": 19,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "shutil.rmtree",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "test.test_pickle.test_pickle": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.fabs",
   "numpy.indices",
   "numpy.maximum.reduce",
   "numpy.minimum.reduce",
   "numpy.ravel",
   "numpy.testing.assert_allclose",
   "os.path.join",
   "pickle.dump",
   "pickle.load",
   "pyproj.Proj",
   "time.clock"
  ],
  "type": "function"
 },
 "test.test_proj": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.test_proj.BasicTest": {
  "lineno": 18,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "test.test_proj.BasicTest.testInitWithBackupString4": {
  "lineno": 19,
  "symbols_in_volume": [
   "pyproj.Proj"
  ],
  "type": "function"
 },
 "test.test_proj.BasicTest.testProjAwips221": {
  "lineno": 27,
  "symbols_in_volume": [
   "pyproj.Proj"
  ],
  "type": "function"
 },
 "test.test_proj.BasicTest.test_from_dict_with_bool": {
  "lineno": 75,
  "symbols_in_volume": [
   "pyproj.Proj"
  ],
  "type": "function"
 },
 "test.test_proj.ForwardInverseTest": {
  "lineno": 161,
  "symbols_in_volume": [
   "sys.version_info",
   "unittest.TestCase",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "test.test_proj.ForwardInverseTest.test_fwd_inv": {
  "lineno": 165,
  "symbols_in_volume": [
   "pyproj.Proj",
   "pyproj.pj_list.keys"
  ],
  "type": "function"
 },
 "test.test_proj.GeodSharedMemoryBugTestIssue64": {
  "lineno": 181,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "test.test_proj.GeodSharedMemoryBugTestIssue64.setUp": {
  "lineno": 182,
  "symbols_in_volume": [
   "pyproj.Geod"
  ],
  "type": "function"
 },
 "test.test_proj.GeodSharedMemoryBugTestIssue64.test_distances": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.test_proj.GeodSharedMemoryBugTestIssue64.test_not_shared_memory": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.test_proj.Geod_NaN_Issue112_Test": {
  "lineno": 342,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "test.test_proj.Geod_NaN_Issue112_Test.test_geod_nans": {
  "lineno": 345,
  "symbols_in_volume": [
   "pyproj.Geod"
  ],
  "type": "function"
 },
 "test.test_proj.Geod_NoDefs_Issue22_Test": {
  "lineno": 142,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "test.test_proj.Geod_NoDefs_Issue22_Test.test_geod_nodefs": {
  "lineno": 146,
  "symbols_in_volume": [
   "pyproj.Geod"
  ],
  "type": "function"
 },
 "test.test_proj.InverseHammerTest": {
  "lineno": 103,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "test.test_proj.InverseHammerTest.setUpClass": {
  "lineno": 106,
  "symbols_in_volume": [
   "pyproj.Proj"
  ],
  "type": "function"
 },
 "test.test_proj.InverseHammerTest.test_forward": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.test_proj.InverseHammerTest.test_inverse": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.test_proj.ProjLatLongTypeErrorTest": {
  "lineno": 150,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "test.test_proj.ProjLatLongTypeErrorTest.test_latlong_typeerror": {
  "lineno": 153,
  "symbols_in_volume": [
   "pyproj.Proj",
   "pyproj.transform",
   "pytest.warns"
  ],
  "type": "function"
 },
 "test.test_proj.ReprTests": {
  "lineno": 218,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "test.test_proj.ReprTests.test_ellps_name_round_trip": {
  "lineno": 237,
  "symbols_in_volume": [
   "pyproj.Geod",
   "pyproj.pj_ellps"
  ],
  "type": "function"
 },
 "test.test_proj.ReprTests.test_repr": {
  "lineno": 220,
  "symbols_in_volume": [
   "pyproj.Proj"
  ],
  "type": "function"
 },
 "test.test_proj.ReprTests.test_sphere": {
  "lineno": 231,
  "symbols_in_volume": [
   "pyproj.Geod"
  ],
  "type": "function"
 },
 "test.test_proj.TestRadians": {
  "lineno": 248,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "test.test_proj.TestRadians.setUp": {
  "lineno": 251,
  "symbols_in_volume": [
   "math.radians",
   "pyproj.Geod"
  ],
  "type": "function"
 },
 "test.test_proj.TestRadians.test_fwd_radians": {
  "lineno": 286,
  "symbols_in_volume": [
   "math.degrees",
   "math.radians"
  ],
  "type": "function"
 },
 "test.test_proj.TestRadians.test_inv_radians": {
  "lineno": 261,
  "symbols_in_volume": [
   "math.degrees"
  ],
  "type": "function"
 },
 "test.test_proj.TestRadians.test_npts_radians": {
  "lineno": 315,
  "symbols_in_volume": [
   "math.degrees"
  ],
  "type": "function"
 },
 "test.test_proj.TypeError_Transform_Issue8_Test": {
  "lineno": 121,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "test.test_proj.TypeError_Transform_Issue8_Test.setUp": {
  "lineno": 125,
  "symbols_in_volume": [
   "pyproj.Proj",
   "pytest.warns"
  ],
  "type": "function"
 },
 "test.test_proj.TypeError_Transform_Issue8_Test.test_tranform_none_1st_parmeter": {
  "lineno": 129,
  "symbols_in_volume": [
   "pyproj.exceptions.CRSError",
   "pyproj.transform",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "test.test_proj.TypeError_Transform_Issue8_Test.test_tranform_none_2nd_parmeter": {
  "lineno": 135,
  "symbols_in_volume": [
   "pyproj.exceptions.CRSError",
   "pyproj.transform",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "test.test_proj.test_equals_different_type": {
  "lineno": 417,
  "symbols_in_volume": [
   "pyproj.Proj"
  ],
  "type": "function"
 },
 "test.test_proj.test_get_factors": {
  "lineno": 472,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.Proj"
  ],
  "type": "function"
 },
 "test.test_proj.test_get_factors__2d_input": {
  "lineno": 433,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.radians",
   "numpy.testing.assert_almost_equal",
   "pyproj.Proj",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.test_proj.test_get_factors__errcheck": {
  "lineno": 510,
  "symbols_in_volume": [
   "pyproj.Proj",
   "pyproj.exceptions.ProjError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.test_proj.test_get_factors__nan_inf": {
  "lineno": 489,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.nan",
   "numpy.testing.assert_almost_equal",
   "pyproj.Proj"
  ],
  "type": "function"
 },
 "test.test_proj.test_initialize_proj_crs_no_plus": {
  "lineno": 406,
  "symbols_in_volume": [
   "pyproj.Proj"
  ],
  "type": "function"
 },
 "test.test_proj.test_initialize_proj_crs_no_proj4": {
  "lineno": 391,
  "symbols_in_volume": [
   "pyproj.Proj"
  ],
  "type": "function"
 },
 "test.test_proj.test_initialize_projparams_with_kwargs": {
  "lineno": 411,
  "symbols_in_volume": [
   "pyproj.Proj"
  ],
  "type": "function"
 },
 "test.test_proj.test_is_exact_same_different_type": {
  "lineno": 421,
  "symbols_in_volume": [
   "pyproj.Proj"
  ],
  "type": "function"
 },
 "test.test_proj.test_network__default": {
  "lineno": 550,
  "symbols_in_volume": [
   "os.environ.get",
   "pyproj.Proj",
   "pyproj.network.set_network_enabled",
   "test.conftest.proj_network_env"
  ],
  "type": "function"
 },
 "test.test_proj.test_network__disable": {
  "lineno": 534,
  "symbols_in_volume": [
   "pyproj.Proj",
   "pyproj.network.set_network_enabled",
   "test.conftest.proj_network_env",
   "unittest.mock.patch.dict"
  ],
  "type": "function"
 },
 "test.test_proj.test_network__enable": {
  "lineno": 542,
  "symbols_in_volume": [
   "pyproj.Proj",
   "pyproj.network.set_network_enabled",
   "test.conftest.proj_network_env",
   "unittest.mock.patch.dict"
  ],
  "type": "function"
 },
 "test.test_proj.test_numpy_bool_kwarg_false": {
  "lineno": 516,
  "symbols_in_volume": [
   "numpy.array",
   "pyproj.Proj"
  ],
  "type": "function"
 },
 "test.test_proj.test_numpy_bool_kwarg_true": {
  "lineno": 525,
  "symbols_in_volume": [
   "numpy.array",
   "pyproj.Proj"
  ],
  "type": "function"
 },
 "test.test_proj.test_proj_equals": {
  "lineno": 384,
  "symbols_in_volume": [
   "pyproj.Proj",
   "pytest.warns"
  ],
  "type": "function"
 },
 "test.test_proj.test_radians": {
  "lineno": 559,
  "symbols_in_volume": [
   "math.radians",
   "numpy.testing.assert_almost_equal",
   "pyproj.Proj"
  ],
  "type": "function"
 },
 "test.test_proj.test_reset_errno": {
  "lineno": 425,
  "symbols_in_volume": [
   "pyproj.Proj"
  ],
  "type": "function"
 },
 "test.test_show_versions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.test_show_versions.test_get_deps_info": {
  "lineno": 24,
  "symbols_in_volume": [
   "pyproj._show_versions._get_deps_info"
  ],
  "type": "function"
 },
 "test.test_show_versions.test_get_proj_info": {
  "lineno": 9,
  "symbols_in_volume": [
   "pyproj._show_versions._get_proj_info"
  ],
  "type": "function"
 },
 "test.test_show_versions.test_get_sys_info": {
  "lineno": 16,
  "symbols_in_volume": [
   "pyproj._show_versions._get_sys_info"
  ],
  "type": "function"
 },
 "test.test_show_versions.test_show_versions_with_proj": {
  "lineno": 32,
  "symbols_in_volume": [
   "pyproj._show_versions.show_versions"
  ],
  "type": "function"
 },
 "test.test_sync": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.test_sync.test__load_grid_geojson_old_file": {
  "lineno": 182,
  "symbols_in_volume": [
   "datetime.datetime.utcnow",
   "datetime.timedelta",
   "pyproj.sync._load_grid_geojson",
   "pytest.mark.network",
   "unittest.mock.MagicMock",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "test.test_sync.test_download_resource_file": {
  "lineno": 100,
  "symbols_in_volume": [
   "pyproj.sync._download_resource_file",
   "pyproj.sync._sha256sum",
   "pytest.mark.parametrize",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "test.test_sync.test_download_resource_file.dummy_urlretrieve": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.test_sync.test_download_resource_file__bad_sha256sum": {
  "lineno": 163,
  "symbols_in_volume": [
   "pyproj.sync._download_resource_file",
   "pytest.raises",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "test.test_sync.test_download_resource_file__bad_sha256sum.dummy_urlretrieve": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.test_sync.test_download_resource_file__exception": {
  "lineno": 143,
  "symbols_in_volume": [
   "pyproj.sync._download_resource_file",
   "pytest.raises",
   "unittest.mock.patch",
   "urllib.error.URLError"
  ],
  "type": "function"
 },
 "test.test_sync.test_download_resource_file__exception.dummy_urlretrieve": {
  "lineno": 145,
  "symbols_in_volume": [
   "urllib.error.URLError"
  ],
  "type": "function"
 },
 "test.test_sync.test_download_resource_file__nosha256": {
  "lineno": 129,
  "symbols_in_volume": [
   "pyproj.sync._download_resource_file",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "test.test_sync.test_download_resource_file__nosha256.dummy_urlretrieve": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.test_sync.test_get_transform_grid_list": {
  "lineno": 16,
  "symbols_in_volume": [
   "pyproj.sync.get_transform_grid_list",
   "pytest.mark.network"
  ],
  "type": "function"
 },
 "test.test_sync.test_get_transform_grid_list__area_of_use": {
  "lineno": 83,
  "symbols_in_volume": [
   "pyproj.sync.get_transform_grid_list",
   "pytest.mark.network"
  ],
  "type": "function"
 },
 "test.test_sync.test_get_transform_grid_list__bbox__antimeridian": {
  "lineno": 22,
  "symbols_in_volume": [
   "pyproj.aoi.BBox",
   "pyproj.sync.get_transform_grid_list",
   "pytest.mark.network"
  ],
  "type": "function"
 },
 "test.test_sync.test_get_transform_grid_list__bbox__out_of_bounds": {
  "lineno": 34,
  "symbols_in_volume": [
   "pyproj.aoi.BBox",
   "pyproj.sync.get_transform_grid_list",
   "pytest.mark.network"
  ],
  "type": "function"
 },
 "test.test_sync.test_get_transform_grid_list__contains": {
  "lineno": 60,
  "symbols_in_volume": [
   "pyproj.aoi.BBox",
   "pyproj.sync.get_transform_grid_list",
   "pytest.mark.network"
  ],
  "type": "function"
 },
 "test.test_sync.test_get_transform_grid_list__file": {
  "lineno": 74,
  "symbols_in_volume": [
   "pyproj.sync.get_transform_grid_list",
   "pytest.mark.network"
  ],
  "type": "function"
 },
 "test.test_sync.test_get_transform_grid_list__source_id": {
  "lineno": 46,
  "symbols_in_volume": [
   "pyproj.aoi.BBox",
   "pyproj.sync.get_transform_grid_list",
   "pytest.mark.network"
  ],
  "type": "function"
 },
 "test.test_sync.test_sha256sum": {
  "lineno": 91,
  "symbols_in_volume": [
   "pyproj.sync._sha256sum"
  ],
  "type": "function"
 },
 "test.test_transform": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.test_transform.test_skip_equivalent": {
  "lineno": 54,
  "symbols_in_volume": [
   "pyproj.transform",
   "pytest.warns"
  ],
  "type": "function"
 },
 "test.test_transform.test_transform": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.indices",
   "numpy.maximum.reduce",
   "numpy.minimum.reduce",
   "numpy.ravel",
   "numpy.testing.assert_allclose",
   "pyproj.Proj",
   "pyproj.__proj_version__",
   "pyproj.transform",
   "pytest.warns"
  ],
  "type": "function"
 },
 "test.test_transformer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.test_transformer.test_2d_with_time_itransform_original_crs_obs2": {
  "lineno": 236,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.itransform",
   "pytest.warns"
  ],
  "type": "function"
 },
 "test.test_transformer.test_2d_with_time_transform": {
  "lineno": 146,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.Transformer.from_pipeline"
  ],
  "type": "function"
 },
 "test.test_transformer.test_2d_with_time_transform_crs_obs2": {
  "lineno": 184,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.Transformer.from_proj"
  ],
  "type": "function"
 },
 "test.test_transformer.test_2d_with_time_transform_original_crs_obs2": {
  "lineno": 192,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.transform",
   "pytest.warns"
  ],
  "type": "function"
 },
 "test.test_transformer.test_3d_time_itransform": {
  "lineno": 212,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.Transformer.from_pipeline"
  ],
  "type": "function"
 },
 "test.test_transformer.test_4d_itransform": {
  "lineno": 200,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.Transformer.from_pipeline"
  ],
  "type": "function"
 },
 "test.test_transformer.test_4d_itransform_orginal_crs_obs1": {
  "lineno": 224,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.itransform",
   "pytest.warns"
  ],
  "type": "function"
 },
 "test.test_transformer.test_4d_transform": {
  "lineno": 136,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.Transformer.from_pipeline"
  ],
  "type": "function"
 },
 "test.test_transformer.test_4d_transform__inverse": {
  "lineno": 353,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.Transformer.from_pipeline",
   "pyproj.enums.TransformDirection.INVERSE"
  ],
  "type": "function"
 },
 "test.test_transformer.test_4d_transform_crs_obs1": {
  "lineno": 154,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.Transformer.from_proj"
  ],
  "type": "function"
 },
 "test.test_transformer.test_4d_transform_crs_obs2": {
  "lineno": 174,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.Transformer.from_proj"
  ],
  "type": "function"
 },
 "test.test_transformer.test_4d_transform_orginal_crs_obs1": {
  "lineno": 164,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.transform",
   "pytest.warns"
  ],
  "type": "function"
 },
 "test.test_transformer.test_always_xy__itransform": {
  "lineno": 396,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.itransform",
   "pytest.warns"
  ],
  "type": "function"
 },
 "test.test_transformer.test_always_xy__transform": {
  "lineno": 388,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.transform",
   "pytest.warns"
  ],
  "type": "function"
 },
 "test.test_transformer.test_always_xy__transformer": {
  "lineno": 380,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.Transformer.from_crs"
  ],
  "type": "function"
 },
 "test.test_transformer.test_equivalent_crs": {
  "lineno": 78,
  "symbols_in_volume": [
   "pyproj.Transformer.from_crs"
  ],
  "type": "function"
 },
 "test.test_transformer.test_equivalent_crs__different": {
  "lineno": 92,
  "symbols_in_volume": [
   "pyproj.Transformer.from_crs"
  ],
  "type": "function"
 },
 "test.test_transformer.test_equivalent_crs__disabled": {
  "lineno": 85,
  "symbols_in_volume": [
   "pyproj.Transformer.from_crs"
  ],
  "type": "function"
 },
 "test.test_transformer.test_equivalent_pipeline": {
  "lineno": 126,
  "symbols_in_volume": [
   "pyproj.Transformer.from_pipeline"
  ],
  "type": "function"
 },
 "test.test_transformer.test_equivalent_proj": {
  "lineno": 99,
  "symbols_in_volume": [
   "pyproj.Proj",
   "pyproj.Transformer.from_proj",
   "pytest.warns"
  ],
  "type": "function"
 },
 "test.test_transformer.test_equivalent_proj__different": {
  "lineno": 119,
  "symbols_in_volume": [
   "pyproj.Transformer.from_proj"
  ],
  "type": "function"
 },
 "test.test_transformer.test_equivalent_proj__disabled": {
  "lineno": 111,
  "symbols_in_volume": [
   "pyproj.Proj",
   "pyproj.Transformer.from_proj",
   "pytest.warns"
  ],
  "type": "function"
 },
 "test.test_transformer.test_from_pipeline__non_transform_input": {
  "lineno": 430,
  "symbols_in_volume": [
   "pyproj.Transformer.from_pipeline",
   "pyproj.exceptions.ProjError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.test_transformer.test_illegal_transformation": {
  "lineno": 47,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.isinf",
   "pyproj.Proj",
   "pyproj.exceptions.ProjError",
   "pyproj.transform",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "test.test_transformer.test_itransform_no_error": {
  "lineno": 275,
  "symbols_in_volume": [
   "pyproj.Proj",
   "pyproj.itransform",
   "pytest.warns"
  ],
  "type": "function"
 },
 "test.test_transformer.test_itransform_pipeline_radians": {
  "lineno": 951,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.Transformer.from_pipeline",
   "pyproj.enums.TransformDirection.INVERSE"
  ],
  "type": "function"
 },
 "test.test_transformer.test_itransform_radians": {
  "lineno": 323,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.Proj",
   "pyproj.itransform",
   "pytest.warns"
  ],
  "type": "function"
 },
 "test.test_transformer.test_itransform_time_3rd_invalid": {
  "lineno": 248,
  "symbols_in_volume": [
   "pyproj.itransform",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "test.test_transformer.test_lambert_conformal_transform": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.Proj",
   "pyproj.transform",
   "pytest.warns"
  ],
  "type": "function"
 },
 "test.test_transformer.test_network__default": {
  "lineno": 849,
  "symbols_in_volume": [
   "functools.partial",
   "os.environ.get",
   "pyproj.Transformer.from_crs",
   "pyproj.Transformer.from_pipeline",
   "pyproj.Transformer.from_proj",
   "pyproj.network.set_network_enabled",
   "pytest.mark.parametrize",
   "test.conftest.proj_network_env"
  ],
  "type": "function"
 },
 "test.test_transformer.test_network__disable": {
  "lineno": 813,
  "symbols_in_volume": [
   "functools.partial",
   "pyproj.Transformer.from_crs",
   "pyproj.Transformer.from_pipeline",
   "pyproj.Transformer.from_proj",
   "pyproj.network.set_network_enabled",
   "pytest.mark.parametrize",
   "test.conftest.proj_network_env",
   "unittest.mock.patch.dict"
  ],
  "type": "function"
 },
 "test.test_transformer.test_network__enable": {
  "lineno": 831,
  "symbols_in_volume": [
   "functools.partial",
   "pyproj.Transformer.from_crs",
   "pyproj.Transformer.from_pipeline",
   "pyproj.Transformer.from_proj",
   "pyproj.network.set_network_enabled",
   "pytest.mark.parametrize",
   "test.conftest.proj_network_env",
   "unittest.mock.patch.dict"
  ],
  "type": "function"
 },
 "test.test_transformer.test_non_supported_initialization": {
  "lineno": 435,
  "symbols_in_volume": [
   "pyproj.Transformer",
   "pyproj.exceptions.ProjError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.test_transformer.test_pipeline_itransform": {
  "lineno": 797,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.Transformer.from_pipeline",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.test_transformer.test_pipeline_transform": {
  "lineno": 781,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.Transformer.from_pipeline",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.test_transformer.test_pj_info_properties": {
  "lineno": 440,
  "symbols_in_volume": [
   "pyproj.Transformer.from_crs"
  ],
  "type": "function"
 },
 "test.test_transformer.test_repr": {
  "lineno": 460,
  "symbols_in_volume": [
   "pyproj.Transformer.from_crs",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.test_transformer.test_repr__conditional": {
  "lineno": 501,
  "symbols_in_volume": [
   "pyproj.Transformer.from_crs",
   "pytest.mark.grid",
   "test.conftest.grids_available"
  ],
  "type": "function"
 },
 "test.test_transformer.test_str": {
  "lineno": 456,
  "symbols_in_volume": [
   "pyproj.Transformer.from_crs"
  ],
  "type": "function"
 },
 "test.test_transformer.test_to_json": {
  "lineno": 554,
  "symbols_in_volume": [
   "pyproj.Transformer.from_crs"
  ],
  "type": "function"
 },
 "test.test_transformer.test_to_json__pretty": {
  "lineno": 561,
  "symbols_in_volume": [
   "pyproj.Transformer.from_crs"
  ],
  "type": "function"
 },
 "test.test_transformer.test_to_json__pretty__indenation": {
  "lineno": 568,
  "symbols_in_volume": [
   "pyproj.Transformer.from_crs"
  ],
  "type": "function"
 },
 "test.test_transformer.test_to_json_dict": {
  "lineno": 548,
  "symbols_in_volume": [
   "pyproj.Transformer.from_crs"
  ],
  "type": "function"
 },
 "test.test_transformer.test_to_wkt": {
  "lineno": 449,
  "symbols_in_volume": [
   "pyproj.Transformer.from_crs"
  ],
  "type": "function"
 },
 "test.test_transformer.test_tranform_wgs84_to_custom": {
  "lineno": 21,
  "symbols_in_volume": [
   "pyproj.Proj",
   "pyproj.transform",
   "pytest.warns"
  ],
  "type": "function"
 },
 "test.test_transformer.test_transform__out_of_bounds": {
  "lineno": 291,
  "symbols_in_volume": [
   "pyproj.Transformer.from_proj",
   "pyproj.exceptions.ProjError",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "test.test_transformer.test_transform_direction": {
  "lineno": 367,
  "symbols_in_volume": [
   "pyproj.Transformer.from_crs",
   "pyproj.enums.TransformDirection.IDENT",
   "pyproj.enums.TransformDirection.INVERSE"
  ],
  "type": "function"
 },
 "test.test_transformer.test_transform_direction__invalid": {
  "lineno": 424,
  "symbols_in_volume": [
   "pyproj.Transformer.from_crs",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.test_transformer.test_transform_direction__string": {
  "lineno": 404,
  "symbols_in_volume": [
   "pyproj.Transformer.from_crs"
  ],
  "type": "function"
 },
 "test.test_transformer.test_transform_direction__string_lowercase": {
  "lineno": 414,
  "symbols_in_volume": [
   "pyproj.Transformer.from_crs"
  ],
  "type": "function"
 },
 "test.test_transformer.test_transform_group__area_of_interest": {
  "lineno": 682,
  "symbols_in_volume": [
   "pyproj.transformer.AreaOfInterest",
   "pyproj.transformer.TransformerGroup",
   "pytest.mark.grid",
   "pytest.warns",
   "test.conftest.grids_available"
  ],
  "type": "function"
 },
 "test.test_transformer.test_transform_group__missing_best": {
  "lineno": 655,
  "symbols_in_volume": [
   "pyproj.Proj",
   "pyproj.transformer.TransformerGroup",
   "pytest.mark.grid",
   "pytest.warns",
   "test.conftest.grids_available"
  ],
  "type": "function"
 },
 "test.test_transformer.test_transform_honours_input_types": {
  "lineno": 975,
  "symbols_in_volume": [
   "itertools.permutations",
   "pyproj.Transformer.from_proj",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.test_transformer.test_transform_no_error": {
  "lineno": 267,
  "symbols_in_volume": [
   "pyproj.Proj",
   "pyproj.transform",
   "pytest.warns"
  ],
  "type": "function"
 },
 "test.test_transformer.test_transform_no_exception": {
  "lineno": 283,
  "symbols_in_volume": [
   "pyproj.Transformer.from_proj",
   "pytest.warns"
  ],
  "type": "function"
 },
 "test.test_transformer.test_transform_pipeline_radians": {
  "lineno": 929,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.Transformer.from_pipeline",
   "pyproj.enums.TransformDirection.INVERSE"
  ],
  "type": "function"
 },
 "test.test_transformer.test_transform_radians": {
  "lineno": 298,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pyproj.Proj",
   "pyproj.transform",
   "pytest.warns"
  ],
  "type": "function"
 },
 "test.test_transformer.test_transform_wgs84_to_alaska": {
  "lineno": 33,
  "symbols_in_volume": [
   "pyproj.Proj",
   "pyproj.transform",
   "pytest.mark.grid",
   "pytest.warns",
   "test.conftest.grids_available"
  ],
  "type": "function"
 },
 "test.test_transformer.test_transformer__area_of_interest": {
  "lineno": 724,
  "symbols_in_volume": [
   "pyproj.Transformer.from_crs",
   "pyproj.transformer.AreaOfInterest",
   "pytest.mark.grid",
   "test.conftest.grids_available"
  ],
  "type": "function"
 },
 "test.test_transformer.test_transformer__area_of_interest__invalid": {
  "lineno": 754,
  "symbols_in_volume": [
   "pyproj.Transformer.from_crs",
   "pyproj.exceptions.ProjError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.test_transformer.test_transformer__operations": {
  "lineno": 575,
  "symbols_in_volume": [
   "pyproj.transformer.TransformerGroup"
  ],
  "type": "function"
 },
 "test.test_transformer.test_transformer__operations__scope_remarks": {
  "lineno": 588,
  "symbols_in_volume": [
   "pyproj.transformer.TransformerGroup"
  ],
  "type": "function"
 },
 "test.test_transformer.test_transformer__operations_missing": {
  "lineno": 584,
  "symbols_in_volume": [
   "pyproj.Transformer.from_crs"
  ],
  "type": "function"
 },
 "test.test_transformer.test_transformer_equals": {
  "lineno": 766,
  "symbols_in_volume": [
   "pyproj.transformer.TransformerGroup"
  ],
  "type": "function"
 },
 "test.test_transformer.test_transformer_group": {
  "lineno": 604,
  "symbols_in_volume": [
   "pyproj.transformer.TransformerGroup"
  ],
  "type": "function"
 },
 "test.test_transformer.test_transformer_group__area_of_interest__invalid": {
  "lineno": 761,
  "symbols_in_volume": [
   "pyproj.exceptions.ProjError",
   "pyproj.transformer.TransformerGroup",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.test_transformer.test_transformer_group__download_grids": {
  "lineno": 982,
  "symbols_in_volume": [
   "glob.glob",
   "pathlib.Path",
   "pyproj.datadir.append_data_dir",
   "pyproj.network.set_network_enabled",
   "pyproj.transformer.TransformerGroup",
   "pytest.mark.grid",
   "pytest.mark.network",
   "test.conftest.grids_available",
   "test.conftest.proj_env",
   "test.conftest.proj_network_env",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "test.test_transformer.test_transformer_group__download_grids__directory": {
  "lineno": 1029,
  "symbols_in_volume": [
   "pyproj.network.set_network_enabled",
   "pyproj.transformer.TransformerGroup",
   "pytest.mark.grid",
   "test.conftest.grids_available",
   "test.conftest.proj_network_env",
   "unittest.mock.call",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "test.test_transformer.test_transformer_group__get_transform_crs": {
  "lineno": 715,
  "symbols_in_volume": [
   "pyproj.transformer.TransformerGroup",
   "pytest.mark.grid",
   "test.conftest.grids_available"
  ],
  "type": "function"
 },
 "test.test_transformer.test_transformer_group__network_disabled": {
  "lineno": 881,
  "symbols_in_volume": [
   "pyproj.network.set_network_enabled",
   "pyproj.transformer.TransformerGroup",
   "pytest.mark.grid",
   "test.conftest.grids_available",
   "test.conftest.proj_network_env",
   "unittest.mock.patch.dict"
  ],
  "type": "function"
 },
 "test.test_transformer.test_transformer_group__network_enabled": {
  "lineno": 866,
  "symbols_in_volume": [
   "pyproj.network.set_network_enabled",
   "pyproj.transformer.TransformerGroup",
   "test.conftest.proj_network_env",
   "unittest.mock.patch.dict"
  ],
  "type": "function"
 },
 "test.test_transformer.test_transformer_group__unavailable": {
  "lineno": 613,
  "symbols_in_volume": [
   "os.environ.get",
   "pyproj.transformer.TransformerGroup",
   "pytest.mark.grid",
   "test.conftest.grids_available"
  ],
  "type": "function"
 },
 "test.test_transformer.test_transformer_not_equals": {
  "lineno": 773,
  "symbols_in_volume": [
   "pyproj.Transformer.from_crs",
   "pyproj.Transformer.from_pipeline",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.test_transformer.test_transformer_proj__area_of_interest": {
  "lineno": 739,
  "symbols_in_volume": [
   "pyproj.Transformer.from_proj",
   "pyproj.transformer.AreaOfInterest",
   "pytest.mark.grid",
   "test.conftest.grids_available"
  ],
  "type": "function"
 },
 "test.test_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.test_utils.test__copytobuffer": {
  "lineno": 21,
  "symbols_in_volume": [
   "array.array",
   "numpy.array",
   "pyproj.utils._copytobuffer",
   "pytest.mark.parametrize",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "test.test_utils.test__copytobuffer__invalid": {
  "lineno": 47,
  "symbols_in_volume": [
   "pyproj.utils._copytobuffer",
   "pytest.raises"
  ],
  "type": "function"
 },
 "test.test_utils.test__copytobuffer__numpy_array": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Series",
   "pyproj.utils._copytobuffer",
   "pytest.mark.parametrize",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "test.test_utils.test__copytobuffer_return_scalar": {
  "lineno": 11,
  "symbols_in_volume": [
   "array.array",
   "numpy.array",
   "pyproj.utils._copytobuffer_return_scalar",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "test.test_utils.test__copytobuffer_return_scalar__invalid": {
  "lineno": 16,
  "symbols_in_volume": [
   "pyproj.utils._copytobuffer_return_scalar",
   "pytest.raises"
  ],
  "type": "function"
 }
}