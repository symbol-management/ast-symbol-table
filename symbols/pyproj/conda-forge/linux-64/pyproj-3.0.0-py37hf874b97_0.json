{
 "pyproj": {
  "data": {
   "symbols_in_volume": [
    "pyproj._datadir._pyproj_global_context_initialize",
    "pyproj.exceptions.DataDirError",
    "pyproj.transformer.proj_version_str",
    "pyproj.warnings",
    "str"
   ]
  },
  "type": "module"
 },
 "pyproj.CRS": {
  "data": {
   "shadows": "pyproj.crs.CRS"
  },
  "type": "import"
 },
 "pyproj.DataDirError": {
  "data": {
   "shadows": "pyproj.exceptions.DataDirError"
  },
  "type": "import"
 },
 "pyproj.Geod": {
  "data": {
   "shadows": "pyproj.geod.Geod"
  },
  "type": "import"
 },
 "pyproj.Proj": {
  "data": {
   "shadows": "pyproj.proj.Proj"
  },
  "type": "import"
 },
 "pyproj.ProjError": {
  "data": {
   "shadows": "pyproj.exceptions.ProjError"
  },
  "type": "import"
 },
 "pyproj.Transformer": {
  "data": {
   "shadows": "pyproj.transformer.Transformer"
  },
  "type": "import"
 },
 "pyproj.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyproj.__main__": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyproj.__main__.argparse",
    "pyproj.__main__.main",
    "pyproj.__main__.parser",
    "pyproj.__main__.subparsers",
    "pyproj.__main__.sync_parser",
    "pyproj.__proj_version__",
    "pyproj.__version__"
   ]
  },
  "type": "module"
 },
 "pyproj.__main__.BBox": {
  "data": {
   "shadows": "pyproj.aoi.BBox"
  },
  "type": "import"
 },
 "pyproj.__main__.__proj_version__": {
  "data": {
   "shadows": "pyproj.__proj_version__"
  },
  "type": "import"
 },
 "pyproj.__main__.__version__": {
  "data": {
   "shadows": "pyproj.__version__"
  },
  "type": "import"
 },
 "pyproj.__main__._download_resource_file": {
  "data": {
   "shadows": "pyproj.sync._download_resource_file"
  },
  "type": "import"
 },
 "pyproj.__main__._show_versions": {
  "data": {
   "shadows": "pyproj._show_versions"
  },
  "type": "import"
 },
 "pyproj.__main__.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "pyproj.__main__.get_data_dir": {
  "data": {
   "shadows": "pyproj.datadir.get_data_dir"
  },
  "type": "import"
 },
 "pyproj.__main__.get_proj_endpoint": {
  "data": {
   "shadows": "pyproj.sync.get_proj_endpoint"
  },
  "type": "import"
 },
 "pyproj.__main__.get_transform_grid_list": {
  "data": {
   "shadows": "pyproj.sync.get_transform_grid_list"
  },
  "type": "import"
 },
 "pyproj.__main__.get_user_data_dir": {
  "data": {
   "shadows": "pyproj.datadir.get_user_data_dir"
  },
  "type": "import"
 },
 "pyproj.__main__.main": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "RuntimeError",
    "any",
    "float",
    "hasattr",
    "print",
    "pyproj.__main__.os",
    "pyproj.__main__.parser",
    "pyproj.__main__.sync_parser",
    "pyproj._show_versions.show_versions",
    "pyproj.aoi.BBox",
    "pyproj.datadir.get_data_dir",
    "pyproj.datadir.get_user_data_dir",
    "pyproj.sync._download_resource_file",
    "pyproj.sync.get_proj_endpoint",
    "pyproj.sync.get_transform_grid_list"
   ]
  },
  "type": "function"
 },
 "pyproj.__main__.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyproj.__main__.parser": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pyproj.__main__.subparsers": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyproj.__main__.sync_parser": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyproj.__proj_version__": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "pyproj.__version__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyproj._pyproj_global_context_initialize": {
  "data": {
   "shadows": "pyproj._datadir._pyproj_global_context_initialize"
  },
  "type": "import"
 },
 "pyproj._show_versions": {
  "data": {},
  "type": "module"
 },
 "pyproj._show_versions.DataDirError": {
  "data": {
   "shadows": "pyproj.exceptions.DataDirError"
  },
  "type": "import"
 },
 "pyproj._show_versions._get_deps_info": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ImportError",
    "get_version",
    "pyproj._show_versions.importlib",
    "pyproj._show_versions.sys"
   ]
  },
  "type": "function"
 },
 "pyproj._show_versions._get_deps_info.get_version": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "pyproj._show_versions._get_proj_info": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "dict",
    "pyproj._show_versions.pyproj",
    "pyproj.exceptions.DataDirError"
   ]
  },
  "type": "function"
 },
 "pyproj._show_versions._get_sys_info": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "dict",
    "pyproj._show_versions.platform",
    "pyproj._show_versions.sys"
   ]
  },
  "type": "function"
 },
 "pyproj._show_versions._print_info_dict": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "pyproj._show_versions.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "pyproj._show_versions.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "pyproj._show_versions.pyproj": {
  "data": {
   "shadows": "pyproj"
  },
  "type": "import"
 },
 "pyproj._show_versions.show_versions": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "print",
    "pyproj._show_versions._get_deps_info",
    "pyproj._show_versions._get_proj_info",
    "pyproj._show_versions._get_sys_info",
    "pyproj._show_versions._print_info_dict"
   ]
  },
  "type": "function"
 },
 "pyproj._show_versions.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyproj.aoi": {
  "data": {},
  "type": "module"
 },
 "pyproj.aoi.AreaOfInterest": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "float",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "pyproj.aoi.AreaOfUse": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "float",
    "str",
    "typing.NamedTuple",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "pyproj.aoi.AreaOfUse.__str__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "pyproj.aoi.AreaOfUse.bounds": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyproj.aoi.BBox": {
  "data": {
   "lineno": 53
  },
  "type": "class"
 },
 "pyproj.aoi.BBox.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "pyproj.aoi.BBox.__repr__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pyproj.aoi.BBox.contains": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "bool",
    "pyproj.aoi.AreaOfUse",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pyproj.aoi.BBox.intersects": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "bool",
    "pyproj.aoi.AreaOfUse",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pyproj.aoi.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "pyproj.aoi.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pyproj.aoi.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pyproj.compat": {
  "data": {},
  "type": "module"
 },
 "pyproj.compat.cstrencode": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "AttributeError",
    "UnicodeDecodeError"
   ]
  },
  "type": "function"
 },
 "pyproj.compat.pystrdecode": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "pyproj.crs": {
  "data": {},
  "type": "module"
 },
 "pyproj.crs.BoundCRS": {
  "data": {
   "shadows": "pyproj.crs.crs.BoundCRS"
  },
  "type": "import"
 },
 "pyproj.crs.CRS": {
  "data": {
   "shadows": "pyproj.crs.crs.CRS"
  },
  "type": "import"
 },
 "pyproj.crs.CRSError": {
  "data": {
   "shadows": "pyproj.exceptions.CRSError"
  },
  "type": "import"
 },
 "pyproj.crs.CompoundCRS": {
  "data": {
   "shadows": "pyproj.crs.crs.CompoundCRS"
  },
  "type": "import"
 },
 "pyproj.crs.CoordinateOperation": {
  "data": {
   "shadows": "pyproj._crs.CoordinateOperation"
  },
  "type": "import"
 },
 "pyproj.crs.CoordinateSystem": {
  "data": {
   "shadows": "pyproj._crs.CoordinateSystem"
  },
  "type": "import"
 },
 "pyproj.crs.Datum": {
  "data": {
   "shadows": "pyproj._crs.Datum"
  },
  "type": "import"
 },
 "pyproj.crs.DerivedGeographicCRS": {
  "data": {
   "shadows": "pyproj.crs.crs.DerivedGeographicCRS"
  },
  "type": "import"
 },
 "pyproj.crs.Ellipsoid": {
  "data": {
   "shadows": "pyproj._crs.Ellipsoid"
  },
  "type": "import"
 },
 "pyproj.crs.GeographicCRS": {
  "data": {
   "shadows": "pyproj.crs.crs.GeographicCRS"
  },
  "type": "import"
 },
 "pyproj.crs.PrimeMeridian": {
  "data": {
   "shadows": "pyproj._crs.PrimeMeridian"
  },
  "type": "import"
 },
 "pyproj.crs.ProjectedCRS": {
  "data": {
   "shadows": "pyproj.crs.crs.ProjectedCRS"
  },
  "type": "import"
 },
 "pyproj.crs.VerticalCRS": {
  "data": {
   "shadows": "pyproj.crs.crs.VerticalCRS"
  },
  "type": "import"
 },
 "pyproj.crs._cf1x8": {
  "data": {
   "symbols_in_volume": [
    "pyproj.crs._cf1x8._albers_conical_equal_area",
    "pyproj.crs._cf1x8._albers_conical_equal_area__to_cf",
    "pyproj.crs._cf1x8._azimuthal_equidistant",
    "pyproj.crs._cf1x8._azimuthal_equidistant__to_cf",
    "pyproj.crs._cf1x8._geostationary",
    "pyproj.crs._cf1x8._geostationary__to_cf",
    "pyproj.crs._cf1x8._lambert_azimuthal_equal_area",
    "pyproj.crs._cf1x8._lambert_azimuthal_equal_area__to_cf",
    "pyproj.crs._cf1x8._lambert_conformal_conic",
    "pyproj.crs._cf1x8._lambert_conformal_conic__to_cf",
    "pyproj.crs._cf1x8._lambert_cylindrical_equal_area",
    "pyproj.crs._cf1x8._lambert_cylindrical_equal_area__to_cf",
    "pyproj.crs._cf1x8._mercator",
    "pyproj.crs._cf1x8._mercator__to_cf",
    "pyproj.crs._cf1x8._oblique_mercator",
    "pyproj.crs._cf1x8._oblique_mercator__to_cf",
    "pyproj.crs._cf1x8._orthographic",
    "pyproj.crs._cf1x8._orthographic__to_cf",
    "pyproj.crs._cf1x8._polar_stereographic",
    "pyproj.crs._cf1x8._polar_stereographic__to_cf",
    "pyproj.crs._cf1x8._rotated_latitude_longitude",
    "pyproj.crs._cf1x8._rotated_latitude_longitude__to_cf",
    "pyproj.crs._cf1x8._sinusoidal",
    "pyproj.crs._cf1x8._sinusoidal__to_cf",
    "pyproj.crs._cf1x8._stereographic",
    "pyproj.crs._cf1x8._stereographic__to_cf",
    "pyproj.crs._cf1x8._transverse_mercator",
    "pyproj.crs._cf1x8._transverse_mercator__to_cf",
    "pyproj.crs._cf1x8._vertical_perspective",
    "pyproj.crs._cf1x8._vertical_perspective__to_cf"
   ]
  },
  "type": "module"
 },
 "pyproj.crs._cf1x8.AlbersEqualAreaConversion": {
  "data": {
   "shadows": "pyproj.crs.coordinate_operation.AlbersEqualAreaConversion"
  },
  "type": "import"
 },
 "pyproj.crs._cf1x8.AzumuthalEquidistantConversion": {
  "data": {
   "shadows": "pyproj.crs.coordinate_operation.AzumuthalEquidistantConversion"
  },
  "type": "import"
 },
 "pyproj.crs._cf1x8.CRSError": {
  "data": {
   "shadows": "pyproj.exceptions.CRSError"
  },
  "type": "import"
 },
 "pyproj.crs._cf1x8.CustomDatum": {
  "data": {
   "shadows": "pyproj.crs.datum.CustomDatum"
  },
  "type": "import"
 },
 "pyproj.crs._cf1x8.CustomEllipsoid": {
  "data": {
   "shadows": "pyproj.crs.datum.CustomEllipsoid"
  },
  "type": "import"
 },
 "pyproj.crs._cf1x8.CustomPrimeMeridian": {
  "data": {
   "shadows": "pyproj.crs.datum.CustomPrimeMeridian"
  },
  "type": "import"
 },
 "pyproj.crs._cf1x8.Datum": {
  "data": {
   "shadows": "pyproj._crs.Datum"
  },
  "type": "import"
 },
 "pyproj.crs._cf1x8.Ellipsoid": {
  "data": {
   "shadows": "pyproj._crs.Ellipsoid"
  },
  "type": "import"
 },
 "pyproj.crs._cf1x8.GeostationarySatelliteConversion": {
  "data": {
   "shadows": "pyproj.crs.coordinate_operation.GeostationarySatelliteConversion"
  },
  "type": "import"
 },
 "pyproj.crs._cf1x8.HotineObliqueMercatorBConversion": {
  "data": {
   "shadows": "pyproj.crs.coordinate_operation.HotineObliqueMercatorBConversion"
  },
  "type": "import"
 },
 "pyproj.crs._cf1x8.LambertAzumuthalEqualAreaConversion": {
  "data": {
   "shadows": "pyproj.crs.coordinate_operation.LambertAzumuthalEqualAreaConversion"
  },
  "type": "import"
 },
 "pyproj.crs._cf1x8.LambertConformalConic1SPConversion": {
  "data": {
   "shadows": "pyproj.crs.coordinate_operation.LambertConformalConic1SPConversion"
  },
  "type": "import"
 },
 "pyproj.crs._cf1x8.LambertConformalConic2SPConversion": {
  "data": {
   "shadows": "pyproj.crs.coordinate_operation.LambertConformalConic2SPConversion"
  },
  "type": "import"
 },
 "pyproj.crs._cf1x8.LambertCylindricalEqualAreaConversion": {
  "data": {
   "shadows": "pyproj.crs.coordinate_operation.LambertCylindricalEqualAreaConversion"
  },
  "type": "import"
 },
 "pyproj.crs._cf1x8.LambertCylindricalEqualAreaScaleConversion": {
  "data": {
   "shadows": "pyproj.crs.coordinate_operation.LambertCylindricalEqualAreaScaleConversion"
  },
  "type": "import"
 },
 "pyproj.crs._cf1x8.MercatorAConversion": {
  "data": {
   "shadows": "pyproj.crs.coordinate_operation.MercatorAConversion"
  },
  "type": "import"
 },
 "pyproj.crs._cf1x8.MercatorBConversion": {
  "data": {
   "shadows": "pyproj.crs.coordinate_operation.MercatorBConversion"
  },
  "type": "import"
 },
 "pyproj.crs._cf1x8.OrthographicConversion": {
  "data": {
   "shadows": "pyproj.crs.coordinate_operation.OrthographicConversion"
  },
  "type": "import"
 },
 "pyproj.crs._cf1x8.PolarStereographicAConversion": {
  "data": {
   "shadows": "pyproj.crs.coordinate_operation.PolarStereographicAConversion"
  },
  "type": "import"
 },
 "pyproj.crs._cf1x8.PolarStereographicBConversion": {
  "data": {
   "shadows": "pyproj.crs.coordinate_operation.PolarStereographicBConversion"
  },
  "type": "import"
 },
 "pyproj.crs._cf1x8.PrimeMeridian": {
  "data": {
   "shadows": "pyproj._crs.PrimeMeridian"
  },
  "type": "import"
 },
 "pyproj.crs._cf1x8.RotatedLatitudeLongitudeConversion": {
  "data": {
   "shadows": "pyproj.crs.coordinate_operation.RotatedLatitudeLongitudeConversion"
  },
  "type": "import"
 },
 "pyproj.crs._cf1x8.SinusoidalConversion": {
  "data": {
   "shadows": "pyproj.crs.coordinate_operation.SinusoidalConversion"
  },
  "type": "import"
 },
 "pyproj.crs._cf1x8.StereographicConversion": {
  "data": {
   "shadows": "pyproj.crs.coordinate_operation.StereographicConversion"
  },
  "type": "import"
 },
 "pyproj.crs._cf1x8.TransverseMercatorConversion": {
  "data": {
   "shadows": "pyproj.crs.coordinate_operation.TransverseMercatorConversion"
  },
  "type": "import"
 },
 "pyproj.crs._cf1x8.VerticalPerspectiveConversion": {
  "data": {
   "shadows": "pyproj.crs.coordinate_operation.VerticalPerspectiveConversion"
  },
  "type": "import"
 },
 "pyproj.crs._cf1x8._GEOGRAPHIC_GRID_MAPPING_NAME_MAP": {
  "data": {
   "lineno": 360
  },
  "type": "constant"
 },
 "pyproj.crs._cf1x8._GRID_MAPPING_NAME_MAP": {
  "data": {
   "lineno": 343
  },
  "type": "constant"
 },
 "pyproj.crs._cf1x8._INVERSE_GEOGRAPHIC_GRID_MAPPING_NAME_MAP": {
  "data": {
   "lineno": 654
  },
  "type": "constant"
 },
 "pyproj.crs._cf1x8._INVERSE_GRID_MAPPING_NAME_MAP": {
  "data": {
   "lineno": 633
  },
  "type": "constant"
 },
 "pyproj.crs._cf1x8._albers_conical_equal_area": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "pyproj.crs._cf1x8._get_standard_parallels",
    "pyproj.crs.coordinate_operation.AlbersEqualAreaConversion"
   ]
  },
  "type": "function"
 },
 "pyproj.crs._cf1x8._albers_conical_equal_area__to_cf": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "pyproj.crs._cf1x8._to_dict"
   ]
  },
  "type": "function"
 },
 "pyproj.crs._cf1x8._azimuthal_equidistant": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "pyproj.crs.coordinate_operation.AzumuthalEquidistantConversion"
   ]
  },
  "type": "function"
 },
 "pyproj.crs._cf1x8._azimuthal_equidistant__to_cf": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "pyproj.crs._cf1x8._to_dict"
   ]
  },
  "type": "function"
 },
 "pyproj.crs._cf1x8._geostationary": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "KeyError",
    "pyproj.crs.coordinate_operation.GeostationarySatelliteConversion"
   ]
  },
  "type": "function"
 },
 "pyproj.crs._cf1x8._geostationary__to_cf": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "pyproj.crs._cf1x8._to_dict"
   ]
  },
  "type": "function"
 },
 "pyproj.crs._cf1x8._get_standard_parallels": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "pyproj.crs._cf1x8._try_list_if_string"
   ]
  },
  "type": "function"
 },
 "pyproj.crs._cf1x8._horizontal_datum_from_params": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "KeyError",
    "pyproj._crs.Datum.from_name",
    "pyproj._crs.Ellipsoid.from_name",
    "pyproj._crs.PrimeMeridian.from_name",
    "pyproj.crs.datum.CustomDatum",
    "pyproj.crs.datum.CustomEllipsoid",
    "pyproj.crs.datum.CustomPrimeMeridian",
    "pyproj.exceptions.CRSError"
   ]
  },
  "type": "function"
 },
 "pyproj.crs._cf1x8._lambert_azimuthal_equal_area": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "pyproj.crs.coordinate_operation.LambertAzumuthalEqualAreaConversion"
   ]
  },
  "type": "function"
 },
 "pyproj.crs._cf1x8._lambert_azimuthal_equal_area__to_cf": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "pyproj.crs._cf1x8._to_dict"
   ]
  },
  "type": "function"
 },
 "pyproj.crs._cf1x8._lambert_conformal_conic": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "pyproj.crs._cf1x8._get_standard_parallels",
    "pyproj.crs.coordinate_operation.LambertConformalConic1SPConversion",
    "pyproj.crs.coordinate_operation.LambertConformalConic2SPConversion"
   ]
  },
  "type": "function"
 },
 "pyproj.crs._cf1x8._lambert_conformal_conic__to_cf": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "pyproj.crs._cf1x8._to_dict"
   ]
  },
  "type": "function"
 },
 "pyproj.crs._cf1x8._lambert_cylindrical_equal_area": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "pyproj.crs.coordinate_operation.LambertCylindricalEqualAreaConversion",
    "pyproj.crs.coordinate_operation.LambertCylindricalEqualAreaScaleConversion"
   ]
  },
  "type": "function"
 },
 "pyproj.crs._cf1x8._lambert_cylindrical_equal_area__to_cf": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "pyproj.crs._cf1x8._to_dict"
   ]
  },
  "type": "function"
 },
 "pyproj.crs._cf1x8._mercator": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "pyproj.crs.coordinate_operation.MercatorAConversion",
    "pyproj.crs.coordinate_operation.MercatorBConversion"
   ]
  },
  "type": "function"
 },
 "pyproj.crs._cf1x8._mercator__to_cf": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "pyproj.crs._cf1x8._to_dict"
   ]
  },
  "type": "function"
 },
 "pyproj.crs._cf1x8._oblique_mercator": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "pyproj.crs.coordinate_operation.HotineObliqueMercatorBConversion"
   ]
  },
  "type": "function"
 },
 "pyproj.crs._cf1x8._oblique_mercator__to_cf": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "pyproj.crs._cf1x8._to_dict",
    "pyproj.crs._cf1x8.warnings"
   ]
  },
  "type": "function"
 },
 "pyproj.crs._cf1x8._orthographic": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "pyproj.crs.coordinate_operation.OrthographicConversion"
   ]
  },
  "type": "function"
 },
 "pyproj.crs._cf1x8._orthographic__to_cf": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "pyproj.crs._cf1x8._to_dict"
   ]
  },
  "type": "function"
 },
 "pyproj.crs._cf1x8._polar_stereographic": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "pyproj.crs.coordinate_operation.PolarStereographicAConversion",
    "pyproj.crs.coordinate_operation.PolarStereographicBConversion"
   ]
  },
  "type": "function"
 },
 "pyproj.crs._cf1x8._polar_stereographic__to_cf": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "pyproj.crs._cf1x8._to_dict"
   ]
  },
  "type": "function"
 },
 "pyproj.crs._cf1x8._rotated_latitude_longitude": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "pyproj.crs.coordinate_operation.RotatedLatitudeLongitudeConversion"
   ]
  },
  "type": "function"
 },
 "pyproj.crs._cf1x8._rotated_latitude_longitude__to_cf": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "pyproj.crs._cf1x8._to_dict"
   ]
  },
  "type": "function"
 },
 "pyproj.crs._cf1x8._sinusoidal": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "pyproj.crs.coordinate_operation.SinusoidalConversion"
   ]
  },
  "type": "function"
 },
 "pyproj.crs._cf1x8._sinusoidal__to_cf": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "pyproj.crs._cf1x8._to_dict"
   ]
  },
  "type": "function"
 },
 "pyproj.crs._cf1x8._stereographic": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "pyproj.crs.coordinate_operation.StereographicConversion"
   ]
  },
  "type": "function"
 },
 "pyproj.crs._cf1x8._stereographic__to_cf": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "pyproj.crs._cf1x8._to_dict"
   ]
  },
  "type": "function"
 },
 "pyproj.crs._cf1x8._to_dict": {
  "data": {
   "lineno": 365
  },
  "type": "function"
 },
 "pyproj.crs._cf1x8._transverse_mercator": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "pyproj.crs.coordinate_operation.TransverseMercatorConversion"
   ]
  },
  "type": "function"
 },
 "pyproj.crs._cf1x8._transverse_mercator__to_cf": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "pyproj.crs._cf1x8._to_dict"
   ]
  },
  "type": "function"
 },
 "pyproj.crs._cf1x8._try_list_if_string": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "pyproj.crs._cf1x8._vertical_perspective": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "pyproj.crs.coordinate_operation.VerticalPerspectiveConversion"
   ]
  },
  "type": "function"
 },
 "pyproj.crs._cf1x8._vertical_perspective__to_cf": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "pyproj.crs._cf1x8._to_dict"
   ]
  },
  "type": "function"
 },
 "pyproj.crs._cf1x8.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyproj.crs.coordinate_operation": {
  "data": {
   "symbols_in_volume": [
    "pyproj.crs.coordinate_operation.EquidistantCylindricalConversion"
   ]
  },
  "type": "module"
 },
 "pyproj.crs.coordinate_operation.AlbersEqualAreaConversion": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "pyproj._crs.CoordinateOperation"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.AlbersEqualAreaConversion.__new__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pyproj.crs.coordinate_operation.AzumuthalEquidistantConversion": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "pyproj._crs.CoordinateOperation"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.AzumuthalEquidistantConversion.__new__": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.CRS": {
  "data": {
   "shadows": "pyproj.crs.CRS"
  },
  "type": "import"
 },
 "pyproj.crs.coordinate_operation.CRSError": {
  "data": {
   "shadows": "pyproj.exceptions.CRSError"
  },
  "type": "import"
 },
 "pyproj.crs.coordinate_operation.CoordinateOperation": {
  "data": {
   "shadows": "pyproj._crs.CoordinateOperation"
  },
  "type": "import"
 },
 "pyproj.crs.coordinate_operation.EquidistantCylindricalConversion": {
  "data": {
   "lineno": 1401,
   "symbols_in_volume": [
    "pyproj._crs.CoordinateOperation"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.EquidistantCylindricalConversion.__new__": {
  "data": {
   "lineno": 1410,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.GeostationarySatelliteConversion": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "pyproj._crs.CoordinateOperation"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.GeostationarySatelliteConversion.__new__": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "float",
    "pyproj.crs.coordinate_operation.warnings",
    "pyproj.exceptions.CRSError",
    "str"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.HotineObliqueMercatorBConversion": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "pyproj._crs.CoordinateOperation"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.HotineObliqueMercatorBConversion.__new__": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.LambertAzumuthalEqualAreaConversion": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "pyproj._crs.CoordinateOperation"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.LambertAzumuthalEqualAreaConversion.__new__": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.LambertConformalConic1SPConversion": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "pyproj._crs.CoordinateOperation"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.LambertConformalConic1SPConversion.__new__": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.LambertConformalConic2SPConversion": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "pyproj._crs.CoordinateOperation"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.LambertConformalConic2SPConversion.__new__": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.LambertCylindricalEqualAreaConversion": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "pyproj._crs.CoordinateOperation"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.LambertCylindricalEqualAreaConversion.__new__": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.LambertCylindricalEqualAreaScaleConversion": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "pyproj._crs.CoordinateOperation"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.LambertCylindricalEqualAreaScaleConversion.__new__": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "float",
    "pyproj.crs.CRS"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.MercatorAConversion": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "pyproj._crs.CoordinateOperation"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.MercatorAConversion.__new__": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.MercatorBConversion": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "pyproj._crs.CoordinateOperation"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.MercatorBConversion.__new__": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.OrthographicConversion": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "pyproj._crs.CoordinateOperation"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.OrthographicConversion.__new__": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.PlateCarreeConversion": {
  "data": {
   "lineno": 1477
  },
  "type": "constant"
 },
 "pyproj.crs.coordinate_operation.PolarStereographicAConversion": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "pyproj._crs.CoordinateOperation"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.PolarStereographicAConversion.__new__": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.PolarStereographicBConversion": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "pyproj._crs.CoordinateOperation"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.PolarStereographicBConversion.__new__": {
  "data": {
   "lineno": 995,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.RotatedLatitudeLongitudeConversion": {
  "data": {
   "lineno": 1364,
   "symbols_in_volume": [
    "pyproj._crs.CoordinateOperation"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.RotatedLatitudeLongitudeConversion.__new__": {
  "data": {
   "lineno": 1373,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.SinusoidalConversion": {
  "data": {
   "lineno": 1053,
   "symbols_in_volume": [
    "pyproj._crs.CoordinateOperation"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.SinusoidalConversion.__new__": {
  "data": {
   "lineno": 1062,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.StereographicConversion": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "pyproj._crs.CoordinateOperation"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.StereographicConversion.__new__": {
  "data": {
   "lineno": 1117,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.ToWGS84Transformation": {
  "data": {
   "lineno": 1480,
   "symbols_in_volume": [
    "pyproj._crs.CoordinateOperation"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.ToWGS84Transformation.__new__": {
  "data": {
   "lineno": 1487,
   "symbols_in_volume": [
    "float",
    "pyproj.crs.CRS.from_user_input",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.TransverseMercatorConversion": {
  "data": {
   "lineno": 1203,
   "symbols_in_volume": [
    "pyproj._crs.CoordinateOperation"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.TransverseMercatorConversion.__new__": {
  "data": {
   "lineno": 1212,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.UTMConversion": {
  "data": {
   "lineno": 1182,
   "symbols_in_volume": [
    "pyproj._crs.CoordinateOperation"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.UTMConversion.__new__": {
  "data": {
   "lineno": 1191,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.VerticalPerspectiveConversion": {
  "data": {
   "lineno": 1279,
   "symbols_in_volume": [
    "pyproj._crs.CoordinateOperation"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.coordinate_operation.VerticalPerspectiveConversion.__new__": {
  "data": {
   "lineno": 1288,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.coordinate_operation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyproj.crs.coordinate_system": {
  "data": {
   "symbols_in_volume": [
    "pyproj.crs.coordinate_system.UNIT_DEGREE",
    "pyproj.crs.coordinate_system.UNIT_FT",
    "pyproj.crs.coordinate_system.UNIT_METRE",
    "pyproj.crs.coordinate_system.UNIT_US_FT",
    "pyproj.crs.enums.Cartesian2DCSAxis.EASTING_NORTHING",
    "pyproj.crs.enums.Cartesian2DCSAxis.EASTING_NORTHING_FT",
    "pyproj.crs.enums.Cartesian2DCSAxis.EASTING_NORTHING_US_FT",
    "pyproj.crs.enums.Cartesian2DCSAxis.NORTHING_EASTING",
    "pyproj.crs.enums.Cartesian2DCSAxis.NORTHING_EASTING_FT",
    "pyproj.crs.enums.Cartesian2DCSAxis.NORTHING_EASTING_US_FT",
    "pyproj.crs.enums.Cartesian2DCSAxis.NORTH_POLE_EASTING_SOUTH_NORTHING_SOUTH",
    "pyproj.crs.enums.Cartesian2DCSAxis.SOUTH_POLE_EASTING_NORTH_NORTHING_NORTH",
    "pyproj.crs.enums.Cartesian2DCSAxis.WESTING_SOUTHING",
    "pyproj.crs.enums.Ellipsoidal2DCSAxis.LATITUDE_LONGITUDE",
    "pyproj.crs.enums.Ellipsoidal2DCSAxis.LONGITUDE_LATITUDE",
    "pyproj.crs.enums.Ellipsoidal3DCSAxis.LATITUDE_LONGITUDE_HEIGHT",
    "pyproj.crs.enums.Ellipsoidal3DCSAxis.LONGITUDE_LATITUDE_HEIGHT",
    "pyproj.crs.enums.VerticalCSAxis.DEPTH",
    "pyproj.crs.enums.VerticalCSAxis.DEPTH_FT",
    "pyproj.crs.enums.VerticalCSAxis.DEPTH_US_FT",
    "pyproj.crs.enums.VerticalCSAxis.GRAVITY_HEIGHT",
    "pyproj.crs.enums.VerticalCSAxis.GRAVITY_HEIGHT_FT",
    "pyproj.crs.enums.VerticalCSAxis.GRAVITY_HEIGHT_US_FT",
    "pyproj.crs.enums.VerticalCSAxis.UP",
    "pyproj.crs.enums.VerticalCSAxis.UP_FT",
    "pyproj.crs.enums.VerticalCSAxis.UP_US_FT"
   ]
  },
  "type": "module"
 },
 "pyproj.crs.coordinate_system.Cartesian2DCS": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "pyproj._crs.CoordinateSystem"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.coordinate_system.Cartesian2DCS.__new__": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "pyproj.crs.coordinate_system._CARTESIAN_2D_AXIS_MAP",
    "pyproj.crs.enums.Cartesian2DCSAxis",
    "pyproj.crs.enums.Cartesian2DCSAxis.EASTING_NORTHING",
    "pyproj.crs.enums.Cartesian2DCSAxis.create",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.coordinate_system.Cartesian2DCSAxis": {
  "data": {
   "shadows": "pyproj.crs.enums.Cartesian2DCSAxis"
  },
  "type": "import"
 },
 "pyproj.crs.coordinate_system.CoordinateSystem": {
  "data": {
   "shadows": "pyproj._crs.CoordinateSystem"
  },
  "type": "import"
 },
 "pyproj.crs.coordinate_system.Ellipsoidal2DCS": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "pyproj._crs.CoordinateSystem"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.coordinate_system.Ellipsoidal2DCS.__new__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "pyproj.crs.coordinate_system._ELLIPSOIDAL_2D_AXIS_MAP",
    "pyproj.crs.enums.Ellipsoidal2DCSAxis",
    "pyproj.crs.enums.Ellipsoidal2DCSAxis.LONGITUDE_LATITUDE",
    "pyproj.crs.enums.Ellipsoidal2DCSAxis.create",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.coordinate_system.Ellipsoidal2DCSAxis": {
  "data": {
   "shadows": "pyproj.crs.enums.Ellipsoidal2DCSAxis"
  },
  "type": "import"
 },
 "pyproj.crs.coordinate_system.Ellipsoidal3DCS": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "pyproj._crs.CoordinateSystem"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.coordinate_system.Ellipsoidal3DCS.__new__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "pyproj.crs.coordinate_system._ELLIPSOIDAL_3D_AXIS_MAP",
    "pyproj.crs.enums.Ellipsoidal3DCSAxis",
    "pyproj.crs.enums.Ellipsoidal3DCSAxis.LONGITUDE_LATITUDE_HEIGHT",
    "pyproj.crs.enums.Ellipsoidal3DCSAxis.create",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.coordinate_system.Ellipsoidal3DCSAxis": {
  "data": {
   "shadows": "pyproj.crs.enums.Ellipsoidal3DCSAxis"
  },
  "type": "import"
 },
 "pyproj.crs.coordinate_system.UNIT_DEGREE": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pyproj.crs.coordinate_system.UNIT_FT": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pyproj.crs.coordinate_system.UNIT_METRE": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pyproj.crs.coordinate_system.UNIT_US_FT": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pyproj.crs.coordinate_system.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pyproj.crs.coordinate_system.VerticalCS": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "pyproj._crs.CoordinateSystem"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.coordinate_system.VerticalCS.__new__": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "pyproj.crs.coordinate_system._VERTICAL_AXIS_MAP",
    "pyproj.crs.enums.VerticalCSAxis",
    "pyproj.crs.enums.VerticalCSAxis.GRAVITY_HEIGHT",
    "pyproj.crs.enums.VerticalCSAxis.create",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.coordinate_system.VerticalCSAxis": {
  "data": {
   "shadows": "pyproj.crs.enums.VerticalCSAxis"
  },
  "type": "import"
 },
 "pyproj.crs.coordinate_system._CARTESIAN_2D_AXIS_MAP": {
  "data": {
   "lineno": 155
  },
  "type": "constant"
 },
 "pyproj.crs.coordinate_system._ELLIPSOIDAL_2D_AXIS_MAP": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyproj.crs.coordinate_system._ELLIPSOIDAL_3D_AXIS_MAP": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "pyproj.crs.coordinate_system._VERTICAL_AXIS_MAP": {
  "data": {
   "lineno": 300
  },
  "type": "constant"
 },
 "pyproj.crs.crs": {
  "data": {},
  "type": "module"
 },
 "pyproj.crs.crs.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pyproj.crs.crs.BoundCRS": {
  "data": {
   "lineno": 1272,
   "symbols_in_volume": [
    "pyproj.crs.crs.CRS"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.crs.BoundCRS.__init__": {
  "data": {
   "lineno": 1279,
   "symbols_in_volume": [
    "pyproj._crs.CoordinateOperation.from_user_input",
    "pyproj.crs.crs.CRS",
    "super",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.CRS": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "pyproj._crs._CRS"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.crs.CRS.__eq__": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "bool",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.CRS.__hash__": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": [
    "hash",
    "int"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.CRS.__init__": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "dict",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "list",
    "pyproj.crs.crs._prepare_from_authority",
    "pyproj.crs.crs._prepare_from_dict",
    "pyproj.crs.crs._prepare_from_epsg",
    "pyproj.crs.crs._prepare_from_string",
    "pyproj.exceptions.CRSError",
    "str",
    "super",
    "tuple",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.CRS.__ne__": {
  "data": {
   "lineno": 995,
   "symbols_in_volume": [
    "bool",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.CRS.__reduce__": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": [
    "str",
    "typing.Tuple",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.CRS.__repr__": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.CRS.__str__": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.CRS.cs_to_cf": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "dict",
    "len",
    "rotated_pole",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.CRS.cs_to_cf.rotated_pole": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "KeyError",
    "pyproj.crs._cf1x8._INVERSE_GEOGRAPHIC_GRID_MAPPING_NAME_MAP"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.CRS.equals": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "bool",
    "pyproj.crs.crs.CRS",
    "pyproj.exceptions.CRSError",
    "super",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.CRS.from_authority": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "int",
    "pyproj.crs.crs.CRS",
    "pyproj.crs.crs._prepare_from_authority",
    "staticmethod",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.CRS.from_cf": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "KeyError",
    "conversion_method",
    "dict",
    "geographic_conversion_method",
    "pyproj._crs.CoordinateSystem.from_user_input",
    "pyproj.crs._cf1x8._GEOGRAPHIC_GRID_MAPPING_NAME_MAP",
    "pyproj.crs._cf1x8._GRID_MAPPING_NAME_MAP",
    "pyproj.crs._cf1x8._horizontal_datum_from_params",
    "pyproj.crs._cf1x8._try_list_if_string",
    "pyproj.crs.coordinate_operation.ToWGS84Transformation",
    "pyproj.crs.crs.BoundCRS",
    "pyproj.crs.crs.CRS",
    "pyproj.crs.crs.CompoundCRS",
    "pyproj.crs.crs.DerivedGeographicCRS",
    "pyproj.crs.crs.GeographicCRS",
    "pyproj.crs.crs.ProjectedCRS",
    "pyproj.crs.crs.VerticalCRS",
    "pyproj.exceptions.CRSError",
    "staticmethod",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.CRS.from_dict": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "dict",
    "pyproj.crs.crs.CRS",
    "pyproj.crs.crs._prepare_from_dict",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.CRS.from_epsg": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "int",
    "pyproj.crs.crs.CRS",
    "pyproj.crs.crs._prepare_from_epsg",
    "staticmethod",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.CRS.from_json": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "pyproj._crs._load_proj_json",
    "pyproj.crs.crs.CRS",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.CRS.from_json_dict": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "dict",
    "pyproj.crs.crs.CRS",
    "pyproj.crs.crs.json",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.CRS.from_proj4": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "pyproj._crs.is_proj",
    "pyproj.crs.crs.CRS",
    "pyproj.crs.crs._prepare_from_string",
    "pyproj.exceptions.CRSError",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.CRS.from_string": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "pyproj.crs.crs.CRS",
    "pyproj.crs.crs._prepare_from_string",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.CRS.from_user_input": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "isinstance",
    "pyproj.crs.crs.CRS",
    "staticmethod",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.CRS.from_wkt": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "pyproj._crs.is_wkt",
    "pyproj.crs.crs.CRS",
    "pyproj.crs.crs._prepare_from_string",
    "pyproj.exceptions.CRSError",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.CRS.geodetic_crs": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "property",
    "pyproj.crs.crs.CRS",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.CRS.get_geod": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "pyproj.geod.Geod",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.CRS.is_exact_same": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "bool",
    "pyproj.crs.crs.CRS",
    "pyproj.exceptions.CRSError",
    "super",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.CRS.source_crs": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "property",
    "pyproj.crs.crs.CRS",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.CRS.sub_crs_list": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "property",
    "pyproj.crs.crs.CRS",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.CRS.target_crs": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "property",
    "pyproj.crs.crs.CRS",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.CRS.to_cf": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "bool",
    "dict",
    "pyproj.crs._cf1x8._INVERSE_GEOGRAPHIC_GRID_MAPPING_NAME_MAP",
    "pyproj.crs._cf1x8._INVERSE_GRID_MAPPING_NAME_MAP",
    "pyproj.crs.crs.warnings",
    "pyproj.enums.WktVersion",
    "pyproj.enums.WktVersion.WKT2_2019",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.CRS.to_dict": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "dict",
    "len",
    "map",
    "parse"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.CRS.to_dict.parse": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "pyproj.crs._cf1x8._try_list_if_string"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.CRS.to_string": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.CRS.utm_zone": {
  "data": {
   "lineno": 967,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.CRSError": {
  "data": {
   "shadows": "pyproj.exceptions.CRSError"
  },
  "type": "import"
 },
 "pyproj.crs.crs.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "pyproj.crs.crs.Cartesian2DCS": {
  "data": {
   "shadows": "pyproj.crs.coordinate_system.Cartesian2DCS"
  },
  "type": "import"
 },
 "pyproj.crs.crs.CompoundCRS": {
  "data": {
   "lineno": 1242,
   "symbols_in_volume": [
    "pyproj.crs.crs.CRS"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.crs.CompoundCRS.__init__": {
  "data": {
   "lineno": 1249,
   "symbols_in_volume": [
    "pyproj.crs.crs.CRS",
    "str",
    "super",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.CoordinateOperation": {
  "data": {
   "shadows": "pyproj._crs.CoordinateOperation"
  },
  "type": "import"
 },
 "pyproj.crs.crs.CoordinateSystem": {
  "data": {
   "shadows": "pyproj._crs.CoordinateSystem"
  },
  "type": "import"
 },
 "pyproj.crs.crs.Datum": {
  "data": {
   "shadows": "pyproj._crs.Datum"
  },
  "type": "import"
 },
 "pyproj.crs.crs.DerivedGeographicCRS": {
  "data": {
   "lineno": 1104,
   "symbols_in_volume": [
    "pyproj.crs.crs.CRS"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.crs.DerivedGeographicCRS.__init__": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": [
    "pyproj._crs.CoordinateOperation.from_user_input",
    "pyproj._crs.CoordinateSystem.from_user_input",
    "pyproj.crs.coordinate_system.Ellipsoidal2DCS",
    "pyproj.crs.crs.CRS",
    "str",
    "super",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "pyproj.crs.crs.Ellipsoid": {
  "data": {
   "shadows": "pyproj._crs.Ellipsoid"
  },
  "type": "import"
 },
 "pyproj.crs.crs.Ellipsoidal2DCS": {
  "data": {
   "shadows": "pyproj.crs.coordinate_system.Ellipsoidal2DCS"
  },
  "type": "import"
 },
 "pyproj.crs.crs.Geod": {
  "data": {
   "shadows": "pyproj.geod.Geod"
  },
  "type": "import"
 },
 "pyproj.crs.crs.GeographicCRS": {
  "data": {
   "lineno": 1066,
   "symbols_in_volume": [
    "pyproj.crs.crs.CRS"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.crs.GeographicCRS.__init__": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": [
    "pyproj._crs.CoordinateSystem.from_user_input",
    "pyproj._crs.Datum.from_user_input",
    "pyproj.crs.coordinate_system.Ellipsoidal2DCS",
    "str",
    "super",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pyproj.crs.crs.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pyproj.crs.crs.PrimeMeridian": {
  "data": {
   "shadows": "pyproj._crs.PrimeMeridian"
  },
  "type": "import"
 },
 "pyproj.crs.crs.ProjectedCRS": {
  "data": {
   "lineno": 1149,
   "symbols_in_volume": [
    "pyproj.crs.crs.CRS"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.crs.ProjectedCRS.__init__": {
  "data": {
   "lineno": 1156,
   "symbols_in_volume": [
    "pyproj._crs.CoordinateOperation.from_user_input",
    "pyproj._crs.CoordinateSystem.from_user_input",
    "pyproj.crs.coordinate_system.Cartesian2DCS",
    "pyproj.crs.crs.CRS",
    "pyproj.crs.crs.GeographicCRS",
    "str",
    "super",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.ToWGS84Transformation": {
  "data": {
   "shadows": "pyproj.crs.coordinate_operation.ToWGS84Transformation"
  },
  "type": "import"
 },
 "pyproj.crs.crs.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pyproj.crs.crs.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "pyproj.crs.crs.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pyproj.crs.crs.VerticalCRS": {
  "data": {
   "lineno": 1196,
   "symbols_in_volume": [
    "pyproj.crs.crs.CRS"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.crs.VerticalCRS.__init__": {
  "data": {
   "lineno": 1206,
   "symbols_in_volume": [
    "pyproj._crs.CoordinateSystem.from_user_input",
    "pyproj._crs.Datum.from_user_input",
    "pyproj.crs.coordinate_system.VerticalCS",
    "str",
    "super",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs.VerticalCS": {
  "data": {
   "shadows": "pyproj.crs.coordinate_system.VerticalCS"
  },
  "type": "import"
 },
 "pyproj.crs.crs.WktVersion": {
  "data": {
   "shadows": "pyproj.enums.WktVersion"
  },
  "type": "import"
 },
 "pyproj.crs.crs._CRS": {
  "data": {
   "shadows": "pyproj._crs._CRS"
  },
  "type": "import"
 },
 "pyproj.crs.crs._GEOGRAPHIC_GRID_MAPPING_NAME_MAP": {
  "data": {
   "shadows": "pyproj.crs._cf1x8._GEOGRAPHIC_GRID_MAPPING_NAME_MAP"
  },
  "type": "import"
 },
 "pyproj.crs.crs._GRID_MAPPING_NAME_MAP": {
  "data": {
   "shadows": "pyproj.crs._cf1x8._GRID_MAPPING_NAME_MAP"
  },
  "type": "import"
 },
 "pyproj.crs.crs._INVERSE_GEOGRAPHIC_GRID_MAPPING_NAME_MAP": {
  "data": {
   "shadows": "pyproj.crs._cf1x8._INVERSE_GEOGRAPHIC_GRID_MAPPING_NAME_MAP"
  },
  "type": "import"
 },
 "pyproj.crs.crs._INVERSE_GRID_MAPPING_NAME_MAP": {
  "data": {
   "shadows": "pyproj.crs._cf1x8._INVERSE_GRID_MAPPING_NAME_MAP"
  },
  "type": "import"
 },
 "pyproj.crs.crs._horizontal_datum_from_params": {
  "data": {
   "shadows": "pyproj.crs._cf1x8._horizontal_datum_from_params"
  },
  "type": "import"
 },
 "pyproj.crs.crs._load_proj_json": {
  "data": {
   "shadows": "pyproj._crs._load_proj_json"
  },
  "type": "import"
 },
 "pyproj.crs.crs._prepare_from_authority": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs._prepare_from_dict": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "bool",
    "dict",
    "isinstance",
    "list",
    "pyproj.crs.crs._prepare_from_string",
    "pyproj.crs.crs.json",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs._prepare_from_epsg": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "int",
    "pyproj.crs.crs._prepare_from_authority",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs._prepare_from_string": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "pyproj._crs.is_proj",
    "pyproj.crs.crs._prepare_from_dict",
    "pyproj.crs.crs.json",
    "pyproj.crs.crs.re",
    "pyproj.crs.crs.warnings",
    "pyproj.exceptions.CRSError",
    "str"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.crs._try_list_if_string": {
  "data": {
   "shadows": "pyproj.crs._cf1x8._try_list_if_string"
  },
  "type": "import"
 },
 "pyproj.crs.crs.is_proj": {
  "data": {
   "shadows": "pyproj._crs.is_proj"
  },
  "type": "import"
 },
 "pyproj.crs.crs.is_wkt": {
  "data": {
   "shadows": "pyproj._crs.is_wkt"
  },
  "type": "import"
 },
 "pyproj.crs.crs.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyproj.crs.crs.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyproj.crs.crs.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyproj.crs.datum": {
  "data": {},
  "type": "module"
 },
 "pyproj.crs.datum.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pyproj.crs.datum.CustomDatum": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "pyproj._crs.Datum"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.datum.CustomDatum.__new__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "pyproj._crs.Ellipsoid.from_user_input",
    "pyproj._crs.PrimeMeridian.from_user_input",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.datum.CustomEllipsoid": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "pyproj._crs.Ellipsoid"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.datum.CustomEllipsoid.__new__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "float",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.datum.CustomPrimeMeridian": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "pyproj._crs.PrimeMeridian"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.datum.CustomPrimeMeridian.__new__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "float",
    "str"
   ]
  },
  "type": "function"
 },
 "pyproj.crs.datum.Datum": {
  "data": {
   "shadows": "pyproj._crs.Datum"
  },
  "type": "import"
 },
 "pyproj.crs.datum.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "pyproj.crs.datum.Ellipsoid": {
  "data": {
   "shadows": "pyproj._crs.Ellipsoid"
  },
  "type": "import"
 },
 "pyproj.crs.datum.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pyproj.crs.datum.PrimeMeridian": {
  "data": {
   "shadows": "pyproj._crs.PrimeMeridian"
  },
  "type": "import"
 },
 "pyproj.crs.datum.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pyproj.crs.enums": {
  "data": {},
  "type": "module"
 },
 "pyproj.crs.enums.BaseEnum": {
  "data": {
   "shadows": "pyproj.enums.BaseEnum"
  },
  "type": "import"
 },
 "pyproj.crs.enums.Cartesian2DCSAxis": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "pyproj.enums.BaseEnum"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.enums.CoordinateOperationType": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pyproj.enums.BaseEnum"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.enums.DatumType": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "pyproj.enums.BaseEnum"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.enums.Ellipsoidal2DCSAxis": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "pyproj.enums.BaseEnum"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.enums.Ellipsoidal3DCSAxis": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "pyproj.enums.BaseEnum"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.enums.VerticalCSAxis": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "pyproj.enums.BaseEnum"
   ]
  },
  "type": "class"
 },
 "pyproj.crs.is_proj": {
  "data": {
   "shadows": "pyproj._crs.is_proj"
  },
  "type": "import"
 },
 "pyproj.crs.is_wkt": {
  "data": {
   "shadows": "pyproj._crs.is_wkt"
  },
  "type": "import"
 },
 "pyproj.datadir": {
  "data": {},
  "type": "module"
 },
 "pyproj.datadir.DataDirError": {
  "data": {
   "shadows": "pyproj.exceptions.DataDirError"
  },
  "type": "import"
 },
 "pyproj.datadir.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "pyproj.datadir.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pyproj.datadir._USER_PROJ_DATA": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pyproj.datadir._VALIDATED_PROJ_DATA": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pyproj.datadir._global_context_set_data_dir": {
  "data": {
   "shadows": "pyproj._datadir._global_context_set_data_dir"
  },
  "type": "import"
 },
 "pyproj.datadir.append_data_dir": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pathlib.Path",
    "pyproj.datadir.get_data_dir",
    "pyproj.datadir.os",
    "pyproj.datadir.set_data_dir",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pyproj.datadir.find_executable": {
  "data": {
   "shadows": "distutils.spawn.find_executable"
  },
  "type": "import"
 },
 "pyproj.datadir.get_data_dir": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "distutils.spawn.find_executable",
    "pathlib.Path",
    "pyproj.datadir._USER_PROJ_DATA",
    "pyproj.datadir._VALIDATED_PROJ_DATA",
    "pyproj.datadir.os",
    "pyproj.datadir.sys",
    "pyproj.exceptions.DataDirError",
    "str",
    "valid_data_dir",
    "valid_data_dirs"
   ]
  },
  "type": "function"
 },
 "pyproj.datadir.get_data_dir.valid_data_dir": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "pathlib.Path"
   ]
  },
  "type": "function"
 },
 "pyproj.datadir.get_data_dir.valid_data_dirs": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "pyproj.datadir.os",
    "valid_data_dir"
   ]
  },
  "type": "function"
 },
 "pyproj.datadir.get_user_data_dir": {
  "data": {
   "shadows": "pyproj._datadir.get_user_data_dir"
  },
  "type": "import"
 },
 "pyproj.datadir.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyproj.datadir.set_data_dir": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "pathlib.Path",
    "pyproj._datadir._global_context_set_data_dir",
    "pyproj.datadir._USER_PROJ_DATA",
    "pyproj.datadir._VALIDATED_PROJ_DATA",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pyproj.datadir.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyproj.enums": {
  "data": {},
  "type": "module"
 },
 "pyproj.enums.BaseEnum": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "pyproj.enums.BaseEnum.create": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "cls",
    "isinstance",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyproj.enums.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "pyproj.enums.PJType": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "pyproj.enums.BaseEnum"
   ]
  },
  "type": "class"
 },
 "pyproj.enums.ProjVersion": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "pyproj.enums.BaseEnum"
   ]
  },
  "type": "class"
 },
 "pyproj.enums.TransformDirection": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "pyproj.enums.BaseEnum"
   ]
  },
  "type": "class"
 },
 "pyproj.enums.WktVersion": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "pyproj.enums.BaseEnum"
   ]
  },
  "type": "class"
 },
 "pyproj.exceptions": {
  "data": {},
  "type": "module"
 },
 "pyproj.exceptions.CRSError": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "pyproj.exceptions.ProjError"
   ]
  },
  "type": "class"
 },
 "pyproj.exceptions.DataDirError": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "pyproj.exceptions.GeodError": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "pyproj.exceptions.ProjError": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "pyproj.exceptions.ProjError.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pyproj.exceptions.ProjError",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "pyproj.exceptions.ProjError.clear": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pyproj.exceptions.ProjError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyproj.geod": {
  "data": {
   "symbols_in_volume": [
    "pyproj.list.get_ellps_map"
   ]
  },
  "type": "module"
 },
 "pyproj.geod.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pyproj.geod.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "pyproj.geod.Geod": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "pyproj._geod.Geod"
   ]
  },
  "type": "class"
 },
 "pyproj.geod.Geod.__eq__": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "pyproj._geod.Geod",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pyproj.geod.Geod.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "dict",
    "float",
    "list",
    "pyproj.geod.math",
    "pyproj.geod.pj_ellps",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pyproj.geod.Geod.__repr__": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "pyproj.geod.pj_ellps",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "pyproj.geod.Geod.fwd": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "pyproj.utils._convertback",
    "pyproj.utils._copytobuffer",
    "typing.Any",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "pyproj.geod.Geod.geometry_area_perimeter": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "AttributeError",
    "NotImplementedError",
    "bool",
    "float",
    "hasattr",
    "pyproj.exceptions.GeodError",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "pyproj.geod.Geod.geometry_length": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "AttributeError",
    "NotImplementedError",
    "bool",
    "float",
    "hasattr",
    "pyproj.exceptions.GeodError"
   ]
  },
  "type": "function"
 },
 "pyproj.geod.Geod.inv": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "pyproj.utils._convertback",
    "pyproj.utils._copytobuffer",
    "typing.Any",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "pyproj.geod.Geod.line_length": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "bool",
    "float",
    "pyproj.utils._copytobuffer",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pyproj.geod.Geod.line_lengths": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "bool",
    "pyproj.utils._convertback",
    "pyproj.utils._copytobuffer",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pyproj.geod.Geod.npts": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "list",
    "super",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyproj.geod.Geod.polygon_area_perimeter": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "bool",
    "float",
    "pyproj.utils._copytobuffer",
    "typing.Any",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "pyproj.geod.GeodError": {
  "data": {
   "shadows": "pyproj.exceptions.GeodError"
  },
  "type": "import"
 },
 "pyproj.geod.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pyproj.geod.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pyproj.geod.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pyproj.geod.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pyproj.geod._Geod": {
  "data": {
   "shadows": "pyproj._geod.Geod"
  },
  "type": "import"
 },
 "pyproj.geod.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pyproj.geod._convertback": {
  "data": {
   "shadows": "pyproj.utils._convertback"
  },
  "type": "import"
 },
 "pyproj.geod._copytobuffer": {
  "data": {
   "shadows": "pyproj.utils._copytobuffer"
  },
  "type": "import"
 },
 "pyproj.geod.geodesic_version_str": {
  "data": {
   "shadows": "pyproj._geod.geodesic_version_str"
  },
  "type": "import"
 },
 "pyproj.geod.get_ellps_map": {
  "data": {
   "shadows": "pyproj.list.get_ellps_map"
  },
  "type": "import"
 },
 "pyproj.geod.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyproj.geod.pj_ellps": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pyproj.geodesic_version_str": {
  "data": {
   "shadows": "pyproj.geod.geodesic_version_str"
  },
  "type": "import"
 },
 "pyproj.get_authorities": {
  "data": {
   "shadows": "pyproj.database.get_authorities"
  },
  "type": "import"
 },
 "pyproj.get_codes": {
  "data": {
   "shadows": "pyproj.database.get_codes"
  },
  "type": "import"
 },
 "pyproj.get_ellps_map": {
  "data": {
   "shadows": "pyproj.list.get_ellps_map"
  },
  "type": "import"
 },
 "pyproj.get_prime_meridians_map": {
  "data": {
   "shadows": "pyproj.list.get_prime_meridians_map"
  },
  "type": "import"
 },
 "pyproj.get_proj_operations_map": {
  "data": {
   "shadows": "pyproj.list.get_proj_operations_map"
  },
  "type": "import"
 },
 "pyproj.get_units_map": {
  "data": {
   "shadows": "pyproj.database.get_units_map"
  },
  "type": "import"
 },
 "pyproj.itransform": {
  "data": {
   "shadows": "pyproj.transformer.itransform"
  },
  "type": "import"
 },
 "pyproj.network": {
  "data": {},
  "type": "module"
 },
 "pyproj.network.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "pyproj.network.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pyproj.network._set_ca_bundle_path": {
  "data": {
   "shadows": "pyproj._network._set_ca_bundle_path"
  },
  "type": "import"
 },
 "pyproj.network.certifi": {
  "data": {
   "shadows": "certifi"
  },
  "type": "import"
 },
 "pyproj.network.is_network_enabled": {
  "data": {
   "shadows": "pyproj._network.is_network_enabled"
  },
  "type": "import"
 },
 "pyproj.network.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyproj.network.set_ca_bundle_path": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "any",
    "bool",
    "isinstance",
    "pathlib.Path",
    "pyproj._network._set_ca_bundle_path",
    "pyproj.network.certifi",
    "pyproj.network.os",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pyproj.network.set_network_enabled": {
  "data": {
   "shadows": "pyproj._network.set_network_enabled"
  },
  "type": "import"
 },
 "pyproj.pj_ellps": {
  "data": {
   "shadows": "pyproj.geod.pj_ellps"
  },
  "type": "import"
 },
 "pyproj.pj_list": {
  "data": {
   "shadows": "pyproj.proj.pj_list"
  },
  "type": "import"
 },
 "pyproj.proj": {
  "data": {
   "symbols_in_volume": [
    "pyproj.list.get_proj_operations_map"
   ]
  },
  "type": "module"
 },
 "pyproj.proj.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pyproj.proj.CRS": {
  "data": {
   "shadows": "pyproj.crs.CRS"
  },
  "type": "import"
 },
 "pyproj.proj.Factors": {
  "data": {
   "shadows": "pyproj._transformer.Factors"
  },
  "type": "import"
 },
 "pyproj.proj.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pyproj.proj.Proj": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pyproj.transformer.Transformer"
   ]
  },
  "type": "class"
 },
 "pyproj.proj.Proj.__call__": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "bool",
    "pyproj.enums.TransformDirection.FORWARD",
    "pyproj.enums.TransformDirection.INVERSE",
    "typing.Any",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "pyproj.proj.Proj.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "UserWarning",
    "bool",
    "pyproj._transformer._Transformer.from_pipeline",
    "pyproj.compat.cstrencode",
    "pyproj.crs.CRS",
    "pyproj.crs.CRS.from_user_input",
    "pyproj.proj.re",
    "pyproj.proj.warnings",
    "super",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pyproj.proj.Proj.__reduce__": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "str",
    "typing.Tuple",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pyproj.proj.Proj.definition_string": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "pyproj.compat.pystrdecode",
    "str"
   ]
  },
  "type": "function"
 },
 "pyproj.proj.Proj.get_factors": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "bool",
    "pyproj._transformer.Factors",
    "pyproj.utils._convertback",
    "pyproj.utils._copytobuffer",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pyproj.proj.Proj.to_latlong": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "pyproj.proj.Proj"
   ]
  },
  "type": "function"
 },
 "pyproj.proj.Proj.to_latlong_def": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pyproj.proj.TransformDirection": {
  "data": {
   "shadows": "pyproj.enums.TransformDirection"
  },
  "type": "import"
 },
 "pyproj.proj.Transformer": {
  "data": {
   "shadows": "pyproj.transformer.Transformer"
  },
  "type": "import"
 },
 "pyproj.proj.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pyproj.proj.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "pyproj.proj._Transformer": {
  "data": {
   "shadows": "pyproj._transformer._Transformer"
  },
  "type": "import"
 },
 "pyproj.proj._convertback": {
  "data": {
   "shadows": "pyproj.utils._convertback"
  },
  "type": "import"
 },
 "pyproj.proj._copytobuffer": {
  "data": {
   "shadows": "pyproj.utils._copytobuffer"
  },
  "type": "import"
 },
 "pyproj.proj.cstrencode": {
  "data": {
   "shadows": "pyproj.compat.cstrencode"
  },
  "type": "import"
 },
 "pyproj.proj.get_proj_operations_map": {
  "data": {
   "shadows": "pyproj.list.get_proj_operations_map"
  },
  "type": "import"
 },
 "pyproj.proj.pj_list": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyproj.proj.pystrdecode": {
  "data": {
   "shadows": "pyproj.compat.pystrdecode"
  },
  "type": "import"
 },
 "pyproj.proj.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyproj.proj.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyproj.proj_version_str": {
  "data": {
   "shadows": "pyproj.transformer.proj_version_str"
  },
  "type": "import"
 },
 "pyproj.pyproj.network": {
  "data": {
   "shadows": "pyproj.network"
  },
  "type": "import"
 },
 "pyproj.set_use_global_context": {
  "data": {
   "shadows": "pyproj._datadir.set_use_global_context"
  },
  "type": "import"
 },
 "pyproj.show_versions": {
  "data": {
   "shadows": "pyproj._show_versions.show_versions"
  },
  "type": "import"
 },
 "pyproj.sync": {
  "data": {},
  "type": "module"
 },
 "pyproj.sync.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pyproj.sync.BBox": {
  "data": {
   "shadows": "pyproj.aoi.BBox"
  },
  "type": "import"
 },
 "pyproj.sync.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "pyproj.sync.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pyproj.sync.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pyproj.sync.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "pyproj.sync.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pyproj.sync._bbox_from_coords": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError",
    "max",
    "min",
    "pyproj.aoi.BBox",
    "typing.List",
    "typing.Optional",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyproj.sync._bbox_from_geom": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "max",
    "min",
    "pyproj.aoi.BBox",
    "pyproj.sync._bbox_from_coords",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pyproj.sync._download_resource_file": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "FileNotFoundError",
    "RuntimeError",
    "pathlib.Path",
    "print",
    "pyproj.sync._sha256sum",
    "pyproj.sync.os",
    "urllib.request.urlretrieve"
   ]
  },
  "type": "function"
 },
 "pyproj.sync._filter_bbox": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "bool",
    "float",
    "getattr",
    "pyproj.aoi.BBox",
    "pyproj.sync._bbox_from_geom",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "pyproj.sync._filter_download_needed": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "bool",
    "pyproj.sync._is_download_needed",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "pyproj.sync._filter_properties": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pyproj.sync._is_download_needed": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "bool",
    "pathlib.Path",
    "pyproj.datadir.get_data_dir",
    "pyproj.datadir.get_user_data_dir",
    "pyproj.sync.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyproj.sync._load_grid_geojson": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "datetime.datetime.fromtimestamp",
    "datetime.datetime.utcnow",
    "pathlib.Path",
    "pyproj._sync.get_proj_endpoint",
    "pyproj.datadir.get_user_data_dir",
    "pyproj.sync._download_resource_file",
    "pyproj.sync.json",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "pyproj.sync._sha256sum": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "iter",
    "open",
    "pyproj.sync.hashlib"
   ]
  },
  "type": "function"
 },
 "pyproj.sync.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pyproj.sync.get_data_dir": {
  "data": {
   "shadows": "pyproj.datadir.get_data_dir"
  },
  "type": "import"
 },
 "pyproj.sync.get_proj_endpoint": {
  "data": {
   "shadows": "pyproj._sync.get_proj_endpoint"
  },
  "type": "import"
 },
 "pyproj.sync.get_transform_grid_list": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "abs",
    "bool",
    "filter",
    "functools.partial",
    "pyproj.aoi.BBox",
    "pyproj.sync._filter_bbox",
    "pyproj.sync._filter_download_needed",
    "pyproj.sync._filter_properties",
    "pyproj.sync._load_grid_geojson",
    "str",
    "tuple",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "pyproj.sync.get_user_data_dir": {
  "data": {
   "shadows": "pyproj.datadir.get_user_data_dir"
  },
  "type": "import"
 },
 "pyproj.sync.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "pyproj.sync.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyproj.sync.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyproj.sync.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "pyproj.sync.urlretrieve": {
  "data": {
   "shadows": "urllib.request.urlretrieve"
  },
  "type": "import"
 },
 "pyproj.transform": {
  "data": {
   "shadows": "pyproj.transformer.transform"
  },
  "type": "import"
 },
 "pyproj.transformer": {
  "data": {},
  "type": "module"
 },
 "pyproj.transformer.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pyproj.transformer.AreaOfInterest": {
  "data": {
   "shadows": "pyproj._transformer.AreaOfInterest"
  },
  "type": "import"
 },
 "pyproj.transformer.AreaOfUse": {
  "data": {
   "shadows": "pyproj._crs.AreaOfUse"
  },
  "type": "import"
 },
 "pyproj.transformer.CRS": {
  "data": {
   "shadows": "pyproj.CRS"
  },
  "type": "import"
 },
 "pyproj.transformer.CoordinateOperation": {
  "data": {
   "shadows": "pyproj._crs.CoordinateOperation"
  },
  "type": "import"
 },
 "pyproj.transformer.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "pyproj.transformer.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "pyproj.transformer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pyproj.transformer.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pyproj.transformer.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "pyproj.transformer.Proj": {
  "data": {
   "shadows": "pyproj.Proj"
  },
  "type": "import"
 },
 "pyproj.transformer.ProjError": {
  "data": {
   "shadows": "pyproj.exceptions.ProjError"
  },
  "type": "import"
 },
 "pyproj.transformer.TransformDirection": {
  "data": {
   "shadows": "pyproj.enums.TransformDirection"
  },
  "type": "import"
 },
 "pyproj.transformer.Transformer": {
  "data": {
   "lineno": 166
  },
  "type": "class"
 },
 "pyproj.transformer.Transformer.__eq__": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "pyproj.transformer.Transformer",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pyproj.transformer.Transformer.__init__": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "isinstance",
    "pyproj._transformer._Transformer",
    "pyproj.exceptions.ProjError",
    "pyproj.exceptions.ProjError.clear",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pyproj.transformer.Transformer.__repr__": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pyproj.transformer.Transformer.__str__": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pyproj.transformer.Transformer.accuracy": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "pyproj.transformer.Transformer.area_of_use": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "property",
    "pyproj._crs.AreaOfUse"
   ]
  },
  "type": "function"
 },
 "pyproj.transformer.Transformer.definition": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "pyproj.transformer.Transformer.description": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "pyproj.transformer.Transformer.from_crs": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "bool",
    "pyproj.CRS.from_user_input",
    "pyproj._transformer.AreaOfInterest",
    "pyproj._transformer._Transformer.from_crs",
    "pyproj.transformer.Transformer",
    "staticmethod",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pyproj.transformer.Transformer.from_pipeline": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "pyproj._transformer._Transformer.from_pipeline",
    "pyproj.compat.cstrencode",
    "pyproj.transformer.Transformer",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "pyproj.transformer.Transformer.from_proj": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "pyproj.Proj",
    "pyproj._transformer.AreaOfInterest",
    "pyproj.transformer.Transformer",
    "staticmethod",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pyproj.transformer.Transformer.has_inverse": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "pyproj.transformer.Transformer.is_exact_same": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "pyproj.transformer.Transformer",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pyproj.transformer.Transformer.is_network_enabled": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "pyproj.transformer.Transformer.itransform": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "StopIteration",
    "ValueError",
    "array.array",
    "bool",
    "iter",
    "itertools.chain",
    "itertools.islice",
    "len",
    "next",
    "pyproj.enums.TransformDirection",
    "pyproj.enums.TransformDirection.FORWARD",
    "range",
    "str",
    "typing.Any",
    "typing.Iterable",
    "typing.Iterator",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyproj.transformer.Transformer.name": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "pyproj.transformer.Transformer.operations": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "property",
    "pyproj._crs.CoordinateOperation",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "pyproj.transformer.Transformer.remarks": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "pyproj.transformer.Transformer.scope": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "pyproj.transformer.Transformer.to_json": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "bool",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "pyproj.transformer.Transformer.to_json_dict": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "pyproj.transformer.Transformer.to_wkt": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "bool",
    "pyproj.enums.WktVersion",
    "pyproj.enums.WktVersion.WKT2_2019",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pyproj.transformer.Transformer.transform": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "bool",
    "pyproj.enums.TransformDirection",
    "pyproj.enums.TransformDirection.FORWARD",
    "pyproj.utils._convertback",
    "pyproj.utils._copytobuffer",
    "str",
    "typing.Any",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pyproj.transformer.TransformerGroup": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "pyproj._transformer._TransformerGroup"
   ]
  },
  "type": "class"
 },
 "pyproj.transformer.TransformerGroup.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "bool",
    "enumerate",
    "pyproj.CRS.from_user_input",
    "pyproj._transformer.AreaOfInterest",
    "pyproj.transformer.Transformer",
    "super",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pyproj.transformer.TransformerGroup.__repr__": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "pyproj.transformer.TransformerGroup.best_available": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "pyproj.transformer.TransformerGroup.download_grids": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "bool",
    "pathlib.Path",
    "pyproj.datadir.get_user_data_dir",
    "pyproj.sync._download_resource_file",
    "pyproj.transformer.warnings",
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pyproj.transformer.TransformerGroup.transformers": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "property",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "pyproj.transformer.TransformerGroup.unavailable_operations": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "property",
    "pyproj._crs.CoordinateOperation",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "pyproj.transformer.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pyproj.transformer.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pyproj.transformer.WktVersion": {
  "data": {
   "shadows": "pyproj.enums.WktVersion"
  },
  "type": "import"
 },
 "pyproj.transformer._Transformer": {
  "data": {
   "shadows": "pyproj._transformer._Transformer"
  },
  "type": "import"
 },
 "pyproj.transformer._TransformerGroup": {
  "data": {
   "shadows": "pyproj._transformer._TransformerGroup"
  },
  "type": "import"
 },
 "pyproj.transformer.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "pyproj.transformer._convertback": {
  "data": {
   "shadows": "pyproj.utils._convertback"
  },
  "type": "import"
 },
 "pyproj.transformer._copytobuffer": {
  "data": {
   "shadows": "pyproj.utils._copytobuffer"
  },
  "type": "import"
 },
 "pyproj.transformer._download_resource_file": {
  "data": {
   "shadows": "pyproj.sync._download_resource_file"
  },
  "type": "import"
 },
 "pyproj.transformer.array": {
  "data": {
   "shadows": "array.array"
  },
  "type": "import"
 },
 "pyproj.transformer.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "pyproj.transformer.cstrencode": {
  "data": {
   "shadows": "pyproj.compat.cstrencode"
  },
  "type": "import"
 },
 "pyproj.transformer.get_user_data_dir": {
  "data": {
   "shadows": "pyproj.datadir.get_user_data_dir"
  },
  "type": "import"
 },
 "pyproj.transformer.islice": {
  "data": {
   "shadows": "itertools.islice"
  },
  "type": "import"
 },
 "pyproj.transformer.itransform": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "DeprecationWarning",
    "bool",
    "pyproj.transformer.Transformer",
    "pyproj.transformer.warnings",
    "typing.Any",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "pyproj.transformer.proj_version_str": {
  "data": {
   "shadows": "pyproj._transformer.proj_version_str"
  },
  "type": "import"
 },
 "pyproj.transformer.transform": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "DeprecationWarning",
    "bool",
    "pyproj.transformer.Transformer",
    "pyproj.transformer.warnings",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pyproj.transformer.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyproj.utils": {
  "data": {},
  "type": "module"
 },
 "pyproj.utils.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pyproj.utils.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pyproj.utils._convertback": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "bool",
    "tuple",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pyproj.utils._copytobuffer": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "array.array",
    "bool",
    "callable",
    "hasattr",
    "list",
    "pyproj.utils._copytobuffer_return_scalar",
    "tuple",
    "type",
    "typing.Any",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "pyproj.utils._copytobuffer_return_scalar": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "array.array",
    "bool",
    "float",
    "typing.Any",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "pyproj.utils.array": {
  "data": {
   "shadows": "array.array"
  },
  "type": "import"
 },
 "pyproj.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test": {
  "data": {},
  "type": "module"
 },
 "test.conftest": {
  "data": {
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "test.conftest.pyproj"
   ]
  },
  "type": "module"
 },
 "test.conftest.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "test.conftest.PROJ_GTE_8": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "test.conftest.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "test.conftest._NETWORK_ENABLED": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "test.conftest.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "test.conftest.get_data_dir": {
  "data": {
   "shadows": "pyproj.datadir.get_data_dir"
  },
  "type": "import"
 },
 "test.conftest.get_user_data_dir": {
  "data": {
   "shadows": "pyproj.datadir.get_user_data_dir"
  },
  "type": "import"
 },
 "test.conftest.get_wgs84_datum_name": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "test.conftest.PROJ_GTE_8"
   ]
  },
  "type": "function"
 },
 "test.conftest.grids_available": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "all",
    "any",
    "pathlib.Path",
    "pyproj.datadir.get_data_dir",
    "pyproj.datadir.get_user_data_dir",
    "test.conftest.os"
   ]
  },
  "type": "function"
 },
 "test.conftest.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.conftest.proj_env": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "pyproj.datadir.get_data_dir",
    "pyproj.datadir.set_data_dir",
    "test.conftest.unset_data_dir"
   ]
  },
  "type": "function"
 },
 "test.conftest.proj_network_env": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "test.conftest._NETWORK_ENABLED",
    "test.conftest.pyproj"
   ]
  },
  "type": "function"
 },
 "test.conftest.pyproj": {
  "data": {
   "shadows": "pyproj"
  },
  "type": "import"
 },
 "test.conftest.set_data_dir": {
  "data": {
   "shadows": "pyproj.datadir.set_data_dir"
  },
  "type": "import"
 },
 "test.conftest.tmp_chdir": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "test.conftest.os"
   ]
  },
  "type": "function"
 },
 "test.conftest.unset_data_dir": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "test.conftest.pyproj"
   ]
  },
  "type": "function"
 },
 "test.test_aoi": {
  "data": {},
  "type": "module"
 },
 "test.test_aoi.AreaOfInterest": {
  "data": {
   "shadows": "pyproj.transformer.AreaOfInterest"
  },
  "type": "import"
 },
 "test.test_aoi.BBox": {
  "data": {
   "shadows": "pyproj.aoi.BBox"
  },
  "type": "import"
 },
 "test.test_aoi.test_backwards_compatible_import_paths": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "test.test_aoi.test_contains": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "pyproj.aoi.BBox"
   ]
  },
  "type": "function"
 },
 "test.test_aoi.test_intersects": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pyproj.aoi.BBox"
   ]
  },
  "type": "function"
 },
 "test.test_aoi.test_not_contains": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pyproj.aoi.BBox"
   ]
  },
  "type": "function"
 },
 "test.test_aoi.test_not_intersects": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "pyproj.aoi.BBox"
   ]
  },
  "type": "function"
 },
 "test.test_awips221": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "test.test_awips221.Proj": {
  "data": {
   "shadows": "pyproj.Proj"
  },
  "type": "import"
 },
 "test.test_awips221.__proj_version__": {
  "data": {
   "shadows": "pyproj.__proj_version__"
  },
  "type": "import"
 },
 "test.test_awips221.array": {
  "data": {
   "shadows": "array"
  },
  "type": "import"
 },
 "test.test_awips221.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "test.test_awips221.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.test_awips221.perf_counter": {
  "data": {
   "shadows": "time.clock"
  },
  "type": "import"
 },
 "test.test_awips221.test_awips221": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "awips221",
    "max",
    "min",
    "numpy.testing.assert_allclose",
    "print",
    "pyproj.Proj",
    "pyproj.__proj_version__",
    "test.test_awips221.array",
    "test.test_awips221.numpy",
    "time.clock"
   ]
  },
  "type": "function"
 },
 "test.test_cli": {
  "data": {
   "symbols_in_volume": [
    "test.test_cli.pytest",
    "test.test_cli.sys"
   ]
  },
  "type": "module"
 },
 "test.test_cli.PYPROJ_CLI_ENDPONTS": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "test.test_cli.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "test.test_cli._check_list_files_header": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "test.test_cli._load_grid_geojson": {
  "data": {
   "shadows": "pyproj.sync._load_grid_geojson"
  },
  "type": "import"
 },
 "test.test_cli.append_data_dir": {
  "data": {
   "shadows": "pyproj.datadir.append_data_dir"
  },
  "type": "import"
 },
 "test.test_cli.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "test.test_cli.get_data_dir": {
  "data": {
   "shadows": "pyproj.datadir.get_data_dir"
  },
  "type": "import"
 },
 "test.test_cli.get_user_data_dir": {
  "data": {
   "shadows": "pyproj.datadir.get_user_data_dir"
  },
  "type": "import"
 },
 "test.test_cli.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "test.test_cli.grids_available": {
  "data": {
   "shadows": "test.conftest.grids_available"
  },
  "type": "import"
 },
 "test.test_cli.main": {
  "data": {
   "shadows": "pyproj.__main__.main"
  },
  "type": "import"
 },
 "test.test_cli.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.test_cli.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "test.test_cli.proj_env": {
  "data": {
   "shadows": "test.conftest.proj_env"
  },
  "type": "import"
 },
 "test.test_cli.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.test_cli.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "test.test_cli.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "test.test_cli.test_main": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "str",
    "test.conftest.tmp_chdir",
    "test.test_cli.PYPROJ_CLI_ENDPONTS",
    "test.test_cli.pytest",
    "test.test_cli.subprocess"
   ]
  },
  "type": "function"
 },
 "test.test_cli.test_main__verbose": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "str",
    "test.conftest.tmp_chdir",
    "test.test_cli.PYPROJ_CLI_ENDPONTS",
    "test.test_cli.pytest",
    "test.test_cli.subprocess"
   ]
  },
  "type": "function"
 },
 "test.test_cli.test_sync": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "str",
    "test.conftest.tmp_chdir",
    "test.test_cli.PYPROJ_CLI_ENDPONTS",
    "test.test_cli.pytest",
    "test.test_cli.subprocess"
   ]
  },
  "type": "function"
 },
 "test.test_cli.test_sync__all__exclusive_error": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "str",
    "test.conftest.tmp_chdir",
    "test.test_cli.PYPROJ_CLI_ENDPONTS",
    "test.test_cli.pytest",
    "test.test_cli.subprocess"
   ]
  },
  "type": "function"
 },
 "test.test_cli.test_sync__area_of_use__list": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "len",
    "str",
    "test.conftest.tmp_chdir",
    "test.test_cli.PYPROJ_CLI_ENDPONTS",
    "test.test_cli._check_list_files_header",
    "test.test_cli.pytest",
    "test.test_cli.subprocess"
   ]
  },
  "type": "function"
 },
 "test.test_cli.test_sync__bbox__list": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "len",
    "str",
    "test.conftest.tmp_chdir",
    "test.test_cli.PYPROJ_CLI_ENDPONTS",
    "test.test_cli._check_list_files_header",
    "test.test_cli.pytest",
    "test.test_cli.subprocess"
   ]
  },
  "type": "function"
 },
 "test.test_cli.test_sync__bbox__list__exclude_world_coverage": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "len",
    "str",
    "test.conftest.tmp_chdir",
    "test.test_cli.PYPROJ_CLI_ENDPONTS",
    "test.test_cli._check_list_files_header",
    "test.test_cli.pytest",
    "test.test_cli.subprocess"
   ]
  },
  "type": "function"
 },
 "test.test_cli.test_sync__download_grids": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "glob.glob",
    "pathlib.Path",
    "pyproj.__main__.main",
    "pyproj.datadir.append_data_dir",
    "sorted",
    "str",
    "test.conftest.grids_available",
    "test.conftest.proj_env",
    "test.test_cli.argparse",
    "test.test_cli.pytest",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "test.test_cli.test_sync__file__list": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "len",
    "str",
    "test.conftest.tmp_chdir",
    "test.test_cli.PYPROJ_CLI_ENDPONTS",
    "test.test_cli._check_list_files_header",
    "test.test_cli.pytest",
    "test.test_cli.subprocess"
   ]
  },
  "type": "function"
 },
 "test.test_cli.test_sync__source_id__list": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "len",
    "str",
    "test.conftest.tmp_chdir",
    "test.test_cli.PYPROJ_CLI_ENDPONTS",
    "test.test_cli._check_list_files_header",
    "test.test_cli.pytest",
    "test.test_cli.subprocess"
   ]
  },
  "type": "function"
 },
 "test.test_cli.test_sync_download": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "pyproj.__main__.main",
    "pyproj.datadir.get_user_data_dir",
    "test.test_cli.argparse",
    "test.test_cli.pytest",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "test.test_cli.test_sync_download__directory": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "pyproj.__main__.main",
    "pyproj.sync._load_grid_geojson",
    "test.test_cli.argparse",
    "test.test_cli.pytest",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "test.test_cli.test_sync_download__system_directory": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "pyproj.__main__.main",
    "pyproj.datadir.get_data_dir",
    "pyproj.sync._load_grid_geojson",
    "test.test_cli.argparse",
    "test.test_cli.os",
    "test.test_cli.pytest",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "test.test_cli.tmp_chdir": {
  "data": {
   "shadows": "test.conftest.tmp_chdir"
  },
  "type": "import"
 },
 "test.test_database": {
  "data": {},
  "type": "module"
 },
 "test.test_database.AreaOfInterest": {
  "data": {
   "shadows": "pyproj.aoi.AreaOfInterest"
  },
  "type": "import"
 },
 "test.test_database.BBox": {
  "data": {
   "shadows": "pyproj.aoi.BBox"
  },
  "type": "import"
 },
 "test.test_database.PJType": {
  "data": {
   "shadows": "pyproj.enums.PJType"
  },
  "type": "import"
 },
 "test.test_database.Unit": {
  "data": {
   "shadows": "pyproj.database.Unit"
  },
  "type": "import"
 },
 "test.test_database.get_authorities": {
  "data": {
   "shadows": "pyproj.get_authorities"
  },
  "type": "import"
 },
 "test.test_database.get_codes": {
  "data": {
   "shadows": "pyproj.get_codes"
  },
  "type": "import"
 },
 "test.test_database.get_units_map": {
  "data": {
   "shadows": "pyproj.get_units_map"
  },
  "type": "import"
 },
 "test.test_database.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.test_database.query_crs_info": {
  "data": {
   "shadows": "pyproj.database.query_crs_info"
  },
  "type": "import"
 },
 "test.test_database.query_utm_crs_info": {
  "data": {
   "shadows": "pyproj.database.query_utm_crs_info"
  },
  "type": "import"
 },
 "test.test_database.test_backwards_compatible_import_paths": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "test.test_database.test_get_authorities": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "pyproj.get_authorities"
   ]
  },
  "type": "function"
 },
 "test.test_database.test_get_codes": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "pyproj.enums.PJType.CRS",
    "pyproj.enums.PJType.ELLIPSOID",
    "pyproj.get_codes",
    "test.test_database.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_database.test_get_codes__empty": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "pyproj.enums.PJType.BOUND_CRS",
    "pyproj.get_codes",
    "test.test_database.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_database.test_get_codes__invalid_auth": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "TypeError",
    "pyproj.enums.PJType.BOUND_CRS",
    "pyproj.get_codes",
    "test.test_database.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_database.test_get_codes__invalid_code": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "ValueError",
    "pyproj.get_codes",
    "test.test_database.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_database.test_query_crs_info": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "any",
    "pyproj.database.query_crs_info",
    "pyproj.enums.PJType.GEOGRAPHIC_2D_CRS",
    "pyproj.enums.PJType.GEOGRAPHIC_3D_CRS",
    "pyproj.enums.PJType.PROJECTED_CRS",
    "test.test_database.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_database.test_query_crs_info__aoi": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "pyproj.aoi.AreaOfInterest",
    "pyproj.aoi.BBox",
    "pyproj.database.query_crs_info",
    "pyproj.enums.PJType.PROJECTED_CRS"
   ]
  },
  "type": "function"
 },
 "test.test_database.test_query_crs_info__aoi_contains": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "pyproj.aoi.AreaOfInterest",
    "pyproj.aoi.BBox",
    "pyproj.database.query_crs_info",
    "pyproj.enums.PJType.PROJECTED_CRS"
   ]
  },
  "type": "function"
 },
 "test.test_database.test_query_crs_info__empty": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "pyproj.database.query_crs_info",
    "pyproj.enums.PJType.BOUND_CRS",
    "pyproj.enums.PJType.ELLIPSOID",
    "test.test_database.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_database.test_query_crs_info__invalid_auth": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "TypeError",
    "pyproj.database.query_crs_info",
    "pyproj.enums.PJType.BOUND_CRS",
    "test.test_database.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_database.test_query_crs_info__invalid_code": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "ValueError",
    "pyproj.database.query_crs_info",
    "test.test_database.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_database.test_query_utm_crs_info__aoi_contains": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "pyproj.aoi.AreaOfInterest",
    "pyproj.aoi.BBox",
    "pyproj.database.query_utm_crs_info",
    "pyproj.enums.PJType.PROJECTED_CRS"
   ]
  },
  "type": "function"
 },
 "test.test_database.test_query_utm_crs_info__aoi_datum_name": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "len",
    "pyproj.aoi.AreaOfInterest",
    "pyproj.aoi.BBox",
    "pyproj.database.query_utm_crs_info",
    "pyproj.enums.PJType.PROJECTED_CRS",
    "test.test_database.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_database.test_units_map__auth_name": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "len",
    "pyproj.get_units_map",
    "test.test_database.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_database.test_units_map__category": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "len",
    "pyproj.get_units_map",
    "test.test_database.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_database.test_units_map__default": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "isinstance",
    "pyproj.database.Unit",
    "pyproj.get_units_map"
   ]
  },
  "type": "function"
 },
 "test.test_database.test_units_map__deprecated": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "len",
    "pyproj.get_units_map",
    "test.test_database.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_database.test_units_map__invalid": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "TypeError",
    "pyproj.get_units_map",
    "test.test_database.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_datadir": {
  "data": {
   "symbols_in_volume": [
    "pathlib.Path"
   ]
  },
  "type": "module"
 },
 "test.test_datadir.CRS": {
  "data": {
   "shadows": "pyproj.CRS"
  },
  "type": "import"
 },
 "test.test_datadir.CRSError": {
  "data": {
   "shadows": "pyproj.exceptions.CRSError"
  },
  "type": "import"
 },
 "test.test_datadir.DataDirError": {
  "data": {
   "shadows": "pyproj.datadir.DataDirError"
  },
  "type": "import"
 },
 "test.test_datadir.PJType": {
  "data": {
   "shadows": "pyproj.enums.PJType"
  },
  "type": "import"
 },
 "test.test_datadir.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "test.test_datadir.Transformer": {
  "data": {
   "shadows": "pyproj.Transformer"
  },
  "type": "import"
 },
 "test.test_datadir._INVALID_PATH": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "test.test_datadir._pyproj_global_context_initialize": {
  "data": {
   "shadows": "pyproj._datadir._pyproj_global_context_initialize"
  },
  "type": "import"
 },
 "test.test_datadir.append_data_dir": {
  "data": {
   "shadows": "pyproj.datadir.append_data_dir"
  },
  "type": "import"
 },
 "test.test_datadir.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "test.test_datadir.create_projdb": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "pathlib.Path"
   ]
  },
  "type": "function"
 },
 "test.test_datadir.get_codes": {
  "data": {
   "shadows": "pyproj.get_codes"
  },
  "type": "import"
 },
 "test.test_datadir.get_data_dir": {
  "data": {
   "shadows": "pyproj.datadir.get_data_dir"
  },
  "type": "import"
 },
 "test.test_datadir.get_user_data_dir": {
  "data": {
   "shadows": "pyproj.datadir.get_user_data_dir"
  },
  "type": "import"
 },
 "test.test_datadir.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "test.test_datadir.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.test_datadir.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "test.test_datadir.proj_context_env": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "test.test_datadir.proj_env": {
  "data": {
   "shadows": "test.conftest.proj_env"
  },
  "type": "import"
 },
 "test.test_datadir.proj_logging_env": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "test.test_datadir.logging"
   ]
  },
  "type": "function"
 },
 "test.test_datadir.pyproj._datadir": {
  "data": {
   "shadows": "pyproj._datadir"
  },
  "type": "import"
 },
 "test.test_datadir.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.test_datadir.set_data_dir": {
  "data": {
   "shadows": "pyproj.datadir.set_data_dir"
  },
  "type": "import"
 },
 "test.test_datadir.set_use_global_context": {
  "data": {
   "shadows": "pyproj.set_use_global_context"
  },
  "type": "import"
 },
 "test.test_datadir.test_append_data_dir__internal": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "pathlib.Path",
    "projdir_type",
    "pyproj.datadir.append_data_dir",
    "pyproj.datadir.get_data_dir",
    "str",
    "test.conftest.proj_env",
    "test.test_datadir._INVALID_PATH",
    "test.test_datadir.create_projdb",
    "test.test_datadir.os",
    "test.test_datadir.pytest",
    "unittest.mock.patch",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "test.test_datadir.test_creating_multiple_crs_without_file_limit": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "pyproj.CRS.from_epsg",
    "pyproj.enums.PJType.PROJECTED_CRS",
    "pyproj.get_codes",
    "test.test_datadir.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_datadir.test_get_data_dir__from_env_var": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "pyproj.datadir.get_data_dir",
    "str",
    "test.conftest.proj_env",
    "test.test_datadir._INVALID_PATH",
    "test.test_datadir.create_projdb",
    "test.test_datadir.os",
    "unittest.mock.patch",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "test.test_datadir.test_get_data_dir__from_env_var__multiple": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "pyproj.datadir.get_data_dir",
    "range",
    "str",
    "test.conftest.proj_env",
    "test.test_datadir._INVALID_PATH",
    "test.test_datadir.create_projdb",
    "test.test_datadir.os",
    "unittest.mock.patch",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "test.test_datadir.test_get_data_dir__from_path": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "pyproj.datadir.get_data_dir",
    "str",
    "test.conftest.proj_env",
    "test.test_datadir._INVALID_PATH",
    "test.test_datadir.create_projdb",
    "test.test_datadir.os",
    "unittest.mock.patch",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "test.test_datadir.test_get_data_dir__from_prefix": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "pyproj.datadir.get_data_dir",
    "str",
    "test.conftest.proj_env",
    "test.test_datadir._INVALID_PATH",
    "test.test_datadir.create_projdb",
    "test.test_datadir.os",
    "unittest.mock.patch",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "test.test_datadir.test_get_data_dir__from_user": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "pathlib.Path",
    "projdir_type",
    "pyproj.datadir.get_data_dir",
    "pyproj.datadir.set_data_dir",
    "str",
    "test.conftest.proj_env",
    "test.test_datadir.create_projdb",
    "test.test_datadir.os",
    "test.test_datadir.pytest",
    "unittest.mock.patch",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "test.test_datadir.test_get_data_dir__internal": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "pyproj.datadir.get_data_dir",
    "str",
    "test.conftest.proj_env",
    "test.test_datadir.create_projdb",
    "test.test_datadir.os",
    "unittest.mock.patch",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "test.test_datadir.test_get_data_dir__missing": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "pyproj.datadir.DataDirError",
    "pyproj.datadir.get_data_dir",
    "str",
    "test.conftest.proj_env",
    "test.test_datadir._INVALID_PATH",
    "test.test_datadir.os",
    "test.test_datadir.pytest",
    "unittest.mock.patch",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "test.test_datadir.test_get_user_data_dir": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "pyproj.datadir.get_user_data_dir"
   ]
  },
  "type": "function"
 },
 "test.test_datadir.test_proj_debug_logging": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "FutureWarning",
    "pyproj.Transformer.from_proj",
    "test.test_datadir.os",
    "test.test_datadir.proj_logging_env",
    "test.test_datadir.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_datadir.test_proj_debug_logging__error": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "pyproj.CRS",
    "pyproj.exceptions.CRSError",
    "test.test_datadir.os",
    "test.test_datadir.proj_logging_env",
    "test.test_datadir.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_datadir.test_pyproj_global_context_initialize__datadir_missing": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "pyproj._datadir._pyproj_global_context_initialize",
    "pyproj.datadir.DataDirError",
    "test.conftest.proj_env",
    "test.test_datadir.pytest",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "test.test_datadir.test_set_use_global_context__default": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "pyproj.set_use_global_context",
    "test.test_datadir.proj_context_env",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "test.test_datadir.test_set_use_global_context__default_off": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "pyproj.set_use_global_context",
    "test.test_datadir.proj_context_env",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "test.test_datadir.test_set_use_global_context__default_on": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "pyproj.set_use_global_context",
    "test.test_datadir.proj_context_env",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "test.test_datadir.test_set_use_global_context__off": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "pyproj.set_use_global_context",
    "test.test_datadir.proj_context_env",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "test.test_datadir.test_set_use_global_context__on": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "pyproj.set_use_global_context",
    "test.test_datadir.proj_context_env",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "test.test_datum": {
  "data": {},
  "type": "module"
 },
 "test.test_datum.CRS": {
  "data": {
   "shadows": "pyproj.CRS"
  },
  "type": "import"
 },
 "test.test_datum.Proj": {
  "data": {
   "shadows": "pyproj.Proj"
  },
  "type": "import"
 },
 "test.test_datum.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "test.test_datum.grids_available": {
  "data": {
   "shadows": "test.conftest.grids_available"
  },
  "type": "import"
 },
 "test.test_datum.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.test_datum.test_datum": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.testing.assert_almost_equal",
    "proj_class",
    "pyproj.CRS",
    "pyproj.Proj",
    "pyproj.transform",
    "test.conftest.grids_available",
    "test.test_datum.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_datum.transform": {
  "data": {
   "shadows": "pyproj.transform"
  },
  "type": "import"
 },
 "test.test_datum_shift": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "pyproj.Proj",
    "test.test_datum_shift.pytest"
   ]
  },
  "type": "module"
 },
 "test.test_datum_shift.GAUSSSB_PROJ": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "test.test_datum_shift.GB_x": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "test.test_datum_shift.GB_y": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "test.test_datum_shift.Proj": {
  "data": {
   "shadows": "pyproj.Proj"
  },
  "type": "import"
 },
 "test.test_datum_shift.UTM_33_PROJ": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "test.test_datum_shift.UTM_x": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "test.test_datum_shift.UTM_y": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "test.test_datum_shift.WGS84_PROJ": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "test.test_datum_shift.WGS84_lat": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "test.test_datum_shift.WGS84_lon": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "test.test_datum_shift.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "test.test_datum_shift.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.test_datum_shift.test_shift_gaussb_to_wgs84_no_ellisoidal_height": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.testing.assert_almost_equal",
    "pyproj.transform",
    "test.test_datum_shift.GAUSSSB_PROJ",
    "test.test_datum_shift.GB_x",
    "test.test_datum_shift.GB_y",
    "test.test_datum_shift.WGS84_PROJ",
    "test.test_datum_shift.WGS84_lat",
    "test.test_datum_shift.WGS84_lon",
    "test.test_datum_shift.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_datum_shift.test_shift_utm33_to_wgs84": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.testing.assert_almost_equal",
    "pyproj.transform",
    "test.test_datum_shift.UTM_33_PROJ",
    "test.test_datum_shift.UTM_x",
    "test.test_datum_shift.UTM_y",
    "test.test_datum_shift.WGS84_PROJ",
    "test.test_datum_shift.WGS84_lat",
    "test.test_datum_shift.WGS84_lon",
    "test.test_datum_shift.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_datum_shift.test_shift_wgs84_to_gaussb_no_ellisoidal_height": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.testing.assert_almost_equal",
    "pyproj.transform",
    "test.test_datum_shift.GAUSSSB_PROJ",
    "test.test_datum_shift.GB_x",
    "test.test_datum_shift.WGS84_PROJ",
    "test.test_datum_shift.WGS84_lat",
    "test.test_datum_shift.WGS84_lon",
    "test.test_datum_shift.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_datum_shift.test_shift_wgs84_to_utm33": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.testing.assert_almost_equal",
    "pyproj.transform",
    "test.test_datum_shift.UTM_33_PROJ",
    "test.test_datum_shift.UTM_x",
    "test.test_datum_shift.UTM_y",
    "test.test_datum_shift.WGS84_PROJ",
    "test.test_datum_shift.WGS84_lat",
    "test.test_datum_shift.WGS84_lon",
    "test.test_datum_shift.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_datum_shift.transform": {
  "data": {
   "shadows": "pyproj.transform"
  },
  "type": "import"
 },
 "test.test_doctest_wrapper": {
  "data": {},
  "type": "module"
 },
 "test.test_doctest_wrapper.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "test.test_doctest_wrapper.proj_network_env": {
  "data": {
   "shadows": "test.conftest.proj_network_env"
  },
  "type": "import"
 },
 "test.test_doctest_wrapper.pyproj": {
  "data": {
   "shadows": "pyproj"
  },
  "type": "import"
 },
 "test.test_doctest_wrapper.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.test_doctest_wrapper.shapely": {
  "data": {
   "shadows": "shapely"
  },
  "type": "import"
 },
 "test.test_doctest_wrapper.test_doctests": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ImportError",
    "UserWarning",
    "test.test_doctest_wrapper.doctest",
    "test.test_doctest_wrapper.pyproj",
    "test.test_doctest_wrapper.warnings"
   ]
  },
  "type": "function"
 },
 "test.test_doctest_wrapper.test_doctests__network": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "DeprecationWarning",
    "test.conftest.proj_network_env",
    "test.test_doctest_wrapper.doctest",
    "test.test_doctest_wrapper.pyproj",
    "test.test_doctest_wrapper.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_doctest_wrapper.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.test_exception_logging": {
  "data": {},
  "type": "module"
 },
 "test.test_exception_logging.CRS": {
  "data": {
   "shadows": "pyproj.CRS"
  },
  "type": "import"
 },
 "test.test_exception_logging.CRSError": {
  "data": {
   "shadows": "pyproj.exceptions.CRSError"
  },
  "type": "import"
 },
 "test.test_exception_logging.Proj": {
  "data": {
   "shadows": "pyproj.Proj"
  },
  "type": "import"
 },
 "test.test_exception_logging.ProjError": {
  "data": {
   "shadows": "pyproj.exceptions.ProjError"
  },
  "type": "import"
 },
 "test.test_exception_logging.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.test_exception_logging.test_crs_exception": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pyproj.CRS",
    "pyproj.exceptions.CRSError",
    "test.test_exception_logging.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_exception_logging.test_proj_exception": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "pyproj.Proj",
    "pyproj.exceptions.ProjError",
    "test.test_exception_logging.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_geod": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "test.test_geod.SHAPELY_LOADED",
    "test.test_geod.pytest"
   ]
  },
  "type": "module"
 },
 "test.test_geod.Geod": {
  "data": {
   "shadows": "pyproj.Geod"
  },
  "type": "import"
 },
 "test.test_geod.LineString": {
  "data": {
   "shadows": "shapely.geometry.LineString"
  },
  "type": "import"
 },
 "test.test_geod.LinearRing": {
  "data": {
   "shadows": "shapely.geometry.LinearRing"
  },
  "type": "import"
 },
 "test.test_geod.MultiLineString": {
  "data": {
   "shadows": "shapely.geometry.MultiLineString"
  },
  "type": "import"
 },
 "test.test_geod.MultiPoint": {
  "data": {
   "shadows": "shapely.geometry.MultiPoint"
  },
  "type": "import"
 },
 "test.test_geod.MultiPolygon": {
  "data": {
   "shadows": "shapely.geometry.MultiPolygon"
  },
  "type": "import"
 },
 "test.test_geod.Point": {
  "data": {
   "shadows": "shapely.geometry.Point"
  },
  "type": "import"
 },
 "test.test_geod.Polygon": {
  "data": {
   "shadows": "shapely.geometry.Polygon"
  },
  "type": "import"
 },
 "test.test_geod.SHAPELY_LOADED": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "test.test_geod.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "test.test_geod.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "test.test_geod.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.test_geod.orient": {
  "data": {
   "shadows": "shapely.geometry.polygon.orient"
  },
  "type": "import"
 },
 "test.test_geod.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.test_geod.permutations": {
  "data": {
   "shadows": "itertools.permutations"
  },
  "type": "import"
 },
 "test.test_geod.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "test.test_geod.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.test_geod.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "test.test_geod.skip_shapely": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "test.test_geod.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "test.test_geod.temporary_directory": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "test.test_geod.shutil",
    "test.test_geod.tempfile"
   ]
  },
  "type": "function"
 },
 "test.test_geod.test_geod_cities": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "open",
    "print",
    "pyproj.Geod",
    "test.test_geod.os",
    "test.test_geod.pickle",
    "test.test_geod.temporary_directory"
   ]
  },
  "type": "function"
 },
 "test.test_geod.test_geod_fwd_honours_input_types": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "isinstance",
    "itertools.permutations",
    "pyproj.Geod",
    "test.test_geod.pytest",
    "type"
   ]
  },
  "type": "function"
 },
 "test.test_geod.test_geod_inv_honours_input_types": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "isinstance",
    "itertools.permutations",
    "pyproj.Geod",
    "test.test_geod.pytest",
    "type"
   ]
  },
  "type": "function"
 },
 "test.test_geod.test_geod_inverse_transform": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "print",
    "pyproj.Geod",
    "zip"
   ]
  },
  "type": "function"
 },
 "test.test_geod.test_geometry_area_perimeter__linearring": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyproj.Geod",
    "shapely.geometry.LineString",
    "shapely.geometry.LinearRing",
    "shapely.geometry.Point",
    "test.test_geod.skip_shapely"
   ]
  },
  "type": "function"
 },
 "test.test_geod.test_geometry_area_perimeter__linestring": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyproj.Geod",
    "shapely.geometry.LineString",
    "shapely.geometry.Point",
    "test.test_geod.skip_shapely"
   ]
  },
  "type": "function"
 },
 "test.test_geod.test_geometry_area_perimeter__linestring__radians": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyproj.Geod",
    "shapely.geometry.LineString",
    "shapely.geometry.Point",
    "test.test_geod.math",
    "test.test_geod.skip_shapely"
   ]
  },
  "type": "function"
 },
 "test.test_geod.test_geometry_area_perimeter__multilinestring": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyproj.Geod",
    "shapely.geometry.LineString",
    "shapely.geometry.MultiLineString",
    "shapely.geometry.Point",
    "test.test_geod.skip_shapely"
   ]
  },
  "type": "function"
 },
 "test.test_geod.test_geometry_area_perimeter__multipoint": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "pyproj.Geod",
    "shapely.geometry.MultiPoint",
    "shapely.geometry.Point",
    "test.test_geod.skip_shapely"
   ]
  },
  "type": "function"
 },
 "test.test_geod.test_geometry_area_perimeter__multipolygon": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyproj.Geod",
    "shapely.geometry.LineString",
    "shapely.geometry.MultiPolygon",
    "shapely.geometry.Point",
    "shapely.geometry.Polygon",
    "test.test_geod.skip_shapely"
   ]
  },
  "type": "function"
 },
 "test.test_geod.test_geometry_area_perimeter__multipolygon__radians": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyproj.Geod",
    "shapely.geometry.LineString",
    "shapely.geometry.MultiPolygon",
    "shapely.geometry.Point",
    "shapely.geometry.Polygon",
    "test.test_geod.math",
    "test.test_geod.skip_shapely"
   ]
  },
  "type": "function"
 },
 "test.test_geod.test_geometry_area_perimeter__point": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "pyproj.Geod",
    "shapely.geometry.Point",
    "test.test_geod.skip_shapely"
   ]
  },
  "type": "function"
 },
 "test.test_geod.test_geometry_area_perimeter__polygon": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyproj.Geod",
    "shapely.geometry.LineString",
    "shapely.geometry.Point",
    "shapely.geometry.Polygon",
    "test.test_geod.skip_shapely"
   ]
  },
  "type": "function"
 },
 "test.test_geod.test_geometry_area_perimeter__polygon__holes": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyproj.Geod",
    "shapely.geometry.LineString",
    "shapely.geometry.Point",
    "shapely.geometry.Polygon",
    "shapely.geometry.polygon.orient",
    "test.test_geod.skip_shapely"
   ]
  },
  "type": "function"
 },
 "test.test_geod.test_geometry_area_perimeter__polygon__radians": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyproj.Geod",
    "shapely.geometry.LineString",
    "shapely.geometry.Point",
    "shapely.geometry.Polygon",
    "test.test_geod.math",
    "test.test_geod.skip_shapely"
   ]
  },
  "type": "function"
 },
 "test.test_geod.test_geometry_length__linearring": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyproj.Geod",
    "shapely.geometry.LineString",
    "shapely.geometry.LinearRing",
    "shapely.geometry.Point",
    "test.test_geod.skip_shapely"
   ]
  },
  "type": "function"
 },
 "test.test_geod.test_geometry_length__linestring": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyproj.Geod",
    "shapely.geometry.LineString",
    "shapely.geometry.Point",
    "test.test_geod.skip_shapely"
   ]
  },
  "type": "function"
 },
 "test.test_geod.test_geometry_length__linestring__radians": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyproj.Geod",
    "shapely.geometry.LineString",
    "shapely.geometry.Point",
    "test.test_geod.math",
    "test.test_geod.skip_shapely"
   ]
  },
  "type": "function"
 },
 "test.test_geod.test_geometry_length__multilinestring": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyproj.Geod",
    "shapely.geometry.LineString",
    "shapely.geometry.MultiLineString",
    "shapely.geometry.Point",
    "test.test_geod.skip_shapely"
   ]
  },
  "type": "function"
 },
 "test.test_geod.test_geometry_length__multipoint": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "pyproj.Geod",
    "shapely.geometry.MultiPoint",
    "shapely.geometry.Point",
    "test.test_geod.skip_shapely"
   ]
  },
  "type": "function"
 },
 "test.test_geod.test_geometry_length__multipolygon": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyproj.Geod",
    "shapely.geometry.LineString",
    "shapely.geometry.MultiPolygon",
    "shapely.geometry.Point",
    "shapely.geometry.Polygon",
    "test.test_geod.skip_shapely"
   ]
  },
  "type": "function"
 },
 "test.test_geod.test_geometry_length__multipolygon__radians": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyproj.Geod",
    "shapely.geometry.LineString",
    "shapely.geometry.MultiPolygon",
    "shapely.geometry.Point",
    "shapely.geometry.Polygon",
    "test.test_geod.math",
    "test.test_geod.skip_shapely"
   ]
  },
  "type": "function"
 },
 "test.test_geod.test_geometry_length__point": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "pyproj.Geod",
    "shapely.geometry.Point",
    "test.test_geod.skip_shapely"
   ]
  },
  "type": "function"
 },
 "test.test_geod.test_geometry_length__polygon": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyproj.Geod",
    "shapely.geometry.LineString",
    "shapely.geometry.Point",
    "shapely.geometry.Polygon",
    "test.test_geod.skip_shapely"
   ]
  },
  "type": "function"
 },
 "test.test_geod.test_geometry_length__polygon__radians": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyproj.Geod",
    "shapely.geometry.LineString",
    "shapely.geometry.Point",
    "shapely.geometry.Polygon",
    "test.test_geod.math",
    "test.test_geod.skip_shapely"
   ]
  },
  "type": "function"
 },
 "test.test_geod.test_line_length__radians": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyproj.Geod"
   ]
  },
  "type": "function"
 },
 "test.test_geod.test_line_length__single_point": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "pyproj.Geod"
   ]
  },
  "type": "function"
 },
 "test.test_geod.test_line_lengths__radians": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyproj.Geod"
   ]
  },
  "type": "function"
 },
 "test.test_geod.test_line_lengths__single_point": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "pyproj.Geod"
   ]
  },
  "type": "function"
 },
 "test.test_geod.test_polygon_area_perimeter__single_point": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "pyproj.Geod"
   ]
  },
  "type": "function"
 },
 "test.test_list": {
  "data": {},
  "type": "module"
 },
 "test.test_list.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "test.test_list.get_ellps_map": {
  "data": {
   "shadows": "pyproj.get_ellps_map"
  },
  "type": "import"
 },
 "test.test_list.get_prime_meridians_map": {
  "data": {
   "shadows": "pyproj.get_prime_meridians_map"
  },
  "type": "import"
 },
 "test.test_list.get_proj_operations_map": {
  "data": {
   "shadows": "pyproj.get_proj_operations_map"
  },
  "type": "import"
 },
 "test.test_list.test_backwards_compatible_import_paths": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "test.test_list.test_get_ellps_map": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyproj.get_ellps_map"
   ]
  },
  "type": "function"
 },
 "test.test_list.test_get_prime_meridians_map": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pyproj.get_prime_meridians_map"
   ]
  },
  "type": "function"
 },
 "test.test_list.test_get_proj_operations_map": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pyproj.get_proj_operations_map"
   ]
  },
  "type": "function"
 },
 "test.test_network": {
  "data": {},
  "type": "module"
 },
 "test.test_network.certifi": {
  "data": {
   "shadows": "certifi"
  },
  "type": "import"
 },
 "test.test_network.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "test.test_network.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.test_network.set_ca_bundle_path": {
  "data": {
   "shadows": "pyproj.network.set_ca_bundle_path"
  },
  "type": "import"
 },
 "test.test_network.test_ca_bundle_path__always_certifi": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pyproj.network.set_ca_bundle_path",
    "test.test_network.certifi",
    "test.test_network.pytest",
    "unittest.mock.patch",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "test.test_network.test_ca_bundle_path__custom_path": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "pyproj.network.set_ca_bundle_path",
    "test.test_network.pytest",
    "unittest.mock.patch",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "test.test_network.test_ca_bundle_path__default": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "pyproj.network.set_ca_bundle_path",
    "test.test_network.certifi",
    "unittest.mock.patch",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "test.test_network.test_ca_bundle_path__env_var_skip": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pyproj.network.set_ca_bundle_path",
    "test.test_network.pytest",
    "unittest.mock.patch",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "test.test_network.test_ca_bundle_path__skip": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pyproj.network.set_ca_bundle_path",
    "unittest.mock.patch",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "test.test_pickle": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "test.test_pickle.Proj": {
  "data": {
   "shadows": "pyproj.Proj"
  },
  "type": "import"
 },
 "test.test_pickle.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "test.test_pickle.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "test.test_pickle.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.test_pickle.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.test_pickle.perf_counter": {
  "data": {
   "shadows": "time.clock"
  },
  "type": "import"
 },
 "test.test_pickle.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "test.test_pickle.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "test.test_pickle.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "test.test_pickle.temporary_directory": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "test.test_pickle.shutil",
    "test.test_pickle.tempfile"
   ]
  },
  "type": "function"
 },
 "test.test_pickle.test_pickle": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "awips221",
    "numpy.testing.assert_allclose",
    "open",
    "print",
    "pyproj.Proj",
    "test.test_pickle.numpy",
    "test.test_pickle.os",
    "test.test_pickle.pickle",
    "test.test_pickle.temporary_directory",
    "time.clock"
   ]
  },
  "type": "function"
 },
 "test.test_proj": {
  "data": {},
  "type": "module"
 },
 "test.test_proj.BasicTest": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "test.test_proj.unittest"
   ]
  },
  "type": "class"
 },
 "test.test_proj.BasicTest.testInitWithBackupString4": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pyproj.Proj"
   ]
  },
  "type": "function"
 },
 "test.test_proj.BasicTest.testProjAwips221": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "awips221",
    "pyproj.Proj",
    "sorted"
   ]
  },
  "type": "function"
 },
 "test.test_proj.BasicTest.test_from_dict_with_bool": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "pyproj.Proj"
   ]
  },
  "type": "function"
 },
 "test.test_proj.CRSError": {
  "data": {
   "shadows": "pyproj.exceptions.CRSError"
  },
  "type": "import"
 },
 "test.test_proj.ForwardInverseTest": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "test.test_proj.sys",
    "test.test_proj.unittest"
   ]
  },
  "type": "class"
 },
 "test.test_proj.ForwardInverseTest.test_fwd_inv": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "RuntimeError",
    "p",
    "pyproj.Proj",
    "pyproj.pj_list.keys"
   ]
  },
  "type": "function"
 },
 "test.test_proj.Geod": {
  "data": {
   "shadows": "pyproj.Geod"
  },
  "type": "import"
 },
 "test.test_proj.GeodSharedMemoryBugTestIssue64": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "test.test_proj.unittest"
   ]
  },
  "type": "class"
 },
 "test.test_proj.GeodSharedMemoryBugTestIssue64.setUp": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "pyproj.Geod"
   ]
  },
  "type": "function"
 },
 "test.test_proj.GeodSharedMemoryBugTestIssue64.test_distances": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "test.test_proj.GeodSharedMemoryBugTestIssue64.test_not_shared_memory": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "test.test_proj.Geod_NaN_Issue112_Test": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "test.test_proj.unittest"
   ]
  },
  "type": "class"
 },
 "test.test_proj.Geod_NaN_Issue112_Test.test_geod_nans": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "float",
    "pyproj.Geod"
   ]
  },
  "type": "function"
 },
 "test.test_proj.Geod_NoDefs_Issue22_Test": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "test.test_proj.unittest"
   ]
  },
  "type": "class"
 },
 "test.test_proj.Geod_NoDefs_Issue22_Test.test_geod_nodefs": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "pyproj.Geod"
   ]
  },
  "type": "function"
 },
 "test.test_proj.InverseHammerTest": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "test.test_proj.unittest"
   ]
  },
  "type": "class"
 },
 "test.test_proj.InverseHammerTest.setUpClass": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "classmethod",
    "pyproj.Proj"
   ]
  },
  "type": "function"
 },
 "test.test_proj.InverseHammerTest.test_forward": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "test.test_proj.InverseHammerTest.test_inverse": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "test.test_proj.Proj": {
  "data": {
   "shadows": "pyproj.Proj"
  },
  "type": "import"
 },
 "test.test_proj.ProjError": {
  "data": {
   "shadows": "pyproj.exceptions.ProjError"
  },
  "type": "import"
 },
 "test.test_proj.ProjLatLongTypeErrorTest": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "test.test_proj.unittest"
   ]
  },
  "type": "class"
 },
 "test.test_proj.ProjLatLongTypeErrorTest.test_latlong_typeerror": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "DeprecationWarning",
    "isinstance",
    "pyproj.Proj",
    "pyproj.transform",
    "test.test_proj.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_proj.ReprTests": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "test.test_proj.unittest"
   ]
  },
  "type": "class"
 },
 "test.test_proj.ReprTests.test_ellps_name_round_trip": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "p",
    "pyproj.Geod",
    "pyproj.pj_ellps",
    "repr"
   ]
  },
  "type": "function"
 },
 "test.test_proj.ReprTests.test_repr": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "p",
    "pyproj.Proj",
    "repr"
   ]
  },
  "type": "function"
 },
 "test.test_proj.ReprTests.test_sphere": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "pyproj.Geod",
    "repr"
   ]
  },
  "type": "function"
 },
 "test.test_proj.TestRadians": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "test.test_proj.unittest"
   ]
  },
  "type": "class"
 },
 "test.test_proj.TestRadians.setUp": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "pyproj.Geod",
    "test.test_proj.math"
   ]
  },
  "type": "function"
 },
 "test.test_proj.TestRadians.test_fwd_radians": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "test.test_proj.math"
   ]
  },
  "type": "function"
 },
 "test.test_proj.TestRadians.test_inv_radians": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "test.test_proj.math"
   ]
  },
  "type": "function"
 },
 "test.test_proj.TestRadians.test_npts_radians": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "enumerate",
    "test.test_proj.math"
   ]
  },
  "type": "function"
 },
 "test.test_proj.TypeError_Transform_Issue8_Test": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "test.test_proj.unittest"
   ]
  },
  "type": "class"
 },
 "test.test_proj.TypeError_Transform_Issue8_Test.setUp": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "FutureWarning",
    "pyproj.Proj",
    "test.test_proj.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_proj.TypeError_Transform_Issue8_Test.test_tranform_none_1st_parmeter": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "DeprecationWarning",
    "pyproj.exceptions.CRSError",
    "pyproj.transform",
    "test.test_proj.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_proj.TypeError_Transform_Issue8_Test.test_tranform_none_2nd_parmeter": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "DeprecationWarning",
    "pyproj.exceptions.CRSError",
    "pyproj.transform",
    "test.test_proj.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_proj.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "test.test_proj.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.test_proj.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.test_proj.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.test_proj.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "test.test_proj.pj_ellps": {
  "data": {
   "shadows": "pyproj.pj_ellps"
  },
  "type": "import"
 },
 "test.test_proj.pj_list": {
  "data": {
   "shadows": "pyproj.pj_list"
  },
  "type": "import"
 },
 "test.test_proj.proj_network_env": {
  "data": {
   "shadows": "test.conftest.proj_network_env"
  },
  "type": "import"
 },
 "test.test_proj.pyproj": {
  "data": {
   "shadows": "pyproj"
  },
  "type": "import"
 },
 "test.test_proj.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.test_proj.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "test.test_proj.test_equals_different_type": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "pyproj.Proj"
   ]
  },
  "type": "function"
 },
 "test.test_proj.test_get_factors": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyproj.Proj"
   ]
  },
  "type": "function"
 },
 "test.test_proj.test_get_factors__2d_input": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.radians",
    "numpy.testing.assert_almost_equal",
    "pyproj.Proj",
    "test.test_proj.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_proj.test_get_factors__errcheck": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "pyproj.Proj",
    "pyproj.exceptions.ProjError",
    "test.test_proj.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_proj.test_get_factors__nan_inf": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.nan",
    "numpy.testing.assert_almost_equal",
    "pyproj.Proj"
   ]
  },
  "type": "function"
 },
 "test.test_proj.test_initialize_proj_crs_no_plus": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "pyproj.Proj"
   ]
  },
  "type": "function"
 },
 "test.test_proj.test_initialize_proj_crs_no_proj4": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "pyproj.Proj"
   ]
  },
  "type": "function"
 },
 "test.test_proj.test_initialize_projparams_with_kwargs": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "pyproj.Proj"
   ]
  },
  "type": "function"
 },
 "test.test_proj.test_is_exact_same_different_type": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "pyproj.Proj"
   ]
  },
  "type": "function"
 },
 "test.test_proj.test_network__default": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "pyproj.Proj",
    "test.conftest.proj_network_env",
    "test.test_proj.os",
    "test.test_proj.pyproj"
   ]
  },
  "type": "function"
 },
 "test.test_proj.test_network__disable": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "pyproj.Proj",
    "test.conftest.proj_network_env",
    "test.test_proj.pyproj",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "test.test_proj.test_network__enable": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "pyproj.Proj",
    "test.conftest.proj_network_env",
    "test.test_proj.pyproj",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "test.test_proj.test_numpy_bool_kwarg_false": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "numpy.array",
    "proj",
    "proj.srs",
    "pyproj.Proj"
   ]
  },
  "type": "function"
 },
 "test.test_proj.test_numpy_bool_kwarg_true": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "numpy.array",
    "proj",
    "proj.srs",
    "pyproj.Proj"
   ]
  },
  "type": "function"
 },
 "test.test_proj.test_proj_equals": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "UserWarning",
    "pyproj.Proj",
    "test.test_proj.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_proj.test_radians": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "proj",
    "pyproj.Proj",
    "test.test_proj.math"
   ]
  },
  "type": "function"
 },
 "test.test_proj.test_reset_errno": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "proj",
    "pyproj.Proj"
   ]
  },
  "type": "function"
 },
 "test.test_proj.transform": {
  "data": {
   "shadows": "pyproj.transform"
  },
  "type": "import"
 },
 "test.test_proj.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.test_show_versions": {
  "data": {},
  "type": "module"
 },
 "test.test_show_versions._get_deps_info": {
  "data": {
   "shadows": "pyproj._show_versions._get_deps_info"
  },
  "type": "import"
 },
 "test.test_show_versions._get_proj_info": {
  "data": {
   "shadows": "pyproj._show_versions._get_proj_info"
  },
  "type": "import"
 },
 "test.test_show_versions._get_sys_info": {
  "data": {
   "shadows": "pyproj._show_versions._get_sys_info"
  },
  "type": "import"
 },
 "test.test_show_versions.show_versions": {
  "data": {
   "shadows": "pyproj._show_versions.show_versions"
  },
  "type": "import"
 },
 "test.test_show_versions.test_get_deps_info": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pyproj._show_versions._get_deps_info"
   ]
  },
  "type": "function"
 },
 "test.test_show_versions.test_get_proj_info": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "pyproj._show_versions._get_proj_info"
   ]
  },
  "type": "function"
 },
 "test.test_show_versions.test_get_sys_info": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pyproj._show_versions._get_sys_info"
   ]
  },
  "type": "function"
 },
 "test.test_show_versions.test_show_versions_with_proj": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pyproj._show_versions.show_versions"
   ]
  },
  "type": "function"
 },
 "test.test_sync": {
  "data": {},
  "type": "module"
 },
 "test.test_sync.BBox": {
  "data": {
   "shadows": "pyproj.aoi.BBox"
  },
  "type": "import"
 },
 "test.test_sync.MagicMock": {
  "data": {
   "shadows": "unittest.mock.MagicMock"
  },
  "type": "import"
 },
 "test.test_sync.URLError": {
  "data": {
   "shadows": "urllib.error.URLError"
  },
  "type": "import"
 },
 "test.test_sync._download_resource_file": {
  "data": {
   "shadows": "pyproj.sync._download_resource_file"
  },
  "type": "import"
 },
 "test.test_sync._load_grid_geojson": {
  "data": {
   "shadows": "pyproj.sync._load_grid_geojson"
  },
  "type": "import"
 },
 "test.test_sync._sha256sum": {
  "data": {
   "shadows": "pyproj.sync._sha256sum"
  },
  "type": "import"
 },
 "test.test_sync.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "test.test_sync.get_transform_grid_list": {
  "data": {
   "shadows": "pyproj.sync.get_transform_grid_list"
  },
  "type": "import"
 },
 "test.test_sync.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "test.test_sync.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.test_sync.test__load_grid_geojson_old_file": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "datetime.datetime.utcnow",
    "datetime.timedelta",
    "pyproj.sync._load_grid_geojson",
    "sorted",
    "test.test_sync.pytest",
    "unittest.mock.MagicMock",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "test.test_sync.test_download_resource_file": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "pyproj.sync._download_resource_file",
    "pyproj.sync._sha256sum",
    "test.test_sync.pytest",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "test.test_sync.test_download_resource_file.dummy_urlretrieve": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "test.test_sync.test_download_resource_file__bad_sha256sum": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "RuntimeError",
    "pyproj.sync._download_resource_file",
    "test.test_sync.pytest",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "test.test_sync.test_download_resource_file__bad_sha256sum.dummy_urlretrieve": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "test.test_sync.test_download_resource_file__exception": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "pyproj.sync._download_resource_file",
    "str",
    "test.test_sync.pytest",
    "unittest.mock.patch",
    "urllib.error.URLError"
   ]
  },
  "type": "function"
 },
 "test.test_sync.test_download_resource_file__exception.dummy_urlretrieve": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "urllib.error.URLError"
   ]
  },
  "type": "function"
 },
 "test.test_sync.test_download_resource_file__nosha256": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "pyproj.sync._download_resource_file",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "test.test_sync.test_download_resource_file__nosha256.dummy_urlretrieve": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "test.test_sync.test_get_transform_grid_list": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "len",
    "pyproj.sync.get_transform_grid_list",
    "test.test_sync.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_sync.test_get_transform_grid_list__area_of_use": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "len",
    "pyproj.sync.get_transform_grid_list",
    "test.test_sync.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_sync.test_get_transform_grid_list__bbox__antimeridian": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "len",
    "pyproj.aoi.BBox",
    "pyproj.sync.get_transform_grid_list",
    "set",
    "sorted",
    "test.test_sync.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_sync.test_get_transform_grid_list__bbox__out_of_bounds": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "len",
    "pyproj.aoi.BBox",
    "pyproj.sync.get_transform_grid_list",
    "set",
    "sorted",
    "test.test_sync.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_sync.test_get_transform_grid_list__contains": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "len",
    "pyproj.aoi.BBox",
    "pyproj.sync.get_transform_grid_list",
    "set",
    "sorted",
    "test.test_sync.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_sync.test_get_transform_grid_list__file": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "len",
    "pyproj.sync.get_transform_grid_list",
    "test.test_sync.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_sync.test_get_transform_grid_list__source_id": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "len",
    "pyproj.aoi.BBox",
    "pyproj.sync.get_transform_grid_list",
    "set",
    "sorted",
    "test.test_sync.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_sync.test_sha256sum": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "pyproj.sync._sha256sum"
   ]
  },
  "type": "function"
 },
 "test.test_sync.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "test.test_transform": {
  "data": {},
  "type": "module"
 },
 "test.test_transform.Proj": {
  "data": {
   "shadows": "pyproj.Proj"
  },
  "type": "import"
 },
 "test.test_transform.__proj_version__": {
  "data": {
   "shadows": "pyproj.__proj_version__"
  },
  "type": "import"
 },
 "test.test_transform.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "test.test_transform.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.test_transform.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.test_transform.test_skip_equivalent": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "DeprecationWarning",
    "pyproj.transform",
    "test.test_transform.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transform.test_transform": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "DeprecationWarning",
    "awips218",
    "awips221",
    "numpy.testing.assert_allclose",
    "print",
    "pyproj.Proj",
    "pyproj.__proj_version__",
    "pyproj.transform",
    "test.test_transform.numpy",
    "test.test_transform.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transform.transform": {
  "data": {
   "shadows": "pyproj.transform"
  },
  "type": "import"
 },
 "test.test_transformer": {
  "data": {},
  "type": "module"
 },
 "test.test_transformer.AreaOfInterest": {
  "data": {
   "shadows": "pyproj.transformer.AreaOfInterest"
  },
  "type": "import"
 },
 "test.test_transformer.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "test.test_transformer.Proj": {
  "data": {
   "shadows": "pyproj.Proj"
  },
  "type": "import"
 },
 "test.test_transformer.ProjError": {
  "data": {
   "shadows": "pyproj.exceptions.ProjError"
  },
  "type": "import"
 },
 "test.test_transformer.TransformDirection": {
  "data": {
   "shadows": "pyproj.enums.TransformDirection"
  },
  "type": "import"
 },
 "test.test_transformer.Transformer": {
  "data": {
   "shadows": "pyproj.Transformer"
  },
  "type": "import"
 },
 "test.test_transformer.TransformerGroup": {
  "data": {
   "shadows": "pyproj.transformer.TransformerGroup"
  },
  "type": "import"
 },
 "test.test_transformer.append_data_dir": {
  "data": {
   "shadows": "pyproj.datadir.append_data_dir"
  },
  "type": "import"
 },
 "test.test_transformer.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "test.test_transformer.call": {
  "data": {
   "shadows": "unittest.mock.call"
  },
  "type": "import"
 },
 "test.test_transformer.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "test.test_transformer.grids_available": {
  "data": {
   "shadows": "test.conftest.grids_available"
  },
  "type": "import"
 },
 "test.test_transformer.itransform": {
  "data": {
   "shadows": "pyproj.itransform"
  },
  "type": "import"
 },
 "test.test_transformer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.test_transformer.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.test_transformer.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "test.test_transformer.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "test.test_transformer.permutations": {
  "data": {
   "shadows": "itertools.permutations"
  },
  "type": "import"
 },
 "test.test_transformer.proj_env": {
  "data": {
   "shadows": "test.conftest.proj_env"
  },
  "type": "import"
 },
 "test.test_transformer.proj_network_env": {
  "data": {
   "shadows": "test.conftest.proj_network_env"
  },
  "type": "import"
 },
 "test.test_transformer.pyproj": {
  "data": {
   "shadows": "pyproj"
  },
  "type": "import"
 },
 "test.test_transformer.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.test_transformer.test_2d_with_time_itransform_original_crs_obs2": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "DeprecationWarning",
    "list",
    "numpy.testing.assert_almost_equal",
    "pyproj.itransform",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_2d_with_time_transform": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyproj.Transformer.from_pipeline"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_2d_with_time_transform_crs_obs2": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyproj.Transformer.from_proj"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_2d_with_time_transform_original_crs_obs2": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.testing.assert_almost_equal",
    "pyproj.transform",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_3d_time_itransform": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "list",
    "numpy.testing.assert_almost_equal",
    "pyproj.Transformer.from_pipeline"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_4d_itransform": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "list",
    "numpy.testing.assert_almost_equal",
    "pyproj.Transformer.from_pipeline"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_4d_itransform_orginal_crs_obs1": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "DeprecationWarning",
    "list",
    "numpy.testing.assert_almost_equal",
    "pyproj.itransform",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_4d_transform": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyproj.Transformer.from_pipeline"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_4d_transform__inverse": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyproj.Transformer.from_pipeline",
    "pyproj.enums.TransformDirection.INVERSE"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_4d_transform_crs_obs1": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyproj.Transformer.from_proj"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_4d_transform_crs_obs2": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyproj.Transformer.from_proj"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_4d_transform_orginal_crs_obs1": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.testing.assert_almost_equal",
    "pyproj.transform",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_always_xy__itransform": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "DeprecationWarning",
    "list",
    "numpy.testing.assert_almost_equal",
    "pyproj.itransform",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_always_xy__transform": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.testing.assert_almost_equal",
    "pyproj.transform",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_always_xy__transformer": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyproj.Transformer.from_crs"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_equivalent_crs": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "pyproj.Transformer.from_crs"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_equivalent_crs__different": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "pyproj.Transformer.from_crs"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_equivalent_crs__disabled": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "pyproj.Transformer.from_crs"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_equivalent_pipeline": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "pyproj.Transformer.from_pipeline"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_equivalent_proj": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "FutureWarning",
    "UserWarning",
    "pyproj.Transformer.from_proj",
    "test.test_transformer.pyproj",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_equivalent_proj__different": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "pyproj.Transformer.from_proj"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_equivalent_proj__disabled": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "UserWarning",
    "pyproj.Transformer.from_proj",
    "test.test_transformer.pyproj",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_from_pipeline__non_transform_input": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "pyproj.Transformer.from_pipeline",
    "pyproj.exceptions.ProjError",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_illegal_transformation": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "DeprecationWarning",
    "FutureWarning",
    "numpy.all",
    "numpy.isinf",
    "pyproj.exceptions.ProjError",
    "test.test_transformer.pyproj",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_itransform_no_error": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "DeprecationWarning",
    "FutureWarning",
    "list",
    "pj",
    "pyproj.Proj",
    "pyproj.itransform",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_itransform_pipeline_radians": {
  "data": {
   "lineno": 951,
   "symbols_in_volume": [
    "list",
    "numpy.testing.assert_almost_equal",
    "pyproj.Transformer.from_pipeline",
    "pyproj.enums.TransformDirection.INVERSE"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_itransform_radians": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "DeprecationWarning",
    "FutureWarning",
    "list",
    "numpy.testing.assert_almost_equal",
    "test.test_transformer.pyproj",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_itransform_time_3rd_invalid": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "list",
    "pyproj.itransform",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_lambert_conformal_transform": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "DeprecationWarning",
    "FutureWarning",
    "numpy.testing.assert_almost_equal",
    "test.test_transformer.pyproj",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_network__default": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "functools.partial",
    "pyproj.Transformer.from_crs",
    "pyproj.Transformer.from_pipeline",
    "pyproj.Transformer.from_proj",
    "test.conftest.proj_network_env",
    "test.test_transformer.os",
    "test.test_transformer.pyproj",
    "test.test_transformer.pytest",
    "transformer"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_network__disable": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "functools.partial",
    "pyproj.Transformer.from_crs",
    "pyproj.Transformer.from_pipeline",
    "pyproj.Transformer.from_proj",
    "test.conftest.proj_network_env",
    "test.test_transformer.pyproj",
    "test.test_transformer.pytest",
    "transformer",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_network__enable": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "functools.partial",
    "pyproj.Transformer.from_crs",
    "pyproj.Transformer.from_pipeline",
    "pyproj.Transformer.from_proj",
    "test.conftest.proj_network_env",
    "test.test_transformer.pyproj",
    "test.test_transformer.pytest",
    "transformer",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_non_supported_initialization": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "pyproj.Transformer",
    "pyproj.exceptions.ProjError",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_pipeline_itransform": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "list",
    "numpy.testing.assert_almost_equal",
    "pyproj.Transformer.from_pipeline",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_pipeline_transform": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyproj.Transformer.from_pipeline",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_pj_info_properties": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "pyproj.Transformer.from_crs"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_repr": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "pyproj.Transformer.from_crs",
    "repr",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_repr__conditional": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "pyproj.Transformer.from_crs",
    "repr",
    "test.conftest.grids_available",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_str": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "pyproj.Transformer.from_crs",
    "str"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_to_json": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "pyproj.Transformer.from_crs"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_to_json__pretty": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "pyproj.Transformer.from_crs"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_to_json__pretty__indenation": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "pyproj.Transformer.from_crs"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_to_json_dict": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "pyproj.Transformer.from_crs"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_to_wkt": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "pyproj.Transformer.from_crs"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_tranform_wgs84_to_custom": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "DeprecationWarning",
    "test.test_transformer.pyproj",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_transform__out_of_bounds": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "FutureWarning",
    "pyproj.Transformer.from_proj",
    "test.test_transformer.pyproj",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_transform_direction": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "pyproj.Transformer.from_crs",
    "pyproj.enums.TransformDirection.IDENT",
    "pyproj.enums.TransformDirection.INVERSE"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_transform_direction__invalid": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "ValueError",
    "pyproj.Transformer.from_crs",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_transform_direction__string": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "pyproj.Transformer.from_crs"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_transform_direction__string_lowercase": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "pyproj.Transformer.from_crs"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_transform_group__area_of_interest": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "UserWarning",
    "test.conftest.grids_available",
    "test.test_transformer.pyproj",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_transform_group__missing_best": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "FutureWarning",
    "UserWarning",
    "test.conftest.grids_available",
    "test.test_transformer.pyproj",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_transform_honours_input_types": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "itertools.permutations",
    "pyproj.Transformer.from_proj",
    "test.test_transformer.pytest",
    "transformer",
    "transformer.transform"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_transform_no_error": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "DeprecationWarning",
    "FutureWarning",
    "pj",
    "pyproj.Proj",
    "pyproj.transform",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_transform_no_exception": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "FutureWarning",
    "pyproj.Transformer.from_proj",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_transform_pipeline_radians": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyproj.Transformer.from_pipeline",
    "pyproj.enums.TransformDirection.INVERSE"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_transform_radians": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "DeprecationWarning",
    "FutureWarning",
    "numpy.testing.assert_almost_equal",
    "test.test_transformer.pyproj",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_transform_wgs84_to_alaska": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "DeprecationWarning",
    "FutureWarning",
    "test.conftest.grids_available",
    "test.test_transformer.pyproj",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_transformer__area_of_interest": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "pyproj.Transformer.from_crs",
    "pyproj.transformer.AreaOfInterest",
    "test.conftest.grids_available",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_transformer__area_of_interest__invalid": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "pyproj.Transformer.from_crs",
    "pyproj.exceptions.ProjError",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_transformer__operations": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "pyproj.transformer.TransformerGroup"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_transformer__operations__scope_remarks": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "pyproj.transformer.TransformerGroup",
    "str"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_transformer__operations_missing": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "pyproj.Transformer.from_crs"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_transformer_equals": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "pyproj.transformer.TransformerGroup"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_transformer_group": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "len",
    "pyproj.transformer.TransformerGroup"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_transformer_group__area_of_interest__invalid": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "pyproj.exceptions.ProjError",
    "pyproj.transformer.TransformerGroup",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_transformer_group__download_grids": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": [
    "glob.glob",
    "pathlib.Path",
    "pyproj.datadir.append_data_dir",
    "pyproj.transformer.TransformerGroup",
    "sorted",
    "str",
    "test.conftest.grids_available",
    "test.conftest.proj_env",
    "test.conftest.proj_network_env",
    "test.test_transformer.pyproj",
    "test.test_transformer.pytest",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_transformer_group__download_grids__directory": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "pyproj.transformer.TransformerGroup",
    "test.conftest.grids_available",
    "test.conftest.proj_network_env",
    "test.test_transformer.pyproj",
    "test.test_transformer.pytest",
    "unittest.mock.call",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_transformer_group__get_transform_crs": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "len",
    "pyproj.transformer.TransformerGroup",
    "test.conftest.grids_available",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_transformer_group__network_disabled": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "len",
    "pyproj.transformer.TransformerGroup",
    "test.conftest.grids_available",
    "test.conftest.proj_network_env",
    "test.test_transformer.pyproj",
    "test.test_transformer.pytest",
    "transformer",
    "transformer.is_network_enabled",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_transformer_group__network_enabled": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": [
    "len",
    "pyproj.transformer.TransformerGroup",
    "test.conftest.proj_network_env",
    "test.test_transformer.pyproj",
    "transformer",
    "transformer.is_network_enabled",
    "transformer.operations",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_transformer_group__unavailable": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "len",
    "pyproj.transformer.TransformerGroup",
    "test.conftest.grids_available",
    "test.test_transformer.os",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_transformer_not_equals": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "pyproj.Transformer.from_crs",
    "pyproj.Transformer.from_pipeline",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.test_transformer_proj__area_of_interest": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "pyproj.Transformer.from_proj",
    "pyproj.transformer.AreaOfInterest",
    "test.conftest.grids_available",
    "test.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_transformer.transform": {
  "data": {
   "shadows": "pyproj.transform"
  },
  "type": "import"
 },
 "test.test_utils": {
  "data": {},
  "type": "module"
 },
 "test.test_utils.DataArray": {
  "data": {
   "shadows": "xarray.DataArray"
  },
  "type": "import"
 },
 "test.test_utils.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "test.test_utils._copytobuffer": {
  "data": {
   "shadows": "pyproj.utils._copytobuffer"
  },
  "type": "import"
 },
 "test.test_utils._copytobuffer_return_scalar": {
  "data": {
   "shadows": "pyproj.utils._copytobuffer_return_scalar"
  },
  "type": "import"
 },
 "test.test_utils.array": {
  "data": {
   "shadows": "array.array"
  },
  "type": "import"
 },
 "test.test_utils.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.test_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "test.test_utils.test__copytobuffer": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "array.array",
    "pyproj.utils._copytobuffer",
    "test.test_utils.numpy",
    "test.test_utils.pytest",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "test.test_utils.test__copytobuffer__invalid": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "TypeError",
    "pyproj.utils._copytobuffer",
    "test.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_utils.test__copytobuffer__numpy_array": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pandas.Series",
    "pyproj.utils._copytobuffer",
    "test.test_utils.numpy",
    "test.test_utils.pytest",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "test.test_utils.test__copytobuffer_return_scalar": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "array.array",
    "pyproj.utils._copytobuffer_return_scalar",
    "test.test_utils.numpy",
    "test.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "test.test_utils.test__copytobuffer_return_scalar__invalid": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "TypeError",
    "pyproj.utils._copytobuffer_return_scalar",
    "test.test_utils.pytest"
   ]
  },
  "type": "function"
 }
}