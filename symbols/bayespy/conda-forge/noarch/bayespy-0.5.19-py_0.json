{
 "*": {
  "data": {
   "imports": [
    "bayespy.utils.misc"
   ]
  },
  "type": "star-import"
 },
 "bayespy": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "get_versions"
   ]
  },
  "type": "module"
 },
 "bayespy.__version__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "bayespy._meta": {
  "data": {},
  "type": "module"
 },
 "bayespy._meta.__author__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "bayespy._meta.__contact__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "bayespy._meta.__copyright__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "bayespy._meta.__license__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "bayespy._version": {
  "data": {},
  "type": "module"
 },
 "bayespy._version.get_versions": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "bayespy._version.json",
    "bayespy._version.version_json"
   ]
  },
  "type": "function"
 },
 "bayespy._version.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "bayespy._version.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "bayespy._version.version_json": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "bayespy.demos": {
  "data": {},
  "type": "module"
 },
 "bayespy.demos.annealing": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bayespy.demos.annealing.getopt",
    "bayespy.demos.annealing.kwargs",
    "bayespy.demos.annealing.run",
    "bayespy.demos.annealing.sys",
    "int",
    "matplotlib.pyplot.show",
    "print"
   ]
  },
  "type": "module"
 },
 "bayespy.demos.annealing.Categorical": {
  "data": {
   "shadows": "bayespy.nodes.Categorical"
  },
  "type": "import"
 },
 "bayespy.demos.annealing.GaussianARD": {
  "data": {
   "shadows": "bayespy.nodes.GaussianARD"
  },
  "type": "import"
 },
 "bayespy.demos.annealing.Mixture": {
  "data": {
   "shadows": "bayespy.nodes.Mixture"
  },
  "type": "import"
 },
 "bayespy.demos.annealing.VB": {
  "data": {
   "shadows": "bayespy.inference.vmp.vmp.VB"
  },
  "type": "import"
 },
 "bayespy.demos.annealing.bpplt": {
  "data": {
   "shadows": "bayespy.plot"
  },
  "type": "import"
 },
 "bayespy.demos.annealing.getopt": {
  "data": {
   "shadows": "getopt"
  },
  "type": "import"
 },
 "bayespy.demos.annealing.kwargs": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "bayespy.demos.annealing.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.demos.annealing.myplt": {
  "data": {
   "shadows": "bayespy.plot"
  },
  "type": "import"
 },
 "bayespy.demos.annealing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.demos.annealing.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "bayespy.demos.annealing.pca": {
  "data": {
   "shadows": "bayespy.demos.pca"
  },
  "type": "import"
 },
 "bayespy.demos.annealing.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "bayespy.demos.annealing.random": {
  "data": {
   "shadows": "bayespy.utils.random"
  },
  "type": "import"
 },
 "bayespy.demos.annealing.run": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "bayespy.inference.vmp.vmp.VB",
    "bayespy.nodes.Categorical",
    "bayespy.nodes.GaussianARD",
    "bayespy.nodes.Mixture",
    "min",
    "numpy.array",
    "numpy.empty",
    "numpy.random.seed",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.demos.annealing.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "bayespy.demos.annealing.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "bayespy.demos.annealing.transformations": {
  "data": {
   "shadows": "bayespy.inference.vmp.transformations"
  },
  "type": "import"
 },
 "bayespy.demos.black_box": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bayespy.demos.black_box.getopt",
    "bayespy.demos.black_box.kwargs",
    "bayespy.demos.black_box.run",
    "bayespy.demos.black_box.sys",
    "int",
    "matplotlib.pyplot.show",
    "print"
   ]
  },
  "type": "module"
 },
 "bayespy.demos.black_box.Dot": {
  "data": {
   "shadows": "bayespy.nodes.Dot"
  },
  "type": "import"
 },
 "bayespy.demos.black_box.GaussianARD": {
  "data": {
   "shadows": "bayespy.nodes.GaussianARD"
  },
  "type": "import"
 },
 "bayespy.demos.black_box.LogPDF": {
  "data": {
   "shadows": "bayespy.nodes.LogPDF"
  },
  "type": "import"
 },
 "bayespy.demos.black_box.VB": {
  "data": {
   "shadows": "bayespy.inference.vmp.vmp.VB"
  },
  "type": "import"
 },
 "bayespy.demos.black_box.bpplt": {
  "data": {
   "shadows": "bayespy.plot"
  },
  "type": "import"
 },
 "bayespy.demos.black_box.getopt": {
  "data": {
   "shadows": "getopt"
  },
  "type": "import"
 },
 "bayespy.demos.black_box.kwargs": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "bayespy.demos.black_box.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.demos.black_box.myplt": {
  "data": {
   "shadows": "bayespy.plot"
  },
  "type": "import"
 },
 "bayespy.demos.black_box.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.demos.black_box.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "bayespy.demos.black_box.pca": {
  "data": {
   "shadows": "bayespy.demos.pca"
  },
  "type": "import"
 },
 "bayespy.demos.black_box.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "bayespy.demos.black_box.random": {
  "data": {
   "shadows": "bayespy.utils.random"
  },
  "type": "import"
 },
 "bayespy.demos.black_box.run": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "NotImplementedError",
    "bayespy.inference.vmp.vmp.VB",
    "bayespy.nodes.Dot",
    "bayespy.nodes.GaussianARD",
    "bayespy.nodes.LogPDF",
    "bayespy.plot.pyplot.plot",
    "bayespy.plot.pyplot.xlabel",
    "bayespy.plot.pyplot.ylabel",
    "numpy.cumsum",
    "numpy.dot",
    "numpy.random.randn",
    "numpy.random.seed",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.demos.black_box.run.logpdf": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.logaddexp",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "bayespy.demos.black_box.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "bayespy.demos.black_box.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "bayespy.demos.black_box.transformations": {
  "data": {
   "shadows": "bayespy.inference.vmp.transformations"
  },
  "type": "import"
 },
 "bayespy.demos.categorical": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bayespy.demos.categorical.run"
   ]
  },
  "type": "module"
 },
 "bayespy.demos.categorical.VB": {
  "data": {
   "shadows": "bayespy.inference.vmp.vmp.VB"
  },
  "type": "import"
 },
 "bayespy.demos.categorical.nodes": {
  "data": {
   "shadows": "bayespy.nodes"
  },
  "type": "import"
 },
 "bayespy.demos.categorical.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.demos.categorical.random": {
  "data": {
   "shadows": "bayespy.utils.random"
  },
  "type": "import"
 },
 "bayespy.demos.categorical.run": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "bayespy.inference.vmp.vmp.VB",
    "bayespy.nodes.Categorical",
    "bayespy.nodes.Dirichlet",
    "bayespy.utils.random.mask",
    "numpy.ones",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "bayespy.demos.collapsed_cg": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bayespy.demos.collapsed_cg.mixture_of_gaussians"
   ]
  },
  "type": "module"
 },
 "bayespy.demos.collapsed_cg.Gamma": {
  "data": {
   "shadows": "bayespy.nodes.Gamma"
  },
  "type": "import"
 },
 "bayespy.demos.collapsed_cg.GaussianARD": {
  "data": {
   "shadows": "bayespy.nodes.GaussianARD"
  },
  "type": "import"
 },
 "bayespy.demos.collapsed_cg.SumMultiply": {
  "data": {
   "shadows": "bayespy.nodes.SumMultiply"
  },
  "type": "import"
 },
 "bayespy.demos.collapsed_cg.VB": {
  "data": {
   "shadows": "bayespy.inference.vmp.vmp.VB"
  },
  "type": "import"
 },
 "bayespy.demos.collapsed_cg.bpplt": {
  "data": {
   "shadows": "bayespy.plot"
  },
  "type": "import"
 },
 "bayespy.demos.collapsed_cg.mixture_of_gaussians": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "bayespy.demos.mog.gaussianmix_model",
    "bayespy.plot.pyplot.legend",
    "bayespy.plot.pyplot.plot",
    "bayespy.plot.pyplot.show",
    "bayespy.plot.pyplot.xlabel",
    "bayespy.plot.pyplot.ylabel",
    "bayespy.utils.random.categorical",
    "numpy.array",
    "numpy.cumsum",
    "numpy.empty",
    "numpy.ones",
    "numpy.random.randn",
    "numpy.random.seed",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.demos.collapsed_cg.mog": {
  "data": {
   "shadows": "bayespy.demos.mog"
  },
  "type": "import"
 },
 "bayespy.demos.collapsed_cg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.demos.collapsed_cg.pca": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "bayespy.inference.vmp.vmp.VB",
    "bayespy.nodes.Gamma",
    "bayespy.nodes.GaussianARD",
    "bayespy.nodes.SumMultiply",
    "bayespy.plot.pyplot.plot",
    "bayespy.plot.pyplot.show",
    "numpy.cumsum",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "bayespy.demos.collapsed_cg.random": {
  "data": {
   "shadows": "bayespy.utils.random"
  },
  "type": "import"
 },
 "bayespy.demos.gamma_shape": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bayespy.demos.gamma_shape.run"
   ]
  },
  "type": "module"
 },
 "bayespy.demos.gamma_shape.VB": {
  "data": {
   "shadows": "bayespy.inference.VB"
  },
  "type": "import"
 },
 "bayespy.demos.gamma_shape.nodes": {
  "data": {
   "shadows": "bayespy.nodes"
  },
  "type": "import"
 },
 "bayespy.demos.gamma_shape.run": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "bayespy.inference.VB",
    "bayespy.nodes.Gamma",
    "bayespy.nodes.GammaShape",
    "print"
   ]
  },
  "type": "function"
 },
 "bayespy.demos.hmm": {
  "data": {
   "symbols_in_volume": [
    "ValueError",
    "__name__",
    "bayespy.demos.hmm.getopt",
    "bayespy.demos.hmm.kwargs",
    "bayespy.demos.hmm.run",
    "bayespy.demos.hmm.sys",
    "float",
    "int",
    "matplotlib.pyplot.show",
    "print"
   ]
  },
  "type": "module"
 },
 "bayespy.demos.hmm.Categorical": {
  "data": {
   "shadows": "bayespy.nodes.Categorical"
  },
  "type": "import"
 },
 "bayespy.demos.hmm.CategoricalMarkovChain": {
  "data": {
   "shadows": "bayespy.nodes.CategoricalMarkovChain"
  },
  "type": "import"
 },
 "bayespy.demos.hmm.Dirichlet": {
  "data": {
   "shadows": "bayespy.nodes.Dirichlet"
  },
  "type": "import"
 },
 "bayespy.demos.hmm.Gaussian": {
  "data": {
   "shadows": "bayespy.nodes.Gaussian"
  },
  "type": "import"
 },
 "bayespy.demos.hmm.Mixture": {
  "data": {
   "shadows": "bayespy.nodes.Mixture"
  },
  "type": "import"
 },
 "bayespy.demos.hmm.VB": {
  "data": {
   "shadows": "bayespy.inference.vmp.vmp.VB"
  },
  "type": "import"
 },
 "bayespy.demos.hmm.bpplt": {
  "data": {
   "shadows": "bayespy.plot"
  },
  "type": "import"
 },
 "bayespy.demos.hmm.getopt": {
  "data": {
   "shadows": "getopt"
  },
  "type": "import"
 },
 "bayespy.demos.hmm.hidden_markov_model": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "bayespy.inference.vmp.vmp.VB",
    "bayespy.nodes.CategoricalMarkovChain",
    "bayespy.nodes.Dirichlet",
    "bayespy.nodes.Mixture",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "bayespy.demos.hmm.kwargs": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "bayespy.demos.hmm.mixture_model": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "bayespy.inference.vmp.vmp.VB",
    "bayespy.nodes.Categorical",
    "bayespy.nodes.Dirichlet",
    "bayespy.nodes.Mixture",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "bayespy.demos.hmm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.demos.hmm.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "bayespy.demos.hmm.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "bayespy.demos.hmm.run": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "bayespy.demos.hmm.hidden_markov_model",
    "bayespy.demos.hmm.mixture_model",
    "bayespy.nodes.Gaussian",
    "bayespy.plot.interactive",
    "int",
    "matplotlib.pyplot.axis",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.plot",
    "matplotlib.pyplot.scatter",
    "matplotlib.pyplot.subplot",
    "matplotlib.pyplot.title",
    "numpy.array",
    "numpy.identity",
    "numpy.ones",
    "numpy.random.choice",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.demos.hmm.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "bayespy.demos.lda": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bayespy.demos.lda.getopt",
    "bayespy.demos.lda.kwargs",
    "bayespy.demos.lda.run",
    "bayespy.demos.lda.sys",
    "bayespy.plot.pyplot.show",
    "int",
    "print"
   ]
  },
  "type": "module"
 },
 "bayespy.demos.lda.CategoricalMoments": {
  "data": {
   "shadows": "bayespy.inference.vmp.nodes.categorical.CategoricalMoments"
  },
  "type": "import"
 },
 "bayespy.demos.lda.Constant": {
  "data": {
   "shadows": "bayespy.inference.vmp.nodes.constant.Constant"
  },
  "type": "import"
 },
 "bayespy.demos.lda.VB": {
  "data": {
   "shadows": "bayespy.inference.VB"
  },
  "type": "import"
 },
 "bayespy.demos.lda.bpplt": {
  "data": {
   "shadows": "bayespy.plot"
  },
  "type": "import"
 },
 "bayespy.demos.lda.generate_data": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "bayespy.nodes.Categorical",
    "bayespy.nodes.Dirichlet",
    "bayespy.plot.hinton",
    "bayespy.plot.pyplot.figure",
    "bayespy.plot.pyplot.title",
    "bayespy.plot.pyplot.xlabel",
    "bayespy.plot.pyplot.ylabel",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "bayespy.demos.lda.getopt": {
  "data": {
   "shadows": "getopt"
  },
  "type": "import"
 },
 "bayespy.demos.lda.kwargs": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "bayespy.demos.lda.model": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "bayespy.inference.VB",
    "bayespy.inference.vmp.nodes.categorical.CategoricalMoments",
    "bayespy.inference.vmp.nodes.constant.Constant",
    "bayespy.nodes.Categorical",
    "bayespy.nodes.Dirichlet",
    "bayespy.nodes.Gate",
    "len",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "bayespy.demos.lda.nodes": {
  "data": {
   "shadows": "bayespy.nodes"
  },
  "type": "import"
 },
 "bayespy.demos.lda.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.demos.lda.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "bayespy.demos.lda.run": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "bayespy.demos.lda.generate_data",
    "bayespy.demos.lda.model",
    "bayespy.plot.hinton",
    "bayespy.plot.pyplot.figure",
    "bayespy.plot.pyplot.plot",
    "bayespy.plot.pyplot.title",
    "bayespy.plot.pyplot.xlabel",
    "bayespy.plot.pyplot.ylabel",
    "numpy.random.choice",
    "numpy.random.seed",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.demos.lda.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "bayespy.demos.lssm": {
  "data": {
   "symbols_in_volume": [
    "ValueError",
    "__name__",
    "bayespy.demos.lssm.demo",
    "bayespy.demos.lssm.getopt",
    "bayespy.demos.lssm.kwargs",
    "bayespy.demos.lssm.sys",
    "int",
    "matplotlib.pyplot.show",
    "print"
   ]
  },
  "type": "module"
 },
 "bayespy.demos.lssm.Gamma": {
  "data": {
   "shadows": "bayespy.nodes.Gamma"
  },
  "type": "import"
 },
 "bayespy.demos.lssm.Gaussian": {
  "data": {
   "shadows": "bayespy.nodes.Gaussian"
  },
  "type": "import"
 },
 "bayespy.demos.lssm.GaussianARD": {
  "data": {
   "shadows": "bayespy.nodes.GaussianARD"
  },
  "type": "import"
 },
 "bayespy.demos.lssm.GaussianMarkovChain": {
  "data": {
   "shadows": "bayespy.nodes.GaussianMarkovChain"
  },
  "type": "import"
 },
 "bayespy.demos.lssm.SumMultiply": {
  "data": {
   "shadows": "bayespy.nodes.SumMultiply"
  },
  "type": "import"
 },
 "bayespy.demos.lssm.VB": {
  "data": {
   "shadows": "bayespy.inference.vmp.vmp.VB"
  },
  "type": "import"
 },
 "bayespy.demos.lssm.bpplt": {
  "data": {
   "shadows": "bayespy.plot"
  },
  "type": "import"
 },
 "bayespy.demos.lssm.demo": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "bayespy.demos.lssm.infer",
    "bayespy.demos.lssm.simulate_data",
    "bayespy.plot.interactive",
    "bayespy.plot.timeseries",
    "bayespy.plot.timeseries_normal",
    "bayespy.utils.random.mask",
    "matplotlib.pyplot.figure",
    "numpy.nan",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "bayespy.demos.lssm.diagonal": {
  "data": {
   "shadows": "bayespy.inference.vmp.nodes.gamma.diagonal"
  },
  "type": "import"
 },
 "bayespy.demos.lssm.getopt": {
  "data": {
   "shadows": "getopt"
  },
  "type": "import"
 },
 "bayespy.demos.lssm.infer": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "bayespy.demos.lssm.model",
    "bayespy.inference.vmp.transformations.RotateGaussianARD",
    "bayespy.inference.vmp.transformations.RotateGaussianMarkovChain",
    "bayespy.inference.vmp.transformations.RotationOptimizer",
    "numpy.shape",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.demos.lssm.kwargs": {
  "data": {
   "lineno": 291
  },
  "type": "constant"
 },
 "bayespy.demos.lssm.model": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "bayespy.inference.vmp.vmp.VB",
    "bayespy.nodes.Gamma",
    "bayespy.nodes.GaussianARD",
    "bayespy.nodes.GaussianMarkovChain",
    "bayespy.nodes.SumMultiply",
    "bayespy.plot.GaussianHintonPlotter",
    "bayespy.plot.GaussianMarkovChainPlotter",
    "numpy.identity",
    "numpy.ones",
    "numpy.random.randn",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bayespy.demos.lssm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.demos.lssm.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "bayespy.demos.lssm.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "bayespy.demos.lssm.random": {
  "data": {
   "shadows": "bayespy.utils.random"
  },
  "type": "import"
 },
 "bayespy.demos.lssm.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "bayespy.demos.lssm.simulate_data": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cos",
    "numpy.dot",
    "numpy.empty",
    "numpy.random.randn",
    "numpy.sin",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.demos.lssm.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "bayespy.demos.lssm.transformations": {
  "data": {
   "shadows": "bayespy.inference.vmp.transformations"
  },
  "type": "import"
 },
 "bayespy.demos.lssm_sd": {
  "data": {
   "symbols_in_volume": [
    "ValueError",
    "__name__",
    "bayespy.demos.lssm_sd.demo",
    "bayespy.demos.lssm_sd.getopt",
    "bayespy.demos.lssm_sd.kwargs",
    "bayespy.demos.lssm_sd.sys",
    "int",
    "matplotlib.pyplot.show",
    "print"
   ]
  },
  "type": "module"
 },
 "bayespy.demos.lssm_sd.CategoricalMarkovChain": {
  "data": {
   "shadows": "bayespy.nodes.CategoricalMarkovChain"
  },
  "type": "import"
 },
 "bayespy.demos.lssm_sd.Dirichlet": {
  "data": {
   "shadows": "bayespy.nodes.Dirichlet"
  },
  "type": "import"
 },
 "bayespy.demos.lssm_sd.Gamma": {
  "data": {
   "shadows": "bayespy.nodes.Gamma"
  },
  "type": "import"
 },
 "bayespy.demos.lssm_sd.GaussianARD": {
  "data": {
   "shadows": "bayespy.nodes.GaussianARD"
  },
  "type": "import"
 },
 "bayespy.demos.lssm_sd.Mixture": {
  "data": {
   "shadows": "bayespy.nodes.Mixture"
  },
  "type": "import"
 },
 "bayespy.demos.lssm_sd.SumMultiply": {
  "data": {
   "shadows": "bayespy.nodes.SumMultiply"
  },
  "type": "import"
 },
 "bayespy.demos.lssm_sd.SwitchingGaussianMarkovChain": {
  "data": {
   "shadows": "bayespy.nodes.SwitchingGaussianMarkovChain"
  },
  "type": "import"
 },
 "bayespy.demos.lssm_sd.VB": {
  "data": {
   "shadows": "bayespy.inference.vmp.vmp.VB"
  },
  "type": "import"
 },
 "bayespy.demos.lssm_sd.bpplt": {
  "data": {
   "shadows": "bayespy.plot"
  },
  "type": "import"
 },
 "bayespy.demos.lssm_sd.demo": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "bayespy.demos.lssm_sd.infer",
    "bayespy.demos.lssm_sd.simulate_data",
    "bayespy.plot.interactive",
    "bayespy.plot.timeseries",
    "matplotlib.pyplot.figure",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "bayespy.demos.lssm_sd.getopt": {
  "data": {
   "shadows": "getopt"
  },
  "type": "import"
 },
 "bayespy.demos.lssm_sd.infer": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "bayespy.demos.lssm_sd.model",
    "bayespy.inference.vmp.transformations.RotateGaussianARD",
    "bayespy.inference.vmp.transformations.RotateSwitchingMarkovChain",
    "bayespy.inference.vmp.transformations.RotationOptimizer",
    "numpy.shape",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.demos.lssm_sd.kwargs": {
  "data": {
   "lineno": 312
  },
  "type": "constant"
 },
 "bayespy.demos.lssm_sd.model": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "bayespy.inference.vmp.vmp.VB",
    "bayespy.nodes.CategoricalMarkovChain",
    "bayespy.nodes.Dirichlet",
    "bayespy.nodes.Gamma",
    "bayespy.nodes.GaussianARD",
    "bayespy.nodes.SumMultiply",
    "bayespy.nodes.SwitchingGaussianMarkovChain",
    "bayespy.plot.CategoricalMarkovChainPlotter",
    "bayespy.plot.GaussianHintonPlotter",
    "bayespy.plot.GaussianMarkovChainPlotter",
    "numpy.identity",
    "numpy.ones",
    "numpy.random.dirichlet",
    "numpy.random.randn",
    "numpy.reshape",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bayespy.demos.lssm_sd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.demos.lssm_sd.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "bayespy.demos.lssm_sd.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "bayespy.demos.lssm_sd.simulate_data": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.dot",
    "numpy.identity",
    "numpy.ones",
    "numpy.pi",
    "numpy.random.choice",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.sin",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.demos.lssm_sd.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "bayespy.demos.lssm_sd.transformations": {
  "data": {
   "shadows": "bayespy.inference.vmp.transformations"
  },
  "type": "import"
 },
 "bayespy.demos.lssm_tvd": {
  "data": {
   "symbols_in_volume": [
    "ValueError",
    "__name__",
    "bayespy.demos.lssm_tvd.demo",
    "bayespy.demos.lssm_tvd.getopt",
    "bayespy.demos.lssm_tvd.kwargs",
    "bayespy.demos.lssm_tvd.sys",
    "int",
    "matplotlib.pyplot.show",
    "print"
   ]
  },
  "type": "module"
 },
 "bayespy.demos.lssm_tvd.Gamma": {
  "data": {
   "shadows": "bayespy.nodes.Gamma"
  },
  "type": "import"
 },
 "bayespy.demos.lssm_tvd.GaussianARD": {
  "data": {
   "shadows": "bayespy.nodes.GaussianARD"
  },
  "type": "import"
 },
 "bayespy.demos.lssm_tvd.GaussianMarkovChain": {
  "data": {
   "shadows": "bayespy.nodes.GaussianMarkovChain"
  },
  "type": "import"
 },
 "bayespy.demos.lssm_tvd.GaussianMoments": {
  "data": {
   "shadows": "bayespy.inference.vmp.nodes.gaussian.GaussianMoments"
  },
  "type": "import"
 },
 "bayespy.demos.lssm_tvd.SumMultiply": {
  "data": {
   "shadows": "bayespy.nodes.SumMultiply"
  },
  "type": "import"
 },
 "bayespy.demos.lssm_tvd.VB": {
  "data": {
   "shadows": "bayespy.inference.vmp.vmp.VB"
  },
  "type": "import"
 },
 "bayespy.demos.lssm_tvd.VaryingGaussianMarkovChain": {
  "data": {
   "shadows": "bayespy.nodes.VaryingGaussianMarkovChain"
  },
  "type": "import"
 },
 "bayespy.demos.lssm_tvd.bpplt": {
  "data": {
   "shadows": "bayespy.plot"
  },
  "type": "import"
 },
 "bayespy.demos.lssm_tvd.demo": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "bayespy.demos.lssm_tvd.infer",
    "bayespy.demos.lssm_tvd.simulate_data",
    "bayespy.plot.interactive",
    "bayespy.plot.timeseries",
    "bayespy.plot.timeseries_normal",
    "bayespy.utils.misc.rmse",
    "bayespy.utils.misc.trues",
    "bayespy.utils.random.mask",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.ylim",
    "min",
    "numpy.logical_and",
    "numpy.logical_not",
    "numpy.logical_or",
    "numpy.nan",
    "numpy.random.seed",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.demos.lssm_tvd.getopt": {
  "data": {
   "shadows": "getopt"
  },
  "type": "import"
 },
 "bayespy.demos.lssm_tvd.infer": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "bayespy.demos.lssm_tvd.model",
    "bayespy.inference.vmp.nodes.gaussian.GaussianMoments",
    "bayespy.inference.vmp.transformations.RotateGaussianARD",
    "bayespy.inference.vmp.transformations.RotateGaussianMarkovChain",
    "bayespy.inference.vmp.transformations.RotateVaryingMarkovChain",
    "bayespy.inference.vmp.transformations.RotationOptimizer",
    "bayespy.utils.misc.atleast_nd",
    "numpy.shape",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.demos.lssm_tvd.kwargs": {
  "data": {
   "lineno": 397
  },
  "type": "constant"
 },
 "bayespy.demos.lssm_tvd.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.demos.lssm_tvd.model": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.gaussian.GaussianMoments",
    "bayespy.inference.vmp.vmp.VB",
    "bayespy.nodes.Gamma",
    "bayespy.nodes.GaussianARD",
    "bayespy.nodes.GaussianMarkovChain",
    "bayespy.nodes.SumMultiply",
    "bayespy.nodes.VaryingGaussianMarkovChain",
    "bayespy.plot.GaussianHintonPlotter",
    "bayespy.plot.GaussianMarkovChainPlotter",
    "int",
    "numpy.arange",
    "numpy.identity",
    "numpy.ones",
    "numpy.random.randn",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bayespy.demos.lssm_tvd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.demos.lssm_tvd.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "bayespy.demos.lssm_tvd.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "bayespy.demos.lssm_tvd.random": {
  "data": {
   "shadows": "bayespy.utils.random"
  },
  "type": "import"
 },
 "bayespy.demos.lssm_tvd.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "bayespy.demos.lssm_tvd.simulate_data": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.pi",
    "numpy.random.randn",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "bayespy.demos.lssm_tvd.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "bayespy.demos.lssm_tvd.transformations": {
  "data": {
   "shadows": "bayespy.inference.vmp.transformations"
  },
  "type": "import"
 },
 "bayespy.demos.mog": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bayespy.demos.mog.run",
    "matplotlib.pyplot.show"
   ]
  },
  "type": "module"
 },
 "bayespy.demos.mog.VB": {
  "data": {
   "shadows": "bayespy.inference.vmp.vmp.VB"
  },
  "type": "import"
 },
 "bayespy.demos.mog.bpplt": {
  "data": {
   "shadows": "bayespy.plot"
  },
  "type": "import"
 },
 "bayespy.demos.mog.gaussianmix_model": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.Categorical",
    "bayespy.inference.vmp.nodes.Dirichlet",
    "bayespy.inference.vmp.nodes.Gamma",
    "bayespy.inference.vmp.nodes.Gaussian",
    "bayespy.inference.vmp.nodes.GaussianARD",
    "bayespy.inference.vmp.nodes.Mixture",
    "bayespy.inference.vmp.nodes.Wishart",
    "bayespy.inference.vmp.vmp.VB",
    "numpy.identity",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "bayespy.demos.mog.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.demos.mog.nodes": {
  "data": {
   "shadows": "bayespy.inference.vmp.nodes"
  },
  "type": "import"
 },
 "bayespy.demos.mog.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.demos.mog.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "bayespy.demos.mog.run": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "bayespy.demos.mog.gaussianmix_model",
    "bayespy.inference.vmp.nodes.Categorical",
    "bayespy.inference.vmp.nodes.Gaussian",
    "bayespy.inference.vmp.nodes.Mixture",
    "bayespy.plot.interactive",
    "bayespy.utils.misc.grid",
    "matplotlib.pyplot.clf",
    "matplotlib.pyplot.contourf",
    "matplotlib.pyplot.scatter",
    "numpy.exp",
    "numpy.floor",
    "numpy.linspace",
    "numpy.random.normal",
    "numpy.reshape",
    "numpy.sum",
    "numpy.vstack",
    "print"
   ]
  },
  "type": "function"
 },
 "bayespy.demos.mog.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "bayespy.demos.pattern_search": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bayespy.demos.pattern_search.getopt",
    "bayespy.demos.pattern_search.kwargs",
    "bayespy.demos.pattern_search.run",
    "bayespy.demos.pattern_search.sys",
    "int",
    "matplotlib.pyplot.show",
    "print"
   ]
  },
  "type": "module"
 },
 "bayespy.demos.pattern_search.VB": {
  "data": {
   "shadows": "bayespy.inference.vmp.vmp.VB"
  },
  "type": "import"
 },
 "bayespy.demos.pattern_search.bpplt": {
  "data": {
   "shadows": "bayespy.plot"
  },
  "type": "import"
 },
 "bayespy.demos.pattern_search.getopt": {
  "data": {
   "shadows": "getopt"
  },
  "type": "import"
 },
 "bayespy.demos.pattern_search.kwargs": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "bayespy.demos.pattern_search.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.demos.pattern_search.myplt": {
  "data": {
   "shadows": "bayespy.plot"
  },
  "type": "import"
 },
 "bayespy.demos.pattern_search.nodes": {
  "data": {
   "shadows": "bayespy.nodes"
  },
  "type": "import"
 },
 "bayespy.demos.pattern_search.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.demos.pattern_search.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "bayespy.demos.pattern_search.pca": {
  "data": {
   "shadows": "bayespy.demos.pca"
  },
  "type": "import"
 },
 "bayespy.demos.pattern_search.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "bayespy.demos.pattern_search.random": {
  "data": {
   "shadows": "bayespy.utils.random"
  },
  "type": "import"
 },
 "bayespy.demos.pattern_search.run": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "bayespy.demos.pca.model",
    "bayespy.plot.pyplot.legend",
    "bayespy.plot.pyplot.plot",
    "bayespy.plot.pyplot.xlabel",
    "bayespy.plot.pyplot.ylabel",
    "bayespy.utils.misc.sum_product",
    "bayespy.utils.random.mask",
    "numpy.cumsum",
    "numpy.nan",
    "numpy.random.normal",
    "numpy.random.seed",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.demos.pattern_search.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "bayespy.demos.pattern_search.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "bayespy.demos.pattern_search.transformations": {
  "data": {
   "shadows": "bayespy.inference.vmp.transformations"
  },
  "type": "import"
 },
 "bayespy.demos.pca": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bayespy.demos.pca.getopt",
    "bayespy.demos.pca.kwargs",
    "bayespy.demos.pca.run",
    "bayespy.demos.pca.sys",
    "int",
    "matplotlib.pyplot.show",
    "print"
   ]
  },
  "type": "module"
 },
 "bayespy.demos.pca.VB": {
  "data": {
   "shadows": "bayespy.inference.vmp.vmp.VB"
  },
  "type": "import"
 },
 "bayespy.demos.pca.bpplt": {
  "data": {
   "shadows": "bayespy.plot"
  },
  "type": "import"
 },
 "bayespy.demos.pca.getopt": {
  "data": {
   "shadows": "getopt"
  },
  "type": "import"
 },
 "bayespy.demos.pca.kwargs": {
  "data": {
   "lineno": 132
  },
  "type": "constant"
 },
 "bayespy.demos.pca.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.demos.pca.model": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "bayespy.inference.vmp.vmp.VB",
    "bayespy.nodes.Gamma",
    "bayespy.nodes.GaussianARD",
    "bayespy.nodes.SumMultiply"
   ]
  },
  "type": "function"
 },
 "bayespy.demos.pca.myplt": {
  "data": {
   "shadows": "bayespy.plot"
  },
  "type": "import"
 },
 "bayespy.demos.pca.nodes": {
  "data": {
   "shadows": "bayespy.nodes"
  },
  "type": "import"
 },
 "bayespy.demos.pca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.demos.pca.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "bayespy.demos.pca.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "bayespy.demos.pca.random": {
  "data": {
   "shadows": "bayespy.utils.random"
  },
  "type": "import"
 },
 "bayespy.demos.pca.run": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "bayespy.demos.pca.model",
    "bayespy.inference.vmp.transformations.RotateGaussianARD",
    "bayespy.inference.vmp.transformations.RotationOptimizer",
    "bayespy.plot.interactive",
    "bayespy.plot.timeseries",
    "bayespy.plot.timeseries_normal",
    "bayespy.utils.misc.sum_product",
    "bayespy.utils.random.mask",
    "matplotlib.pyplot.figure",
    "numpy.nan",
    "numpy.random.normal",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "bayespy.demos.pca.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "bayespy.demos.pca.transformations": {
  "data": {
   "shadows": "bayespy.inference.vmp.transformations"
  },
  "type": "import"
 },
 "bayespy.demos.saving": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bayespy.demos.saving.run",
    "matplotlib.pyplot.show"
   ]
  },
  "type": "module"
 },
 "bayespy.demos.saving.VB": {
  "data": {
   "shadows": "bayespy.inference.vmp.vmp.VB"
  },
  "type": "import"
 },
 "bayespy.demos.saving.bpplt": {
  "data": {
   "shadows": "bayespy.plot"
  },
  "type": "import"
 },
 "bayespy.demos.saving.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "bayespy.demos.saving.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.demos.saving.nodes": {
  "data": {
   "shadows": "bayespy.inference.vmp.nodes"
  },
  "type": "import"
 },
 "bayespy.demos.saving.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.demos.saving.pca_model": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.Dot",
    "bayespy.inference.vmp.nodes.Gamma",
    "bayespy.inference.vmp.nodes.Gaussian",
    "bayespy.inference.vmp.nodes.GaussianARD",
    "numpy.identity",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bayespy.demos.saving.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "bayespy.demos.saving.random": {
  "data": {
   "shadows": "bayespy.utils.random"
  },
  "type": "import"
 },
 "bayespy.demos.saving.run": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "bayespy.demos.saving.h5py",
    "bayespy.demos.saving.pca_model",
    "bayespy.demos.saving.tempfile",
    "bayespy.inference.vmp.vmp.VB",
    "bayespy.plot.binary_matrix",
    "bayespy.plot.errorplot",
    "bayespy.plot.interactive",
    "bayespy.utils.misc.sum_product",
    "bayespy.utils.random.mask",
    "matplotlib.pyplot.clf",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.plot",
    "matplotlib.pyplot.subplot",
    "numpy.arange",
    "numpy.nan",
    "numpy.ones",
    "numpy.random.normal",
    "numpy.random.seed",
    "numpy.sqrt",
    "print",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "bayespy.demos.saving.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "bayespy.demos.stochastic_inference": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bayespy.demos.stochastic_inference.getopt",
    "bayespy.demos.stochastic_inference.kwargs",
    "bayespy.demos.stochastic_inference.run",
    "bayespy.demos.stochastic_inference.sys",
    "int",
    "matplotlib.pyplot.show",
    "print"
   ]
  },
  "type": "module"
 },
 "bayespy.demos.stochastic_inference.Categorical": {
  "data": {
   "shadows": "bayespy.nodes.Categorical"
  },
  "type": "import"
 },
 "bayespy.demos.stochastic_inference.Dirichlet": {
  "data": {
   "shadows": "bayespy.nodes.Dirichlet"
  },
  "type": "import"
 },
 "bayespy.demos.stochastic_inference.Gaussian": {
  "data": {
   "shadows": "bayespy.nodes.Gaussian"
  },
  "type": "import"
 },
 "bayespy.demos.stochastic_inference.Mixture": {
  "data": {
   "shadows": "bayespy.nodes.Mixture"
  },
  "type": "import"
 },
 "bayespy.demos.stochastic_inference.VB": {
  "data": {
   "shadows": "bayespy.inference.vmp.vmp.VB"
  },
  "type": "import"
 },
 "bayespy.demos.stochastic_inference.bpplt": {
  "data": {
   "shadows": "bayespy.plot"
  },
  "type": "import"
 },
 "bayespy.demos.stochastic_inference.getopt": {
  "data": {
   "shadows": "getopt"
  },
  "type": "import"
 },
 "bayespy.demos.stochastic_inference.kwargs": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "bayespy.demos.stochastic_inference.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.demos.stochastic_inference.myplt": {
  "data": {
   "shadows": "bayespy.plot"
  },
  "type": "import"
 },
 "bayespy.demos.stochastic_inference.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.demos.stochastic_inference.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "bayespy.demos.stochastic_inference.pca": {
  "data": {
   "shadows": "bayespy.demos.pca"
  },
  "type": "import"
 },
 "bayespy.demos.stochastic_inference.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "bayespy.demos.stochastic_inference.random": {
  "data": {
   "shadows": "bayespy.utils.random"
  },
  "type": "import"
 },
 "bayespy.demos.stochastic_inference.run": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "bayespy.inference.vmp.vmp.VB",
    "bayespy.nodes.Categorical",
    "bayespy.nodes.Dirichlet",
    "bayespy.nodes.Gaussian",
    "bayespy.nodes.Mixture",
    "bayespy.plot.pyplot.legend",
    "bayespy.plot.pyplot.plot",
    "bayespy.plot.pyplot.title",
    "bayespy.plot.pyplot.xlabel",
    "bayespy.plot.pyplot.ylabel",
    "bayespy.utils.random.categorical",
    "int",
    "numpy.cumsum",
    "numpy.empty",
    "numpy.identity",
    "numpy.isnan",
    "numpy.ones",
    "numpy.random.choice",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.sum",
    "numpy.zeros",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.demos.stochastic_inference.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "bayespy.demos.stochastic_inference.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "bayespy.demos.stochastic_inference.transformations": {
  "data": {
   "shadows": "bayespy.inference.vmp.transformations"
  },
  "type": "import"
 },
 "bayespy.discrete_example": {
  "data": {
   "symbols_in_volume": [
    "bayespy.discrete_example.FALSE",
    "bayespy.discrete_example.Q",
    "bayespy.discrete_example.TRUE",
    "bayespy.discrete_example._or",
    "bayespy.discrete_example.asia",
    "bayespy.discrete_example.bronchitis",
    "bayespy.discrete_example.dyspnea",
    "bayespy.discrete_example.lung",
    "bayespy.discrete_example.smoking",
    "bayespy.discrete_example.tuberculosis",
    "bayespy.discrete_example.xray",
    "bayespy.inference.VB",
    "bayespy.nodes.Categorical",
    "bayespy.nodes.Mixture",
    "print"
   ]
  },
  "type": "module"
 },
 "bayespy.discrete_example.Categorical": {
  "data": {
   "shadows": "bayespy.nodes.Categorical"
  },
  "type": "import"
 },
 "bayespy.discrete_example.FALSE": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "bayespy.discrete_example.Mixture": {
  "data": {
   "shadows": "bayespy.nodes.Mixture"
  },
  "type": "import"
 },
 "bayespy.discrete_example.Q": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "bayespy.discrete_example.TRUE": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "bayespy.discrete_example.VB": {
  "data": {
   "shadows": "bayespy.inference.VB"
  },
  "type": "import"
 },
 "bayespy.discrete_example._or": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "bayespy.discrete_example.FALSE",
    "bayespy.discrete_example.TRUE",
    "numpy.take"
   ]
  },
  "type": "function"
 },
 "bayespy.discrete_example.asia": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "bayespy.discrete_example.bronchitis": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "bayespy.discrete_example.dyspnea": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "bayespy.discrete_example.lung": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "bayespy.discrete_example.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.discrete_example.smoking": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "bayespy.discrete_example.tuberculosis": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "bayespy.discrete_example.xray": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "bayespy.inference": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes": {
  "data": {
   "symbols_in_volume": [
    "Concentration"
   ]
  },
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.BetaConcentration": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.CovarianceFunction": {
  "data": {
   "lineno": 487
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.CovarianceFunction.__call__": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "covfunc"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.CovarianceFunction.__init__": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "bayespy.utils.misc.is_numeric",
    "len",
    "list",
    "numpy.asanyarray",
    "numpy.inf",
    "numpy.shape",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.CovarianceFunction.get_fixed_covariance_function": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.CovarianceFunctions.CovarianceFunctionWrapper"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.CovarianceFunction.message_to_child": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "covfunc"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.CovarianceFunctionWrapper": {
  "data": {
   "lineno": 407
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.CovarianceFunctionWrapper.__init__": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.CovarianceFunctionWrapper.fixed_covariance_function": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "len",
    "numpy.multiply",
    "print",
    "range",
    "scipy.sparse.issparse",
    "tuple"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.Delta": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.CovarianceFunctions.CovarianceFunction"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.Delta.__init__": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.CovarianceFunctions.CovarianceFunction",
    "bayespy.inference.vmp.nodes.CovarianceFunctions.covfunc_delta"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.Multiple": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.CovarianceFunctions.CovarianceFunction"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.Multiple.__init__": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.CovarianceFunctions.CovarianceFunction",
    "covfunc",
    "len"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.Multiple.get_fixed_covariance_function": {
  "data": {
   "lineno": 661
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.Multiple.get_fixed_covariance_function.cov": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "Exception",
    "len",
    "list",
    "numpy.asarray",
    "numpy.bmat",
    "numpy.concatenate",
    "numpy.shape",
    "numpy.zeros",
    "range",
    "scipy.sparse.bmat",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.PiecewisePolynomial2": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.CovarianceFunctions.CovarianceFunction"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.PiecewisePolynomial2.__init__": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.CovarianceFunctions.CovarianceFunction",
    "bayespy.inference.vmp.nodes.CovarianceFunctions.covfunc_pp2"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.SquaredExponential": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.CovarianceFunctions.CovarianceFunction"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.SquaredExponential.__init__": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.CovarianceFunctions.CovarianceFunction",
    "bayespy.inference.vmp.nodes.CovarianceFunctions.covfunc_se"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.Sum": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.CovarianceFunctions.CovarianceFunction"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.Sum.__init__": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.CovarianceFunctions.CovarianceFunction"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.Sum.get_fixed_covariance_function": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "covfunc"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.Sum.get_fixed_covariance_function.covfunc": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "k",
    "list",
    "print"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.Zeros": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.CovarianceFunctions.CovarianceFunction"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.Zeros.__init__": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.CovarianceFunctions.CovarianceFunction",
    "bayespy.inference.vmp.nodes.CovarianceFunctions.covfunc_zeros"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.covfunc_delta": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.CovarianceFunctions.gp_cov_delta",
    "bayespy.inference.vmp.nodes.CovarianceFunctions.gp_preprocess_inputs",
    "bayespy.utils.misc.array_to_scalar",
    "numpy.ones",
    "numpy.shape",
    "numpy.zeros",
    "print",
    "scipy.sparse.csc_matrix"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.covfunc_pp2": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.CovarianceFunctions.gp_cov_pp2",
    "bayespy.inference.vmp.nodes.CovarianceFunctions.gp_preprocess_inputs",
    "bayespy.utils.misc.array_to_scalar",
    "numpy.empty",
    "numpy.ones",
    "numpy.shape",
    "numpy.sqrt",
    "numpy.zeros",
    "print",
    "scipy.sparse.csc_matrix"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.covfunc_se": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.CovarianceFunctions.gp_cov_se",
    "bayespy.inference.vmp.nodes.CovarianceFunctions.gp_preprocess_inputs",
    "bayespy.inference.vmp.nodes.CovarianceFunctions.squared_distance",
    "bayespy.utils.misc.array_to_scalar",
    "numpy.divide",
    "numpy.multiply",
    "numpy.ones",
    "numpy.shape",
    "numpy.zeros",
    "print"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.covfunc_zeros": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.CovarianceFunctions.gp_preprocess_inputs",
    "numpy.shape",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.dist": {
  "data": {
   "shadows": "scipy.spatial.distance"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.ef": {
  "data": {
   "shadows": "node"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.gp_cov_delta": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.identity",
    "scipy.sparse.identity"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.gp_cov_pp2": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.floor"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.gp_cov_pp2_new": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.floor"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.gp_cov_se": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.gp_preprocess_inputs": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.CovarianceFunctions.gp_standardize_input"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.gp_standardize_input": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "Exception",
    "numpy.atleast_2d",
    "numpy.ndim",
    "numpy.reshape",
    "numpy.size"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.squared_distance": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "numpy.empty",
    "scipy.spatial.distance.cdist"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.CovarianceFunctions.utils": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.DirichletConcentration": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "bayespy.inference.vmp.nodes.GaussianProcesses": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.GaussianProcesses.CF": {
  "data": {
   "shadows": "CovarianceFunctions"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.GaussianProcesses.Constant": {
  "data": {
   "lineno": 198
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.GaussianProcesses.Constant.__init__": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.GaussianProcesses.Constant.message_to_child": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.GaussianProcesses.Constant.message_to_child.func": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.GaussianProcesses.CovarianceMatrix": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.GaussianProcesses.CovarianceMatrix.cholesky": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.GaussianProcesses.EF": {
  "data": {
   "shadows": "node"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.GaussianProcesses.GaussianProcess": {
  "data": {
   "lineno": 287
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.GaussianProcesses.GaussianProcess.__call__": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.GaussianProcesses.GaussianProcess.__init__": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "Exception",
    "bayespy.inference.vmp.nodes.GaussianProcesses.Multiple",
    "isinstance",
    "k",
    "k_sparse",
    "len",
    "list",
    "m",
    "numpy.array",
    "numpy.inf",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.GaussianProcesses.GaussianProcess.get_parameters": {
  "data": {
   "lineno": 355
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.GaussianProcesses.GaussianProcess.lower_bound_contribution": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "Exception",
    "bayespy.utils.misc.cholesky",
    "bayespy.utils.misc.gaussian_logpdf",
    "func",
    "gaussian_logpdf",
    "k",
    "k_sparse",
    "m",
    "numpy.dot",
    "numpy.inf",
    "numpy.nan",
    "numpy.size",
    "numpy.sum",
    "numpy.trace",
    "print",
    "scipy.linalg.LinAlgError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.GaussianProcesses.GaussianProcess.message_to_child": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.GaussianProcesses.GaussianProcess.message_to_parent": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "Exception",
    "k"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.GaussianProcesses.GaussianProcess.observe": {
  "data": {
   "lineno": 358
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.GaussianProcesses.GaussianProcess.update": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.GaussianProcesses.gp_posterior_moment_function",
    "k",
    "k_sparse",
    "m",
    "numpy.array",
    "numpy.concatenate",
    "scipy.linalg.block_diag"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.GaussianProcesses.Multiple": {
  "data": {
   "lineno": 232
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.GaussianProcesses.Multiple.__init__": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.GaussianProcesses.Multiple.message_to_child": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.GaussianProcesses.Multiple.message_to_child.get_moments": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "Exception",
    "len",
    "numpy.array",
    "numpy.concatenate",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.GaussianProcesses.Multiple.message_to_parent": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.GaussianProcesses.gp_posterior_moment_function": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "bayespy.utils.misc.chol",
    "bayespy.utils.misc.chol_solve",
    "k",
    "k_sparse",
    "len",
    "m",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.GaussianProcesses.gp_posterior_moment_function.get_moments": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "bayespy.utils.misc.chol_solve",
    "isinstance",
    "k",
    "k_sparse",
    "m",
    "numpy.asarray",
    "numpy.einsum",
    "numpy.ndarray",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.GaussianProcesses.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.GaussianProcesses.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.GaussianProcesses.multiply": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.multiply"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.GaussianProcesses.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.GaussianProcesses.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.GaussianProcesses.utils": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.add": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.add.Add": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.add.Add.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "GaussianMoments",
    "ValueError",
    "len",
    "list",
    "range",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.add.Add._compute_message_to_parent": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.add.functools",
    "bayespy.utils.linalg.mvdot",
    "numpy.add"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.add.Add._compute_moments": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.add.functools",
    "bayespy.utils.linalg.outer",
    "bayespy.utils.linalg.transpose",
    "numpy.add",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.add.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.add.linalg": {
  "data": {
   "shadows": "bayespy.utils.linalg"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.add.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.bernoulli": {
  "data": {
   "symbols_in_volume": [
    "CategoricalMoments.add_converter",
    "bayespy.inference.vmp.nodes.bernoulli.BernoulliMoments",
    "bayespy.inference.vmp.nodes.bernoulli.CategoricalToBernoulli"
   ]
  },
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.bernoulli.Bernoulli": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.bernoulli.BernoulliDistribution",
    "bayespy.inference.vmp.nodes.bernoulli.BernoulliMoments"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.bernoulli.Bernoulli.__init__": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.bernoulli.Bernoulli.__str__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.bernoulli.Bernoulli._constructor": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.bernoulli.BernoulliDistribution": {
  "data": {
   "lineno": 31
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.bernoulli.BernoulliDistribution.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.bernoulli.BernoulliMoments": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.bernoulli.BernoulliMoments.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.bernoulli.CategoricalToBernoulli": {
  "data": {
   "lineno": 116
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.bernoulli.CategoricalToBernoulli.__init__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "CategoricalMoments",
    "ValueError",
    "bayespy.inference.vmp.nodes.bernoulli.BernoulliMoments",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.bernoulli.CategoricalToBernoulli._compute_message_to_parent": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "ValueError",
    "numpy.concatenate",
    "numpy.shape",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.bernoulli.CategoricalToBernoulli._compute_moments": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.bernoulli.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.beta": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.beta.Beta": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.beta.BetaDistribution",
    "bayespy.inference.vmp.nodes.beta.BetaMoments"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.beta.Beta.__init__": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.beta.Beta.__str__": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.beta.Beta._constructor": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "cls._distribution",
    "cls._moments",
    "cls._moments.dims",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.beta.Beta.complement": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.beta.Complement"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.beta.BetaDistribution": {
  "data": {
   "lineno": 50
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.beta.BetaDistribution.compute_cgf_from_parents": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.beta.BetaDistribution.compute_fixed_moments_and_f": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "numpy.asanyarray",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.beta.BetaDistribution.compute_message_to_parent": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.beta.BetaDistribution.compute_moments_and_cgf": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.beta.BetaDistribution.compute_phi_from_parents": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.beta.BetaDistribution.random": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.beta.BetaMoments": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.beta.BetaMoments.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.beta.BetaMoments.compute_fixed_moments": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.asanyarray",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.beta.BetaMoments.from_values": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.beta.Complement": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.beta.BetaMoments"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.beta.Complement.__init__": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.beta.Complement._compute_message_to_parent": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.beta.Complement._compute_moments": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.beta.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.beta.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.binomial": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.binomial.Binomial": {
  "data": {
   "lineno": 145
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.binomial.Binomial.__init__": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.binomial.Binomial.__str__": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.binomial.Binomial._constructor": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.binomial.BinomialDistribution",
    "bayespy.inference.vmp.nodes.binomial.BinomialMoments",
    "classmethod",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.binomial.BinomialDistribution": {
  "data": {
   "lineno": 61
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.binomial.BinomialDistribution.__init__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.utils.misc.isinteger",
    "numpy.any",
    "numpy.asanyarray",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.binomial.BinomialDistribution.compute_cgf_from_parents": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.binomial.BinomialDistribution.compute_fixed_moments_and_f": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.utils.misc.isinteger",
    "numpy.any",
    "numpy.asanyarray",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.binomial.BinomialDistribution.compute_message_to_parent": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.binomial.BinomialDistribution.compute_moments_and_cgf": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.log1p"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.binomial.BinomialDistribution.compute_phi_from_parents": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.binomial.BinomialDistribution.random": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "bayespy.utils.random.logodds_to_probability",
    "numpy.random.binomial"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.binomial.BinomialMoments": {
  "data": {
   "lineno": 29
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.binomial.BinomialMoments.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.binomial.BinomialMoments.compute_dims_from_values": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "DeprecationWarning",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.binomial.BinomialMoments.compute_fixed_moments": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "numpy.asanyarray",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.binomial.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.binomial.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.binomial.random": {
  "data": {
   "shadows": "bayespy.utils.random"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.binomial.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.categorical": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.categorical.Categorical": {
  "data": {
   "lineno": 127
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.categorical.Categorical.__init__": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.categorical.Categorical.__str__": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.categorical.Categorical._constructor": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.categorical.CategoricalDistribution",
    "bayespy.inference.vmp.nodes.categorical.CategoricalMoments",
    "classmethod",
    "cls._ensure_moments",
    "cls._total_plates"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.categorical.CategoricalDistribution": {
  "data": {
   "lineno": 74
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.categorical.CategoricalDistribution.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.categorical.CategoricalDistribution.compute_fixed_moments_and_f": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.utils.misc.isinteger",
    "numpy.any",
    "numpy.arange",
    "numpy.asanyarray",
    "numpy.ravel",
    "numpy.reshape",
    "numpy.shape",
    "numpy.size",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.categorical.CategoricalDistribution.random": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "bayespy.utils.random.categorical",
    "numpy.amax",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.categorical.CategoricalMoments": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.categorical.CategoricalMoments.compute_fixed_moments": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.utils.misc.isinteger",
    "numpy.any",
    "numpy.arange",
    "numpy.asanyarray",
    "numpy.ravel",
    "numpy.reshape",
    "numpy.shape",
    "numpy.size",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.categorical.CategoricalMoments.from_values": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "DeprecationWarning",
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.categorical.CategoricalMoments.get_instance_conversion_kwargs": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.categorical.CategoricalMoments.get_instance_converter": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.categorical.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.categorical.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.categorical.random": {
  "data": {
   "shadows": "bayespy.utils.random"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.categorical_markov_chain": {
  "data": {
   "symbols_in_volume": [
    "CategoricalMoments",
    "bayespy.inference.vmp.nodes.categorical_markov_chain.CategoricalMarkovChainMoments",
    "bayespy.inference.vmp.nodes.categorical_markov_chain.CategoricalMarkovChainToCategorical"
   ]
  },
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.categorical_markov_chain.CategoricalMarkovChain": {
  "data": {
   "lineno": 198
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.categorical_markov_chain.CategoricalMarkovChain.__init__": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.categorical_markov_chain.CategoricalMarkovChain._constructor": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.inference.vmp.nodes.categorical_markov_chain.CategoricalMarkovChainDistribution",
    "bayespy.inference.vmp.nodes.categorical_markov_chain.CategoricalMarkovChainMoments",
    "classmethod",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.categorical_markov_chain.CategoricalMarkovChainDistribution": {
  "data": {
   "lineno": 61
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.categorical_markov_chain.CategoricalMarkovChainDistribution.__init__": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.categorical_markov_chain.CategoricalMarkovChainDistribution.compute_cgf_from_parents": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.categorical_markov_chain.CategoricalMarkovChainDistribution.compute_fixed_moments_and_f": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.categorical_markov_chain.CategoricalMarkovChainDistribution.compute_message_to_parent": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.categorical_markov_chain.CategoricalMarkovChainDistribution.compute_moments_and_cgf": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "bayespy.utils.random.alpha_beta_recursion"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.categorical_markov_chain.CategoricalMarkovChainDistribution.compute_phi_from_parents": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.categorical_markov_chain.CategoricalMarkovChainDistribution.compute_weights_to_parent": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asanyarray"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.categorical_markov_chain.CategoricalMarkovChainDistribution.plates_from_parent": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.categorical_markov_chain.CategoricalMarkovChainDistribution.plates_to_parent": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.categorical_markov_chain.CategoricalMarkovChainDistribution.random": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "Ellipsis",
    "bayespy.utils.misc.logsumexp",
    "bayespy.utils.random.categorical",
    "enumerate",
    "len",
    "min",
    "numpy.arange",
    "numpy.exp",
    "numpy.int",
    "numpy.ones",
    "numpy.shape",
    "numpy.zeros",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.categorical_markov_chain.CategoricalMarkovChainMoments": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.categorical_markov_chain.CategoricalMarkovChainMoments.__init__": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.categorical_markov_chain.CategoricalMarkovChainMoments.compute_fixed_moments": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.categorical_markov_chain.CategoricalMarkovChainMoments.from_values": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.categorical_markov_chain.CategoricalMarkovChainToCategorical": {
  "data": {
   "lineno": 342
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.categorical_markov_chain.CategoricalMarkovChainToCategorical.__init__": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "CategoricalMoments",
    "bayespy.inference.vmp.nodes.categorical_markov_chain.CategoricalMarkovChainMoments",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.categorical_markov_chain.CategoricalMarkovChainToCategorical._compute_message_to_parent": {
  "data": {
   "lineno": 383
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.categorical_markov_chain.CategoricalMarkovChainToCategorical._compute_moments": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "bayespy.utils.misc.broadcasted_shape",
    "numpy.concatenate",
    "numpy.ones",
    "numpy.shape",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.categorical_markov_chain.CategoricalMarkovChainToCategorical._compute_weights_to_parent": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "ValueError",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.categorical_markov_chain.CategoricalMarkovChainToCategorical._plates_from_parent": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.categorical_markov_chain.CategoricalMarkovChainToCategorical._plates_to_parent": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.categorical_markov_chain.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.categorical_markov_chain.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.categorical_markov_chain.random": {
  "data": {
   "shadows": "bayespy.utils.random"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.concat_gaussian": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.concat_gaussian.ConcatGaussian": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.concat_gaussian.ConcatGaussian.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "GaussianMoments",
    "ValueError",
    "any",
    "len",
    "numpy.cumsum",
    "sum",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.concat_gaussian.ConcatGaussian._compute_message_to_parent": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "enumerate",
    "numpy.einsum"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.concat_gaussian.ConcatGaussian._compute_moments": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "bayespy.utils.linalg.outer",
    "bayespy.utils.misc.T",
    "bayespy.utils.misc.block_diag",
    "bayespy.utils.misc.concatenate",
    "len",
    "numpy.ones",
    "numpy.shape",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.concat_gaussian.linalg": {
  "data": {
   "shadows": "bayespy.utils.linalg"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.concat_gaussian.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.concat_gaussian.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.concatenate": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.concatenate.Concatenate": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.concatenate.Concatenate.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "numpy.cumsum",
    "numpy.int",
    "numpy.zeros",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.concatenate.Concatenate._compute_message_to_parent": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "abs",
    "len",
    "numpy.ndim",
    "numpy.shape",
    "numpy.split",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.concatenate.Concatenate._compute_moments": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "abs",
    "bayespy.utils.misc.broadcasted_shape",
    "len",
    "list",
    "numpy.concatenate",
    "numpy.ones",
    "numpy.shape",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.concatenate.Concatenate._compute_plates_from_parent": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.concatenate.Concatenate._compute_plates_to_parent": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.concatenate.Concatenate._compute_weights_to_parent": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "abs",
    "numpy.ndim",
    "numpy.shape",
    "numpy.split"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.concatenate.Concatenate._get_id_list": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "list",
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.concatenate.Concatenate._plates_multiplier_from_parent": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.concatenate.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.concatenate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.constant": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.constant.Constant": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.constant.Constant.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "issubclass",
    "len",
    "numpy.shape",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.constant.Constant._get_id_list": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.constant.Constant.get_moments": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.constant.Constant.lower_bound_contribution": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.constant.Constant.random": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.constant.Constant.set_value": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.utils.misc.is_shape_subset",
    "enumerate",
    "numpy.asanyarray",
    "numpy.shape",
    "tuple"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.constant.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.constant.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.converters": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.converters.NodeConverter": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.converters.NodeConverter.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.converters.NodeConverter._compute_message_to_parent": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.converters.NodeConverter._compute_moments": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.converters.NodeConverter._compute_plates_from_parent": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.converters.NodeConverter._compute_plates_multiplier_from_parent": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.converters.NodeConverter._compute_plates_to_parent": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.converters.NodeConverter._compute_weights_to_parent": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.deterministic": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.deterministic.Deterministic": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.deterministic.Deterministic.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.deterministic.Deterministic._add_child": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "enumerate",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.deterministic.Deterministic._compute_message_and_mask_to_parent": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.deterministic.Deterministic._compute_message_to_parent": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.deterministic.Deterministic._compute_moments": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.deterministic.Deterministic._get_id_list": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.deterministic.Deterministic._get_message_and_mask_to_parent": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.deterministic.Deterministic._remove_child": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.deterministic.Deterministic.get_moments": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.deterministic.Deterministic.lower_bound_contribution": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.deterministic.Deterministic.random": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.deterministic.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.deterministic.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.deterministic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.deterministic.tile": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "_Tile",
    "numpy.ravel",
    "tuple"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.deterministic.tile._Tile": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "Moments",
    "bayespy.inference.vmp.nodes.deterministic.Deterministic"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.deterministic.tile._Tile.__init__": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.deterministic.tile._Tile._compute_message_to_parent": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.deterministic.functools",
    "bayespy.utils.misc.make_equal_length",
    "bayespy.utils.misc.squeeze_to_dim",
    "len",
    "list",
    "numpy.reshape",
    "numpy.shape",
    "numpy.sum",
    "range",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.deterministic.tile._Tile._compute_moments": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.deterministic.tile",
    "bayespy.utils.misc.make_equal_length",
    "len",
    "list",
    "min",
    "numpy.ndim",
    "numpy.shape",
    "numpy.tile",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.deterministic.tile._Tile._compute_plates_from_parent": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "bayespy.utils.misc.multiply_shapes",
    "tuple"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.deterministic.tile._Tile._compute_plates_to_parent": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "len",
    "list",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.deterministic.tile._Tile._compute_weights_to_parent": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.deterministic.functools",
    "bayespy.utils.misc.make_equal_length",
    "bayespy.utils.misc.squeeze_to_dim",
    "len",
    "list",
    "numpy.reshape",
    "numpy.shape",
    "numpy.sum",
    "range",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.dirichlet": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.dirichlet.Concentration": {
  "data": {
   "lineno": 234
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.dirichlet.Concentration.__init__": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.dirichlet.ConcentrationMoments",
    "numpy.log",
    "numpy.ones",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.dirichlet.Concentration._update_distribution_and_lowerbound": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.utils.misc.invpsi",
    "numpy.abs",
    "numpy.any",
    "numpy.inf",
    "numpy.isinf",
    "numpy.ones",
    "numpy.sum",
    "scipy.special.psi"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.dirichlet.Concentration.initialize_from_value": {
  "data": {
   "lineno": 321
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.dirichlet.Concentration.lower_bound_contribution": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "bayespy.utils.linalg.inner"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.dirichlet.Concentration.regularization": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.utils.misc.is_shape_subset",
    "len",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.dirichlet.ConcentrationMoments": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.dirichlet.ConcentrationMoments.__init__": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.dirichlet.ConcentrationMoments.compute_fixed_moments": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "numpy.asanyarray",
    "numpy.ndim",
    "numpy.sum",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.dirichlet.ConcentrationMoments.from_values": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "cls",
    "numpy.ndim",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.dirichlet.Dirichlet": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.dirichlet.DirichletDistribution"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.dirichlet.Dirichlet.__str__": {
  "data": {
   "lineno": 392
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.dirichlet.Dirichlet._constructor": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.dirichlet.ConcentrationMoments",
    "bayespy.inference.vmp.nodes.dirichlet.DirichletMoments",
    "classmethod",
    "cls._distribution",
    "cls._ensure_moments",
    "cls._total_plates"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.dirichlet.DirichletDistribution": {
  "data": {
   "lineno": 107
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.dirichlet.DirichletDistribution.compute_cgf_from_parents": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.dirichlet.DirichletDistribution.compute_fixed_moments_and_f": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "ValueError",
    "numpy.allclose",
    "numpy.any",
    "numpy.asanyarray",
    "numpy.log",
    "numpy.ndim",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.dirichlet.DirichletDistribution.compute_gradient": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "numpy.sum",
    "scipy.special.polygamma"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.dirichlet.DirichletDistribution.compute_message_to_parent": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.dirichlet.DirichletDistribution.compute_moments_and_cgf": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "numpy.asanyarray",
    "numpy.sum",
    "scipy.special.gammaln",
    "scipy.special.psi"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.dirichlet.DirichletDistribution.compute_phi_from_parents": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.dirichlet.DirichletDistribution.random": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "bayespy.utils.random.dirichlet"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.dirichlet.DirichletMoments": {
  "data": {
   "lineno": 65
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.dirichlet.DirichletMoments.__init__": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.dirichlet.DirichletMoments.compute_fixed_moments": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "numpy.allclose",
    "numpy.any",
    "numpy.asanyarray",
    "numpy.log",
    "numpy.ndim",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.dirichlet.DirichletMoments.from_values": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "cls",
    "numpy.ndim",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.dirichlet.linalg": {
  "data": {
   "shadows": "bayespy.utils.linalg"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.dirichlet.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.dirichlet.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.dirichlet.random": {
  "data": {
   "shadows": "bayespy.utils.random"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.dirichlet.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.dot": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.dot.Dot": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.dot.SumMultiply",
    "len"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.dot.SumMultiply": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.dot.SumMultiply.__init__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "GaussianGammaMoments",
    "GaussianMoments",
    "NotImplementedError",
    "ValueError",
    "bayespy.utils.misc.is_string",
    "bayespy.utils.misc.remove_whitespace",
    "int",
    "isinstance",
    "len",
    "list",
    "range",
    "set",
    "super",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.dot.SumMultiply._compute_function": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "Ellipsis",
    "bayespy.utils.misc.multiply",
    "bayespy.utils.misc.zipper_merge",
    "numpy.einsum",
    "zip"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.dot.SumMultiply._compute_moments": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "bayespy.utils.misc.zipper_merge",
    "len",
    "list",
    "max",
    "numpy.einsum",
    "numpy.ndim",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.dot.SumMultiply._message_to_parent": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "bayespy.utils.misc.broadcasted_shape",
    "enumerate",
    "len",
    "list",
    "max",
    "numpy.any",
    "numpy.einsum",
    "numpy.ndim",
    "numpy.ones",
    "numpy.reshape",
    "numpy.shape",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.dot.SumMultiply.get_parameters": {
  "data": {
   "lineno": 418
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.dot.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.dot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.expfamily": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.expfamily.ExponentialFamily": {
  "data": {
   "lineno": 94
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.expfamily.ExponentialFamily.__init__": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.expfamily.useconstructor",
    "bayespy.utils.misc.nans",
    "len",
    "numpy.array",
    "numpy.nan",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.expfamily.ExponentialFamily._constructor": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "classmethod",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.expfamily.ExponentialFamily._decode_parameters": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "numpy.copy"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.expfamily.ExponentialFamily._initialize_from_parent_moments": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.logical_not"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.expfamily.ExponentialFamily._load": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "len",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.expfamily.ExponentialFamily._save": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "bayespy.utils.misc.write_to_hdf5",
    "len",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.expfamily.ExponentialFamily._set_moments_and_cgf": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.expfamily.ExponentialFamily._update_distribution_and_lowerbound": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.expfamily.ExponentialFamily._update_moments_and_cgf": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "numpy.logical_not"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.expfamily.ExponentialFamily._update_phi_from_parents": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.utils.misc.add_leading_axes",
    "bayespy.utils.misc.is_shape_subset",
    "len",
    "numpy.ndim",
    "numpy.reshape",
    "numpy.shape",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.expfamily.ExponentialFamily.get_gradient": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.expfamily.ExponentialFamily.get_parameters": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "numpy.copy"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.expfamily.ExponentialFamily.get_riemannian_gradient": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.expfamily.ExponentialFamily.initialize_from_parameters": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.expfamily.ExponentialFamily.initialize_from_prior": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.expfamily.ExponentialFamily.initialize_from_random": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.expfamily.ExponentialFamily.initialize_from_value": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.inf",
    "numpy.logical_not",
    "numpy.shape",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.expfamily.ExponentialFamily.logpdf": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "NotImplementedError",
    "len",
    "numpy.sum",
    "range",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.expfamily.ExponentialFamily.lower_bound_contribution": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "bayespy.utils.misc.add_leading_axes",
    "bayespy.utils.misc.add_trailing_axes",
    "len",
    "numpy.all",
    "numpy.logical_not",
    "numpy.nan",
    "numpy.ndim",
    "numpy.prod",
    "numpy.shape",
    "numpy.sum",
    "numpy.where",
    "range",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.expfamily.ExponentialFamily.observe": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.expfamily.ExponentialFamily.pdf": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.expfamily.ExponentialFamily.random": {
  "data": {
   "lineno": 538
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.expfamily.ExponentialFamily.set_parameters": {
  "data": {
   "lineno": 330
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.expfamily.ExponentialFamilyDistribution": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.expfamily.ExponentialFamilyDistribution.compute_cgf_from_parents": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.expfamily.ExponentialFamilyDistribution.compute_fixed_moments_and_f": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.expfamily.ExponentialFamilyDistribution.compute_gradient": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.expfamily.ExponentialFamilyDistribution.compute_logpdf": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.sum",
    "numpy.where",
    "range",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.expfamily.ExponentialFamilyDistribution.compute_message_to_parent": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.expfamily.ExponentialFamilyDistribution.compute_moments_and_cgf": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.expfamily.ExponentialFamilyDistribution.compute_phi_from_parents": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.expfamily.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.expfamily.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.expfamily.useconstructor": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.expfamily.useconstructor.constructor_decorator": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "__init__"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.expfamily.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.exponential": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.exponential.Exponential": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.exponential.Exponential.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "NotImplementedError",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.exponential.Exponential._constructor": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.exponential.ExponentialMoments": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "bayespy.inference.vmp.nodes.gate": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.gate.Choose": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "Concatenate",
    "bayespy.inference.vmp.nodes.gate.Gate",
    "len"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gate.Gate": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.gate.Gate.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "isinstance",
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gate.Gate._compute_message_to_parent": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "bayespy.utils.misc.add_leading_axes",
    "bayespy.utils.misc.add_trailing_axes",
    "bayespy.utils.misc.moveaxis",
    "bayespy.utils.misc.sum_product",
    "len",
    "numpy.expand_dims",
    "numpy.ndim",
    "numpy.ones",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gate.Gate._compute_moments": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "abs",
    "bayespy.utils.misc.add_trailing_axes",
    "bayespy.utils.misc.moveaxis",
    "bayespy.utils.misc.sum_product",
    "len",
    "numpy.ndim",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gate.Gate._compute_plates_from_parent": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "len",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gate.Gate._compute_plates_to_parent": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "len",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gate.Gate._compute_weights_to_parent": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "numpy.expand_dims",
    "numpy.ndim"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gate.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.gate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain": {
  "data": {
   "symbols_in_volume": [
    "GaussianMoments",
    "bayespy.inference.vmp.nodes.gaussian_markov_chain.GaussianMarkovChainMoments",
    "bayespy.inference.vmp.nodes.gaussian_markov_chain._MarkovChainToGaussian"
   ]
  },
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.GaussianMarkovChain": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.gaussian_markov_chain._TemplateGaussianMarkovChain"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.GaussianMarkovChain.__init__": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.GaussianMarkovChain._constructor": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "Exception",
    "GaussianGammaMoments",
    "GaussianMoments",
    "GaussianWishartMoments",
    "ValueError",
    "WrapToGaussianGamma",
    "WrapToGaussianWishart",
    "bayespy.inference.vmp.nodes.gaussian_markov_chain.GaussianMarkovChainDistribution",
    "bayespy.inference.vmp.nodes.gaussian_markov_chain.GaussianMarkovChainMoments",
    "classmethod",
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.GaussianMarkovChain.rotate": {
  "data": {
   "lineno": 911
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.GaussianMarkovChainDistribution": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.gaussian_markov_chain.TemplateGaussianMarkovChainDistribution"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.GaussianMarkovChainDistribution.compute_cgf_from_parents": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.gaussian_markov_chain._compute_cgf_for_gaussian_markov_chain",
    "len",
    "numpy.einsum",
    "numpy.ndim",
    "numpy.shape",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.GaussianMarkovChainDistribution.compute_message_to_parent": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "IndexError",
    "len",
    "numpy.concatenate",
    "numpy.einsum",
    "numpy.shape",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.GaussianMarkovChainDistribution.compute_phi_from_parents": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "bayespy.utils.linalg.transpose",
    "bayespy.utils.misc.broadcasted_shape",
    "bayespy.utils.misc.diag",
    "len",
    "numpy.einsum",
    "numpy.ones",
    "numpy.shape",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.GaussianMarkovChainDistribution.compute_weights_to_parent": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "ValueError",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.GaussianMarkovChainDistribution.plates_from_parent": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.GaussianMarkovChainDistribution.plates_to_parent": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.GaussianMarkovChainMoments": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.GaussianMarkovChainMoments.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.GaussianMarkovChainMoments.compute_fixed_moments": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.GaussianMarkovChainMoments.rotate": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "bayespy.utils.linalg.dot",
    "bayespy.utils.linalg.mvdot",
    "numpy.linalg.slogdet",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.SwitchingGaussianMarkovChain": {
  "data": {
   "lineno": 1743,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.gaussian_markov_chain._TemplateGaussianMarkovChain"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.SwitchingGaussianMarkovChain.__init__": {
  "data": {
   "lineno": 1858,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.SwitchingGaussianMarkovChain._constructor": {
  "data": {
   "lineno": 1865,
   "symbols_in_volume": [
    "Exception",
    "GammaMoments",
    "GaussianMoments",
    "ValueError",
    "WishartMoments",
    "bayespy.inference.vmp.nodes.gaussian_markov_chain.GaussianMarkovChainMoments",
    "bayespy.inference.vmp.nodes.gaussian_markov_chain.SwitchingGaussianMarkovChainDistribution",
    "classmethod",
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.SwitchingGaussianMarkovChainDistribution": {
  "data": {
   "lineno": 1454,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.gaussian_markov_chain.TemplateGaussianMarkovChainDistribution"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.SwitchingGaussianMarkovChainDistribution.__init__": {
  "data": {
   "lineno": 1460,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.SwitchingGaussianMarkovChainDistribution.compute_cgf_from_parents": {
  "data": {
   "lineno": 1666,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.gaussian_markov_chain._compute_cgf_for_gaussian_markov_chain"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.SwitchingGaussianMarkovChainDistribution.compute_message_to_parent": {
  "data": {
   "lineno": 1464,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "bayespy.utils.misc.atleast_nd",
    "numpy.einsum",
    "numpy.log",
    "numpy.ndim",
    "numpy.pi",
    "numpy.shape",
    "numpy.squeeze",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.SwitchingGaussianMarkovChainDistribution.compute_phi_from_parents": {
  "data": {
   "lineno": 1583,
   "symbols_in_volume": [
    "Exception",
    "bayespy.utils.misc.atleast_nd",
    "bayespy.utils.misc.broadcasted_shape",
    "numpy.einsum",
    "numpy.identity",
    "numpy.shape",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.SwitchingGaussianMarkovChainDistribution.compute_weights_to_parent": {
  "data": {
   "lineno": 1567,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.SwitchingGaussianMarkovChainDistribution.plates_from_parent": {
  "data": {
   "lineno": 1709,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.SwitchingGaussianMarkovChainDistribution.plates_to_parent": {
  "data": {
   "lineno": 1677,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.TemplateGaussianMarkovChainDistribution": {
  "data": {
   "lineno": 68
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.TemplateGaussianMarkovChainDistribution.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.gaussian_markov_chain.GaussianMarkovChainMoments",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.TemplateGaussianMarkovChainDistribution.compute_cgf_from_parents": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.TemplateGaussianMarkovChainDistribution.compute_fixed_moments_and_f": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.newaxis",
    "numpy.pi",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.TemplateGaussianMarkovChainDistribution.compute_message_to_parent": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.TemplateGaussianMarkovChainDistribution.compute_moments_and_cgf": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "bayespy.utils.linalg.block_banded_solve",
    "numpy.einsum",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.TemplateGaussianMarkovChainDistribution.compute_phi_from_parents": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.TemplateGaussianMarkovChainDistribution.compute_rotation_bound": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "bayespy.utils.linalg.dot",
    "bayespy.utils.misc.make_diag",
    "dot",
    "tracedot"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.TemplateGaussianMarkovChainDistribution.compute_weights_to_parent": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.TemplateGaussianMarkovChainDistribution.plates_from_parent": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.TemplateGaussianMarkovChainDistribution.plates_to_parent": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.TemplateGaussianMarkovChainDistribution.rotate": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "bayespy.utils.linalg.dot",
    "bayespy.utils.linalg.mvdot",
    "numpy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.VaryingGaussianMarkovChain": {
  "data": {
   "lineno": 1200,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.gaussian_markov_chain._TemplateGaussianMarkovChain"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.VaryingGaussianMarkovChain.__init__": {
  "data": {
   "lineno": 1323,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.VaryingGaussianMarkovChain._constructor": {
  "data": {
   "lineno": 1330,
   "symbols_in_volume": [
    "Exception",
    "GammaMoments",
    "GaussianMoments",
    "ValueError",
    "WishartMoments",
    "bayespy.inference.vmp.nodes.gaussian_markov_chain.GaussianMarkovChainMoments",
    "bayespy.inference.vmp.nodes.gaussian_markov_chain.VaryingGaussianMarkovChainDistribution",
    "classmethod",
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.VaryingGaussianMarkovChainDistribution": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.gaussian_markov_chain.TemplateGaussianMarkovChainDistribution"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.VaryingGaussianMarkovChainDistribution.compute_cgf_from_parents": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.gaussian_markov_chain._compute_cgf_for_gaussian_markov_chain"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.VaryingGaussianMarkovChainDistribution.compute_message_to_parent": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "bayespy.utils.misc.atleast_nd",
    "numpy.atleast_2d",
    "numpy.einsum",
    "numpy.ndim",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.VaryingGaussianMarkovChainDistribution.compute_phi_from_parents": {
  "data": {
   "lineno": 1038,
   "symbols_in_volume": [
    "Exception",
    "bayespy.utils.misc.broadcasted_shape",
    "numpy.einsum",
    "numpy.identity",
    "numpy.ndim",
    "numpy.newaxis",
    "numpy.shape",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.VaryingGaussianMarkovChainDistribution.compute_weights_to_parent": {
  "data": {
   "lineno": 1020,
   "symbols_in_volume": [
    "ValueError",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.VaryingGaussianMarkovChainDistribution.plates_from_parent": {
  "data": {
   "lineno": 1166,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.VaryingGaussianMarkovChainDistribution.plates_to_parent": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain._MarkovChainToGaussian": {
  "data": {
   "lineno": 1987
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain._MarkovChainToGaussian.__init__": {
  "data": {
   "lineno": 1994,
   "symbols_in_volume": [
    "GaussianMoments",
    "bayespy.inference.vmp.nodes.gaussian_markov_chain.GaussianMarkovChainMoments",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain._MarkovChainToGaussian._compute_message_to_parent": {
  "data": {
   "lineno": 2059,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain._MarkovChainToGaussian._compute_moments": {
  "data": {
   "lineno": 2034
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain._MarkovChainToGaussian._compute_weights_to_parent": {
  "data": {
   "lineno": 2052,
   "symbols_in_volume": [
    "numpy.ndim",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain._MarkovChainToGaussian._plates_from_parent": {
  "data": {
   "lineno": 2025,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain._MarkovChainToGaussian._plates_to_parent": {
  "data": {
   "lineno": 2006
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain._TemplateGaussianMarkovChain": {
  "data": {
   "lineno": 224
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain._TemplateGaussianMarkovChain.random": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain._compute_cgf_for_gaussian_markov_chain": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "numpy.ndim",
    "numpy.shape",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.linalg": {
  "data": {
   "shadows": "bayespy.utils.linalg"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.gaussian_markov_chain.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.gp": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.gp.NodeConstantGaussianProcess": {
  "data": {
   "lineno": 445
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.gp.NodeConstantGaussianProcess.__init__": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.NodeConstantGaussianProcess.message_to_child": {
  "data": {
   "lineno": 451
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.NodeConstantGaussianProcess.message_to_child.func": {
  "data": {
   "lineno": 454
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.NodeCovarianceFunction": {
  "data": {
   "lineno": 310
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.gp.NodeCovarianceFunction.__init__": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "NodeConstant",
    "is_numeric",
    "len",
    "list",
    "numpy.asanyarray",
    "numpy.inf",
    "numpy.shape",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.NodeCovarianceFunction.covariance_function": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.NodeCovarianceFunction.covariance_function.cov": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "len",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.NodeCovarianceFunction.message_to_child": {
  "data": {
   "lineno": 325
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.NodeCovarianceFunctionDelta": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.gp.NodeCovarianceFunction"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.gp.NodeCovarianceFunctionDelta.__init__": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.gp.NodeCovarianceFunction",
    "bayespy.inference.vmp.nodes.gp.covfunc_delta"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.NodeCovarianceFunctionSquaredExponential": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.gp.NodeCovarianceFunction"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.gp.NodeCovarianceFunctionSquaredExponential.__init__": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.gp.NodeCovarianceFunction",
    "bayespy.inference.vmp.nodes.gp.covfunc_se"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.NodeCovarianceFunctionSum": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.gp.NodeCovarianceFunction"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.gp.NodeCovarianceFunctionSum.__init__": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.gp.NodeCovarianceFunction"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.NodeCovarianceFunctionSum.covariance_function": {
  "data": {
   "lineno": 377
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.NodeCovarianceFunctionSum.covariance_function.cov": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "k",
    "list"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.NodeGaussianProcess": {
  "data": {
   "lineno": 648
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.gp.NodeGaussianProcess.__init__": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "k",
    "m",
    "numpy.array",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.NodeGaussianProcess.get_parameters": {
  "data": {
   "lineno": 686
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.NodeGaussianProcess.lower_bound_contribution": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "Exception",
    "bayespy.inference.vmp.nodes.gp.gaussian_logpdf",
    "chol",
    "chol_solve",
    "func",
    "k",
    "logdet_chol",
    "m",
    "numpy.dot",
    "numpy.inf",
    "numpy.size",
    "numpy.sum",
    "numpy.trace",
    "print",
    "scipy.linalg.LinAlgError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.NodeGaussianProcess.message_to_child": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.NodeGaussianProcess.message_to_parent": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "Exception",
    "k"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.NodeGaussianProcess.observe": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "Exception",
    "numpy.ndim",
    "numpy.shape",
    "print"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.NodeGaussianProcess.update": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.gp.gp_posterior_moment_function",
    "k",
    "m",
    "numpy.array",
    "numpy.concatenate",
    "scipy.linalg.block_diag"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.NodeMultiCovarianceFunction": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.gp.NodeCovarianceFunction"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.gp.NodeMultiCovarianceFunction.__init__": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.gp.NodeCovarianceFunction"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.NodeMultiCovarianceFunction.covfunc": {
  "data": {
   "lineno": 422
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.NodeMultiCovarianceFunction.covfunc.cov": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "k",
    "list"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.NodeMultiGaussianProcess": {
  "data": {
   "lineno": 470
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.gp.NodeMultiGaussianProcess.__init__": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "k",
    "m",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.NodeMultiGaussianProcess.get_parameters": {
  "data": {
   "lineno": 506
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.NodeMultiGaussianProcess.lower_bound_contribution": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "Exception",
    "bayespy.inference.vmp.nodes.gp.gaussian_logpdf",
    "chol",
    "chol_solve",
    "func",
    "k",
    "logdet_chol",
    "m",
    "numpy.bmat",
    "numpy.dot",
    "numpy.inf",
    "numpy.size",
    "numpy.sum",
    "numpy.trace",
    "numpy.vstack",
    "print",
    "scipy.linalg.LinAlgError",
    "zip"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.NodeMultiGaussianProcess.message_to_child": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.NodeMultiGaussianProcess.message_to_parent": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "Exception",
    "k"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.NodeMultiGaussianProcess.observe": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "Exception",
    "numpy.ndim",
    "numpy.shape",
    "print"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.NodeMultiGaussianProcess.update": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.gp.gp_posterior_moment_function",
    "k",
    "m",
    "numpy.array",
    "numpy.concatenate",
    "scipy.linalg.block_diag"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.covfunc_delta": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.gp.gp_cov_delta",
    "bayespy.inference.vmp.nodes.gp.gp_preprocess_inputs",
    "len",
    "numpy.ones",
    "numpy.shape",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.covfunc_se": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.gp.gp_cov_se",
    "bayespy.inference.vmp.nodes.gp.gp_preprocess_inputs",
    "bayespy.inference.vmp.nodes.gp.squared_distance",
    "len",
    "numpy.ones",
    "numpy.shape",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.decomp": {
  "data": {
   "shadows": "scipy.linalg.decomp_cholesky"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.gp.distance": {
  "data": {
   "shadows": "scipy.spatial.distance"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.gp.gaussian_logpdf": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.gp_cov_delta": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "numpy.identity"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.gp_cov_se": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.gp_posterior_moment_function": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "chol",
    "chol_solve",
    "k",
    "len",
    "m"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.gp_posterior_moment_function.get_moments": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "chol_solve",
    "k",
    "m",
    "numpy.dot",
    "numpy.einsum"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.gp_preprocess_inputs": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "Exception",
    "bayespy.inference.vmp.nodes.gp.gp_standardize_input",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.gp_standardize_input": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "add_trailing_axes",
    "numpy.ndim"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.gp.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.gp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.gp.profile": {
  "data": {
   "shadows": "profile"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.gp.sp": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.gp.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.gp.squared_distance": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "numpy.reshape",
    "numpy.shape",
    "scipy.spatial.distance.cdist"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.gp.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.logistic": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.logistic.CategoricalDistribution": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.logistic.CategoricalDistribution.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.logistic.CategoricalDistribution.compute_cgf_from_parents": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.logistic.CategoricalDistribution.compute_fixed_moments_and_f": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.utils.misc.isinteger",
    "numpy.any",
    "numpy.arange",
    "numpy.asanyarray",
    "numpy.ravel",
    "numpy.reshape",
    "numpy.shape",
    "numpy.size",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.logistic.CategoricalDistribution.compute_message_to_parent": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.logistic.CategoricalDistribution.compute_moments_and_cgf": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.logistic.CategoricalDistribution.compute_phi_from_parents": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.logistic.CategoricalDistribution.random": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "bayespy.utils.random.categorical",
    "numpy.amax",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.logistic.Logistic": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "GaussianMoments"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.logistic.Logistic.__init__": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.logistic.Logistic.__str__": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.logistic.Logistic._constructor": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "CategoricalMoments",
    "bayespy.inference.vmp.nodes.logistic.CategoricalDistribution",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.logistic.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.logistic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.logistic.random": {
  "data": {
   "shadows": "bayespy.utils.random"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.logpdf": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.logpdf.LogPDF": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.logpdf.LogPDF.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.logpdf.LogPDF._constructor": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "Moments",
    "NotImplementedError",
    "bayespy.inference.vmp.nodes.logpdf.LogPDFDistribution",
    "classmethod",
    "enumerate",
    "len",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.logpdf.LogPDF._get_message_and_mask_to_parent": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.logpdf.LogPDF._get_message_and_mask_to_parent.logpdf_sampler": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.logpdf.LogPDF.observe": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "Exception",
    "enumerate",
    "numpy.isnan",
    "numpy.shape",
    "str"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.logpdf.LogPDFDistribution": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.logpdf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.mixture": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.mixture.Mixture": {
  "data": {
   "lineno": 354
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.mixture.Mixture.__init__": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.mixture.Mixture._constructor": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "CategoricalMoments",
    "ValueError",
    "abs",
    "bayespy.inference.vmp.nodes.mixture.MixtureDistribution",
    "classmethod",
    "len",
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.mixture.Mixture.integrated_logpdf_from_parents": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "NotImplementedError",
    "bayespy.utils.misc.moveaxis",
    "len",
    "numpy.exp",
    "numpy.expand_dims",
    "numpy.log",
    "numpy.max",
    "numpy.squeeze",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.mixture.MixtureDistribution": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.mixture.MixtureDistribution.__init__": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.mixture.MixtureDistribution.compute_cgf_from_parents": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "abs",
    "bayespy.utils.misc.moveaxis",
    "bayespy.utils.misc.sum_product",
    "numpy.expand_dims",
    "numpy.ndim"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.mixture.MixtureDistribution.compute_fixed_moments_and_f": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.mixture.MixtureDistribution.compute_gradient": {
  "data": {
   "lineno": 347
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.mixture.MixtureDistribution.compute_message_to_parent": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "abs",
    "bayespy.utils.misc.add_trailing_axes",
    "bayespy.utils.misc.atleast_nd",
    "bayespy.utils.misc.moveaxis",
    "len",
    "list",
    "numpy.expand_dims",
    "numpy.ndim",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.mixture.MixtureDistribution.compute_moments_and_cgf": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.mixture.MixtureDistribution.compute_phi_from_parents": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "RuntimeError",
    "abs",
    "bayespy.inference.vmp.nodes.mixture.warnings",
    "bayespy.utils.misc.add_trailing_axes",
    "bayespy.utils.misc.moveaxis",
    "bayespy.utils.misc.sum_product",
    "len",
    "list",
    "numpy.any",
    "numpy.isnan",
    "numpy.ndim",
    "numpy.where",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.mixture.MixtureDistribution.compute_weights_to_parent": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "numpy.expand_dims",
    "numpy.ndim"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.mixture.MixtureDistribution.plates_from_parent": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "abs",
    "len",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.mixture.MixtureDistribution.plates_to_parent": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.mixture.MixtureDistribution.random": {
  "data": {
   "lineno": 340
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.mixture.MultiMixture": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "Ellipsis",
    "bayespy.inference.vmp.nodes.mixture.Mixture",
    "bayespy.utils.misc.zipper_merge",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "numpy.asanyarray"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.mixture.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.mixture.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.mixture.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.ml": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.ml.DeltaClassConverterMoments": {
  "data": {
   "lineno": 66
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.ml.DeltaClassConverterMoments.__init__": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.DeltaClassConverterMoments.get_instance_conversion_kwargs": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.DeltaClassConverterMoments.get_instance_converter": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.ml.DeltaInstanceConverter"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.DeltaInstanceConverter": {
  "data": {
   "lineno": 112
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.ml.DeltaInstanceConverter.__init__": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.DeltaInstanceConverter.compute_message_to_parent": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.DeltaInstanceConverter.compute_moments": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.DeltaInstanceConverter.compute_weights_to_parent": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.DeltaInstanceConverter.plates_from_parent": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.DeltaInstanceConverter.plates_multiplier_from_parent": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.DeltaInstanceConverter.plates_to_parent": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.DeltaMoments": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.ml.DeltaMoments.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.DeltaMoments.compute_dims_from_values": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.DeltaMoments.compute_fixed_moments": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.DeltaMoments.from_values": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "cls",
    "numpy.ndim",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.DeltaMoments.get_converter": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.ml.DeltaMoments",
    "bayespy.inference.vmp.nodes.ml.get_delta_moments_class_converter",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.DeltaMoments.get_instance_conversion_kwargs": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.DeltaMoments.get_instance_converter": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.Function": {
  "data": {
   "lineno": 205
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.ml.Function.__init__": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.ml.DeltaMoments",
    "numpy.shape",
    "super",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.Function._compute_message_to_parent": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.Function._compute_moments": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.Function._compute_plates_from_parent": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.Function._compute_plates_to_parent": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.Function._compute_weights_to_parent": {
  "data": {
   "lineno": 237
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.MaximumLikelihood": {
  "data": {
   "lineno": 146
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.ml.MaximumLikelihood.__init__": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.ml.DeltaMoments",
    "numpy.shape",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.MaximumLikelihood._get_id_list": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.MaximumLikelihood._update_distribution_and_lowerbound": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.MaximumLikelihood.get_gradient": {
  "data": {
   "lineno": 186
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.MaximumLikelihood.get_moments": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.MaximumLikelihood.get_parameters": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.MaximumLikelihood.get_riemannian_gradient": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.MaximumLikelihood.lower_bound_contribution": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.MaximumLikelihood.set_parameters": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "Exception",
    "len"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.get_delta_moments_class_converter": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.get_delta_moments_class_converter.DeltaClassConverter": {
  "data": {
   "lineno": 92
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.ml.get_delta_moments_class_converter.DeltaClassConverter.__init__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.ml.DeltaClassConverterMoments",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.get_delta_moments_class_converter.DeltaClassConverter._compute_message_to_parent": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.get_delta_moments_class_converter.DeltaClassConverter._compute_moments": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.ml.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.multinomial": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.multinomial.Multinomial": {
  "data": {
   "lineno": 216
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.multinomial.Multinomial.__init__": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.multinomial.Multinomial.__str__": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "bayespy.utils.misc.logsumexp",
    "numpy.exp",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.multinomial.Multinomial._constructor": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.multinomial.MultinomialDistribution",
    "bayespy.inference.vmp.nodes.multinomial.MultinomialMoments",
    "classmethod",
    "cls._ensure_moments",
    "cls._total_plates",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.multinomial.MultinomialDistribution": {
  "data": {
   "lineno": 62
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.multinomial.MultinomialDistribution.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.utils.misc.isinteger",
    "numpy.any",
    "numpy.asanyarray",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.multinomial.MultinomialDistribution.compute_cgf_from_parents": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.multinomial.MultinomialDistribution.compute_fixed_moments_and_f": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.utils.misc.isinteger",
    "numpy.any",
    "numpy.asanyarray",
    "numpy.sum",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.multinomial.MultinomialDistribution.compute_gradient": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "bayespy.utils.linalg.inner"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.multinomial.MultinomialDistribution.compute_message_to_parent": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.multinomial.MultinomialDistribution.compute_moments_and_cgf": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "bayespy.utils.misc.normalized_exp",
    "numpy.expand_dims",
    "numpy.squeeze"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.multinomial.MultinomialDistribution.compute_phi_from_parents": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.multinomial.MultinomialDistribution.random": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "bayespy.utils.misc.normalized_exp",
    "bayespy.utils.random.multinomial"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.multinomial.MultinomialMoments": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.multinomial.MultinomialMoments.__init__": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.multinomial.MultinomialMoments.compute_fixed_moments": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.utils.misc.isinteger",
    "numpy.any",
    "numpy.asanyarray"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.multinomial.MultinomialMoments.from_values": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.multinomial.linalg": {
  "data": {
   "shadows": "bayespy.utils.linalg"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.multinomial.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.multinomial.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.multinomial.random": {
  "data": {
   "shadows": "bayespy.utils.random"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.multinomial.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.node": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.node.AddPlateAxis": {
  "data": {
   "lineno": 1174,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.AddPlateAxis._AddPlateAxis": {
  "data": {
   "lineno": 1179
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.node.AddPlateAxis._AddPlateAxis.__init__": {
  "data": {
   "lineno": 1181,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.AddPlateAxis._AddPlateAxis._compute_message_to_parent": {
  "data": {
   "lineno": 1224,
   "symbols_in_volume": [
    "abs",
    "len",
    "list",
    "m",
    "numpy.ndim",
    "numpy.reshape",
    "numpy.shape",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.AddPlateAxis._AddPlateAxis._compute_moments": {
  "data": {
   "lineno": 1240,
   "symbols_in_volume": [
    "abs",
    "len",
    "list",
    "numpy.ndim",
    "numpy.reshape",
    "numpy.shape",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.AddPlateAxis._AddPlateAxis._compute_weights_to_parent": {
  "data": {
   "lineno": 1215,
   "symbols_in_volume": [
    "abs",
    "list",
    "numpy.ndim",
    "numpy.reshape",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.AddPlateAxis._AddPlateAxis._plates_from_parent": {
  "data": {
   "lineno": 1209,
   "symbols_in_volume": [
    "len",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.AddPlateAxis._AddPlateAxis._plates_to_parent": {
  "data": {
   "lineno": 1203,
   "symbols_in_volume": [
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Moments": {
  "data": {
   "lineno": 50
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.node.Moments.NoConverterError": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.node.Moments.add_converter": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Moments.compute_fixed_moments": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Moments.from_values": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Moments.get_converter": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.node.Moments",
    "bayespy.utils.misc.composite_function",
    "isinstance",
    "issubclass",
    "len",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Moments.get_instance_conversion_kwargs": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Moments.get_instance_converter": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "NotImplementedError",
    "len"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node": {
  "data": {
   "lineno": 223
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.node.Node.__getitem__": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.node.Slice"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node.__init__": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "bayespy.inference.vmp.nodes.node.ensureparents",
    "enumerate",
    "len",
    "list",
    "numpy.array",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node._add_child": {
  "data": {
   "lineno": 426
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node._compute_message": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.inference.vmp.nodes.node.Node",
    "bayespy.utils.misc.broadcasted_shape",
    "bayespy.utils.misc.is_shape_subset",
    "bayespy.utils.misc.make_equal_ndim",
    "bayespy.utils.misc.zipper_merge",
    "len",
    "list",
    "min",
    "numpy.einsum",
    "numpy.reshape",
    "numpy.shape",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node._compute_plates_from_parent": {
  "data": {
   "lineno": 384
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node._compute_plates_multiplier_from_parent": {
  "data": {
   "lineno": 389
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node._compute_plates_to_parent": {
  "data": {
   "lineno": 379
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node._compute_weights_to_parent": {
  "data": {
   "lineno": 478
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node._ensure_moments": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "AttributeError",
    "Constant",
    "NodeConverter",
    "converter",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node._get_id_list": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node._get_pdf_nodes_conditioned_on_parents": {
  "data": {
   "lineno": 312
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node._mask_to_parent": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.utils.misc.axes_to_collapse",
    "bayespy.utils.misc.is_shape_subset",
    "bayespy.utils.misc.squeeze_to_dim",
    "len",
    "numpy.any",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node._message_from_children": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "bayespy.utils.misc.broadcasted_shape",
    "callable",
    "join",
    "len",
    "m",
    "msg",
    "numpy.shape",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node._message_from_children.join": {
  "data": {
   "lineno": 669
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node._message_from_parents": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "enumerate",
    "list"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node._message_to_child": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "RuntimeError",
    "bayespy.utils.misc.is_shape_subset",
    "len",
    "numpy.shape",
    "zip"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node._message_to_parent": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "bayespy.utils.misc.add_trailing_axes",
    "bayespy.utils.misc.broadcasted_shape",
    "bayespy.utils.misc.squeeze",
    "bayespy.utils.misc.sum_multiply_to_plates",
    "callable",
    "len",
    "m",
    "numpy.shape",
    "numpy.where",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node._message_to_parent.m_function": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "bayespy.utils.misc.axes_to_collapse",
    "bayespy.utils.misc.squeeze_to_dim",
    "bayespy.utils.misc.sum_multiply",
    "len",
    "m",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node._plates_from_parent": {
  "data": {
   "lineno": 398
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node._plates_multiplier_from_parent": {
  "data": {
   "lineno": 403
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node._plates_to_parent": {
  "data": {
   "lineno": 394
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node._remove_child": {
  "data": {
   "lineno": 440
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node._set_mask": {
  "data": {
   "lineno": 452
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node._total_plates": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.utils.misc.broadcasted_shape",
    "bayespy.utils.misc.is_shape_subset",
    "classmethod",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node._update_mask": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.utils.misc.is_shape_subset",
    "numpy.array",
    "numpy.logical_or",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node.add_plate_axis": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.node.AddPlateAxis"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node.broadcasting_multiplier": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "bayespy.utils.misc.broadcasting_multiplier",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node.delete": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node.get_mask": {
  "data": {
   "lineno": 446
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node.get_moments": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node.get_pdf_nodes": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node.get_shape": {
  "data": {
   "lineno": 423
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node.has_plotter": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "callable"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node.move_plates": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "_MovePlate"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node.plates_multiplier": {
  "data": {
   "lineno": 416
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node.plot": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "Exception",
    "callable",
    "matplotlib.pyplot.gcf"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Node.set_plotter": {
  "data": {
   "lineno": 771
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.NodeConstantScalar": {
  "data": {
   "lineno": 1268,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.node.Node"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.node.NodeConstantScalar.__init__": {
  "data": {
   "lineno": 1274,
   "symbols_in_volume": [
    "numpy.shape",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.NodeConstantScalar.add_to_gradient": {
  "data": {
   "lineno": 1296
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.NodeConstantScalar.compute_fixed_u_and_f": {
  "data": {
   "lineno": 1269,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.NodeConstantScalar.message_to_child": {
  "data": {
   "lineno": 1299,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.NodeConstantScalar.start_optimization": {
  "data": {
   "lineno": 1281
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.NodeConstantScalar.start_optimization.gradient": {
  "data": {
   "lineno": 1289
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.NodeConstantScalar.start_optimization.transform": {
  "data": {
   "lineno": 1285,
   "symbols_in_volume": [
    "numpy.shape",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.NodeConstantScalar.stop_optimization": {
  "data": {
   "lineno": 1308
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Slice": {
  "data": {
   "lineno": 868
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.node.Slice.__init__": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "Ellipsis",
    "IndexError",
    "TypeError",
    "bayespy.inference.vmp.nodes.node.slicelen",
    "bayespy.utils.misc.is_scalar_integer",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "slice",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Slice.__reverse_indexing": {
  "data": {
   "lineno": 1020,
   "symbols_in_volume": [
    "RuntimeError",
    "bayespy.inference.vmp.nodes.node.slicelen",
    "bayespy.utils.misc.is_scalar_integer",
    "isinstance",
    "len",
    "numpy.ndim",
    "numpy.shape",
    "numpy.zeros",
    "reversed",
    "slice",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Slice._compute_message_to_parent": {
  "data": {
   "lineno": 1098,
   "symbols_in_volume": [
    "ValueError",
    "m",
    "msg",
    "zip"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Slice._compute_moments": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "numpy.shape",
    "range",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Slice._compute_weights_to_parent": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Slice._plates_from_parent": {
  "data": {
   "lineno": 989,
   "symbols_in_volume": [
    "IndexError",
    "RuntimeError",
    "bayespy.inference.vmp.nodes.node.slicelen",
    "bayespy.utils.misc.is_scalar_integer",
    "isinstance",
    "list",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.Slice._plates_to_parent": {
  "data": {
   "lineno": 986
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.ensureparents": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.ensureparents.wrapper": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.inference.vmp.nodes.node.functools",
    "func",
    "zip"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.node.message_sum_multiply": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "bayespy.utils.misc.axes_to_collapse",
    "bayespy.utils.misc.broadcasted_shape",
    "bayespy.utils.misc.squeeze_to_dim",
    "bayespy.utils.misc.sum_multiply",
    "len",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.node.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.node.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.node.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.node.slicelen": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "bayespy.utils.misc.ceildiv",
    "max",
    "slice"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.point_estimate": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.point_estimate.Constant": {
  "data": {
   "lineno": 137
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.point_estimate.Constant.__init__": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "issubclass",
    "len",
    "numpy.asanyarray",
    "numpy.shape",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.point_estimate.Constant._get_id_list": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.point_estimate.Constant.get_moments": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.point_estimate.Constant.lower_bound_contribution": {
  "data": {
   "lineno": 195
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.point_estimate.Constant.set_value": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "numpy.asanyarray",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.point_estimate.DeltaMoments": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.point_estimate.DeltaMoments.compute_dims_from_values": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.point_estimate.DeltaMoments.compute_fixed_moments": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.point_estimate.DeltaToAny": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.point_estimate.DeltaToAny.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.point_estimate.DeltaMoments",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.point_estimate.DeltaToAny._compute_message_to_parent": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.point_estimate.DeltaToAny._compute_moments": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.point_estimate.DeltaToAny._compute_weights_to_parent": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.point_estimate.DeltaToAny._plates_from_parent": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.point_estimate.DeltaToAny._plates_to_parent": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.point_estimate.PositiveScalar": {
  "data": {
   "lineno": 133
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.point_estimate.Scalar": {
  "data": {
   "lineno": 104
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.point_estimate.Scalar.__init__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.point_estimate.Scalar.get_gradient": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.point_estimate.Scalar.get_parameters": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.point_estimate.Scalar.get_riemannian_gradient": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.point_estimate.Scalar.set_parameters": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "Exception",
    "len"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.point_estimate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.poisson": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.poisson.Poisson": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "GammaMoments",
    "bayespy.inference.vmp.nodes.poisson.PoissonDistribution",
    "bayespy.inference.vmp.nodes.poisson.PoissonMoments"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.poisson.Poisson.__init__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.poisson.Poisson.__str__": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.poisson.PoissonDistribution": {
  "data": {
   "lineno": 55
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.poisson.PoissonDistribution.compute_cgf_from_parents": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.poisson.PoissonDistribution.compute_fixed_moments_and_f": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.utils.misc.isinteger",
    "numpy.any",
    "numpy.asanyarray",
    "numpy.copy",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.poisson.PoissonDistribution.compute_message_to_parent": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "numpy.copy"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.poisson.PoissonDistribution.compute_moments_and_cgf": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.poisson.PoissonDistribution.compute_phi_from_parents": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.poisson.PoissonDistribution.random": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.random.poisson"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.poisson.PoissonMoments": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.poisson.PoissonMoments.compute_fixed_moments": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.utils.misc.isinteger",
    "numpy.asanyarray"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.poisson.PoissonMoments.from_values": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.poisson.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.poisson.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.poisson.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.stochastic": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.stochastic.Distribution": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.stochastic.Distribution.compute_message_to_parent": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.stochastic.Distribution.compute_weights_to_parent": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.stochastic.Distribution.plates_from_parent": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.stochastic.Distribution.plates_to_parent": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.stochastic.Distribution.random": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.stochastic.Stochastic": {
  "data": {
   "lineno": 74
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.stochastic.Stochastic.__init__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "bayespy.utils.misc.nans",
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.stochastic.Stochastic.__str__": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.stochastic.Stochastic._check_shape": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.utils.misc.is_shape_subset",
    "len",
    "numpy.shape",
    "zip"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.stochastic.Stochastic._compute_plates_from_parent": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.stochastic.Stochastic._compute_plates_to_parent": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.stochastic.Stochastic._compute_weights_to_parent": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.stochastic.Stochastic._get_id_list": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.stochastic.Stochastic._get_message_and_mask_to_parent": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.stochastic.Stochastic._get_pdf_nodes_conditioned_on_parents": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.stochastic.Stochastic._load": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "len",
    "numpy.any",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.stochastic.Stochastic._save": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "bayespy.utils.misc.write_to_hdf5",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.stochastic.Stochastic._set_mask": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "numpy.logical_or"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.stochastic.Stochastic._set_moments": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "RuntimeError",
    "bayespy.utils.misc.add_leading_axes",
    "bayespy.utils.misc.add_trailing_axes",
    "bayespy.utils.misc.broadcasted_shape_from_arrays",
    "bayespy.utils.misc.repeat_to_shape",
    "len",
    "numpy.copyto",
    "numpy.ndim",
    "numpy.shape",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.stochastic.Stochastic._update_distribution_and_lowerbound": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.stochastic.Stochastic.get_moments": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.stochastic.Stochastic.get_pdf_nodes": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.stochastic.Stochastic.load": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.stochastic.h5py"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.stochastic.Stochastic.lowerbound": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.stochastic.Stochastic.observe": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.stochastic.Stochastic.random": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.stochastic.Stochastic.save": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.inference.vmp.nodes.stochastic.h5py"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.stochastic.Stochastic.show": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.stochastic.Stochastic.unobserve": {
  "data": {
   "lineno": 282
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.stochastic.Stochastic.update": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.stochastic.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.stochastic.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.stochastic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.take": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.take.Take": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.take.Take.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.utils.misc.is_scalar_integer",
    "issubclass",
    "len",
    "numpy.any",
    "numpy.array",
    "numpy.integer",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.take.Take._compute_message_to_parent": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "bayespy.utils.misc.put_simple",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.take.Take._compute_moments": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "numpy.take",
    "zip"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.take.Take._compute_plates_from_parent": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.take.Take._compute_plates_multiplier_from_parent": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "NotImplementedError",
    "any"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.take.Take._compute_plates_to_parent": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "RuntimeError",
    "numpy.ndim"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.take.Take._compute_weights_to_parent": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "bayespy.utils.misc.put_simple"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.take.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.take.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.tests.test_bernoulli": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.tests.test_bernoulli.Bernoulli": {
  "data": {
   "shadows": "bayespy.nodes.Bernoulli"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_bernoulli.Beta": {
  "data": {
   "shadows": "bayespy.nodes.Beta"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_bernoulli.Mixture": {
  "data": {
   "shadows": "bayespy.nodes.Mixture"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_bernoulli.TestBernoulli": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "bayespy.utils.misc.TestCase"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_bernoulli.TestBernoulli.test_init": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.nodes.Bernoulli",
    "bayespy.nodes.Beta",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_bernoulli.TestBernoulli.test_mixture": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "bayespy.nodes.Bernoulli",
    "bayespy.nodes.Mixture",
    "len"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_bernoulli.TestBernoulli.test_moments": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "bayespy.nodes.Bernoulli",
    "bayespy.nodes.Beta",
    "len",
    "numpy.exp",
    "numpy.ones",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_bernoulli.TestBernoulli.test_observed": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "bayespy.nodes.Bernoulli"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_bernoulli.TestBernoulli.test_random": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "bayespy.nodes.Bernoulli",
    "numpy.errstate",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_bernoulli.TestCase": {
  "data": {
   "shadows": "bayespy.utils.misc.TestCase"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_bernoulli.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_bernoulli.random": {
  "data": {
   "shadows": "bayespy.utils.random"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_bernoulli.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_beta": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.tests.test_beta.Beta": {
  "data": {
   "shadows": "bayespy.nodes.Beta"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_beta.TestBeta": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "bayespy.utils.misc.TestCase"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_beta.TestBeta.test_init": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.nodes.Beta",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_beta.TestBeta.test_moments": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "bayespy.nodes.Beta",
    "scipy.special.psi"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_beta.TestBeta.test_random": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "bayespy.nodes.Beta"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_beta.TestCase": {
  "data": {
   "shadows": "bayespy.utils.misc.TestCase"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_beta.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_beta.random": {
  "data": {
   "shadows": "bayespy.utils.random"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_beta.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_binomial": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.tests.test_binomial.Beta": {
  "data": {
   "shadows": "bayespy.nodes.Beta"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_binomial.Binomial": {
  "data": {
   "shadows": "bayespy.nodes.Binomial"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_binomial.Mixture": {
  "data": {
   "shadows": "bayespy.nodes.Mixture"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_binomial.TestBinomial": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "bayespy.utils.misc.TestCase"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_binomial.TestBinomial.test_init": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.nodes.Beta",
    "bayespy.nodes.Binomial",
    "numpy.int",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_binomial.TestBinomial.test_mixture": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "bayespy.nodes.Binomial",
    "bayespy.nodes.Mixture"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_binomial.TestBinomial.test_moments": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "bayespy.nodes.Beta",
    "bayespy.nodes.Binomial",
    "len",
    "numpy.exp",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_binomial.TestBinomial.test_observed": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "bayespy.nodes.Binomial"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_binomial.TestBinomial.test_random": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "bayespy.nodes.Binomial",
    "numpy.errstate",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_binomial.TestCase": {
  "data": {
   "shadows": "bayespy.utils.misc.TestCase"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_binomial.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_binomial.random": {
  "data": {
   "shadows": "bayespy.utils.random"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_binomial.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_categorical": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.tests.test_categorical.Categorical": {
  "data": {
   "shadows": "bayespy.nodes.Categorical"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_categorical.Dirichlet": {
  "data": {
   "shadows": "bayespy.nodes.Dirichlet"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_categorical.Gamma": {
  "data": {
   "shadows": "bayespy.nodes.Gamma"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_categorical.Mixture": {
  "data": {
   "shadows": "bayespy.nodes.Mixture"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_categorical.TestCase": {
  "data": {
   "shadows": "bayespy.utils.misc.TestCase"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_categorical.TestCategorical": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "bayespy.utils.misc.TestCase"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_categorical.TestCategorical.test_constant": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "bayespy.nodes.Gamma",
    "bayespy.nodes.Mixture"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_categorical.TestCategorical.test_gradient": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "bayespy.nodes.Categorical",
    "bayespy.nodes.Gamma",
    "bayespy.nodes.Mixture",
    "bayespy.utils.misc.gradient",
    "df",
    "numpy.log",
    "numpy.ravel"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_categorical.TestCategorical.test_gradient.df": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_categorical.TestCategorical.test_gradient.f": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_categorical.TestCategorical.test_init": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.nodes.Categorical",
    "bayespy.nodes.Dirichlet",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_categorical.TestCategorical.test_initialization": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "RuntimeWarning",
    "bayespy.inference.vmp.nodes.tests.test_categorical.warnings",
    "bayespy.nodes.Categorical"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_categorical.TestCategorical.test_moments": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "bayespy.nodes.Categorical",
    "bayespy.nodes.Dirichlet",
    "len",
    "numpy.array",
    "numpy.exp",
    "numpy.ones",
    "numpy.random.dirichlet"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_categorical.TestCategorical.test_observed": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.nodes.Categorical"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_categorical.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_categorical.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_categorical.random": {
  "data": {
   "shadows": "bayespy.utils.random"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_categorical.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_categorical.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_categorical_markov_chain": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.tests.test_categorical_markov_chain.CategoricalMarkovChain": {
  "data": {
   "shadows": "bayespy.inference.vmp.nodes.CategoricalMarkovChain"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_categorical_markov_chain.Dirichlet": {
  "data": {
   "shadows": "bayespy.inference.vmp.nodes.Dirichlet"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_categorical_markov_chain.TestCategoricalMarkovChain": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "bayespy.utils.misc.TestCase"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_categorical_markov_chain.TestCategoricalMarkovChain.test_init": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.CategoricalMarkovChain",
    "bayespy.inference.vmp.nodes.Dirichlet",
    "numpy.all",
    "numpy.array",
    "numpy.isnan",
    "numpy.ones",
    "numpy.random.dirichlet"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_categorical_markov_chain.TestCategoricalMarkovChain.test_message_to_child": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "RuntimeWarning",
    "bayespy.inference.vmp.nodes.CategoricalMarkovChain",
    "bayespy.inference.vmp.nodes.Dirichlet",
    "bayespy.inference.vmp.nodes.tests.test_categorical_markov_chain.warnings",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_categorical_markov_chain.TestCategoricalMarkovChain.test_random": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "RuntimeWarning",
    "bayespy.inference.vmp.nodes.CategoricalMarkovChain",
    "bayespy.inference.vmp.nodes.tests.test_categorical_markov_chain.warnings",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_categorical_markov_chain.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_categorical_markov_chain.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_categorical_markov_chain.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_concatenate": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.tests.test_concatenate.Concatenate": {
  "data": {
   "shadows": "bayespy.nodes.Concatenate"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_concatenate.Gamma": {
  "data": {
   "shadows": "bayespy.nodes.Gamma"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_concatenate.GaussianARD": {
  "data": {
   "shadows": "bayespy.nodes.GaussianARD"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_concatenate.TestCase": {
  "data": {
   "shadows": "bayespy.utils.misc.TestCase"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_concatenate.TestConcatenate": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "bayespy.utils.misc.TestCase"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_concatenate.TestConcatenate.test_init": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.nodes.Concatenate",
    "bayespy.nodes.Gamma",
    "bayespy.nodes.GaussianARD"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_concatenate.TestConcatenate.test_mask_to_parent": {
  "data": {
   "lineno": 273
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_concatenate.TestConcatenate.test_message_to_child": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "bayespy.nodes.Concatenate",
    "bayespy.nodes.GaussianARD",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.random.randn",
    "var"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_concatenate.TestConcatenate.test_message_to_parent": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "FutureWarning",
    "bayespy.inference.vmp.nodes.tests.test_concatenate.warnings",
    "bayespy.nodes.Concatenate",
    "bayespy.nodes.GaussianARD",
    "numpy.ones",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_concatenate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_concatenate.random": {
  "data": {
   "shadows": "bayespy.utils.random"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_concatenate.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_deterministic": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.tests.test_deterministic.TestTile": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.tests.test_deterministic.unittest"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_deterministic.TestTile.check_mask_to_parent": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "Dummy",
    "numpy.shape",
    "numpy.testing.assert_equal",
    "tile"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_deterministic.TestTile.check_mask_to_parent.Dummy": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "Moments"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_deterministic.TestTile.check_message_to_children": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "Dummy",
    "numpy.shape",
    "numpy.testing.assert_allclose",
    "tile",
    "zip"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_deterministic.TestTile.check_message_to_children.Dummy": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "Moments"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_deterministic.TestTile.check_message_to_children.Dummy.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_deterministic.TestTile.check_message_to_parent": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "Dummy",
    "numpy.shape",
    "numpy.testing.assert_allclose",
    "tile",
    "zip"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_deterministic.TestTile.check_message_to_parent.Dummy": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "Moments"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_deterministic.TestTile.test_mask_to_parent": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "check"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_deterministic.TestTile.test_message_to_children": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "check_message_to_children"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_deterministic.TestTile.test_message_to_parent": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "check"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_deterministic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_deterministic.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_deterministic.testing": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_deterministic.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_dirichlet": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.tests.test_dirichlet.Dirichlet": {
  "data": {
   "shadows": "bayespy.nodes.Dirichlet"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_dirichlet.TestCase": {
  "data": {
   "shadows": "bayespy.utils.misc.TestCase"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_dirichlet.TestDirichlet": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "bayespy.utils.misc.TestCase"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_dirichlet.TestDirichlet.test_constant": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "bayespy.nodes.Dirichlet",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_dirichlet.TestDirichlet.test_init": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.nodes.Dirichlet",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_dirichlet.TestDirichlet.test_moments": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "bayespy.nodes.Dirichlet",
    "scipy.special.psi"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_dirichlet.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_dirichlet.random": {
  "data": {
   "shadows": "bayespy.utils.random"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_dirichlet.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_dot": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.tests.test_dot.GaussianGamma": {
  "data": {
   "shadows": "bayespy.nodes.GaussianGamma"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_dot.TestCase": {
  "data": {
   "shadows": "bayespy.utils.misc.TestCase"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_dot.TestSumMultiply": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "bayespy.utils.misc.TestCase"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_dot.TestSumMultiply.test_compute_moments": {
  "data": {
   "lineno": 1009
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_dot.TestSumMultiply.test_message_to_child": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "Gaussian",
    "GaussianARD",
    "SumMultiply",
    "bayespy.nodes.GaussianGamma",
    "bayespy.utils.linalg.outer",
    "bayespy.utils.random.covariance",
    "compare_moments",
    "numpy.einsum",
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_dot.TestSumMultiply.test_message_to_child.compare_moments": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "SumMultiply"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_dot.TestSumMultiply.test_message_to_parent": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "Gaussian",
    "GaussianARD",
    "SumMultiply",
    "bayespy.nodes.GaussianGamma",
    "bayespy.utils.misc.identity",
    "bayespy.utils.random.covariance",
    "check_message",
    "numpy.array",
    "numpy.dot",
    "numpy.einsum",
    "numpy.identity",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.shape",
    "numpy.sum",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_dot.TestSumMultiply.test_message_to_parent.check_message": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "GaussianARD",
    "SumMultiply",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_dot.TestSumMultiply.test_parent_validity": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "Gaussian",
    "GaussianARD",
    "SumMultiply",
    "ValueError",
    "bayespy.nodes.GaussianGamma",
    "numpy.identity",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_dot.check_performance": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "GaussianARD",
    "SumMultiply",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.random.randn",
    "print"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_dot.linalg": {
  "data": {
   "shadows": "bayespy.utils.linalg"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_dot.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_dot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_dot.random": {
  "data": {
   "shadows": "bayespy.utils.random"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_dot.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_dot.testing": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_dot.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gamma": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.tests.test_gamma.Gamma": {
  "data": {
   "shadows": "bayespy.nodes.Gamma"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gamma.Gaussian": {
  "data": {
   "shadows": "bayespy.nodes.Gaussian"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gamma.GaussianARD": {
  "data": {
   "shadows": "bayespy.nodes.GaussianARD"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gamma.GaussianGamma": {
  "data": {
   "shadows": "bayespy.nodes.GaussianGamma"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gamma.TestCase": {
  "data": {
   "shadows": "bayespy.utils.misc.TestCase"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gamma.TestGamma": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "bayespy.utils.misc.TestCase"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_gamma.TestGamma.test_lower_bound_contribution": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "bayespy.nodes.Gamma",
    "bayespy.nodes.GaussianARD",
    "numpy.log",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gamma.TestGammaGradient": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "bayespy.utils.misc.TestCase"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_gamma.TestGammaGradient.test_gradient": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "VB",
    "bayespy.nodes.Gamma",
    "bayespy.nodes.GaussianARD",
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gamma.TestGammaGradient.test_riemannian_gradient": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "bayespy.nodes.Gamma",
    "bayespy.nodes.GaussianARD",
    "numpy.random.rand",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gamma.Wishart": {
  "data": {
   "shadows": "bayespy.nodes.Wishart"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gamma.linalg": {
  "data": {
   "shadows": "bayespy.utils.linalg"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gamma.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gamma.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gamma.random": {
  "data": {
   "shadows": "bayespy.utils.random"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gamma.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gamma.testing": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gate": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.tests.test_gate.Bernoulli": {
  "data": {
   "shadows": "bayespy.nodes.Bernoulli"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gate.Categorical": {
  "data": {
   "shadows": "bayespy.nodes.Categorical"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gate.Gamma": {
  "data": {
   "shadows": "bayespy.nodes.Gamma"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gate.Gate": {
  "data": {
   "shadows": "bayespy.nodes.Gate"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gate.GaussianARD": {
  "data": {
   "shadows": "bayespy.nodes.GaussianARD"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gate.GaussianMoments": {
  "data": {
   "shadows": "bayespy.inference.vmp.nodes.gaussian.GaussianMoments"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gate.Multinomial": {
  "data": {
   "shadows": "bayespy.nodes.Multinomial"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gate.TestCase": {
  "data": {
   "shadows": "bayespy.utils.misc.TestCase"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gate.TestGate": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "bayespy.utils.misc.TestCase"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_gate.TestGate.test_init": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.inference.vmp.nodes.gaussian.GaussianMoments",
    "bayespy.nodes.Categorical",
    "bayespy.nodes.Gate",
    "bayespy.nodes.GaussianARD",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gate.TestGate.test_mask_to_parent": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "bayespy.nodes.Gate",
    "bayespy.nodes.GaussianARD"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gate.TestGate.test_message_to_child": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.gaussian.GaussianMoments",
    "bayespy.nodes.Categorical",
    "bayespy.nodes.Gate",
    "bayespy.nodes.GaussianARD",
    "len",
    "numpy.identity",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gate.TestGate.test_message_to_parent": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.gaussian.GaussianMoments",
    "bayespy.nodes.Categorical",
    "bayespy.nodes.Gate",
    "bayespy.nodes.GaussianARD",
    "len",
    "numpy.identity",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gate.linalg": {
  "data": {
   "shadows": "bayespy.utils.linalg"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gate.random": {
  "data": {
   "shadows": "bayespy.utils.random"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.ConcatGaussian": {
  "data": {
   "shadows": "bayespy.nodes.ConcatGaussian"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.Gamma": {
  "data": {
   "shadows": "bayespy.nodes.Gamma"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.Gaussian": {
  "data": {
   "shadows": "bayespy.nodes.Gaussian"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.GaussianARD": {
  "data": {
   "shadows": "bayespy.nodes.GaussianARD"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.GaussianGamma": {
  "data": {
   "shadows": "bayespy.nodes.GaussianGamma"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.TestCase": {
  "data": {
   "shadows": "bayespy.utils.misc.TestCase"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.TestConcatGaussian": {
  "data": {
   "lineno": 1412,
   "symbols_in_volume": [
    "bayespy.utils.misc.TestCase"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.TestConcatGaussian.test_message_to_parents": {
  "data": {
   "lineno": 1415,
   "symbols_in_volume": [
    "bayespy.nodes.ConcatGaussian",
    "bayespy.nodes.Gaussian",
    "bayespy.utils.random.covariance",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.TestConcatGaussian.test_moments": {
  "data": {
   "lineno": 1451,
   "symbols_in_volume": [
    "bayespy.nodes.ConcatGaussian",
    "bayespy.nodes.Gaussian",
    "bayespy.utils.random.covariance",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.TestGaussian": {
  "data": {
   "lineno": 1153,
   "symbols_in_volume": [
    "bayespy.utils.misc.TestCase"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.TestGaussian.test_message_to_parents": {
  "data": {
   "lineno": 1156,
   "symbols_in_volume": [
    "bayespy.nodes.Gaussian",
    "bayespy.nodes.Wishart",
    "bayespy.utils.random.covariance",
    "numpy.random.rand",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.TestGaussianARD": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "bayespy.utils.misc.TestCase"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.TestGaussianARD.test_init": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.nodes.Gamma",
    "bayespy.nodes.GaussianARD",
    "check_init",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.TestGaussianARD.test_init.check_init": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "bayespy.nodes.GaussianARD"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.TestGaussianARD.test_initialization": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "bayespy.nodes.GaussianARD",
    "bayespy.utils.linalg.outer",
    "bayespy.utils.misc.diag",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.TestGaussianARD.test_lowerbound": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "bayespy.nodes.Gaussian",
    "bayespy.nodes.GaussianARD",
    "check_lower_bound",
    "numpy.array",
    "numpy.diag",
    "numpy.dot",
    "numpy.linalg.det",
    "numpy.linalg.inv",
    "numpy.log",
    "numpy.outer",
    "numpy.pi",
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.TestGaussianARD.test_lowerbound.check_lower_bound": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "bayespy.nodes.GaussianARD",
    "len",
    "numpy.log",
    "numpy.ones",
    "numpy.pi",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.TestGaussianARD.test_message_to_child": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "bayespy.nodes.GaussianARD",
    "bayespy.utils.misc.identity",
    "numpy.ones",
    "numpy.shape",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.TestGaussianARD.test_message_to_parent_alpha": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "bayespy.nodes.Gamma",
    "bayespy.nodes.Gaussian",
    "bayespy.nodes.GaussianARD",
    "numpy.array",
    "numpy.diag",
    "numpy.dot",
    "numpy.linalg.inv",
    "numpy.ones",
    "numpy.outer"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.TestGaussianARD.test_message_to_parent_mu": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "bayespy.nodes.Gamma",
    "bayespy.nodes.Gaussian",
    "bayespy.nodes.GaussianARD",
    "bayespy.utils.misc.identity",
    "numpy.array",
    "numpy.diag",
    "numpy.dot",
    "numpy.identity",
    "numpy.linalg.inv",
    "numpy.ones",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.TestGaussianARD.test_message_to_parents": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "bayespy.nodes.Gamma",
    "bayespy.nodes.Gaussian",
    "bayespy.nodes.GaussianARD",
    "bayespy.utils.random.covariance",
    "numpy.random.rand",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.TestGaussianARD.test_rotate": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "check"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.TestGaussianARD.test_rotate.check": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "bayespy.nodes.GaussianARD",
    "numpy.einsum",
    "numpy.random.rand",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.TestGaussianARD.test_rotate_plates": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": [
    "bayespy.nodes.Gaussian",
    "bayespy.nodes.GaussianARD",
    "bayespy.utils.linalg.outer",
    "numpy.einsum",
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.TestGaussianFunctions": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "bayespy.utils.misc.TestCase"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.TestGaussianFunctions.test_rotate_covariance": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.einsum",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.TestGaussianGamma": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "bayespy.utils.misc.TestCase"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.TestGaussianGamma.test_init": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.nodes.Gamma",
    "bayespy.nodes.Gaussian",
    "bayespy.nodes.GaussianGamma",
    "bayespy.nodes.Wishart",
    "numpy.identity",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.TestGaussianGamma.test_mask_to_parent": {
  "data": {
   "lineno": 1075
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.TestGaussianGamma.test_message_to_child": {
  "data": {
   "lineno": 1000,
   "symbols_in_volume": [
    "bayespy.nodes.Gamma",
    "bayespy.nodes.Gaussian",
    "bayespy.nodes.GaussianGamma",
    "bayespy.nodes.Wishart",
    "bayespy.utils.linalg.inv",
    "bayespy.utils.linalg.outer",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.identity",
    "numpy.log",
    "numpy.ones",
    "numpy.reshape",
    "numpy.sum",
    "scipy.special.psi"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.TestGaussianGamma.test_messages": {
  "data": {
   "lineno": 1083,
   "symbols_in_volume": [
    "bayespy.nodes.Gamma",
    "bayespy.nodes.Gaussian",
    "bayespy.nodes.GaussianARD",
    "bayespy.nodes.Wishart",
    "bayespy.utils.random.covariance",
    "check",
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.TestGaussianGamma.test_messages.check": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": [
    "bayespy.nodes.GaussianGamma",
    "bayespy.utils.linalg.transpose",
    "isinstance",
    "numpy.random.rand",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.TestGaussianGradient": {
  "data": {
   "lineno": 1180,
   "symbols_in_volume": [
    "bayespy.utils.misc.TestCase"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.TestGaussianGradient.test_gradient": {
  "data": {
   "lineno": 1252,
   "symbols_in_volume": [
    "VB",
    "bayespy.nodes.Gaussian",
    "bayespy.utils.random.covariance",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.TestGaussianGradient.test_riemannian_gradient": {
  "data": {
   "lineno": 1189,
   "symbols_in_volume": [
    "bayespy.nodes.Gaussian",
    "bayespy.utils.random.covariance",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.Wishart": {
  "data": {
   "shadows": "bayespy.nodes.Wishart"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.linalg": {
  "data": {
   "shadows": "bayespy.utils.linalg"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.random": {
  "data": {
   "shadows": "bayespy.utils.random"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian.testing": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian_markov_chain": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian_markov_chain.TestCase": {
  "data": {
   "shadows": "bayespy.utils.misc.TestCase"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian_markov_chain.TestGaussianMarkovChain": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "bayespy.utils.misc.TestCase"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian_markov_chain.TestGaussianMarkovChain.create_model": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "Gamma",
    "Gaussian",
    "GaussianMarkovChain",
    "Wishart",
    "bayespy.utils.random.covariance",
    "numpy.identity",
    "numpy.random.rand",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian_markov_chain.TestGaussianMarkovChain.test_message_to_A": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian_markov_chain.TestGaussianMarkovChain.test_message_to_Lambda0": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian_markov_chain.TestGaussianMarkovChain.test_message_to_child": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "Gamma",
    "Gaussian",
    "GaussianARD",
    "GaussianMarkovChain",
    "Wishart",
    "bayespy.utils.linalg.logdet_cov",
    "bayespy.utils.misc.block_banded",
    "bayespy.utils.random.covariance",
    "bayespy.utils.random.gaussian_entropy",
    "bayespy.utils.random.gaussian_logpdf",
    "check",
    "numpy.array",
    "numpy.diag",
    "numpy.dot",
    "numpy.einsum",
    "numpy.identity",
    "numpy.linalg.inv",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.reshape",
    "numpy.sum",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian_markov_chain.TestGaussianMarkovChain.test_message_to_child.check": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "Gamma._ensure_moments",
    "Gaussian._ensure_moments",
    "GaussianMarkovChain",
    "Wishart._ensure_moments",
    "bayespy.utils.random.covariance",
    "numpy.einsum",
    "numpy.identity",
    "numpy.linalg.inv",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.reshape",
    "numpy.shape",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian_markov_chain.TestGaussianMarkovChain.test_message_to_mu0": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian_markov_chain.TestGaussianMarkovChain.test_message_to_parents": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "Gamma",
    "Gaussian",
    "GaussianMarkovChain",
    "Wishart",
    "bayespy.utils.linalg.transpose",
    "bayespy.utils.random.covariance",
    "numpy.random.rand",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian_markov_chain.TestGaussianMarkovChain.test_message_to_parents_with_inputs": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "Gamma",
    "Gaussian",
    "GaussianGamma",
    "Wishart",
    "bayespy.utils.random.covariance",
    "check",
    "numpy.random.rand",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian_markov_chain.TestGaussianMarkovChain.test_message_to_parents_with_inputs.check": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "Gaussian",
    "GaussianMarkovChain",
    "bayespy.utils.linalg.transpose",
    "bayespy.utils.random.covariance",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian_markov_chain.TestGaussianMarkovChain.test_message_to_v": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian_markov_chain.TestGaussianMarkovChain.test_plates": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian_markov_chain.TestGaussianMarkovChain.test_smoothing": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "Gaussian",
    "GaussianMarkovChain",
    "bayespy.inference.vmp.nodes.tests.test_gaussian_markov_chain.kalman_filter",
    "bayespy.inference.vmp.nodes.tests.test_gaussian_markov_chain.rts_smoother",
    "numpy.allclose",
    "numpy.array",
    "numpy.diag",
    "numpy.dot",
    "numpy.empty",
    "numpy.identity",
    "numpy.linspace",
    "numpy.newaxis",
    "numpy.random.multivariate_normal",
    "numpy.random.rand",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian_markov_chain.TestVaryingGaussianMarkovChain": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "bayespy.utils.misc.TestCase"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian_markov_chain.TestVaryingGaussianMarkovChain.test_message_to_B": {
  "data": {
   "lineno": 1133
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian_markov_chain.TestVaryingGaussianMarkovChain.test_message_to_Lambda": {
  "data": {
   "lineno": 1129
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian_markov_chain.TestVaryingGaussianMarkovChain.test_message_to_S": {
  "data": {
   "lineno": 1137
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian_markov_chain.TestVaryingGaussianMarkovChain.test_message_to_child": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "Gamma",
    "Gaussian",
    "GaussianARD",
    "VaryingGaussianMarkovChain",
    "Wishart",
    "bayespy.utils.random.covariance",
    "check",
    "numpy.array",
    "numpy.diag",
    "numpy.dot",
    "numpy.linalg.inv",
    "numpy.random.rand",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian_markov_chain.TestVaryingGaussianMarkovChain.test_message_to_child.check": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "VaryingGaussianMarkovChain",
    "bayespy.utils.random.covariance",
    "numpy.einsum",
    "numpy.identity",
    "numpy.linalg.inv",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.reshape",
    "numpy.shape",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian_markov_chain.TestVaryingGaussianMarkovChain.test_message_to_mu": {
  "data": {
   "lineno": 1125
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian_markov_chain.TestVaryingGaussianMarkovChain.test_message_to_v": {
  "data": {
   "lineno": 1141
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian_markov_chain.TestVaryingGaussianMarkovChain.test_plates_from_parents": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "check"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian_markov_chain.TestVaryingGaussianMarkovChain.test_plates_from_parents.check": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "Gamma",
    "Gaussian",
    "GaussianARD",
    "VaryingGaussianMarkovChain",
    "Wishart",
    "bayespy.utils.random.covariance",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian_markov_chain.kalman_filter": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "bayespy.utils.linalg.chol",
    "bayespy.utils.linalg.chol_solve",
    "len",
    "numpy.dot",
    "numpy.empty",
    "numpy.shape",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian_markov_chain.linalg": {
  "data": {
   "shadows": "bayespy.utils.linalg"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian_markov_chain.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian_markov_chain.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian_markov_chain.random": {
  "data": {
   "shadows": "bayespy.utils.random"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_gaussian_markov_chain.rts_smoother": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "numpy.linalg.solve",
    "range",
    "reversed"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_mixture": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.tests.test_mixture.Bernoulli": {
  "data": {
   "shadows": "bayespy.nodes.Bernoulli"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_mixture.Beta": {
  "data": {
   "shadows": "bayespy.nodes.Beta"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_mixture.Categorical": {
  "data": {
   "shadows": "bayespy.nodes.Categorical"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_mixture.Dirichlet": {
  "data": {
   "shadows": "bayespy.nodes.Dirichlet"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_mixture.Gamma": {
  "data": {
   "shadows": "bayespy.nodes.Gamma"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_mixture.Gate": {
  "data": {
   "shadows": "bayespy.nodes.Gate"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_mixture.GaussianARD": {
  "data": {
   "shadows": "bayespy.nodes.GaussianARD"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_mixture.Mixture": {
  "data": {
   "shadows": "bayespy.nodes.Mixture"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_mixture.Multinomial": {
  "data": {
   "shadows": "bayespy.nodes.Multinomial"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_mixture.TestCase": {
  "data": {
   "shadows": "bayespy.utils.misc.TestCase"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_mixture.TestMixture": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "bayespy.utils.misc.TestCase"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_mixture.TestMixture.test_deterministic_mappings": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "bayespy.nodes.Categorical",
    "bayespy.nodes.Mixture",
    "numpy.array",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_mixture.TestMixture.test_init": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.nodes.Categorical",
    "bayespy.nodes.Gamma",
    "bayespy.nodes.GaussianARD",
    "bayespy.nodes.Mixture",
    "numpy.random.dirichlet"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_mixture.TestMixture.test_lowerbound": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "bayespy.nodes.Categorical",
    "bayespy.nodes.Mixture"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_mixture.TestMixture.test_mask_to_parent": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "bayespy.nodes.Categorical",
    "bayespy.nodes.Gamma",
    "bayespy.nodes.GaussianARD",
    "bayespy.nodes.Mixture",
    "numpy.arange",
    "numpy.mod",
    "numpy.ones",
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_mixture.TestMixture.test_message_to_child": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "bayespy.nodes.Categorical",
    "bayespy.nodes.Gamma",
    "bayespy.nodes.GaussianARD",
    "bayespy.nodes.Mixture",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_mixture.TestMixture.test_message_to_parent": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "bayespy.nodes.Categorical",
    "bayespy.nodes.Dirichlet",
    "bayespy.nodes.Gamma",
    "bayespy.nodes.Gate",
    "bayespy.nodes.GaussianARD",
    "bayespy.nodes.Mixture",
    "bayespy.utils.random.gaussian_logpdf",
    "numpy.ones",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_mixture.TestMixture.test_nans": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "RuntimeWarning",
    "UserWarning",
    "bayespy.inference.vmp.nodes.tests.test_mixture.warnings",
    "bayespy.nodes.Categorical",
    "bayespy.nodes.Mixture",
    "bayespy.nodes.Multinomial"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_mixture.TestMixture.test_random": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "bayespy.nodes.Categorical",
    "bayespy.nodes.Mixture"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_mixture.linalg": {
  "data": {
   "shadows": "bayespy.utils.linalg"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_mixture.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_mixture.random": {
  "data": {
   "shadows": "bayespy.utils.random"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_mixture.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_multinomial": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.tests.test_multinomial.Dirichlet": {
  "data": {
   "shadows": "bayespy.nodes.Dirichlet"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_multinomial.Mixture": {
  "data": {
   "shadows": "bayespy.nodes.Mixture"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_multinomial.Multinomial": {
  "data": {
   "shadows": "bayespy.nodes.Multinomial"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_multinomial.TestCase": {
  "data": {
   "shadows": "bayespy.utils.misc.TestCase"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_multinomial.TestMultinomial": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "bayespy.utils.misc.TestCase"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_multinomial.TestMultinomial.test_init": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.nodes.Dirichlet",
    "bayespy.nodes.Multinomial",
    "numpy.int",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_multinomial.TestMultinomial.test_lower_bound": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "bayespy.nodes.Multinomial"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_multinomial.TestMultinomial.test_mixture": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "bayespy.nodes.Mixture",
    "bayespy.nodes.Multinomial",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_multinomial.TestMultinomial.test_moments": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "bayespy.nodes.Dirichlet",
    "bayespy.nodes.Multinomial",
    "len",
    "numpy.array",
    "numpy.exp",
    "numpy.ones",
    "numpy.random.dirichlet",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_multinomial.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_multinomial.random": {
  "data": {
   "shadows": "bayespy.utils.random"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_multinomial.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_node": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestMoments": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.tests.test_node.unittest"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestMoments.test_converter": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "A",
    "A.add_converter",
    "B",
    "B.add_converter",
    "C",
    "E",
    "F",
    "H",
    "I",
    "Moments",
    "Moments.NoConverterError",
    "X",
    "Z",
    "f"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestMoments.test_converter.A": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "Moments"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestMoments.test_converter.B": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "A"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestMoments.test_converter.C": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "B"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestMoments.test_converter.D": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "C"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestMoments.test_converter.E": {
  "data": {
   "lineno": 62
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestMoments.test_converter.F": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "E",
    "Moments"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestMoments.test_converter.H": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "Moments"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestMoments.test_converter.I": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "A",
    "Moments"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestMoments.test_converter.J": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "A"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestMoments.test_converter.W": {
  "data": {
   "lineno": 112
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestMoments.test_converter.X": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "Moments"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestMoments.test_converter.Y": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "Moments"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestMoments.test_converter.Z": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "Moments"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestNode": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "bayespy.utils.misc.TestCase"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestNode.check_message_to_parent": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "Dummy",
    "bayespy.utils.misc.squeeze",
    "len",
    "numpy.arange",
    "numpy.mod",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.prod",
    "numpy.random.randn",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestNode.check_message_to_parent.Dummy": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "Moments"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestNode.check_message_to_parent.Dummy.__init__": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "Moments",
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestNode.check_message_to_parent.Dummy._get_id_list": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestNode.check_message_to_parent.Dummy._get_message_and_mask_to_parent": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestNode.test_compute_message": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestNode.test_message_to_parent": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestSlice": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "bayespy.utils.misc.TestCase"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestSlice.test_init": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "IndexError",
    "MyNode",
    "TypeError",
    "X",
    "Z"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestSlice.test_init.MyNode": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "Moments"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestSlice.test_init.MyNode._get_id_list": {
  "data": {
   "lineno": 460
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestSlice.test_init.Z": {
  "data": {
   "lineno": 578
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestSlice.test_init.Z.__getitem__": {
  "data": {
   "lineno": 579
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestSlice.test_message_to_child": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "DummyNode",
    "X",
    "X.u",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestSlice.test_message_to_child.DummyNode": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "Moments"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestSlice.test_message_to_child.DummyNode.__init__": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestSlice.test_message_to_child.DummyNode._get_id_list": {
  "data": {
   "lineno": 637
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestSlice.test_message_to_child.DummyNode._message_to_child": {
  "data": {
   "lineno": 635
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestSlice.test_message_to_parent": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "ChildNode",
    "ParentNode",
    "X",
    "X._message_to_parent",
    "X._update_mask",
    "numpy.array",
    "numpy.random.randn",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestSlice.test_message_to_parent.ChildNode": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "Moments"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestSlice.test_message_to_parent.ChildNode.__init__": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "X",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestSlice.test_message_to_parent.ChildNode._get_id_list": {
  "data": {
   "lineno": 811
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestSlice.test_message_to_parent.ChildNode._mask_to_parent": {
  "data": {
   "lineno": 809
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestSlice.test_message_to_parent.ChildNode._message_to_parent": {
  "data": {
   "lineno": 807
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestSlice.test_message_to_parent.ParentNode": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "Moments"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.TestSlice.test_message_to_parent.ParentNode._get_id_list": {
  "data": {
   "lineno": 797
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.testing": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_node.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_poisson": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.tests.test_poisson.Gamma": {
  "data": {
   "shadows": "bayespy.nodes.Gamma"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_poisson.Poisson": {
  "data": {
   "shadows": "bayespy.nodes.Poisson"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_poisson.TestCase": {
  "data": {
   "shadows": "bayespy.utils.misc.TestCase"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_poisson.TestPoisson": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "bayespy.utils.misc.TestCase"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_poisson.TestPoisson.test_init": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.nodes.Gamma",
    "bayespy.nodes.Poisson",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_poisson.TestPoisson.test_moments": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "bayespy.nodes.Gamma",
    "bayespy.nodes.Poisson",
    "len",
    "numpy.exp",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_poisson.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_poisson.random": {
  "data": {
   "shadows": "bayespy.utils.random"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_poisson.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_take": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.tests.test_take.GaussianARD": {
  "data": {
   "shadows": "bayespy.nodes.GaussianARD"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_take.Take": {
  "data": {
   "shadows": "bayespy.nodes.Take"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_take.TestCase": {
  "data": {
   "shadows": "bayespy.utils.misc.TestCase"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_take.TestTake": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "bayespy.utils.misc.TestCase"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_take.TestTake.test_message_to_parent": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "check"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_take.TestTake.test_message_to_parent.check": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "bayespy.nodes.GaussianARD",
    "bayespy.nodes.Take",
    "enumerate",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.mod",
    "numpy.prod",
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.reshape",
    "numpy.size",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_take.TestTake.test_moments": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "bayespy.nodes.GaussianARD",
    "bayespy.nodes.Take"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_take.TestTake.test_parent_validity": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.nodes.GaussianARD",
    "bayespy.nodes.Take",
    "numpy.int",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_take.TestTake.test_plates_multiplier_from_parent": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "bayespy.nodes.GaussianARD",
    "bayespy.nodes.Take",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_take.VB": {
  "data": {
   "shadows": "bayespy.inference.VB"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_take.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_wishart": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.tests.test_wishart.Gaussian": {
  "data": {
   "shadows": "bayespy.nodes.Gaussian"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_wishart.TestCase": {
  "data": {
   "shadows": "bayespy.utils.misc.TestCase"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_wishart.TestWishart": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "bayespy.utils.misc.TestCase"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.tests.test_wishart.TestWishart.test_lower_bound": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.tests.test_wishart._student_logpdf",
    "bayespy.nodes.Gaussian",
    "bayespy.nodes.Wishart",
    "bayespy.utils.random.covariance",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_wishart.TestWishart.test_moments": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "bayespy.nodes.Gaussian",
    "bayespy.nodes.Wishart",
    "bayespy.utils.random.covariance",
    "numpy.arange",
    "numpy.linalg.inv",
    "numpy.linalg.slogdet",
    "numpy.log",
    "numpy.outer",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.random.uniform",
    "numpy.sum",
    "scipy.special.digamma"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_wishart.Wishart": {
  "data": {
   "shadows": "bayespy.nodes.Wishart"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_wishart._student_logpdf": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.einsum",
    "numpy.linalg.inv",
    "numpy.linalg.slogdet",
    "numpy.log",
    "numpy.pi",
    "numpy.shape",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.tests.test_wishart.linalg": {
  "data": {
   "shadows": "bayespy.utils.linalg"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_wishart.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_wishart.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_wishart.random": {
  "data": {
   "shadows": "bayespy.utils.random"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.tests.test_wishart.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.wishart": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.nodes.wishart.Wishart": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.wishart.WishartDistribution"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.wishart.Wishart.__init__": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.wishart.Wishart.__str__": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.wishart.Wishart._constructor": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.wishart.WishartMoments",
    "bayespy.inference.vmp.nodes.wishart.WishartPriorMoments",
    "classmethod",
    "cls._distribution",
    "cls._distribution.plates_from_parent",
    "cls._ensure_moments",
    "cls._total_plates"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.wishart.Wishart.scale": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.wishart._ScaledWishart"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.wishart.WishartDistribution": {
  "data": {
   "lineno": 118
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.wishart.WishartDistribution.compute_cgf_from_parents": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.wishart.WishartDistribution.compute_fixed_moments_and_f": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "bayespy.utils.linalg.chol",
    "bayespy.utils.linalg.chol_logdet",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.wishart.WishartDistribution.compute_message_to_parent": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.wishart.WishartDistribution.compute_moments_and_cgf": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "bayespy.utils.linalg.chol",
    "bayespy.utils.linalg.chol_inv",
    "bayespy.utils.linalg.chol_logdet",
    "bayespy.utils.misc.multidigamma",
    "numpy.newaxis",
    "numpy.shape",
    "scipy.special.multigammaln"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.wishart.WishartDistribution.compute_phi_from_parents": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.wishart.WishartMoments": {
  "data": {
   "lineno": 45
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.wishart.WishartMoments.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.wishart.WishartMoments.compute_fixed_moments": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "bayespy.utils.linalg.chol",
    "bayespy.utils.linalg.chol_inv",
    "bayespy.utils.linalg.chol_logdet",
    "bayespy.utils.misc.add_trailing_axes",
    "numpy.asanyarray"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.wishart.WishartMoments.from_values": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "cls",
    "numpy.ndim",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.wishart.WishartMoments.get_instance_conversion_kwargs": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.wishart.WishartMoments.get_instance_converter": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.wishart.WishartMoments.plates_from_shape": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.wishart.WishartMoments.shape_from_plates": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.wishart.WishartPriorMoments": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.wishart.WishartPriorMoments.__init__": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.wishart.WishartPriorMoments.compute_fixed_moments": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.asanyarray",
    "scipy.special.multigammaln"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.wishart.WishartPriorMoments.from_values": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.wishart._ScaledWishart": {
  "data": {
   "lineno": 307
  },
  "type": "class"
 },
 "bayespy.inference.vmp.nodes.wishart._ScaledWishart.__init__": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "bayespy.inference.vmp.nodes.wishart.WishartMoments",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.wishart._ScaledWishart._compute_message_to_parent": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "IndexError",
    "bayespy.utils.linalg.inner",
    "bayespy.utils.misc.add_trailing_axes",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.wishart._ScaledWishart._compute_moments": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "bayespy.utils.misc.add_trailing_axes",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.nodes.wishart.linalg": {
  "data": {
   "shadows": "bayespy.utils.linalg"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.wishart.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.wishart.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.nodes.wishart.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.tests": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.tests.test_annealing": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.tests.test_annealing.Gamma": {
  "data": {
   "shadows": "bayespy.nodes.Gamma"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.tests.test_annealing.Gaussian": {
  "data": {
   "shadows": "bayespy.nodes.Gaussian"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.tests.test_annealing.GaussianARD": {
  "data": {
   "shadows": "bayespy.nodes.GaussianARD"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.tests.test_annealing.GaussianGamma": {
  "data": {
   "shadows": "bayespy.nodes.GaussianGamma"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.tests.test_annealing.TestCase": {
  "data": {
   "shadows": "bayespy.utils.misc.TestCase"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.tests.test_annealing.TestVB": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "bayespy.utils.misc.TestCase"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.tests.test_annealing.TestVB.test_annealing": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "VB",
    "bayespy.nodes.GaussianARD"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.tests.test_annealing.Wishart": {
  "data": {
   "shadows": "bayespy.nodes.Wishart"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.tests.test_annealing.linalg": {
  "data": {
   "shadows": "bayespy.utils.linalg"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.tests.test_annealing.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.tests.test_annealing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.tests.test_annealing.random": {
  "data": {
   "shadows": "bayespy.utils.random"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.tests.test_annealing.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.tests.test_annealing.testing": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.tests.test_transformations": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.tests.test_transformations.Gamma": {
  "data": {
   "shadows": "bayespy.inference.vmp.nodes.gamma.Gamma"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.tests.test_transformations.Gaussian": {
  "data": {
   "shadows": "bayespy.inference.vmp.nodes.gaussian.Gaussian"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.tests.test_transformations.GaussianARD": {
  "data": {
   "shadows": "bayespy.inference.vmp.nodes.gaussian.GaussianARD"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.tests.test_transformations.GaussianMarkovChain": {
  "data": {
   "shadows": "bayespy.inference.vmp.nodes.gaussian_markov_chain.GaussianMarkovChain"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.tests.test_transformations.SumMultiply": {
  "data": {
   "shadows": "bayespy.inference.vmp.nodes.dot.SumMultiply"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.tests.test_transformations.TestCase": {
  "data": {
   "shadows": "bayespy.utils.misc.TestCase"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.tests.test_transformations.TestRotateGaussianARD": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "bayespy.utils.misc.TestCase"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.tests.test_transformations.TestRotateGaussianARD.test_cost_function": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.gaussian.GaussianARD",
    "numpy.ones",
    "numpy.random.seed",
    "test"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.tests.test_transformations.TestRotateGaussianARD.test_cost_function.test": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "RotateGaussianARD",
    "bayespy.inference.vmp.nodes.gamma.Gamma",
    "bayespy.inference.vmp.nodes.gaussian.GaussianARD",
    "numpy.identity",
    "numpy.random.randn",
    "sum"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.tests.test_transformations.TestRotateGaussianARD.test_cost_gradient": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.gaussian.GaussianARD",
    "numpy.random.seed",
    "print",
    "test"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.tests.test_transformations.TestRotateGaussianARD.test_cost_gradient.test": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "RotateGaussianARD",
    "bayespy.inference.vmp.nodes.gamma.Gamma",
    "bayespy.inference.vmp.nodes.gaussian.GaussianARD",
    "bayespy.utils.optimize.check_gradient",
    "numpy.random.randn",
    "numpy.ravel"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.tests.test_transformations.TestRotateGaussianARD.test_cost_gradient.test.f_q": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "numpy.ravel",
    "numpy.reshape",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.tests.test_transformations.TestRotateGaussianARD.test_cost_gradient.test.f_r": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "numpy.ravel",
    "numpy.reshape",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.tests.test_transformations.TestRotateGaussianMarkovChain": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "bayespy.utils.misc.TestCase"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.tests.test_transformations.TestRotateGaussianMarkovChain._run_checks": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.gaussian.GaussianARD",
    "bayespy.inference.vmp.nodes.wishart.Wishart",
    "bayespy.utils.random.covariance",
    "check"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.tests.test_transformations.TestRotateGaussianMarkovChain.test_cost_function": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.tests.test_transformations.TestRotateGaussianMarkovChain.test_cost_function.check": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "RotateGaussianARD",
    "RotateGaussianMarkovChain",
    "bayespy.inference.vmp.nodes.gaussian.Gaussian",
    "bayespy.inference.vmp.nodes.gaussian.GaussianARD",
    "bayespy.inference.vmp.nodes.gaussian_markov_chain.GaussianMarkovChain",
    "numpy.identity",
    "numpy.ones",
    "numpy.random.randn",
    "numpy.zeros",
    "sum"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.tests.test_transformations.TestRotateGaussianMarkovChain.test_cost_gradient": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.tests.test_transformations.TestRotateGaussianMarkovChain.test_cost_gradient.check": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "RotateGaussianARD",
    "RotateGaussianMarkovChain",
    "bayespy.inference.vmp.nodes.gaussian.Gaussian",
    "bayespy.inference.vmp.nodes.gaussian.GaussianARD",
    "bayespy.inference.vmp.nodes.gaussian_markov_chain.GaussianMarkovChain",
    "bayespy.utils.optimize.check_gradient",
    "numpy.identity",
    "numpy.ones",
    "numpy.random.randn",
    "numpy.ravel",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.tests.test_transformations.TestRotateGaussianMarkovChain.test_cost_gradient.check.cost": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "numpy.ravel",
    "numpy.reshape",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.tests.test_transformations.TestRotateVaryingMarkovChain": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "bayespy.utils.misc.TestCase"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.tests.test_transformations.TestRotateVaryingMarkovChain._run_checks": {
  "data": {
   "lineno": 1159,
   "symbols_in_volume": [
    "bayespy.inference.vmp.nodes.gaussian.GaussianARD",
    "bayespy.inference.vmp.nodes.wishart.Wishart",
    "bayespy.utils.random.covariance",
    "check"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.tests.test_transformations.TestRotateVaryingMarkovChain.test_cost_function": {
  "data": {
   "lineno": 989,
   "symbols_in_volume": [
    "check",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.tests.test_transformations.TestRotateVaryingMarkovChain.test_cost_function.check": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": [
    "RotateGaussianARD",
    "RotateVaryingMarkovChain",
    "bayespy.inference.vmp.nodes.dot.SumMultiply",
    "bayespy.inference.vmp.nodes.gaussian.Gaussian",
    "bayespy.inference.vmp.nodes.gaussian.GaussianARD",
    "bayespy.inference.vmp.nodes.gaussian_markov_chain.GaussianMarkovChain",
    "numpy.identity",
    "numpy.ones",
    "numpy.random.randn",
    "numpy.zeros",
    "sum"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.tests.test_transformations.TestRotateVaryingMarkovChain.test_cost_gradient": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": [
    "check",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.tests.test_transformations.TestRotateVaryingMarkovChain.test_cost_gradient.check": {
  "data": {
   "lineno": 1085,
   "symbols_in_volume": [
    "RotateGaussianARD",
    "RotateVaryingMarkovChain",
    "bayespy.inference.vmp.nodes.dot.SumMultiply",
    "bayespy.inference.vmp.nodes.gaussian.Gaussian",
    "bayespy.inference.vmp.nodes.gaussian.GaussianARD",
    "bayespy.inference.vmp.nodes.gaussian_markov_chain.GaussianMarkovChain",
    "bayespy.utils.optimize.check_gradient",
    "numpy.identity",
    "numpy.ones",
    "numpy.random.randn",
    "numpy.ravel",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.tests.test_transformations.TestRotateVaryingMarkovChain.test_cost_gradient.check.cost": {
  "data": {
   "lineno": 1142,
   "symbols_in_volume": [
    "numpy.ravel",
    "numpy.reshape",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.tests.test_transformations.Wishart": {
  "data": {
   "shadows": "bayespy.inference.vmp.nodes.wishart.Wishart"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.tests.test_transformations.linalg": {
  "data": {
   "shadows": "bayespy.utils.linalg"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.tests.test_transformations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.tests.test_transformations.optimize": {
  "data": {
   "shadows": "bayespy.utils.optimize"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.tests.test_transformations.random": {
  "data": {
   "shadows": "bayespy.utils.random"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.transformations": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.transformations.GaussianMoments": {
  "data": {
   "shadows": "bayespy.inference.vmp.nodes.gaussian.GaussianMoments"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.transformations.GaussianToGaussianGamma": {
  "data": {
   "shadows": "bayespy.inference.vmp.nodes.gaussian.GaussianToGaussianGamma"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.transformations.RotateGaussian": {
  "data": {
   "lineno": 225
  },
  "type": "class"
 },
 "bayespy.inference.vmp.transformations.RotateGaussian.__init__": {
  "data": {
   "lineno": 230
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateGaussian._compute_bound": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "bayespy.utils.linalg.dot",
    "bayespy.utils.random.gaussian_entropy",
    "bayespy.utils.random.gaussian_logpdf",
    "numpy.vdot"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateGaussian.bound": {
  "data": {
   "lineno": 318
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateGaussian.get_bound_terms": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateGaussian.nodes": {
  "data": {
   "lineno": 331
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateGaussian.rotate": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateGaussian.setup": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "bayespy.utils.misc.sum_multiply",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateGaussianARD": {
  "data": {
   "lineno": 376
  },
  "type": "class"
 },
 "bayespy.inference.vmp.transformations.RotateGaussianARD.__init__": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "int",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateGaussianARD._compute_bound": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "bayespy.inference.vmp.transformations.sum_to_plates",
    "bayespy.utils.linalg.outer",
    "bayespy.utils.random.gamma_logpdf",
    "bayespy.utils.random.gaussian_entropy",
    "bayespy.utils.random.gaussian_logpdf",
    "broadcasting_multiplier",
    "numpy.abs",
    "numpy.einsum",
    "numpy.ix_",
    "numpy.linalg.inv",
    "numpy.linalg.slogdet",
    "numpy.log",
    "numpy.shape",
    "numpy.sum",
    "psi",
    "sum_plates"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateGaussianARD._compute_bound.psi": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": [
    "numpy.einsum"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateGaussianARD._compute_bound.sum_plates": {
  "data": {
   "lineno": 1018,
   "symbols_in_volume": [
    "bayespy.utils.misc.sum_multiply",
    "numpy.ones",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateGaussianARD._full_rotation_matrix": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "numpy.identity",
    "numpy.ix_"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateGaussianARD.bound": {
  "data": {
   "lineno": 1095
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateGaussianARD.get_bound_terms": {
  "data": {
   "lineno": 1102
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateGaussianARD.nodes": {
  "data": {
   "lineno": 440
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateGaussianARD.rotate": {
  "data": {
   "lineno": 457
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateGaussianARD.setup": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "bayespy.inference.vmp.transformations.covariance_to_variance",
    "bayespy.inference.vmp.transformations.sum_to_plates",
    "bayespy.utils.linalg.outer",
    "bayespy.utils.misc.moveaxis",
    "int",
    "isinstance",
    "len",
    "list",
    "min",
    "numpy.ix_",
    "numpy.ndim",
    "numpy.ones",
    "numpy.shape",
    "range",
    "safe_move_axis",
    "safe_move_plate_axis",
    "sum_to_alpha"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateGaussianARD.setup.safe_move_axis": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "bayespy.utils.misc.moveaxis",
    "numpy.ndim",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateGaussianARD.setup.safe_move_plate_axis": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "Ellipsis",
    "bayespy.utils.misc.moveaxis",
    "numpy.ndim",
    "slice"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateGaussianARD.setup.sum_to_alpha": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "bayespy.inference.vmp.transformations.sum_to_plates",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateGaussianMarkovChain": {
  "data": {
   "lineno": 1112
  },
  "type": "class"
 },
 "bayespy.inference.vmp.transformations.RotateGaussianMarkovChain.__init__": {
  "data": {
   "lineno": 1139,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "bayespy.inference.vmp.nodes.gaussian.GaussianMoments",
    "bayespy.inference.vmp.nodes.gaussian.GaussianToGaussianGamma",
    "bayespy.inference.vmp.nodes.gaussian.WrapToGaussianGamma",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateGaussianMarkovChain._computations_for_A_and_X": {
  "data": {
   "lineno": 1191,
   "symbols_in_volume": [
    "bayespy.inference.vmp.transformations.sum_to_plates",
    "bayespy.utils.misc.atleast_nd",
    "numpy.einsum",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateGaussianMarkovChain._compute_bound": {
  "data": {
   "lineno": 1298,
   "symbols_in_volume": [
    "bayespy.inference.vmp.transformations.sum_to_plates",
    "bayespy.utils.linalg.dot",
    "bayespy.utils.linalg.tracedot",
    "bayespy.utils.random.gaussian_entropy",
    "bayespy.utils.random.gaussian_logpdf",
    "numpy.einsum",
    "numpy.linalg.inv",
    "numpy.linalg.slogdet",
    "numpy.prod",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateGaussianMarkovChain.bound": {
  "data": {
   "lineno": 1386,
   "symbols_in_volume": [
    "bayespy.utils.linalg.dot",
    "len",
    "numpy.identity",
    "numpy.linalg.inv",
    "numpy.linalg.slogdet",
    "scipy.linalg.block_diag"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateGaussianMarkovChain.get_bound_terms": {
  "data": {
   "lineno": 1423,
   "symbols_in_volume": [
    "len",
    "numpy.identity",
    "numpy.linalg.inv",
    "numpy.linalg.slogdet",
    "scipy.linalg.block_diag"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateGaussianMarkovChain.nodes": {
  "data": {
   "lineno": 1170
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateGaussianMarkovChain.rotate": {
  "data": {
   "lineno": 1173,
   "symbols_in_volume": [
    "len",
    "numpy.identity",
    "numpy.linalg.inv",
    "numpy.linalg.slogdet",
    "scipy.linalg.block_diag"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateGaussianMarkovChain.setup": {
  "data": {
   "lineno": 1238,
   "symbols_in_volume": [
    "bayespy.inference.vmp.transformations.sum_to_plates",
    "bayespy.utils.linalg.outer",
    "bayespy.utils.linalg.transpose",
    "len",
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateMultiple": {
  "data": {
   "lineno": 1635
  },
  "type": "class"
 },
 "bayespy.inference.vmp.transformations.RotateMultiple.__init__": {
  "data": {
   "lineno": 1643
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateMultiple.bound": {
  "data": {
   "lineno": 1660
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateMultiple.get_bound_terms": {
  "data": {
   "lineno": 1671,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateMultiple.nodes": {
  "data": {
   "lineno": 1646
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateMultiple.rotate": {
  "data": {
   "lineno": 1652
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateMultiple.setup": {
  "data": {
   "lineno": 1656
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateSwitchingMarkovChain": {
  "data": {
   "lineno": 1544,
   "symbols_in_volume": [
    "bayespy.inference.vmp.transformations.RotateGaussianMarkovChain"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.transformations.RotateSwitchingMarkovChain.__init__": {
  "data": {
   "lineno": 1561,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateSwitchingMarkovChain._computations_for_A_and_X": {
  "data": {
   "lineno": 1582,
   "symbols_in_volume": [
    "bayespy.inference.vmp.transformations.sum_to_plates",
    "numpy.einsum"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateVaryingMarkovChain": {
  "data": {
   "lineno": 1454,
   "symbols_in_volume": [
    "bayespy.inference.vmp.transformations.RotateGaussianMarkovChain"
   ]
  },
  "type": "class"
 },
 "bayespy.inference.vmp.transformations.RotateVaryingMarkovChain.__init__": {
  "data": {
   "lineno": 1471,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotateVaryingMarkovChain._computations_for_A_and_X": {
  "data": {
   "lineno": 1489,
   "symbols_in_volume": [
    "bayespy.utils.misc.sum_multiply"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotationOptimizer": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "bayespy.inference.vmp.transformations.RotationOptimizer.__init__": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotationOptimizer.rotate": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "bayespy.inference.vmp.transformations.warnings",
    "bayespy.utils.optimize.check_gradient",
    "bayespy.utils.optimize.minimize",
    "cost",
    "get_bound_terms",
    "get_true_bound_terms",
    "numpy.allclose",
    "numpy.arange",
    "numpy.identity",
    "numpy.linalg.inv",
    "numpy.linalg.slogdet",
    "numpy.random.randn",
    "numpy.ravel",
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotationOptimizer.rotate.cost": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "bayespy.utils.linalg.dot",
    "numpy.linalg.inv",
    "numpy.linalg.slogdet",
    "numpy.ravel",
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotationOptimizer.rotate.get_bound_terms": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.linalg.inv",
    "numpy.linalg.slogdet",
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.RotationOptimizer.rotate.get_true_bound_terms": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.WrapToGaussianGamma": {
  "data": {
   "shadows": "bayespy.inference.vmp.nodes.gaussian.WrapToGaussianGamma"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.transformations.block_diag": {
  "data": {
   "shadows": "scipy.linalg.block_diag"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.transformations.covariance_to_variance": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "Ellipsis",
    "int",
    "isinstance",
    "list",
    "numpy.einsum",
    "range",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.dot": {
  "data": {
   "shadows": "bayespy.utils.linalg.dot"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.transformations.linalg": {
  "data": {
   "shadows": "bayespy.utils.linalg"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.transformations.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.transformations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.transformations.optimize": {
  "data": {
   "shadows": "bayespy.utils.optimize"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.transformations.random": {
  "data": {
   "shadows": "bayespy.utils.random"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.transformations.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.transformations.sum_to_plates": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "bayespy.utils.misc.sum_to_shape",
    "numpy.shape",
    "tuple"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.transformations.tracedot": {
  "data": {
   "shadows": "bayespy.utils.linalg.tracedot"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.transformations.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.vmp": {
  "data": {},
  "type": "module"
 },
 "bayespy.inference.vmp.vmp.Node": {
  "data": {
   "shadows": "bayespy.inference.vmp.nodes.node.Node"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.vmp.VB": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "bayespy.inference.vmp.vmp.VB.__getitem__": {
  "data": {
   "lineno": 365
  },
  "type": "function"
 },
 "bayespy.inference.vmp.vmp.VB.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "__name__",
    "bayespy.inference.vmp.nodes.node.Node",
    "bayespy.inference.vmp.vmp.datetime",
    "bayespy.inference.vmp.vmp.logging",
    "bayespy.inference.vmp.vmp.tempfile",
    "bayespy.utils.misc.unique",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "numpy.array",
    "print",
    "zip"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.vmp.VB._append_iterations": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "bayespy.utils.misc.nans",
    "numpy.append"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.vmp.VB._end_iteration_step": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "abs",
    "bayespy.inference.vmp.vmp.time",
    "bayespy.inference.vmp.vmp.warnings",
    "callable",
    "len",
    "numpy.array",
    "numpy.concatenate",
    "numpy.mod",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.vmp.VB.add": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.vmp.VB.compute_lowerbound": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "bayespy.inference.vmp.vmp.VB.compute_lowerbound_terms": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.vmp.VB.dot": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.ravel",
    "zip"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.vmp.VB.get_gradients": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.vmp.VB.get_iteration_by_nodes": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "bayespy.inference.vmp.vmp.VB.get_parameters": {
  "data": {
   "lineno": 422
  },
  "type": "function"
 },
 "bayespy.inference.vmp.vmp.VB.gradient_step": {
  "data": {
   "lineno": 439
  },
  "type": "function"
 },
 "bayespy.inference.vmp.vmp.VB.has_converged": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "bayespy.inference.vmp.vmp.VB.ignore_bound_checks": {
  "data": {
   "lineno": 404
  },
  "type": "function"
 },
 "bayespy.inference.vmp.vmp.VB.load": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "bayespy.inference.vmp.vmp.h5py",
    "callable",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.vmp.VB.load_user_data": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "bayespy.inference.vmp.vmp.h5py",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.vmp.VB.loglikelihood_lowerbound": {
  "data": {
   "lineno": 199
  },
  "type": "function"
 },
 "bayespy.inference.vmp.vmp.VB.optimize": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "Exception",
    "bayespy.inference.vmp.vmp.time",
    "numpy.allclose",
    "numpy.isnan",
    "numpy.sqrt",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.vmp.VB.pattern_search": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "bayespy.inference.vmp.vmp.scipy",
    "bayespy.inference.vmp.vmp.time"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.vmp.VB.pattern_search.cost": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.vmp.VB.plot": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "matplotlib.pyplot.figure"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.vmp.VB.plot_iteration_by_nodes": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "matplotlib.pyplot.gca",
    "numpy.arange",
    "numpy.diff",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.vmp.VB.save": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "Exception",
    "bayespy.inference.vmp.vmp.h5py",
    "bayespy.inference.vmp.vmp.warnings",
    "bayespy.utils.misc.write_to_hdf5",
    "callable",
    "hasattr",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.vmp.VB.set_annealing": {
  "data": {
   "lineno": 672
  },
  "type": "function"
 },
 "bayespy.inference.vmp.vmp.VB.set_autosave": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "bayespy.inference.vmp.vmp.VB.set_callback": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "bayespy.inference.vmp.vmp.VB.set_parameters": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.vmp.VB.update": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "Exception",
    "all",
    "bayespy.inference.vmp.vmp.time",
    "callable",
    "hasattr",
    "len",
    "numpy.any",
    "tqdm",
    "tqdm.update"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.vmp.VB.use_logging": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "__name__",
    "bayespy.inference.vmp.vmp.logging",
    "print"
   ]
  },
  "type": "function"
 },
 "bayespy.inference.vmp.vmp.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.vmp.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.vmp.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.vmp.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.vmp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.vmp.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.vmp.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.vmp.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.vmp.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "bayespy.inference.vmp.vmp.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "bayespy.nodes": {
  "data": {},
  "type": "module"
 },
 "bayespy.testing": {
  "data": {},
  "type": "module"
 },
 "bayespy.testing.Plugin": {
  "data": {
   "shadows": "nose.plugins.Plugin"
  },
  "type": "import"
 },
 "bayespy.testing.WarnAsError": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "nose.plugins.Plugin"
   ]
  },
  "type": "class"
 },
 "bayespy.testing.WarnAsError.configure": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.testing.WarnAsError.options": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bayespy.testing.WarnAsError.prepareTestRunner": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "bayespy.testing.WarnAsErrorTestRunner"
   ]
  },
  "type": "function"
 },
 "bayespy.testing.WarnAsErrorTestRunner": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "bayespy.testing.WarnAsErrorTestRunner.__init__": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "bayespy.testing.WarnAsErrorTestRunner.run": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "DeprecationWarning",
    "bayespy.testing.warnings"
   ]
  },
  "type": "function"
 },
 "bayespy.testing.__author__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "bayespy.testing.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "bayespy.testing.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "bayespy.tests": {
  "data": {},
  "type": "module"
 },
 "bayespy.tests.bpplt": {
  "data": {
   "shadows": "bayespy.plot"
  },
  "type": "import"
 },
 "bayespy.tests.setup": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "bayespy.plot.pyplot.figure",
    "bayespy.plot.pyplot.get_fignums"
   ]
  },
  "type": "function"
 },
 "bayespy.utils": {
  "data": {},
  "type": "module"
 },
 "bayespy.utils.covfunc": {
  "data": {},
  "type": "module"
 },
 "bayespy.utils.covfunc.covariance": {
  "data": {},
  "type": "module"
 },
 "bayespy.utils.covfunc.covariance.covfunc_delta": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "bayespy.utils.covfunc.covariance.gp_cov_delta",
    "bayespy.utils.covfunc.covariance.gp_preprocess_inputs",
    "bayespy.utils.misc.array_to_scalar",
    "numpy.ones",
    "numpy.shape",
    "numpy.zeros",
    "print",
    "scipy.sparse.csc_matrix"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.covfunc.covariance.covfunc_pp2": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "bayespy.utils.covfunc.covariance.gp_cov_pp2",
    "bayespy.utils.covfunc.covariance.gp_preprocess_inputs",
    "bayespy.utils.misc.array_to_scalar",
    "numpy.empty",
    "numpy.ones",
    "numpy.shape",
    "numpy.sqrt",
    "numpy.zeros",
    "print",
    "scipy.sparse.csc_matrix",
    "scipy.spatial.distance.sparse_cdist",
    "scipy.spatial.distance.sparse_pdist"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.covfunc.covariance.covfunc_se": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "bayespy.utils.covfunc.covariance.gp_cov_se",
    "bayespy.utils.covfunc.covariance.gp_preprocess_inputs",
    "bayespy.utils.covfunc.covariance.squared_distance",
    "bayespy.utils.misc.array_to_scalar",
    "numpy.divide",
    "numpy.multiply",
    "numpy.ones",
    "numpy.shape",
    "numpy.zeros",
    "print"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.covfunc.covariance.covfunc_zeros": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "bayespy.utils.covfunc.covariance.gp_preprocess_inputs",
    "numpy.shape",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.covfunc.covariance.distance": {
  "data": {
   "shadows": "scipy.spatial.distance"
  },
  "type": "import"
 },
 "bayespy.utils.covfunc.covariance.gp_cov_delta": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.identity",
    "scipy.sparse.identity"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.covfunc.covariance.gp_cov_pp2": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.floor"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.covfunc.covariance.gp_cov_pp2_new": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.floor"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.covfunc.covariance.gp_cov_se": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.covfunc.covariance.gp_preprocess_inputs": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "bayespy.utils.covfunc.covariance.gp_standardize_input"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.covfunc.covariance.gp_standardize_input": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "Exception",
    "numpy.atleast_2d",
    "numpy.ndim",
    "numpy.reshape",
    "numpy.size"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.covfunc.covariance.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "bayespy.utils.covfunc.covariance.misc": {
  "data": {
   "shadows": "bayespy.utils.misc"
  },
  "type": "import"
 },
 "bayespy.utils.covfunc.covariance.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.utils.covfunc.covariance.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "bayespy.utils.covfunc.covariance.squared_distance": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.empty",
    "scipy.spatial.distance.cdist"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.linalg": {
  "data": {},
  "type": "module"
 },
 "bayespy.utils.linalg._dot": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.shape",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.linalg.block_banded_solve": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.utils.linalg.chol",
    "bayespy.utils.linalg.chol_inv",
    "bayespy.utils.linalg.chol_logdet",
    "bayespy.utils.linalg.chol_solve",
    "bayespy.utils.linalg.mmdot",
    "bayespy.utils.linalg.mvdot",
    "numpy.empty",
    "numpy.shape",
    "range",
    "reversed"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.linalg.chol": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "Exception",
    "NotImplementedError",
    "ValueError",
    "numpy.empty",
    "numpy.linalg.linalg.LinAlgError",
    "numpy.shape",
    "numpy.size",
    "numpy.sqrt",
    "scipy.linalg.cho_factor",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.linalg.chol_inv": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "isinstance",
    "numpy.empty",
    "numpy.identity",
    "numpy.isscalar",
    "numpy.ndarray",
    "numpy.shape",
    "numpy.size",
    "numpy.tile",
    "scipy.linalg.cho_solve"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.linalg.chol_logdet": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "isinstance",
    "numpy.einsum",
    "numpy.isscalar",
    "numpy.log",
    "numpy.ndarray",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.linalg.chol_solve": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "bayespy.utils.linalg.transpose",
    "isinstance",
    "len",
    "min",
    "numpy.empty",
    "numpy.isscalar",
    "numpy.ndarray",
    "numpy.shape",
    "numpy.size",
    "numpy.zeros",
    "range",
    "scipy.linalg.cho_solve",
    "scipy.sparse.issparse",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.linalg.dot": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "ValueError",
    "bayespy.utils.linalg._dot",
    "len",
    "numpy.asanyarray",
    "numpy.ndim",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.linalg.inner": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.linalg.inv": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.asanyarray",
    "numpy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.linalg.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "bayespy.utils.linalg.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "bayespy.utils.linalg.logdet_chol": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "isinstance",
    "numpy.einsum",
    "numpy.log",
    "numpy.ndarray",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.linalg.logdet_cov": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "bayespy.utils.linalg.chol",
    "bayespy.utils.linalg.chol_logdet"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.linalg.logdet_tri": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.einsum",
    "numpy.log",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.linalg.m_dot": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.einsum"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.linalg.mmdot": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "Exception",
    "bayespy.utils.linalg._dot"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.linalg.mvdot": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "bayespy.utils.linalg.inner"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.linalg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.utils.linalg.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "bayespy.utils.linalg.outer": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "numpy.asanyarray",
    "numpy.ndim",
    "numpy.reshape",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.linalg.solve_triangular": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "NotImplementedError",
    "len",
    "min",
    "numpy.atleast_1d",
    "numpy.atleast_2d",
    "numpy.shape",
    "numpy.zeros",
    "range",
    "scipy.linalg.solve_triangular",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.linalg.sp": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "bayespy.utils.linalg.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "bayespy.utils.linalg.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "bayespy.utils.linalg.tracedot": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "numpy.einsum"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.linalg.transpose": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "numpy.swapaxes",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.optimize": {
  "data": {},
  "type": "module"
 },
 "bayespy.utils.optimize.check_gradient": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "f",
    "numpy.linalg.norm",
    "print",
    "scipy.optimize.approx_fprime",
    "scipy.optimize.optimize._epsilon"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.optimize.minimize": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "scipy.optimize.minimize"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.optimize.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.utils.optimize.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "bayespy.utils.random": {
  "data": {
   "symbols_in_volume": [
    "bayespy.utils.random.wishart"
   ]
  },
  "type": "module"
 },
 "bayespy.utils.random.alpha_beta_recursion": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "ValueError",
    "numpy.exp",
    "numpy.shape",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "reversed"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.random.bernoulli": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "numpy.random.rand",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.random.categorical": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "numpy.any",
    "numpy.asanyarray",
    "numpy.cumsum",
    "numpy.int",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.searchsorted",
    "numpy.shape",
    "numpy.sum",
    "numpy.zeros",
    "tuple"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.random.correlation": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.randn",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.random.covariance": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.random.randn",
    "numpy.swapaxes",
    "tuple"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.random.dirichlet": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "RuntimeError",
    "int",
    "isinstance",
    "numpy.any",
    "numpy.random.gamma",
    "numpy.shape",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.random.gamma": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "RuntimeError",
    "numpy.any",
    "numpy.random.gamma"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.random.gamma_entropy": {
  "data": {
   "lineno": 186
  },
  "type": "function"
 },
 "bayespy.utils.random.gamma_logpdf": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "bayespy.utils.random.gaussian_entropy": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.random.gaussian_gamma_to_t": {
  "data": {
   "lineno": 425
  },
  "type": "function"
 },
 "bayespy.utils.random.gaussian_logpdf": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.random.intervals": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.cumsum",
    "numpy.ones",
    "numpy.random.multinomial"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.random.invwishart_rand": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "bayespy.utils.random.wishart_rand",
    "numpy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.random.logodds_to_probability": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.random.mask": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.random.multinomial": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "ValueError",
    "numpy.broadcast_to",
    "numpy.empty",
    "numpy.int",
    "numpy.random.multinomial",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.random.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.utils.random.orth": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "numpy.linalg.qr",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.random.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "bayespy.utils.random.sphere": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "numpy.arccos",
    "numpy.pi",
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.random.svd": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "bayespy.utils.random.orth",
    "len",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.random.t_logpdf": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.pi",
    "scipy.special.gammaln"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.random.wishart": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dot",
    "numpy.random.multivariate_normal",
    "numpy.shape",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.random.wishart_rand": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "bayespy.utils.tests": {
  "data": {},
  "type": "module"
 },
 "bayespy.utils.tests.test_linalg": {
  "data": {},
  "type": "module"
 },
 "bayespy.utils.tests.test_linalg.TestBandedSolve": {
  "data": {
   "lineno": 112
  },
  "type": "class"
 },
 "bayespy.utils.tests.test_linalg.TestBandedSolve.test_block_banded_solve": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "len",
    "numpy.allclose",
    "numpy.asarray",
    "numpy.dot",
    "numpy.int",
    "numpy.linalg.inv",
    "numpy.linalg.slogdet",
    "numpy.ones",
    "numpy.random.randn",
    "numpy.reshape",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.tests.test_linalg.TestDot": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "bayespy.utils.tests.test_linalg.TestDot.test_dot": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.tests.test_linalg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.utils.tests.test_misc": {
  "data": {},
  "type": "module"
 },
 "bayespy.utils.tests.test_misc.TestAddAxes": {
  "data": {
   "lineno": 67
  },
  "type": "class"
 },
 "bayespy.utils.tests.test_misc.TestAddAxes.test_add_axes": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "f",
    "numpy.ones",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.tests.test_misc.TestBroadcasting": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "bayespy.utils.tests.test_misc.unittest"
   ]
  },
  "type": "class"
 },
 "bayespy.utils.tests.test_misc.TestBroadcasting.test_is_shape_subset": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.tests.test_misc.TestCeilDiv": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "bayespy.utils.tests.test_misc.TestCeilDiv.test_ceildiv": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "bayespy.utils.tests.test_misc.TestInvPsi": {
  "data": {
   "lineno": 438
  },
  "type": "class"
 },
 "bayespy.utils.tests.test_misc.TestInvPsi.test_invpsi": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "numpy.random.rand",
    "scipy.special.psi"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.tests.test_misc.TestLogSumExp": {
  "data": {
   "lineno": 342
  },
  "type": "class"
 },
 "bayespy.utils.tests.test_misc.TestLogSumExp.test_logsumexp": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "RuntimeWarning",
    "bayespy.utils.tests.test_misc.warnings",
    "numpy.exp",
    "numpy.inf",
    "numpy.log",
    "numpy.nan",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.tests.test_misc.TestMean": {
  "data": {
   "lineno": 389
  },
  "type": "class"
 },
 "bayespy.utils.tests.test_misc.TestMean.test_mean": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "RuntimeWarning",
    "bayespy.utils.tests.test_misc.warnings",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.tests.test_misc.TestMultiplyShapes": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "bayespy.utils.tests.test_misc.unittest"
   ]
  },
  "type": "class"
 },
 "bayespy.utils.tests.test_misc.TestMultiplyShapes.test_multiply_shapes": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "f",
    "tuple"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.tests.test_misc.TestPutSimple": {
  "data": {
   "lineno": 456
  },
  "type": "class"
 },
 "bayespy.utils.tests.test_misc.TestPutSimple.test_put_simple": {
  "data": {
   "lineno": 458
  },
  "type": "function"
 },
 "bayespy.utils.tests.test_misc.TestSumMultiply": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "bayespy.utils.tests.test_misc.unittest"
   ]
  },
  "type": "class"
 },
 "bayespy.utils.tests.test_misc.TestSumMultiply.check_sum_multiply": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "list",
    "numpy.arange",
    "numpy.delete",
    "numpy.ndim",
    "numpy.random.randn",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "tuple"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.tests.test_misc.TestSumMultiply.test_sum_multiply": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.tests.test_misc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bayespy.utils.tests.test_misc.psi": {
  "data": {
   "shadows": "scipy.special.psi"
  },
  "type": "import"
 },
 "bayespy.utils.tests.test_misc.testing": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "bayespy.utils.tests.test_misc.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "bayespy.utils.tests.test_misc.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "bayespy.utils.tests.test_random": {
  "data": {},
  "type": "module"
 },
 "bayespy.utils.tests.test_random.TestAlphaBetaRecursion": {
  "data": {
   "lineno": 100
  },
  "type": "class"
 },
 "bayespy.utils.tests.test_random.TestAlphaBetaRecursion.test": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.einsum",
    "numpy.inf",
    "numpy.isnan",
    "numpy.log",
    "numpy.seterr",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.tests.test_random.TestCeilDiv": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "bayespy.utils.tests.test_random.TestCeilDiv.test_categorical": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bayespy.utils.tests.test_random.TestDirichlet": {
  "data": {
   "lineno": 64
  },
  "type": "class"
 },
 "bayespy.utils.tests.test_random.TestDirichlet.test": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "bayespy.utils.tests.test_random.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 }
}