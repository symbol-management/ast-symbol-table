{
 "*": {
  "data": {
   "imports": [
    "hyperspy.misc.io.utils_readfile"
   ]
  },
  "type": "star-import"
 },
 "pyxem": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyxem.logging"
   ]
  },
  "type": "module"
 },
 "pyxem.BaseSignal": {
  "data": {
   "shadows": "hyperspy.signal.BaseSignal"
  },
  "type": "import"
 },
 "pyxem.Load": {
  "data": {
   "shadows": "hyperspy.signal_tools.Load"
  },
  "type": "import"
 },
 "pyxem.VisibleDeprecationWarning": {
  "data": {
   "shadows": "hyperspy.exceptions.VisibleDeprecationWarning"
  },
  "type": "import"
 },
 "pyxem._logger": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "pyxem.assign_signal_subclass": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "ValueError",
    "hyperspy.misc.utils.find_subclasses",
    "hyperspy.signal.BaseSignal",
    "int",
    "isinstance",
    "numpy.complexfloating",
    "numpy.issubdtype"
   ]
  },
  "type": "function"
 },
 "pyxem.components": {
  "data": {},
  "type": "module"
 },
 "pyxem.components.diffraction_component": {
  "data": {},
  "type": "module"
 },
 "pyxem.components.diffraction_component.Component": {
  "data": {
   "shadows": "hyperspy.component.Component"
  },
  "type": "import"
 },
 "pyxem.components.diffraction_component.ElectronDiffractionForwardModel": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "hyperspy.component.Component"
   ]
  },
  "type": "class"
 },
 "pyxem.components.diffraction_component.ElectronDiffractionForwardModel.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "hyperspy.component.Component.__init__"
   ]
  },
  "type": "function"
 },
 "pyxem.components.diffraction_component.ElectronDiffractionForwardModel.function": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "pyxem.components.diffraction_component.ElectronDiffractionForwardModel.simulate": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "pyxem.components.diffraction_component.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.components.scalable_reference_pattern": {
  "data": {},
  "type": "module"
 },
 "pyxem.components.scalable_reference_pattern.Component": {
  "data": {
   "shadows": "hyperspy.component.Component"
  },
  "type": "import"
 },
 "pyxem.components.scalable_reference_pattern.DisplacementGradientMap": {
  "data": {
   "shadows": "pyxem.signals.tensor_field.DisplacementGradientMap"
  },
  "type": "import"
 },
 "pyxem.components.scalable_reference_pattern.ScalableReferencePattern": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "hyperspy.component.Component"
   ]
  },
  "type": "class"
 },
 "pyxem.components.scalable_reference_pattern.ScalableReferencePattern.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "hyperspy.component.Component.__init__"
   ]
  },
  "type": "function"
 },
 "pyxem.components.scalable_reference_pattern.ScalableReferencePattern.construct_displacement_gradient": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.append",
    "numpy.ones",
    "pyxem.signals.tensor_field.DisplacementGradientMap"
   ]
  },
  "type": "function"
 },
 "pyxem.components.scalable_reference_pattern.ScalableReferencePattern.function": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "numpy.array",
    "skimage.transform.AffineTransform",
    "skimage.transform.SimilarityTransform",
    "skimage.transform.warp"
   ]
  },
  "type": "function"
 },
 "pyxem.components.scalable_reference_pattern.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.components.scalable_reference_pattern.tf": {
  "data": {
   "shadows": "skimage.transform"
  },
  "type": "import"
 },
 "pyxem.dict2signal": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "f",
    "function",
    "hyperspy.drawing.marker.markers_metadata_dict_to_markers",
    "len",
    "pyxem.assign_signal_subclass"
   ]
  },
  "type": "function"
 },
 "pyxem.ensure_directory": {
  "data": {
   "shadows": "hyperspy.misc.io.tools.ensure_directory"
  },
  "type": "import"
 },
 "pyxem.f_error_fmt": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "pyxem.find_subclasses": {
  "data": {
   "shadows": "hyperspy.misc.utils.find_subclasses"
  },
  "type": "import"
 },
 "pyxem.generators": {
  "data": {},
  "type": "module"
 },
 "pyxem.generators.calibration_generator": {
  "data": {},
  "type": "module"
 },
 "pyxem.generators.calibration_generator.CalibrationDataLibrary": {
  "data": {
   "shadows": "pyxem.libraries.calibration_library.CalibrationDataLibrary"
  },
  "type": "import"
 },
 "pyxem.generators.calibration_generator.CalibrationGenerator": {
  "data": {
   "lineno": 36
  },
  "type": "class"
 },
 "pyxem.generators.calibration_generator.CalibrationGenerator.__init__": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "pyxem.generators.calibration_generator.CalibrationGenerator.get_diffraction_calibration": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "ValueError",
    "hyperspy.roi.Line2DROI",
    "line",
    "min",
    "numpy.abs",
    "numpy.sqrt",
    "pyxem.signals.electron_diffraction.ElectronDiffraction",
    "pyxem.stack_method"
   ]
  },
  "type": "function"
 },
 "pyxem.generators.calibration_generator.CalibrationGenerator.get_distortion_residuals": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "ValueError",
    "pyxem.signals.electron_diffraction.ElectronDiffraction",
    "pyxem.stack_method",
    "pyxem.utils.calibration_utils.generate_ring_pattern"
   ]
  },
  "type": "function"
 },
 "pyxem.generators.calibration_generator.CalibrationGenerator.get_elliptical_distortion": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "math.cos",
    "math.sin",
    "numpy.array",
    "numpy.dot",
    "numpy.linalg.inv",
    "numpy.linspace",
    "numpy.meshgrid",
    "pyxem.utils.calibration_utils.calc_radius_with_distortion",
    "pyxem.utils.calibration_utils.call_ring_pattern",
    "scipy.optimize.curve_fit"
   ]
  },
  "type": "function"
 },
 "pyxem.generators.calibration_generator.CalibrationGenerator.get_navigation_calibration": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "ValueError",
    "line_roi",
    "min",
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "pyxem.generators.calibration_generator.CalibrationGenerator.plot_calibrated_data": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "pyxem.signals.electron_diffraction.ElectronDiffraction",
    "pyxem.stack_method"
   ]
  },
  "type": "function"
 },
 "pyxem.generators.calibration_generator.CalibrationGenerator.plot_corrected_diffraction_pattern": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "ValueError",
    "hyperspy.roi.CircleROI",
    "pyxem.signals.electron_diffraction.ElectronDiffraction",
    "pyxem.stack_method"
   ]
  },
  "type": "function"
 },
 "pyxem.generators.calibration_generator.CircleROI": {
  "data": {
   "shadows": "hyperspy.roi.CircleROI"
  },
  "type": "import"
 },
 "pyxem.generators.calibration_generator.ElectronDiffraction": {
  "data": {
   "shadows": "pyxem.signals.electron_diffraction.ElectronDiffraction"
  },
  "type": "import"
 },
 "pyxem.generators.calibration_generator.Line2DROI": {
  "data": {
   "shadows": "hyperspy.roi.Line2DROI"
  },
  "type": "import"
 },
 "pyxem.generators.calibration_generator.calc_radius_with_distortion": {
  "data": {
   "shadows": "pyxem.utils.calibration_utils.calc_radius_with_distortion"
  },
  "type": "import"
 },
 "pyxem.generators.calibration_generator.call_ring_pattern": {
  "data": {
   "shadows": "pyxem.utils.calibration_utils.call_ring_pattern"
  },
  "type": "import"
 },
 "pyxem.generators.calibration_generator.cos": {
  "data": {
   "shadows": "math.cos"
  },
  "type": "import"
 },
 "pyxem.generators.calibration_generator.curve_fit": {
  "data": {
   "shadows": "scipy.optimize.curve_fit"
  },
  "type": "import"
 },
 "pyxem.generators.calibration_generator.generate_ring_pattern": {
  "data": {
   "shadows": "pyxem.utils.calibration_utils.generate_ring_pattern"
  },
  "type": "import"
 },
 "pyxem.generators.calibration_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.generators.calibration_generator.sin": {
  "data": {
   "shadows": "math.sin"
  },
  "type": "import"
 },
 "pyxem.generators.calibration_generator.stack_method": {
  "data": {
   "shadows": "pyxem.stack_method"
  },
  "type": "import"
 },
 "pyxem.generators.diffraction_generator": {
  "data": {},
  "type": "module"
 },
 "pyxem.generators.diffraction_generator.ATOMIC_SCATTERING_PARAMS": {
  "data": {
   "shadows": "pyxem.utils.atomic_scattering_params.ATOMIC_SCATTERING_PARAMS"
  },
  "type": "import"
 },
 "pyxem.generators.diffraction_generator.DiffractionGenerator": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyxem.generators.diffraction_generator.DiffractionGenerator.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "NotImplementedError",
    "pyxem.utils.sim_utils.get_electron_wavelength"
   ]
  },
  "type": "function"
 },
 "pyxem.generators.diffraction_generator.DiffractionGenerator.calculate_ed_data": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "numpy.absolute",
    "numpy.sqrt",
    "numpy.square",
    "numpy.sum",
    "pyxem.signals.diffraction_simulation.DiffractionSimulation",
    "pyxem.utils.sim_utils.get_kinematical_intensities",
    "pyxem.utils.sim_utils.get_points_in_sphere"
   ]
  },
  "type": "function"
 },
 "pyxem.generators.diffraction_generator.DiffractionGenerator.calculate_profile_data": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "int",
    "max",
    "numpy.any",
    "numpy.dot",
    "numpy.exp",
    "numpy.logical_not",
    "numpy.pi",
    "numpy.sum",
    "numpy.transpose",
    "pyxem.signals.diffraction_simulation.ProfileSimulation",
    "pyxem.utils.sim_utils.get_points_in_sphere",
    "pyxem.utils.sim_utils.get_unique_families",
    "pyxem.utils.sim_utils.get_vectorized_list_for_atomic_scattering_factors",
    "pyxem.utils.sim_utils.is_lattice_hexagonal",
    "round",
    "sorted",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyxem.generators.diffraction_generator.DiffractionSimulation": {
  "data": {
   "shadows": "pyxem.signals.diffraction_simulation.DiffractionSimulation"
  },
  "type": "import"
 },
 "pyxem.generators.diffraction_generator.ProfileSimulation": {
  "data": {
   "shadows": "pyxem.signals.diffraction_simulation.ProfileSimulation"
  },
  "type": "import"
 },
 "pyxem.generators.diffraction_generator.get_electron_wavelength": {
  "data": {
   "shadows": "pyxem.utils.sim_utils.get_electron_wavelength"
  },
  "type": "import"
 },
 "pyxem.generators.diffraction_generator.get_kinematical_intensities": {
  "data": {
   "shadows": "pyxem.utils.sim_utils.get_kinematical_intensities"
  },
  "type": "import"
 },
 "pyxem.generators.diffraction_generator.get_points_in_sphere": {
  "data": {
   "shadows": "pyxem.utils.sim_utils.get_points_in_sphere"
  },
  "type": "import"
 },
 "pyxem.generators.diffraction_generator.get_unique_families": {
  "data": {
   "shadows": "pyxem.utils.sim_utils.get_unique_families"
  },
  "type": "import"
 },
 "pyxem.generators.diffraction_generator.get_vectorized_list_for_atomic_scattering_factors": {
  "data": {
   "shadows": "pyxem.utils.sim_utils.get_vectorized_list_for_atomic_scattering_factors"
  },
  "type": "import"
 },
 "pyxem.generators.diffraction_generator.is_lattice_hexagonal": {
  "data": {
   "shadows": "pyxem.utils.sim_utils.is_lattice_hexagonal"
  },
  "type": "import"
 },
 "pyxem.generators.diffraction_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.generators.diffraction_generator.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "pyxem.generators.displacement_gradient_tensor_generator": {
  "data": {},
  "type": "module"
 },
 "pyxem.generators.displacement_gradient_tensor_generator.DisplacementGradientMap": {
  "data": {
   "shadows": "pyxem.signals.tensor_field.DisplacementGradientMap"
  },
  "type": "import"
 },
 "pyxem.generators.displacement_gradient_tensor_generator.get_DisplacementGradientMap": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "pyxem.signals.tensor_field.DisplacementGradientMap"
   ]
  },
  "type": "function"
 },
 "pyxem.generators.displacement_gradient_tensor_generator.get_single_DisplacementGradientTensor": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.linalg.inv",
    "numpy.matmul"
   ]
  },
  "type": "function"
 },
 "pyxem.generators.displacement_gradient_tensor_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.generators.indexation_generator": {
  "data": {},
  "type": "module"
 },
 "pyxem.generators.indexation_generator.IndexationGenerator": {
  "data": {
   "lineno": 38
  },
  "type": "class"
 },
 "pyxem.generators.indexation_generator.IndexationGenerator.__init__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "pyxem.generators.indexation_generator.IndexationGenerator.correlate": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "len",
    "min",
    "numpy.arange",
    "numpy.argpartition",
    "numpy.array",
    "numpy.clip",
    "numpy.cos",
    "numpy.deg2rad",
    "numpy.linalg.norm",
    "numpy.rint",
    "numpy.sin",
    "numpy.zeros",
    "pyxem.signals.indexation_results.TemplateMatchingResults",
    "pyxem.utils.indexation_utils.correlate_library",
    "pyxem.utils.sim_utils.transfer_navigation_axes",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxem.generators.indexation_generator.ProfileIndexationGenerator": {
  "data": {
   "lineno": 146
  },
  "type": "class"
 },
 "pyxem.generators.indexation_generator.ProfileIndexationGenerator.__init__": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "pyxem.generators.indexation_generator.ProfileIndexationGenerator.index_peaks": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "numpy.array",
    "pyxem.utils.indexation_utils.index_magnitudes"
   ]
  },
  "type": "function"
 },
 "pyxem.generators.indexation_generator.TemplateMatchingResults": {
  "data": {
   "shadows": "pyxem.signals.indexation_results.TemplateMatchingResults"
  },
  "type": "import"
 },
 "pyxem.generators.indexation_generator.VectorIndexationGenerator": {
  "data": {
   "lineno": 191
  },
  "type": "class"
 },
 "pyxem.generators.indexation_generator.VectorIndexationGenerator.__init__": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pyxem.generators.indexation_generator.VectorIndexationGenerator.index_vectors": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.deg2rad",
    "pyxem.signals.indexation_results.VectorMatchingResults",
    "pyxem.utils.indexation_utils.match_vectors",
    "pyxem.utils.sim_utils.transfer_navigation_axes"
   ]
  },
  "type": "function"
 },
 "pyxem.generators.indexation_generator.VectorMatchingResults": {
  "data": {
   "shadows": "pyxem.signals.indexation_results.VectorMatchingResults"
  },
  "type": "import"
 },
 "pyxem.generators.indexation_generator.correlate_library": {
  "data": {
   "shadows": "pyxem.utils.indexation_utils.correlate_library"
  },
  "type": "import"
 },
 "pyxem.generators.indexation_generator.hs": {
  "data": {
   "shadows": "hyperspy.api"
  },
  "type": "import"
 },
 "pyxem.generators.indexation_generator.index_magnitudes": {
  "data": {
   "shadows": "pyxem.utils.indexation_utils.index_magnitudes"
  },
  "type": "import"
 },
 "pyxem.generators.indexation_generator.match_vectors": {
  "data": {
   "shadows": "pyxem.utils.indexation_utils.match_vectors"
  },
  "type": "import"
 },
 "pyxem.generators.indexation_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.generators.indexation_generator.transfer_navigation_axes": {
  "data": {
   "shadows": "pyxem.utils.sim_utils.transfer_navigation_axes"
  },
  "type": "import"
 },
 "pyxem.generators.library_generator": {
  "data": {},
  "type": "module"
 },
 "pyxem.generators.library_generator.DiffractionLibrary": {
  "data": {
   "shadows": "pyxem.libraries.diffraction_library.DiffractionLibrary"
  },
  "type": "import"
 },
 "pyxem.generators.library_generator.DiffractionLibraryGenerator": {
  "data": {
   "lineno": 37
  },
  "type": "class"
 },
 "pyxem.generators.library_generator.DiffractionLibraryGenerator.__init__": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "pyxem.generators.library_generator.DiffractionLibraryGenerator.get_diffraction_library": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "int",
    "len",
    "numpy.deg2rad",
    "numpy.empty",
    "numpy.rint",
    "pyxem.libraries.diffraction_library.DiffractionLibrary",
    "pyxem.utils.sim_utils.simulate_rotated_structure",
    "tqdm.tqdm",
    "transforms3d.euler.euler2mat"
   ]
  },
  "type": "function"
 },
 "pyxem.generators.library_generator.DiffractionVectorLibrary": {
  "data": {
   "shadows": "pyxem.libraries.vector_library.DiffractionVectorLibrary"
  },
  "type": "import"
 },
 "pyxem.generators.library_generator.VectorLibraryGenerator": {
  "data": {
   "lineno": 134
  },
  "type": "class"
 },
 "pyxem.generators.library_generator.VectorLibraryGenerator.__init__": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "pyxem.generators.library_generator.VectorLibraryGenerator.get_vector_library": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "len",
    "numpy.column_stack",
    "numpy.fliplr",
    "numpy.mgrid",
    "numpy.newaxis",
    "numpy.take_along_axis",
    "numpy.triu_indices",
    "numpy.unique",
    "numpy.vstack",
    "pyxem.libraries.vector_library.DiffractionVectorLibrary",
    "pyxem.utils.sim_utils.get_points_in_sphere",
    "pyxem.utils.vector_utils.get_angle_cartesian_vec"
   ]
  },
  "type": "function"
 },
 "pyxem.generators.library_generator.euler2mat": {
  "data": {
   "shadows": "transforms3d.euler.euler2mat"
  },
  "type": "import"
 },
 "pyxem.generators.library_generator.get_angle_cartesian_vec": {
  "data": {
   "shadows": "pyxem.utils.vector_utils.get_angle_cartesian_vec"
  },
  "type": "import"
 },
 "pyxem.generators.library_generator.get_points_in_sphere": {
  "data": {
   "shadows": "pyxem.utils.sim_utils.get_points_in_sphere"
  },
  "type": "import"
 },
 "pyxem.generators.library_generator.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyxem.generators.library_generator.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyxem.generators.library_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.generators.library_generator.simulate_rotated_structure": {
  "data": {
   "shadows": "pyxem.utils.sim_utils.simulate_rotated_structure"
  },
  "type": "import"
 },
 "pyxem.generators.library_generator.tqdm": {
  "data": {
   "shadows": "tqdm.tqdm"
  },
  "type": "import"
 },
 "pyxem.generators.structure_library_generator": {
  "data": {},
  "type": "module"
 },
 "pyxem.generators.structure_library_generator.StructureLibrary": {
  "data": {
   "shadows": "pyxem.libraries.structure_library.StructureLibrary"
  },
  "type": "import"
 },
 "pyxem.generators.structure_library_generator.StructureLibraryGenerator": {
  "data": {
   "lineno": 37
  },
  "type": "class"
 },
 "pyxem.generators.structure_library_generator.StructureLibraryGenerator.__init__": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "pyxem.generators.structure_library_generator.StructureLibraryGenerator.get_orientations_from_list": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "pyxem.libraries.structure_library.StructureLibrary"
   ]
  },
  "type": "function"
 },
 "pyxem.generators.structure_library_generator.StructureLibraryGenerator.get_orientations_from_stereographic_triangle": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.deg2rad",
    "pyxem.generators.structure_library_generator.stereographic_corners",
    "pyxem.libraries.structure_library.StructureLibrary",
    "pyxem.utils.sim_utils.rotation_list_stereographic",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyxem.generators.structure_library_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.generators.structure_library_generator.rotation_list_stereographic": {
  "data": {
   "shadows": "pyxem.utils.sim_utils.rotation_list_stereographic"
  },
  "type": "import"
 },
 "pyxem.generators.structure_library_generator.stereographic_corners": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pyxem.generators.subpixelrefinement_generator": {
  "data": {},
  "type": "module"
 },
 "pyxem.generators.subpixelrefinement_generator.DiffractionVectors": {
  "data": {
   "shadows": "pyxem.signals.diffraction_vectors.DiffractionVectors"
  },
  "type": "import"
 },
 "pyxem.generators.subpixelrefinement_generator.SubpixelrefinementGenerator": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "pyxem.generators.subpixelrefinement_generator.SubpixelrefinementGenerator.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ValueError",
    "_floor",
    "isinstance",
    "numpy.any",
    "numpy.max",
    "numpy.ndarray",
    "pyxem.signals.diffraction_vectors.DiffractionVectors"
   ]
  },
  "type": "function"
 },
 "pyxem.generators.subpixelrefinement_generator.SubpixelrefinementGenerator.__init__._floor": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.floor",
    "numpy.int",
    "numpy.object"
   ]
  },
  "type": "function"
 },
 "pyxem.generators.subpixelrefinement_generator.SubpixelrefinementGenerator.center_of_mass_method": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "pyxem.signals.diffraction_vectors.DiffractionVectors"
   ]
  },
  "type": "function"
 },
 "pyxem.generators.subpixelrefinement_generator.SubpixelrefinementGenerator.center_of_mass_method._center_of_mass_hs": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pyxem.generators.subpixelrefinement_generator.SubpixelrefinementGenerator.center_of_mass_method._center_of_mass_map": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "_center_of_mass_hs",
    "_com_experimental_square",
    "enumerate",
    "numpy.float64",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "pyxem.generators.subpixelrefinement_generator.SubpixelrefinementGenerator.center_of_mass_method._com_experimental_square": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "numpy.copy",
    "pyxem.utils.subpixel_refinements_utils.get_experimental_square"
   ]
  },
  "type": "function"
 },
 "pyxem.generators.subpixelrefinement_generator.SubpixelrefinementGenerator.conventional_xc": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "pyxem.signals.diffraction_vectors.DiffractionVectors",
    "pyxem.utils.subpixel_refinements_utils.get_simulated_disc"
   ]
  },
  "type": "function"
 },
 "pyxem.generators.subpixelrefinement_generator.SubpixelrefinementGenerator.conventional_xc._conventional_xc_map": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "enumerate",
    "numpy.float64",
    "numpy.zeros_like",
    "pyxem.utils.subpixel_refinements_utils._conventional_xc",
    "pyxem.utils.subpixel_refinements_utils.get_experimental_square"
   ]
  },
  "type": "function"
 },
 "pyxem.generators.subpixelrefinement_generator.SubpixelrefinementGenerator.local_gaussian_method": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "pyxem.signals.diffraction_vectors.DiffractionVectors"
   ]
  },
  "type": "function"
 },
 "pyxem.generators.subpixelrefinement_generator.SubpixelrefinementGenerator.local_gaussian_method._lg_map": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "_new_lg_idea",
    "enumerate",
    "numpy.float64",
    "numpy.zeros_like",
    "pyxem.utils.subpixel_refinements_utils.get_experimental_square"
   ]
  },
  "type": "function"
 },
 "pyxem.generators.subpixelrefinement_generator.SubpixelrefinementGenerator.local_gaussian_method._new_lg_idea": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "ValueError",
    "numpy.argmax",
    "numpy.unravel_index"
   ]
  },
  "type": "function"
 },
 "pyxem.generators.subpixelrefinement_generator._conventional_xc": {
  "data": {
   "shadows": "pyxem.utils.subpixel_refinements_utils._conventional_xc"
  },
  "type": "import"
 },
 "pyxem.generators.subpixelrefinement_generator.get_experimental_square": {
  "data": {
   "shadows": "pyxem.utils.subpixel_refinements_utils.get_experimental_square"
  },
  "type": "import"
 },
 "pyxem.generators.subpixelrefinement_generator.get_simulated_disc": {
  "data": {
   "shadows": "pyxem.utils.subpixel_refinements_utils.get_simulated_disc"
  },
  "type": "import"
 },
 "pyxem.generators.subpixelrefinement_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.generators.subpixelrefinement_generator.peaks_as_gvectors": {
  "data": {
   "shadows": "pyxem.utils.expt_utils.peaks_as_gvectors"
  },
  "type": "import"
 },
 "pyxem.generators.vdf_generator": {
  "data": {},
  "type": "module"
 },
 "pyxem.generators.vdf_generator.VDFGenerator": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "pyxem.generators.vdf_generator.VDFGenerator.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyxem.generators.vdf_generator.VDFGenerator.get_concentric_vdf_images": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "annulus",
    "hyperspy.api.roi.CircleROI",
    "numpy.array",
    "numpy.asarray",
    "numpy.linspace",
    "pyxem.signals.vdf_image.VDFImage",
    "pyxem.utils.vdf_utils.normalize_vdf"
   ]
  },
  "type": "function"
 },
 "pyxem.generators.vdf_generator.VDFGenerator.get_vector_vdf_images": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "disk",
    "hyperspy.api.roi.CircleROI",
    "numpy.asarray",
    "pyxem.signals.vdf_image.VDFImage",
    "pyxem.utils.vdf_utils.normalize_vdf"
   ]
  },
  "type": "function"
 },
 "pyxem.generators.vdf_generator.VDFImage": {
  "data": {
   "shadows": "pyxem.signals.vdf_image.VDFImage"
  },
  "type": "import"
 },
 "pyxem.generators.vdf_generator.normalize_vdf": {
  "data": {
   "shadows": "pyxem.utils.vdf_utils.normalize_vdf"
  },
  "type": "import"
 },
 "pyxem.generators.vdf_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.generators.vdf_generator.roi": {
  "data": {
   "shadows": "hyperspy.api.roi"
  },
  "type": "import"
 },
 "pyxem.get_gui": {
  "data": {
   "shadows": "hyperspy.ui_registry.get_gui"
  },
  "type": "import"
 },
 "pyxem.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "pyxem.hyperspy._lazy_signals": {
  "data": {
   "shadows": "hyperspy._lazy_signals"
  },
  "type": "import"
 },
 "pyxem.image": {
  "data": {
   "shadows": "hyperspy.io_plugins.image"
  },
  "type": "import"
 },
 "pyxem.io_plugins": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "hyperspy.io_plugins.blockfile",
    "hyperspy.io_plugins.digital_micrograph",
    "hyperspy.io_plugins.emd",
    "hyperspy.io_plugins.fei",
    "hyperspy.io_plugins.hspy",
    "hyperspy.io_plugins.image",
    "hyperspy.io_plugins.mrc",
    "hyperspy.io_plugins.msa",
    "hyperspy.io_plugins.netcdf",
    "hyperspy.io_plugins.ripple",
    "hyperspy.io_plugins.tiff",
    "pyxem.io_plugins._logger",
    "pyxem.io_plugins.default_write_ext",
    "pyxem.io_plugins.io_plugins",
    "pyxem.io_plugins.logging",
    "pyxem.io_plugins.mib",
    "set"
   ]
  },
  "type": "module"
 },
 "pyxem.io_plugins._logger": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyxem.io_plugins.blockfile": {
  "data": {
   "shadows": "hyperspy.io_plugins.blockfile"
  },
  "type": "import"
 },
 "pyxem.io_plugins.default_write_ext": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "pyxem.io_plugins.digital_micrograph": {
  "data": {
   "shadows": "hyperspy.io_plugins.digital_micrograph"
  },
  "type": "import"
 },
 "pyxem.io_plugins.emd": {
  "data": {
   "shadows": "hyperspy.io_plugins.emd"
  },
  "type": "import"
 },
 "pyxem.io_plugins.fei": {
  "data": {
   "shadows": "hyperspy.io_plugins.fei"
  },
  "type": "import"
 },
 "pyxem.io_plugins.hspy": {
  "data": {
   "shadows": "hyperspy.io_plugins.hspy"
  },
  "type": "import"
 },
 "pyxem.io_plugins.image": {
  "data": {
   "shadows": "hyperspy.io_plugins.image"
  },
  "type": "import"
 },
 "pyxem.io_plugins.io_plugins": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pyxem.io_plugins.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyxem.io_plugins.mib": {
  "data": {
   "shadows": "pyxem.io_plugins.mib"
  },
  "type": "import"
 },
 "pyxem.io_plugins.mib.DictionaryTreeBrowser": {
  "data": {
   "shadows": "hyperspy.misc.utils.DictionaryTreeBrowser"
  },
  "type": "import"
 },
 "pyxem.io_plugins.mib.Release": {
  "data": {
   "shadows": "hyperspy.Release"
  },
  "type": "import"
 },
 "pyxem.io_plugins.mib._logger": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyxem.io_plugins.mib.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "pyxem.io_plugins.mib.comment": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pyxem.io_plugins.mib.default_extension": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyxem.io_plugins.mib.description": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyxem.io_plugins.mib.dtype2keys": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "pyxem.io_plugins.mib.endianess2hdr": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "pyxem.io_plugins.mib.file_extensions": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyxem.io_plugins.mib.file_reader": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "IOError",
    "hyperspy.misc.utils.DictionaryTreeBrowser",
    "len",
    "pyxem.io_plugins.mib._logger",
    "pyxem.io_plugins.mib.codecs",
    "pyxem.io_plugins.mib.file_extensions",
    "pyxem.io_plugins.mib.parse_hdr",
    "pyxem.io_plugins.mib.read_mib",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxem.io_plugins.mib.file_writer": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "IOError",
    "eval",
    "int",
    "len",
    "pyxem.io_plugins.mib._logger",
    "pyxem.io_plugins.mib.dtype2keys",
    "pyxem.io_plugins.mib.endianess2hdr",
    "pyxem.io_plugins.mib.write_hdr",
    "round",
    "write_raw"
   ]
  },
  "type": "function"
 },
 "pyxem.io_plugins.mib.format_name": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyxem.io_plugins.mib.full_support": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyxem.io_plugins.mib.hdr_keys": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "pyxem.io_plugins.mib.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyxem.io_plugins.mib.newline": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "pyxem.io_plugins.mib.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.io_plugins.mib.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pyxem.io_plugins.mib.parse_hdr": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "IOError",
    "any",
    "int",
    "pyxem.io_plugins.mib.comment",
    "pyxem.io_plugins.mib.newline",
    "pyxem.io_plugins.mib.sep",
    "str"
   ]
  },
  "type": "function"
 },
 "pyxem.io_plugins.mib.read_mib": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "numpy.dtype",
    "numpy.memmap",
    "str"
   ]
  },
  "type": "function"
 },
 "pyxem.io_plugins.mib.sep": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pyxem.io_plugins.mib.write_hdr": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "hyperspy.Release.version",
    "isinstance",
    "iter",
    "pyxem.io_plugins.mib.codecs",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "pyxem.io_plugins.mib.write_mib": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "len",
    "numpy.rollaxis"
   ]
  },
  "type": "function"
 },
 "pyxem.io_plugins.mib.writes": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pyxem.io_plugins.mrc": {
  "data": {
   "shadows": "hyperspy.io_plugins.mrc"
  },
  "type": "import"
 },
 "pyxem.io_plugins.msa": {
  "data": {
   "shadows": "hyperspy.io_plugins.msa"
  },
  "type": "import"
 },
 "pyxem.io_plugins.netcdf": {
  "data": {
   "shadows": "hyperspy.io_plugins.netcdf"
  },
  "type": "import"
 },
 "pyxem.io_plugins.ripple": {
  "data": {
   "shadows": "hyperspy.io_plugins.ripple"
  },
  "type": "import"
 },
 "pyxem.io_plugins.tiff": {
  "data": {
   "shadows": "hyperspy.io_plugins.tiff"
  },
  "type": "import"
 },
 "pyxem.libraries": {
  "data": {},
  "type": "module"
 },
 "pyxem.libraries.calibration_library": {
  "data": {},
  "type": "module"
 },
 "pyxem.libraries.calibration_library.CalibrationDataLibrary": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "pyxem.libraries.calibration_library.CalibrationDataLibrary.__init__": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "pyxem.libraries.calibration_library.CalibrationDataLibrary.plot_calibration_data": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pyxem.libraries.calibration_library.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.libraries.calibration_library.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyxem.libraries.calibration_library.stack_method": {
  "data": {
   "shadows": "pyxem.stack_method"
  },
  "type": "import"
 },
 "pyxem.libraries.diffraction_library": {
  "data": {},
  "type": "module"
 },
 "pyxem.libraries.diffraction_library.DiffractionLibrary": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "pyxem.libraries.diffraction_library.DiffractionLibrary.__init__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "pyxem.libraries.diffraction_library.DiffractionLibrary.get_library_entry": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "iter",
    "next",
    "numpy.linalg.norm",
    "numpy.ndarray",
    "pyxem.libraries.diffraction_library._get_library_entry_from_angles"
   ]
  },
  "type": "function"
 },
 "pyxem.libraries.diffraction_library.DiffractionLibrary.pickle_library": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "open",
    "pyxem.libraries.diffraction_library.pickle"
   ]
  },
  "type": "function"
 },
 "pyxem.libraries.diffraction_library._get_library_entry_from_angles": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "numpy.abs",
    "numpy.subtract",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pyxem.libraries.diffraction_library.load_DiffractionLibrary": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "RuntimeError",
    "open",
    "pyxem.libraries.diffraction_library.pickle"
   ]
  },
  "type": "function"
 },
 "pyxem.libraries.diffraction_library.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.libraries.diffraction_library.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyxem.libraries.structure_library": {
  "data": {},
  "type": "module"
 },
 "pyxem.libraries.structure_library.StructureLibrary": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "pyxem.libraries.structure_library.StructureLibrary.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyxem.libraries.structure_library.pxm": {
  "data": {
   "shadows": "pyxem"
  },
  "type": "import"
 },
 "pyxem.libraries.vector_library": {
  "data": {},
  "type": "module"
 },
 "pyxem.libraries.vector_library.DiffractionVectorLibrary": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "pyxem.libraries.vector_library.DiffractionVectorLibrary.__init__": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "pyxem.libraries.vector_library.DiffractionVectorLibrary.pickle_library": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "open",
    "pyxem.libraries.vector_library.pickle"
   ]
  },
  "type": "function"
 },
 "pyxem.libraries.vector_library.load_VectorLibrary": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "RuntimeError",
    "open",
    "pyxem.libraries.vector_library.pickle"
   ]
  },
  "type": "function"
 },
 "pyxem.libraries.vector_library.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.libraries.vector_library.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyxem.load": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "hyperspy.exceptions.VisibleDeprecationWarning",
    "hyperspy.misc.utils.stack",
    "hyperspy.signal_tools.Load",
    "hyperspy.ui_registry.get_gui",
    "isinstance",
    "len",
    "list",
    "natsort.natsorted",
    "pyxem._logger",
    "pyxem.f_error_fmt",
    "pyxem.glob",
    "pyxem.load_single_file",
    "pyxem.os",
    "pyxem.warnings",
    "range",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyxem.load_mib": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "ElectronDiffraction",
    "hyperspy.io.load_with_reader",
    "max",
    "numpy.concatenate",
    "numpy.flip",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "pyxem.load_single_file": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "BaseException",
    "IOError",
    "hyperspy.io.load_with_reader",
    "hyperspy.io_plugins.image",
    "len",
    "pyxem.os"
   ]
  },
  "type": "function"
 },
 "pyxem.load_with_reader": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "len",
    "pyxem.dict2signal",
    "pyxem.os"
   ]
  },
  "type": "function"
 },
 "pyxem.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyxem.markers_metadata_dict_to_markers": {
  "data": {
   "shadows": "hyperspy.drawing.marker.markers_metadata_dict_to_markers"
  },
  "type": "import"
 },
 "pyxem.mib_reader": {
  "data": {
   "shadows": "mib"
  },
  "type": "import"
 },
 "pyxem.natsorted": {
  "data": {
   "shadows": "natsort.natsorted"
  },
  "type": "import"
 },
 "pyxem.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyxem.overwrite_method": {
  "data": {
   "shadows": "hyperspy.misc.io.tools.overwrite"
  },
  "type": "import"
 },
 "pyxem.roi": {
  "data": {
   "shadows": "hyperspy.api.roi"
  },
  "type": "import"
 },
 "pyxem.save": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "hyperspy.misc.io.tools.ensure_directory",
    "hyperspy.misc.io.tools.overwrite",
    "hyperspy.misc.utils.strlist2enumeration",
    "pyxem._logger",
    "pyxem.os"
   ]
  },
  "type": "function"
 },
 "pyxem.signals": {
  "data": {},
  "type": "module"
 },
 "pyxem.signals.crystallographic_map": {
  "data": {},
  "type": "module"
 },
 "pyxem.signals.crystallographic_map.BaseSignal": {
  "data": {
   "shadows": "hyperspy.signals.BaseSignal"
  },
  "type": "import"
 },
 "pyxem.signals.crystallographic_map.CrystallographicMap": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "hyperspy.signals.BaseSignal"
   ]
  },
  "type": "class"
 },
 "pyxem.signals.crystallographic_map.CrystallographicMap.__init__": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "hyperspy.signals.BaseSignal.__init__"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.crystallographic_map.CrystallographicMap.get_distance_from_modal_angle": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "pyxem.signals.crystallographic_map._distance_from_fixed_angle"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.crystallographic_map.CrystallographicMap.get_metric_map": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "ValueError",
    "pyxem.signals.crystallographic_map._metric_from_dict",
    "pyxem.utils.sim_utils.transfer_navigation_axes_to_signal_axes"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.crystallographic_map.CrystallographicMap.get_modal_angles": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.sum",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.crystallographic_map.CrystallographicMap.get_orientation_map": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "pyxem.signals.crystallographic_map._euler2axangle_signal",
    "pyxem.utils.sim_utils.transfer_navigation_axes_to_signal_axes"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.crystallographic_map.CrystallographicMap.get_phase_map": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "numpy.int",
    "pyxem.utils.sim_utils.transfer_navigation_axes_to_signal_axes"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.crystallographic_map.CrystallographicMap.save_mtex_map": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.meshgrid",
    "numpy.savetxt",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.crystallographic_map.Signal2D": {
  "data": {
   "shadows": "hyperspy.signals.Signal2D"
  },
  "type": "import"
 },
 "pyxem.signals.crystallographic_map._distance_from_fixed_angle": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.arccos",
    "numpy.deg2rad",
    "numpy.dot",
    "numpy.rad2deg",
    "transforms3d.euler.euler2quat",
    "transforms3d.euler.quat2axangle",
    "transforms3d.quaternions.qinverse",
    "transforms3d.quaternions.qmult"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.crystallographic_map._euler2axangle_signal": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "numpy.rad2deg",
    "transforms3d.euler.euler2axangle"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.crystallographic_map._metric_from_dict": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "pyxem.signals.crystallographic_map.euler2axangle": {
  "data": {
   "shadows": "transforms3d.euler.euler2axangle"
  },
  "type": "import"
 },
 "pyxem.signals.crystallographic_map.euler2quat": {
  "data": {
   "shadows": "transforms3d.euler.euler2quat"
  },
  "type": "import"
 },
 "pyxem.signals.crystallographic_map.load_mtex_map": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "int",
    "numpy.empty",
    "numpy.loadtxt",
    "numpy.max",
    "pyxem.signals.crystallographic_map.CrystallographicMap",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.crystallographic_map.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.signals.crystallographic_map.qinverse": {
  "data": {
   "shadows": "transforms3d.quaternions.qinverse"
  },
  "type": "import"
 },
 "pyxem.signals.crystallographic_map.qmult": {
  "data": {
   "shadows": "transforms3d.quaternions.qmult"
  },
  "type": "import"
 },
 "pyxem.signals.crystallographic_map.quat2axangle": {
  "data": {
   "shadows": "transforms3d.euler.quat2axangle"
  },
  "type": "import"
 },
 "pyxem.signals.crystallographic_map.tqdm": {
  "data": {
   "shadows": "tqdm.tqdm"
  },
  "type": "import"
 },
 "pyxem.signals.crystallographic_map.transfer_navigation_axes": {
  "data": {
   "shadows": "pyxem.utils.sim_utils.transfer_navigation_axes"
  },
  "type": "import"
 },
 "pyxem.signals.crystallographic_map.transfer_navigation_axes_to_signal_axes": {
  "data": {
   "shadows": "pyxem.utils.sim_utils.transfer_navigation_axes_to_signal_axes"
  },
  "type": "import"
 },
 "pyxem.signals.diffraction_profile": {
  "data": {},
  "type": "module"
 },
 "pyxem.signals.diffraction_profile.BaseSignal": {
  "data": {
   "shadows": "hyperspy.signals.BaseSignal"
  },
  "type": "import"
 },
 "pyxem.signals.diffraction_profile.ElectronDiffractionProfile": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "hyperspy.signals.Signal1D"
   ]
  },
  "type": "class"
 },
 "pyxem.signals.diffraction_profile.ElectronDiffractionProfile.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "hyperspy.signals.Signal1D.__init__"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.diffraction_profile.ElectronDiffractionProfile.get_virtual_image": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "hyperspy.roi.SpanROI",
    "roi"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.diffraction_profile.ElectronDiffractionProfile.plot_interactive_virtual_image": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "hyperspy.api.interactive",
    "hyperspy.roi.SpanROI",
    "hyperspy.signals.BaseSignal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.diffraction_profile.ElectronDiffractionProfile.set_diffraction_calibration": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "pyxem.signals.diffraction_profile.ElectronDiffractionProfile.set_experimental_parameters": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "pyxem.signals.diffraction_profile.ElectronDiffractionProfile.set_scan_calibration": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "pyxem.signals.diffraction_profile.Signal1D": {
  "data": {
   "shadows": "hyperspy.signals.Signal1D"
  },
  "type": "import"
 },
 "pyxem.signals.diffraction_profile.SpanROI": {
  "data": {
   "shadows": "hyperspy.roi.SpanROI"
  },
  "type": "import"
 },
 "pyxem.signals.diffraction_profile.interactive": {
  "data": {
   "shadows": "hyperspy.api.interactive"
  },
  "type": "import"
 },
 "pyxem.signals.diffraction_profile.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.signals.diffraction_simulation": {
  "data": {},
  "type": "module"
 },
 "pyxem.signals.diffraction_simulation.DiffractionSimulation": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "pyxem.signals.diffraction_simulation.DiffractionSimulation.__init__": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "pyxem.signals.diffraction_simulation.DiffractionSimulation.as_signal": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "len",
    "numpy.abs",
    "numpy.digitize",
    "numpy.linspace",
    "numpy.logical_and",
    "numpy.max",
    "numpy.zeros",
    "pyxem.signals.electron_diffraction.ElectronDiffraction",
    "skimage.filters.gaussian"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.diffraction_simulation.DiffractionSimulation.calibrated_coordinates": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "numpy.copy",
    "property"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.diffraction_simulation.DiffractionSimulation.calibration": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "isinstance",
    "len",
    "numpy.all",
    "numpy.equal"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.diffraction_simulation.DiffractionSimulation.coordinates": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "pyxem.signals.diffraction_simulation.DiffractionSimulation.direct_beam_mask": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "bool",
    "numpy.any",
    "numpy.ones_like",
    "property"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.diffraction_simulation.DiffractionSimulation.intensities": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "pyxem.signals.diffraction_simulation.ElectronDiffraction": {
  "data": {
   "shadows": "pyxem.signals.electron_diffraction.ElectronDiffraction"
  },
  "type": "import"
 },
 "pyxem.signals.diffraction_simulation.ProfileSimulation": {
  "data": {
   "lineno": 167
  },
  "type": "class"
 },
 "pyxem.signals.diffraction_simulation.ProfileSimulation.__init__": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "pyxem.signals.diffraction_simulation.ProfileSimulation.get_plot": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "matplotlib.pyplot",
    "matplotlib.pyplot.gca",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.diffraction_simulation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.signals.diffraction_simulation.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pyxem.signals.diffraction_simulation.point_spread": {
  "data": {
   "shadows": "skimage.filters.gaussian"
  },
  "type": "import"
 },
 "pyxem.signals.diffraction_vectors": {
  "data": {},
  "type": "module"
 },
 "pyxem.signals.diffraction_vectors.BaseSignal": {
  "data": {
   "shadows": "hyperspy.signals.BaseSignal"
  },
  "type": "import"
 },
 "pyxem.signals.diffraction_vectors.DiffractionVectors": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "hyperspy.signals.BaseSignal"
   ]
  },
  "type": "class"
 },
 "pyxem.signals.diffraction_vectors.DiffractionVectors.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "hyperspy.signals.BaseSignal.__init__"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.diffraction_vectors.DiffractionVectors.calculate_cartesian_coordinates": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "pyxem.utils.sim_utils.get_electron_wavelength",
    "pyxem.utils.sim_utils.transfer_navigation_axes",
    "pyxem.utils.vector_utils.detector_to_fourier"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.diffraction_vectors.DiffractionVectors.get_diffracting_pixels_map": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "pyxem.utils.vector_utils.get_npeaks"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.diffraction_vectors.DiffractionVectors.get_magnitude_histogram": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "hyperspy.signals.Signal1D",
    "len",
    "numpy.arange",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.diffraction_vectors.DiffractionVectors.get_magnitudes": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "hyperspy.signals.BaseSignal",
    "len",
    "pyxem.utils.vector_utils.calculate_norms",
    "pyxem.utils.vector_utils.calculate_norms_ragged"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.diffraction_vectors.DiffractionVectors.get_unique_vectors": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "ValueError",
    "numpy.append",
    "numpy.array",
    "numpy.concatenate",
    "numpy.delete",
    "numpy.shape",
    "numpy.sum",
    "pyxem.signals.diffraction_vectors.DiffractionVectors",
    "pyxem.utils.vector_utils.get_indices_from_distance_matrix",
    "range",
    "scipy.spatial.distance_matrix"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.diffraction_vectors.DiffractionVectors.plot_diffraction_vectors": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "matplotlib.pyplot.figure"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.diffraction_vectors.DiffractionVectors.plot_diffraction_vectors_on_signal": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "hyperspy.api.markers.point",
    "pyxem.utils.plot.generate_marker_inputs_from_peaks",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.diffraction_vectors.Signal1D": {
  "data": {
   "shadows": "hyperspy.signals.Signal1D"
  },
  "type": "import"
 },
 "pyxem.signals.diffraction_vectors.calculate_norms": {
  "data": {
   "shadows": "pyxem.utils.vector_utils.calculate_norms"
  },
  "type": "import"
 },
 "pyxem.signals.diffraction_vectors.calculate_norms_ragged": {
  "data": {
   "shadows": "pyxem.utils.vector_utils.calculate_norms_ragged"
  },
  "type": "import"
 },
 "pyxem.signals.diffraction_vectors.detector_to_fourier": {
  "data": {
   "shadows": "pyxem.utils.vector_utils.detector_to_fourier"
  },
  "type": "import"
 },
 "pyxem.signals.diffraction_vectors.distance_matrix": {
  "data": {
   "shadows": "scipy.spatial.distance_matrix"
  },
  "type": "import"
 },
 "pyxem.signals.diffraction_vectors.generate_marker_inputs_from_peaks": {
  "data": {
   "shadows": "pyxem.utils.plot.generate_marker_inputs_from_peaks"
  },
  "type": "import"
 },
 "pyxem.signals.diffraction_vectors.get_electron_wavelength": {
  "data": {
   "shadows": "pyxem.utils.sim_utils.get_electron_wavelength"
  },
  "type": "import"
 },
 "pyxem.signals.diffraction_vectors.get_indices_from_distance_matrix": {
  "data": {
   "shadows": "pyxem.utils.vector_utils.get_indices_from_distance_matrix"
  },
  "type": "import"
 },
 "pyxem.signals.diffraction_vectors.get_npeaks": {
  "data": {
   "shadows": "pyxem.utils.vector_utils.get_npeaks"
  },
  "type": "import"
 },
 "pyxem.signals.diffraction_vectors.markers": {
  "data": {
   "shadows": "hyperspy.api.markers"
  },
  "type": "import"
 },
 "pyxem.signals.diffraction_vectors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.signals.diffraction_vectors.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pyxem.signals.diffraction_vectors.transfer_navigation_axes": {
  "data": {
   "shadows": "pyxem.utils.sim_utils.transfer_navigation_axes"
  },
  "type": "import"
 },
 "pyxem.signals.electron_diffraction": {
  "data": {},
  "type": "module"
 },
 "pyxem.signals.electron_diffraction.BaseSignal": {
  "data": {
   "shadows": "hyperspy.signals.BaseSignal"
  },
  "type": "import"
 },
 "pyxem.signals.electron_diffraction.DiffractionVectors": {
  "data": {
   "shadows": "pyxem.signals.diffraction_vectors.DiffractionVectors"
  },
  "type": "import"
 },
 "pyxem.signals.electron_diffraction.ElectronDiffraction": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "hyperspy.signals.Signal2D"
   ]
  },
  "type": "class"
 },
 "pyxem.signals.electron_diffraction.ElectronDiffraction.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "hyperspy.signals.BaseSignal.decomposition.__doc__",
    "hyperspy.signals.Signal2D.__init__"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.electron_diffraction.ElectronDiffraction.apply_affine_transformation": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "numpy.ndarray",
    "pyxem.utils.expt_utils.apply_transformation",
    "pyxem.utils.expt_utils.convert_affine_to_transform",
    "type"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.electron_diffraction.ElectronDiffraction.apply_gain_normalisation": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "pyxem.utils.expt_utils.gain_normalise"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.electron_diffraction.ElectronDiffraction.center_direct_beam": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.electron_diffraction.ElectronDiffraction.decomposition": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "hyperspy.signals.Signal2D",
    "numpy.nan_to_num",
    "super"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.electron_diffraction.ElectronDiffraction.find_peaks": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.array",
    "pyxem.signals.diffraction_vectors.DiffractionVectors",
    "pyxem.utils.expt_utils.peaks_as_gvectors",
    "pyxem.utils.peakfinders2D.find_peaks_dog",
    "pyxem.utils.peakfinders2D.find_peaks_log",
    "pyxem.utils.peakfinders2D.find_peaks_stat",
    "pyxem.utils.peakfinders2D.find_peaks_xc",
    "pyxem.utils.peakfinders2D.find_peaks_zaefferer"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.electron_diffraction.ElectronDiffraction.find_peaks_interactive": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "pyxem.utils.peakfinder2D_gui.PeakFinderUIIPYW",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.electron_diffraction.ElectronDiffraction.get_direct_beam_mask": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "hyperspy.signals.Signal2D",
    "pyxem.utils.expt_utils.circular_mask"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.electron_diffraction.ElectronDiffraction.get_direct_beam_position": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "pyxem.utils.expt_utils.find_beam_offset_cross_correlation"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.electron_diffraction.ElectronDiffraction.get_radial_profile": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "len",
    "pyxem.signals.diffraction_profile.ElectronDiffractionProfile",
    "pyxem.utils.expt_utils.radial_average"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.electron_diffraction.ElectronDiffraction.get_virtual_image": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "roi"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.electron_diffraction.ElectronDiffraction.plot_interactive_virtual_image": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "hyperspy.api.interactive",
    "hyperspy.signals.BaseSignal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.electron_diffraction.ElectronDiffraction.remove_background": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "NotImplementedError",
    "pyxem.utils.expt_utils.regional_filter",
    "pyxem.utils.expt_utils.subtract_background_dog",
    "pyxem.utils.expt_utils.subtract_background_median",
    "pyxem.utils.expt_utils.subtract_reference",
    "skimage.filters.rank.mean",
    "skimage.morphology.square"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.electron_diffraction.ElectronDiffraction.remove_deadpixels": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "pyxem.utils.expt_utils.remove_dead"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.electron_diffraction.ElectronDiffraction.set_diffraction_calibration": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.electron_diffraction.ElectronDiffraction.set_experimental_parameters": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "pyxem.signals.electron_diffraction.ElectronDiffraction.set_scan_calibration": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "pyxem.signals.electron_diffraction.ElectronDiffractionProfile": {
  "data": {
   "shadows": "pyxem.signals.diffraction_profile.ElectronDiffractionProfile"
  },
  "type": "import"
 },
 "pyxem.signals.electron_diffraction.Signal1D": {
  "data": {
   "shadows": "hyperspy.signals.Signal1D"
  },
  "type": "import"
 },
 "pyxem.signals.electron_diffraction.Signal2D": {
  "data": {
   "shadows": "hyperspy.signals.Signal2D"
  },
  "type": "import"
 },
 "pyxem.signals.electron_diffraction._cart2polar": {
  "data": {
   "shadows": "pyxem.utils.expt_utils._cart2polar"
  },
  "type": "import"
 },
 "pyxem.signals.electron_diffraction._index_coords": {
  "data": {
   "shadows": "pyxem.utils.expt_utils._index_coords"
  },
  "type": "import"
 },
 "pyxem.signals.electron_diffraction._polar2cart": {
  "data": {
   "shadows": "pyxem.utils.expt_utils._polar2cart"
  },
  "type": "import"
 },
 "pyxem.signals.electron_diffraction.apply_transformation": {
  "data": {
   "shadows": "pyxem.utils.expt_utils.apply_transformation"
  },
  "type": "import"
 },
 "pyxem.signals.electron_diffraction.circular_mask": {
  "data": {
   "shadows": "pyxem.utils.expt_utils.circular_mask"
  },
  "type": "import"
 },
 "pyxem.signals.electron_diffraction.convert_affine_to_transform": {
  "data": {
   "shadows": "pyxem.utils.expt_utils.convert_affine_to_transform"
  },
  "type": "import"
 },
 "pyxem.signals.electron_diffraction.filters": {
  "data": {
   "shadows": "skimage.filters"
  },
  "type": "import"
 },
 "pyxem.signals.electron_diffraction.find_beam_offset_cross_correlation": {
  "data": {
   "shadows": "pyxem.utils.expt_utils.find_beam_offset_cross_correlation"
  },
  "type": "import"
 },
 "pyxem.signals.electron_diffraction.find_peaks_dog": {
  "data": {
   "shadows": "pyxem.utils.peakfinders2D.find_peaks_dog"
  },
  "type": "import"
 },
 "pyxem.signals.electron_diffraction.find_peaks_log": {
  "data": {
   "shadows": "pyxem.utils.peakfinders2D.find_peaks_log"
  },
  "type": "import"
 },
 "pyxem.signals.electron_diffraction.find_peaks_stat": {
  "data": {
   "shadows": "pyxem.utils.peakfinders2D.find_peaks_stat"
  },
  "type": "import"
 },
 "pyxem.signals.electron_diffraction.find_peaks_xc": {
  "data": {
   "shadows": "pyxem.utils.peakfinders2D.find_peaks_xc"
  },
  "type": "import"
 },
 "pyxem.signals.electron_diffraction.find_peaks_zaefferer": {
  "data": {
   "shadows": "pyxem.utils.peakfinders2D.find_peaks_zaefferer"
  },
  "type": "import"
 },
 "pyxem.signals.electron_diffraction.gain_normalise": {
  "data": {
   "shadows": "pyxem.utils.expt_utils.gain_normalise"
  },
  "type": "import"
 },
 "pyxem.signals.electron_diffraction.interactive": {
  "data": {
   "shadows": "hyperspy.api.interactive"
  },
  "type": "import"
 },
 "pyxem.signals.electron_diffraction.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.signals.electron_diffraction.peakfinder2D_gui": {
  "data": {
   "shadows": "pyxem.utils.peakfinder2D_gui"
  },
  "type": "import"
 },
 "pyxem.signals.electron_diffraction.peaks_as_gvectors": {
  "data": {
   "shadows": "pyxem.utils.expt_utils.peaks_as_gvectors"
  },
  "type": "import"
 },
 "pyxem.signals.electron_diffraction.radial_average": {
  "data": {
   "shadows": "pyxem.utils.expt_utils.radial_average"
  },
  "type": "import"
 },
 "pyxem.signals.electron_diffraction.regional_filter": {
  "data": {
   "shadows": "pyxem.utils.expt_utils.regional_filter"
  },
  "type": "import"
 },
 "pyxem.signals.electron_diffraction.remove_dead": {
  "data": {
   "shadows": "pyxem.utils.expt_utils.remove_dead"
  },
  "type": "import"
 },
 "pyxem.signals.electron_diffraction.square": {
  "data": {
   "shadows": "skimage.morphology.square"
  },
  "type": "import"
 },
 "pyxem.signals.electron_diffraction.subtract_background_dog": {
  "data": {
   "shadows": "pyxem.utils.expt_utils.subtract_background_dog"
  },
  "type": "import"
 },
 "pyxem.signals.electron_diffraction.subtract_background_median": {
  "data": {
   "shadows": "pyxem.utils.expt_utils.subtract_background_median"
  },
  "type": "import"
 },
 "pyxem.signals.electron_diffraction.subtract_reference": {
  "data": {
   "shadows": "pyxem.utils.expt_utils.subtract_reference"
  },
  "type": "import"
 },
 "pyxem.signals.electron_diffraction.tf": {
  "data": {
   "shadows": "skimage.transform"
  },
  "type": "import"
 },
 "pyxem.signals.electron_diffraction.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "pyxem.signals.indexation_results": {
  "data": {},
  "type": "module"
 },
 "pyxem.signals.indexation_results.BaseSignal": {
  "data": {
   "shadows": "hyperspy.signal.BaseSignal"
  },
  "type": "import"
 },
 "pyxem.signals.indexation_results.CrystallographicMap": {
  "data": {
   "shadows": "pyxem.CrystallographicMap"
  },
  "type": "import"
 },
 "pyxem.signals.indexation_results.TemplateMatchingResults": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "hyperspy.signal.BaseSignal"
   ]
  },
  "type": "class"
 },
 "pyxem.signals.indexation_results.TemplateMatchingResults.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "hyperspy.signal.BaseSignal.__init__"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.indexation_results.TemplateMatchingResults.get_crystallographic_map": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "pyxem.CrystallographicMap",
    "pyxem.utils.indexation_utils.crystal_from_template_matching",
    "pyxem.utils.sim_utils.transfer_navigation_axes"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.indexation_results.TemplateMatchingResults.plot_best_matching_results_on_signal": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "hyperspy.api.markers.point",
    "pyxem.utils.plot.generate_marker_inputs_from_peaks",
    "pyxem.utils.sim_utils.peaks_from_best_template",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.indexation_results.VectorMatchingResults": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "hyperspy.signal.BaseSignal"
   ]
  },
  "type": "class"
 },
 "pyxem.signals.indexation_results.VectorMatchingResults.__init__": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "hyperspy.signal.BaseSignal.__init__"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.indexation_results.VectorMatchingResults.get_crystallographic_map": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "pyxem.CrystallographicMap",
    "pyxem.utils.indexation_utils.crystal_from_vector_matching",
    "pyxem.utils.sim_utils.transfer_navigation_axes"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.indexation_results.VectorMatchingResults.get_indexed_diffraction_vectors": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.indexation_results.VectorMatchingResults.plot_best_matching_results_on_signal": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "hyperspy.api.markers.point",
    "pyxem.utils.plot.generate_marker_inputs_from_peaks",
    "pyxem.utils.sim_utils.peaks_from_best_vector_match",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.indexation_results.crystal_from_template_matching": {
  "data": {
   "shadows": "pyxem.utils.indexation_utils.crystal_from_template_matching"
  },
  "type": "import"
 },
 "pyxem.signals.indexation_results.crystal_from_vector_matching": {
  "data": {
   "shadows": "pyxem.utils.indexation_utils.crystal_from_vector_matching"
  },
  "type": "import"
 },
 "pyxem.signals.indexation_results.generate_marker_inputs_from_peaks": {
  "data": {
   "shadows": "pyxem.utils.plot.generate_marker_inputs_from_peaks"
  },
  "type": "import"
 },
 "pyxem.signals.indexation_results.hs": {
  "data": {
   "shadows": "hyperspy.api"
  },
  "type": "import"
 },
 "pyxem.signals.indexation_results.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.signals.indexation_results.peaks_from_best_template": {
  "data": {
   "shadows": "pyxem.utils.sim_utils.peaks_from_best_template"
  },
  "type": "import"
 },
 "pyxem.signals.indexation_results.peaks_from_best_vector_match": {
  "data": {
   "shadows": "pyxem.utils.sim_utils.peaks_from_best_vector_match"
  },
  "type": "import"
 },
 "pyxem.signals.indexation_results.transfer_navigation_axes": {
  "data": {
   "shadows": "pyxem.utils.sim_utils.transfer_navigation_axes"
  },
  "type": "import"
 },
 "pyxem.signals.indexation_results.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "pyxem.signals.tensor_field": {
  "data": {},
  "type": "module"
 },
 "pyxem.signals.tensor_field.DisplacementGradientMap": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "hyperspy.signals.Signal2D"
   ]
  },
  "type": "class"
 },
 "pyxem.signals.tensor_field.DisplacementGradientMap.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "hyperspy.signals.Signal2D.__init__"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.tensor_field.DisplacementGradientMap.get_strain_maps": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "hyperspy.utils.stack",
    "pyxem.signals.tensor_field._get_rotation_angle"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.tensor_field.DisplacementGradientMap.polar_decomposition": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "pyxem.signals.tensor_field._polar_decomposition"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.tensor_field.Signal2D": {
  "data": {
   "shadows": "hyperspy.signals.Signal2D"
  },
  "type": "import"
 },
 "pyxem.signals.tensor_field._get_rotation_angle": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.array",
    "pyxem.signals.tensor_field.math"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.tensor_field._polar_decomposition": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.array",
    "scipy.linalg.polar"
   ]
  },
  "type": "function"
 },
 "pyxem.signals.tensor_field.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyxem.signals.tensor_field.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.signals.tensor_field.polar": {
  "data": {
   "shadows": "scipy.linalg.polar"
  },
  "type": "import"
 },
 "pyxem.signals.tensor_field.stack": {
  "data": {
   "shadows": "hyperspy.utils.stack"
  },
  "type": "import"
 },
 "pyxem.signals.vdf_image": {
  "data": {},
  "type": "module"
 },
 "pyxem.signals.vdf_image.Signal2D": {
  "data": {
   "shadows": "hyperspy.signals.Signal2D"
  },
  "type": "import"
 },
 "pyxem.signals.vdf_image.VDFImage": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "hyperspy.signals.Signal2D"
   ]
  },
  "type": "class"
 },
 "pyxem.signals.vdf_image.VDFImage.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "hyperspy.signals.Signal2D.__init__"
   ]
  },
  "type": "function"
 },
 "pyxem.stack_method": {
  "data": {
   "shadows": "hyperspy.misc.utils.stack"
  },
  "type": "import"
 },
 "pyxem.strlist2enumeration": {
  "data": {
   "shadows": "hyperspy.misc.utils.strlist2enumeration"
  },
  "type": "import"
 },
 "pyxem.tests": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.conftest": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.conftest.DiffractionVectorLibrary": {
  "data": {
   "shadows": "pyxem.libraries.vector_library.DiffractionVectorLibrary"
  },
  "type": "import"
 },
 "pyxem.tests.conftest.ElectronDiffraction": {
  "data": {
   "shadows": "pyxem.signals.electron_diffraction.ElectronDiffraction"
  },
  "type": "import"
 },
 "pyxem.tests.conftest.default_structure": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pyxem.tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.conftest.diffpy.structure": {
  "data": {
   "shadows": "diffpy.structure"
  },
  "type": "import"
 },
 "pyxem.tests.conftest.diffraction_pattern": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.array",
    "pyxem.signals.electron_diffraction.ElectronDiffraction",
    "pyxem.tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.conftest.diffraction_profile": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "pyxem.tests.conftest.diffraction_pattern",
    "pyxem.tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.conftest.dp_template_match_result": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.vstack",
    "pyxem.tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.conftest.dp_vector_match_result": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.deg2rad",
    "pyxem.tests.conftest.pytest",
    "transforms3d.euler.euler2mat"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.conftest.euler2mat": {
  "data": {
   "shadows": "transforms3d.euler.euler2mat"
  },
  "type": "import"
 },
 "pyxem.tests.conftest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.tests.conftest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyxem.tests.conftest.sp_template_match_result": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.vstack",
    "pyxem.tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.conftest.sp_vector_match_result": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.deg2rad",
    "pyxem.tests.conftest.pytest",
    "transforms3d.euler.euler2mat"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.conftest.vector_library": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.pi",
    "numpy.sqrt",
    "pyxem.libraries.vector_library.DiffractionVectorLibrary",
    "pyxem.tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.conftest.vector_match_peaks": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "numpy.array",
    "pyxem.tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_components": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_components.test_diffraction_component": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_components.test_diffraction_component.DiffractionGenerator": {
  "data": {
   "shadows": "pyxem.generators.diffraction_generator.DiffractionGenerator"
  },
  "type": "import"
 },
 "pyxem.tests.test_components.test_diffraction_component.DiffractionSimulation": {
  "data": {
   "shadows": "pyxem.signals.diffraction_simulation.DiffractionSimulation"
  },
  "type": "import"
 },
 "pyxem.tests.test_components.test_diffraction_component.ElectronDiffractionForwardModel": {
  "data": {
   "shadows": "pyxem.components.diffraction_component.ElectronDiffractionForwardModel"
  },
  "type": "import"
 },
 "pyxem.tests.test_components.test_diffraction_component.diffpy.structure": {
  "data": {
   "shadows": "diffpy.structure"
  },
  "type": "import"
 },
 "pyxem.tests.test_components.test_diffraction_component.diffraction_calculator": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pyxem.generators.diffraction_generator.DiffractionGenerator",
    "pyxem.tests.test_components.test_diffraction_component.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_components.test_diffraction_component.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.tests.test_components.test_diffraction_component.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyxem.tests.test_components.test_diffraction_component.test_electron_diffraction_component_init": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "isinstance",
    "pyxem.components.diffraction_component.ElectronDiffractionForwardModel",
    "pyxem.tests.test_components.test_diffraction_component.diffraction_calculator"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_components.test_diffraction_component.test_function": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyxem.components.diffraction_component.ElectronDiffractionForwardModel",
    "pyxem.tests.test_components.test_diffraction_component.diffraction_calculator"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_components.test_diffraction_component.test_simulate": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "isinstance",
    "pyxem.components.diffraction_component.ElectronDiffractionForwardModel",
    "pyxem.signals.diffraction_simulation.DiffractionSimulation",
    "pyxem.tests.test_components.test_diffraction_component.diffraction_calculator"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_components.test_scalable_reference_pattern": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_components.test_scalable_reference_pattern.ElectronDiffraction": {
  "data": {
   "shadows": "pyxem.signals.electron_diffraction.ElectronDiffraction"
  },
  "type": "import"
 },
 "pyxem.tests.test_components.test_scalable_reference_pattern.ScalableReferencePattern": {
  "data": {
   "shadows": "pyxem.components.scalable_reference_pattern.ScalableReferencePattern"
  },
  "type": "import"
 },
 "pyxem.tests.test_components.test_scalable_reference_pattern._index_coords": {
  "data": {
   "shadows": "pyxem.utils.expt_utils._index_coords"
  },
  "type": "import"
 },
 "pyxem.tests.test_components.test_scalable_reference_pattern.diffraction_pattern": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.array",
    "pyxem.signals.electron_diffraction.ElectronDiffraction",
    "pyxem.tests.test_components.test_scalable_reference_pattern.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_components.test_scalable_reference_pattern.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.tests.test_components.test_scalable_reference_pattern.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyxem.tests.test_components.test_scalable_reference_pattern.test_function": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyxem.components.scalable_reference_pattern.ScalableReferencePattern",
    "pyxem.tests.test_components.test_scalable_reference_pattern.diffraction_pattern",
    "pyxem.utils.expt_utils._index_coords"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_components.test_scalable_reference_pattern.test_scalable_reference_pattern_init": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "isinstance",
    "pyxem.components.scalable_reference_pattern.ScalableReferencePattern",
    "pyxem.tests.test_components.test_scalable_reference_pattern.diffraction_pattern"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_generators.test_calibration_generator": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_generators.test_calibration_generator.CalibrationDataLibrary": {
  "data": {
   "shadows": "pyxem.libraries.calibration_library.CalibrationDataLibrary"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_calibration_generator.CalibrationGenerator": {
  "data": {
   "shadows": "pyxem.generators.calibration_generator.CalibrationGenerator"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_calibration_generator.ElectronDiffraction": {
  "data": {
   "shadows": "pyxem.signals.electron_diffraction.ElectronDiffraction"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_calibration_generator.Line2DROI": {
  "data": {
   "shadows": "hyperspy.roi.Line2DROI"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_calibration_generator.Signal2D": {
  "data": {
   "shadows": "hyperspy.signals.Signal2D"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_calibration_generator.TestCalibrationGenerator": {
  "data": {
   "lineno": 84
  },
  "type": "class"
 },
 "pyxem.tests.test_generators.test_calibration_generator.TestCalibrationGenerator.test_get_diffraction_calibration": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyxem.tests.test_generators.test_calibration_generator.cal_dist"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_calibration_generator.TestCalibrationGenerator.test_get_distortion_residuals": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "isinstance",
    "pyxem.signals.electron_diffraction.ElectronDiffraction",
    "pyxem.tests.test_generators.test_calibration_generator.cal_dist"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_calibration_generator.TestCalibrationGenerator.test_get_elliptical_distortion": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyxem.tests.test_generators.test_calibration_generator.affine_answer",
    "pyxem.tests.test_generators.test_calibration_generator.cal_dist",
    "pyxem.tests.test_generators.test_calibration_generator.input_parameters"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_calibration_generator.TestCalibrationGenerator.test_get_navigation_calibration": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "hyperspy.roi.Line2DROI",
    "numpy.testing.assert_almost_equal",
    "pyxem.tests.test_generators.test_calibration_generator.calgen"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_calibration_generator.TestCalibrationGenerator.test_init": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "isinstance",
    "pyxem.signals.electron_diffraction.ElectronDiffraction",
    "pyxem.tests.test_generators.test_calibration_generator.calgen"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_calibration_generator.TestCalibrationGenerator.test_plot_calibrated_data_dp": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "pyxem.tests.test_generators.test_calibration_generator.cal_dist"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_calibration_generator.TestCalibrationGenerator.test_plot_calibrated_data_im": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "hyperspy.roi.Line2DROI",
    "pyxem.tests.test_generators.test_calibration_generator.calgen"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_calibration_generator.TestCalibrationGenerator.test_plot_corrected_diffraction_pattern": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "pyxem.tests.test_generators.test_calibration_generator.cal_dist"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_calibration_generator.TestEmptyCalibrationGenerator": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ValueError",
    "pyxem.tests.test_generators.test_calibration_generator.pytest"
   ]
  },
  "type": "class"
 },
 "pyxem.tests.test_generators.test_calibration_generator.TestEmptyCalibrationGenerator.test_get_diffraction_calibration_no_affine": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "pyxem.tests.test_generators.test_calibration_generator.calgen"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_calibration_generator.TestEmptyCalibrationGenerator.test_get_diffraction_calibration_no_data": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "pyxem.tests.test_generators.test_calibration_generator.empty_calgen"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_calibration_generator.TestEmptyCalibrationGenerator.test_get_distortion_residuals_no_affine": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "pyxem.tests.test_generators.test_calibration_generator.calgen"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_calibration_generator.TestEmptyCalibrationGenerator.test_get_distortion_residuals_no_data": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "pyxem.tests.test_generators.test_calibration_generator.empty_calgen"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_calibration_generator.TestEmptyCalibrationGenerator.test_get_elliptical_distortion": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "pyxem.tests.test_generators.test_calibration_generator.empty_calgen"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_calibration_generator.TestEmptyCalibrationGenerator.test_get_navigation_calibration_no_data": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "hyperspy.roi.Line2DROI",
    "pyxem.tests.test_generators.test_calibration_generator.empty_calgen"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_calibration_generator.TestEmptyCalibrationGenerator.test_plot_corrected_diffraction_pattern_no_affine": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "pyxem.tests.test_generators.test_calibration_generator.calgen"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_calibration_generator.TestEmptyCalibrationGenerator.test_plot_corrected_diffraction_pattern_no_data": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "pyxem.tests.test_generators.test_calibration_generator.empty_calgen"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_calibration_generator.affine_answer": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.asarray",
    "pyxem.tests.test_generators.test_calibration_generator.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_calibration_generator.cal_dist": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "pyxem.tests.test_generators.test_calibration_generator.calgen",
    "pyxem.tests.test_generators.test_calibration_generator.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_calibration_generator.calgen": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pyxem.generators.calibration_generator.CalibrationGenerator",
    "pyxem.tests.test_generators.test_calibration_generator.calibration_library",
    "pyxem.tests.test_generators.test_calibration_generator.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_calibration_generator.calibration_library": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "hyperspy.signals.Signal2D",
    "numpy.zeros",
    "pyxem.libraries.calibration_library.CalibrationDataLibrary",
    "pyxem.tests.test_generators.test_calibration_generator.pytest",
    "pyxem.tests.test_generators.test_calibration_generator.ring_pattern"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_calibration_generator.empty_calgen": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "pyxem.generators.calibration_generator.CalibrationGenerator",
    "pyxem.tests.test_generators.test_calibration_generator.empty_calibration_library",
    "pyxem.tests.test_generators.test_calibration_generator.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_calibration_generator.empty_calibration_library": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "pyxem.libraries.calibration_library.CalibrationDataLibrary",
    "pyxem.tests.test_generators.test_calibration_generator.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_calibration_generator.generate_ring_pattern": {
  "data": {
   "shadows": "pyxem.utils.calibration_utils.generate_ring_pattern"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_calibration_generator.input_parameters": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pyxem.tests.test_generators.test_calibration_generator.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_calibration_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_calibration_generator.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_calibration_generator.ring_pattern": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "pyxem.signals.electron_diffraction.ElectronDiffraction",
    "pyxem.tests.test_generators.test_calibration_generator.input_parameters",
    "pyxem.tests.test_generators.test_calibration_generator.pytest",
    "pyxem.utils.calibration_utils.generate_ring_pattern"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_diffraction_generator": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_generators.test_diffraction_generator.DiffractionGenerator": {
  "data": {
   "shadows": "pyxem.generators.diffraction_generator.DiffractionGenerator"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_diffraction_generator.DiffractionSimulation": {
  "data": {
   "shadows": "pyxem.signals.diffraction_simulation.DiffractionSimulation"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_diffraction_generator.ProfileSimulation": {
  "data": {
   "shadows": "pyxem.signals.diffraction_simulation.ProfileSimulation"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_diffraction_generator.TestDiffractionCalculator": {
  "data": {
   "lineno": 65
  },
  "type": "class"
 },
 "pyxem.tests.test_generators.test_diffraction_generator.TestDiffractionCalculator.test_appropriate_intensities": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.greater_equal",
    "pyxem.tests.test_generators.test_diffraction_generator.diffraction_calculator",
    "pyxem.tests.test_generators.test_diffraction_generator.local_structure",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_diffraction_generator.TestDiffractionCalculator.test_appropriate_scaling": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.allclose",
    "pyxem.generators.diffraction_generator.DiffractionGenerator",
    "pyxem.tests.test_generators.test_diffraction_generator.diffraction_calculator",
    "pyxem.tests.test_generators.test_diffraction_generator.make_structure",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_diffraction_generator.TestDiffractionCalculator.test_calculate_profile_class": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "isinstance",
    "pyxem.signals.diffraction_simulation.ProfileSimulation",
    "pyxem.tests.test_generators.test_diffraction_generator.diffraction_calculator",
    "pyxem.tests.test_generators.test_diffraction_generator.local_structure"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_diffraction_generator.TestDiffractionCalculator.test_init": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "pyxem.generators.diffraction_generator.DiffractionGenerator",
    "pyxem.tests.test_generators.test_diffraction_generator.diffraction_calculator"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_diffraction_generator.TestDiffractionCalculator.test_matching_results": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "len",
    "pyxem.tests.test_generators.test_diffraction_generator.diffraction_calculator",
    "pyxem.tests.test_generators.test_diffraction_generator.local_structure"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_diffraction_generator.diffpy.structure": {
  "data": {
   "shadows": "diffpy.structure"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_diffraction_generator.diffraction_calculator": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "pyxem.generators.diffraction_generator.DiffractionGenerator",
    "pyxem.tests.test_generators.test_diffraction_generator.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_diffraction_generator.local_structure": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "pyxem.tests.test_generators.test_diffraction_generator.make_structure",
    "pyxem.tests.test_generators.test_diffraction_generator.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_diffraction_generator.make_structure": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_diffraction_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_diffraction_generator.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_diffraction_generator.scattering_params": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "pyxem.tests.test_generators.test_diffraction_generator.test_invalid_scattering_params": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "NotImplementedError",
    "pyxem.generators.diffraction_generator.DiffractionGenerator",
    "pyxem.tests.test_generators.test_diffraction_generator.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_diffraction_generator.test_param_check": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "pyxem.generators.diffraction_generator.DiffractionGenerator",
    "pyxem.tests.test_generators.test_diffraction_generator.pytest",
    "pyxem.tests.test_generators.test_diffraction_generator.scattering_params"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_displacement_gradient_tensor_generator": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_generators.test_displacement_gradient_tensor_generator.generate_strain_map": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "hyperspy.api.signals.Signal2D",
    "pyxem.generators.displacement_gradient_tensor_generator.get_DisplacementGradientMap",
    "pyxem.tests.test_generators.test_displacement_gradient_tensor_generator.generate_test_vectors"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_displacement_gradient_tensor_generator.generate_test_vectors": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.asarray",
    "pyxem.tests.test_generators.test_displacement_gradient_tensor_generator.rotation",
    "pyxem.tests.test_generators.test_displacement_gradient_tensor_generator.stretch_in_x",
    "pyxem.tests.test_generators.test_displacement_gradient_tensor_generator.uniform_expansion"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_displacement_gradient_tensor_generator.get_DisplacementGradientMap": {
  "data": {
   "shadows": "pyxem.generators.displacement_gradient_tensor_generator.get_DisplacementGradientMap"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_displacement_gradient_tensor_generator.get_arrays": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.sqrt",
    "pyxem.tests.test_generators.test_displacement_gradient_tensor_generator.generate_strain_map"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_displacement_gradient_tensor_generator.get_single_DisplacementGradientTensor": {
  "data": {
   "shadows": "pyxem.generators.displacement_gradient_tensor_generator.get_single_DisplacementGradientTensor"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_displacement_gradient_tensor_generator.hs": {
  "data": {
   "shadows": "hyperspy.api"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_displacement_gradient_tensor_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_displacement_gradient_tensor_generator.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_displacement_gradient_tensor_generator.rotation": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.cos",
    "numpy.deg2rad",
    "numpy.matmul",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_displacement_gradient_tensor_generator.stretch_in_x": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.matmul"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_displacement_gradient_tensor_generator.test_rotation": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyxem.tests.test_generators.test_displacement_gradient_tensor_generator.get_arrays"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_displacement_gradient_tensor_generator.test_trace": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.add",
    "numpy.testing.assert_almost_equal",
    "pyxem.tests.test_generators.test_displacement_gradient_tensor_generator.get_arrays"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_displacement_gradient_tensor_generator.uniform_expansion": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_indexation_generator": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_generators.test_indexation_generator.DiffractionVectorLibrary": {
  "data": {
   "shadows": "pyxem.libraries.vector_library.DiffractionVectorLibrary"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_indexation_generator.DiffractionVectors": {
  "data": {
   "shadows": "pyxem.signals.diffraction_vectors.DiffractionVectors"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_indexation_generator.ProfileIndexationGenerator": {
  "data": {
   "shadows": "pyxem.generators.indexation_generator.ProfileIndexationGenerator"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_indexation_generator.ProfileSimulation": {
  "data": {
   "shadows": "pyxem.signals.diffraction_simulation.ProfileSimulation"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_indexation_generator.VectorIndexationGenerator": {
  "data": {
   "shadows": "pyxem.generators.indexation_generator.VectorIndexationGenerator"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_indexation_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_indexation_generator.profile_simulation": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.array",
    "pyxem.signals.diffraction_simulation.ProfileSimulation",
    "pyxem.tests.test_generators.test_indexation_generator.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_indexation_generator.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_indexation_generator.test_profile_indexation_generator_init": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "isinstance",
    "pyxem.generators.indexation_generator.ProfileIndexationGenerator",
    "pyxem.tests.test_generators.test_indexation_generator.profile_simulation"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_indexation_generator.test_profile_indexation_generator_single_indexation": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyxem.generators.indexation_generator.ProfileIndexationGenerator",
    "pyxem.tests.test_generators.test_indexation_generator.profile_simulation"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_indexation_generator.test_vector_indexation_generator_cartesian_check": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "ValueError",
    "pyxem.generators.indexation_generator.VectorIndexationGenerator",
    "pyxem.libraries.vector_library.DiffractionVectorLibrary",
    "pyxem.signals.diffraction_vectors.DiffractionVectors",
    "pyxem.tests.test_generators.test_indexation_generator.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_indexation_generator.test_vector_indexation_generator_index_vectors": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.testing.assert_equal",
    "pyxem.generators.indexation_generator.VectorIndexationGenerator",
    "pyxem.signals.diffraction_vectors.DiffractionVectors"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_indexation_generator.test_vector_indexation_generator_init": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "isinstance",
    "pyxem.generators.indexation_generator.VectorIndexationGenerator",
    "pyxem.libraries.vector_library.DiffractionVectorLibrary",
    "pyxem.signals.diffraction_vectors.DiffractionVectors"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_library_generator": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_generators.test_library_generator.DiffractionGenerator": {
  "data": {
   "shadows": "pyxem.generators.diffraction_generator.DiffractionGenerator"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_library_generator.DiffractionLibrary": {
  "data": {
   "shadows": "pyxem.libraries.diffraction_library.DiffractionLibrary"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_library_generator.DiffractionLibraryGenerator": {
  "data": {
   "shadows": "pyxem.generators.library_generator.DiffractionLibraryGenerator"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_library_generator.StructureLibrary": {
  "data": {
   "shadows": "pyxem.libraries.structure_library.StructureLibrary"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_library_generator.TestDiffractionLibraryGenerator": {
  "data": {
   "lineno": 43
  },
  "type": "class"
 },
 "pyxem.tests.test_generators.test_library_generator.TestDiffractionLibraryGenerator.test_get_diffraction_library": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "isinstance",
    "pyxem.generators.library_generator.DiffractionLibraryGenerator",
    "pyxem.libraries.diffraction_library.DiffractionLibrary",
    "pyxem.tests.test_generators.test_library_generator.library_generator",
    "pyxem.tests.test_generators.test_library_generator.pytest",
    "pyxem.tests.test_generators.test_library_generator.structure_library"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_library_generator.diffpy.structure": {
  "data": {
   "shadows": "diffpy.structure"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_library_generator.diffraction_calculator": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pyxem.generators.diffraction_generator.DiffractionGenerator",
    "pyxem.tests.test_generators.test_library_generator.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_library_generator.library_generator": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pyxem.generators.library_generator.DiffractionLibraryGenerator",
    "pyxem.tests.test_generators.test_library_generator.diffraction_calculator",
    "pyxem.tests.test_generators.test_library_generator.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_library_generator.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_library_generator.structure_library": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "pyxem.libraries.structure_library.StructureLibrary",
    "pyxem.tests.test_generators.test_library_generator.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_structure_library_generator": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_generators.test_structure_library_generator.StructureLibraryGenerator": {
  "data": {
   "shadows": "pyxem.generators.structure_library_generator.StructureLibraryGenerator"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_structure_library_generator.create_structure_cubic": {
  "data": {
   "shadows": "pyxem.tests.test_utils.test_sim_utils.create_structure_cubic"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_structure_library_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_structure_library_generator.test_orientations_from_list": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyxem.generators.structure_library_generator.StructureLibraryGenerator"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_structure_library_generator.test_orientations_from_stereographic_triangle": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "len",
    "numpy.pi",
    "pyxem.generators.structure_library_generator.StructureLibraryGenerator",
    "pyxem.tests.test_utils.test_sim_utils.create_structure_cubic"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_subpixelrefinement_generator": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_generators.test_subpixelrefinement_generator.DiffractionVectors": {
  "data": {
   "shadows": "pyxem.signals.diffraction_vectors.DiffractionVectors"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_subpixelrefinement_generator.ElectronDiffraction": {
  "data": {
   "shadows": "pyxem.signals.electron_diffraction.ElectronDiffraction"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_subpixelrefinement_generator.SubpixelrefinementGenerator": {
  "data": {
   "shadows": "pyxem.generators.subpixelrefinement_generator.SubpixelrefinementGenerator"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_subpixelrefinement_generator.create_spot": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.zeros",
    "print",
    "pyxem.signals.electron_diffraction.ElectronDiffraction",
    "skimage.draw.circle"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_subpixelrefinement_generator.create_vectors": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.array",
    "pyxem.signals.diffraction_vectors.DiffractionVectors"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_subpixelrefinement_generator.draw": {
  "data": {
   "shadows": "skimage.draw"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_subpixelrefinement_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_subpixelrefinement_generator.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_subpixelrefinement_generator.test_assertioned_com": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "numpy.sqrt",
    "pyxem.generators.subpixelrefinement_generator.SubpixelrefinementGenerator",
    "pyxem.tests.test_generators.test_subpixelrefinement_generator.create_spot",
    "pyxem.tests.test_generators.test_subpixelrefinement_generator.create_vectors",
    "pyxem.tests.test_generators.test_subpixelrefinement_generator.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_subpixelrefinement_generator.test_assertioned_xc": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "numpy.sqrt",
    "pyxem.generators.subpixelrefinement_generator.SubpixelrefinementGenerator",
    "pyxem.tests.test_generators.test_subpixelrefinement_generator.create_spot",
    "pyxem.tests.test_generators.test_subpixelrefinement_generator.create_vectors",
    "pyxem.tests.test_generators.test_subpixelrefinement_generator.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_subpixelrefinement_generator.test_bad_vectors_DiffractionVectors": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.ones",
    "pyxem.generators.subpixelrefinement_generator.SubpixelrefinementGenerator",
    "pyxem.signals.diffraction_vectors.DiffractionVectors",
    "pyxem.signals.electron_diffraction.ElectronDiffraction",
    "pyxem.tests.test_generators.test_subpixelrefinement_generator.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_subpixelrefinement_generator.test_bad_vectors_numpy": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.ones",
    "pyxem.generators.subpixelrefinement_generator.SubpixelrefinementGenerator",
    "pyxem.signals.electron_diffraction.ElectronDiffraction",
    "pyxem.tests.test_generators.test_subpixelrefinement_generator.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_subpixelrefinement_generator.test_conventional_xc": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.testing.assert_allclose",
    "pyxem.generators.subpixelrefinement_generator.SubpixelrefinementGenerator",
    "pyxem.tests.test_generators.test_subpixelrefinement_generator.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_subpixelrefinement_generator.test_local_gaussian_method_dull": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.asarray",
    "pyxem.generators.subpixelrefinement_generator.SubpixelrefinementGenerator",
    "pyxem.tests.test_generators.test_subpixelrefinement_generator.create_spot",
    "pyxem.tests.test_generators.test_subpixelrefinement_generator.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_subpixelrefinement_generator.test_local_gaussian_method_exciting": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ValueError",
    "pyxem.generators.subpixelrefinement_generator.SubpixelrefinementGenerator",
    "pyxem.tests.test_generators.test_subpixelrefinement_generator.create_spot",
    "pyxem.tests.test_generators.test_subpixelrefinement_generator.create_vectors",
    "pyxem.tests.test_generators.test_subpixelrefinement_generator.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_subpixelrefinement_generator.test_wrong_navigation_dimensions": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "numpy.zeros",
    "pyxem.generators.subpixelrefinement_generator.SubpixelrefinementGenerator",
    "pyxem.signals.diffraction_vectors.DiffractionVectors",
    "pyxem.signals.electron_diffraction.ElectronDiffraction",
    "pyxem.tests.test_generators.test_subpixelrefinement_generator.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_vdf_generator": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_generators.test_vdf_generator.DiffractionVectors": {
  "data": {
   "shadows": "pyxem.signals.diffraction_vectors.DiffractionVectors"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_vdf_generator.ElectronDiffraction": {
  "data": {
   "shadows": "pyxem.signals.electron_diffraction.ElectronDiffraction"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_vdf_generator.TestVDFGenerator": {
  "data": {
   "lineno": 44
  },
  "type": "class"
 },
 "pyxem.tests.test_generators.test_vdf_generator.TestVDFGenerator.test_get_concentric_vdf_images": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "isinstance",
    "pyxem.generators.vdf_generator.VDFGenerator",
    "pyxem.signals.vdf_image.VDFImage",
    "pyxem.tests.test_generators.test_vdf_generator.pytest",
    "pyxem.tests.test_generators.test_vdf_generator.vdf_generator"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_vdf_generator.TestVDFGenerator.test_get_vector_vdf_images": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "isinstance",
    "pyxem.generators.vdf_generator.VDFGenerator",
    "pyxem.signals.vdf_image.VDFImage",
    "pyxem.tests.test_generators.test_vdf_generator.pytest",
    "pyxem.tests.test_generators.test_vdf_generator.vdf_generator"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_vdf_generator.TestVDFGenerator.test_vdf_generator_init_with_vectors": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "object",
    "pyxem.generators.vdf_generator.VDFGenerator",
    "pyxem.signals.diffraction_vectors.DiffractionVectors",
    "pyxem.signals.electron_diffraction.ElectronDiffraction"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_vdf_generator.TestVDFGenerator.test_vdf_generator_init_without_vectors": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "isinstance",
    "pyxem.generators.vdf_generator.VDFGenerator",
    "pyxem.signals.electron_diffraction.ElectronDiffraction",
    "type"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_vdf_generator.TestVDFGenerator.test_vector_vdfs_without_vectors": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ValueError",
    "pyxem.generators.vdf_generator.VDFGenerator",
    "pyxem.tests.test_generators.test_vdf_generator.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_vdf_generator.VDFGenerator": {
  "data": {
   "shadows": "pyxem.generators.vdf_generator.VDFGenerator"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_vdf_generator.VDFImage": {
  "data": {
   "shadows": "pyxem.signals.vdf_image.VDFImage"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_vdf_generator.diffraction_vectors": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.array",
    "pyxem.signals.diffraction_vectors.DiffractionVectors",
    "pyxem.tests.test_generators.test_vdf_generator.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_vdf_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_vdf_generator.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyxem.tests.test_generators.test_vdf_generator.test_vdf_generator_from_map": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "object",
    "pyxem.generators.vdf_generator.VDFGenerator",
    "pyxem.signals.diffraction_vectors.DiffractionVectors"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_generators.test_vdf_generator.vdf_generator": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "pyxem.generators.vdf_generator.VDFGenerator",
    "pyxem.tests.test_generators.test_vdf_generator.diffraction_vectors",
    "pyxem.tests.test_generators.test_vdf_generator.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_library": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_library.test_calibration_library": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_library.test_calibration_library.CalibrationDataLibrary": {
  "data": {
   "shadows": "pyxem.libraries.calibration_library.CalibrationDataLibrary"
  },
  "type": "import"
 },
 "pyxem.tests.test_library.test_calibration_library.ElectronDiffraction": {
  "data": {
   "shadows": "pyxem.signals.electron_diffraction.ElectronDiffraction"
  },
  "type": "import"
 },
 "pyxem.tests.test_library.test_calibration_library.Line2DROI": {
  "data": {
   "shadows": "hyperspy.roi.Line2DROI"
  },
  "type": "import"
 },
 "pyxem.tests.test_library.test_calibration_library.Signal2D": {
  "data": {
   "shadows": "hyperspy.signals.Signal2D"
  },
  "type": "import"
 },
 "pyxem.tests.test_library.test_calibration_library.TestPlotData": {
  "data": {
   "lineno": 40
  },
  "type": "class"
 },
 "pyxem.tests.test_library.test_calibration_library.TestPlotData.test_plot_au_x_grating_dp": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "pyxem.tests.test_library.test_calibration_library.library"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_library.test_calibration_library.TestPlotData.test_plot_au_x_grating_dp_with_roi": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "hyperspy.roi.Line2DROI",
    "pyxem.tests.test_library.test_calibration_library.library"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_library.test_calibration_library.TestPlotData.test_plot_au_x_grating_im": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pyxem.tests.test_library.test_calibration_library.library"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_library.test_calibration_library.TestPlotData.test_plot_invalid": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError",
    "pyxem.tests.test_library.test_calibration_library.library",
    "pyxem.tests.test_library.test_calibration_library.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_library.test_calibration_library.library": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "hyperspy.signals.Signal2D",
    "numpy.ones",
    "pyxem.libraries.calibration_library.CalibrationDataLibrary",
    "pyxem.tests.test_library.test_calibration_library.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_library.test_calibration_library.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.tests.test_library.test_calibration_library.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyxem.tests.test_library.test_calibration_library.test_initialization_dtype": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "isinstance",
    "pyxem.signals.electron_diffraction.ElectronDiffraction",
    "pyxem.tests.test_library.test_calibration_library.library"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_library.test_diffraction_library": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_library.test_diffraction_library.DiffractionSimulation": {
  "data": {
   "shadows": "pyxem.signals.diffraction_simulation.DiffractionSimulation"
  },
  "type": "import"
 },
 "pyxem.tests.test_library.test_diffraction_library.StructureLibrary": {
  "data": {
   "shadows": "pyxem.libraries.structure_library.StructureLibrary"
  },
  "type": "import"
 },
 "pyxem.tests.test_library.test_diffraction_library.get_library": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.array",
    "pyxem.DiffractionGenerator",
    "pyxem.DiffractionLibraryGenerator",
    "pyxem.libraries.structure_library.StructureLibrary",
    "pyxem.tests.test_library.test_diffraction_library.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_library.test_diffraction_library.load_DiffractionLibrary": {
  "data": {
   "shadows": "pyxem.libraries.diffraction_library.load_DiffractionLibrary"
  },
  "type": "import"
 },
 "pyxem.tests.test_library.test_diffraction_library.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.tests.test_library.test_diffraction_library.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyxem.tests.test_library.test_diffraction_library.pxm": {
  "data": {
   "shadows": "pyxem"
  },
  "type": "import"
 },
 "pyxem.tests.test_library.test_diffraction_library.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyxem.tests.test_library.test_diffraction_library.test_angle_but_no_phase": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pyxem.signals.diffraction_simulation.DiffractionSimulation",
    "pyxem.tests.test_library.test_diffraction_library.get_library",
    "pyxem.tests.test_library.test_diffraction_library.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_library.test_diffraction_library.test_get_library_entry_assertionless": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "isinstance",
    "pyxem.signals.diffraction_simulation.DiffractionSimulation",
    "pyxem.tests.test_library.test_diffraction_library.get_library"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_library.test_diffraction_library.test_get_library_small_offeset": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.allclose",
    "pyxem.tests.test_library.test_diffraction_library.get_library"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_library.test_diffraction_library.test_library_io": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_allclose",
    "pyxem.libraries.diffraction_library.load_DiffractionLibrary",
    "pyxem.tests.test_library.test_diffraction_library.get_library",
    "pyxem.tests.test_library.test_diffraction_library.os",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_library.test_diffraction_library.test_unknown_library_entry": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pyxem.signals.diffraction_simulation.DiffractionSimulation",
    "pyxem.tests.test_library.test_diffraction_library.get_library",
    "pyxem.tests.test_library.test_diffraction_library.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_library.test_diffraction_library.test_unsafe_loading": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "RuntimeError",
    "pyxem.libraries.diffraction_library.load_DiffractionLibrary",
    "pyxem.tests.test_library.test_diffraction_library.get_library",
    "pyxem.tests.test_library.test_diffraction_library.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_library.test_structure_library": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_library.test_structure_library.StructureLibrary": {
  "data": {
   "shadows": "pyxem.libraries.structure_library.StructureLibrary"
  },
  "type": "import"
 },
 "pyxem.tests.test_library.test_structure_library.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.tests.test_library.test_structure_library.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyxem.tests.test_library.test_structure_library.test_constructor": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "pyxem.libraries.structure_library.StructureLibrary"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_library.test_structure_library.test_constructor_parameter_validation_errors": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "pyxem.libraries.structure_library.StructureLibrary",
    "pyxem.tests.test_library.test_structure_library.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_library.test_vector_library": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_library.test_vector_library.StructureLibrary": {
  "data": {
   "shadows": "pyxem.libraries.structure_library.StructureLibrary"
  },
  "type": "import"
 },
 "pyxem.tests.test_library.test_vector_library.diffpy.structure": {
  "data": {
   "shadows": "diffpy.structure"
  },
  "type": "import"
 },
 "pyxem.tests.test_library.test_vector_library.get_library": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pyxem.VectorLibraryGenerator",
    "pyxem.libraries.structure_library.StructureLibrary",
    "pyxem.tests.test_library.test_vector_library.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_library.test_vector_library.load_VectorLibrary": {
  "data": {
   "shadows": "pyxem.libraries.vector_library.load_VectorLibrary"
  },
  "type": "import"
 },
 "pyxem.tests.test_library.test_vector_library.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.tests.test_library.test_vector_library.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyxem.tests.test_library.test_vector_library.pxm": {
  "data": {
   "shadows": "pyxem"
  },
  "type": "import"
 },
 "pyxem.tests.test_library.test_vector_library.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyxem.tests.test_library.test_vector_library.test_library_io": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyxem.libraries.vector_library.load_VectorLibrary",
    "pyxem.tests.test_library.test_vector_library.get_library",
    "pyxem.tests.test_library.test_vector_library.os"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_library.test_vector_library.test_unsafe_loading": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "RuntimeError",
    "pyxem.libraries.vector_library.load_VectorLibrary",
    "pyxem.tests.test_library.test_vector_library.get_library",
    "pyxem.tests.test_library.test_vector_library.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_physical": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_physical.test_marker_plotting": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_physical.test_marker_plotting.DiffractionSimulation": {
  "data": {
   "shadows": "pyxem.signals.diffraction_simulation.DiffractionSimulation"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_marker_plotting.generate_dp_cord_list": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_physical.test_marker_plotting.generate_marker_inputs_from_peaks": {
  "data": {
   "shadows": "pyxem.utils.plot.generate_marker_inputs_from_peaks"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_marker_plotting.hs": {
  "data": {
   "shadows": "hyperspy.api"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_marker_plotting.local_plotter": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "hyperspy.api.markers.point",
    "hyperspy.api.signals.Signal2D",
    "numpy.array",
    "pyxem.utils.plot.generate_marker_inputs_from_peaks",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_physical.test_marker_plotting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_marker_plotting.pxm": {
  "data": {
   "shadows": "pyxem"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_marker_plotting.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_marker_plotting.test_marker_placement_correct_alpha": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.zeros",
    "pyxem.ElectronDiffraction",
    "pyxem.tests.test_physical.test_marker_plotting.generate_dp_cord_list",
    "pyxem.tests.test_physical.test_marker_plotting.local_plotter"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_physical.test_marker_plotting.test_marker_placement_correct_beta": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.divide",
    "numpy.max",
    "numpy.ones_like",
    "pyxem.ElectronDiffraction",
    "pyxem.signals.diffraction_simulation.DiffractionSimulation",
    "pyxem.tests.test_physical.test_marker_plotting.generate_dp_cord_list",
    "pyxem.tests.test_physical.test_marker_plotting.local_plotter"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_nonphys": {
  "data": {
   "symbols_in_volume": [
    "pyxem.generators.indexation_generator.IndexationGenerator",
    "pyxem.tests.test_physical.test_orientation_mapping_nonphys.create_library",
    "pyxem.tests.test_physical.test_orientation_mapping_nonphys.indexer"
   ]
  },
  "type": "module"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_nonphys.DiffractionLibrary": {
  "data": {
   "shadows": "pyxem.libraries.diffraction_library.DiffractionLibrary"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_nonphys.DiffractionSimulation": {
  "data": {
   "shadows": "pyxem.signals.diffraction_simulation.DiffractionSimulation"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_nonphys.IndexationGenerator": {
  "data": {
   "shadows": "pyxem.generators.indexation_generator.IndexationGenerator"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_nonphys.create_library": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "int",
    "numpy.empty",
    "numpy.ones_like",
    "numpy.random.rand",
    "pyxem.ElectronDiffraction",
    "pyxem.libraries.diffraction_library.DiffractionLibrary",
    "pyxem.signals.diffraction_simulation.DiffractionSimulation"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_nonphys.generate_marker_inputs_from_peaks": {
  "data": {
   "shadows": "pyxem.utils.plot.generate_marker_inputs_from_peaks"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_nonphys.hs": {
  "data": {
   "shadows": "hyperspy.api"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_nonphys.indexer": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_nonphys.match_results": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_nonphys.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_nonphys.peaks_from_best_template": {
  "data": {
   "shadows": "pyxem.utils.sim_utils.peaks_from_best_template"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_nonphys.pxm": {
  "data": {
   "shadows": "pyxem"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_nonphys.test_match_results": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "pyxem.tests.test_physical.test_orientation_mapping_nonphys.match_results"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_nonphys.test_plot_best_matching_results_on_signal": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "pyxem.tests.test_physical.test_orientation_mapping_nonphys.match_results"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_nonphys.test_visuals": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "hyperspy.api.markers.point",
    "pyxem.tests.test_physical.test_orientation_mapping_nonphys.match_results",
    "pyxem.utils.plot.generate_marker_inputs_from_peaks",
    "pyxem.utils.sim_utils.peaks_from_best_template",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.DiffractionVectors": {
  "data": {
   "shadows": "pyxem.signals.diffraction_vectors.DiffractionVectors"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.ElectronDiffraction": {
  "data": {
   "shadows": "pyxem.signals.electron_diffraction.ElectronDiffraction"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.IndexationGenerator": {
  "data": {
   "shadows": "pyxem.generators.indexation_generator.IndexationGenerator"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.StructureLibrary": {
  "data": {
   "shadows": "pyxem.libraries.structure_library.StructureLibrary"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.VectorIndexationGenerator": {
  "data": {
   "shadows": "pyxem.generators.indexation_generator.VectorIndexationGenerator"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.VectorLibraryGenerator": {
  "data": {
   "shadows": "pyxem.generators.library_generator.VectorLibraryGenerator"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.create_Hex": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.create_Ortho": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.create_wurtzite": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.diffpy.structure": {
  "data": {
   "shadows": "diffpy.structure"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.edc": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "pyxem.DiffractionGenerator",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.euler2mat": {
  "data": {
   "shadows": "transforms3d.euler.euler2mat"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.expected_best_peaks_pattern_list": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.expected_best_peaks_rotated": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cos",
    "numpy.deg2rad",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.get_kinematical_intensities": {
  "data": {
   "shadows": "pyxem.utils.sim_utils.get_kinematical_intensities"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.get_template_library": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "pyxem.DiffractionLibraryGenerator",
    "pyxem.libraries.structure_library.StructureLibrary",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.edc",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.half_side_length",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.rot_list"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.get_template_match_results": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "pyxem.ElectronDiffraction",
    "pyxem.generators.indexation_generator.IndexationGenerator",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.edc",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.get_template_library",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.half_side_length",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.pattern_list",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.rot_list"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.get_vector_match_results": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "numpy.array",
    "pyxem.generators.indexation_generator.VectorIndexationGenerator",
    "pyxem.generators.library_generator.VectorLibraryGenerator",
    "pyxem.libraries.structure_library.StructureLibrary",
    "pyxem.signals.diffraction_vectors.DiffractionVectors",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.edc",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.get_template_library",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.half_side_length",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.rot_list"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.half_side_length": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.hs": {
  "data": {
   "shadows": "hyperspy.api"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.pattern_list": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "pyxem.tests.test_physical.test_orientation_mapping_phys.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.peaks_from_best_template": {
  "data": {
   "shadows": "pyxem.utils.sim_utils.peaks_from_best_template"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.peaks_from_best_vector_match": {
  "data": {
   "shadows": "pyxem.utils.sim_utils.peaks_from_best_vector_match"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.pxm": {
  "data": {
   "shadows": "pyxem"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.rot_list": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "itertools.product",
    "list",
    "numpy.arange",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.test_generate_peaks_from_best_template": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "get_expected_peaks",
    "numpy.any",
    "numpy.arange",
    "numpy.isclose",
    "numpy.linalg.norm",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.edc",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.expected_best_peaks_pattern_list",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.expected_best_peaks_rotated",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.get_template_library",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.get_template_match_results",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.pattern_list",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.pytest",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.rot_list",
    "pyxem.utils.sim_utils.peaks_from_best_template"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.test_kinematic_intensities_error_raise": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.pi",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.create_wurtzite",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.pytest",
    "pyxem.utils.sim_utils.get_kinematical_intensities",
    "transforms3d.euler.euler2mat"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.test_kinematic_intensities_rotation": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.testing.assert_almost_equal",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.create_wurtzite",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.pytest",
    "pyxem.utils.sim_utils.get_kinematical_intensities",
    "transforms3d.euler.euler2mat"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.test_masked_OM": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "hyperspy.api.signals.Signal1D",
    "numpy.all",
    "numpy.equal",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.edc",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.get_template_match_results",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.pattern_list",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.rot_list"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.test_orientation_mapping_physical": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.testing.assert_allclose",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.create_Hex",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.create_Ortho",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.edc",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.get_template_match_results",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.pattern_list",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.pytest",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.rot_list"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.test_peaks_from_best_vector_match": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "numpy.isclose",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.create_Hex",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.edc",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.get_vector_match_results",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.pytest",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.rot_list",
    "pyxem.utils.sim_utils.peaks_from_best_vector_match",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.test_plot_best_matching_results_on_signal_vector": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "numpy.vstack",
    "numpy.zeros",
    "pyxem.signals.electron_diffraction.ElectronDiffraction",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.create_Hex",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.edc",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.get_vector_match_results",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.pytest",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.rot_list"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_physical.test_orientation_mapping_phys.test_vector_matching_physical": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.create_Hex",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.edc",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.get_vector_match_results",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.pytest",
    "pyxem.tests.test_physical.test_orientation_mapping_phys.rot_list"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_physical.test_strain_mapping": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_physical.test_strain_mapping.DiffractionGenerator": {
  "data": {
   "shadows": "pyxem.generators.diffraction_generator.DiffractionGenerator"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_strain_mapping.ElectronDiffraction": {
  "data": {
   "shadows": "pyxem.signals.electron_diffraction.ElectronDiffraction"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_strain_mapping.ScalableReferencePattern": {
  "data": {
   "shadows": "pyxem.components.scalable_reference_pattern.ScalableReferencePattern"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_strain_mapping.diffpy.structure": {
  "data": {
   "shadows": "diffpy.structure"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_strain_mapping.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_strain_mapping.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyxem.tests.test_physical.test_strain_mapping.test_strain_mapping_affine_transform": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "pyxem.components.scalable_reference_pattern.ScalableReferencePattern",
    "pyxem.generators.diffraction_generator.DiffractionGenerator",
    "pyxem.signals.electron_diffraction.ElectronDiffraction"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_signals.test_crystallographic_map": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_signals.test_crystallographic_map.CrystallographicMap": {
  "data": {
   "shadows": "pyxem.signals.crystallographic_map.CrystallographicMap"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_crystallographic_map.TestMTEXIO": {
  "data": {
   "lineno": 168
  },
  "type": "class"
 },
 "pyxem.tests.test_signals.test_crystallographic_map.TestMTEXIO.test_Crystallographic_Map_io_dp": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int",
    "numpy.testing.assert_allclose",
    "pyxem.tests.test_signals.test_crystallographic_map.dp_cryst_map",
    "pyxem.tests.test_signals.test_crystallographic_map.worker_for_test_CrystallographicMap_io"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_crystallographic_map.TestMTEXIO.test_Crystallographic_Map_io_sp": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int",
    "numpy.testing.assert_allclose",
    "pyxem.tests.test_signals.test_crystallographic_map.sp_cryst_map",
    "pyxem.tests.test_signals.test_crystallographic_map.worker_for_test_CrystallographicMap_io"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_crystallographic_map.TestMapCreation": {
  "data": {
   "lineno": 124
  },
  "type": "class"
 },
 "pyxem.tests.test_signals.test_crystallographic_map.TestMapCreation.test_get_metric_map_no_method": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "pyxem.signals.crystallographic_map.CrystallographicMap",
    "pyxem.tests.test_signals.test_crystallographic_map.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_crystallographic_map.TestMapCreation.test_get_metric_map_template_match": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "pyxem.tests.test_signals.test_crystallographic_map.dp_cryst_map",
    "pyxem.tests.test_signals.test_crystallographic_map.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_crystallographic_map.TestMapCreation.test_get_metric_map_template_match_bad_metric": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "ValueError",
    "pyxem.tests.test_signals.test_crystallographic_map.pytest",
    "pyxem.tests.test_signals.test_crystallographic_map.sp_cryst_map"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_crystallographic_map.TestMapCreation.test_get_metric_map_vector_match": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "pyxem.tests.test_signals.test_crystallographic_map.dp_cryst_map_vector",
    "pyxem.tests.test_signals.test_crystallographic_map.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_crystallographic_map.TestMapCreation.test_get_metric_map_vector_match_bad_metric": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "ValueError",
    "pyxem.tests.test_signals.test_crystallographic_map.dp_cryst_map_vector",
    "pyxem.tests.test_signals.test_crystallographic_map.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_crystallographic_map.TestMapCreation.test_get_orientation_map": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "pyxem.tests.test_signals.test_crystallographic_map.sp_cryst_map"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_crystallographic_map.TestMapCreation.test_get_phase_map": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "pyxem.tests.test_signals.test_crystallographic_map.sp_cryst_map"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_crystallographic_map.TestModalAngularFunctionality": {
  "data": {
   "lineno": 186
  },
  "type": "class"
 },
 "pyxem.tests.test_signals.test_crystallographic_map.TestModalAngularFunctionality.test_get_distance_from_fixed_angle": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "numpy.allclose",
    "pyxem.signals.crystallographic_map._distance_from_fixed_angle",
    "pyxem.tests.test_signals.test_crystallographic_map.get_distance_between_two_angles_longform"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_crystallographic_map.TestModalAngularFunctionality.test_get_distance_from_modal": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "pyxem.tests.test_signals.test_crystallographic_map.mod_cryst_map"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_crystallographic_map.TestModalAngularFunctionality.test_get_modal_angles": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "numpy.allclose",
    "pyxem.tests.test_signals.test_crystallographic_map.mod_cryst_map"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_crystallographic_map._distance_from_fixed_angle": {
  "data": {
   "shadows": "pyxem.signals.crystallographic_map._distance_from_fixed_angle"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_crystallographic_map.dp_cryst_map": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.empty",
    "pyxem.signals.crystallographic_map.CrystallographicMap",
    "pyxem.tests.test_signals.test_crystallographic_map.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_crystallographic_map.dp_cryst_map_vector": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.empty",
    "pyxem.signals.crystallographic_map.CrystallographicMap",
    "pyxem.tests.test_signals.test_crystallographic_map.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_crystallographic_map.euler2quat": {
  "data": {
   "shadows": "transforms3d.euler.euler2quat"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_crystallographic_map.get_distance_between_two_angles_longform": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.deg2rad",
    "numpy.rad2deg",
    "transforms3d.euler.euler2quat",
    "transforms3d.euler.quat2axangle",
    "transforms3d.quaternions.qinverse",
    "transforms3d.quaternions.qmult"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_crystallographic_map.load_mtex_map": {
  "data": {
   "shadows": "pyxem.signals.crystallographic_map.load_mtex_map"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_crystallographic_map.mod_cryst_map": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.empty",
    "pyxem.signals.crystallographic_map.CrystallographicMap",
    "pyxem.tests.test_signals.test_crystallographic_map.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_crystallographic_map.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_crystallographic_map.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_crystallographic_map.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_crystallographic_map.qinverse": {
  "data": {
   "shadows": "transforms3d.quaternions.qinverse"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_crystallographic_map.qmult": {
  "data": {
   "shadows": "transforms3d.quaternions.qmult"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_crystallographic_map.quat2axangle": {
  "data": {
   "shadows": "transforms3d.euler.quat2axangle"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_crystallographic_map.sp_cryst_map": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.empty",
    "pyxem.signals.crystallographic_map.CrystallographicMap",
    "pyxem.tests.test_signals.test_crystallographic_map.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_crystallographic_map.worker_for_test_CrystallographicMap_io": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pyxem.signals.crystallographic_map.load_mtex_map",
    "pyxem.tests.test_signals.test_crystallographic_map.os"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_diffraction_profile": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_signals.test_diffraction_profile.ElectronDiffractionProfile": {
  "data": {
   "shadows": "pyxem.signals.diffraction_profile.ElectronDiffractionProfile"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_diffraction_profile.TestSimpleHyperspy": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "pyxem.tests.test_signals.test_diffraction_profile.TestSimpleHyperspy.test_set_diffraction_calibration": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "pyxem.tests.test_signals.test_diffraction_profile.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_diffraction_profile.TestSimpleHyperspy.test_set_experimental_parameters": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "isinstance",
    "pyxem.signals.diffraction_profile.ElectronDiffractionProfile"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_diffraction_profile.TestSimpleHyperspy.test_set_scan_calibration": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "isinstance",
    "pyxem.signals.diffraction_profile.ElectronDiffractionProfile"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_diffraction_profile.TestVirtualImaging": {
  "data": {
   "lineno": 50
  },
  "type": "class"
 },
 "pyxem.tests.test_signals.test_diffraction_profile.TestVirtualImaging.test_get_virtual_image": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_diffraction_profile.TestVirtualImaging.test_plot_interactive_virtual_image": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_diffraction_profile.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_diffraction_profile.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_diffraction_simulation": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_signals.test_diffraction_simulation.DiffractionGenerator": {
  "data": {
   "shadows": "pyxem.generators.diffraction_generator.DiffractionGenerator"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_diffraction_simulation.DiffractionSimulation": {
  "data": {
   "shadows": "pyxem.signals.diffraction_simulation.DiffractionSimulation"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_diffraction_simulation.ElectronDiffraction": {
  "data": {
   "shadows": "pyxem.ElectronDiffraction"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_diffraction_simulation.ProfileSimulation": {
  "data": {
   "shadows": "pyxem.signals.diffraction_simulation.ProfileSimulation"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_diffraction_simulation.TestDiffractionSimulation": {
  "data": {
   "lineno": 112
  },
  "type": "class"
 },
 "pyxem.tests.test_signals.test_diffraction_simulation.TestDiffractionSimulation.diffraction_simulation": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "pyxem.signals.diffraction_simulation.DiffractionSimulation",
    "pyxem.tests.test_signals.test_diffraction_simulation.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_diffraction_simulation.TestDiffractionSimulation.test_calibrated_coordinates": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "pyxem.signals.diffraction_simulation.DiffractionSimulation",
    "pyxem.tests.test_signals.test_diffraction_simulation.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_diffraction_simulation.TestDiffractionSimulation.test_calibration": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ValueError",
    "pyxem.tests.test_signals.test_diffraction_simulation.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_diffraction_simulation.TestDiffractionSimulation.test_direct_beam_mask": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "pyxem.tests.test_signals.test_diffraction_simulation.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_diffraction_simulation.TestDiffractionSimulation.test_init": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_diffraction_simulation.coords_intensity_simulation": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.ones",
    "pyxem.signals.diffraction_simulation.DiffractionSimulation",
    "pyxem.tests.test_signals.test_diffraction_simulation.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_diffraction_simulation.get_signal": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pyxem.tests.test_signals.test_diffraction_simulation.coords_intensity_simulation",
    "pyxem.tests.test_signals.test_diffraction_simulation.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_diffraction_simulation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_diffraction_simulation.profile_simulation": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.array",
    "pyxem.signals.diffraction_simulation.ProfileSimulation",
    "pyxem.tests.test_signals.test_diffraction_simulation.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_diffraction_simulation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_diffraction_simulation.test_correct_quadrant_hs": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "numpy.sum",
    "pyxem.tests.test_signals.test_diffraction_simulation.get_signal"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_diffraction_simulation.test_correct_quadrant_np": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.sum",
    "pyxem.tests.test_signals.test_diffraction_simulation.get_signal"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_diffraction_simulation.test_plot_profile_simulation": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "pyxem.tests.test_signals.test_diffraction_simulation.profile_simulation"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_diffraction_simulation.test_typing": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "isinstance",
    "pyxem.ElectronDiffraction",
    "pyxem.tests.test_signals.test_diffraction_simulation.get_signal"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_diffraction_simulation.test_wrong_calibration_setting": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.ones",
    "pyxem.signals.diffraction_simulation.DiffractionSimulation",
    "pyxem.tests.test_signals.test_diffraction_simulation.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_diffraction_vectors": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_signals.test_diffraction_vectors.DiffractionVectors": {
  "data": {
   "shadows": "pyxem.signals.diffraction_vectors.DiffractionVectors"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_diffraction_vectors.TestDiffractingPixelMaps": {
  "data": {
   "lineno": 154
  },
  "type": "class"
 },
 "pyxem.tests.test_signals.test_diffraction_vectors.TestDiffractingPixelMaps.test_get_dpm_map": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "pyxem.tests.test_signals.test_diffraction_vectors.diffraction_vectors_map"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_diffraction_vectors.TestDiffractingPixelMaps.test_get_dpm_map_binary": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "pyxem.tests.test_signals.test_diffraction_vectors.diffraction_vectors_map"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_diffraction_vectors.TestMagnitudes": {
  "data": {
   "lineno": 104
  },
  "type": "class"
 },
 "pyxem.tests.test_signals.test_diffraction_vectors.TestMagnitudes.test_get_magnitude_histogram_map": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numpy.arange",
    "pyxem.tests.test_signals.test_diffraction_vectors.diffraction_vectors_map",
    "pyxem.tests.test_signals.test_diffraction_vectors.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_diffraction_vectors.TestMagnitudes.test_get_magnitude_histogram_single": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "numpy.arange",
    "pyxem.tests.test_signals.test_diffraction_vectors.diffraction_vectors_single",
    "pyxem.tests.test_signals.test_diffraction_vectors.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_diffraction_vectors.TestMagnitudes.test_get_magnitudes_map": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "pyxem.tests.test_signals.test_diffraction_vectors.diffraction_vectors_map"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_diffraction_vectors.TestMagnitudes.test_get_magnitudes_single": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "pyxem.tests.test_signals.test_diffraction_vectors.diffraction_vectors_single"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_diffraction_vectors.TestUniqueVectors": {
  "data": {
   "lineno": 121
  },
  "type": "class"
 },
 "pyxem.tests.test_signals.test_diffraction_vectors.TestUniqueVectors.test_get_unique_vectors_map_type": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "isinstance",
    "pyxem.signals.diffraction_vectors.DiffractionVectors",
    "pyxem.tests.test_signals.test_diffraction_vectors.diffraction_vectors_map"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_diffraction_vectors.TestUniqueVectors.test_get_unique_vectors_map_values": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_almost_equal",
    "pyxem.tests.test_signals.test_diffraction_vectors.diffraction_vectors_map",
    "pyxem.tests.test_signals.test_diffraction_vectors.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_diffraction_vectors.TestUniqueVectors.test_get_unique_vectors_single": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ValueError",
    "pyxem.tests.test_signals.test_diffraction_vectors.diffraction_vectors_single",
    "pyxem.tests.test_signals.test_diffraction_vectors.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_diffraction_vectors.diffraction_vectors_map": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pyxem.signals.diffraction_vectors.DiffractionVectors",
    "pyxem.tests.test_signals.test_diffraction_vectors.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_diffraction_vectors.diffraction_vectors_single": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.array",
    "pyxem.signals.diffraction_vectors.DiffractionVectors",
    "pyxem.tests.test_signals.test_diffraction_vectors.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_diffraction_vectors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_diffraction_vectors.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_diffraction_vectors.test_get_cartesian_coordinates": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "pyxem.tests.test_signals.test_diffraction_vectors.diffraction_vectors_map"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_diffraction_vectors.test_plot_diffraction_vectors": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "pyxem.tests.test_signals.test_diffraction_vectors.diffraction_vectors_map"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_diffraction_vectors.test_plot_diffraction_vectors_on_signal": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "pyxem.tests.test_signals.test_diffraction_vectors.diffraction_vectors_map"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_electron_diffraction": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.CircleROI": {
  "data": {
   "shadows": "hyperspy.roi.CircleROI"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.ElectronDiffraction": {
  "data": {
   "shadows": "pyxem.signals.electron_diffraction.ElectronDiffraction"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.Signal1D": {
  "data": {
   "shadows": "hyperspy.signals.Signal1D"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.Signal2D": {
  "data": {
   "shadows": "hyperspy.signals.Signal2D"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestBackgroundMethods": {
  "data": {
   "lineno": 272
  },
  "type": "class"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestBackgroundMethods.test_remove_background": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "numpy.ones",
    "pyxem.tests.test_signals.test_electron_diffraction.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestDirectBeamMethods": {
  "data": {
   "lineno": 148
  },
  "type": "class"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestDirectBeamMethods.test_get_direct_beam_mask": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "hyperspy.signals.Signal2D",
    "isinstance",
    "numpy.array",
    "numpy.equal",
    "pyxem.tests.test_signals.test_electron_diffraction.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestGainNormalisation": {
  "data": {
   "lineno": 132
  },
  "type": "class"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestGainNormalisation.test_apply_gain_normalisation": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "pyxem.tests.test_signals.test_electron_diffraction.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestNotImplemented": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "NotImplementedError",
    "pyxem.tests.test_signals.test_electron_diffraction.pytest"
   ]
  },
  "type": "class"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestNotImplemented.test_failing_run": {
  "data": {
   "lineno": 341
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestNotImplemented.test_remove_background_fake_implementation": {
  "data": {
   "lineno": 351
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestNotImplemented.test_remove_background_fake_method": {
  "data": {
   "lineno": 348
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestNotImplemented.test_remove_dead_pixels_failing": {
  "data": {
   "lineno": 344
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestPeakFinding": {
  "data": {
   "lineno": 292
  },
  "type": "class"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestPeakFinding.ragged_peak": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "numpy.zeros",
    "pyxem.signals.electron_diffraction.ElectronDiffraction",
    "pyxem.tests.test_signals.test_electron_diffraction.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestPeakFinding.test_findpeaks_ragged": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "numpy.ones",
    "pyxem.tests.test_signals.test_electron_diffraction.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestRadialProfile": {
  "data": {
   "lineno": 167
  },
  "type": "class"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestRadialProfile.axes_test_dp": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pyxem.signals.electron_diffraction.ElectronDiffraction",
    "pyxem.tests.test_signals.test_electron_diffraction.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestRadialProfile.diffraction_pattern_for_radial": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.zeros",
    "pyxem.signals.electron_diffraction.ElectronDiffraction",
    "pyxem.tests.test_signals.test_electron_diffraction.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestRadialProfile.mask_for_radial": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "numpy.array",
    "pyxem.tests.test_signals.test_electron_diffraction.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestRadialProfile.test_radial_profile": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "pyxem.tests.test_signals.test_electron_diffraction.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestRadialProfile.test_radial_profile_axes": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestRadialProfile.test_radial_profile_signal_type": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "hyperspy.signals.Signal1D",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestSimpleHyperspy": {
  "data": {
   "lineno": 87
  },
  "type": "class"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestSimpleHyperspy.test_set_diffraction_calibration": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "pyxem.tests.test_signals.test_electron_diffraction.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestSimpleHyperspy.test_set_experimental_parameters": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "isinstance",
    "pyxem.signals.electron_diffraction.ElectronDiffraction"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestSimpleHyperspy.test_set_scan_calibration": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "isinstance",
    "pyxem.signals.electron_diffraction.ElectronDiffraction"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestSimpleMaps": {
  "data": {
   "lineno": 33
  },
  "type": "class"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestSimpleMaps.test_apply_affine_transformation": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "pyxem.signals.electron_diffraction.ElectronDiffraction"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestSimpleMaps.test_apply_affine_transformation_with_casting": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.array",
    "pyxem.signals.electron_diffraction.ElectronDiffraction"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestSimpleMaps.test_apply_affine_transforms_paths": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "hyperspy.signals.Signal2D",
    "numpy.allclose",
    "numpy.array",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestSimpleMaps.test_center_direct_beam": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "isinstance",
    "pyxem.signals.electron_diffraction.ElectronDiffraction"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestSimpleMaps.test_center_direct_beam_in_small_region": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "isinstance",
    "pyxem.signals.electron_diffraction.ElectronDiffraction"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestSimpleMaps.test_get_direct_beam_postion": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestSimpleMaps.test_remove_dead_pixels": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "isinstance",
    "pyxem.signals.electron_diffraction.ElectronDiffraction",
    "pyxem.tests.test_signals.test_electron_diffraction.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestVirtualImaging": {
  "data": {
   "lineno": 120
  },
  "type": "class"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestVirtualImaging.test_get_virtual_image": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "hyperspy.roi.CircleROI"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestVirtualImaging.test_plot_interactive_virtual_image": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "hyperspy.roi.CircleROI"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestsAssertionless": {
  "data": {
   "lineno": 325
  },
  "type": "class"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestsAssertionless.test_decomposition": {
  "data": {
   "lineno": 326
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.TestsAssertionless.test_find_peaks_interactive": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.ion",
    "pyxem.tests.test_signals.test_electron_diffraction.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_electron_diffraction.test_init": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.zeros",
    "pyxem.signals.electron_diffraction.ElectronDiffraction"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_indexation_results": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_signals.test_indexation_results.DiffractionVectors": {
  "data": {
   "shadows": "pyxem.signals.diffraction_vectors.DiffractionVectors"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_indexation_results.TemplateMatchingResults": {
  "data": {
   "shadows": "pyxem.signals.indexation_results.TemplateMatchingResults"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_indexation_results.VectorMatchingResults": {
  "data": {
   "shadows": "pyxem.signals.indexation_results.VectorMatchingResults"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_indexation_results.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_indexation_results.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_indexation_results.test_template_get_crystallographic_map": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.vstack",
    "pyxem.signals.indexation_results.TemplateMatchingResults"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_indexation_results.test_vector_get_crystallographic_map": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.vstack",
    "pyxem.signals.indexation_results.VectorMatchingResults"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_indexation_results.test_vector_get_indexed_diffraction_vectors": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_allclose",
    "pyxem.signals.diffraction_vectors.DiffractionVectors",
    "pyxem.signals.indexation_results.VectorMatchingResults",
    "pyxem.tests.test_signals.test_indexation_results.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_indexation_results.test_vector_get_indexed_diffraction_vectors_warn": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "Warning",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "pyxem.signals.diffraction_vectors.DiffractionVectors",
    "pyxem.signals.indexation_results.VectorMatchingResults",
    "pyxem.tests.test_signals.test_indexation_results.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_tensor_field": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_signals.test_tensor_field.DisplacementGradientMap": {
  "data": {
   "shadows": "pyxem.signals.tensor_field.DisplacementGradientMap"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_tensor_field._get_rotation_angle": {
  "data": {
   "shadows": "pyxem.signals.tensor_field._get_rotation_angle"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_tensor_field._polar_decomposition": {
  "data": {
   "shadows": "pyxem.signals.tensor_field._polar_decomposition"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_tensor_field.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_tensor_field.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyxem.tests.test_signals.test_tensor_field.test_get_rotation_angle": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_almost_equal",
    "pyxem.signals.tensor_field._get_rotation_angle",
    "pyxem.tests.test_signals.test_tensor_field.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_tensor_field.test_get_strain_maps": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_almost_equal",
    "pyxem.signals.tensor_field.DisplacementGradientMap",
    "pyxem.tests.test_signals.test_tensor_field.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_tensor_field.test_map_polar_decomposition": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_almost_equal",
    "pyxem.signals.tensor_field.DisplacementGradientMap",
    "pyxem.tests.test_signals.test_tensor_field.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_signals.test_tensor_field.test_polar_decomposition": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_almost_equal",
    "pyxem.signals.tensor_field._polar_decomposition",
    "pyxem.tests.test_signals.test_tensor_field.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_utils.test_calibration_utils": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_utils.test_calibration_utils.CalibrationGenerator": {
  "data": {
   "shadows": "pyxem.generators.calibration_generator.CalibrationGenerator"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_calibration_utils.ElectronDiffraction": {
  "data": {
   "shadows": "pyxem.signals.electron_diffraction.ElectronDiffraction"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_calibration_utils.calc_radius_with_distortion": {
  "data": {
   "shadows": "pyxem.utils.calibration_utils.calc_radius_with_distortion"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_calibration_utils.call_ring_pattern": {
  "data": {
   "shadows": "pyxem.utils.calibration_utils.call_ring_pattern"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_calibration_utils.generate_ring_pattern": {
  "data": {
   "shadows": "pyxem.utils.calibration_utils.generate_ring_pattern"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_calibration_utils.input_parameters": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pyxem.tests.test_utils.test_calibration_utils.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_calibration_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_calibration_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_calibration_utils.test_generate_ring_pattern": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "pyxem.tests.test_utils.test_calibration_utils.input_parameters",
    "pyxem.tests.test_utils.test_calibration_utils.pytest",
    "pyxem.utils.calibration_utils.generate_ring_pattern"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_expt_utils": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_utils.test_expt_utils.ElectronDiffraction": {
  "data": {
   "shadows": "pyxem.signals.electron_diffraction.ElectronDiffraction"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_expt_utils.TestCenteringAlgorithm": {
  "data": {
   "lineno": 123
  },
  "type": "class"
 },
 "pyxem.tests.test_utils.test_expt_utils.TestCenteringAlgorithm.test_broader_starting_square_spot": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.zeros",
    "pyxem.tests.test_utils.test_expt_utils.pytest",
    "pyxem.utils.expt_utils.find_beam_offset_cross_correlation",
    "scipy.ndimage.filters.gaussian_filter"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_expt_utils.TestCenteringAlgorithm.test_perfectly_centered_spot": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.zeros",
    "pyxem.tests.test_utils.test_expt_utils.pytest",
    "pyxem.utils.expt_utils.find_beam_offset_cross_correlation",
    "scipy.ndimage.filters.gaussian_filter"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_expt_utils.TestCenteringAlgorithm.test_single_pixel_spot": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.zeros",
    "pyxem.tests.test_utils.test_expt_utils.pytest",
    "pyxem.utils.expt_utils.find_beam_offset_cross_correlation",
    "scipy.ndimage.filters.gaussian_filter"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_expt_utils._cart2polar": {
  "data": {
   "shadows": "pyxem.utils.expt_utils._cart2polar"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_expt_utils._index_coords": {
  "data": {
   "shadows": "pyxem.utils.expt_utils._index_coords"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_expt_utils._polar2cart": {
  "data": {
   "shadows": "pyxem.utils.expt_utils._polar2cart"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_expt_utils.apply_transformation": {
  "data": {
   "shadows": "pyxem.utils.expt_utils.apply_transformation"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_expt_utils.circular_mask": {
  "data": {
   "shadows": "pyxem.utils.expt_utils.circular_mask"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_expt_utils.diffraction_pattern_one_dimension": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.array",
    "pyxem.signals.electron_diffraction.ElectronDiffraction",
    "pyxem.tests.test_utils.test_expt_utils.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_expt_utils.find_beam_offset_cross_correlation": {
  "data": {
   "shadows": "pyxem.utils.expt_utils.find_beam_offset_cross_correlation"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_expt_utils.gain_normalise": {
  "data": {
   "shadows": "pyxem.utils.expt_utils.gain_normalise"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_expt_utils.gaussian_filter": {
  "data": {
   "shadows": "scipy.ndimage.filters.gaussian_filter"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_expt_utils.methods": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "pyxem.tests.test_utils.test_expt_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_expt_utils.peaks_as_gvectors": {
  "data": {
   "shadows": "pyxem.utils.expt_utils.peaks_as_gvectors"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_expt_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_expt_utils.radial_average": {
  "data": {
   "shadows": "pyxem.utils.expt_utils.radial_average"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_expt_utils.reference_circle": {
  "data": {
   "shadows": "pyxem.utils.expt_utils.reference_circle"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_expt_utils.regional_filter": {
  "data": {
   "shadows": "pyxem.utils.expt_utils.regional_filter"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_expt_utils.remove_dead": {
  "data": {
   "shadows": "pyxem.utils.expt_utils.remove_dead"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_expt_utils.subtract_background_dog": {
  "data": {
   "shadows": "pyxem.utils.expt_utils.subtract_background_dog"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_expt_utils.subtract_background_median": {
  "data": {
   "shadows": "pyxem.utils.expt_utils.subtract_background_median"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_expt_utils.subtract_reference": {
  "data": {
   "shadows": "pyxem.utils.expt_utils.subtract_reference"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_expt_utils.test_cart2polar": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyxem.tests.test_utils.test_expt_utils.pytest",
    "pyxem.utils.expt_utils._cart2polar"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_expt_utils.test_index_coords": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_almost_equal",
    "pyxem.tests.test_utils.test_expt_utils.diffraction_pattern_one_dimension",
    "pyxem.utils.expt_utils._index_coords"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_expt_utils.test_index_coords_non_centeral": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "pyxem.tests.test_utils.test_expt_utils.diffraction_pattern_one_dimension",
    "pyxem.utils.expt_utils._index_coords"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_expt_utils.test_peaks_as_gvectors": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_almost_equal",
    "pyxem.tests.test_utils.test_expt_utils.pytest",
    "pyxem.utils.expt_utils.peaks_as_gvectors"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_expt_utils.test_polar2cart": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyxem.tests.test_utils.test_expt_utils.pytest",
    "pyxem.utils.expt_utils._polar2cart"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_expt_utils.test_remove_dead_pixels": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "pyxem.tests.test_utils.test_expt_utils.diffraction_pattern_one_dimension",
    "pyxem.tests.test_utils.test_expt_utils.methods",
    "pyxem.tests.test_utils.test_expt_utils.pytest",
    "pyxem.utils.expt_utils.remove_dead"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_indexation_utils": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_utils.test_indexation_utils.crystal_from_template_matching": {
  "data": {
   "shadows": "pyxem.utils.indexation_utils.crystal_from_template_matching"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_indexation_utils.crystal_from_vector_matching": {
  "data": {
   "shadows": "pyxem.utils.indexation_utils.crystal_from_vector_matching"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_indexation_utils.match_vectors": {
  "data": {
   "shadows": "pyxem.utils.indexation_utils.match_vectors"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_indexation_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_indexation_utils.test_crystal_from_template_matching_dp": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyxem.utils.indexation_utils.crystal_from_template_matching"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_indexation_utils.test_crystal_from_template_matching_sp": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyxem.utils.indexation_utils.crystal_from_template_matching"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_indexation_utils.test_crystal_from_vector_matching_dp": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_allclose",
    "pyxem.utils.indexation_utils.crystal_from_vector_matching"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_indexation_utils.test_crystal_from_vector_matching_sp": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_allclose",
    "pyxem.utils.indexation_utils.crystal_from_vector_matching"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_indexation_utils.test_match_vector_total_error_default": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "len",
    "numpy.identity",
    "numpy.testing.assert_allclose",
    "pyxem.utils.indexation_utils.match_vectors"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_indexation_utils.test_match_vectors": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "len",
    "numpy.empty",
    "numpy.identity",
    "numpy.testing.assert_allclose",
    "pyxem.utils.indexation_utils.match_vectors"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_peakfinders2D": {
  "data": {
   "symbols_in_volume": [
    "pyxem.utils.peakfinders2D.find_peaks_dog",
    "pyxem.utils.peakfinders2D.find_peaks_log",
    "pyxem.utils.peakfinders2D.find_peaks_stat",
    "pyxem.utils.peakfinders2D.find_peaks_zaefferer"
   ]
  },
  "type": "module"
 },
 "pyxem.tests.test_utils.test_peakfinders2D.TestUncoveredCodePaths": {
  "data": {
   "lineno": 106
  },
  "type": "class"
 },
 "pyxem.tests.test_utils.test_peakfinders2D.TestUncoveredCodePaths.test_zaf_continue": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "pyxem.tests.test_utils.test_peakfinders2D.many_peak",
    "pyxem.utils.peakfinders2D.find_peaks_zaefferer"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_peakfinders2D.TestXCmethods": {
  "data": {
   "lineno": 89
  },
  "type": "class"
 },
 "pyxem.tests.test_utils.test_peakfinders2D.TestXCmethods.peaks": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.zeros",
    "pyxem.tests.test_utils.test_peakfinders2D.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_peakfinders2D.TestXCmethods.test_peaks_xc": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.zeros",
    "pyxem.tests.test_utils.test_peakfinders2D.pytest",
    "pyxem.utils.peakfinders2D.find_peaks_xc"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_peakfinders2D.dispatcher": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyxem.tests.test_utils.test_peakfinders2D.find_peaks_dog": {
  "data": {
   "shadows": "pyxem.utils.peakfinders2D.find_peaks_dog"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_peakfinders2D.find_peaks_log": {
  "data": {
   "shadows": "pyxem.utils.peakfinders2D.find_peaks_log"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_peakfinders2D.find_peaks_stat": {
  "data": {
   "shadows": "pyxem.utils.peakfinders2D.find_peaks_stat"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_peakfinders2D.find_peaks_xc": {
  "data": {
   "shadows": "pyxem.utils.peakfinders2D.find_peaks_xc"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_peakfinders2D.find_peaks_zaefferer": {
  "data": {
   "shadows": "pyxem.utils.peakfinders2D.find_peaks_zaefferer"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_peakfinders2D.many_peak": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.zeros",
    "pyxem.tests.test_utils.test_peakfinders2D.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_peakfinders2D.methods": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "pyxem.tests.test_utils.test_peakfinders2D.no_peak": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.ones",
    "pyxem.tests.test_utils.test_peakfinders2D.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_peakfinders2D.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_peakfinders2D.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_peakfinders2D.single_peak": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.zeros",
    "pyxem.tests.test_utils.test_peakfinders2D.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_peakfinders2D.test_many_peak_case": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "numpy.max",
    "pyxem.tests.test_utils.test_peakfinders2D.dispatcher",
    "pyxem.tests.test_utils.test_peakfinders2D.many_peak",
    "pyxem.tests.test_utils.test_peakfinders2D.methods",
    "pyxem.tests.test_utils.test_peakfinders2D.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_peakfinders2D.test_no_peak_case": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "numpy.isnan",
    "pyxem.tests.test_utils.test_peakfinders2D.dispatcher",
    "pyxem.tests.test_utils.test_peakfinders2D.methods",
    "pyxem.tests.test_utils.test_peakfinders2D.no_peak",
    "pyxem.tests.test_utils.test_peakfinders2D.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_peakfinders2D.test_one_peak_case": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "pyxem.tests.test_utils.test_peakfinders2D.dispatcher",
    "pyxem.tests.test_utils.test_peakfinders2D.methods",
    "pyxem.tests.test_utils.test_peakfinders2D.pytest",
    "pyxem.tests.test_utils.test_peakfinders2D.single_peak"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_sim_utils": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_utils.test_sim_utils.ElectronDiffraction": {
  "data": {
   "shadows": "pyxem.signals.electron_diffraction.ElectronDiffraction"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_sim_utils.create_lattice_structure": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pyxem.tests.test_utils.test_sim_utils.diffpy"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_sim_utils.create_structure_cubic": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "pyxem.tests.test_utils.test_sim_utils.create_lattice_structure"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_sim_utils.create_structure_hexagonal": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "pyxem.tests.test_utils.test_sim_utils.create_lattice_structure"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_sim_utils.create_structure_monoclinic": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "pyxem.tests.test_utils.test_sim_utils.create_lattice_structure"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_sim_utils.create_structure_orthorombic": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "pyxem.tests.test_utils.test_sim_utils.create_lattice_structure"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_sim_utils.create_structure_tetragonal": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "pyxem.tests.test_utils.test_sim_utils.create_lattice_structure"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_sim_utils.create_structure_trigonal": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pyxem.tests.test_utils.test_sim_utils.create_lattice_structure"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_sim_utils.diffpy": {
  "data": {
   "shadows": "diffpy"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_sim_utils.get_electron_wavelength": {
  "data": {
   "shadows": "pyxem.utils.sim_utils.get_electron_wavelength"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_sim_utils.get_interaction_constant": {
  "data": {
   "shadows": "pyxem.utils.sim_utils.get_interaction_constant"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_sim_utils.get_kinematical_intensities": {
  "data": {
   "shadows": "pyxem.utils.sim_utils.get_kinematical_intensities"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_sim_utils.get_points_in_sphere": {
  "data": {
   "shadows": "pyxem.utils.sim_utils.get_points_in_sphere"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_sim_utils.get_unique_families": {
  "data": {
   "shadows": "pyxem.utils.sim_utils.get_unique_families"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_sim_utils.get_vectorized_list_for_atomic_scattering_factors": {
  "data": {
   "shadows": "pyxem.utils.sim_utils.get_vectorized_list_for_atomic_scattering_factors"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_sim_utils.is_lattice_hexagonal": {
  "data": {
   "shadows": "pyxem.utils.sim_utils.is_lattice_hexagonal"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_sim_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_sim_utils.peaks_from_best_template": {
  "data": {
   "shadows": "pyxem.utils.sim_utils.peaks_from_best_template"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_sim_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_sim_utils.rotation_list_stereographic": {
  "data": {
   "shadows": "pyxem.utils.sim_utils.rotation_list_stereographic"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_sim_utils.simulate_kinematic_scattering": {
  "data": {
   "shadows": "pyxem.utils.sim_utils.simulate_kinematic_scattering"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_sim_utils.structure_cubic_rotations": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "pyxem.tests.test_utils.test_sim_utils.structure_hexagonal_rotations": {
  "data": {
   "lineno": 156
  },
  "type": "constant"
 },
 "pyxem.tests.test_utils.test_sim_utils.structure_monoclinic_rotations": {
  "data": {
   "lineno": 180
  },
  "type": "constant"
 },
 "pyxem.tests.test_utils.test_sim_utils.structure_orthogonal_rotations": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "pyxem.tests.test_utils.test_sim_utils.structure_tetragonal_rotations": {
  "data": {
   "lineno": 168
  },
  "type": "constant"
 },
 "pyxem.tests.test_utils.test_sim_utils.structure_trigonal_rotations": {
  "data": {
   "lineno": 174
  },
  "type": "constant"
 },
 "pyxem.tests.test_utils.test_sim_utils.test_get_electron_wavelength": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyxem.tests.test_utils.test_sim_utils.pytest",
    "pyxem.utils.sim_utils.get_electron_wavelength"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_sim_utils.test_get_interaction_constant": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyxem.tests.test_utils.test_sim_utils.pytest",
    "pyxem.utils.sim_utils.get_interaction_constant"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_sim_utils.test_get_points_in_sphere": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "len",
    "pyxem.tests.test_utils.test_sim_utils.diffpy",
    "pyxem.utils.sim_utils.get_points_in_sphere"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_sim_utils.test_get_unique_families": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "pyxem.utils.sim_utils.get_unique_families"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_sim_utils.test_kinematic_simulator_gaussian_probe": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "isinstance",
    "numpy.asarray",
    "pyxem.signals.electron_diffraction.ElectronDiffraction",
    "pyxem.utils.sim_utils.simulate_kinematic_scattering"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_sim_utils.test_kinematic_simulator_invalid_illumination": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "pyxem.tests.test_utils.test_sim_utils.pytest",
    "pyxem.utils.sim_utils.simulate_kinematic_scattering"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_sim_utils.test_kinematic_simulator_invalid_scattering_params": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.asarray",
    "pyxem.tests.test_utils.test_sim_utils.pytest",
    "pyxem.utils.sim_utils.simulate_kinematic_scattering"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_sim_utils.test_kinematic_simulator_plane_wave": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "isinstance",
    "numpy.asarray",
    "pyxem.signals.electron_diffraction.ElectronDiffraction",
    "pyxem.utils.sim_utils.simulate_kinematic_scattering"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_sim_utils.test_kinematic_simulator_xtables_scattering_params": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "isinstance",
    "numpy.asarray",
    "pyxem.signals.electron_diffraction.ElectronDiffraction",
    "pyxem.utils.sim_utils.simulate_kinematic_scattering"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_sim_utils.test_rotation_list_stereographic": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "any",
    "numpy.allclose",
    "numpy.deg2rad",
    "pyxem.tests.test_utils.test_sim_utils.create_structure_cubic",
    "pyxem.tests.test_utils.test_sim_utils.create_structure_hexagonal",
    "pyxem.tests.test_utils.test_sim_utils.create_structure_monoclinic",
    "pyxem.tests.test_utils.test_sim_utils.create_structure_orthorombic",
    "pyxem.tests.test_utils.test_sim_utils.create_structure_tetragonal",
    "pyxem.tests.test_utils.test_sim_utils.create_structure_trigonal",
    "pyxem.tests.test_utils.test_sim_utils.pytest",
    "pyxem.tests.test_utils.test_sim_utils.structure_cubic_rotations",
    "pyxem.tests.test_utils.test_sim_utils.structure_hexagonal_rotations",
    "pyxem.tests.test_utils.test_sim_utils.structure_monoclinic_rotations",
    "pyxem.tests.test_utils.test_sim_utils.structure_orthogonal_rotations",
    "pyxem.tests.test_utils.test_sim_utils.structure_tetragonal_rotations",
    "pyxem.tests.test_utils.test_sim_utils.structure_trigonal_rotations",
    "pyxem.utils.sim_utils.rotation_list_stereographic"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_sim_utils.test_rotation_list_stereographic_raises_invalid_corners": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "ValueError",
    "numpy.deg2rad",
    "pyxem.tests.test_utils.test_sim_utils.create_structure_cubic",
    "pyxem.tests.test_utils.test_sim_utils.pytest",
    "pyxem.tests.test_utils.test_sim_utils.structure_cubic_rotations",
    "pyxem.utils.sim_utils.rotation_list_stereographic"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_sim_utils.test_uvtw_to_uvw": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyxem.tests.test_utils.test_sim_utils.pytest",
    "pyxem.utils.sim_utils.uvtw_to_uvw"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_sim_utils.transfer_navigation_axes": {
  "data": {
   "shadows": "pyxem.utils.sim_utils.transfer_navigation_axes"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_sim_utils.uvtw_to_uvw": {
  "data": {
   "shadows": "pyxem.utils.sim_utils.uvtw_to_uvw"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_subpixel_utils": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_utils.test_subpixel_utils._conventional_xc": {
  "data": {
   "shadows": "pyxem.utils.subpixel_refinements_utils._conventional_xc"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_subpixel_utils.draw": {
  "data": {
   "shadows": "skimage.draw"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_subpixel_utils.exp_disc": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "int",
    "numpy.zeros",
    "pyxem.tests.test_utils.test_subpixel_utils.pytest",
    "skimage.draw.circle"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_subpixel_utils.get_experimental_square": {
  "data": {
   "shadows": "pyxem.utils.subpixel_refinements_utils.get_experimental_square"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_subpixel_utils.get_simulated_disc": {
  "data": {
   "shadows": "pyxem.utils.subpixel_refinements_utils.get_simulated_disc"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_subpixel_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_subpixel_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_subpixel_utils.rescale": {
  "data": {
   "shadows": "skimage.transform.rescale"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_subpixel_utils.sim_disc": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pyxem.tests.test_utils.test_subpixel_utils.pytest",
    "pyxem.utils.subpixel_refinements_utils.get_simulated_disc"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_subpixel_utils.test___conventional_xc": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.sqrt",
    "numpy.subtract",
    "pyxem.tests.test_utils.test_subpixel_utils.exp_disc",
    "pyxem.tests.test_utils.test_subpixel_utils.pytest",
    "pyxem.tests.test_utils.test_subpixel_utils.sim_disc",
    "pyxem.tests.test_utils.test_subpixel_utils.upsample_factor",
    "pyxem.utils.subpixel_refinements_utils._conventional_xc"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_subpixel_utils.test_get_experimental_square": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "int",
    "pyxem.tests.test_utils.test_subpixel_utils.exp_disc",
    "pyxem.tests.test_utils.test_subpixel_utils.pytest",
    "pyxem.utils.subpixel_refinements_utils.get_experimental_square"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_subpixel_utils.test_non_even_errors_get_experimental_errors": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pyxem.tests.test_utils.test_subpixel_utils.exp_disc",
    "pyxem.tests.test_utils.test_subpixel_utils.pytest",
    "pyxem.utils.subpixel_refinements_utils.get_experimental_square"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_subpixel_utils.test_non_even_errors_get_simulated_disc": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pyxem.tests.test_utils.test_subpixel_utils.pytest",
    "pyxem.utils.subpixel_refinements_utils.get_simulated_disc"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_subpixel_utils.upsample_factor": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "int",
    "pyxem.tests.test_utils.test_subpixel_utils.pytest"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_vector_utils": {
  "data": {},
  "type": "module"
 },
 "pyxem.tests.test_utils.test_vector_utils.calculate_norms": {
  "data": {
   "shadows": "pyxem.utils.vector_utils.calculate_norms"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_vector_utils.calculate_norms_ragged": {
  "data": {
   "shadows": "pyxem.utils.vector_utils.calculate_norms_ragged"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_vector_utils.detector_to_fourier": {
  "data": {
   "shadows": "pyxem.utils.vector_utils.detector_to_fourier"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_vector_utils.euler2mat": {
  "data": {
   "shadows": "transforms3d.euler.euler2mat"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_vector_utils.get_angle_cartesian": {
  "data": {
   "shadows": "pyxem.utils.vector_utils.get_angle_cartesian"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_vector_utils.get_angle_cartesian_vec": {
  "data": {
   "shadows": "pyxem.utils.vector_utils.get_angle_cartesian_vec"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_vector_utils.get_rotation_matrix_between_vectors": {
  "data": {
   "shadows": "pyxem.utils.vector_utils.get_rotation_matrix_between_vectors"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_vector_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_vector_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyxem.tests.test_utils.test_vector_utils.test_calculate_norms": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.allclose",
    "pyxem.utils.vector_utils.calculate_norms"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_vector_utils.test_calculate_norms_ragged": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "pyxem.utils.vector_utils.calculate_norms_ragged"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_vector_utils.test_detector_to_fourier": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "pyxem.tests.test_utils.test_vector_utils.pytest",
    "pyxem.utils.vector_utils.detector_to_fourier"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_vector_utils.test_get_angle_cartesian": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.deg2rad",
    "numpy.testing.assert_allclose",
    "pyxem.tests.test_utils.test_vector_utils.pytest",
    "pyxem.utils.vector_utils.get_angle_cartesian"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_vector_utils.test_get_angle_cartesian_vec": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.deg2rad",
    "numpy.testing.assert_allclose",
    "pyxem.tests.test_utils.test_vector_utils.pytest",
    "pyxem.utils.vector_utils.get_angle_cartesian_vec"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_vector_utils.test_get_angle_cartesian_vec_input_validation": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "ValueError",
    "numpy.empty",
    "pyxem.tests.test_utils.test_vector_utils.pytest",
    "pyxem.utils.vector_utils.get_angle_cartesian_vec"
   ]
  },
  "type": "function"
 },
 "pyxem.tests.test_utils.test_vector_utils.test_get_rotation_matrix_between_vectors": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.deg2rad",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "pyxem.tests.test_utils.test_vector_utils.pytest",
    "pyxem.utils.vector_utils.get_rotation_matrix_between_vectors",
    "transforms3d.euler.euler2mat"
   ]
  },
  "type": "function"
 },
 "pyxem.utils": {
  "data": {},
  "type": "module"
 },
 "pyxem.utils.atomic_scattering_params": {
  "data": {
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "module"
 },
 "pyxem.utils.atomic_scattering_params.ATOMIC_SCATTERING_PARAMS": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pyxem.utils.calibration_utils": {
  "data": {},
  "type": "module"
 },
 "pyxem.utils.calibration_utils.calc_radius_with_distortion": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.sin",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.calibration_utils.call_ring_pattern": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "pyxem.utils.calibration_utils.call_ring_pattern.ring_pattern": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.size",
    "pyxem.utils.calibration_utils.calc_radius_with_distortion",
    "round"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.calibration_utils.generate_ring_pattern": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.linspace",
    "numpy.meshgrid",
    "numpy.reshape",
    "pyxem.utils.calibration_utils.calc_radius_with_distortion",
    "pyxem.utils.calibration_utils.call_ring_pattern",
    "ring_pattern"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.calibration_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.utils.expt_utils": {
  "data": {},
  "type": "module"
 },
 "pyxem.utils.expt_utils._cart2polar": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "numpy.arctan2",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.expt_utils._index_coords": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "float",
    "numpy.arange",
    "numpy.meshgrid"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.expt_utils._polar2cart": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.expt_utils.apply_transformation": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "skimage.transform.warp"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.expt_utils.circular_mask": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "numpy.ogrid"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.expt_utils.convert_affine_to_transform": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "skimage.transform.AffineTransform",
    "skimage.transform.SimilarityTransform"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.expt_utils.curve_fit": {
  "data": {
   "shadows": "scipy.optimize.curve_fit"
  },
  "type": "import"
 },
 "pyxem.utils.expt_utils.ellipse_perimeter": {
  "data": {
   "shadows": "skimage.draw.ellipse_perimeter"
  },
  "type": "import"
 },
 "pyxem.utils.expt_utils.filters": {
  "data": {
   "shadows": "skimage.filters"
  },
  "type": "import"
 },
 "pyxem.utils.expt_utils.find_beam_offset_cross_correlation": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.argmin",
    "numpy.array",
    "numpy.hanning",
    "numpy.outer",
    "numpy.size",
    "numpy.sqrt",
    "numpy.zeros_like",
    "pyxem.utils.expt_utils.reference_circle",
    "round",
    "scipy.ndimage.interpolation.shift",
    "skimage.feature.register_translation"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.expt_utils.gain_normalise": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.expt_utils.minimize": {
  "data": {
   "shadows": "scipy.optimize.minimize"
  },
  "type": "import"
 },
 "pyxem.utils.expt_utils.morphology": {
  "data": {
   "shadows": "skimage.morphology"
  },
  "type": "import"
 },
 "pyxem.utils.expt_utils.ndi": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "pyxem.utils.expt_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.utils.expt_utils.opening": {
  "data": {
   "shadows": "skimage.morphology.opening"
  },
  "type": "import"
 },
 "pyxem.utils.expt_utils.peaks_as_gvectors": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.expt_utils.radial_average": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "numpy.bincount",
    "numpy.indices",
    "numpy.int",
    "numpy.nan_to_num",
    "numpy.rint",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.expt_utils.reference_circle": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "numpy.size",
    "numpy.zeros",
    "range",
    "skimage.draw.ellipse_perimeter"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.expt_utils.regional_filter": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "numpy.copy",
    "skimage.morphology.reconstruction"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.expt_utils.register_translation": {
  "data": {
   "shadows": "skimage.feature.register_translation"
  },
  "type": "import"
 },
 "pyxem.utils.expt_utils.remove_dead": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.copy",
    "numpy.mean",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.expt_utils.shift": {
  "data": {
   "shadows": "scipy.ndimage.interpolation.shift"
  },
  "type": "import"
 },
 "pyxem.utils.expt_utils.square": {
  "data": {
   "shadows": "skimage.morphology.square"
  },
  "type": "import"
 },
 "pyxem.utils.expt_utils.subtract_background_dog": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "numpy.maximum",
    "numpy.where",
    "scipy.ndimage.gaussian_filter"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.expt_utils.subtract_background_median": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "numpy.maximum",
    "numpy.uint16",
    "scipy.ndimage.median_filter",
    "skimage.filters.median",
    "skimage.morphology.square"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.expt_utils.subtract_reference": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "numpy.float64",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.expt_utils.tf": {
  "data": {
   "shadows": "skimage.transform"
  },
  "type": "import"
 },
 "pyxem.utils.expt_utils.threshold_otsu": {
  "data": {
   "shadows": "skimage.filters.threshold_otsu"
  },
  "type": "import"
 },
 "pyxem.utils.expt_utils.threshold_sauvola": {
  "data": {
   "shadows": "skimage.filters.threshold_sauvola"
  },
  "type": "import"
 },
 "pyxem.utils.indexation_utils": {
  "data": {},
  "type": "module"
 },
 "pyxem.utils.indexation_utils._cart2polar": {
  "data": {
   "shadows": "pyxem.utils.expt_utils._cart2polar"
  },
  "type": "import"
 },
 "pyxem.utils.indexation_utils._choose_peak_ids": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "numpy.int",
    "numpy.linspace",
    "pyxem.utils.expt_utils._cart2polar"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.indexation_utils._sort_solutions": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "min"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.indexation_utils.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "pyxem.utils.indexation_utils.correlate_library": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.sum",
    "numpy.unravel_index",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.indexation_utils.crystal_from_template_matching": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "dict",
    "numpy.argmax",
    "numpy.empty",
    "numpy.max",
    "numpy.partition",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.indexation_utils.crystal_from_vector_matching": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "dict",
    "numpy.argmin",
    "numpy.empty",
    "numpy.min",
    "numpy.partition",
    "numpy.rad2deg",
    "numpy.unique",
    "transforms3d.euler.mat2euler"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.indexation_utils.get_angle_cartesian": {
  "data": {
   "shadows": "pyxem.utils.vector_utils.get_angle_cartesian"
  },
  "type": "import"
 },
 "pyxem.utils.indexation_utils.get_rotation_matrix_between_vectors": {
  "data": {
   "shadows": "pyxem.utils.vector_utils.get_rotation_matrix_between_vectors"
  },
  "type": "import"
 },
 "pyxem.utils.indexation_utils.index_magnitudes": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "len",
    "numpy.absolute",
    "numpy.arange",
    "numpy.array",
    "numpy.where",
    "numpy.zeros",
    "object"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.indexation_utils.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "pyxem.utils.indexation_utils.mat2euler": {
  "data": {
   "shadows": "transforms3d.euler.mat2euler"
  },
  "type": "import"
 },
 "pyxem.utils.indexation_utils.mat2quat": {
  "data": {
   "shadows": "transforms3d.quaternions.mat2quat"
  },
  "type": "import"
 },
 "pyxem.utils.indexation_utils.match_vectors": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "enumerate",
    "itertools.combinations",
    "len",
    "list",
    "min",
    "numpy.abs",
    "numpy.array",
    "numpy.asarray",
    "numpy.count_nonzero",
    "numpy.einsum",
    "numpy.empty",
    "numpy.identity",
    "numpy.linalg.norm",
    "numpy.max",
    "numpy.object",
    "numpy.rint",
    "pyxem.utils.indexation_utils._choose_peak_ids",
    "pyxem.utils.indexation_utils._sort_solutions",
    "pyxem.utils.vector_utils.get_angle_cartesian",
    "pyxem.utils.vector_utils.get_rotation_matrix_between_vectors",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.indexation_utils.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyxem.utils.indexation_utils.nlargest": {
  "data": {
   "shadows": "heapq.nlargest"
  },
  "type": "import"
 },
 "pyxem.utils.indexation_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.utils.lobato_scattering_params": {
  "data": {
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "module"
 },
 "pyxem.utils.lobato_scattering_params.ATOMIC_SCATTERING_PARAMS_LOBATO": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyxem.utils.peakfinder2D_gui": {
  "data": {
   "symbols_in_volume": [
    "pyxem.utils.peakfinders2D.find_peaks_dog",
    "pyxem.utils.peakfinders2D.find_peaks_log",
    "pyxem.utils.peakfinders2D.find_peaks_stat",
    "pyxem.utils.peakfinders2D.find_peaks_xc",
    "pyxem.utils.peakfinders2D.find_peaks_zaefferer"
   ]
  },
  "type": "module"
 },
 "pyxem.utils.peakfinder2D_gui.BoundedFloatText": {
  "data": {
   "shadows": "ipywidgets.BoundedFloatText"
  },
  "type": "import"
 },
 "pyxem.utils.peakfinder2D_gui.BoundedIntText": {
  "data": {
   "shadows": "ipywidgets.BoundedIntText"
  },
  "type": "import"
 },
 "pyxem.utils.peakfinder2D_gui.Dropdown": {
  "data": {
   "shadows": "ipywidgets.Dropdown"
  },
  "type": "import"
 },
 "pyxem.utils.peakfinder2D_gui.FloatSlider": {
  "data": {
   "shadows": "ipywidgets.FloatSlider"
  },
  "type": "import"
 },
 "pyxem.utils.peakfinder2D_gui.FloatText": {
  "data": {
   "shadows": "ipywidgets.FloatText"
  },
  "type": "import"
 },
 "pyxem.utils.peakfinder2D_gui.HBox": {
  "data": {
   "shadows": "ipywidgets.HBox"
  },
  "type": "import"
 },
 "pyxem.utils.peakfinder2D_gui.IntSlider": {
  "data": {
   "shadows": "ipywidgets.IntSlider"
  },
  "type": "import"
 },
 "pyxem.utils.peakfinder2D_gui.IntText": {
  "data": {
   "shadows": "ipywidgets.IntText"
  },
  "type": "import"
 },
 "pyxem.utils.peakfinder2D_gui.Label": {
  "data": {
   "shadows": "ipywidgets.Label"
  },
  "type": "import"
 },
 "pyxem.utils.peakfinder2D_gui.Layout": {
  "data": {
   "shadows": "ipywidgets.Layout"
  },
  "type": "import"
 },
 "pyxem.utils.peakfinder2D_gui.METHODS": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyxem.utils.peakfinder2D_gui.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyxem.utils.peakfinder2D_gui.PeakFinderUIBase": {
  "data": {
   "lineno": 31
  },
  "type": "class"
 },
 "pyxem.utils.peakfinder2D_gui.PeakFinderUIBase.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pyxem.utils.peakfinder2D_gui.METHODS",
    "pyxem.utils.peakfinder2D_gui.inspect"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinder2D_gui.PeakFinderUIBase.current_method": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "dict",
    "property",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinder2D_gui.PeakFinderUIBase.get_data": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "pyxem.utils.peakfinder2D_gui.PeakFinderUIBase.get_peaks": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "pyxem.utils.peakfinder2D_gui.PeakFinderUIBase.init_ui": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinder2D_gui.PeakFinderUIBase.interactive": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "pyxem.utils.peakfinder2D_gui.PeakFinderUIIPYW": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pyxem.utils.peakfinder2D_gui.PeakFinderUIBase"
   ]
  },
  "type": "class"
 },
 "pyxem.utils.peakfinder2D_gui.PeakFinderUIIPYW.__init__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pyxem.utils.peakfinder2D_gui.PeakFinderUIIPYW",
    "pyxem.utils.peakfinders2D.find_peaks_xc.__name__",
    "super"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinder2D_gui.PeakFinderUIIPYW.create_choices_widget": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "IPython.display.display",
    "ipywidgets.Dropdown",
    "list"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinder2D_gui.PeakFinderUIIPYW.create_choices_widget.on_method_change": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "pyxem.utils.peakfinder2D_gui.PeakFinderUIIPYW.create_navigator": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "IPython.display.display",
    "ipywidgets.HBox"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinder2D_gui.PeakFinderUIIPYW.create_navigator_1d": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "ipywidgets.BoundedIntText",
    "ipywidgets.Button",
    "ipywidgets.HBox",
    "ipywidgets.Layout"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinder2D_gui.PeakFinderUIIPYW.create_navigator_1d.on_index_change": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "pyxem.utils.peakfinder2D_gui.PeakFinderUIIPYW.create_navigator_1d.on_randomize": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "random.randint"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinder2D_gui.PeakFinderUIIPYW.create_navigator_2d": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "ipywidgets.BoundedIntText",
    "ipywidgets.Button",
    "ipywidgets.HBox",
    "ipywidgets.Layout"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinder2D_gui.PeakFinderUIIPYW.create_navigator_2d.on_index_change": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "pyxem.utils.peakfinder2D_gui.PeakFinderUIIPYW.create_navigator_2d.on_randomize": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "random.randint"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinder2D_gui.PeakFinderUIIPYW.create_param_widget": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "ipywidgets.BoundedFloatText",
    "ipywidgets.BoundedIntText",
    "ipywidgets.FloatSlider",
    "ipywidgets.FloatText",
    "ipywidgets.HBox",
    "ipywidgets.IntSlider",
    "ipywidgets.IntText",
    "ipywidgets.Label",
    "ipywidgets.Layout",
    "ipywidgets.ToggleButton",
    "isinstance",
    "numpy.abs",
    "str",
    "traitlets.link"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinder2D_gui.PeakFinderUIIPYW.create_param_widget.on_bool_change": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinder2D_gui.PeakFinderUIIPYW.create_param_widget.on_max_change": {
  "data": {
   "lineno": 261
  },
  "type": "function"
 },
 "pyxem.utils.peakfinder2D_gui.PeakFinderUIIPYW.create_param_widget.on_min_change": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "pyxem.utils.peakfinder2D_gui.PeakFinderUIIPYW.create_param_widget.on_param_change": {
  "data": {
   "lineno": 266
  },
  "type": "function"
 },
 "pyxem.utils.peakfinder2D_gui.PeakFinderUIIPYW.create_param_widgets": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "IPython.display.display",
    "ipywidgets.VBox"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinder2D_gui.PeakFinderUIIPYW.init_ui": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "pyxem.utils.peakfinder2D_gui.PeakFinderUIIPYW.plot": {
  "data": {
   "lineno": 277
  },
  "type": "function"
 },
 "pyxem.utils.peakfinder2D_gui.PeakFinderUIIPYW.plot_image": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.show"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinder2D_gui.PeakFinderUIIPYW.plot_peaks": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "matplotlib.pyplot.show"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinder2D_gui.PeakFinderUIIPYW.replot_image": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "matplotlib.pyplot.draw",
    "matplotlib.pyplot.get_fignums"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinder2D_gui.PeakFinderUIIPYW.replot_peaks": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "matplotlib.pyplot.draw",
    "matplotlib.pyplot.get_fignums"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinder2D_gui.ToggleButton": {
  "data": {
   "shadows": "ipywidgets.ToggleButton"
  },
  "type": "import"
 },
 "pyxem.utils.peakfinder2D_gui.VBox": {
  "data": {
   "shadows": "ipywidgets.VBox"
  },
  "type": "import"
 },
 "pyxem.utils.peakfinder2D_gui.display": {
  "data": {
   "shadows": "IPython.display.display"
  },
  "type": "import"
 },
 "pyxem.utils.peakfinder2D_gui.find_peaks_dog": {
  "data": {
   "shadows": "pyxem.utils.peakfinders2D.find_peaks_dog"
  },
  "type": "import"
 },
 "pyxem.utils.peakfinder2D_gui.find_peaks_log": {
  "data": {
   "shadows": "pyxem.utils.peakfinders2D.find_peaks_log"
  },
  "type": "import"
 },
 "pyxem.utils.peakfinder2D_gui.find_peaks_stat": {
  "data": {
   "shadows": "pyxem.utils.peakfinders2D.find_peaks_stat"
  },
  "type": "import"
 },
 "pyxem.utils.peakfinder2D_gui.find_peaks_xc": {
  "data": {
   "shadows": "pyxem.utils.peakfinders2D.find_peaks_xc"
  },
  "type": "import"
 },
 "pyxem.utils.peakfinder2D_gui.find_peaks_zaefferer": {
  "data": {
   "shadows": "pyxem.utils.peakfinders2D.find_peaks_zaefferer"
  },
  "type": "import"
 },
 "pyxem.utils.peakfinder2D_gui.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "pyxem.utils.peakfinder2D_gui.ipyw": {
  "data": {
   "shadows": "ipywidgets"
  },
  "type": "import"
 },
 "pyxem.utils.peakfinder2D_gui.link": {
  "data": {
   "shadows": "traitlets.link"
  },
  "type": "import"
 },
 "pyxem.utils.peakfinder2D_gui.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.utils.peakfinder2D_gui.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pyxem.utils.peakfinder2D_gui.randint": {
  "data": {
   "shadows": "random.randint"
  },
  "type": "import"
 },
 "pyxem.utils.peakfinders2D": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan"
   ]
  },
  "type": "module"
 },
 "pyxem.utils.peakfinders2D.DBSCAN": {
  "data": {
   "shadows": "sklearn.cluster.DBSCAN"
  },
  "type": "import"
 },
 "pyxem.utils.peakfinders2D.NO_PEAKS": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pyxem.utils.peakfinders2D.blob_dog": {
  "data": {
   "shadows": "skimage.feature.blob_dog"
  },
  "type": "import"
 },
 "pyxem.utils.peakfinders2D.blob_log": {
  "data": {
   "shadows": "skimage.feature.blob_log"
  },
  "type": "import"
 },
 "pyxem.utils.peakfinders2D.clean_peaks": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "len",
    "pyxem.utils.peakfinders2D.NO_PEAKS"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinders2D.corner_peaks": {
  "data": {
   "shadows": "skimage.feature.corner_peaks"
  },
  "type": "import"
 },
 "pyxem.utils.peakfinders2D.find_peaks_dog": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "numpy.max",
    "skimage.feature.blob_dog"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinders2D.find_peaks_log": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "numpy.max",
    "skimage.feature.blob_log"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinders2D.find_peaks_stat": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "pyxem.utils.peakfinders2D.clean_peaks",
    "stat_peak_finder"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinders2D.find_peaks_stat._local_stat": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "numpy.hypot",
    "numpy.ogrid",
    "scipy.ndimage.filters.generic_filter"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinders2D.find_peaks_stat._peak_find_once": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "half_binarise",
    "separate_peaks",
    "smooth"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinders2D.find_peaks_stat.half_binarise": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinders2D.find_peaks_stat.local_mean": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "_local_stat",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinders2D.find_peaks_stat.local_std": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "_local_stat",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinders2D.find_peaks_stat.normalize": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinders2D.find_peaks_stat.separate_peaks": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "list",
    "numpy.indices",
    "set",
    "sklearn.cluster.DBSCAN"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinders2D.find_peaks_stat.single_pixel_desensitize": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.mean",
    "scipy.ndimage.filters.generic_filter"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinders2D.find_peaks_stat.smooth": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "scipy.ndimage.filters.uniform_filter"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinders2D.find_peaks_stat.stat_binarise": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "local_mean",
    "local_std",
    "numpy.zeros",
    "single_pixel_desensitize"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinders2D.find_peaks_stat.stat_peak_finder": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "_peak_find_once",
    "len",
    "normalize",
    "numpy.array",
    "numpy.infty",
    "numpy.mean",
    "stat_binarise"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinders2D.find_peaks_xc": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "pyxem.utils.peakfinders2D.clean_peaks",
    "skimage.feature.corner_peaks",
    "skimage.feature.match_template"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinders2D.find_peaks_zaefferer": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "box",
    "distance",
    "get_max",
    "gradient",
    "numpy.all",
    "numpy.array",
    "numpy.indices",
    "numpy.max",
    "pyxem.utils.peakfinders2D.clean_peaks",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinders2D.find_peaks_zaefferer.box": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "int",
    "max",
    "min",
    "numpy.array",
    "numpy.meshgrid",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinders2D.find_peaks_zaefferer.distance": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.sqrt",
    "numpy.square",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinders2D.find_peaks_zaefferer.get_max": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinders2D.find_peaks_zaefferer.gradient": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "numpy.gradient"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.peakfinders2D.generic_filter": {
  "data": {
   "shadows": "scipy.ndimage.filters.generic_filter"
  },
  "type": "import"
 },
 "pyxem.utils.peakfinders2D.match_template": {
  "data": {
   "shadows": "skimage.feature.match_template"
  },
  "type": "import"
 },
 "pyxem.utils.peakfinders2D.ndi": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "pyxem.utils.peakfinders2D.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.utils.peakfinders2D.uniform_filter": {
  "data": {
   "shadows": "scipy.ndimage.filters.uniform_filter"
  },
  "type": "import"
 },
 "pyxem.utils.plot": {
  "data": {},
  "type": "module"
 },
 "pyxem.utils.plot.FloatingSubplot": {
  "data": {
   "shadows": "mpl_toolkits.axisartist.floating_axes.FloatingSubplot"
  },
  "type": "import"
 },
 "pyxem.utils.plot.GridHelperCurveLinear": {
  "data": {
   "shadows": "mpl_toolkits.axisartist.floating_axes.GridHelperCurveLinear"
  },
  "type": "import"
 },
 "pyxem.utils.plot._find_max_length_peaks": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.plot.generate_marker_inputs_from_peaks": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.concatenate",
    "numpy.nan",
    "numpy.transpose",
    "pyxem.utils.plot._find_max_length_peaks",
    "pyxem.utils.plot.itertools"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.plot.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyxem.utils.plot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.utils.scattering_params": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "pyxem.utils.scattering_params.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.utils.scattering_params.scattering_params": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyxem.utils.sim_utils": {
  "data": {},
  "type": "module"
 },
 "pyxem.utils.sim_utils.ElectronDiffraction": {
  "data": {
   "shadows": "pyxem.signals.electron_diffraction.ElectronDiffraction"
  },
  "type": "import"
 },
 "pyxem.utils.sim_utils.axangle2mat": {
  "data": {
   "shadows": "transforms3d.axangles.axangle2mat"
  },
  "type": "import"
 },
 "pyxem.utils.sim_utils.c": {
  "data": {
   "shadows": "scipy.constants.c"
  },
  "type": "import"
 },
 "pyxem.utils.sim_utils.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pyxem.utils.sim_utils.diffpy.structure": {
  "data": {
   "shadows": "diffpy.structure"
  },
  "type": "import"
 },
 "pyxem.utils.sim_utils.e": {
  "data": {
   "shadows": "scipy.constants.e"
  },
  "type": "import"
 },
 "pyxem.utils.sim_utils.euler2mat": {
  "data": {
   "shadows": "transforms3d.euler.euler2mat"
  },
  "type": "import"
 },
 "pyxem.utils.sim_utils.get_angle_cartesian": {
  "data": {
   "shadows": "pyxem.utils.vector_utils.get_angle_cartesian"
  },
  "type": "import"
 },
 "pyxem.utils.sim_utils.get_atomic_scattering_factors": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.outer",
    "numpy.square",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.sim_utils.get_electron_wavelength": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "pyxem.utils.sim_utils.math",
    "scipy.constants.c",
    "scipy.constants.e",
    "scipy.constants.h",
    "scipy.constants.m_e"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.sim_utils.get_interaction_constant": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pyxem.utils.sim_utils.get_electron_wavelength",
    "scipy.constants.e",
    "scipy.constants.m_e",
    "scipy.constants.pi"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.sim_utils.get_kinematical_intensities": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.exp",
    "numpy.linalg.inv",
    "numpy.outer",
    "numpy.pi",
    "numpy.sum",
    "pyxem.utils.sim_utils.get_atomic_scattering_factors",
    "pyxem.utils.sim_utils.get_vectorized_list_for_atomic_scattering_factors"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.sim_utils.get_points_in_sphere": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "itertools.product",
    "list",
    "numpy.abs",
    "numpy.arange",
    "numpy.asarray",
    "numpy.ceil",
    "scipy.constants.c"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.sim_utils.get_scattering_params_dict": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.sim_utils.get_unique_families": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "is_perm",
    "len",
    "list",
    "pyxem.utils.sim_utils.collections",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.sim_utils.get_unique_families.is_perm": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "all",
    "numpy.abs",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.sim_utils.get_vectorized_list_for_atomic_scattering_factors": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.empty",
    "pyxem.utils.sim_utils.get_scattering_params_dict"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.sim_utils.h": {
  "data": {
   "shadows": "scipy.constants.h"
  },
  "type": "import"
 },
 "pyxem.utils.sim_utils.is_lattice_hexagonal": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "len",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.sim_utils.m_e": {
  "data": {
   "shadows": "scipy.constants.m_e"
  },
  "type": "import"
 },
 "pyxem.utils.sim_utils.mat2euler": {
  "data": {
   "shadows": "transforms3d.euler.mat2euler"
  },
  "type": "import"
 },
 "pyxem.utils.sim_utils.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyxem.utils.sim_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.utils.sim_utils.peaks_from_best_template": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "list",
    "numpy.argmax",
    "numpy.deg2rad",
    "pyxem.utils.sim_utils.simulate_rotated_structure",
    "transforms3d.euler.euler2mat",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.sim_utils.peaks_from_best_vector_match": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "numpy.argmax",
    "pyxem.utils.sim_utils.simulate_rotated_structure"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.sim_utils.pi": {
  "data": {
   "shadows": "scipy.constants.pi"
  },
  "type": "import"
 },
 "pyxem.utils.sim_utils.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "pyxem.utils.sim_utils.rotation_list_stereographic": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "list",
    "max",
    "numpy.count_nonzero",
    "numpy.cross",
    "numpy.dot",
    "numpy.linalg.norm",
    "numpy.linspace",
    "numpy.rad2deg",
    "numpy.unique",
    "pyxem.utils.sim_utils.math",
    "pyxem.utils.sim_utils.uvtw_to_uvw",
    "pyxem.utils.vector_utils.get_angle_cartesian",
    "transforms3d.axangles.axangle2mat",
    "transforms3d.euler.mat2euler",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.sim_utils.simulate_kinematic_scattering": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "ValueError",
    "numpy.abs",
    "numpy.array",
    "numpy.dot",
    "numpy.exp",
    "numpy.linalg.norm",
    "numpy.linspace",
    "numpy.meshgrid",
    "numpy.newaxis",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.zeros_like",
    "pyxem.signals.electron_diffraction.ElectronDiffraction",
    "pyxem.utils.sim_utils.get_atomic_scattering_factors",
    "pyxem.utils.sim_utils.get_electron_wavelength",
    "pyxem.utils.sim_utils.get_scattering_params_dict"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.sim_utils.simulate_rotated_structure": {
  "data": {
   "lineno": 346
  },
  "type": "function"
 },
 "pyxem.utils.sim_utils.transfer_navigation_axes": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "len",
    "min",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.sim_utils.transfer_navigation_axes_to_signal_axes": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "min",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.sim_utils.uvtw_to_uvw": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "int",
    "pyxem.utils.sim_utils.math",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.subpixel_refinements_utils": {
  "data": {},
  "type": "module"
 },
 "pyxem.utils.subpixel_refinements_utils._conventional_xc": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "skimage.feature.register_translation"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.subpixel_refinements_utils.draw": {
  "data": {
   "shadows": "skimage.draw"
  },
  "type": "import"
 },
 "pyxem.utils.subpixel_refinements_utils.get_experimental_square": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ValueError",
    "int"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.subpixel_refinements_utils.get_simulated_disc": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.zeros",
    "skimage.draw.circle"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.subpixel_refinements_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.utils.subpixel_refinements_utils.register_translation": {
  "data": {
   "shadows": "skimage.feature.register_translation"
  },
  "type": "import"
 },
 "pyxem.utils.subpixel_refinements_utils.rescale": {
  "data": {
   "shadows": "skimage.transform.rescale"
  },
  "type": "import"
 },
 "pyxem.utils.vdf_utils": {
  "data": {},
  "type": "module"
 },
 "pyxem.utils.vdf_utils.normalize_vdf": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "pyxem.utils.vector_utils": {
  "data": {},
  "type": "module"
 },
 "pyxem.utils.vector_utils.axangle2mat": {
  "data": {
   "shadows": "transforms3d.axangles.axangle2mat"
  },
  "type": "import"
 },
 "pyxem.utils.vector_utils.calculate_norms": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.vector_utils.calculate_norms_ragged": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.vector_utils.detector_to_fourier": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.hstack",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.vector_utils.get_angle_cartesian": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "max",
    "min",
    "numpy.dot",
    "numpy.linalg.norm",
    "pyxem.utils.vector_utils.math"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.vector_utils.get_angle_cartesian_vec": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arccos",
    "numpy.clip",
    "numpy.linalg.norm",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.vector_utils.get_indices_from_distance_matrix": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "numpy.append",
    "numpy.array",
    "numpy.int",
    "numpy.shape",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.vector_utils.get_npeaks": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.vector_utils.get_rotation_matrix_between_vectors": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.any",
    "numpy.array",
    "numpy.broadcast_to",
    "numpy.cross",
    "numpy.einsum",
    "numpy.empty",
    "numpy.identity",
    "numpy.isclose",
    "numpy.matmul",
    "numpy.negative",
    "numpy.sum",
    "pyxem.utils.vector_utils.get_angle_cartesian_vec",
    "pyxem.utils.vector_utils.normalize_or_zero",
    "transforms3d.axangles.axangle2mat",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.vector_utils.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyxem.utils.vector_utils.normalize_or_zero": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "pyxem.utils.vector_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyxem.version": {
  "data": {},
  "type": "module"
 },
 "pyxem.version.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pyxem.version.__copyright__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "pyxem.version.__credits__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "pyxem.version.__email__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "pyxem.version.__license__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "pyxem.version.__maintainer__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "pyxem.version.__status__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pyxem.version.__version__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "pyxem.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 }
}