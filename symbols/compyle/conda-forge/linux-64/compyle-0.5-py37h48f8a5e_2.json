{
 "compyle": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "compyle.api": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "compyle.array": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "compyle.array.Array": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.array.Array.__add__": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.array.Array.__getitem__": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.array.Array.__init__": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.array.Array.__len__": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.array.Array.__radd__": {
  "lineno": 282,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.array.Array.__rsub__": {
  "lineno": 288,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.array.Array.__setitem__": {
  "lineno": 258,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "compyle.array.Array.__sub__": {
  "lineno": 276,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.array.Array._get_np_data": {
  "lineno": 301,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.array.Array._get_remove_kernels": {
  "lineno": 389,
  "symbols_in_volume": [
   "compyle.parallel.Elementwise",
   "compyle.parallel.Scan",
   "numpy.int32",
   "pytools.memoize_method"
  ],
  "type": "function"
 },
 "compyle.array.Array._get_remove_kernels.fill_if_remove": {
  "lineno": 393,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.array.Array._get_remove_kernels.remove_input_expr": {
  "lineno": 400,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.array.Array._get_remove_kernels.remove_output_expr": {
  "lineno": 409,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.array.Array._update_array_ref": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.array.Array.align": {
  "lineno": 438,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.array.Array.append": {
  "lineno": 375,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "compyle.array.Array.copy": {
  "lineno": 361,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.array.Array.copy_values": {
  "lineno": 445,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.array.Array.extend": {
  "lineno": 382,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.array.Array.fill": {
  "lineno": 372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.array.Array.get": {
  "lineno": 304,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.array.Array.get_array": {
  "lineno": 355,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.array.Array.get_data": {
  "lineno": 358,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.array.Array.pull": {
  "lineno": 316,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "compyle.array.Array.push": {
  "lineno": 321,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.array.Array.remove": {
  "lineno": 420,
  "symbols_in_volume": [
   "numpy.int32"
  ],
  "type": "function"
 },
 "compyle.array.Array.reserve": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.array.Array.resize": {
  "lineno": 326,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.array.Array.set": {
  "lineno": 310,
  "symbols_in_volume": [
   "pyopencl.array.to_device"
  ],
  "type": "function"
 },
 "compyle.array.Array.set_data": {
  "lineno": 341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.array.Array.squeeze": {
  "lineno": 442,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.array.Array.update_min_max": {
  "lineno": 366,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.array.arange": {
  "lineno": 157,
  "symbols_in_volume": [
   "numpy.arange",
   "pycuda.gpuarray.arange",
   "pyopencl.array.arange"
  ],
  "type": "function"
 },
 "compyle.array.empty": {
  "lineno": 117,
  "symbols_in_volume": [
   "numpy.empty",
   "pycuda.gpuarray.empty",
   "pyopencl.array.empty"
  ],
  "type": "function"
 },
 "compyle.array.get_backend": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.array.maximum": {
  "lineno": 184,
  "symbols_in_volume": [
   "pycuda.gpuarray.max",
   "pyopencl.array.max"
  ],
  "type": "function"
 },
 "compyle.array.minimum": {
  "lineno": 171,
  "symbols_in_volume": [
   "pycuda.gpuarray.min",
   "pyopencl.array.min"
  ],
  "type": "function"
 },
 "compyle.array.ones": {
  "lineno": 104,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "pycuda.gpuarray.zeros",
   "pyopencl.array.zeros"
  ],
  "type": "function"
 },
 "compyle.array.ones_like": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.ones_like",
   "pycuda.gpuarray.ones_like",
   "pyopencl.array.zeros_like"
  ],
  "type": "function"
 },
 "compyle.array.sum": {
  "lineno": 197,
  "symbols_in_volume": [
   "numpy.sum",
   "pycuda.gpuarray.sum",
   "pyopencl.array.sum"
  ],
  "type": "function"
 },
 "compyle.array.take": {
  "lineno": 210,
  "symbols_in_volume": [
   "numpy.take",
   "pycuda.gpuarray.take",
   "pyopencl.array.take"
  ],
  "type": "function"
 },
 "compyle.array.to_device": {
  "lineno": 77,
  "symbols_in_volume": [
   "pycuda.gpuarray.to_gpu",
   "pyopencl.array.to_device"
  ],
  "type": "function"
 },
 "compyle.array.wrap": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.array.wrap_array": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.float",
   "numpy.float32",
   "numpy.float64",
   "numpy.issubdtype",
   "numpy.ndarray",
   "pycuda.gpuarray.GPUArray",
   "pycuda.gpuarray.to_gpu",
   "pyopencl.array.Array",
   "pyopencl.array.to_device"
  ],
  "type": "function"
 },
 "compyle.array.zeros": {
  "lineno": 130,
  "symbols_in_volume": [
   "numpy.zeros",
   "pycuda.gpuarray.zeros",
   "pyopencl.array.zeros"
  ],
  "type": "function"
 },
 "compyle.array.zeros_like": {
  "lineno": 143,
  "symbols_in_volume": [
   "numpy.zeros_like",
   "pycuda.gpuarray.zeros_like",
   "pyopencl.array.zeros_like"
  ],
  "type": "function"
 },
 "compyle.ast_utils": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info.major"
  ],
  "type": "module"
 },
 "compyle.ast_utils.NameLister": {
  "lineno": 10,
  "symbols_in_volume": [
   "ast.NodeVisitor"
  ],
  "type": "class"
 },
 "compyle.ast_utils.NameLister.__init__": {
  "lineno": 13,
  "symbols_in_volume": [
   "ast.Load",
   "ast.Store"
  ],
  "type": "function"
 },
 "compyle.ast_utils.NameLister.visit_Name": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.ast_utils.SymbolParser": {
  "lineno": 23,
  "symbols_in_volume": [
   "ast.NodeVisitor"
  ],
  "type": "class"
 },
 "compyle.ast_utils.SymbolParser.__init__": {
  "lineno": 32,
  "symbols_in_volume": [
   "ast.Load",
   "ast.Store"
  ],
  "type": "function"
 },
 "compyle.ast_utils.SymbolParser.visit_Assign": {
  "lineno": 55,
  "symbols_in_volume": [
   "ast.List",
   "ast.Name",
   "ast.Subscript",
   "ast.Tuple"
  ],
  "type": "function"
 },
 "compyle.ast_utils.SymbolParser.visit_AugAssign": {
  "lineno": 45,
  "symbols_in_volume": [
   "ast.Name",
   "ast.Subscript"
  ],
  "type": "function"
 },
 "compyle.ast_utils.SymbolParser.visit_Call": {
  "lineno": 70,
  "symbols_in_volume": [
   "ast.Name"
  ],
  "type": "function"
 },
 "compyle.ast_utils.SymbolParser.visit_FunctionDef": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.ast_utils.SymbolParser.visit_Name": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.ast_utils._get_tree": {
  "lineno": 95,
  "symbols_in_volume": [
   "ast.parse"
  ],
  "type": "function"
 },
 "compyle.ast_utils.get_assigned": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.ast_utils.get_symbols": {
  "lineno": 99,
  "symbols_in_volume": [
   "ast.Load",
   "ast.Store"
  ],
  "type": "function"
 },
 "compyle.ast_utils.get_unknown_names_and_calls": {
  "lineno": 131,
  "symbols_in_volume": [
   "ast.parse"
  ],
  "type": "function"
 },
 "compyle.ast_utils.has_node": {
  "lineno": 152,
  "symbols_in_volume": [
   "ast.walk"
  ],
  "type": "function"
 },
 "compyle.ast_utils.has_return": {
  "lineno": 171,
  "symbols_in_volume": [
   "ast.Return"
  ],
  "type": "function"
 },
 "compyle.capture_stream": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "compyle.capture_stream.CaptureMultipleStreams": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.capture_stream.CaptureMultipleStreams.__enter__": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.capture_stream.CaptureMultipleStreams.__exit__": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.capture_stream.CaptureMultipleStreams.__init__": {
  "lineno": 72,
  "symbols_in_volume": [
   "sys.stderr",
   "sys.stdout"
  ],
  "type": "function"
 },
 "compyle.capture_stream.CaptureMultipleStreams.get_output": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.capture_stream.CaptureStream": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.capture_stream.CaptureStream.__enter__": {
  "lineno": 36,
  "symbols_in_volume": [
   "os.dup",
   "os.dup2",
   "tempfile.mktemp"
  ],
  "type": "function"
 },
 "compyle.capture_stream.CaptureStream.__exit__": {
  "lineno": 43,
  "symbols_in_volume": [
   "os.dup2",
   "os.remove"
  ],
  "type": "function"
 },
 "compyle.capture_stream.CaptureStream.__init__": {
  "lineno": 23,
  "symbols_in_volume": [
   "sys.stderr",
   "sys.stdout"
  ],
  "type": "function"
 },
 "compyle.capture_stream.CaptureStream._cache_output": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.capture_stream.CaptureStream.get_output": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.config": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "compyle.config.Config": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.config.Config.__init__": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.config.Config._omp_schedule_default": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.config.Config._profile_default": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.config.Config._use_cuda_default": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.config.Config._use_double_default": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.config.Config._use_local_memory_default": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.config.Config._use_opencl_default": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.config.Config._use_openmp_default": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.config.Config._wgs_default": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.config.Config.omp_schedule": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.config.Config.profile": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.config.Config.set_omp_schedule": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.config.Config.use_cuda": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.config.Config.use_double": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.config.Config.use_local_memory": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.config.Config.use_opencl": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.config.Config.use_openmp": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.config.Config.wgs": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.config.get_config": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.config.set_config": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.config.use_config": {
  "lineno": 160,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "compyle.cuda": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "pycuda._cluda.CLUDA_PREAMBLE",
   "pytools.persistent_dict.WriteOncePersistentDict"
  ],
  "type": "module"
 },
 "compyle.cuda.GenericScanKernel": {
  "lineno": 1155,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.cuda.GenericScanKernel.__call__": {
  "lineno": 1456,
  "symbols_in_volume": [
   "numpy.bool",
   "pycuda.driver.Context.get_device",
   "pycuda.driver.device_attribute.MULTIPROCESSOR_COUNT",
   "pycuda.gpuarray.empty",
   "pycuda.tools.VectorArg",
   "pytools.uniform_interval_splitting"
  ],
  "type": "function"
 },
 "compyle.cuda.GenericScanKernel._finish_setup_impl": {
  "lineno": 1219,
  "symbols_in_volume": [
   "pycuda.driver.Context.get_device",
   "pycuda.driver.device_attribute.MAX_SHARED_MEMORY_PER_BLOCK",
   "pycuda.driver.device_attribute.MAX_THREADS_PER_BLOCK",
   "pycuda.driver.function_attribute.MAX_THREADS_PER_BLOCK",
   "pycuda.tools.VectorArg",
   "pytools.any"
  ],
  "type": "function"
 },
 "compyle.cuda.GenericScanKernel.finish_setup": {
  "lineno": 1176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.cuda.GenericScanKernel.generate_scan_kernel": {
  "lineno": 1399,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.cuda.GenericScanKernel.get_local_mem_use": {
  "lineno": 1370,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.cuda.ScanPerformanceWarning": {
  "lineno": 954,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.cuda._BuiltFinalUpdateKernelInfo": {
  "lineno": 943,
  "symbols_in_volume": [
   "pytools.RecordWithoutPickling"
  ],
  "type": "class"
 },
 "compyle.cuda._BuiltFinalUpdateKernelInfo.__init__": {
  "lineno": 946,
  "symbols_in_volume": [
   "pytools.RecordWithoutPickling.__init__"
  ],
  "type": "function"
 },
 "compyle.cuda._BuiltScanKernelInfo": {
  "lineno": 913,
  "symbols_in_volume": [
   "pytools.RecordWithoutPickling"
  ],
  "type": "class"
 },
 "compyle.cuda._BuiltScanKernelInfo.__init__": {
  "lineno": 917,
  "symbols_in_volume": [
   "pytools.RecordWithoutPickling.__init__"
  ],
  "type": "function"
 },
 "compyle.cuda._GeneratedFinalUpdateKernelInfo": {
  "lineno": 924,
  "symbols_in_volume": [
   "pytools.Record"
  ],
  "type": "class"
 },
 "compyle.cuda._GeneratedFinalUpdateKernelInfo.__init__": {
  "lineno": 926,
  "symbols_in_volume": [
   "pytools.Record.__init__"
  ],
  "type": "function"
 },
 "compyle.cuda._GeneratedFinalUpdateKernelInfo.build": {
  "lineno": 933,
  "symbols_in_volume": [
   "pycuda.compiler.SourceModule"
  ],
  "type": "function"
 },
 "compyle.cuda._GeneratedScanKernelInfo": {
  "lineno": 885,
  "symbols_in_volume": [
   "pytools.Record"
  ],
  "type": "class"
 },
 "compyle.cuda._GeneratedScanKernelInfo.__init__": {
  "lineno": 894,
  "symbols_in_volume": [
   "pytools.Record.__init__"
  ],
  "type": "function"
 },
 "compyle.cuda._GeneratedScanKernelInfo.build": {
  "lineno": 903,
  "symbols_in_volume": [
   "pycuda.compiler.SourceModule"
  ],
  "type": "function"
 },
 "compyle.cuda._GenericScanKernelBase": {
  "lineno": 958,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.cuda._GenericScanKernelBase.__init__": {
  "lineno": 961,
  "symbols_in_volume": [
   "numpy",
   "numpy.dtype",
   "numpy.iinfo",
   "numpy.int32",
   "pycuda.characterize.has_double_support",
   "pycuda.tools.VectorArg",
   "pycuda.tools.dtype_to_ctype",
   "warnings.warn"
  ],
  "type": "function"
 },
 "compyle.cuda._NumpyTypesKeyBuilder": {
  "lineno": 79,
  "symbols_in_volume": [
   "pytools.persistent_dict.KeyBuilder"
  ],
  "type": "class"
 },
 "compyle.cuda._NumpyTypesKeyBuilder.update_for_type": {
  "lineno": 80,
  "symbols_in_volume": [
   "numpy.generic"
  ],
  "type": "function"
 },
 "compyle.cuda._make_template": {
  "lineno": 856,
  "symbols_in_volume": [
   "pycuda._mymako.template.Template",
   "re.sub",
   "warnings.warn"
  ],
  "type": "function"
 },
 "compyle.cuda._make_template.replace_id": {
  "lineno": 859,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.cuda._process_code_for_macro": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.cuda._round_down_to_power_of_2": {
  "lineno": 765,
  "symbols_in_volume": [
   "pycuda.tools.bitlog2"
  ],
  "type": "function"
 },
 "compyle.cuda.get_arg_list_scalar_arg_dtypes": {
  "lineno": 57,
  "symbols_in_volume": [
   "pycuda.tools.ScalarArg",
   "pycuda.tools.VectorArg"
  ],
  "type": "function"
 },
 "compyle.cuda.parse_arg_list": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.cuda.parse_arg_list.parse_single_arg": {
  "lineno": 47,
  "symbols_in_volume": [
   "pycuda.tools.parse_c_arg"
  ],
  "type": "function"
 },
 "compyle.cuda.set_context": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.cython_generator": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "compyle.cython_generator.CodeGenerationError": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.cython_generator.CythonClassHelper": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.cython_generator.CythonClassHelper.__init__": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.cython_generator.CythonClassHelper.generate": {
  "lineno": 61,
  "symbols_in_volume": [
   "mako.template.Template",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.cython_generator.CythonGenerator.__init__": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator._analyze_method": {
  "lineno": 244,
  "symbols_in_volume": [
   "inspect",
   "inspect.getargspec",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator._get_c_method_spec": {
  "lineno": 298,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator._get_method_body": {
  "lineno": 343,
  "symbols_in_volume": [
   "inspect",
   "inspect.getargspec",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator._get_method_wrapper": {
  "lineno": 362,
  "symbols_in_volume": [
   "inspect.getsourcelines"
  ],
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator._get_methods": {
  "lineno": 326,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator._get_public_vars": {
  "lineno": 376,
  "symbols_in_volume": [
   "ordereddict.OrderedDict"
  ],
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator._get_py_method_spec": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator._handle_declare_statement": {
  "lineno": 421,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator._handle_declare_statement.matrix": {
  "lineno": 422,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator._parse_function": {
  "lineno": 441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator._parse_instance": {
  "lineno": 449,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator._process_body_line": {
  "lineno": 458,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator.ctype_to_python": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator.detect_type": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator.get_code": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator.get_func_signature": {
  "lineno": 201,
  "symbols_in_volume": [
   "inspect.getsourcelines"
  ],
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator.parse": {
  "lineno": 192,
  "symbols_in_volume": [
   "types.FunctionType"
  ],
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator.set_make_python_methods": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.cython_generator.all_numeric": {
  "lineno": 98,
  "symbols_in_volume": [
   "types"
  ],
  "type": "function"
 },
 "compyle.cython_generator.get_func_definition": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.cython_generator.get_parallel_range": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.cython_generator.parse_declare": {
  "lineno": 112,
  "symbols_in_volume": [
   "ast.Str",
   "ast.parse"
  ],
  "type": "function"
 },
 "compyle.ext_module": {
  "lineno": null,
  "symbols_in_volume": [
   "mpi4py.MPI",
   "sys.platform"
  ],
  "type": "module"
 },
 "compyle.ext_module.ExtModule": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.ext_module.ExtModule.__init__": {
  "lineno": 54,
  "symbols_in_volume": [
   "mpi4py.MPI",
   "mpi4py.MPI.COMM_WORLD",
   "mpi4py.MPI.Is_initialized"
  ],
  "type": "function"
 },
 "compyle.ext_module.ExtModule._create_source": {
  "lineno": 144,
  "symbols_in_volume": [
   "os.path.exists"
  ],
  "type": "function"
 },
 "compyle.ext_module.ExtModule._dependencies_have_changed": {
  "lineno": 184,
  "symbols_in_volume": [
   "importlib.import_module",
   "os.stat"
  ],
  "type": "function"
 },
 "compyle.ext_module.ExtModule._get_extra_args": {
  "lineno": 270,
  "symbols_in_volume": [
   "sys.platform"
  ],
  "type": "function"
 },
 "compyle.ext_module.ExtModule._lock": {
  "lineno": 115,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "os.rmdir",
   "time.sleep",
   "time.time"
  ],
  "type": "function"
 },
 "compyle.ext_module.ExtModule._lock._is_timed_out": {
  "lineno": 119,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "compyle.ext_module.ExtModule._lock._try_to_lock": {
  "lineno": 125,
  "symbols_in_volume": [
   "os.mkdir",
   "os.path.exists"
  ],
  "type": "function"
 },
 "compyle.ext_module.ExtModule._message": {
  "lineno": 280,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.ext_module.ExtModule._setup_filenames": {
  "lineno": 109,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "compyle.ext_module.ExtModule._setup_root": {
  "lineno": 167,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.expanduser",
   "os.path.isdir",
   "os.path.join"
  ],
  "type": "function"
 },
 "compyle.ext_module.ExtModule._write_source": {
  "lineno": 162,
  "symbols_in_volume": [
   "os.path.exists"
  ],
  "type": "function"
 },
 "compyle.ext_module.ExtModule.build": {
  "lineno": 208,
  "symbols_in_volume": [
   "distutils.errors.CompileError",
   "distutils.errors.LinkError",
   "distutils.extension.Extension",
   "mpi4py.MPI",
   "mpi4py.MPI.Is_initialized",
   "numpy.get_include",
   "pyximport.pyxbuild.pyx_to_dll",
   "shutil.copy",
   "sys.exit",
   "sys.stdout"
  ],
  "type": "function"
 },
 "compyle.ext_module.ExtModule.load": {
  "lineno": 261,
  "symbols_in_volume": [
   "imp.find_module",
   "imp.load_module",
   "os.path.dirname"
  ],
  "type": "function"
 },
 "compyle.ext_module.ExtModule.should_recompile": {
  "lineno": 200,
  "symbols_in_volume": [
   "os.path.exists"
  ],
  "type": "function"
 },
 "compyle.ext_module.get_ext_extension": {
  "lineno": 39,
  "symbols_in_volume": [
   "distutils.sysconfig.get_config_vars"
  ],
  "type": "function"
 },
 "compyle.ext_module.get_md5": {
  "lineno": 45,
  "symbols_in_volume": [
   "hashlib.md5"
  ],
  "type": "function"
 },
 "compyle.ext_module.get_platform_dir": {
  "lineno": 33,
  "symbols_in_volume": [
   "distutils.util.get_platform",
   "sys.version"
  ],
  "type": "function"
 },
 "compyle.extern": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "compyle.extern.Extern": {
  "lineno": 1,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.extern.Extern.__call__": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.extern.Extern.code": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.extern.Extern.link": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.extern._printf": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.extern._printf.__call__": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.extern._printf.code": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.extern.get_extern_code": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.jit": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "compyle.jit.AnnotationHelper": {
  "lineno": 70,
  "symbols_in_volume": [
   "ast.NodeVisitor"
  ],
  "type": "class"
 },
 "compyle.jit.AnnotationHelper.__init__": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.jit.AnnotationHelper.annotate": {
  "lineno": 91,
  "symbols_in_volume": [
   "ast.parse",
   "inspect.getsourcelines",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.jit.AnnotationHelper.error": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.jit.AnnotationHelper.get_type": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.jit.AnnotationHelper.visit_Assign": {
  "lineno": 159,
  "symbols_in_volume": [
   "ast.Call",
   "ast.Name",
   "ast.Str",
   "ast.Tuple"
  ],
  "type": "function"
 },
 "compyle.jit.AnnotationHelper.visit_BinOp": {
  "lineno": 179,
  "symbols_in_volume": [
   "ast.Pow"
  ],
  "type": "function"
 },
 "compyle.jit.AnnotationHelper.visit_Call": {
  "lineno": 118,
  "symbols_in_volume": [
   "ast.Name",
   "importlib.import_module",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.jit.AnnotationHelper.visit_Compare": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.jit.AnnotationHelper.visit_Name": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.jit.AnnotationHelper.visit_Num": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.jit.AnnotationHelper.visit_Return": {
  "lineno": 196,
  "symbols_in_volume": [
   "ast.BinOp",
   "ast.Call",
   "ast.Name",
   "ast.Num",
   "ast.Subscript",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.jit.AnnotationHelper.visit_Subscript": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.jit.AnnotationHelper.warn": {
  "lineno": 108,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "compyle.jit.ElementwiseJIT": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.jit.ElementwiseJIT.__call__": {
  "lineno": 256,
  "symbols_in_volume": [
   "pycuda.driver.Event"
  ],
  "type": "function"
 },
 "compyle.jit.ElementwiseJIT.__init__": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.jit.ElementwiseJIT._generate_kernel": {
  "lineno": 239,
  "symbols_in_volume": [
   "pytools.memoize"
  ],
  "type": "function"
 },
 "compyle.jit.ElementwiseJIT._massage_arg": {
  "lineno": 248,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "compyle.jit.ElementwiseJIT.get_type_info_from_args": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.jit.ReductionJIT": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.jit.ReductionJIT.__call__": {
  "lineno": 329,
  "symbols_in_volume": [
   "pycuda.driver.Event"
  ],
  "type": "function"
 },
 "compyle.jit.ReductionJIT.__init__": {
  "lineno": 276,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "compyle.jit.ReductionJIT._generate_kernel": {
  "lineno": 312,
  "symbols_in_volume": [
   "pytools.memoize"
  ],
  "type": "function"
 },
 "compyle.jit.ReductionJIT._massage_arg": {
  "lineno": 321,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "compyle.jit.ReductionJIT.get_type_info_from_args": {
  "lineno": 299,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.jit.ScanJIT": {
  "lineno": 350,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.jit.ScanJIT.__call__": {
  "lineno": 434,
  "symbols_in_volume": [
   "pycuda.driver.Event"
  ],
  "type": "function"
 },
 "compyle.jit.ScanJIT.__init__": {
  "lineno": 351,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "compyle.jit.ScanJIT._generate_kernel": {
  "lineno": 399,
  "symbols_in_volume": [
   "pytools.memoize"
  ],
  "type": "function"
 },
 "compyle.jit.ScanJIT._massage_arg": {
  "lineno": 426,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "compyle.jit.ScanJIT.get_type_info_from_kwargs": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.jit.get_binop_return_type": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.jit.get_ctype_from_arg": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "compyle.jit.getargspec": {
  "lineno": 32,
  "symbols_in_volume": [
   "inspect"
  ],
  "type": "function"
 },
 "compyle.jit.kernel_cache_key_args": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.jit.kernel_cache_key_kwargs": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.low_level": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "compyle.low_level.Cython": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.low_level.Cython.__call__": {
  "lineno": 326,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.low_level.Cython.__init__": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.low_level.Cython._generate": {
  "lineno": 314,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.low_level.Cython._massage_arg": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.low_level.Kernel": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.low_level.Kernel.__call__": {
  "lineno": 243,
  "symbols_in_volume": [
   "numpy.prod"
  ],
  "type": "function"
 },
 "compyle.low_level.Kernel.__init__": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.low_level.Kernel._correct_opencl_address_space": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.low_level.Kernel._generate": {
  "lineno": 189,
  "symbols_in_volume": [
   "pyopencl.kernel_work_group_info.WORK_GROUP_SIZE"
  ],
  "type": "function"
 },
 "compyle.low_level.Kernel._get_args": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.low_level.Kernel._get_func_info": {
  "lineno": 154,
  "symbols_in_volume": [
   "inspect",
   "inspect.getargspec"
  ],
  "type": "function"
 },
 "compyle.low_level.Kernel._get_local_size": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.low_level.Kernel._get_workgroup_size": {
  "lineno": 234,
  "symbols_in_volume": [
   "pycuda.gpuarray.splay"
  ],
  "type": "function"
 },
 "compyle.low_level.Kernel._massage_arg": {
  "lineno": 212,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32"
  ],
  "type": "function"
 },
 "compyle.low_level.Kernel._to_float": {
  "lineno": 151,
  "symbols_in_volume": [
   "re.sub"
  ],
  "type": "function"
 },
 "compyle.low_level.LocalMem": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.low_level.LocalMem.__init__": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.low_level.LocalMem.get": {
  "lineno": 61,
  "symbols_in_volume": [
   "pyopencl.LocalMemory"
  ],
  "type": "function"
 },
 "compyle.low_level._nogil": {
  "lineno": 290,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.low_level._nogil.__call__": {
  "lineno": 296,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.low_level._nogil.code": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.low_level._parallel": {
  "lineno": 280,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.low_level._parallel.__call__": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.low_level._parallel.code": {
  "lineno": 281,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.low_level._prange": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.low_level._prange.__call__": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.low_level._prange.code": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.low_level.local_barrier": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.low_level.splay_cl": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.opencl": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "module"
 },
 "compyle.opencl.DeviceWGSException": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.opencl.SimpleKernel": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.opencl.SimpleKernel.__call__": {
  "lineno": 149,
  "symbols_in_volume": [
   "pyopencl.enqueue_nd_range_kernel"
  ],
  "type": "function"
 },
 "compyle.opencl.SimpleKernel.__call__.unwrap": {
  "lineno": 162,
  "symbols_in_volume": [
   "pyopencl.array.Array"
  ],
  "type": "function"
 },
 "compyle.opencl.SimpleKernel.__init__": {
  "lineno": 100,
  "symbols_in_volume": [
   "pyopencl.Program"
  ],
  "type": "function"
 },
 "compyle.opencl.SimpleKernel._generate": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.opencl.SimpleKernel._massage_arg": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.opencl.SimpleKernel.get_max_wgs": {
  "lineno": 143,
  "symbols_in_volume": [
   "pyopencl.kernel_work_group_info.WORK_GROUP_SIZE"
  ],
  "type": "function"
 },
 "compyle.opencl.get_context": {
  "lineno": 19,
  "symbols_in_volume": [
   "pyopencl.create_some_context"
  ],
  "type": "function"
 },
 "compyle.opencl.get_queue": {
  "lineno": 31,
  "symbols_in_volume": [
   "pyopencl.CommandQueue",
   "pyopencl.command_queue_properties.PROFILING_ENABLE"
  ],
  "type": "function"
 },
 "compyle.opencl.named_profile": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.opencl.named_profile._decorator": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.opencl.named_profile._decorator._profiled_kernel_generator": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.opencl.print_profile": {
  "lineno": 53,
  "symbols_in_volume": [
   "operator.itemgetter"
  ],
  "type": "function"
 },
 "compyle.opencl.profile": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.opencl.profile_kernel": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.opencl.profile_kernel._profile_knl": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.opencl.set_context": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.opencl.set_queue": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.parallel": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "compyle.parallel.Elementwise": {
  "lineno": 508,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.parallel.Elementwise.__call__": {
  "lineno": 519,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.parallel.Elementwise.__getattr__": {
  "lineno": 516,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.parallel.Elementwise.__init__": {
  "lineno": 509,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.parallel.ElementwiseBase": {
  "lineno": 378,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.parallel.ElementwiseBase.__call__": {
  "lineno": 491,
  "symbols_in_volume": [
   "pycuda.driver.Event"
  ],
  "type": "function"
 },
 "compyle.parallel.ElementwiseBase.__init__": {
  "lineno": 379,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.parallel.ElementwiseBase._correct_opencl_address_space": {
  "lineno": 461,
  "symbols_in_volume": [
   "textwrap.wrap"
  ],
  "type": "function"
 },
 "compyle.parallel.ElementwiseBase._correct_opencl_address_space._add_address_space": {
  "lineno": 469,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.parallel.ElementwiseBase._generate": {
  "lineno": 390,
  "symbols_in_volume": [
   "mako.template.Template",
   "pycuda._cluda.CLUDA_PREAMBLE",
   "pycuda.elementwise.ElementwiseKernel",
   "pyopencl._cluda.CLUDA_PREAMBLE",
   "pyopencl.elementwise.ElementwiseKernel"
  ],
  "type": "function"
 },
 "compyle.parallel.ElementwiseBase._massage_arg": {
  "lineno": 485,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.parallel.Reduction": {
  "lineno": 729,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.parallel.Reduction.__call__": {
  "lineno": 747,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.parallel.Reduction.__getattr__": {
  "lineno": 744,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.parallel.Reduction.__init__": {
  "lineno": 730,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "compyle.parallel.ReductionBase": {
  "lineno": 533,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.parallel.ReductionBase.__call__": {
  "lineno": 710,
  "symbols_in_volume": [
   "pycuda.driver.Event"
  ],
  "type": "function"
 },
 "compyle.parallel.ReductionBase.__init__": {
  "lineno": 534,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "compyle.parallel.ReductionBase._add_address_space": {
  "lineno": 679,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.parallel.ReductionBase._correct_opencl_address_space": {
  "lineno": 685,
  "symbols_in_volume": [
   "textwrap.wrap"
  ],
  "type": "function"
 },
 "compyle.parallel.ReductionBase._correct_return_type": {
  "lineno": 667,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.parallel.ReductionBase._generate": {
  "lineno": 558,
  "symbols_in_volume": [
   "mako.template.Template",
   "pycuda._cluda.CLUDA_PREAMBLE",
   "pycuda.reduction.ReductionKernel",
   "pyopencl._cluda.CLUDA_PREAMBLE",
   "pyopencl.reduction.ReductionKernel"
  ],
  "type": "function"
 },
 "compyle.parallel.ReductionBase._massage_arg": {
  "lineno": 704,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.parallel.Scan": {
  "lineno": 1078,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.parallel.Scan.__call__": {
  "lineno": 1108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.parallel.Scan.__getattr__": {
  "lineno": 1105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.parallel.Scan.__init__": {
  "lineno": 1079,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "compyle.parallel.ScanBase": {
  "lineno": 751,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.parallel.ScanBase.__call__": {
  "lineno": 1060,
  "symbols_in_volume": [
   "pycuda.driver.Event"
  ],
  "type": "function"
 },
 "compyle.parallel.ScanBase.__init__": {
  "lineno": 752,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "compyle.parallel.ScanBase._add_address_space": {
  "lineno": 1028,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.parallel.ScanBase._append_cython_arg_data": {
  "lineno": 853,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.parallel.ScanBase._correct_opencl_address_space": {
  "lineno": 1034,
  "symbols_in_volume": [
   "textwrap.wrap"
  ],
  "type": "function"
 },
 "compyle.parallel.ScanBase._correct_return_type": {
  "lineno": 781,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.parallel.ScanBase._default_cython_input_function": {
  "lineno": 827,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.parallel.ScanBase._generate": {
  "lineno": 819,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.parallel.ScanBase._generate_cuda_kernel": {
  "lineno": 1010,
  "symbols_in_volume": [
   "pyopencl.scan.GenericScanKernel"
  ],
  "type": "function"
 },
 "compyle.parallel.ScanBase._generate_cython_code": {
  "lineno": 862,
  "symbols_in_volume": [
   "mako.template.Template"
  ],
  "type": "function"
 },
 "compyle.parallel.ScanBase._generate_opencl_kernel": {
  "lineno": 989,
  "symbols_in_volume": [
   "pyopencl.scan.GenericScanKernel"
  ],
  "type": "function"
 },
 "compyle.parallel.ScanBase._get_opencl_cuda_code": {
  "lineno": 964,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.parallel.ScanBase._get_scan_expr_opencl_cuda": {
  "lineno": 958,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.parallel.ScanBase._ignore_arg": {
  "lineno": 805,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.parallel.ScanBase._include_last_item": {
  "lineno": 799,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.parallel.ScanBase._include_prev_item": {
  "lineno": 793,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.parallel.ScanBase._massage_arg": {
  "lineno": 1054,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.parallel.ScanBase._num_ignore_args": {
  "lineno": 810,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.parallel.ScanBase._wrap_cython_code": {
  "lineno": 835,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.parallel.ScanBase._wrap_ocl_function": {
  "lineno": 929,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.parallel.drop_duplicates": {
  "lineno": 370,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.parallel.elementwise": {
  "lineno": 523,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.parallel.elementwise._wrapper": {
  "lineno": 524,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "compyle.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "compyle.tests.py3_code": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "compyle.tests.py3_code.py3_f": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_array": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "module"
 },
 "compyle.tests.test_array.check_import": {
  "lineno": 19,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "compyle.tests.test_array.make_dev_array": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.int32"
  ],
  "type": "function"
 },
 "compyle.tests.test_array.test_align": {
  "lineno": 158,
  "symbols_in_volume": [
   "compyle.array.arange",
   "numpy.all",
   "numpy.int32"
  ],
  "type": "function"
 },
 "compyle.tests.test_array.test_append_with_reallocation": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_array.test_append_without_reallocation": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_array.test_copy": {
  "lineno": 74,
  "symbols_in_volume": [
   "numpy.all"
  ],
  "type": "function"
 },
 "compyle.tests.test_array.test_copy_values": {
  "lineno": 192,
  "symbols_in_volume": [
   "compyle.array.arange",
   "compyle.array.empty",
   "numpy.all",
   "numpy.int32"
  ],
  "type": "function"
 },
 "compyle.tests.test_array.test_extend": {
  "lineno": 123,
  "symbols_in_volume": [
   "compyle.array.zeros",
   "numpy.all",
   "numpy.int32"
  ],
  "type": "function"
 },
 "compyle.tests.test_array.test_min_max": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_array.test_remove": {
  "lineno": 140,
  "symbols_in_volume": [
   "compyle.array.arange",
   "numpy.all",
   "numpy.int32"
  ],
  "type": "function"
 },
 "compyle.tests.test_array.test_reserve": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_array.test_resize_with_reallocation": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_array.test_resize_without_reallocation": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_array.test_squeeze": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_ast_utils": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "compyle.tests.test_ast_utils.TestASTUtils": {
  "lineno": 13,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "compyle.tests.test_ast_utils.TestASTUtils.test_assigned_tuple_expansion": {
  "lineno": 73,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_ast_utils.TestASTUtils.test_assigned_values": {
  "lineno": 61,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_ast_utils.TestASTUtils.test_get_symbols": {
  "lineno": 14,
  "symbols_in_volume": [
   "ast.Store",
   "ast.parse",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_ast_utils.TestASTUtils.test_get_unknown_names_and_calls": {
  "lineno": 82,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_ast_utils.TestASTUtils.test_get_unknown_names_and_calls_with_py3_annotation": {
  "lineno": 101,
  "symbols_in_volume": [
   "sys.version_info",
   "textwrap.dedent",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "compyle.tests.test_ast_utils.TestASTUtils.test_has_node": {
  "lineno": 50,
  "symbols_in_volume": [
   "ast.AugAssign",
   "ast.FunctionDef",
   "ast.Return",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_ast_utils.TestASTUtils.test_has_return": {
  "lineno": 34,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_capture_stream": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "compyle.tests.test_capture_stream.TestCaptureMultipleStreams": {
  "lineno": 51,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "compyle.tests.test_capture_stream.TestCaptureMultipleStreams.test_that_order_is_preserved": {
  "lineno": 63,
  "symbols_in_volume": [
   "sys.stderr",
   "sys.stdout"
  ],
  "type": "function"
 },
 "compyle.tests.test_capture_stream.TestCaptureMultipleStreams.test_that_stdout_stderr_are_captured_by_default": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_capture_stream.TestCaptureStream": {
  "lineno": 22,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "compyle.tests.test_capture_stream.TestCaptureStream.test_that_output_is_available_in_context_and_outside": {
  "lineno": 39,
  "symbols_in_volume": [
   "sys.stderr"
  ],
  "type": "function"
 },
 "compyle.tests.test_capture_stream.TestCaptureStream.test_that_stderr_is_captured_by_default": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_capture_stream.TestCaptureStream.test_that_stdout_can_be_captured": {
  "lineno": 31,
  "symbols_in_volume": [
   "sys.stdout"
  ],
  "type": "function"
 },
 "compyle.tests.test_capture_stream.write_stderr": {
  "lineno": 8,
  "symbols_in_volume": [
   "subprocess.call",
   "sys.executable"
  ],
  "type": "function"
 },
 "compyle.tests.test_capture_stream.write_stdout": {
  "lineno": 15,
  "symbols_in_volume": [
   "subprocess.call",
   "sys.executable"
  ],
  "type": "function"
 },
 "compyle.tests.test_config": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "compyle.tests.test_config.ConfigTestCase": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "compyle.tests.test_config.ConfigTestCase.setUp": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_config.ConfigTestCase.tearDown": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_config.ConfigTestCase.test_default_global_config_is_really_global": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_config.ConfigTestCase.test_set_get_omp_schedule_config": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_config.ConfigTestCase.test_set_get_use_double_config": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_config.ConfigTestCase.test_set_get_use_opencl_config": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_config.ConfigTestCase.test_set_get_use_openmp_config": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_config.ConfigTestCase.test_set_global": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_config.ConfigTestCase.test_set_omp_schedule_config_exception": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_config.ConfigTestCase.test_set_string_omp_schedule": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_config.ConfigTestCase.test_use_config": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_config.ConfigTestCase.test_use_double_config_default": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_config.ConfigTestCase.test_use_opencl_config_default": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_config.ConfigTestCase.test_use_openmp_config_default": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_cython_generator": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "compyle.tests.test_cython_generator.BasicEq": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.tests.test_cython_generator.BasicEq.__init__": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_cython_generator.EqWithDeclare": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.tests.test_cython_generator.EqWithDeclare.func": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_cython_generator.EqWithKnownTypes": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.tests.test_cython_generator.EqWithKnownTypes.some_func": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_cython_generator.EqWithMatrix": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.tests.test_cython_generator.EqWithMatrix.func": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_cython_generator.EqWithMethod": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.tests.test_cython_generator.EqWithMethod.func": {
  "lineno": 23,
  "symbols_in_volume": [
   "math.pi",
   "math.sin"
  ],
  "type": "function"
 },
 "compyle.tests.test_cython_generator.EqWithReturn": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.tests.test_cython_generator.EqWithReturn.func": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestBase": {
  "lineno": 70,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "compyle.tests.test_cython_generator.TestBase.assert_code_equal": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestCythonCodeGenerator": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.tests.test_cython_generator.TestCythonCodeGenerator.setUp": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestCythonCodeGenerator.tearDown": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestCythonCodeGenerator.test_func_signature": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestCythonCodeGenerator.test_func_signature.f": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestCythonCodeGenerator.test_function_with_annotation": {
  "lineno": 163,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestCythonCodeGenerator.test_honors_use_openmp_setting": {
  "lineno": 212,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestCythonCodeGenerator.test_method_with_declare": {
  "lineno": 319,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestCythonCodeGenerator.test_method_with_known_types": {
  "lineno": 337,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestCythonCodeGenerator.test_method_with_matrix": {
  "lineno": 302,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestCythonCodeGenerator.test_method_with_return": {
  "lineno": 285,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestCythonCodeGenerator.test_python3_annotation": {
  "lineno": 177,
  "symbols_in_volume": [
   "sys.version_info",
   "textwrap.dedent",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestCythonCodeGenerator.test_python_methods": {
  "lineno": 234,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestCythonCodeGenerator.test_simple_constructor": {
  "lineno": 134,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestCythonCodeGenerator.test_simple_method": {
  "lineno": 193,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestCythonCodeGenerator.test_wrap_function": {
  "lineno": 356,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestMiscUtils": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.tests.test_cython_generator.TestMiscUtils.test_all_numeric": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestMiscUtils.test_cython_class_helper": {
  "lineno": 108,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestMiscUtils.test_detect_type": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_cython_generator.annotated_f": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_cython_generator.func_with_return": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_cython_generator.simple_func": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_ext_module": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "compyle.tests.test_ext_module.TestExtModule": {
  "lineno": 58,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "compyle.tests.test_ext_module.TestExtModule._add_root_to_sys_path": {
  "lineno": 118,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "sys.path",
   "sys.path.insert",
   "sys.path.remove"
  ],
  "type": "function"
 },
 "compyle.tests.test_ext_module.TestExtModule._create_dummy_module": {
  "lineno": 110,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "compyle.tests.test_ext_module.TestExtModule.setUp": {
  "lineno": 59,
  "symbols_in_volume": [
   "tempfile.mkdtemp",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_ext_module.TestExtModule.tearDown": {
  "lineno": 66,
  "symbols_in_volume": [
   "shutil.rmtree",
   "sys.platform.startswith"
  ],
  "type": "function"
 },
 "compyle.tests.test_ext_module.TestExtModule.test_constructor": {
  "lineno": 75,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.join"
  ],
  "type": "function"
 },
 "compyle.tests.test_ext_module.TestExtModule.test_default_root": {
  "lineno": 91,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.join",
   "os.unlink"
  ],
  "type": "function"
 },
 "compyle.tests.test_ext_module.TestExtModule.test_load_module": {
  "lineno": 103,
  "symbols_in_volume": [
   "os.path.exists"
  ],
  "type": "function"
 },
 "compyle.tests.test_ext_module.TestExtModule.test_rebuild_when_dependencies_change": {
  "lineno": 128,
  "symbols_in_volume": [
   "os.stat",
   "os.utime"
  ],
  "type": "function"
 },
 "compyle.tests.test_ext_module.TestExtModule.test_that_multiple_compiles_do_not_occur_for_same_source": {
  "lineno": 172,
  "symbols_in_volume": [
   "multiprocessing.Pool"
  ],
  "type": "function"
 },
 "compyle.tests.test_ext_module.TestExtModule.test_that_multiple_writes_do_not_occur_for_same_source": {
  "lineno": 155,
  "symbols_in_volume": [
   "multiprocessing.Pool"
  ],
  "type": "function"
 },
 "compyle.tests.test_ext_module.TestMiscExtMod": {
  "lineno": 49,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "compyle.tests.test_ext_module.TestMiscExtMod.test_md5": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_ext_module._check_compile": {
  "lineno": 39,
  "symbols_in_volume": [
   "shutil.copy",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "compyle.tests.test_ext_module._check_write_source": {
  "lineno": 20,
  "symbols_in_volume": [
   "unittest.mock.mock_open",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "compyle.tests.test_ext_module._check_write_source._side_effect": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "compyle.tests.test_jit.TestAnnotationHelper": {
  "lineno": 24,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_binop_as_call_arg": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_binop_as_call_arg.f": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_binop_in_return": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_binop_in_return.f": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_binop_return_type": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_binop_return_type.f": {
  "lineno": 308,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_binop_with_call_as_call_arg": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_binop_with_call_as_call_arg.f": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_binop_with_call_in_return": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_binop_with_call_in_return.f": {
  "lineno": 264,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_call_as_call_arg": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_call_as_call_arg.f": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_call_in_return": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_call_in_return.f": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_compare_as_call_arg": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_compare_as_call_arg.f": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_const_as_call_arg": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_const_as_call_arg.double_f": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_const_as_call_arg.int_f": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_const_as_call_arg.long_f": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_const_in_return": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_const_in_return.double_f": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_const_in_return.int_f": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_const_in_return.long_f": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_multi_level_call_in_return": {
  "lineno": 276,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_multi_level_call_in_return.f": {
  "lineno": 278,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_non_jit_call_as_call_arg": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_non_jit_call_as_call_arg.f": {
  "lineno": 153,
  "symbols_in_volume": [
   "math.sin"
  ],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_non_jit_call_in_return": {
  "lineno": 292,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_non_jit_call_in_return.f": {
  "lineno": 294,
  "symbols_in_volume": [
   "math.sin"
  ],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_subscript_as_call_arg": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_subscript_as_call_arg.f": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_subscript_in_return": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_subscript_in_return.f": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_variable_as_call_arg": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_variable_as_call_arg.f": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_variable_in_return": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_variable_in_return.f": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.g": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_jit.h": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_low_level": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "compyle.tests.test_low_level.TestCython": {
  "lineno": 150,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "compyle.tests.test_low_level.TestCython.test_cython_code_with_return_and_nested_call": {
  "lineno": 151,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.sum"
  ],
  "type": "function"
 },
 "compyle.tests.test_low_level.TestCython.test_cython_with_externs": {
  "lineno": 165,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.linspace",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "compyle.tests.test_low_level.TestKernel": {
  "lineno": 15,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "compyle.tests.test_low_level.TestKernel.test_kernel_with_local_memory_cuda": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.linspace",
   "numpy.zeros_like",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "compyle.tests.test_low_level.TestKernel.test_kernel_with_local_memory_cuda.knl": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_low_level.TestKernel.test_kernel_with_local_memory_opencl": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.linspace",
   "numpy.zeros_like",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "compyle.tests.test_low_level.TestKernel.test_kernel_with_local_memory_opencl.knl": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_low_level.TestKernel.test_simple_kernel_cuda": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.linspace",
   "numpy.zeros_like",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "compyle.tests.test_low_level.TestKernel.test_simple_kernel_cuda.knl": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_low_level.TestKernel.test_simple_kernel_opencl": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.linspace",
   "numpy.zeros_like",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "compyle.tests.test_low_level.TestKernel.test_simple_kernel_opencl.knl": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_low_level.cy_extern": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_low_level.func": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_low_level.knl": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase._get_segmented_scan_actual": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_elementwise_works_with_cuda": {
  "lineno": 28,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_elementwise_works_with_cython": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_elementwise_works_with_opencl": {
  "lineno": 23,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_reduction_works_neutral_cuda": {
  "lineno": 73,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_reduction_works_neutral_cython": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_reduction_works_neutral_opencl": {
  "lineno": 57,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_reduction_works_with_external_func_cuda": {
  "lineno": 69,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_reduction_works_with_external_func_cython": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_reduction_works_with_external_func_opencl": {
  "lineno": 53,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_reduction_works_with_map_cuda": {
  "lineno": 65,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_reduction_works_with_map_cython": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_reduction_works_with_map_opencl": {
  "lineno": 49,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_reduction_works_without_map_cuda": {
  "lineno": 61,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_reduction_works_without_map_cython": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_reduction_works_without_map_opencl": {
  "lineno": 45,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_scan_last_item_cuda": {
  "lineno": 154,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_scan_last_item_cython_parallel": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_scan_last_item_opencl": {
  "lineno": 150,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_scan_works_cuda": {
  "lineno": 88,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_scan_works_cython": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_scan_works_cython_parallel": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_scan_works_opencl": {
  "lineno": 84,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_scan_works_with_external_func_cuda": {
  "lineno": 103,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_scan_works_with_external_func_cython": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_scan_works_with_external_func_cython_parallel": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_scan_works_with_external_func_opencl": {
  "lineno": 99,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_segmented_scan_cuda": {
  "lineno": 142,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_segmented_scan_cython": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_segmented_scan_cython_parallel": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_segmented_scan_opencl": {
  "lineno": 138,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_unique_scan_cuda": {
  "lineno": 118,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_unique_scan_cython": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_unique_scan_cython_parallel": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_unique_scan_opencl": {
  "lineno": 114,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils": {
  "lineno": 159,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "compyle.tests.test_parallel.TestParallelUtils._check_reduction_min": {
  "lineno": 199,
  "symbols_in_volume": [
   "numpy.linspace"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._check_reduction_with_external_func": {
  "lineno": 228,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int32"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._check_reduction_with_external_func.map": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._check_reduction_with_map": {
  "lineno": 210,
  "symbols_in_volume": [
   "numpy.linspace"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._check_reduction_with_map.map": {
  "lineno": 217,
  "symbols_in_volume": [
   "math.cos",
   "math.sin"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._check_simple_elementwise": {
  "lineno": 168,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.linspace",
   "numpy.sin",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._check_simple_elementwise.axpb": {
  "lineno": 170,
  "symbols_in_volume": [
   "math.sin"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._check_simple_reduction": {
  "lineno": 188,
  "symbols_in_volume": [
   "numpy.linspace"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._test_scan": {
  "lineno": 244,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.cumsum",
   "numpy.int32",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._test_scan.input_f": {
  "lineno": 252,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._test_scan.output_f": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._test_scan_last_item": {
  "lineno": 377,
  "symbols_in_volume": [
   "numpy.cumsum",
   "numpy.int32",
   "numpy.random.randint",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._test_scan_last_item.output_f": {
  "lineno": 384,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._test_scan_with_external_func": {
  "lineno": 271,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.cumsum",
   "numpy.int32",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._test_scan_with_external_func.input_f": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._test_scan_with_external_func.output_f": {
  "lineno": 283,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._test_segmented_scan": {
  "lineno": 342,
  "symbols_in_volume": [
   "numpy.int32",
   "numpy.random.randint",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._test_segmented_scan.input_f": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._test_segmented_scan.output_f": {
  "lineno": 362,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._test_segmented_scan.segment_f": {
  "lineno": 358,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._test_unique_scan": {
  "lineno": 298,
  "symbols_in_volume": [
   "numpy.int32",
   "numpy.random.randint",
   "numpy.sort",
   "numpy.testing.assert_equal",
   "numpy.unique",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._test_unique_scan.input_f": {
  "lineno": 315,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._test_unique_scan.output_f": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils.setUp": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils.tearDown": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT": {
  "lineno": 400,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._check_reduction_min": {
  "lineno": 440,
  "symbols_in_volume": [
   "numpy.linspace"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._check_reduction_with_external_func": {
  "lineno": 471,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int32"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._check_reduction_with_external_func.map": {
  "lineno": 476,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._check_reduction_with_map": {
  "lineno": 451,
  "symbols_in_volume": [
   "numpy.linspace"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._check_reduction_with_map.map": {
  "lineno": 458,
  "symbols_in_volume": [
   "math.cos",
   "math.sin"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._check_simple_elementwise": {
  "lineno": 409,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.linspace",
   "numpy.sin",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._check_simple_elementwise.axpb": {
  "lineno": 411,
  "symbols_in_volume": [
   "math.sin"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._check_simple_reduction": {
  "lineno": 429,
  "symbols_in_volume": [
   "numpy.linspace"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._test_scan": {
  "lineno": 487,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.cumsum",
   "numpy.int32",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._test_scan.input_f": {
  "lineno": 495,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._test_scan.output_f": {
  "lineno": 499,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._test_scan_last_item": {
  "lineno": 619,
  "symbols_in_volume": [
   "numpy.cumsum",
   "numpy.int32",
   "numpy.random.randint",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._test_scan_last_item.output_f": {
  "lineno": 626,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._test_scan_with_external_func": {
  "lineno": 514,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.cumsum",
   "numpy.int32",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._test_scan_with_external_func.input_f": {
  "lineno": 522,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._test_scan_with_external_func.output_f": {
  "lineno": 526,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._test_segmented_scan": {
  "lineno": 584,
  "symbols_in_volume": [
   "numpy.int32",
   "numpy.random.randint",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._test_segmented_scan.input_f": {
  "lineno": 596,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._test_segmented_scan.output_f": {
  "lineno": 604,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._test_segmented_scan.segment_f": {
  "lineno": 600,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._test_unique_scan": {
  "lineno": 541,
  "symbols_in_volume": [
   "numpy.int32",
   "numpy.random.randint",
   "numpy.sort",
   "numpy.testing.assert_equal",
   "numpy.unique",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._test_unique_scan.input_f": {
  "lineno": 558,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._test_unique_scan.output_f": {
  "lineno": 565,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT.setUp": {
  "lineno": 401,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT.tearDown": {
  "lineno": 406,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_parallel.external": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_translator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "compyle.tests.test_translator.annotated_f": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_translator.check_opencl_cuda_conversion": {
  "lineno": 1167,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_annotated_function": {
  "lineno": 384,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_attribute_access": {
  "lineno": 882,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_bool_true_false_and_none": {
  "lineno": 547,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_c_struct_helper": {
  "lineno": 1033,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_c_struct_helper.Fruit": {
  "lineno": 1035,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.tests.test_translator.test_c_struct_helper_empty_object": {
  "lineno": 1070,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_c_struct_helper_empty_object.Fruit": {
  "lineno": 1072,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.tests.test_translator.test_calling_function": {
  "lineno": 219,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_calling_method_of_known_type": {
  "lineno": 419,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_calling_method_of_known_type_in_method": {
  "lineno": 438,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_calling_printf_with_string": {
  "lineno": 235,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_class": {
  "lineno": 988,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_conditionals": {
  "lineno": 93,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_cuda_conversion": {
  "lineno": 1191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_translator.test_cuda_local_conversion": {
  "lineno": 1220,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_cuda_local_conversion.knl": {
  "lineno": 1221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_translator.test_declare_call_declares_multiple_variables": {
  "lineno": 968,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_declare_call_declares_variable": {
  "lineno": 900,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_declare_matrix": {
  "lineno": 918,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_for": {
  "lineno": 579,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_for_not_range_and_else_fails": {
  "lineno": 820,
  "symbols_in_volume": [
   "pytest.raises",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_for_with_break_continue": {
  "lineno": 791,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_for_with_declare": {
  "lineno": 651,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_for_with_decreasing_range": {
  "lineno": 632,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_for_with_symbols": {
  "lineno": 697,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_function_argument_types": {
  "lineno": 342,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_handles_parsing_functions": {
  "lineno": 1256,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_handles_parsing_functions.A": {
  "lineno": 1275,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.tests.test_translator.test_handles_parsing_functions.A.f": {
  "lineno": 1276,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_translator.test_handles_parsing_functions.f": {
  "lineno": 1258,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_translator.test_if_block": {
  "lineno": 58,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_known_math_constants": {
  "lineno": 268,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_known_types_in_funcargs": {
  "lineno": 363,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_multiple_assignment_expressions": {
  "lineno": 38,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_multiple_boolops": {
  "lineno": 170,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_nested_for_with_symbols": {
  "lineno": 736,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_only_two_operands_supported_for_comparisons": {
  "lineno": 207,
  "symbols_in_volume": [
   "pytest.raises",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_opencl_class": {
  "lineno": 1199,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_opencl_conversion": {
  "lineno": 1195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_translator.test_power": {
  "lineno": 190,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_py3_annotations": {
  "lineno": 400,
  "symbols_in_volume": [
   "pytest.mark.skipif",
   "sys.version_info",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_raises_error_when_unknown_args_are_given": {
  "lineno": 469,
  "symbols_in_volume": [
   "pytest.raises",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_simple_assignment_expression": {
  "lineno": 20,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_simple_function_with_return": {
  "lineno": 295,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_simple_function_without_return": {
  "lineno": 319,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_subscript": {
  "lineno": 251,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_ternary_operator": {
  "lineno": 150,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_try_block_raises_error": {
  "lineno": 868,
  "symbols_in_volume": [
   "pytest.raises",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_two_fors": {
  "lineno": 672,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_unsupported_method": {
  "lineno": 1022,
  "symbols_in_volume": [
   "pytest.raises",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_user_supplied_detect_type": {
  "lineno": 503,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_user_supplied_detect_type.dt": {
  "lineno": 511,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_translator.test_while": {
  "lineno": 525,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_while_else_raises_error": {
  "lineno": 854,
  "symbols_in_volume": [
   "pytest.raises",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_wrapping_class": {
  "lineno": 1092,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.zeros",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_wrapping_class.Dummy": {
  "lineno": 1094,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.tests.test_translator.test_wrapping_class.Dummy.__init__": {
  "lineno": 1096,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_translator.test_wrapping_class.Dummy.method": {
  "lineno": 1103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_translator.test_wrapping_class_with_ignore_methods": {
  "lineno": 1138,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.tests.test_translator.test_wrapping_class_with_ignore_methods.Dummy1": {
  "lineno": 1140,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.tests.test_translator.test_wrapping_class_with_ignore_methods.Dummy1.f": {
  "lineno": 1142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_translator.test_wrapping_class_with_ignore_methods.Dummy1.not_me": {
  "lineno": 1145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_transpiler": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "compyle.tests.test_transpiler.TestTranspiler": {
  "lineno": 40,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "compyle.tests.test_transpiler.TestTranspiler.test_get_external_symbols_and_calls": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_transpiler.TestTranspiler.test_transpiler": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_transpiler.f": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_transpiler.g": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_transpiler.h": {
  "lineno": 12,
  "symbols_in_volume": [
   "math.sin"
  ],
  "type": "function"
 },
 "compyle.tests.test_transpiler.implicit_f": {
  "lineno": 24,
  "symbols_in_volume": [
   "math.sin"
  ],
  "type": "function"
 },
 "compyle.tests.test_transpiler.undefined_call": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_types": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "compyle.tests.test_types.TestAnnotate": {
  "lineno": 54,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "compyle.tests.test_types.TestAnnotate.test_decorator_accepts_known_type_instance": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_types.TestAnnotate.test_decorator_accepts_known_type_instance.f": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_types.TestAnnotate.test_decorator_raises_error_for_unknown_error": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_types.TestAnnotate.test_decorator_raises_error_for_unknown_error.f": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_types.TestAnnotate.test_reversed_annotation": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_types.TestAnnotate.test_reversed_annotation.f": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_types.TestAnnotate.test_simple_annotation": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_types.TestAnnotate.test_simple_annotation.f": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.tests.test_types.TestDeclare": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "compyle.tests.test_types.TestDeclare.test_declare": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "compyle.tests.test_types.TestDeclare.test_declare_with_address_space": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "compyle.tests.test_types.TestDeclare.test_declare_with_type": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.float32",
   "numpy.int32",
   "numpy.uint32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "compyle.translator": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info.major"
  ],
  "type": "module"
 },
 "compyle.translator.CConverter": {
  "lineno": 123,
  "symbols_in_volume": [
   "ast.NodeVisitor"
  ],
  "type": "class"
 },
 "compyle.translator.CConverter.__init__": {
  "lineno": 124,
  "symbols_in_volume": [
   "ast.Load",
   "ast.Store"
  ],
  "type": "function"
 },
 "compyle.translator.CConverter._body_has_return": {
  "lineno": 148,
  "symbols_in_volume": [
   "re.search"
  ],
  "type": "function"
 },
 "compyle.translator.CConverter._check_if_integer": {
  "lineno": 398,
  "symbols_in_volume": [
   "ast.literal_eval"
  ],
  "type": "function"
 },
 "compyle.translator.CConverter._get_function_args": {
  "lineno": 165,
  "symbols_in_volume": [
   "ast.literal_eval"
  ],
  "type": "function"
 },
 "compyle.translator.CConverter._get_local_arg": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter._get_local_declarations": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter._get_return_type": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter._get_self_type": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter._get_variable_declaration": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter._indent_block": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter._remove_docstring": {
  "lineno": 225,
  "symbols_in_volume": [
   "ast.Expr",
   "ast.Str"
  ],
  "type": "function"
 },
 "compyle.translator.CConverter.convert": {
  "lineno": 235,
  "symbols_in_volume": [
   "ast.parse"
  ],
  "type": "function"
 },
 "compyle.translator.CConverter.error": {
  "lineno": 244,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.get_declarations": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.get_struct_from_instance": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.parse": {
  "lineno": 266,
  "symbols_in_volume": [
   "types.FunctionType"
  ],
  "type": "function"
 },
 "compyle.translator.CConverter.parse_function": {
  "lineno": 289,
  "symbols_in_volume": [
   "inspect.getsource",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.translator.CConverter.parse_instance": {
  "lineno": 276,
  "symbols_in_volume": [
   "inspect.getsource",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Add": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_And": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Assign": {
  "lineno": 303,
  "symbols_in_volume": [
   "ast.Call",
   "ast.Name",
   "ast.Str",
   "ast.Tuple"
  ],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Attribute": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_AugAssign": {
  "lineno": 325,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_BinOp": {
  "lineno": 329,
  "symbols_in_volume": [
   "ast.Pow"
  ],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_BoolOp": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Break": {
  "lineno": 343,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Call": {
  "lineno": 346,
  "symbols_in_volume": [
   "ast.Attribute",
   "ast.Name"
  ],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_ClassDef": {
  "lineno": 372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Compare": {
  "lineno": 379,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Continue": {
  "lineno": 386,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Div": {
  "lineno": 389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Eq": {
  "lineno": 392,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Expr": {
  "lineno": 395,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_For": {
  "lineno": 406,
  "symbols_in_volume": [
   "ast.Name",
   "ast.literal_eval",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_FunctionDef": {
  "lineno": 523,
  "symbols_in_volume": [
   "textwrap.wrap"
  ],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Gt": {
  "lineno": 565,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_GtE": {
  "lineno": 568,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_If": {
  "lineno": 571,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_IfExp": {
  "lineno": 586,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Is": {
  "lineno": 594,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_IsNot": {
  "lineno": 597,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Lt": {
  "lineno": 600,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_LtE": {
  "lineno": 603,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Mod": {
  "lineno": 606,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Module": {
  "lineno": 609,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Mult": {
  "lineno": 614,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Name": {
  "lineno": 617,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_NameConstant": {
  "lineno": 626,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Not": {
  "lineno": 633,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_NotEq": {
  "lineno": 636,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Num": {
  "lineno": 639,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Or": {
  "lineno": 642,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Pass": {
  "lineno": 645,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Return": {
  "lineno": 648,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Str": {
  "lineno": 654,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Sub": {
  "lineno": 651,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Subscript": {
  "lineno": 657,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_TryExcept": {
  "lineno": 662,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_USub": {
  "lineno": 670,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_UnaryOp": {
  "lineno": 667,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CConverter.visit_While": {
  "lineno": 673,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CStructHelper": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.translator.CStructHelper.__init__": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CStructHelper._get_public_vars": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CStructHelper.get_array": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.empty",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "types"
  ],
  "type": "function"
 },
 "compyle.translator.CStructHelper.get_code": {
  "lineno": 111,
  "symbols_in_volume": [
   "mako.template.Template",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.translator.CStructHelper.parse": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CUDAConverter": {
  "lineno": 730,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.translator.CUDAConverter.__init__": {
  "lineno": 731,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CUDAConverter._get_local_arg": {
  "lineno": 735,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CUDAConverter._get_local_declarations": {
  "lineno": 759,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CUDAConverter._get_local_info": {
  "lineno": 738,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.CUDAConverter.parse_function": {
  "lineno": 749,
  "symbols_in_volume": [
   "inspect.getsource",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.translator.OpenCLConverter": {
  "lineno": 715,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.translator.OpenCLConverter.__init__": {
  "lineno": 716,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.OpenCLConverter._get_self_type": {
  "lineno": 726,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.detect_type": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.ocl_detect_pointer_base_type": {
  "lineno": 684,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.ocl_detect_type": {
  "lineno": 706,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.translator.py2c": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.transpiler": {
  "lineno": null,
  "symbols_in_volume": [
   "math"
  ],
  "type": "module"
 },
 "compyle.transpiler.CodeBlock": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.transpiler.CodeBlock.__eq__": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.transpiler.CodeBlock.__init__": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.transpiler.Transpiler": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.transpiler.Transpiler.__init__": {
  "lineno": 126,
  "symbols_in_volume": [
   "mako.template.Template",
   "pycuda._cluda.CLUDA_PREAMBLE",
   "pyopencl._cluda.CLUDA_PREAMBLE",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.transpiler.Transpiler._get_comment": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.transpiler.Transpiler._handle_external": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.transpiler.Transpiler._handle_externs": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.transpiler.Transpiler._handle_symbol": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.transpiler.Transpiler._handle_symbols": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.transpiler.Transpiler.add": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.transpiler.Transpiler.add_code": {
  "lineno": 268,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.transpiler.Transpiler.compile": {
  "lineno": 276,
  "symbols_in_volume": [
   "pycuda.compiler.SourceModule",
   "pyopencl.Program"
  ],
  "type": "function"
 },
 "compyle.transpiler.Transpiler.get_code": {
  "lineno": 272,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.transpiler.convert_to_float_if_needed": {
  "lineno": 106,
  "symbols_in_volume": [
   "re.sub"
  ],
  "type": "function"
 },
 "compyle.transpiler.filter_calls": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.transpiler.get_external_symbols_and_calls": {
  "lineno": 44,
  "symbols_in_volume": [
   "importlib.import_module",
   "inspect.getsourcelines",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "compyle.types": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.dtype",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8"
  ],
  "type": "module"
 },
 "compyle.types.KnownType": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.types.KnownType.__eq__": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.types.KnownType.__init__": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.types.KnownType.__repr__": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.types.Undefined": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "class"
 },
 "compyle.types._clean_name": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.types._declare": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "compyle.types._get_type": {
  "lineno": 273,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.types._inject_types_in_module": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.types.annotate": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.types.annotate.wrapper": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.types.ctype_to_dtype": {
  "lineno": 199,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "compyle.types.declare": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "function"
 },
 "compyle.types.dtype_to_ctype": {
  "lineno": 182,
  "symbols_in_volume": [
   "numpy.dtype",
   "pyopencl.compyte.dtypes.dtype_to_ctype"
  ],
  "type": "function"
 },
 "compyle.types.dtype_to_knowntype": {
  "lineno": 203,
  "symbols_in_volume": [
   "pyopencl.compyte.dtypes.dtype_to_ctype"
  ],
  "type": "function"
 },
 "compyle.types.get_declare_info": {
  "lineno": 34,
  "symbols_in_volume": [
   "ast.literal_eval"
  ],
  "type": "function"
 }
}