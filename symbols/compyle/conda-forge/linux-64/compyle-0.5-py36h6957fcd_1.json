{
 "compyle": {
  "data": {},
  "type": "module"
 },
 "compyle.__version__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "compyle.api": {
  "data": {},
  "type": "module"
 },
 "compyle.array": {
  "data": {},
  "type": "module"
 },
 "compyle.array.Array": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compyle.array.Array.__add__": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "compyle.array.Array",
    "compyle.array.wrap_array",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compyle.array.Array.__getitem__": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "compyle.array.wrap_array",
    "isinstance",
    "slice"
   ]
  },
  "type": "function"
 },
 "compyle.array.Array.__init__": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "compyle.array.empty",
    "compyle.array.get_backend",
    "dtype_to_knowntype",
    "set_context"
   ]
  },
  "type": "function"
 },
 "compyle.array.Array.__len__": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "compyle.array.Array.__radd__": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "compyle.array.Array",
    "compyle.array.wrap_array",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compyle.array.Array.__rsub__": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "compyle.array.Array",
    "compyle.array.wrap_array",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compyle.array.Array.__setitem__": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "isinstance",
    "numpy.asarray",
    "numpy.ndarray",
    "slice"
   ]
  },
  "type": "function"
 },
 "compyle.array.Array.__sub__": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "compyle.array.Array",
    "compyle.array.wrap_array",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compyle.array.Array._get_np_data": {
  "data": {
   "lineno": 301
  },
  "type": "function"
 },
 "compyle.array.Array._get_remove_kernels": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "compyle.parallel.Elementwise",
    "compyle.parallel.Scan",
    "numpy.int32",
    "pytools.memoize_method"
   ]
  },
  "type": "function"
 },
 "compyle.array.Array._get_remove_kernels.fill_if_remove": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "annotate"
   ]
  },
  "type": "function"
 },
 "compyle.array.Array._get_remove_kernels.remove_input_expr": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "annotate"
   ]
  },
  "type": "function"
 },
 "compyle.array.Array._get_remove_kernels.remove_output_expr": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "annotate"
   ]
  },
  "type": "function"
 },
 "compyle.array.Array._update_array_ref": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "compyle.array.Array.align": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "compyle.array.take"
   ]
  },
  "type": "function"
 },
 "compyle.array.Array.append": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "compyle.array.Array.copy": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "compyle.array.Array"
   ]
  },
  "type": "function"
 },
 "compyle.array.Array.copy_values": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "TypeError",
    "compyle.array.Array",
    "compyle.array.take",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "compyle.array.Array.extend": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "compyle.array.Array.fill": {
  "data": {
   "lineno": 372
  },
  "type": "function"
 },
 "compyle.array.Array.get": {
  "data": {
   "lineno": 304
  },
  "type": "function"
 },
 "compyle.array.Array.get_array": {
  "data": {
   "lineno": 355
  },
  "type": "function"
 },
 "compyle.array.Array.get_data": {
  "data": {
   "lineno": 358
  },
  "type": "function"
 },
 "compyle.array.Array.pull": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "len",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "compyle.array.Array.push": {
  "data": {
   "lineno": 321
  },
  "type": "function"
 },
 "compyle.array.Array.remove": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "ValueError",
    "compyle.array.Array",
    "fill_if_remove_knl",
    "len",
    "numpy.int32",
    "remove_knl"
   ]
  },
  "type": "function"
 },
 "compyle.array.Array.reserve": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "compyle.array.empty"
   ]
  },
  "type": "function"
 },
 "compyle.array.Array.resize": {
  "data": {
   "lineno": 326
  },
  "type": "function"
 },
 "compyle.array.Array.set": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "pyopencl.array.to_device"
   ]
  },
  "type": "function"
 },
 "compyle.array.Array.set_data": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "compyle.array.Array",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compyle.array.Array.squeeze": {
  "data": {
   "lineno": 442
  },
  "type": "function"
 },
 "compyle.array.Array.update_min_max": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "compyle.array.maximum",
    "compyle.array.minimum"
   ]
  },
  "type": "function"
 },
 "compyle.array.arange": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "compyle.array.wrap_array",
    "get_queue",
    "numpy.arange",
    "pycuda.gpuarray.arange",
    "pyopencl.array.arange"
   ]
  },
  "type": "function"
 },
 "compyle.array.empty": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "compyle.array.wrap_array",
    "get_queue",
    "numpy.empty",
    "pycuda.gpuarray.empty",
    "pyopencl.array.empty"
   ]
  },
  "type": "function"
 },
 "compyle.array.get_backend": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "get_config"
   ]
  },
  "type": "function"
 },
 "compyle.array.gpuarray": {
  "data": {
   "shadows": "pycuda.gpuarray"
  },
  "type": "import"
 },
 "compyle.array.maximum": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "pycuda.gpuarray.max",
    "pyopencl.array.max"
   ]
  },
  "type": "function"
 },
 "compyle.array.memoize_method": {
  "data": {
   "shadows": "pytools.memoize_method"
  },
  "type": "import"
 },
 "compyle.array.minimum": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "pycuda.gpuarray.min",
    "pyopencl.array.min"
   ]
  },
  "type": "function"
 },
 "compyle.array.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "compyle.array.ones": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "compyle.array.wrap_array",
    "get_queue",
    "numpy.array",
    "numpy.ones",
    "pycuda.gpuarray.zeros",
    "pyopencl.array.zeros"
   ]
  },
  "type": "function"
 },
 "compyle.array.ones_like": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "compyle.array.wrap_array",
    "numpy.ones_like",
    "pycuda.gpuarray.ones_like",
    "pyopencl.array.zeros_like"
   ]
  },
  "type": "function"
 },
 "compyle.array.parallel": {
  "data": {
   "shadows": "compyle.parallel"
  },
  "type": "import"
 },
 "compyle.array.sum": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "numpy.sum",
    "pycuda.gpuarray.sum",
    "pyopencl.array.sum"
   ]
  },
  "type": "function"
 },
 "compyle.array.take": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "compyle.array.wrap_array",
    "numpy.take",
    "pycuda.gpuarray.take",
    "pyopencl.array.take"
   ]
  },
  "type": "function"
 },
 "compyle.array.to_device": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "compyle.array.wrap_array",
    "get_queue",
    "pycuda.gpuarray.to_gpu",
    "pyopencl.array.to_device"
   ]
  },
  "type": "function"
 },
 "compyle.array.to_gpu": {
  "data": {
   "shadows": "pycuda.gpuarray.to_gpu"
  },
  "type": "import"
 },
 "compyle.array.wrap": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "compyle.array.get_backend",
    "compyle.array.wrap_array",
    "len"
   ]
  },
  "type": "function"
 },
 "compyle.array.wrap_array": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "compyle.array.Array",
    "get_config",
    "get_queue",
    "isinstance",
    "numpy.float",
    "numpy.float32",
    "numpy.float64",
    "numpy.issubdtype",
    "numpy.ndarray",
    "pycuda.gpuarray.GPUArray",
    "pycuda.gpuarray.to_gpu",
    "pyopencl.array.Array",
    "pyopencl.array.to_device",
    "set_context"
   ]
  },
  "type": "function"
 },
 "compyle.array.zeros": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "compyle.array.wrap_array",
    "get_queue",
    "numpy.zeros",
    "pycuda.gpuarray.zeros",
    "pyopencl.array.zeros"
   ]
  },
  "type": "function"
 },
 "compyle.array.zeros_like": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "compyle.array.wrap_array",
    "numpy.zeros_like",
    "pycuda.gpuarray.zeros_like",
    "pyopencl.array.zeros_like"
   ]
  },
  "type": "function"
 },
 "compyle.ast_utils": {
  "data": {
   "symbols_in_volume": [
    "compyle.ast_utils.sys"
   ]
  },
  "type": "module"
 },
 "compyle.ast_utils.NameLister": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "compyle.ast_utils.ast"
   ]
  },
  "type": "class"
 },
 "compyle.ast_utils.NameLister.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "compyle.ast_utils.ast",
    "set"
   ]
  },
  "type": "function"
 },
 "compyle.ast_utils.NameLister.visit_Name": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compyle.ast_utils.PY_VER": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "compyle.ast_utils.SymbolParser": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "compyle.ast_utils.ast"
   ]
  },
  "type": "class"
 },
 "compyle.ast_utils.SymbolParser.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "compyle.ast_utils.ast",
    "set"
   ]
  },
  "type": "function"
 },
 "compyle.ast_utils.SymbolParser.visit_Assign": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "compyle.ast_utils.ast",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compyle.ast_utils.SymbolParser.visit_AugAssign": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "compyle.ast_utils.ast",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compyle.ast_utils.SymbolParser.visit_Call": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "compyle.ast_utils.ast",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compyle.ast_utils.SymbolParser.visit_FunctionDef": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "compyle.ast_utils.PY_VER"
   ]
  },
  "type": "function"
 },
 "compyle.ast_utils.SymbolParser.visit_Name": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compyle.ast_utils._get_tree": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "compyle.ast_utils.ast",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "compyle.ast_utils.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "compyle.ast_utils.get_assigned": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "compyle.ast_utils.SymbolParser",
    "compyle.ast_utils._get_tree"
   ]
  },
  "type": "function"
 },
 "compyle.ast_utils.get_symbols": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "compyle.ast_utils.NameLister",
    "compyle.ast_utils._get_tree",
    "compyle.ast_utils.ast"
   ]
  },
  "type": "function"
 },
 "compyle.ast_utils.get_unknown_names_and_calls": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "compyle.ast_utils.SymbolParser",
    "compyle.ast_utils.ast",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "compyle.ast_utils.has_node": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "compyle.ast_utils._get_tree",
    "compyle.ast_utils.ast",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compyle.ast_utils.has_return": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "compyle.ast_utils.ast",
    "compyle.ast_utils.has_node"
   ]
  },
  "type": "function"
 },
 "compyle.ast_utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "compyle.capture_stream": {
  "data": {},
  "type": "module"
 },
 "compyle.capture_stream.CaptureMultipleStreams": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compyle.capture_stream.CaptureMultipleStreams.__enter__": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "compyle.capture_stream.CaptureMultipleStreams.__exit__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "compyle.capture_stream.CaptureMultipleStreams.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "compyle.capture_stream.CaptureStream",
    "compyle.capture_stream.sys"
   ]
  },
  "type": "function"
 },
 "compyle.capture_stream.CaptureMultipleStreams.get_output": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "compyle.capture_stream.CaptureStream": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compyle.capture_stream.CaptureStream.__enter__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "compyle.capture_stream.os",
    "open",
    "tempfile.mktemp"
   ]
  },
  "type": "function"
 },
 "compyle.capture_stream.CaptureStream.__exit__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "compyle.capture_stream.os"
   ]
  },
  "type": "function"
 },
 "compyle.capture_stream.CaptureStream.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "compyle.capture_stream.sys"
   ]
  },
  "type": "function"
 },
 "compyle.capture_stream.CaptureStream._cache_output": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "compyle.capture_stream.CaptureStream.get_output": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "compyle.capture_stream.mktemp": {
  "data": {
   "shadows": "tempfile.mktemp"
  },
  "type": "import"
 },
 "compyle.capture_stream.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "compyle.capture_stream.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "compyle.config": {
  "data": {},
  "type": "module"
 },
 "compyle.config.Config": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compyle.config.Config.__init__": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "compyle.config.Config._omp_schedule_default": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "compyle.config.Config._profile_default": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "compyle.config.Config._use_cuda_default": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "compyle.config.Config._use_double_default": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "compyle.config.Config._use_local_memory_default": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "compyle.config.Config._use_opencl_default": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "compyle.config.Config._use_openmp_default": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "compyle.config.Config._wgs_default": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "compyle.config.Config.omp_schedule": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "compyle.config.Config.profile": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "compyle.config.Config.set_omp_schedule": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "compyle.config.Config.use_cuda": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "compyle.config.Config.use_double": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "compyle.config.Config.use_local_memory": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "compyle.config.Config.use_opencl": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "compyle.config.Config.use_openmp": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "compyle.config.Config.wgs": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "compyle.config._config": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "compyle.config.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "compyle.config.get_config": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "compyle.config.Config",
    "compyle.config._config"
   ]
  },
  "type": "function"
 },
 "compyle.config.set_config": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "compyle.config._config"
   ]
  },
  "type": "function"
 },
 "compyle.config.use_config": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "compyle.config.Config",
    "compyle.config.get_config",
    "compyle.config.set_config",
    "contextlib.contextmanager",
    "setattr"
   ]
  },
  "type": "function"
 },
 "compyle.cuda": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "compyle.cuda.SHARED_PREAMBLE",
    "compyle.cuda._NumpyTypesKeyBuilder",
    "compyle.cuda.logging",
    "pycuda._cluda.CLUDA_PREAMBLE",
    "pytools.persistent_dict.WriteOncePersistentDict",
    "set"
   ]
  },
  "type": "module"
 },
 "compyle.cuda.CLUDA_PREAMBLE": {
  "data": {
   "shadows": "pycuda._cluda.CLUDA_PREAMBLE"
  },
  "type": "import"
 },
 "compyle.cuda.GenericScanKernel": {
  "data": {
   "lineno": 1155,
   "symbols_in_volume": [
    "compyle.cuda._GenericScanKernelBase"
   ]
  },
  "type": "class"
 },
 "compyle.cuda.GenericScanKernel.__call__": {
  "data": {
   "lineno": 1456,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "len",
    "numpy.bool",
    "pycuda.driver.Context.get_device",
    "pycuda.driver.device_attribute.MULTIPROCESSOR_COUNT",
    "pycuda.gpuarray.empty",
    "pycuda.tools.VectorArg",
    "pytools.uniform_interval_splitting",
    "zip"
   ]
  },
  "type": "function"
 },
 "compyle.cuda.GenericScanKernel._finish_setup_impl": {
  "data": {
   "lineno": 1219,
   "symbols_in_volume": [
    "compyle.cuda.UPDATE_SOURCE",
    "compyle.cuda._GeneratedFinalUpdateKernelInfo",
    "compyle.cuda._make_template",
    "compyle.cuda._process_code_for_macro",
    "compyle.cuda._round_down_to_power_of_2",
    "compyle.cuda.get_arg_list_scalar_arg_dtypes",
    "max",
    "min",
    "pycuda.driver.Context.get_device",
    "pycuda.driver.device_attribute.MAX_SHARED_MEMORY_PER_BLOCK",
    "pycuda.driver.device_attribute.MAX_THREADS_PER_BLOCK",
    "pycuda.driver.function_attribute.MAX_THREADS_PER_BLOCK",
    "pycuda.tools.VectorArg",
    "pytools.any",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "compyle.cuda.GenericScanKernel.finish_setup": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": [
    "KeyError",
    "compyle.cuda.generic_scan_kernel_cache",
    "compyle.cuda.logger"
   ]
  },
  "type": "function"
 },
 "compyle.cuda.GenericScanKernel.generate_scan_kernel": {
  "data": {
   "lineno": 1399,
   "symbols_in_volume": [
    "compyle.cuda.SCAN_INTERVALS_SOURCE",
    "compyle.cuda._GeneratedScanKernelInfo",
    "compyle.cuda._make_template",
    "compyle.cuda._round_down_to_power_of_2",
    "compyle.cuda.get_arg_list_scalar_arg_dtypes",
    "min",
    "str"
   ]
  },
  "type": "function"
 },
 "compyle.cuda.GenericScanKernel.get_local_mem_use": {
  "data": {
   "lineno": 1370,
   "symbols_in_volume": [
    "len",
    "list",
    "set",
    "sum"
   ]
  },
  "type": "function"
 },
 "compyle.cuda.KeyBuilderBase": {
  "data": {
   "shadows": "pytools.persistent_dict.KeyBuilder"
  },
  "type": "import"
 },
 "compyle.cuda.Record": {
  "data": {
   "shadows": "pytools.Record"
  },
  "type": "import"
 },
 "compyle.cuda.RecordWithoutPickling": {
  "data": {
   "shadows": "pytools.RecordWithoutPickling"
  },
  "type": "import"
 },
 "compyle.cuda.SCAN_INTERVALS_SOURCE": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "compyle.cuda.SHARED_PREAMBLE": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "compyle.cuda.ScalarArg": {
  "data": {
   "shadows": "pycuda.tools.ScalarArg"
  },
  "type": "import"
 },
 "compyle.cuda.ScanPerformanceWarning": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "compyle.cuda.SourceModule": {
  "data": {
   "shadows": "pycuda.compiler.SourceModule"
  },
  "type": "import"
 },
 "compyle.cuda.UPDATE_SOURCE": {
  "data": {
   "lineno": 624
  },
  "type": "constant"
 },
 "compyle.cuda.VectorArg": {
  "data": {
   "shadows": "pycuda.tools.VectorArg"
  },
  "type": "import"
 },
 "compyle.cuda.WriteOncePersistentDict": {
  "data": {
   "shadows": "pytools.persistent_dict.WriteOncePersistentDict"
  },
  "type": "import"
 },
 "compyle.cuda._BuiltFinalUpdateKernelInfo": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "pytools.RecordWithoutPickling"
   ]
  },
  "type": "class"
 },
 "compyle.cuda._BuiltFinalUpdateKernelInfo.__init__": {
  "data": {
   "lineno": 946,
   "symbols_in_volume": [
    "pytools.RecordWithoutPickling.__init__"
   ]
  },
  "type": "function"
 },
 "compyle.cuda._BuiltScanKernelInfo": {
  "data": {
   "lineno": 913,
   "symbols_in_volume": [
    "pytools.RecordWithoutPickling"
   ]
  },
  "type": "class"
 },
 "compyle.cuda._BuiltScanKernelInfo.__init__": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "pytools.RecordWithoutPickling.__init__"
   ]
  },
  "type": "function"
 },
 "compyle.cuda._GeneratedFinalUpdateKernelInfo": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "pytools.Record"
   ]
  },
  "type": "class"
 },
 "compyle.cuda._GeneratedFinalUpdateKernelInfo.__init__": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": [
    "pytools.Record.__init__"
   ]
  },
  "type": "function"
 },
 "compyle.cuda._GeneratedFinalUpdateKernelInfo.build": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "compyle.cuda._BuiltFinalUpdateKernelInfo",
    "pycuda.compiler.SourceModule"
   ]
  },
  "type": "function"
 },
 "compyle.cuda._GeneratedScanKernelInfo": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "pytools.Record"
   ]
  },
  "type": "class"
 },
 "compyle.cuda._GeneratedScanKernelInfo.__init__": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "pytools.Record.__init__"
   ]
  },
  "type": "function"
 },
 "compyle.cuda._GeneratedScanKernelInfo.build": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "compyle.cuda._BuiltScanKernelInfo",
    "pycuda.compiler.SourceModule"
   ]
  },
  "type": "function"
 },
 "compyle.cuda._GenericScanKernelBase": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compyle.cuda._GenericScanKernelBase.__init__": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "compyle.cuda._process_code_for_macro",
    "compyle.cuda.parse_arg_list",
    "dict",
    "enumerate",
    "isinstance",
    "numpy",
    "numpy.dtype",
    "numpy.iinfo",
    "numpy.int32",
    "pycuda.characterize.has_double_support",
    "pycuda.tools.VectorArg",
    "pycuda.tools.dtype_to_ctype",
    "tuple",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "compyle.cuda._IGNORED_WORDS": {
  "data": {
   "lineno": 800
  },
  "type": "constant"
 },
 "compyle.cuda._NumpyTypesKeyBuilder": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "pytools.persistent_dict.KeyBuilder"
   ]
  },
  "type": "class"
 },
 "compyle.cuda._NumpyTypesKeyBuilder.update_for_type": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "TypeError",
    "issubclass",
    "numpy.generic",
    "type"
   ]
  },
  "type": "function"
 },
 "compyle.cuda._PREFIX_WORDS": {
  "data": {
   "lineno": 774
  },
  "type": "constant"
 },
 "compyle.cuda._cuda_ctx": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "compyle.cuda._make_template": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "compyle.cuda.re",
    "pycuda._mymako.template.Template",
    "set",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "compyle.cuda._make_template.replace_id": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "compyle.cuda._IGNORED_WORDS",
    "compyle.cuda._PREFIX_WORDS"
   ]
  },
  "type": "function"
 },
 "compyle.cuda._process_code_for_macro": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "compyle.cuda._round_down_to_power_of_2": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "pycuda.tools.bitlog2"
   ]
  },
  "type": "function"
 },
 "compyle.cuda.all": {
  "data": {
   "shadows": "pytools.all"
  },
  "type": "import"
 },
 "compyle.cuda.any": {
  "data": {
   "shadows": "pytools.any"
  },
  "type": "import"
 },
 "compyle.cuda.bitlog2": {
  "data": {
   "shadows": "pycuda.tools.bitlog2"
  },
  "type": "import"
 },
 "compyle.cuda.context_dependent_memoize": {
  "data": {
   "shadows": "pycuda.tools.context_dependent_memoize"
  },
  "type": "import"
 },
 "compyle.cuda.drv": {
  "data": {
   "shadows": "pycuda.driver"
  },
  "type": "import"
 },
 "compyle.cuda.dtype_to_ctype": {
  "data": {
   "shadows": "pycuda.tools.dtype_to_ctype"
  },
  "type": "import"
 },
 "compyle.cuda.generic_scan_kernel_cache": {
  "data": {
   "lineno": 1150
  },
  "type": "constant"
 },
 "compyle.cuda.get_arg_list_scalar_arg_dtypes": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "pycuda.tools.ScalarArg",
    "pycuda.tools.VectorArg",
    "type"
   ]
  },
  "type": "function"
 },
 "compyle.cuda.gpuarray": {
  "data": {
   "shadows": "pycuda.gpuarray"
  },
  "type": "import"
 },
 "compyle.cuda.has_double_support": {
  "data": {
   "shadows": "pycuda.characterize.has_double_support"
  },
  "type": "import"
 },
 "compyle.cuda.logger": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "compyle.cuda.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "compyle.cuda.mako": {
  "data": {
   "shadows": "pycuda._mymako"
  },
  "type": "import"
 },
 "compyle.cuda.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "compyle.cuda.parse_arg_list": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "isinstance",
    "parse_single_arg",
    "str"
   ]
  },
  "type": "function"
 },
 "compyle.cuda.parse_arg_list.parse_single_arg": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "isinstance",
    "pycuda.tools.parse_c_arg",
    "str"
   ]
  },
  "type": "function"
 },
 "compyle.cuda.parse_c_arg": {
  "data": {
   "shadows": "pycuda.tools.parse_c_arg"
  },
  "type": "import"
 },
 "compyle.cuda.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "compyle.cuda.pycuda.autoinit": {
  "data": {
   "shadows": "pycuda.autoinit"
  },
  "type": "import"
 },
 "compyle.cuda.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "compyle.cuda.set_context": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "compyle.cuda._cuda_ctx"
   ]
  },
  "type": "function"
 },
 "compyle.cuda.uniform_interval_splitting": {
  "data": {
   "shadows": "pytools.uniform_interval_splitting"
  },
  "type": "import"
 },
 "compyle.cuda.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "compyle.cython_generator": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "compyle.cython_generator.logging"
   ]
  },
  "type": "module"
 },
 "compyle.cython_generator.CodeGenerationError": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "compyle.cython_generator.CythonClassHelper": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compyle.cython_generator.CythonClassHelper.__init__": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "compyle.cython_generator.CythonClassHelper.generate": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "mako.template.Template",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compyle.cython_generator.CythonGenerator.__init__": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "get_config"
   ]
  },
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator._analyze_method": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "compyle.cython_generator.inspect",
    "getattr",
    "getfullargspec",
    "has_return",
    "hasattr",
    "len",
    "range",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator._get_c_method_spec": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator._get_method_body": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "compyle.cython_generator.inspect",
    "get_assigned",
    "getattr",
    "getfullargspec",
    "set",
    "sorted",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator._get_method_wrapper": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "compyle.cython_generator.get_func_definition",
    "compyle.cython_generator.inspect"
   ]
  },
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator._get_methods": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "callable",
    "dir",
    "getattr"
   ]
  },
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator._get_public_vars": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "ordereddict.OrderedDict",
    "sorted",
    "vars"
   ]
  },
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator._get_py_method_spec": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator._handle_declare_statement": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "compyle.cython_generator.parse_declare",
    "matrix",
    "vars"
   ]
  },
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator._handle_declare_statement.matrix": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator._parse_function": {
  "data": {
   "lineno": 441
  },
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator._parse_instance": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "compyle.cython_generator.CythonClassHelper"
   ]
  },
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator._process_body_line": {
  "data": {
   "lineno": 458
  },
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator.ctype_to_python": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator.detect_type": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "bool",
    "compyle.cython_generator.CodeGenerationError",
    "compyle.cython_generator.all_numeric",
    "float",
    "int",
    "isinstance",
    "list",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator.get_code": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator.get_func_signature": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "compyle.cython_generator.get_func_definition",
    "compyle.cython_generator.inspect"
   ]
  },
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator.parse": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "TypeError",
    "compyle.cython_generator.types",
    "hasattr",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "compyle.cython_generator.CythonGenerator.set_make_python_methods": {
  "data": {
   "lineno": 237
  },
  "type": "function"
 },
 "compyle.cython_generator.OrderedDict": {
  "data": {
   "shadows": "ordereddict.OrderedDict"
  },
  "type": "import"
 },
 "compyle.cython_generator.Template": {
  "data": {
   "shadows": "mako.template.Template"
  },
  "type": "import"
 },
 "compyle.cython_generator.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "compyle.cython_generator.all_numeric": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "NameError",
    "all",
    "compyle.cython_generator.types",
    "float",
    "int",
    "type"
   ]
  },
  "type": "function"
 },
 "compyle.cython_generator.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "compyle.cython_generator.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "compyle.cython_generator.get_func_definition": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "compyle.cython_generator.get_parallel_range": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "get_config"
   ]
  },
  "type": "function"
 },
 "compyle.cython_generator.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "compyle.cython_generator.logger": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "compyle.cython_generator.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "compyle.cython_generator.parse_declare": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "compyle.cython_generator.CodeGenerationError",
    "compyle.cython_generator.ast",
    "get_declare_info",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compyle.cython_generator.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "compyle.ext_module": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "compyle.ext_module.sys",
    "mpi4py.MPI"
   ]
  },
  "type": "module"
 },
 "compyle.ext_module.CompileError": {
  "data": {
   "shadows": "distutils.errors.CompileError"
  },
  "type": "import"
 },
 "compyle.ext_module.ExtModule": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compyle.ext_module.ExtModule.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "compyle.ext_module.get_md5",
    "mpi4py.MPI",
    "mpi4py.MPI.COMM_WORLD",
    "mpi4py.MPI.Is_initialized"
   ]
  },
  "type": "function"
 },
 "compyle.ext_module.ExtModule._create_source": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "compyle.ext_module.ExtModule._dependencies_have_changed": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "ImportError",
    "compyle.ext_module.importlib",
    "compyle.ext_module.os"
   ]
  },
  "type": "function"
 },
 "compyle.ext_module.ExtModule._get_extra_args": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "compyle.ext_module.sys",
    "get_config"
   ]
  },
  "type": "function"
 },
 "compyle.ext_module.ExtModule._lock": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "_is_timed_out",
    "_try_to_lock",
    "compyle.ext_module.os",
    "compyle.ext_module.time",
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "compyle.ext_module.ExtModule._lock._is_timed_out": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "compyle.ext_module.time"
   ]
  },
  "type": "function"
 },
 "compyle.ext_module.ExtModule._lock._try_to_lock": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "OSError",
    "compyle.ext_module.os",
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "compyle.ext_module.ExtModule._message": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "compyle.ext_module.ExtModule._setup_filenames": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "compyle.ext_module.get_ext_extension",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "compyle.ext_module.ExtModule._setup_root": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "OSError",
    "compyle.ext_module.get_platform_dir",
    "compyle.ext_module.os",
    "os.path.expanduser",
    "os.path.isdir",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "compyle.ext_module.ExtModule._write_source": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "open",
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "compyle.ext_module.ExtModule.build": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "CaptureMultipleStreams",
    "compyle.ext_module.numpy",
    "compyle.ext_module.shutil",
    "compyle.ext_module.sys",
    "distutils.errors.CompileError",
    "distutils.errors.LinkError",
    "distutils.extension.Extension",
    "hasattr",
    "mpi4py.MPI",
    "mpi4py.MPI.Is_initialized",
    "print",
    "pyximport.pyxbuild.pyx_to_dll"
   ]
  },
  "type": "function"
 },
 "compyle.ext_module.ExtModule.load": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "compyle.ext_module.imp",
    "os.path.dirname"
   ]
  },
  "type": "function"
 },
 "compyle.ext_module.ExtModule.should_recompile": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "compyle.ext_module.Extension": {
  "data": {
   "shadows": "distutils.extension.Extension"
  },
  "type": "import"
 },
 "compyle.ext_module.LinkError": {
  "data": {
   "shadows": "distutils.errors.LinkError"
  },
  "type": "import"
 },
 "compyle.ext_module.MPI": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "compyle.ext_module.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "compyle.ext_module.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "compyle.ext_module.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "compyle.ext_module.expanduser": {
  "data": {
   "shadows": "os.path.expanduser"
  },
  "type": "import"
 },
 "compyle.ext_module.get_config_vars": {
  "data": {
   "shadows": "distutils.sysconfig.get_config_vars"
  },
  "type": "import"
 },
 "compyle.ext_module.get_ext_extension": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "distutils.sysconfig.get_config_vars",
    "vars",
    "vars.get"
   ]
  },
  "type": "function"
 },
 "compyle.ext_module.get_md5": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "compyle.ext_module.hashlib"
   ]
  },
  "type": "function"
 },
 "compyle.ext_module.get_platform": {
  "data": {
   "shadows": "distutils.util.get_platform"
  },
  "type": "import"
 },
 "compyle.ext_module.get_platform_dir": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "compyle.ext_module.sys",
    "distutils.util.get_platform"
   ]
  },
  "type": "function"
 },
 "compyle.ext_module.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "compyle.ext_module.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "compyle.ext_module.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "compyle.ext_module.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "compyle.ext_module.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "compyle.ext_module.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "compyle.ext_module.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "compyle.ext_module.pyxbuild": {
  "data": {
   "shadows": "pyximport.pyxbuild"
  },
  "type": "import"
 },
 "compyle.ext_module.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "compyle.ext_module.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "compyle.ext_module.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "compyle.extern": {
  "data": {
   "symbols_in_volume": [
    "compyle.extern._printf"
   ]
  },
  "type": "module"
 },
 "compyle.extern.Extern": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compyle.extern.Extern.__call__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "compyle.extern.Extern.code": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "compyle.extern.Extern.link": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "compyle.extern._printf": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "compyle.extern.Extern"
   ]
  },
  "type": "class"
 },
 "compyle.extern._printf.__call__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "compyle.extern._printf.code": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "compyle.extern.get_extern_code": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "compyle.extern.printf": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "compyle.low_level": {
  "data": {
   "symbols_in_volume": [
    "compyle.low_level._nogil",
    "compyle.low_level._parallel",
    "compyle.low_level._prange"
   ]
  },
  "type": "module"
 },
 "compyle.low_level.Cython": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compyle.low_level.Cython.__call__": {
  "data": {
   "lineno": 326
  },
  "type": "function"
 },
 "compyle.low_level.Cython.__init__": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "Transpiler"
   ]
  },
  "type": "function"
 },
 "compyle.low_level.Cython._generate": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "compyle.low_level.Cython._massage_arg": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compyle.low_level.Kernel": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compyle.low_level.Kernel.__call__": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "int",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "compyle.low_level.Kernel.__init__": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "NotImplementedError",
    "Transpiler",
    "get_backend",
    "get_config",
    "get_queue",
    "set_context"
   ]
  },
  "type": "function"
 },
 "compyle.low_level.Kernel._correct_opencl_address_space": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "compyle.low_level.Kernel._generate": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "getattr",
    "pyopencl.kernel_work_group_info.WORK_GROUP_SIZE"
   ]
  },
  "type": "function"
 },
 "compyle.low_level.Kernel._get_args": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "compyle.low_level.Kernel._get_func_info": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "KnownType",
    "compyle.low_level.inspect",
    "getattr",
    "getfullargspec"
   ]
  },
  "type": "function"
 },
 "compyle.low_level.Kernel._get_local_size": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "compyle.low_level.LocalMem",
    "ctype_to_dtype",
    "isinstance",
    "zip"
   ]
  },
  "type": "function"
 },
 "compyle.low_level.Kernel._get_workgroup_size": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "compyle.low_level.splay_cl",
    "pycuda.gpuarray.splay"
   ]
  },
  "type": "function"
 },
 "compyle.low_level.Kernel._massage_arg": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "compyle.low_level.LocalMem",
    "ctype_to_dtype",
    "isinstance",
    "numpy.array",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "compyle.low_level.Kernel._to_float": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "compyle.low_level.re"
   ]
  },
  "type": "function"
 },
 "compyle.low_level.LocalMem": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compyle.low_level.LocalMem.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "NotImplementedError",
    "get_backend"
   ]
  },
  "type": "function"
 },
 "compyle.low_level.LocalMem.get": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "NotImplementedError",
    "ctype_to_dtype",
    "pyopencl.LocalMemory"
   ]
  },
  "type": "function"
 },
 "compyle.low_level._nogil": {
  "data": {
   "lineno": 290
  },
  "type": "class"
 },
 "compyle.low_level._nogil.__call__": {
  "data": {
   "lineno": 296
  },
  "type": "function"
 },
 "compyle.low_level._nogil.code": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "compyle.low_level._parallel": {
  "data": {
   "lineno": 280
  },
  "type": "class"
 },
 "compyle.low_level._parallel.__call__": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "compyle.low_level._parallel.code": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "compyle.low_level._prange": {
  "data": {
   "lineno": 269
  },
  "type": "class"
 },
 "compyle.low_level._prange.__call__": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "compyle.low_level._prange.code": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "compyle.low_level.cl": {
  "data": {
   "shadows": "pyopencl"
  },
  "type": "import"
 },
 "compyle.low_level.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "compyle.low_level.local_barrier": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "compyle.low_level.nogil": {
  "data": {
   "lineno": 302
  },
  "type": "constant"
 },
 "compyle.low_level.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "compyle.low_level.parallel": {
  "data": {
   "lineno": 301
  },
  "type": "constant"
 },
 "compyle.low_level.prange": {
  "data": {
   "lineno": 300
  },
  "type": "constant"
 },
 "compyle.low_level.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "compyle.low_level.splay": {
  "data": {
   "shadows": "pycuda.gpuarray.splay"
  },
  "type": "import"
 },
 "compyle.low_level.splay_cl": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "min"
   ]
  },
  "type": "function"
 },
 "compyle.opencl": {
  "data": {
   "symbols_in_volume": [
    "collections.defaultdict",
    "float"
   ]
  },
  "type": "module"
 },
 "compyle.opencl.DeviceWGSException": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "compyle.opencl.SimpleKernel": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compyle.opencl.SimpleKernel.__call__": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pyopencl.enqueue_nd_range_kernel",
    "unwrap"
   ]
  },
  "type": "function"
 },
 "compyle.opencl.SimpleKernel.__call__.unwrap": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "isinstance",
    "pyopencl.array.Array"
   ]
  },
  "type": "function"
 },
 "compyle.opencl.SimpleKernel.__init__": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "compyle.opencl.DeviceWGSException",
    "getattr",
    "pyopencl.Program"
   ]
  },
  "type": "function"
 },
 "compyle.opencl.SimpleKernel._generate": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "compyle.opencl.SimpleKernel._massage_arg": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "compyle.opencl.SimpleKernel.get_max_wgs": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "compyle.opencl.get_queue",
    "pyopencl.kernel_work_group_info.WORK_GROUP_SIZE"
   ]
  },
  "type": "function"
 },
 "compyle.opencl._ctx": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "compyle.opencl._profile_info": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "compyle.opencl._queue": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "compyle.opencl.cl": {
  "data": {
   "shadows": "pyopencl"
  },
  "type": "import"
 },
 "compyle.opencl.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "compyle.opencl.get_context": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "compyle.opencl._ctx",
    "pyopencl.create_some_context"
   ]
  },
  "type": "function"
 },
 "compyle.opencl.get_queue": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "compyle.opencl._queue",
    "compyle.opencl.get_context",
    "get_config",
    "pyopencl.CommandQueue",
    "pyopencl.command_queue_properties.PROFILING_ENABLE"
   ]
  },
  "type": "function"
 },
 "compyle.opencl.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "compyle.opencl.named_profile": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "compyle.opencl.named_profile._decorator": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "compyle.opencl.named_profile._decorator._profiled_kernel_generator": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "compyle.opencl.profile_kernel",
    "f",
    "kernel"
   ]
  },
  "type": "function"
 },
 "compyle.opencl.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "compyle.opencl.print_profile": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "compyle.opencl._profile_info",
    "len",
    "operator.itemgetter",
    "print",
    "sorted"
   ]
  },
  "type": "function"
 },
 "compyle.opencl.profile": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "compyle.opencl._profile_info"
   ]
  },
  "type": "function"
 },
 "compyle.opencl.profile_kernel": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "get_config",
    "kernel"
   ]
  },
  "type": "function"
 },
 "compyle.opencl.profile_kernel._profile_knl": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "compyle.opencl.profile",
    "kernel"
   ]
  },
  "type": "function"
 },
 "compyle.opencl.set_context": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "compyle.opencl._ctx"
   ]
  },
  "type": "function"
 },
 "compyle.opencl.set_queue": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "compyle.opencl._queue"
   ]
  },
  "type": "function"
 },
 "compyle.parallel": {
  "data": {},
  "type": "module"
 },
 "compyle.parallel.CLUDA_PREAMBLE": {
  "data": {
   "shadows": "pycuda._cluda.CLUDA_PREAMBLE"
  },
  "type": "import"
 },
 "compyle.parallel.Elementwise": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compyle.parallel.Elementwise.__call__": {
  "data": {
   "lineno": 519
  },
  "type": "function"
 },
 "compyle.parallel.Elementwise.__getattr__": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "compyle.parallel.Elementwise.__init__": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "ElementwiseJIT",
    "compyle.parallel.ElementwiseBase",
    "getattr"
   ]
  },
  "type": "function"
 },
 "compyle.parallel.ElementwiseBase": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compyle.parallel.ElementwiseBase.__call__": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "len",
    "pycuda.driver.Event"
   ]
  },
  "type": "function"
 },
 "compyle.parallel.ElementwiseBase.__init__": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "CythonGenerator",
    "Transpiler",
    "get_config"
   ]
  },
  "type": "function"
 },
 "compyle.parallel.ElementwiseBase._correct_opencl_address_space": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "_add_address_space",
    "textwrap.wrap"
   ]
  },
  "type": "function"
 },
 "compyle.parallel.ElementwiseBase._correct_opencl_address_space._add_address_space": {
  "data": {
   "lineno": 469
  },
  "type": "function"
 },
 "compyle.parallel.ElementwiseBase._generate": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "compyle.parallel.elementwise_cy_template",
    "convert_to_float_if_needed",
    "get_context",
    "get_queue",
    "getattr",
    "mako.template.Template",
    "pycuda._cluda.CLUDA_PREAMBLE",
    "pycuda.elementwise.ElementwiseKernel",
    "pyopencl._cluda.CLUDA_PREAMBLE",
    "pyopencl.elementwise.ElementwiseKernel",
    "set_context"
   ]
  },
  "type": "function"
 },
 "compyle.parallel.ElementwiseBase._massage_arg": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compyle.parallel.ElementwiseKernel": {
  "data": {
   "shadows": "pycuda.elementwise.ElementwiseKernel"
  },
  "type": "import"
 },
 "compyle.parallel.GenericScanKernel": {
  "data": {
   "shadows": "pyopencl.scan.GenericScanKernel"
  },
  "type": "import"
 },
 "compyle.parallel.Reduction": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compyle.parallel.Reduction.__call__": {
  "data": {
   "lineno": 747
  },
  "type": "function"
 },
 "compyle.parallel.Reduction.__getattr__": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "compyle.parallel.Reduction.__init__": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "ReductionJIT",
    "compyle.parallel.ReductionBase",
    "getattr",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "compyle.parallel.ReductionBase": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compyle.parallel.ReductionBase.__call__": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "len",
    "pycuda.driver.Event"
   ]
  },
  "type": "function"
 },
 "compyle.parallel.ReductionBase.__init__": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "CythonGenerator",
    "Transpiler",
    "dtype_to_ctype",
    "get_config",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "compyle.parallel.ReductionBase._add_address_space": {
  "data": {
   "lineno": 679
  },
  "type": "function"
 },
 "compyle.parallel.ReductionBase._correct_opencl_address_space": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "textwrap.wrap"
   ]
  },
  "type": "function"
 },
 "compyle.parallel.ReductionBase._correct_return_type": {
  "data": {
   "lineno": 667
  },
  "type": "function"
 },
 "compyle.parallel.ReductionBase._generate": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "compyle.parallel.reduction_cy_template",
    "convert_to_float_if_needed",
    "get_context",
    "get_queue",
    "getattr",
    "mako.template.Template",
    "pycuda._cluda.CLUDA_PREAMBLE",
    "pycuda.reduction.ReductionKernel",
    "pyopencl._cluda.CLUDA_PREAMBLE",
    "pyopencl.reduction.ReductionKernel",
    "set_context"
   ]
  },
  "type": "function"
 },
 "compyle.parallel.ReductionBase._massage_arg": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compyle.parallel.ReductionKernel": {
  "data": {
   "shadows": "pycuda.reduction.ReductionKernel"
  },
  "type": "import"
 },
 "compyle.parallel.Scan": {
  "data": {
   "lineno": 1078,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compyle.parallel.Scan.__call__": {
  "data": {
   "lineno": 1108
  },
  "type": "function"
 },
 "compyle.parallel.Scan.__getattr__": {
  "data": {
   "lineno": 1105,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "compyle.parallel.Scan.__init__": {
  "data": {
   "lineno": 1079,
   "symbols_in_volume": [
    "ScanJIT",
    "compyle.parallel.ScanBase",
    "getattr",
    "input",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "compyle.parallel.ScanBase": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compyle.parallel.ScanBase.__call__": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": [
    "len",
    "pycuda.driver.Event"
   ]
  },
  "type": "function"
 },
 "compyle.parallel.ScanBase.__init__": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "CythonGenerator",
    "Transpiler",
    "dtype_to_ctype",
    "get_config",
    "input",
    "input.__name__",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "compyle.parallel.ScanBase._add_address_space": {
  "data": {
   "lineno": 1028
  },
  "type": "function"
 },
 "compyle.parallel.ScanBase._append_cython_arg_data": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "compyle.parallel.ScanBase._correct_opencl_address_space": {
  "data": {
   "lineno": 1034,
   "symbols_in_volume": [
    "textwrap.wrap"
   ]
  },
  "type": "function"
 },
 "compyle.parallel.ScanBase._correct_return_type": {
  "data": {
   "lineno": 781
  },
  "type": "function"
 },
 "compyle.parallel.ScanBase._default_cython_input_function": {
  "data": {
   "lineno": 827
  },
  "type": "function"
 },
 "compyle.parallel.ScanBase._generate": {
  "data": {
   "lineno": 819
  },
  "type": "function"
 },
 "compyle.parallel.ScanBase._generate_cuda_kernel": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "pyopencl.scan.GenericScanKernel",
    "set_context"
   ]
  },
  "type": "function"
 },
 "compyle.parallel.ScanBase._generate_cython_code": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "compyle.parallel.drop_duplicates",
    "compyle.parallel.scan_cy_single_thread_template",
    "compyle.parallel.scan_cy_template",
    "getattr",
    "mako.template.Template"
   ]
  },
  "type": "function"
 },
 "compyle.parallel.ScanBase._generate_opencl_kernel": {
  "data": {
   "lineno": 989,
   "symbols_in_volume": [
    "get_context",
    "get_queue",
    "pyopencl.scan.GenericScanKernel"
   ]
  },
  "type": "function"
 },
 "compyle.parallel.ScanBase._get_opencl_cuda_code": {
  "data": {
   "lineno": 964,
   "symbols_in_volume": [
    "compyle.parallel.drop_duplicates",
    "convert_to_float_if_needed"
   ]
  },
  "type": "function"
 },
 "compyle.parallel.ScanBase._get_scan_expr_opencl_cuda": {
  "data": {
   "lineno": 958
  },
  "type": "function"
 },
 "compyle.parallel.ScanBase._ignore_arg": {
  "data": {
   "lineno": 805
  },
  "type": "function"
 },
 "compyle.parallel.ScanBase._include_last_item": {
  "data": {
   "lineno": 799
  },
  "type": "function"
 },
 "compyle.parallel.ScanBase._include_prev_item": {
  "data": {
   "lineno": 793
  },
  "type": "function"
 },
 "compyle.parallel.ScanBase._massage_arg": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compyle.parallel.ScanBase._num_ignore_args": {
  "data": {
   "lineno": 810
  },
  "type": "function"
 },
 "compyle.parallel.ScanBase._wrap_cython_code": {
  "data": {
   "lineno": 835
  },
  "type": "function"
 },
 "compyle.parallel.ScanBase._wrap_ocl_function": {
  "data": {
   "lineno": 929
  },
  "type": "function"
 },
 "compyle.parallel.Template": {
  "data": {
   "shadows": "mako.template.Template"
  },
  "type": "import"
 },
 "compyle.parallel.drop_duplicates": {
  "data": {
   "lineno": 370
  },
  "type": "function"
 },
 "compyle.parallel.drv": {
  "data": {
   "shadows": "pycuda.driver"
  },
  "type": "import"
 },
 "compyle.parallel.elementwise": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "_wrapper"
   ]
  },
  "type": "function"
 },
 "compyle.parallel.elementwise._wrapper": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "compyle.parallel.Elementwise",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "compyle.parallel.elementwise_cy_template": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "compyle.parallel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "compyle.parallel.reduction_cy_template": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "compyle.parallel.scan_cy_single_thread_template": {
  "data": {
   "lineno": 330
  },
  "type": "constant"
 },
 "compyle.parallel.scan_cy_template": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "compyle.parallel.wrap": {
  "data": {
   "shadows": "textwrap.wrap"
  },
  "type": "import"
 },
 "compyle.parallel.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "compyle.tests": {
  "data": {},
  "type": "module"
 },
 "compyle.tests.py3_code": {
  "data": {},
  "type": "module"
 },
 "compyle.tests.py3_code.py3_f": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "declare"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_array": {
  "data": {
   "symbols_in_volume": [
    "compyle.tests.test_array.pytest"
   ]
  },
  "type": "module"
 },
 "compyle.tests.test_array.array": {
  "data": {
   "shadows": "compyle.array"
  },
  "type": "import"
 },
 "compyle.tests.test_array.check_import": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "compyle.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_array.make_dev_array": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "Array",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_array.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "compyle.tests.test_array.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "compyle.tests.test_array.test_align": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "Array",
    "compyle.array.arange",
    "compyle.tests.test_array.check_import",
    "compyle.tests.test_array.test_all_backends",
    "numpy.all",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_array.test_all_backends": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "compyle.tests.test_array.test_append_with_reallocation": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "compyle.tests.test_array.check_import",
    "compyle.tests.test_array.make_dev_array",
    "compyle.tests.test_array.test_all_backends",
    "len"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_array.test_append_without_reallocation": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "compyle.tests.test_array.check_import",
    "compyle.tests.test_array.make_dev_array",
    "compyle.tests.test_array.test_all_backends",
    "len"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_array.test_copy": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "compyle.tests.test_array.check_import",
    "compyle.tests.test_array.make_dev_array",
    "compyle.tests.test_array.test_all_backends",
    "numpy.all",
    "print"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_array.test_copy_values": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "compyle.array.arange",
    "compyle.array.empty",
    "compyle.tests.test_array.check_import",
    "compyle.tests.test_array.make_dev_array",
    "compyle.tests.test_array.test_all_backends",
    "len",
    "numpy.all",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_array.test_extend": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "compyle.array.zeros",
    "compyle.tests.test_array.check_import",
    "compyle.tests.test_array.make_dev_array",
    "compyle.tests.test_array.test_all_backends",
    "len",
    "numpy.all",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_array.test_min_max": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "compyle.tests.test_array.check_import",
    "compyle.tests.test_array.make_dev_array",
    "compyle.tests.test_array.test_all_backends"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_array.test_remove": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "Array",
    "compyle.array.arange",
    "compyle.tests.test_array.check_import",
    "compyle.tests.test_array.test_all_backends",
    "numpy.all",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_array.test_reserve": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "compyle.tests.test_array.check_import",
    "compyle.tests.test_array.make_dev_array",
    "compyle.tests.test_array.test_all_backends",
    "len"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_array.test_resize_with_reallocation": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "compyle.tests.test_array.check_import",
    "compyle.tests.test_array.make_dev_array",
    "compyle.tests.test_array.test_all_backends",
    "len"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_array.test_resize_without_reallocation": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "compyle.tests.test_array.check_import",
    "compyle.tests.test_array.make_dev_array",
    "compyle.tests.test_array.test_all_backends",
    "len"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_array.test_squeeze": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "compyle.tests.test_array.check_import",
    "compyle.tests.test_array.make_dev_array",
    "compyle.tests.test_array.test_all_backends"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_ast_utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "compyle.tests.test_ast_utils.unittest"
   ]
  },
  "type": "module"
 },
 "compyle.tests.test_ast_utils.TestASTUtils": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "compyle.tests.test_ast_utils.unittest"
   ]
  },
  "type": "class"
 },
 "compyle.tests.test_ast_utils.TestASTUtils.test_assigned_tuple_expansion": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "get_assigned",
    "list",
    "sorted",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_ast_utils.TestASTUtils.test_assigned_values": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "get_assigned",
    "list",
    "sorted",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_ast_utils.TestASTUtils.test_get_symbols": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "compyle.tests.test_ast_utils.ast",
    "get_symbols",
    "list",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_ast_utils.TestASTUtils.test_get_unknown_names_and_calls": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "get_unknown_names_and_calls",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_ast_utils.TestASTUtils.test_get_unknown_names_and_calls_with_py3_annotation": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "compyle.tests.test_ast_utils.sys",
    "compyle.tests.test_ast_utils.unittest",
    "get_unknown_names_and_calls",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_ast_utils.TestASTUtils.test_has_node": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "compyle.tests.test_ast_utils.ast",
    "has_node",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_ast_utils.TestASTUtils.test_has_return": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "has_return",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_ast_utils.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "compyle.tests.test_ast_utils.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "compyle.tests.test_ast_utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "compyle.tests.test_ast_utils.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "compyle.tests.test_capture_stream": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "compyle.tests.test_capture_stream.unittest"
   ]
  },
  "type": "module"
 },
 "compyle.tests.test_capture_stream.TestCaptureMultipleStreams": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "compyle.tests.test_capture_stream.unittest"
   ]
  },
  "type": "class"
 },
 "compyle.tests.test_capture_stream.TestCaptureMultipleStreams.test_that_order_is_preserved": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "CaptureMultipleStreams",
    "compyle.tests.test_capture_stream.sys",
    "compyle.tests.test_capture_stream.write_stderr",
    "compyle.tests.test_capture_stream.write_stdout"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_capture_stream.TestCaptureMultipleStreams.test_that_stdout_stderr_are_captured_by_default": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "CaptureMultipleStreams",
    "compyle.tests.test_capture_stream.write_stderr",
    "compyle.tests.test_capture_stream.write_stdout"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_capture_stream.TestCaptureStream": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "compyle.tests.test_capture_stream.unittest"
   ]
  },
  "type": "class"
 },
 "compyle.tests.test_capture_stream.TestCaptureStream.test_that_output_is_available_in_context_and_outside": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "CaptureStream",
    "compyle.tests.test_capture_stream.sys",
    "compyle.tests.test_capture_stream.write_stderr"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_capture_stream.TestCaptureStream.test_that_stderr_is_captured_by_default": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "CaptureStream",
    "compyle.tests.test_capture_stream.write_stderr"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_capture_stream.TestCaptureStream.test_that_stdout_can_be_captured": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "CaptureStream",
    "compyle.tests.test_capture_stream.sys",
    "compyle.tests.test_capture_stream.write_stdout"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_capture_stream.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "compyle.tests.test_capture_stream.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "compyle.tests.test_capture_stream.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "compyle.tests.test_capture_stream.write_stderr": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "compyle.tests.test_capture_stream.subprocess",
    "compyle.tests.test_capture_stream.sys"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_capture_stream.write_stdout": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "compyle.tests.test_capture_stream.subprocess",
    "compyle.tests.test_capture_stream.sys"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_config": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "unittest.main"
   ]
  },
  "type": "module"
 },
 "compyle.tests.test_config.ConfigTestCase": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "compyle.tests.test_config.ConfigTestCase.setUp": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "Config",
    "set_config"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_config.ConfigTestCase.tearDown": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "set_config"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_config.ConfigTestCase.test_default_global_config_is_really_global": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "Config",
    "get_config",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_config.ConfigTestCase.test_set_get_omp_schedule_config": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "compyle.tests.test_config.ConfigTestCase.test_set_get_use_double_config": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "compyle.tests.test_config.ConfigTestCase.test_set_get_use_opencl_config": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "compyle.tests.test_config.ConfigTestCase.test_set_get_use_openmp_config": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "compyle.tests.test_config.ConfigTestCase.test_set_global": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "get_config",
    "set_config"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_config.ConfigTestCase.test_set_omp_schedule_config_exception": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_config.ConfigTestCase.test_set_string_omp_schedule": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "compyle.tests.test_config.ConfigTestCase.test_use_config": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "get_config",
    "set_config",
    "use_config"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_config.ConfigTestCase.test_use_double_config_default": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "compyle.tests.test_config.ConfigTestCase.test_use_opencl_config_default": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "compyle.tests.test_config.ConfigTestCase.test_use_openmp_config_default": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "compyle.tests.test_config.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "compyle.tests.test_config.main": {
  "data": {
   "shadows": "unittest.main"
  },
  "type": "import"
 },
 "compyle.tests.test_cython_generator": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "compyle.tests.test_cython_generator.unittest"
   ]
  },
  "type": "module"
 },
 "compyle.tests.test_cython_generator.BasicEq": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "compyle.tests.test_cython_generator.BasicEq.__init__": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "compyle.tests.test_cython_generator.EqWithDeclare": {
  "data": {
   "lineno": 46
  },
  "type": "class"
 },
 "compyle.tests.test_cython_generator.EqWithDeclare.func": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "declare"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_cython_generator.EqWithKnownTypes": {
  "data": {
   "lineno": 33
  },
  "type": "class"
 },
 "compyle.tests.test_cython_generator.EqWithKnownTypes.some_func": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "compyle.tests.test_cython_generator.EqWithMatrix": {
  "data": {
   "lineno": 38
  },
  "type": "class"
 },
 "compyle.tests.test_cython_generator.EqWithMatrix.func": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "declare"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_cython_generator.EqWithMethod": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "compyle.tests.test_cython_generator.BasicEq"
   ]
  },
  "type": "class"
 },
 "compyle.tests.test_cython_generator.EqWithMethod.func": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "abs",
    "math.pi",
    "math.sin"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_cython_generator.EqWithReturn": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "compyle.tests.test_cython_generator.BasicEq"
   ]
  },
  "type": "class"
 },
 "compyle.tests.test_cython_generator.EqWithReturn.func": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestBase": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "compyle.tests.test_cython_generator.unittest"
   ]
  },
  "type": "class"
 },
 "compyle.tests.test_cython_generator.TestBase.assert_code_equal": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestCythonCodeGenerator": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "compyle.tests.test_cython_generator.TestBase"
   ]
  },
  "type": "class"
 },
 "compyle.tests.test_cython_generator.TestCythonCodeGenerator.setUp": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "get_config"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestCythonCodeGenerator.tearDown": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "set_config"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestCythonCodeGenerator.test_func_signature": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "CythonGenerator"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestCythonCodeGenerator.test_func_signature.f": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestCythonCodeGenerator.test_function_with_annotation": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "CythonGenerator",
    "compyle.tests.test_cython_generator.annotated_f",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestCythonCodeGenerator.test_honors_use_openmp_setting": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "CythonGenerator",
    "compyle.tests.test_cython_generator.EqWithMethod",
    "get_config",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestCythonCodeGenerator.test_method_with_declare": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "CythonGenerator",
    "compyle.tests.test_cython_generator.EqWithDeclare",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestCythonCodeGenerator.test_method_with_known_types": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "CythonGenerator",
    "KnownType",
    "compyle.tests.test_cython_generator.EqWithKnownTypes",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestCythonCodeGenerator.test_method_with_matrix": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "CythonGenerator",
    "compyle.tests.test_cython_generator.EqWithMatrix",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestCythonCodeGenerator.test_method_with_return": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "CythonGenerator",
    "compyle.tests.test_cython_generator.EqWithReturn",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestCythonCodeGenerator.test_python3_annotation": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "CythonGenerator",
    "compyle.tests.test_cython_generator.sys",
    "compyle.tests.test_cython_generator.unittest",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestCythonCodeGenerator.test_python_methods": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "CythonGenerator",
    "compyle.tests.test_cython_generator.EqWithMethod",
    "compyle.tests.test_cython_generator.EqWithReturn",
    "compyle.tests.test_cython_generator.func_with_return",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestCythonCodeGenerator.test_simple_constructor": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "CythonGenerator",
    "compyle.tests.test_cython_generator.BasicEq",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestCythonCodeGenerator.test_simple_method": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "CythonGenerator",
    "compyle.tests.test_cython_generator.EqWithMethod",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestCythonCodeGenerator.test_wrap_function": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "CythonGenerator",
    "compyle.tests.test_cython_generator.func_with_return",
    "compyle.tests.test_cython_generator.simple_func",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestMiscUtils": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "compyle.tests.test_cython_generator.TestBase"
   ]
  },
  "type": "class"
 },
 "compyle.tests.test_cython_generator.TestMiscUtils.test_all_numeric": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "NameError",
    "all_numeric",
    "long"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestMiscUtils.test_cython_class_helper": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "CythonClassHelper",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_cython_generator.TestMiscUtils.test_detect_type": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "CythonGenerator"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_cython_generator.annotated_f": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "annotate",
    "declare"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_cython_generator.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "compyle.tests.test_cython_generator.func_with_return": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "compyle.tests.test_cython_generator.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "compyle.tests.test_cython_generator.simple_func": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "compyle.tests.test_cython_generator.sin": {
  "data": {
   "shadows": "math.sin"
  },
  "type": "import"
 },
 "compyle.tests.test_cython_generator.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "compyle.tests.test_cython_generator.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "compyle.tests.test_ext_module": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "unittest.main"
   ]
  },
  "type": "module"
 },
 "compyle.tests.test_ext_module.Pool": {
  "data": {
   "shadows": "multiprocessing.Pool"
  },
  "type": "import"
 },
 "compyle.tests.test_ext_module.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "compyle.tests.test_ext_module.TestExtModule": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "compyle.tests.test_ext_module.TestExtModule._add_root_to_sys_path": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "compyle.tests.test_ext_module.sys",
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_ext_module.TestExtModule._create_dummy_module": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_ext_module.TestExtModule.setUp": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "compyle.tests.test_ext_module.tempfile",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_ext_module.TestExtModule.tearDown": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "compyle.tests.test_ext_module.shutil",
    "compyle.tests.test_ext_module.sys"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_ext_module.TestExtModule.test_constructor": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ExtModule",
    "get_ext_extension",
    "get_md5",
    "open",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_ext_module.TestExtModule.test_default_root": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ExtModule",
    "compyle.tests.test_ext_module.os",
    "get_md5",
    "open",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_ext_module.TestExtModule.test_load_module": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ExtModule",
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_ext_module.TestExtModule.test_rebuild_when_dependencies_change": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "ExtModule",
    "compyle.tests.test_ext_module.os"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_ext_module.TestExtModule.test_that_multiple_compiles_do_not_occur_for_same_source": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "compyle.tests.test_ext_module._check_compile",
    "multiprocessing.Pool",
    "sum"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_ext_module.TestExtModule.test_that_multiple_writes_do_not_occur_for_same_source": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "compyle.tests.test_ext_module._check_write_source",
    "multiprocessing.Pool",
    "sum"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_ext_module.TestMiscExtMod": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "compyle.tests.test_ext_module.TestMiscExtMod.test_md5": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "get_md5"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_ext_module._check_compile": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ExtModule",
    "compyle.tests.test_ext_module.shutil",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_ext_module._check_write_source": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ExtModule",
    "unittest.mock.mock_open",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_ext_module._check_write_source._side_effect": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "open",
    "orig_side_effect"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_ext_module.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "compyle.tests.test_ext_module.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "compyle.tests.test_ext_module.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "compyle.tests.test_ext_module.get_config_var": {
  "data": {
   "shadows": "distutils.sysconfig.get_config_var"
  },
  "type": "import"
 },
 "compyle.tests.test_ext_module.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "compyle.tests.test_ext_module.main": {
  "data": {
   "shadows": "unittest.main"
  },
  "type": "import"
 },
 "compyle.tests.test_ext_module.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "compyle.tests.test_ext_module.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "compyle.tests.test_ext_module.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "compyle.tests.test_ext_module.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "compyle.tests.test_ext_module.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "compyle.tests.test_jit": {
  "data": {},
  "type": "module"
 },
 "compyle.tests.test_jit.TestAnnotationHelper": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "compyle.tests.test_jit.unittest"
   ]
  },
  "type": "class"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_binop_as_call_arg": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "AnnotationHelper"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_binop_as_call_arg.f": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "compyle.tests.test_jit.g"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_binop_in_return": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "AnnotationHelper"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_binop_in_return.f": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_binop_return_type": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "AnnotationHelper"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_binop_return_type.f": {
  "data": {
   "lineno": 308
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_binop_with_call_as_call_arg": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "AnnotationHelper"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_binop_with_call_as_call_arg.f": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "compyle.tests.test_jit.g",
    "compyle.tests.test_jit.h"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_binop_with_call_in_return": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "AnnotationHelper"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_binop_with_call_in_return.f": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "compyle.tests.test_jit.g"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_call_as_call_arg": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "AnnotationHelper"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_call_as_call_arg.f": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "compyle.tests.test_jit.g",
    "compyle.tests.test_jit.h"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_call_in_return": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "AnnotationHelper"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_call_in_return.f": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "compyle.tests.test_jit.g"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_compare_as_call_arg": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "AnnotationHelper"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_compare_as_call_arg.f": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "compyle.tests.test_jit.g"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_const_as_call_arg": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "AnnotationHelper"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_const_as_call_arg.double_f": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "compyle.tests.test_jit.g"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_const_as_call_arg.int_f": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "compyle.tests.test_jit.g"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_const_as_call_arg.long_f": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "compyle.tests.test_jit.g"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_const_in_return": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "AnnotationHelper"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_const_in_return.double_f": {
  "data": {
   "lineno": 221
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_const_in_return.int_f": {
  "data": {
   "lineno": 195
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_const_in_return.long_f": {
  "data": {
   "lineno": 208
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_multi_level_call_in_return": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "AnnotationHelper"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_multi_level_call_in_return.f": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "compyle.tests.test_jit.h"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_non_jit_call_as_call_arg": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "AnnotationHelper"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_non_jit_call_as_call_arg.f": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "compyle.tests.test_jit.g",
    "math.sin"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_non_jit_call_in_return": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "AnnotationHelper"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_non_jit_call_in_return.f": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "math.sin"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_subscript_as_call_arg": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "AnnotationHelper"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_subscript_as_call_arg.f": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "compyle.tests.test_jit.g"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_subscript_in_return": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "AnnotationHelper"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_subscript_in_return.f": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_variable_as_call_arg": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "AnnotationHelper"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_variable_as_call_arg.f": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "compyle.tests.test_jit.g",
    "declare"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_variable_in_return": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "AnnotationHelper"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_jit.TestAnnotationHelper.test_variable_in_return.f": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "compyle.tests.test_jit.g": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "compyle.tests.test_jit.h": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "compyle.tests.test_jit.g"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_jit.importorskip": {
  "data": {
   "shadows": "pytest.importorskip"
  },
  "type": "import"
 },
 "compyle.tests.test_jit.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "compyle.tests.test_jit.sin": {
  "data": {
   "shadows": "math.sin"
  },
  "type": "import"
 },
 "compyle.tests.test_jit.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "compyle.tests.test_low_level": {
  "data": {},
  "type": "module"
 },
 "compyle.tests.test_low_level.TestCython": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "compyle.tests.test_low_level.unittest"
   ]
  },
  "type": "class"
 },
 "compyle.tests.test_low_level.TestCython.test_cython_code_with_return_and_nested_call": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "Cython",
    "compyle.tests.test_low_level.knl",
    "cy",
    "numpy.linspace",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_low_level.TestCython.test_cython_with_externs": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "Cython",
    "compyle.tests.test_low_level.cy_extern",
    "cy",
    "numpy.allclose",
    "numpy.linspace",
    "numpy.zeros_like",
    "use_config"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_low_level.TestKernel": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "compyle.tests.test_low_level.unittest"
   ]
  },
  "type": "class"
 },
 "compyle.tests.test_low_level.TestKernel.test_kernel_with_local_memory_cuda": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "Kernel",
    "LocalMem",
    "k",
    "numpy.allclose",
    "numpy.linspace",
    "numpy.zeros_like",
    "pytest.importorskip",
    "wrap"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_low_level.TestKernel.test_kernel_with_local_memory_cuda.knl": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "annotate",
    "declare",
    "local_barrier"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_low_level.TestKernel.test_kernel_with_local_memory_opencl": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "Kernel",
    "LocalMem",
    "k",
    "numpy.allclose",
    "numpy.linspace",
    "numpy.zeros_like",
    "pytest.importorskip",
    "wrap"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_low_level.TestKernel.test_kernel_with_local_memory_opencl.knl": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "annotate",
    "declare",
    "local_barrier"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_low_level.TestKernel.test_simple_kernel_cuda": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "Kernel",
    "k",
    "numpy.allclose",
    "numpy.linspace",
    "numpy.zeros_like",
    "pytest.importorskip",
    "wrap"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_low_level.TestKernel.test_simple_kernel_cuda.knl": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "annotate",
    "declare"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_low_level.TestKernel.test_simple_kernel_opencl": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "Kernel",
    "k",
    "numpy.allclose",
    "numpy.linspace",
    "numpy.zeros_like",
    "pytest.importorskip",
    "wrap"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_low_level.TestKernel.test_simple_kernel_opencl.knl": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "annotate",
    "declare"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_low_level.cy_extern": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "annotate",
    "declare",
    "parallel",
    "prange"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_low_level.func": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "annotate"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_low_level.importorskip": {
  "data": {
   "shadows": "pytest.importorskip"
  },
  "type": "import"
 },
 "compyle.tests.test_low_level.knl": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "annotate",
    "compyle.tests.test_low_level.func",
    "declare",
    "range"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_low_level.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "compyle.tests.test_low_level.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "compyle.tests.test_parallel": {
  "data": {},
  "type": "module"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase._get_segmented_scan_actual": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "len",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_elementwise_works_with_cuda": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pytest.importorskip"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_elementwise_works_with_cython": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_elementwise_works_with_opencl": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "pytest.importorskip"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_reduction_works_neutral_cuda": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "pytest.importorskip"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_reduction_works_neutral_cython": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_reduction_works_neutral_opencl": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "pytest.importorskip"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_reduction_works_with_external_func_cuda": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "pytest.importorskip"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_reduction_works_with_external_func_cython": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_reduction_works_with_external_func_opencl": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "pytest.importorskip"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_reduction_works_with_map_cuda": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "pytest.importorskip"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_reduction_works_with_map_cython": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_reduction_works_with_map_opencl": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "pytest.importorskip"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_reduction_works_without_map_cuda": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "pytest.importorskip"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_reduction_works_without_map_cython": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_reduction_works_without_map_opencl": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pytest.importorskip"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_scan_last_item_cuda": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "pytest.importorskip"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_scan_last_item_cython_parallel": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "use_config"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_scan_last_item_opencl": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "pytest.importorskip"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_scan_works_cuda": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "pytest.importorskip"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_scan_works_cython": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_scan_works_cython_parallel": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "use_config"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_scan_works_opencl": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "pytest.importorskip"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_scan_works_with_external_func_cuda": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "pytest.importorskip"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_scan_works_with_external_func_cython": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_scan_works_with_external_func_cython_parallel": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "use_config"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_scan_works_with_external_func_opencl": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "pytest.importorskip"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_segmented_scan_cuda": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "pytest.importorskip"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_segmented_scan_cython": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_segmented_scan_cython_parallel": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "use_config"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_segmented_scan_opencl": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "pytest.importorskip"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_unique_scan_cuda": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "pytest.importorskip"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_unique_scan_cython": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_unique_scan_cython_parallel": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "use_config"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.ParallelUtilsBase.test_unique_scan_opencl": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "pytest.importorskip"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "compyle.tests.test_parallel.ParallelUtilsBase",
    "compyle.tests.test_parallel.unittest"
   ]
  },
  "type": "class"
 },
 "compyle.tests.test_parallel.TestParallelUtils._check_reduction_min": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "Reduction",
    "numpy.linspace",
    "r",
    "wrap"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._check_reduction_with_external_func": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "Reduction",
    "map",
    "numpy.arange",
    "numpy.int32",
    "r",
    "wrap"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._check_reduction_with_external_func.map": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "annotate",
    "compyle.tests.test_parallel.external"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._check_reduction_with_map": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "Reduction",
    "map",
    "numpy.linspace",
    "r",
    "wrap"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._check_reduction_with_map.map": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "annotate",
    "math.cos",
    "math.sin"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._check_simple_elementwise": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "Elementwise",
    "e",
    "numpy.allclose",
    "numpy.linspace",
    "numpy.sin",
    "numpy.zeros_like",
    "wrap"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._check_simple_elementwise.axpb": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "annotate",
    "math.sin"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._check_simple_reduction": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "Reduction",
    "numpy.linspace",
    "r",
    "wrap"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._test_scan": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "Scan",
    "numpy.arange",
    "numpy.cumsum",
    "numpy.int32",
    "numpy.testing.assert_equal",
    "scan",
    "wrap"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._test_scan.input_f": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "annotate"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._test_scan.output_f": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "annotate"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._test_scan_last_item": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "Scan",
    "numpy.cumsum",
    "numpy.int32",
    "numpy.random.randint",
    "numpy.testing.assert_equal",
    "scan",
    "wrap"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._test_scan_last_item.output_f": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "annotate"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._test_scan_with_external_func": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "Scan",
    "numpy.arange",
    "numpy.cumsum",
    "numpy.int32",
    "numpy.testing.assert_equal",
    "scan",
    "wrap"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._test_scan_with_external_func.input_f": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "annotate",
    "compyle.tests.test_parallel.external"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._test_scan_with_external_func.output_f": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "annotate"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._test_segmented_scan": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "Scan",
    "numpy.int32",
    "numpy.random.randint",
    "numpy.testing.assert_equal",
    "scan",
    "wrap"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._test_segmented_scan.input_f": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "annotate"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._test_segmented_scan.output_f": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "annotate"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._test_segmented_scan.segment_f": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "annotate"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._test_unique_scan": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "Scan",
    "len",
    "numpy.int32",
    "numpy.random.randint",
    "numpy.sort",
    "numpy.testing.assert_equal",
    "numpy.unique",
    "numpy.zeros",
    "scan",
    "wrap"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._test_unique_scan.input_f": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "annotate"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils._test_unique_scan.output_f": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "annotate"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils.setUp": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "get_config"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtils.tearDown": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "get_config"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "compyle.tests.test_parallel.ParallelUtilsBase",
    "compyle.tests.test_parallel.unittest"
   ]
  },
  "type": "class"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._check_reduction_min": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "Reduction",
    "numpy.linspace",
    "r",
    "wrap"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._check_reduction_with_external_func": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "Reduction",
    "map",
    "numpy.arange",
    "numpy.int32",
    "r",
    "wrap"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._check_reduction_with_external_func.map": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "annotate",
    "g"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._check_reduction_with_map": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "Reduction",
    "map",
    "numpy.linspace",
    "r",
    "wrap"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._check_reduction_with_map.map": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "annotate",
    "declare",
    "math.cos",
    "math.sin"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._check_simple_elementwise": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "Elementwise",
    "e",
    "numpy.allclose",
    "numpy.linspace",
    "numpy.sin",
    "numpy.zeros_like",
    "wrap"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._check_simple_elementwise.axpb": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "annotate",
    "math.sin"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._check_simple_reduction": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "Reduction",
    "numpy.linspace",
    "r",
    "wrap"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._test_scan": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "Scan",
    "numpy.arange",
    "numpy.cumsum",
    "numpy.int32",
    "numpy.testing.assert_equal",
    "scan",
    "wrap"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._test_scan.input_f": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "annotate"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._test_scan.output_f": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "annotate"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._test_scan_last_item": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "Scan",
    "numpy.cumsum",
    "numpy.int32",
    "numpy.random.randint",
    "numpy.testing.assert_equal",
    "scan",
    "wrap"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._test_scan_last_item.output_f": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "annotate"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._test_scan_with_external_func": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "Scan",
    "numpy.arange",
    "numpy.cumsum",
    "numpy.int32",
    "numpy.testing.assert_equal",
    "scan",
    "wrap"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._test_scan_with_external_func.input_f": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "annotate",
    "g"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._test_scan_with_external_func.output_f": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "annotate"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._test_segmented_scan": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "Scan",
    "numpy.int32",
    "numpy.random.randint",
    "numpy.testing.assert_equal",
    "scan",
    "wrap"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._test_segmented_scan.input_f": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "annotate"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._test_segmented_scan.output_f": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "annotate"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._test_segmented_scan.segment_f": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "annotate"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._test_unique_scan": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "Scan",
    "len",
    "numpy.int32",
    "numpy.random.randint",
    "numpy.sort",
    "numpy.testing.assert_equal",
    "numpy.unique",
    "numpy.zeros",
    "scan",
    "wrap"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._test_unique_scan.input_f": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "annotate"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT._test_unique_scan.output_f": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "annotate"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT.setUp": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "get_config"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.TestParallelUtilsJIT.tearDown": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "get_config"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.cos": {
  "data": {
   "shadows": "math.cos"
  },
  "type": "import"
 },
 "compyle.tests.test_parallel.external": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "annotate"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_parallel.importorskip": {
  "data": {
   "shadows": "pytest.importorskip"
  },
  "type": "import"
 },
 "compyle.tests.test_parallel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "compyle.tests.test_parallel.sin": {
  "data": {
   "shadows": "math.sin"
  },
  "type": "import"
 },
 "compyle.tests.test_parallel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "compyle.tests.test_translator": {
  "data": {},
  "type": "module"
 },
 "compyle.tests.test_translator.annotated_f": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "annotate",
    "declare"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.check_opencl_cuda_conversion": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "KnownType",
    "converter_obj",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "compyle.tests.test_translator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "compyle.tests.test_translator.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "compyle.tests.test_translator.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "compyle.tests.test_translator.test_annotated_function": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "CConverter",
    "compyle.tests.test_translator.annotated_f",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_attribute_access": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_bool_true_false_and_none": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_c_struct_helper": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "CStructHelper",
    "Fruit",
    "get_config",
    "numpy.dtype",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_c_struct_helper.Fruit": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compyle.tests.test_translator.test_c_struct_helper_empty_object": {
  "data": {
   "lineno": 1070,
   "symbols_in_volume": [
    "CStructHelper",
    "Fruit",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_c_struct_helper_empty_object.Fruit": {
  "data": {
   "lineno": 1072,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compyle.tests.test_translator.test_calling_function": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_calling_method_of_known_type": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "KnownType",
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_calling_method_of_known_type_in_method": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "KnownType",
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_calling_printf_with_string": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_class": {
  "data": {
   "lineno": 988,
   "symbols_in_volume": [
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_conditionals": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_cuda_conversion": {
  "data": {
   "lineno": 1191,
   "symbols_in_volume": [
    "compyle.tests.test_translator.check_opencl_cuda_conversion"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_cuda_local_conversion": {
  "data": {
   "lineno": 1220,
   "symbols_in_volume": [
    "CUDAConverter",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_cuda_local_conversion.knl": {
  "data": {
   "lineno": 1221,
   "symbols_in_volume": [
    "annotate"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_declare_call_declares_multiple_variables": {
  "data": {
   "lineno": 968,
   "symbols_in_volume": [
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_declare_call_declares_variable": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_declare_matrix": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_for": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_for_not_range_and_else_fails": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "NotImplementedError",
    "compyle.tests.test_translator.pytest",
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_for_with_break_continue": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_for_with_declare": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_for_with_decreasing_range": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_for_with_symbols": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_function_argument_types": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_handles_parsing_functions": {
  "data": {
   "lineno": 1256,
   "symbols_in_volume": [
    "CConverter",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_handles_parsing_functions.A": {
  "data": {
   "lineno": 1275,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compyle.tests.test_translator.test_handles_parsing_functions.A.f": {
  "data": {
   "lineno": 1276
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_handles_parsing_functions.f": {
  "data": {
   "lineno": 1258
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_if_block": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_known_math_constants": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_known_types_in_funcargs": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "KnownType",
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_multiple_assignment_expressions": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_multiple_boolops": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_nested_for_with_symbols": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_only_two_operands_supported_for_comparisons": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "NotImplementedError",
    "compyle.tests.test_translator.pytest",
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_opencl_class": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": [
    "OpenCLConverter",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_opencl_conversion": {
  "data": {
   "lineno": 1195,
   "symbols_in_volume": [
    "compyle.tests.test_translator.check_opencl_cuda_conversion"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_power": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_py3_annotations": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "CConverter",
    "compyle.tests.test_translator.pytest",
    "compyle.tests.test_translator.sys",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_raises_error_when_unknown_args_are_given": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "compyle.tests.test_translator.pytest",
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_simple_assignment_expression": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_simple_function_with_return": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_simple_function_without_return": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_subscript": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_ternary_operator": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_try_block_raises_error": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "NotImplementedError",
    "compyle.tests.test_translator.pytest",
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_two_fors": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_unsupported_method": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "NotImplementedError",
    "compyle.tests.test_translator.pytest",
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_user_supplied_detect_type": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_user_supplied_detect_type.dt": {
  "data": {
   "lineno": 511
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_while": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_while_else_raises_error": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "NotImplementedError",
    "compyle.tests.test_translator.pytest",
    "py2c",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_wrapping_class": {
  "data": {
   "lineno": 1092,
   "symbols_in_volume": [
    "CConverter",
    "CStructHelper",
    "Dummy",
    "get_config",
    "numpy.dtype",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.zeros",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_wrapping_class.Dummy": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compyle.tests.test_translator.test_wrapping_class.Dummy.__init__": {
  "data": {
   "lineno": 1096
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_wrapping_class.Dummy.method": {
  "data": {
   "lineno": 1103
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_wrapping_class_with_ignore_methods": {
  "data": {
   "lineno": 1138,
   "symbols_in_volume": [
    "CConverter",
    "Dummy1",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_wrapping_class_with_ignore_methods.Dummy1": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compyle.tests.test_translator.test_wrapping_class_with_ignore_methods.Dummy1.f": {
  "data": {
   "lineno": 1142
  },
  "type": "function"
 },
 "compyle.tests.test_translator.test_wrapping_class_with_ignore_methods.Dummy1.not_me": {
  "data": {
   "lineno": 1145
  },
  "type": "function"
 },
 "compyle.tests.test_transpiler": {
  "data": {},
  "type": "module"
 },
 "compyle.tests.test_transpiler.SIZE": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "compyle.tests.test_transpiler.TestTranspiler": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "compyle.tests.test_transpiler.unittest"
   ]
  },
  "type": "class"
 },
 "compyle.tests.test_transpiler.TestTranspiler.test_get_external_symbols_and_calls": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "NameError",
    "compyle.tests.test_transpiler.f",
    "compyle.tests.test_transpiler.g",
    "compyle.tests.test_transpiler.implicit_f",
    "compyle.tests.test_transpiler.my_printf",
    "compyle.tests.test_transpiler.undefined_call",
    "get_external_symbols_and_calls"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_transpiler.TestTranspiler.test_transpiler": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "Transpiler",
    "compyle.tests.test_transpiler.f",
    "compyle.tests.test_transpiler.g",
    "compyle.tests.test_transpiler.h"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_transpiler.f": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "compyle.tests.test_transpiler.h"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_transpiler.g": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "compyle.tests.test_transpiler.f"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_transpiler.h": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "math.sin"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_transpiler.implicit_f": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "compyle.tests.test_transpiler.SIZE",
    "compyle.tests.test_transpiler.my_printf",
    "math.sin",
    "range"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_transpiler.my_printf": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "compyle.tests.test_transpiler.sin": {
  "data": {
   "shadows": "math.sin"
  },
  "type": "import"
 },
 "compyle.tests.test_transpiler.undefined_call": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "foo"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_transpiler.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "compyle.tests.test_types": {
  "data": {},
  "type": "module"
 },
 "compyle.tests.test_types.TestAnnotate": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "compyle.tests.test_types.unittest"
   ]
  },
  "type": "class"
 },
 "compyle.tests.test_types.TestAnnotate.test_decorator_accepts_known_type_instance": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "KnownType"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_types.TestAnnotate.test_decorator_accepts_known_type_instance.f": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "KnownType",
    "annotate"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_types.TestAnnotate.test_decorator_raises_error_for_unknown_error": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "TypeError",
    "annotate"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_types.TestAnnotate.test_decorator_raises_error_for_unknown_error.f": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "compyle.tests.test_types.TestAnnotate.test_reversed_annotation": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "KnownType"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_types.TestAnnotate.test_reversed_annotation.f": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "annotate"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_types.TestAnnotate.test_simple_annotation": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "KnownType"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_types.TestAnnotate.test_simple_annotation.f": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "annotate"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_types.TestDeclare": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "compyle.tests.test_types.unittest"
   ]
  },
  "type": "class"
 },
 "compyle.tests.test_types.TestDeclare.test_declare": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "declare",
    "numpy.all",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_types.TestDeclare.test_declare_with_address_space": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "declare",
    "numpy.all",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_types.TestDeclare.test_declare_with_type": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "declare",
    "numpy.all",
    "numpy.float32",
    "numpy.int32",
    "numpy.uint32",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "compyle.tests.test_types.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "compyle.tests.test_types.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "compyle.translator": {
  "data": {
   "symbols_in_volume": [
    "compyle.translator.sys"
   ]
  },
  "type": "module"
 },
 "compyle.translator.CConverter": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "compyle.translator.ast"
   ]
  },
  "type": "class"
 },
 "compyle.translator.CConverter.__init__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "compyle.translator.ast",
    "compyle.translator.detect_type",
    "set"
   ]
  },
  "type": "function"
 },
 "compyle.translator.CConverter._body_has_return": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "compyle.translator.re"
   ]
  },
  "type": "function"
 },
 "compyle.translator.CConverter._check_if_integer": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "ValueError",
    "compyle.translator.ast",
    "int"
   ]
  },
  "type": "function"
 },
 "compyle.translator.CConverter._get_function_args": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "compyle.translator.PY_VER",
    "compyle.translator.ast",
    "len",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "compyle.translator.CConverter._get_local_arg": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "compyle.translator.CConverter._get_local_declarations": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "compyle.translator.CConverter._get_return_type": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "compyle.translator.CConverter._get_self_type": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "KnownType"
   ]
  },
  "type": "function"
 },
 "compyle.translator.CConverter._get_variable_declaration": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "get_declare_info",
    "isinstance",
    "tuple",
    "vars"
   ]
  },
  "type": "function"
 },
 "compyle.translator.CConverter._indent_block": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "compyle.translator.CConverter._remove_docstring": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "compyle.translator.ast",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compyle.translator.CConverter.convert": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "compyle.translator.ast"
   ]
  },
  "type": "function"
 },
 "compyle.translator.CConverter.error": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "compyle.translator.CConverter.get_declarations": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "compyle.translator.CConverter.get_struct_from_instance": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "compyle.translator.CStructHelper"
   ]
  },
  "type": "function"
 },
 "compyle.translator.CConverter.parse": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "TypeError",
    "compyle.translator.types",
    "hasattr",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "compyle.translator.CConverter.parse_function": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "compyle.translator.inspect",
    "getattr",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.translator.CConverter.parse_instance": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "compyle.translator.inspect",
    "dir",
    "getattr",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Add": {
  "data": {
   "lineno": 297
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_And": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Assign": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "compyle.translator.ast",
    "isinstance",
    "len",
    "type"
   ]
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Attribute": {
  "data": {
   "lineno": 322
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_AugAssign": {
  "data": {
   "lineno": 325
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_BinOp": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "compyle.translator.ast",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_BoolOp": {
  "data": {
   "lineno": 339
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Break": {
  "data": {
   "lineno": 343
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Call": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "compyle.translator.ast",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_ClassDef": {
  "data": {
   "lineno": 372
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Compare": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Continue": {
  "data": {
   "lineno": 386
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Div": {
  "data": {
   "lineno": 389
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Eq": {
  "data": {
   "lineno": 392
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Expr": {
  "data": {
   "lineno": 395
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_For": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "compyle.translator.ast",
    "isinstance",
    "len",
    "set",
    "textwrap.dedent",
    "type"
   ]
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_FunctionDef": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "compyle.translator.PY_VER",
    "len",
    "set",
    "textwrap.wrap"
   ]
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Gt": {
  "data": {
   "lineno": 565
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_GtE": {
  "data": {
   "lineno": 568
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_If": {
  "data": {
   "lineno": 571
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_IfExp": {
  "data": {
   "lineno": 586
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Is": {
  "data": {
   "lineno": 594
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_IsNot": {
  "data": {
   "lineno": 597
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Lt": {
  "data": {
   "lineno": 600
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_LtE": {
  "data": {
   "lineno": 603
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Mod": {
  "data": {
   "lineno": 606
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Module": {
  "data": {
   "lineno": 609
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Mult": {
  "data": {
   "lineno": 614
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Name": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "id",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_NameConstant": {
  "data": {
   "lineno": 626
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Not": {
  "data": {
   "lineno": 633
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_NotEq": {
  "data": {
   "lineno": 636
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Num": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Or": {
  "data": {
   "lineno": 642
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Pass": {
  "data": {
   "lineno": 645
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Return": {
  "data": {
   "lineno": 648
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Str": {
  "data": {
   "lineno": 654
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Sub": {
  "data": {
   "lineno": 651
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_Subscript": {
  "data": {
   "lineno": 657
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_TryExcept": {
  "data": {
   "lineno": 662
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_USub": {
  "data": {
   "lineno": 670
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_UnaryOp": {
  "data": {
   "lineno": 667
  },
  "type": "function"
 },
 "compyle.translator.CConverter.visit_While": {
  "data": {
   "lineno": 673
  },
  "type": "function"
 },
 "compyle.translator.CStructHelper": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compyle.translator.CStructHelper.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "get_config"
   ]
  },
  "type": "function"
 },
 "compyle.translator.CStructHelper._get_public_vars": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "isinstance",
    "vars"
   ]
  },
  "type": "function"
 },
 "compyle.translator.CStructHelper.get_array": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "compyle.translator.types",
    "getattr",
    "len",
    "numpy.dtype",
    "numpy.empty",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "sorted"
   ]
  },
  "type": "function"
 },
 "compyle.translator.CStructHelper.get_code": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "mako.template.Template",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.translator.CStructHelper.parse": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "compyle.translator.CUDAConverter": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "compyle.translator.OpenCLConverter"
   ]
  },
  "type": "class"
 },
 "compyle.translator.CUDAConverter.__init__": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "compyle.translator.CUDAConverter",
    "compyle.translator.detect_type",
    "compyle.translator.ocl_detect_type",
    "super"
   ]
  },
  "type": "function"
 },
 "compyle.translator.CUDAConverter._get_local_arg": {
  "data": {
   "lineno": 735
  },
  "type": "function"
 },
 "compyle.translator.CUDAConverter._get_local_declarations": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "compyle.translator.CUDAConverter._get_local_info": {
  "data": {
   "lineno": 738
  },
  "type": "function"
 },
 "compyle.translator.CUDAConverter.parse_function": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "compyle.translator.inspect",
    "getattr",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.translator.OpenCLConverter": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "compyle.translator.CConverter"
   ]
  },
  "type": "class"
 },
 "compyle.translator.OpenCLConverter.__init__": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "compyle.translator.OpenCLConverter",
    "compyle.translator.detect_type",
    "compyle.translator.ocl_detect_type",
    "super"
   ]
  },
  "type": "function"
 },
 "compyle.translator.OpenCLConverter._get_self_type": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "KnownType"
   ]
  },
  "type": "function"
 },
 "compyle.translator.PY_VER": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "compyle.translator.Template": {
  "data": {
   "shadows": "mako.template.Template"
  },
  "type": "import"
 },
 "compyle.translator.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "compyle.translator.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "compyle.translator.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "compyle.translator.detect_type": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "CodeGenerationError",
    "all_numeric",
    "bool",
    "float",
    "int",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "compyle.translator.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "compyle.translator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "compyle.translator.ocl_detect_pointer_base_type": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "Exception",
    "KnownType",
    "NotImplementedError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compyle.translator.ocl_detect_type": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "KnownType",
    "compyle.translator.detect_type",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compyle.translator.py2c": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "compyle.translator.CConverter",
    "compyle.translator.detect_type",
    "print"
   ]
  },
  "type": "function"
 },
 "compyle.translator.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "compyle.translator.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "compyle.translator.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "compyle.translator.wrap": {
  "data": {
   "shadows": "textwrap.wrap"
  },
  "type": "import"
 },
 "compyle.transpiler": {
  "data": {
   "symbols_in_volume": [
    "compyle.transpiler.BUILTIN_SYMBOLS",
    "compyle.transpiler.math",
    "dir",
    "set"
   ]
  },
  "type": "module"
 },
 "compyle.transpiler.BUILTINS": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "compyle.transpiler.BUILTIN_SYMBOLS": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "compyle.transpiler.CLUDA_PREAMBLE": {
  "data": {
   "shadows": "pycuda._cluda.CLUDA_PREAMBLE"
  },
  "type": "import"
 },
 "compyle.transpiler.CY_BUILTIN_SYMBOLS": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "compyle.transpiler.CodeBlock": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compyle.transpiler.CodeBlock.__eq__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "compyle.transpiler.CodeBlock",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "compyle.transpiler.CodeBlock.__init__": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "compyle.transpiler.OCL_BUILTIN_SYMBOLS": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "compyle.transpiler.SourceModule": {
  "data": {
   "shadows": "pycuda.compiler.SourceModule"
  },
  "type": "import"
 },
 "compyle.transpiler.Template": {
  "data": {
   "shadows": "mako.template.Template"
  },
  "type": "import"
 },
 "compyle.transpiler.Transpiler": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compyle.transpiler.Transpiler.__init__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "CUDAConverter",
    "CythonGenerator",
    "OpenCLConverter",
    "mako.template.Template",
    "pycuda._cluda.CLUDA_PREAMBLE",
    "pyopencl._cluda.CLUDA_PREAMBLE",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.transpiler.Transpiler._get_comment": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "compyle.transpiler.Transpiler._handle_external": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "compyle.transpiler.get_external_symbols_and_calls",
    "print"
   ]
  },
  "type": "function"
 },
 "compyle.transpiler.Transpiler._handle_externs": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "get_extern_code"
   ]
  },
  "type": "function"
 },
 "compyle.transpiler.Transpiler._handle_symbol": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "CodeGenerationError",
    "bool",
    "float",
    "int",
    "isinstance",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "compyle.transpiler.Transpiler._handle_symbols": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "compyle.transpiler.Transpiler.add": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "compyle.transpiler.CodeBlock"
   ]
  },
  "type": "function"
 },
 "compyle.transpiler.Transpiler.add_code": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "compyle.transpiler.CodeBlock"
   ]
  },
  "type": "function"
 },
 "compyle.transpiler.Transpiler.compile": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "ExtModule",
    "compyle.transpiler.convert_to_float_if_needed",
    "get_context",
    "pycuda.compiler.SourceModule",
    "pyopencl.Program"
   ]
  },
  "type": "function"
 },
 "compyle.transpiler.Transpiler.get_code": {
  "data": {
   "lineno": 272
  },
  "type": "function"
 },
 "compyle.transpiler.cl": {
  "data": {
   "shadows": "pyopencl"
  },
  "type": "import"
 },
 "compyle.transpiler.convert_to_float_if_needed": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "compyle.transpiler.re",
    "get_config"
   ]
  },
  "type": "function"
 },
 "compyle.transpiler.cu": {
  "data": {
   "shadows": "pycuda"
  },
  "type": "import"
 },
 "compyle.transpiler.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "compyle.transpiler.filter_calls": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "compyle.transpiler.BUILTINS"
   ]
  },
  "type": "function"
 },
 "compyle.transpiler.get_external_symbols_and_calls": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "NameError",
    "compyle.transpiler.CY_BUILTIN_SYMBOLS",
    "compyle.transpiler.OCL_BUILTIN_SYMBOLS",
    "compyle.transpiler.filter_calls",
    "compyle.transpiler.importlib",
    "compyle.transpiler.inspect",
    "get_unknown_names_and_calls",
    "getattr",
    "hasattr",
    "isinstance",
    "set",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "compyle.transpiler.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "compyle.transpiler.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "compyle.transpiler.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "compyle.transpiler.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "compyle.types": {
  "data": {
   "symbols_in_volume": [
    "compyle.types.KnownType",
    "compyle.types._inject_types_in_module",
    "dict",
    "numpy.bool",
    "numpy.dtype",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8"
   ]
  },
  "type": "module"
 },
 "compyle.types.C_NP_TYPE_MAP": {
  "data": {
   "lineno": 167
  },
  "type": "constant"
 },
 "compyle.types.KnownType": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compyle.types.KnownType.__eq__": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "compyle.types.KnownType.__init__": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "compyle.types.KnownType.__repr__": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "compyle.types.NP_C_TYPE_MAP": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "compyle.types.TYPES": {
  "data": {
   "lineno": 116
  },
  "type": "constant"
 },
 "compyle.types.Undefined": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "compyle.types._clean_name": {
  "data": {
   "lineno": 269
  },
  "type": "function"
 },
 "compyle.types._declare": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "compyle.types.get_declare_info",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "compyle.types._get_type": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "TypeError",
    "compyle.types.KnownType",
    "compyle.types.TYPES",
    "isinstance",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "compyle.types._inject_types_in_module": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "compyle.types.TYPES",
    "globals",
    "type"
   ]
  },
  "type": "function"
 },
 "compyle.types.annotate": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "compyle.types._clean_name",
    "compyle.types._get_type",
    "isinstance",
    "str",
    "type",
    "type.split",
    "wrapper"
   ]
  },
  "type": "function"
 },
 "compyle.types.annotate.wrapper": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "compyle.types.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "compyle.types.ctype_to_dtype": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "compyle.types.C_NP_TYPE_MAP",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "compyle.types.declare": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "compyle.types._declare",
    "range",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "compyle.types.dtype_to_ctype": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "compyle.types.NP_C_TYPE_MAP",
    "numpy.dtype",
    "pyopencl.compyte.dtypes.dtype_to_ctype"
   ]
  },
  "type": "function"
 },
 "compyle.types.dtype_to_ctype_pyopencl": {
  "data": {
   "shadows": "pyopencl.compyte.dtypes.dtype_to_ctype"
  },
  "type": "import"
 },
 "compyle.types.dtype_to_knowntype": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "compyle.types.TYPES",
    "pyopencl.compyte.dtypes.dtype_to_ctype"
   ]
  },
  "type": "function"
 },
 "compyle.types.get_declare_info": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "compyle.types.ast",
    "isinstance",
    "len",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "compyle.types.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 }
}