{
 "strsimpy": {
  "data": {},
  "type": "module"
 },
 "strsimpy.__name__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "strsimpy.__version__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "strsimpy.cosine": {
  "data": {},
  "type": "module"
 },
 "strsimpy.cosine.Cosine": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "strsimpy.cosine.Cosine.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "strsimpy.cosine.Cosine._dot_product": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "len",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "strsimpy.cosine.Cosine._norm": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "staticmethod",
    "strsimpy.cosine.math"
   ]
  },
  "type": "function"
 },
 "strsimpy.cosine.Cosine.distance": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "strsimpy.cosine.Cosine.similarity": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "TypeError",
    "len"
   ]
  },
  "type": "function"
 },
 "strsimpy.cosine.Cosine.similarity_profiles": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "strsimpy.cosine.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "strsimpy.cosine_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "strsimpy.cosine_test.unittest"
   ]
  },
  "type": "module"
 },
 "strsimpy.cosine_test.TestCosine": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "strsimpy.cosine_test.unittest"
   ]
  },
  "type": "class"
 },
 "strsimpy.cosine_test.TestCosine.test_cosine": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "Cosine",
    "len",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "strsimpy.cosine_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "strsimpy.damerau": {
  "data": {},
  "type": "module"
 },
 "strsimpy.damerau.Damerau": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "strsimpy.damerau.Damerau.distance": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "int",
    "len",
    "min",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "strsimpy.damerau_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "strsimpy.damerau_test.unittest"
   ]
  },
  "type": "module"
 },
 "strsimpy.damerau_test.TestDamerau": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "strsimpy.damerau_test.unittest"
   ]
  },
  "type": "class"
 },
 "strsimpy.damerau_test.TestDamerau.test_damerau": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "Damerau",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "strsimpy.damerau_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "strsimpy.jaccard": {
  "data": {},
  "type": "module"
 },
 "strsimpy.jaccard.Jaccard": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "strsimpy.jaccard.Jaccard.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "strsimpy.jaccard.Jaccard.distance": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "strsimpy.jaccard.Jaccard.similarity": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "strsimpy.jaccard_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "strsimpy.jaccard_test.unittest"
   ]
  },
  "type": "module"
 },
 "strsimpy.jaccard_test.TestJaccard": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "strsimpy.jaccard_test.unittest"
   ]
  },
  "type": "class"
 },
 "strsimpy.jaccard_test.TestJaccard.test_jaccard": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "Jaccard",
    "len",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "strsimpy.jaccard_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "strsimpy.jaro_winkler": {
  "data": {},
  "type": "module"
 },
 "strsimpy.jaro_winkler.JaroWinkler": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "strsimpy.jaro_winkler.JaroWinkler.__init__": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "strsimpy.jaro_winkler.JaroWinkler.distance": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "strsimpy.jaro_winkler.JaroWinkler.get_threshold": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "strsimpy.jaro_winkler.JaroWinkler.matches": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "int",
    "len",
    "max",
    "min",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "strsimpy.jaro_winkler.JaroWinkler.similarity": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "min"
   ]
  },
  "type": "function"
 },
 "strsimpy.jaro_winkler_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "strsimpy.jaro_winkler_test.unittest"
   ]
  },
  "type": "module"
 },
 "strsimpy.jaro_winkler_test.TestJaroWinkler": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "strsimpy.jaro_winkler_test.unittest"
   ]
  },
  "type": "class"
 },
 "strsimpy.jaro_winkler_test.TestJaroWinkler.test_jarowinkler": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "JaroWinkler",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "strsimpy.jaro_winkler_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "strsimpy.levenshtein": {
  "data": {},
  "type": "module"
 },
 "strsimpy.levenshtein.Levenshtein": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "strsimpy.levenshtein.Levenshtein.distance": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "min",
    "range"
   ]
  },
  "type": "function"
 },
 "strsimpy.levenshtein_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "strsimpy.levenshtein_test.unittest"
   ]
  },
  "type": "module"
 },
 "strsimpy.levenshtein_test.TestLevenshtein": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "strsimpy.levenshtein_test.unittest"
   ]
  },
  "type": "class"
 },
 "strsimpy.levenshtein_test.TestLevenshtein.test_levenshtein": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "Levenshtein",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "strsimpy.levenshtein_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "strsimpy.longest_common_subsequence": {
  "data": {},
  "type": "module"
 },
 "strsimpy.longest_common_subsequence.LongestCommonSubsequence": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "strsimpy.longest_common_subsequence.LongestCommonSubsequence.distance": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "TypeError",
    "len"
   ]
  },
  "type": "function"
 },
 "strsimpy.longest_common_subsequence.LongestCommonSubsequence.length": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "max",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "strsimpy.longest_common_subsequence_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "strsimpy.longest_common_subsequence_test.unittest"
   ]
  },
  "type": "module"
 },
 "strsimpy.longest_common_subsequence_test.LongestCommonSubsequenceTest": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "strsimpy.longest_common_subsequence_test.unittest"
   ]
  },
  "type": "class"
 },
 "strsimpy.longest_common_subsequence_test.LongestCommonSubsequenceTest.test_longest_common_subsequence": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "LongestCommonSubsequence"
   ]
  },
  "type": "function"
 },
 "strsimpy.longest_common_subsequence_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "strsimpy.metric_lcs": {
  "data": {},
  "type": "module"
 },
 "strsimpy.metric_lcs.MetricLCS": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "strsimpy.metric_lcs.MetricLCS.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "LongestCommonSubsequence"
   ]
  },
  "type": "function"
 },
 "strsimpy.metric_lcs.MetricLCS.distance": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "strsimpy.metric_lcs_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "strsimpy.metric_lcs_test.unittest"
   ]
  },
  "type": "module"
 },
 "strsimpy.metric_lcs_test.TestMetricLCS": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "strsimpy.metric_lcs_test.unittest"
   ]
  },
  "type": "class"
 },
 "strsimpy.metric_lcs_test.TestMetricLCS.test_metric_lcs": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "MetricLCS",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "strsimpy.metric_lcs_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "strsimpy.ngram": {
  "data": {},
  "type": "module"
 },
 "strsimpy.ngram.NGram": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "strsimpy.ngram.NGram.__init__": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "strsimpy.ngram.NGram.distance": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "max",
    "min",
    "range"
   ]
  },
  "type": "function"
 },
 "strsimpy.ngram_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "strsimpy.ngram_test.unittest"
   ]
  },
  "type": "module"
 },
 "strsimpy.ngram_test.TestNGram": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "strsimpy.ngram_test.unittest"
   ]
  },
  "type": "class"
 },
 "strsimpy.ngram_test.TestNGram.test_ngram": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "NGram",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "strsimpy.ngram_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "strsimpy.normalized_levenshtein": {
  "data": {},
  "type": "module"
 },
 "strsimpy.normalized_levenshtein.NormalizedLevenshtein": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "strsimpy.normalized_levenshtein.NormalizedLevenshtein.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "Levenshtein"
   ]
  },
  "type": "function"
 },
 "strsimpy.normalized_levenshtein.NormalizedLevenshtein.distance": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "strsimpy.normalized_levenshtein.NormalizedLevenshtein.similarity": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "strsimpy.normalized_levenshtein_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "strsimpy.normalized_levenshtein_test.unittest"
   ]
  },
  "type": "module"
 },
 "strsimpy.normalized_levenshtein_test.TestNormalizedLevenshtein": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "strsimpy.normalized_levenshtein_test.unittest"
   ]
  },
  "type": "class"
 },
 "strsimpy.normalized_levenshtein_test.TestNormalizedLevenshtein.test_normalized_levenshtein": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "NormalizedLevenshtein",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "strsimpy.normalized_levenshtein_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "strsimpy.optimal_string_alignment": {
  "data": {},
  "type": "module"
 },
 "strsimpy.optimal_string_alignment.OptimalStringAlignment": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "strsimpy.optimal_string_alignment.OptimalStringAlignment.distance": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "min",
    "range"
   ]
  },
  "type": "function"
 },
 "strsimpy.optimal_string_alignment_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "strsimpy.optimal_string_alignment_test.unittest"
   ]
  },
  "type": "module"
 },
 "strsimpy.optimal_string_alignment_test.TestOptimalStringAlignment": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "strsimpy.optimal_string_alignment_test.unittest"
   ]
  },
  "type": "class"
 },
 "strsimpy.optimal_string_alignment_test.TestOptimalStringAlignment.test_optimal_string_alignment": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "OptimalStringAlignment",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "strsimpy.optimal_string_alignment_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "strsimpy.overlap_coefficient": {
  "data": {},
  "type": "module"
 },
 "strsimpy.overlap_coefficient.OverlapCoefficient": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "strsimpy.overlap_coefficient.OverlapCoefficient.__init__": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "strsimpy.overlap_coefficient.OverlapCoefficient.distance": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "strsimpy.overlap_coefficient.OverlapCoefficient.similarity": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "len",
    "min",
    "set"
   ]
  },
  "type": "function"
 },
 "strsimpy.overlap_coefficient_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "strsimpy.overlap_coefficient_test.unittest"
   ]
  },
  "type": "module"
 },
 "strsimpy.overlap_coefficient_test.OverlapCoefficient": {
  "data": {
   "shadows": "strsimpy.overlap_coefficient.OverlapCoefficient"
  },
  "type": "import"
 },
 "strsimpy.overlap_coefficient_test.TestOverlapCoefficient": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "strsimpy.overlap_coefficient_test.unittest"
   ]
  },
  "type": "class"
 },
 "strsimpy.overlap_coefficient_test.TestOverlapCoefficient.test_overlap_coefficient_halfsimilar_return1": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "strsimpy.overlap_coefficient.OverlapCoefficient"
   ]
  },
  "type": "function"
 },
 "strsimpy.overlap_coefficient_test.TestOverlapCoefficient.test_overlap_coefficient_onestringissubset_return1": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "print",
    "str",
    "strsimpy.overlap_coefficient.OverlapCoefficient"
   ]
  },
  "type": "function"
 },
 "strsimpy.overlap_coefficient_test.TestOverlapCoefficient.test_overlap_coefficient_onestringissubsetofother_return0": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "print",
    "str",
    "strsimpy.overlap_coefficient.OverlapCoefficient"
   ]
  },
  "type": "function"
 },
 "strsimpy.overlap_coefficient_test.TestOverlapCoefficient.test_overlap_coefficient_onestringissubsetofother_return1": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "print",
    "str",
    "strsimpy.overlap_coefficient.OverlapCoefficient"
   ]
  },
  "type": "function"
 },
 "strsimpy.overlap_coefficient_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "strsimpy.qgram": {
  "data": {},
  "type": "module"
 },
 "strsimpy.qgram.QGram": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "strsimpy.qgram.QGram.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "strsimpy.qgram.QGram.distance": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "strsimpy.qgram.QGram.distance_profile": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "abs",
    "int",
    "set",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "strsimpy.qgram_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "strsimpy.qgram_test.unittest"
   ]
  },
  "type": "module"
 },
 "strsimpy.qgram_test.TestQGram": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "strsimpy.qgram_test.unittest"
   ]
  },
  "type": "class"
 },
 "strsimpy.qgram_test.TestQGram.test_qgram": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "QGram",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "strsimpy.qgram_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "strsimpy.shingle_based": {
  "data": {
   "symbols_in_volume": [
    "strsimpy.shingle_based.re"
   ]
  },
  "type": "module"
 },
 "strsimpy.shingle_based.ShingleBased": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "strsimpy.shingle_based.ShingleBased.__init__": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "strsimpy.shingle_based.ShingleBased.get_k": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "strsimpy.shingle_based.ShingleBased.get_profile": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "dict",
    "int",
    "len",
    "range",
    "str",
    "strsimpy.shingle_based._SPACE_PATTERN"
   ]
  },
  "type": "function"
 },
 "strsimpy.shingle_based._SPACE_PATTERN": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "strsimpy.shingle_based.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "strsimpy.sift4_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "strsimpy.sift4_test.unittest"
   ]
  },
  "type": "module"
 },
 "strsimpy.sift4_test.SIFT4Test": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "strsimpy.sift4_test.unittest"
   ]
  },
  "type": "class"
 },
 "strsimpy.sift4_test.SIFT4Test.testSIFT4": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "SIFT4"
   ]
  },
  "type": "function"
 },
 "strsimpy.sift4_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "strsimpy.sorensen_dice": {
  "data": {},
  "type": "module"
 },
 "strsimpy.sorensen_dice.SorensenDice": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "strsimpy.sorensen_dice.SorensenDice.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "strsimpy.sorensen_dice.SorensenDice.distance": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "strsimpy.sorensen_dice.SorensenDice.similarity": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "strsimpy.sorensen_dice_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "strsimpy.sorensen_dice_test.unittest"
   ]
  },
  "type": "module"
 },
 "strsimpy.sorensen_dice_test.TestSorensenDice": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "strsimpy.sorensen_dice_test.unittest"
   ]
  },
  "type": "class"
 },
 "strsimpy.sorensen_dice_test.TestSorensenDice.test_sorensen_dice": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "SorensenDice",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "strsimpy.sorensen_dice_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "strsimpy.string_distance": {
  "data": {},
  "type": "module"
 },
 "strsimpy.string_distance.MetricStringDistance": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "strsimpy.string_distance.StringDistance"
   ]
  },
  "type": "class"
 },
 "strsimpy.string_distance.MetricStringDistance.distance": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "strsimpy.string_distance.NormalizedStringDistance": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "strsimpy.string_distance.StringDistance"
   ]
  },
  "type": "class"
 },
 "strsimpy.string_distance.NormalizedStringDistance.distance": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "strsimpy.string_distance.StringDistance": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "strsimpy.string_distance.StringDistance.distance": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "strsimpy.string_similarity": {
  "data": {},
  "type": "module"
 },
 "strsimpy.string_similarity.NormalizedStringSimilarity": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "strsimpy.string_similarity.StringSimilarity"
   ]
  },
  "type": "class"
 },
 "strsimpy.string_similarity.NormalizedStringSimilarity.similarity": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "strsimpy.string_similarity.StringSimilarity": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "strsimpy.string_similarity.StringSimilarity.similarity": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "strsimpy.weighted_levenshtein": {
  "data": {},
  "type": "module"
 },
 "strsimpy.weighted_levenshtein.WeightedLevenshtein": {
  "data": {
   "lineno": 37
  },
  "type": "class"
 },
 "strsimpy.weighted_levenshtein.WeightedLevenshtein.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "strsimpy.weighted_levenshtein.default_deletion_cost",
    "strsimpy.weighted_levenshtein.default_insertion_cost",
    "strsimpy.weighted_levenshtein.default_substitution_cost"
   ]
  },
  "type": "function"
 },
 "strsimpy.weighted_levenshtein.WeightedLevenshtein.distance": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "TypeError",
    "functools.reduce",
    "len",
    "min",
    "range"
   ]
  },
  "type": "function"
 },
 "strsimpy.weighted_levenshtein.default_deletion_cost": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "strsimpy.weighted_levenshtein.default_insertion_cost": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "strsimpy.weighted_levenshtein.default_substitution_cost": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "strsimpy.weighted_levenshtein.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "strsimpy.weighted_levenshtein_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "strsimpy.weighted_levenshtein_test.unittest"
   ]
  },
  "type": "module"
 },
 "strsimpy.weighted_levenshtein_test.TestWeightedLevenshtein": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "strsimpy.weighted_levenshtein_test.unittest"
   ]
  },
  "type": "class"
 },
 "strsimpy.weighted_levenshtein_test.TestWeightedLevenshtein.test_weighted_levenshtein": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "WeightedLevenshtein",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "strsimpy.weighted_levenshtein_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 }
}