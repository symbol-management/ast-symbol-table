{
 "requests_mock": {
  "data": {},
  "type": "module"
 },
 "requests_mock.ANY": {
  "data": {
   "shadows": "requests_mock.adapter.ANY"
  },
  "type": "import"
 },
 "requests_mock.Adapter": {
  "data": {
   "shadows": "requests_mock.adapter.Adapter"
  },
  "type": "import"
 },
 "requests_mock.CookieJar": {
  "data": {
   "shadows": "requests_mock.response.CookieJar"
  },
  "type": "import"
 },
 "requests_mock.DELETE": {
  "data": {
   "shadows": "requests_mock.mocker.DELETE"
  },
  "type": "import"
 },
 "requests_mock.GET": {
  "data": {
   "shadows": "requests_mock.mocker.GET"
  },
  "type": "import"
 },
 "requests_mock.HEAD": {
  "data": {
   "shadows": "requests_mock.mocker.HEAD"
  },
  "type": "import"
 },
 "requests_mock.MockException": {
  "data": {
   "shadows": "requests_mock.exceptions.MockException"
  },
  "type": "import"
 },
 "requests_mock.Mocker": {
  "data": {
   "shadows": "requests_mock.mocker.Mocker"
  },
  "type": "import"
 },
 "requests_mock.MockerCore": {
  "data": {
   "shadows": "requests_mock.mocker.MockerCore"
  },
  "type": "import"
 },
 "requests_mock.NoMockAddress": {
  "data": {
   "shadows": "requests_mock.exceptions.NoMockAddress"
  },
  "type": "import"
 },
 "requests_mock.OPTIONS": {
  "data": {
   "shadows": "requests_mock.mocker.OPTIONS"
  },
  "type": "import"
 },
 "requests_mock.PATCH": {
  "data": {
   "shadows": "requests_mock.mocker.PATCH"
  },
  "type": "import"
 },
 "requests_mock.POST": {
  "data": {
   "shadows": "requests_mock.mocker.POST"
  },
  "type": "import"
 },
 "requests_mock.PUT": {
  "data": {
   "shadows": "requests_mock.mocker.PUT"
  },
  "type": "import"
 },
 "requests_mock.__all__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "requests_mock.adapter": {
  "data": {
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "module"
 },
 "requests_mock.adapter.ANY": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "requests_mock.adapter.Adapter": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "requests.adapters.BaseAdapter",
    "requests_mock.adapter._RequestHistoryTracker"
   ]
  },
  "type": "class"
 },
 "requests_mock.adapter.Adapter.__init__": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "requests_mock.adapter.Adapter",
    "super"
   ]
  },
  "type": "function"
 },
 "requests_mock.adapter.Adapter.add_matcher": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "matcher"
   ]
  },
  "type": "function"
 },
 "requests_mock.adapter.Adapter.close": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "requests_mock.adapter.Adapter.register_uri": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "RuntimeError",
    "matcher",
    "requests_mock.adapter._Matcher",
    "requests_mock.response._MatcherResponse"
   ]
  },
  "type": "function"
 },
 "requests_mock.adapter.Adapter.send": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "Exception",
    "matcher",
    "requests_mock.adapter.weakref",
    "requests_mock.exceptions.NoMockAddress",
    "requests_mock.request._RequestObjectProxy",
    "reversed"
   ]
  },
  "type": "function"
 },
 "requests_mock.adapter.BaseAdapter": {
  "data": {
   "shadows": "requests.adapters.BaseAdapter"
  },
  "type": "import"
 },
 "requests_mock.adapter._Matcher": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "requests_mock.adapter._RequestHistoryTracker"
   ]
  },
  "type": "class"
 },
 "requests_mock.adapter._Matcher.__call__": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "len",
    "requests_mock.adapter._RunRealHTTP"
   ]
  },
  "type": "function"
 },
 "requests_mock.adapter._Matcher.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "isinstance",
    "requests_mock.adapter._Matcher",
    "requests_mock.adapter.six",
    "six.moves.urllib.parse.urlparse",
    "super"
   ]
  },
  "type": "function"
 },
 "requests_mock.adapter._Matcher._match": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "requests_mock.adapter._Matcher._match_additional": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "TypeError",
    "callable"
   ]
  },
  "type": "function"
 },
 "requests_mock.adapter._Matcher._match_headers": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "KeyError",
    "isinstance",
    "requests_mock.adapter.six"
   ]
  },
  "type": "function"
 },
 "requests_mock.adapter._Matcher._match_method": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "requests_mock.adapter.ANY"
   ]
  },
  "type": "function"
 },
 "requests_mock.adapter._Matcher._match_url": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "requests_mock.adapter.ANY",
    "requests_mock.adapter.six",
    "six.moves.urllib.parse.parse_qs"
   ]
  },
  "type": "function"
 },
 "requests_mock.adapter._MatcherResponse": {
  "data": {
   "shadows": "requests_mock.response._MatcherResponse"
  },
  "type": "import"
 },
 "requests_mock.adapter._RequestHistoryTracker": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "requests_mock.adapter._RequestHistoryTracker.__init__": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "requests_mock.adapter._RequestHistoryTracker._add_to_history": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "requests_mock.adapter._RequestHistoryTracker.call_count": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "requests_mock.adapter._RequestHistoryTracker.called": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "requests_mock.adapter._RequestHistoryTracker.called_once": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "requests_mock.adapter._RequestHistoryTracker.last_request": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "IndexError",
    "property"
   ]
  },
  "type": "function"
 },
 "requests_mock.adapter._RequestObjectProxy": {
  "data": {
   "shadows": "requests_mock.request._RequestObjectProxy"
  },
  "type": "import"
 },
 "requests_mock.adapter._RunRealHTTP": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "requests_mock.adapter.__all__": {
  "data": {
   "lineno": 287
  },
  "type": "constant"
 },
 "requests_mock.adapter.exceptions": {
  "data": {
   "shadows": "requests_mock.exceptions"
  },
  "type": "import"
 },
 "requests_mock.adapter.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "requests_mock.adapter.urlparse": {
  "data": {
   "shadows": "six.moves.urllib.parse"
  },
  "type": "import"
 },
 "requests_mock.adapter.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "requests_mock.compat": {
  "data": {
   "symbols_in_volume": [
    "requests_mock.compat._FakeHTTPResponse",
    "requests_mock.compat._requests_version",
    "requests_mock.compat._versiontuple",
    "requests_mock.compat.requests"
   ]
  },
  "type": "module"
 },
 "requests_mock.compat._FakeHTTPMessage": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "requests_mock.compat._FakeHTTPMessage.__init__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "requests_mock.compat._FakeHTTPMessage.get_all": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "requests_mock.compat._FakeHTTPMessage.getheaders": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "requests_mock.compat._FakeHTTPResponse": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "requests_mock.compat._FakeHTTPResponse.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "requests_mock.compat._FakeHTTPMessage"
   ]
  },
  "type": "function"
 },
 "requests_mock.compat._FakeHTTPResponse.isclosed": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "requests_mock.compat._fake_http_response": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "requests_mock.compat._requests_version": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "requests_mock.compat._versiontuple": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "int",
    "map",
    "tuple"
   ]
  },
  "type": "function"
 },
 "requests_mock.compat.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "requests_mock.contrib": {
  "data": {},
  "type": "module"
 },
 "requests_mock.contrib._pytest_plugin": {
  "data": {},
  "type": "module"
 },
 "requests_mock.contrib._pytest_plugin.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "requests_mock.contrib._pytest_plugin.pytest_addoption": {
  "data": {
   "lineno": 5
  },
  "type": "function"
 },
 "requests_mock.contrib._pytest_plugin.requests_mock": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "requests_mock.contrib._pytest_plugin.pytest"
   ]
  },
  "type": "function"
 },
 "requests_mock.contrib._pytest_plugin.rm_module": {
  "data": {
   "shadows": "requests_mock"
  },
  "type": "import"
 },
 "requests_mock.contrib.fixture": {
  "data": {},
  "type": "module"
 },
 "requests_mock.contrib.fixture.Fixture": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "requests_mock.contrib.fixture.fixtures",
    "requests_mock.mocker.MockerCore"
   ]
  },
  "type": "class"
 },
 "requests_mock.contrib.fixture.Fixture.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "requests_mock.contrib.fixture.fixtures",
    "requests_mock.mocker.MockerCore.__init__"
   ]
  },
  "type": "function"
 },
 "requests_mock.contrib.fixture.Fixture.setUp": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "requests_mock.contrib.fixture.Fixture",
    "super"
   ]
  },
  "type": "function"
 },
 "requests_mock.contrib.fixture.fixtures": {
  "data": {
   "shadows": "fixtures"
  },
  "type": "import"
 },
 "requests_mock.contrib.fixture.mocker": {
  "data": {
   "shadows": "requests_mock.mocker"
  },
  "type": "import"
 },
 "requests_mock.create_response": {
  "data": {
   "shadows": "requests_mock.response.create_response"
  },
  "type": "import"
 },
 "requests_mock.exceptions": {
  "data": {},
  "type": "module"
 },
 "requests_mock.exceptions.InvalidRequest": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "requests_mock.exceptions.MockException"
   ]
  },
  "type": "class"
 },
 "requests_mock.exceptions.MockException": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "requests_mock.exceptions.NoMockAddress": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "requests_mock.exceptions.MockException"
   ]
  },
  "type": "class"
 },
 "requests_mock.exceptions.NoMockAddress.__init__": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "requests_mock.exceptions.NoMockAddress.__str__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "requests_mock.mock": {
  "data": {
   "shadows": "requests_mock.mocker.mock"
  },
  "type": "import"
 },
 "requests_mock.mocker": {
  "data": {
   "symbols_in_volume": [
    "requests_mock.mocker.Mocker",
    "requests_mock.mocker.requests"
   ]
  },
  "type": "module"
 },
 "requests_mock.mocker.DELETE": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "requests_mock.mocker.GET": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "requests_mock.mocker.HEAD": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "requests_mock.mocker.Mocker": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "requests_mock.mocker.MockerCore"
   ]
  },
  "type": "class"
 },
 "requests_mock.mocker.Mocker.__call__": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "requests_mock.mocker.Mocker.__enter__": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "requests_mock.mocker.Mocker.__exit__": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "requests_mock.mocker.Mocker.__init__": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "requests_mock.mocker.Mocker",
    "super"
   ]
  },
  "type": "function"
 },
 "requests_mock.mocker.Mocker.copy": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "requests_mock.mocker.Mocker"
   ]
  },
  "type": "function"
 },
 "requests_mock.mocker.Mocker.decorate_callable": {
  "data": {
   "lineno": 211
  },
  "type": "function"
 },
 "requests_mock.mocker.Mocker.decorate_callable.inner": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "func",
    "list",
    "requests_mock.mocker.functools"
   ]
  },
  "type": "function"
 },
 "requests_mock.mocker.Mocker.decorate_class": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "dir",
    "getattr",
    "hasattr",
    "m",
    "setattr"
   ]
  },
  "type": "function"
 },
 "requests_mock.mocker.MockerCore": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "requests_mock.mocker.MockerCore.__getattr__": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "AttributeError",
    "getattr"
   ]
  },
  "type": "function"
 },
 "requests_mock.mocker.MockerCore.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "TypeError",
    "requests_mock.adapter.Adapter"
   ]
  },
  "type": "function"
 },
 "requests_mock.mocker.MockerCore.delete": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "requests_mock.mocker.DELETE"
   ]
  },
  "type": "function"
 },
 "requests_mock.mocker.MockerCore.get": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "requests_mock.mocker.GET"
   ]
  },
  "type": "function"
 },
 "requests_mock.mocker.MockerCore.head": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "requests_mock.mocker.HEAD"
   ]
  },
  "type": "function"
 },
 "requests_mock.mocker.MockerCore.options": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "requests_mock.mocker.OPTIONS"
   ]
  },
  "type": "function"
 },
 "requests_mock.mocker.MockerCore.patch": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "requests_mock.mocker.PATCH"
   ]
  },
  "type": "function"
 },
 "requests_mock.mocker.MockerCore.post": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "requests_mock.mocker.POST"
   ]
  },
  "type": "function"
 },
 "requests_mock.mocker.MockerCore.put": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "requests_mock.mocker.PUT"
   ]
  },
  "type": "function"
 },
 "requests_mock.mocker.MockerCore.register_uri": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "requests_mock.mocker.MockerCore.request": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "requests_mock.mocker.MockerCore.start": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "RuntimeError",
    "requests_mock.mocker.requests"
   ]
  },
  "type": "function"
 },
 "requests_mock.mocker.MockerCore.start._fake_get_adapter": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "requests_mock.mocker.MockerCore.start._fake_send": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "requests_mock.adapter._RunRealHTTP",
    "requests_mock.exceptions.NoMockAddress",
    "requests_mock.mocker._original_send",
    "requests_mock.mocker.requests"
   ]
  },
  "type": "function"
 },
 "requests_mock.mocker.MockerCore.stop": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "requests_mock.mocker.requests"
   ]
  },
  "type": "function"
 },
 "requests_mock.mocker.OPTIONS": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "requests_mock.mocker.PATCH": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "requests_mock.mocker.POST": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "requests_mock.mocker.PUT": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "requests_mock.mocker._original_send": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "requests_mock.mocker.adapter": {
  "data": {
   "shadows": "requests_mock.adapter"
  },
  "type": "import"
 },
 "requests_mock.mocker.exceptions": {
  "data": {
   "shadows": "requests_mock.exceptions"
  },
  "type": "import"
 },
 "requests_mock.mocker.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "requests_mock.mocker.mock": {
  "data": {
   "lineno": 250
  },
  "type": "constant"
 },
 "requests_mock.mocker.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "requests_mock.request": {
  "data": {},
  "type": "module"
 },
 "requests_mock.request._RequestObjectProxy": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "requests_mock.request._RequestObjectProxy.__getattr__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "requests_mock.request._RequestObjectProxy.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "requests_mock.request.copy"
   ]
  },
  "type": "function"
 },
 "requests_mock.request._RequestObjectProxy.__str__": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "requests_mock.request._RequestObjectProxy._create": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "requests_mock.request.requests"
   ]
  },
  "type": "function"
 },
 "requests_mock.request._RequestObjectProxy._url_parts": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "property",
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "requests_mock.request._RequestObjectProxy.allow_redirects": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "requests_mock.request._RequestObjectProxy.cert": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "requests_mock.request._RequestObjectProxy.hostname": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "IndexError",
    "property"
   ]
  },
  "type": "function"
 },
 "requests_mock.request._RequestObjectProxy.json": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "requests_mock.request.json"
   ]
  },
  "type": "function"
 },
 "requests_mock.request._RequestObjectProxy.matcher": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "requests_mock.request._RequestObjectProxy.netloc": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "requests_mock.request._RequestObjectProxy.path": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "requests_mock.request._RequestObjectProxy.port": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "requests_mock.request._RequestObjectProxy.proxies": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "requests_mock.request._RequestObjectProxy.qs": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "property",
    "six.moves.urllib.parse.parse_qs"
   ]
  },
  "type": "function"
 },
 "requests_mock.request._RequestObjectProxy.query": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "requests_mock.request._RequestObjectProxy.scheme": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "requests_mock.request._RequestObjectProxy.text": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "isinstance",
    "property",
    "requests_mock.request.six"
   ]
  },
  "type": "function"
 },
 "requests_mock.request._RequestObjectProxy.timeout": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "requests_mock.request._RequestObjectProxy.verify": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "requests_mock.request.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "requests_mock.request.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "requests_mock.request.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "requests_mock.request.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "requests_mock.request.urlparse": {
  "data": {
   "shadows": "six.moves.urllib.parse"
  },
  "type": "import"
 },
 "requests_mock.response": {
  "data": {
   "symbols_in_volume": [
    "frozenset",
    "requests.adapters.HTTPAdapter"
   ]
  },
  "type": "module"
 },
 "requests_mock.response.CookieJar": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "requests.cookies.RequestsCookieJar"
   ]
  },
  "type": "class"
 },
 "requests_mock.response.CookieJar.set": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "requests_mock.response.CookieJar",
    "super"
   ]
  },
  "type": "function"
 },
 "requests_mock.response.HTTPAdapter": {
  "data": {
   "shadows": "requests.adapters.HTTPAdapter"
  },
  "type": "import"
 },
 "requests_mock.response.HTTPResponse": {
  "data": {
   "shadows": "requests.packages.urllib3.response.HTTPResponse"
  },
  "type": "import"
 },
 "requests_mock.response.MockRequest": {
  "data": {
   "shadows": "requests.cookies.MockRequest"
  },
  "type": "import"
 },
 "requests_mock.response.MockResponse": {
  "data": {
   "shadows": "requests.cookies.MockResponse"
  },
  "type": "import"
 },
 "requests_mock.response.RequestsCookieJar": {
  "data": {
   "shadows": "requests.cookies.RequestsCookieJar"
  },
  "type": "import"
 },
 "requests_mock.response._BODY_ARGS": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "requests_mock.response._Context": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "requests_mock.response._Context.__init__": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "requests_mock.response._DEFAULT_STATUS": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "requests_mock.response._FakeConnection": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "requests_mock.response._FakeConnection.close": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "requests_mock.response._FakeConnection.send": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "requests_mock.exceptions.InvalidRequest"
   ]
  },
  "type": "function"
 },
 "requests_mock.response._HTTP_ARGS": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "requests_mock.response._IOReader": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "requests_mock.response.six"
   ]
  },
  "type": "class"
 },
 "requests_mock.response._IOReader.read": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "requests_mock.response.six"
   ]
  },
  "type": "function"
 },
 "requests_mock.response._MatcherResponse": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "requests_mock.response._MatcherResponse.__init__": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "TypeError",
    "callable",
    "isinstance",
    "requests_mock.response._check_body_arguments",
    "requests_mock.response.six"
   ]
  },
  "type": "function"
 },
 "requests_mock.response._MatcherResponse.get_response": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "_call",
    "dict",
    "isinstance",
    "requests.cookies.cookiejar_from_dict",
    "requests_mock.response.CookieJar",
    "requests_mock.response._Context",
    "requests_mock.response._DEFAULT_STATUS",
    "requests_mock.response.create_response"
   ]
  },
  "type": "function"
 },
 "requests_mock.response._MatcherResponse.get_response._call": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "callable",
    "f"
   ]
  },
  "type": "function"
 },
 "requests_mock.response._check_body_arguments": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "len",
    "requests_mock.response._BODY_ARGS",
    "requests_mock.response._HTTP_ARGS"
   ]
  },
  "type": "function"
 },
 "requests_mock.response._extract_cookies": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "requests.cookies.MockRequest",
    "requests.cookies.MockResponse",
    "requests.cookies.merge_cookies",
    "requests_mock.compat._FakeHTTPMessage"
   ]
  },
  "type": "function"
 },
 "requests_mock.response._http_adapter": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "requests_mock.response.compat": {
  "data": {
   "shadows": "requests_mock.compat"
  },
  "type": "import"
 },
 "requests_mock.response.cookiejar_from_dict": {
  "data": {
   "shadows": "requests.cookies.cookiejar_from_dict"
  },
  "type": "import"
 },
 "requests_mock.response.create_response": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "json",
    "json.dumps",
    "requests.packages.urllib3.response.HTTPResponse",
    "requests_mock.compat._fake_http_response",
    "requests_mock.response._DEFAULT_STATUS",
    "requests_mock.response._FakeConnection",
    "requests_mock.response._IOReader",
    "requests_mock.response._check_body_arguments",
    "requests_mock.response._extract_cookies",
    "requests_mock.response._http_adapter",
    "requests_mock.response.six"
   ]
  },
  "type": "function"
 },
 "requests_mock.response.exceptions": {
  "data": {
   "shadows": "requests_mock.exceptions"
  },
  "type": "import"
 },
 "requests_mock.response.jsonutils": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "requests_mock.response.merge_cookies": {
  "data": {
   "shadows": "requests.cookies.merge_cookies"
  },
  "type": "import"
 },
 "requests_mock.response.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 }
}