{
 "*": {
  "data": {
   "imports": [
    "megaman.geometry.rmetric"
   ]
  },
  "type": "star-import"
 },
 "megaman": {
  "data": {},
  "type": "module"
 },
 "megaman.__check_build": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "megaman.__check_build.raise_build_error"
   ]
  },
  "type": "module"
 },
 "megaman.__check_build.ERROR_TEMPLATE": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "megaman.__check_build.INPLACE_MSG": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "megaman.__check_build.STANDARD_MSG": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "megaman.__check_build.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "megaman.__check_build.raise_build_error": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ImportError",
    "enumerate",
    "list",
    "megaman.__check_build.ERROR_TEMPLATE",
    "megaman.__check_build.INPLACE_MSG",
    "megaman.__check_build.STANDARD_MSG",
    "megaman.__check_build.os"
   ]
  },
  "type": "function"
 },
 "megaman.__check_build.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "megaman.__check_build.setup.configuration",
    "numpy.distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "megaman.__check_build.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "megaman.__check_build.setup.configuration": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "megaman.__check_build.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "megaman.__check_build.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "megaman.__version__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "megaman.embedding": {
  "data": {},
  "type": "module"
 },
 "megaman.embedding.base": {
  "data": {},
  "type": "module"
 },
 "megaman.embedding.base.BaseEmbedding": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "megaman.embedding.base.BaseEmbedding.__init__": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "megaman.embedding.base.BaseEmbedding._validate_input": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.utils.validation.FLOAT_DTYPES",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.base.BaseEmbedding.fit_geometry": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "Geometry",
    "TypeError",
    "ValueError",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.base.BaseEmbedding.fit_transform": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "megaman.embedding.base.BaseEmbedding.transform": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.base.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "megaman.embedding.base.FLOAT_DTYPES": {
  "data": {
   "shadows": "sklearn.utils.validation.FLOAT_DTYPES"
  },
  "type": "import"
 },
 "megaman.embedding.base.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "megaman.embedding.base.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "megaman.embedding.base.isspmatrix": {
  "data": {
   "shadows": "scipy.sparse.isspmatrix"
  },
  "type": "import"
 },
 "megaman.embedding.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "megaman.embedding.isomap": {
  "data": {},
  "type": "module"
 },
 "megaman.embedding.isomap.Isomap": {
  "data": {
   "lineno": 113
  },
  "type": "class"
 },
 "megaman.embedding.isomap.Isomap.__init__": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "megaman.embedding.isomap.Isomap.fit": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "hasattr",
    "megaman.embedding.isomap.center_matrix",
    "megaman.embedding.isomap.isomap",
    "scipy.sparse.csgraph.shortest_path"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.isomap.center_matrix": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.isomap.graph_shortest_path": {
  "data": {
   "shadows": "scipy.sparse.csgraph.shortest_path"
  },
  "type": "import"
 },
 "megaman.embedding.isomap.isomap": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "eigen_decomposition",
    "megaman.embedding.isomap.center_matrix",
    "numpy.argsort",
    "numpy.sqrt",
    "scipy.sparse.csgraph.shortest_path"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.isomap.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "megaman.embedding.isomap.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "megaman.embedding.locally_linear": {
  "data": {},
  "type": "module"
 },
 "megaman.embedding.locally_linear.LocallyLinearEmbedding": {
  "data": {
   "lineno": 133
  },
  "type": "class"
 },
 "megaman.embedding.locally_linear.LocallyLinearEmbedding.__init__": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "megaman.embedding.locally_linear.LocallyLinearEmbedding.fit": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "check_random_state",
    "megaman.embedding.locally_linear.locally_linear_embedding"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.locally_linear.barycenter_graph": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "numpy.ones",
    "numpy.sum",
    "numpy.trace",
    "range",
    "scipy.linalg.solve",
    "scipy.sparse.lil_matrix"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.locally_linear.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "megaman.embedding.locally_linear.eigh": {
  "data": {
   "shadows": "scipy.linalg.eigh"
  },
  "type": "import"
 },
 "megaman.embedding.locally_linear.eye": {
  "data": {
   "shadows": "scipy.sparse.eye"
  },
  "type": "import"
 },
 "megaman.embedding.locally_linear.locally_linear_embedding": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ValueError",
    "check_eigen_solver",
    "megaman.embedding.locally_linear.barycenter_graph",
    "null_space",
    "scipy.sparse.eye"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.locally_linear.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "megaman.embedding.locally_linear.qr": {
  "data": {
   "shadows": "scipy.linalg.qr"
  },
  "type": "import"
 },
 "megaman.embedding.locally_linear.solve": {
  "data": {
   "shadows": "scipy.linalg.solve"
  },
  "type": "import"
 },
 "megaman.embedding.locally_linear.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "megaman.embedding.locally_linear.svd": {
  "data": {
   "shadows": "scipy.linalg.svd"
  },
  "type": "import"
 },
 "megaman.embedding.locally_linear.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "megaman.embedding.ltsa": {
  "data": {},
  "type": "module"
 },
 "megaman.embedding.ltsa.LTSA": {
  "data": {
   "lineno": 117
  },
  "type": "class"
 },
 "megaman.embedding.ltsa.LTSA.__init__": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "megaman.embedding.ltsa.LTSA.fit": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "check_random_state",
    "megaman.embedding.ltsa.ltsa"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.ltsa.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "megaman.embedding.ltsa.eigh": {
  "data": {
   "shadows": "scipy.linalg.eigh"
  },
  "type": "import"
 },
 "megaman.embedding.ltsa.eye": {
  "data": {
   "shadows": "scipy.sparse.eye"
  },
  "type": "import"
 },
 "megaman.embedding.ltsa.ltsa": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ValueError",
    "check_eigen_solver",
    "len",
    "megaman.embedding.ltsa.warnings",
    "null_space",
    "numpy.dot",
    "numpy.meshgrid",
    "numpy.sqrt",
    "numpy.zeros",
    "range",
    "scipy.linalg.eigh",
    "scipy.linalg.svd",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.ltsa.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "megaman.embedding.ltsa.qr": {
  "data": {
   "shadows": "scipy.linalg.qr"
  },
  "type": "import"
 },
 "megaman.embedding.ltsa.solve": {
  "data": {
   "shadows": "scipy.linalg.solve"
  },
  "type": "import"
 },
 "megaman.embedding.ltsa.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "megaman.embedding.ltsa.svd": {
  "data": {
   "shadows": "scipy.linalg.svd"
  },
  "type": "import"
 },
 "megaman.embedding.ltsa.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "megaman.embedding.spectral_embedding": {
  "data": {},
  "type": "module"
 },
 "megaman.embedding.spectral_embedding.SpectralEmbedding": {
  "data": {
   "lineno": 240
  },
  "type": "class"
 },
 "megaman.embedding.spectral_embedding.SpectralEmbedding.__init__": {
  "data": {
   "lineno": 308
  },
  "type": "function"
 },
 "megaman.embedding.spectral_embedding.SpectralEmbedding.fit": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "check_random_state",
    "megaman.embedding.spectral_embedding.spectral_embedding"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.spectral_embedding._graph_connected_component": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.where",
    "numpy.zeros",
    "range",
    "scipy.sparse.csgraph.connected_components",
    "scipy.sparse.csgraph.connected_components.sum"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.spectral_embedding._graph_is_connected": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "megaman.embedding.spectral_embedding._graph_connected_component",
    "scipy.sparse.csgraph.connected_components",
    "scipy.sparse.isspmatrix"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.spectral_embedding.connected_components": {
  "data": {
   "shadows": "scipy.sparse.csgraph.connected_components"
  },
  "type": "import"
 },
 "megaman.embedding.spectral_embedding.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "megaman.embedding.spectral_embedding.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "megaman.embedding.spectral_embedding.spectral_embedding": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "check_eigen_solver",
    "check_random_state",
    "eigen_decomposition",
    "megaman.embedding.spectral_embedding._graph_is_connected",
    "megaman.embedding.spectral_embedding.warnings",
    "numpy.argsort",
    "numpy.array",
    "numpy.identity",
    "numpy.linalg.norm",
    "numpy.newaxis",
    "numpy.sqrt",
    "scipy.sparse.identity",
    "scipy.sparse.isspmatrix"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.spectral_embedding.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "megaman.embedding.tests": {
  "data": {},
  "type": "module"
 },
 "megaman.embedding.tests.test_base": {
  "data": {},
  "type": "module"
 },
 "megaman.embedding.tests.test_base.BaseEmbedding": {
  "data": {
   "shadows": "megaman.embedding.base.BaseEmbedding"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_base.Geometry": {
  "data": {
   "shadows": "megaman.geometry.geometry.Geometry"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_base.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_base.assert_raise_message": {
  "data": {
   "shadows": "megaman.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_base.test_geometry_dict": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "dict",
    "megaman.embedding.base.BaseEmbedding",
    "megaman.geometry.geometry.Geometry"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.tests.test_base.test_geometry_object": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "megaman.embedding.base.BaseEmbedding",
    "megaman.geometry.geometry.Geometry"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.tests.test_base.test_geometry_update": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "megaman.embedding.base.BaseEmbedding",
    "megaman.geometry.geometry.Geometry",
    "numpy.random.rand",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.tests.test_embeddings": {
  "data": {
   "symbols_in_volume": [
    "megaman.embedding.Isomap",
    "megaman.embedding.LTSA",
    "megaman.embedding.LocallyLinearEmbedding",
    "megaman.embedding.SpectralEmbedding"
   ]
  },
  "type": "module"
 },
 "megaman.embedding.tests.test_embeddings.EMBEDDINGS": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "megaman.embedding.tests.test_embeddings.Geometry": {
  "data": {
   "shadows": "megaman.geometry.geometry.Geometry"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_embeddings.Isomap": {
  "data": {
   "shadows": "megaman.embedding.Isomap"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_embeddings.LTSA": {
  "data": {
   "shadows": "megaman.embedding.LTSA"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_embeddings.LocallyLinearEmbedding": {
  "data": {
   "shadows": "megaman.embedding.LocallyLinearEmbedding"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_embeddings.SpectralEmbedding": {
  "data": {
   "shadows": "megaman.embedding.SpectralEmbedding"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_embeddings.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_embeddings.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_embeddings.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_embeddings.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_embeddings.test_embeddings_bad_arguments": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "Embedding",
    "megaman.embedding.tests.test_embeddings.EMBEDDINGS",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.tests.test_embeddings.test_embeddings_bad_arguments.check_bad_args": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "Embedding",
    "ValueError",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.tests.test_embeddings.test_embeddings_fit_vs_transform": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "Embedding",
    "megaman.embedding.tests.test_embeddings.EMBEDDINGS",
    "megaman.geometry.geometry.Geometry",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.tests.test_embeddings.test_embeddings_fit_vs_transform.check_embedding": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "Embedding",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.tests.test_isomap": {
  "data": {},
  "type": "module"
 },
 "megaman.embedding.tests.test_isomap.EIGEN_SOLVERS": {
  "data": {
   "shadows": "megaman.utils.eigendecomp.EIGEN_SOLVERS"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_isomap.NearestNeighbors": {
  "data": {
   "shadows": "sklearn.neighbors.NearestNeighbors"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_isomap._check_with_col_sign_flipping": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.tests.test_isomap.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_isomap.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_isomap.geom": {
  "data": {
   "shadows": "megaman.geometry.geometry"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_isomap.iso": {
  "data": {
   "shadows": "megaman.embedding.isomap"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_isomap.manifold": {
  "data": {
   "shadows": "sklearn.manifold"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_isomap.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_isomap.pdist": {
  "data": {
   "shadows": "scipy.spatial.distance.pdist"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_isomap.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_isomap.sp": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_isomap.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_isomap.squareform": {
  "data": {
   "shadows": "scipy.spatial.distance.squareform"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_isomap.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_isomap.test_isomap_simple_grid": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "itertools.product",
    "list",
    "megaman.embedding.isomap.Isomap",
    "megaman.geometry.geometry.Geometry",
    "megaman.utils.eigendecomp.EIGEN_SOLVERS",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "range",
    "scipy.spatial.distance.pdist",
    "scipy.spatial.distance.squareform"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.tests.test_isomap.test_isomap_with_sklearn": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "megaman.embedding.isomap.isomap",
    "megaman.embedding.tests.test_isomap._check_with_col_sign_flipping",
    "megaman.geometry.geometry.Geometry",
    "sklearn.datasets.samples_generator.make_s_curve",
    "sklearn.manifold.Isomap",
    "sklearn.neighbors.NearestNeighbors"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.tests.test_lle": {
  "data": {},
  "type": "module"
 },
 "megaman.embedding.tests.test_lle.EIGEN_SOLVERS": {
  "data": {
   "shadows": "megaman.utils.eigendecomp.EIGEN_SOLVERS"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_lle.NearestNeighbors": {
  "data": {
   "shadows": "sklearn.neighbors.NearestNeighbors"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_lle._check_with_col_sign_flipping": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.tests.test_lle.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_lle.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_lle.geom": {
  "data": {
   "shadows": "megaman.geometry.geometry"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_lle.lle": {
  "data": {
   "shadows": "megaman.embedding.locally_linear"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_lle.manifold": {
  "data": {
   "shadows": "sklearn.manifold"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_lle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_lle.pdist": {
  "data": {
   "shadows": "scipy.spatial.distance.pdist"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_lle.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_lle.sp": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_lle.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_lle.squareform": {
  "data": {
   "shadows": "scipy.spatial.distance.squareform"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_lle.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_lle.test_barycenter_kneighbors_graph": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "megaman.embedding.locally_linear.barycenter_graph",
    "numpy.array",
    "numpy.dot",
    "numpy.linalg.norm",
    "numpy.ones",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "scipy.spatial.distance.pdist",
    "scipy.spatial.distance.squareform"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.tests.test_lle.test_lle_manifold": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "itertools.product",
    "list",
    "megaman.embedding.locally_linear.LocallyLinearEmbedding",
    "megaman.embedding.locally_linear.barycenter_graph",
    "megaman.geometry.geometry.Geometry",
    "megaman.utils.eigendecomp.EIGEN_SOLVERS",
    "numpy.arange",
    "numpy.array",
    "numpy.c_",
    "numpy.dot",
    "numpy.linalg.norm",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.tests.test_lle.test_lle_simple_grid": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "itertools.product",
    "list",
    "megaman.embedding.locally_linear.LocallyLinearEmbedding",
    "megaman.embedding.locally_linear.barycenter_graph",
    "megaman.geometry.geometry.Geometry",
    "megaman.utils.eigendecomp.EIGEN_SOLVERS",
    "numpy.array",
    "numpy.dot",
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "range"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.tests.test_lle.test_lle_with_sklearn": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "megaman.embedding.locally_linear.locally_linear_embedding",
    "megaman.embedding.tests.test_lle._check_with_col_sign_flipping",
    "megaman.geometry.geometry.Geometry",
    "sklearn.datasets.samples_generator.make_s_curve",
    "sklearn.manifold.LocallyLinearEmbedding",
    "sklearn.neighbors.NearestNeighbors"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.tests.test_ltsa": {
  "data": {},
  "type": "module"
 },
 "megaman.embedding.tests.test_ltsa.EIGEN_SOLVERS": {
  "data": {
   "shadows": "megaman.utils.eigendecomp.EIGEN_SOLVERS"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_ltsa.NearestNeighbors": {
  "data": {
   "shadows": "sklearn.neighbors.NearestNeighbors"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_ltsa._check_with_col_sign_flipping": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.tests.test_ltsa.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_ltsa.barycenter_graph": {
  "data": {
   "shadows": "megaman.embedding.locally_linear.barycenter_graph"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_ltsa.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_ltsa.geom": {
  "data": {
   "shadows": "megaman.geometry.geometry"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_ltsa.ltsa": {
  "data": {
   "shadows": "megaman.embedding.ltsa"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_ltsa.manifold": {
  "data": {
   "shadows": "sklearn.manifold"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_ltsa.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_ltsa.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_ltsa.sp": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_ltsa.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_ltsa.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_ltsa.test_ltsa_eigendecomps": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "megaman.embedding.ltsa.ltsa",
    "megaman.embedding.tests.test_ltsa._check_with_col_sign_flipping",
    "megaman.geometry.geometry.Geometry",
    "megaman.utils.eigendecomp.EIGEN_SOLVERS",
    "sklearn.datasets.samples_generator.make_s_curve"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.tests.test_ltsa.test_ltsa_manifold": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "itertools.product",
    "list",
    "megaman.embedding.locally_linear.barycenter_graph",
    "megaman.embedding.ltsa.LTSA",
    "megaman.geometry.geometry.Geometry",
    "megaman.utils.eigendecomp.EIGEN_SOLVERS",
    "numpy.arange",
    "numpy.array",
    "numpy.c_",
    "numpy.dot",
    "numpy.linalg.norm",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.tests.test_ltsa.test_ltsa_with_sklearn": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "megaman.embedding.ltsa.ltsa",
    "megaman.embedding.tests.test_ltsa._check_with_col_sign_flipping",
    "megaman.geometry.geometry.Geometry",
    "sklearn.datasets.samples_generator.make_s_curve",
    "sklearn.manifold.LocallyLinearEmbedding",
    "sklearn.neighbors.NearestNeighbors"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.tests.test_spectral_embedding": {
  "data": {
   "symbols_in_volume": [
    "megaman.embedding.tests.test_spectral_embedding.centers",
    "megaman.embedding.tests.test_spectral_embedding.n_samples",
    "numpy.array",
    "sklearn.datasets.samples_generator.make_blobs"
   ]
  },
  "type": "module"
 },
 "megaman.embedding.tests.test_spectral_embedding.SkipTest": {
  "data": {
   "shadows": "nose.plugins.skip.SkipTest"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_spectral_embedding.SpectralEmbedding": {
  "data": {
   "shadows": "megaman.embedding.spectral_embedding.SpectralEmbedding"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_spectral_embedding._check_with_col_sign_flipping": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.tests.test_spectral_embedding._graph_is_connected": {
  "data": {
   "shadows": "megaman.embedding.spectral_embedding._graph_is_connected"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_spectral_embedding.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_spectral_embedding.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_spectral_embedding.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_spectral_embedding.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_spectral_embedding.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_spectral_embedding.centers": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "megaman.embedding.tests.test_spectral_embedding.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_spectral_embedding.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_spectral_embedding.geom": {
  "data": {
   "shadows": "megaman.geometry.geometry"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_spectral_embedding.isspmatrix": {
  "data": {
   "shadows": "scipy.sparse.isspmatrix"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_spectral_embedding.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.samples_generator.make_blobs"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_spectral_embedding.n_samples": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "megaman.embedding.tests.test_spectral_embedding.normalized_mutual_info_score": {
  "data": {
   "shadows": "sklearn.metrics.normalized_mutual_info_score"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_spectral_embedding.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_spectral_embedding.pyamg": {
  "data": {
   "shadows": "pyamg"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_spectral_embedding.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_spectral_embedding.spectral_embedding": {
  "data": {
   "shadows": "megaman.embedding.spectral_embedding.spectral_embedding"
  },
  "type": "import"
 },
 "megaman.embedding.tests.test_spectral_embedding.test_connectivity": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "megaman.embedding.spectral_embedding._graph_is_connected",
    "nose.tools.assert_equal",
    "numpy.array",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.tests.test_spectral_embedding.test_spectral_embedding_amg_solver": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ImportError",
    "megaman.embedding.spectral_embedding.SpectralEmbedding",
    "megaman.embedding.tests.test_spectral_embedding._check_with_col_sign_flipping",
    "nose.plugins.skip.SkipTest",
    "nose.tools.assert_true",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.tests.test_spectral_embedding.test_spectral_embedding_precomputed_affinity": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "megaman.embedding.spectral_embedding.SpectralEmbedding",
    "megaman.embedding.tests.test_spectral_embedding._check_with_col_sign_flipping",
    "megaman.geometry.geometry.Geometry",
    "nose.tools.assert_true",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.tests.test_spectral_embedding.test_spectral_embedding_symmetrzation": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ImportError",
    "megaman.embedding.spectral_embedding.SpectralEmbedding",
    "megaman.embedding.tests.test_spectral_embedding._check_with_col_sign_flipping",
    "nose.plugins.skip.SkipTest",
    "nose.tools.assert_true",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.tests.test_spectral_embedding.test_spectral_embedding_two_components": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "megaman.embedding.spectral_embedding.SpectralEmbedding",
    "nose.tools.assert_equal",
    "numpy.abs",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.zeros",
    "sklearn.metrics.normalized_mutual_info_score"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.tests.test_spectral_embedding.test_spectral_embedding_unknown_eigensolver": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "ValueError",
    "megaman.embedding.spectral_embedding.SpectralEmbedding",
    "nose.tools.assert_raises",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "megaman.embedding.tests.test_spectral_embedding.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "megaman.geometry": {
  "data": {},
  "type": "module"
 },
 "megaman.geometry.adjacency": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "megaman.geometry.adjacency.Adjacency": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "megaman.geometry.adjacency.Adjacency.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.adjacency.Adjacency.adjacency_graph": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "megaman.geometry.adjacency.Adjacency.knn_adjacency": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.adjacency.Adjacency.radius_adjacency": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.adjacency.BallTreeAdjacency": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "megaman.geometry.adjacency.BruteForceAdjacency"
   ]
  },
  "type": "class"
 },
 "megaman.geometry.adjacency.BruteForceAdjacency": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "megaman.geometry.adjacency.Adjacency"
   ]
  },
  "type": "class"
 },
 "megaman.geometry.adjacency.BruteForceAdjacency.knn_adjacency": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "sklearn.neighbors.NearestNeighbors"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.adjacency.BruteForceAdjacency.radius_adjacency": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "sklearn.neighbors.NearestNeighbors"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.adjacency.CyFLANNAdjacency": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "megaman.geometry.adjacency.Adjacency"
   ]
  },
  "type": "class"
 },
 "megaman.geometry.adjacency.CyFLANNAdjacency.__init__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "megaman.geometry.adjacency.CyFLANNAdjacency",
    "super"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.adjacency.CyFLANNAdjacency._get_built_index": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "megaman.geometry.adjacency.CyFLANNAdjacency.knn_adjacency": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "megaman.geometry.adjacency.CyFLANNAdjacency.radius_adjacency": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "megaman.geometry.adjacency.CyIndex": {
  "data": {
   "shadows": "Index"
  },
  "type": "import"
 },
 "megaman.geometry.adjacency.KDTreeAdjacency": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "megaman.geometry.adjacency.BruteForceAdjacency"
   ]
  },
  "type": "class"
 },
 "megaman.geometry.adjacency.PYFLANN_LOADED": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "megaman.geometry.adjacency.PyFLANNAdjacency": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "megaman.geometry.adjacency.Adjacency"
   ]
  },
  "type": "class"
 },
 "megaman.geometry.adjacency.PyFLANNAdjacency.__init__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "ValueError",
    "megaman.geometry.adjacency.PYFLANN_LOADED",
    "megaman.geometry.adjacency.PyFLANNAdjacency",
    "super"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.adjacency.PyFLANNAdjacency._get_built_index": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "pyflann.FLANN"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.adjacency.PyFLANNAdjacency.knn_adjacency": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ravel",
    "numpy.sqrt",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.adjacency.PyFLANNAdjacency.radius_adjacency": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "int",
    "numpy.concatenate",
    "numpy.ones",
    "numpy.require",
    "numpy.sqrt",
    "range",
    "scipy.sparse.coo_matrix"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.adjacency.adjacency_methods": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.adjacency.compute_adjacency_matrix": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "megaman.geometry.adjacency.neighbors": {
  "data": {
   "shadows": "sklearn.neighbors"
  },
  "type": "import"
 },
 "megaman.geometry.adjacency.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "megaman.geometry.adjacency.pyf": {
  "data": {
   "shadows": "pyflann"
  },
  "type": "import"
 },
 "megaman.geometry.adjacency.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "megaman.geometry.affinity": {
  "data": {},
  "type": "module"
 },
 "megaman.geometry.affinity.Affinity": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "megaman.geometry.affinity.Affinity.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.affinity.Affinity.affinity_matrix": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.affinity.GaussianAffinity": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "megaman.geometry.affinity.Affinity"
   ]
  },
  "type": "class"
 },
 "megaman.geometry.affinity.GaussianAffinity._symmetrize": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.affinity.GaussianAffinity.affinity_matrix": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "float",
    "numpy.exp",
    "scipy.sparse.isspmatrix",
    "sklearn.utils.validation.check_array"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.affinity.affinity_methods": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.affinity.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "megaman.geometry.affinity.compute_affinity_matrix": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "megaman.geometry.affinity.isspmatrix": {
  "data": {
   "shadows": "scipy.sparse.isspmatrix"
  },
  "type": "import"
 },
 "megaman.geometry.affinity.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "megaman.geometry.cyflann": {
  "data": {},
  "type": "module"
 },
 "megaman.geometry.cyflann.setup": {
  "data": {
   "symbols_in_volume": [
    "megaman.geometry.cyflann.setup.os",
    "megaman.geometry.cyflann.setup.sys"
   ]
  },
  "type": "module"
 },
 "megaman.geometry.cyflann.setup.CONDA_BUILD": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "megaman.geometry.cyflann.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "megaman.geometry.cyflann.setup.FLANN_ROOT": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "megaman.geometry.cyflann.setup.configuration": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "megaman.geometry.cyflann.setup.CONDA_BUILD",
    "megaman.geometry.cyflann.setup.FLANN_ROOT",
    "megaman.geometry.cyflann.setup.numpy",
    "megaman.geometry.cyflann.setup.os",
    "megaman.geometry.cyflann.setup.platform",
    "numpy.distutils.misc_util.Configuration",
    "print"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.cyflann.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "megaman.geometry.cyflann.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "megaman.geometry.cyflann.setup.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "megaman.geometry.cyflann.setup.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "megaman.geometry.geometry": {
  "data": {},
  "type": "module"
 },
 "megaman.geometry.geometry.Geometry": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "megaman.geometry.geometry.Geometry.__init__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.geometry.Geometry.compute_adjacency_matrix": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "ValueError",
    "compute_adjacency_matrix",
    "megaman.geometry.geometry.distance_error_msg"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.geometry.Geometry.compute_affinity_matrix": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "compute_affinity_matrix"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.geometry.Geometry.compute_laplacian_matrix": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "compute_laplacian_matrix"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.geometry.Geometry.delete_adjacency_matrix": {
  "data": {
   "lineno": 293
  },
  "type": "function"
 },
 "megaman.geometry.geometry.Geometry.delete_affinity_matrix": {
  "data": {
   "lineno": 296
  },
  "type": "function"
 },
 "megaman.geometry.geometry.Geometry.delete_data_matrix": {
  "data": {
   "lineno": 290
  },
  "type": "function"
 },
 "megaman.geometry.geometry.Geometry.delete_laplacian_matrix": {
  "data": {
   "lineno": 299
  },
  "type": "function"
 },
 "megaman.geometry.geometry.Geometry.set_adjacency_matrix": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "megaman.geometry.geometry.sparse_formats"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.geometry.Geometry.set_affinity_matrix": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "megaman.geometry.geometry.sparse_formats"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.geometry.Geometry.set_data_matrix": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "check_array",
    "megaman.geometry.geometry.sparse_formats"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.geometry.Geometry.set_laplacian_matrix": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "megaman.geometry.geometry.sparse_formats"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.geometry.Geometry.set_matrix": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.geometry.Geometry.set_radius": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.geometry.distance_error_msg": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "megaman.geometry.geometry.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "megaman.geometry.geometry.gammaln": {
  "data": {
   "shadows": "scipy.special.gammaln"
  },
  "type": "import"
 },
 "megaman.geometry.geometry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "megaman.geometry.geometry.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "megaman.geometry.geometry.sparse_formats": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "megaman.geometry.rmetric": {
  "data": {},
  "type": "module"
 },
 "megaman.geometry.rmetric.RiemannMetric": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "megaman.geometry.rmetric.RiemannMetric.__init__": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "ValueError",
    "set"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.rmetric.RiemannMetric.get_detG": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "megaman.geometry.rmetric.riemann_metric",
    "numpy.linalg.det"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.rmetric.RiemannMetric.get_dual_rmetric": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "megaman.geometry.rmetric.riemann_metric"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.rmetric.RiemannMetric.get_mdimG": {
  "data": {
   "lineno": 223
  },
  "type": "function"
 },
 "megaman.geometry.rmetric.RiemannMetric.get_rmetric": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "megaman.geometry.rmetric.compute_G_from_H",
    "megaman.geometry.rmetric.riemann_metric"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.rmetric.compute_G_from_H": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ValueError",
    "megaman.geometry.rmetric.riemann_metric",
    "numpy.arange",
    "numpy.diag",
    "numpy.dot",
    "numpy.linalg.inv",
    "numpy.linalg.svd",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.rmetric.eigh": {
  "data": {
   "shadows": "numpy.linalg.eigh"
  },
  "type": "import"
 },
 "megaman.geometry.rmetric.inv": {
  "data": {
   "shadows": "numpy.linalg.inv"
  },
  "type": "import"
 },
 "megaman.geometry.rmetric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "megaman.geometry.rmetric.riemann_metric": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "megaman.geometry.rmetric.compute_G_from_H",
    "numpy.arange",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.rmetric.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "megaman.geometry.rmetric.svd": {
  "data": {
   "shadows": "numpy.linalg.svd"
  },
  "type": "import"
 },
 "megaman.geometry.rmetric.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "megaman.geometry.tests": {
  "data": {},
  "type": "module"
 },
 "megaman.geometry.tests.test_adjacency": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "megaman.geometry.tests.test_adjacency.Adjacency": {
  "data": {
   "shadows": "megaman.geometry.Adjacency"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_adjacency.Geometry": {
  "data": {
   "shadows": "megaman.geometry.Geometry"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_adjacency.NO_PYFLANN": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "megaman.geometry.tests.test_adjacency.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_adjacency.adjacency_methods": {
  "data": {
   "shadows": "megaman.geometry.adjacency_methods"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_adjacency.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_adjacency.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_adjacency.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_adjacency.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_adjacency.compute_adjacency_matrix": {
  "data": {
   "shadows": "megaman.geometry.compute_adjacency_matrix"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_adjacency.isspmatrix": {
  "data": {
   "shadows": "scipy.sparse.isspmatrix"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_adjacency.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_adjacency.pdist": {
  "data": {
   "shadows": "scipy.spatial.distance.pdist"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_adjacency.pyf": {
  "data": {
   "shadows": "pyflann"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_adjacency.squareform": {
  "data": {
   "shadows": "scipy.spatial.distance.squareform"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_adjacency.test_adjacency": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "megaman.geometry.Adjacency.methods",
    "megaman.geometry.compute_adjacency_matrix",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.tests.test_adjacency.test_adjacency.check_kneighbors": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "megaman.geometry.compute_adjacency_matrix",
    "megaman.geometry.tests.test_adjacency.NO_PYFLANN",
    "nose.SkipTest",
    "numpy.testing.assert_allclose",
    "scipy.sparse.isspmatrix"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.tests.test_adjacency.test_adjacency.check_radius": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "megaman.geometry.compute_adjacency_matrix",
    "megaman.geometry.tests.test_adjacency.NO_PYFLANN",
    "nose.SkipTest",
    "numpy.testing.assert_allclose",
    "scipy.sparse.isspmatrix"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.tests.test_adjacency.test_adjacency_input_validation": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "megaman.geometry.compute_adjacency_matrix",
    "numpy.random.rand",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.tests.test_adjacency.test_adjacency_methods": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "megaman.geometry.adjacency_methods",
    "numpy.testing.assert_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.tests.test_adjacency.test_all_methods_close": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "scipy.spatial.distance.pdist",
    "scipy.spatial.distance.squareform"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.tests.test_adjacency.test_all_methods_close.check_method": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ImportError",
    "megaman.geometry.compute_adjacency_matrix",
    "nose.SkipTest",
    "numpy.testing.assert_allclose",
    "pyflann.FLANN"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.tests.test_adjacency.test_custom_adjacency": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "megaman.geometry.Adjacency._remove_from_registry",
    "megaman.geometry.compute_adjacency_matrix",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "scipy.spatial.distance.cdist"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.tests.test_adjacency.test_custom_adjacency.CustomAdjacency": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "megaman.geometry.Adjacency"
   ]
  },
  "type": "class"
 },
 "megaman.geometry.tests.test_adjacency.test_custom_adjacency.CustomAdjacency.adjacency_graph": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "scipy.spatial.distance.pdist",
    "scipy.spatial.distance.squareform"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.tests.test_adjacency.test_unknown_method": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ValueError",
    "megaman.geometry.compute_adjacency_matrix",
    "numpy.arange",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.tests.test_affinity": {
  "data": {
   "symbols_in_volume": [
    "megaman.geometry.tests.test_affinity.D",
    "megaman.geometry.tests.test_affinity.X",
    "megaman.geometry.tests.test_affinity.d",
    "megaman.geometry.tests.test_affinity.n_sample",
    "megaman.geometry.tests.test_affinity.os",
    "megaman.geometry.tests.test_affinity.random_state",
    "numpy.random.RandomState",
    "scipy.spatial.distance.pdist",
    "scipy.spatial.distance.squareform"
   ]
  },
  "type": "module"
 },
 "megaman.geometry.tests.test_affinity.Affinity": {
  "data": {
   "shadows": "megaman.geometry.Affinity"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_affinity.D": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "megaman.geometry.tests.test_affinity.TEST_DATA": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "megaman.geometry.tests.test_affinity.X": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "megaman.geometry.tests.test_affinity.affinity_methods": {
  "data": {
   "shadows": "megaman.geometry.affinity_methods"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_affinity.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_affinity.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_affinity.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_affinity.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_affinity.compute_adjacency_matrix": {
  "data": {
   "shadows": "megaman.geometry.compute_adjacency_matrix"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_affinity.compute_affinity_matrix": {
  "data": {
   "shadows": "megaman.geometry.compute_affinity_matrix"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_affinity.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_affinity.d": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "megaman.geometry.tests.test_affinity.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_affinity.io": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_affinity.n_sample": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "megaman.geometry.tests.test_affinity.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_affinity.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_affinity.pdist": {
  "data": {
   "shadows": "scipy.spatial.distance.pdist"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_affinity.random_state": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "megaman.geometry.tests.test_affinity.squareform": {
  "data": {
   "shadows": "scipy.spatial.distance.squareform"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_affinity.test_affinity": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "megaman.geometry.tests.test_affinity.D",
    "megaman.geometry.tests.test_affinity.X",
    "numpy.random.RandomState",
    "numpy.random.rand",
    "scipy.spatial.distance.cdist"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.tests.test_affinity.test_affinity.check_affinity": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "megaman.geometry.compute_adjacency_matrix",
    "megaman.geometry.compute_affinity_matrix",
    "megaman.geometry.tests.test_affinity.D",
    "megaman.geometry.tests.test_affinity.X",
    "numpy.exp",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.tests.test_affinity.test_affinity_input_validation": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "megaman.geometry.compute_adjacency_matrix",
    "megaman.geometry.compute_affinity_matrix",
    "megaman.geometry.tests.test_affinity.D",
    "megaman.geometry.tests.test_affinity.X",
    "numpy.random.rand",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.tests.test_affinity.test_affinity_methods": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "megaman.geometry.affinity_methods",
    "numpy.testing.assert_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.tests.test_affinity.test_affinity_sparse_vs_dense": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "float",
    "megaman.geometry.compute_adjacency_matrix",
    "megaman.geometry.compute_affinity_matrix",
    "megaman.geometry.tests.test_affinity.X",
    "numpy.arange",
    "numpy.asarray",
    "numpy.concatenate",
    "numpy.newaxis",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.tests.test_affinity.test_affinity_vs_matlab": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "megaman.geometry.compute_affinity_matrix",
    "megaman.geometry.tests.test_affinity.D",
    "megaman.geometry.tests.test_affinity.TEST_DATA",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "scipy.io.loadmat",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.tests.test_affinity.test_custom_affinity": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "abs",
    "megaman.geometry.Affinity._remove_from_registry",
    "megaman.geometry.compute_adjacency_matrix",
    "megaman.geometry.compute_affinity_matrix",
    "megaman.geometry.tests.test_affinity.D",
    "megaman.geometry.tests.test_affinity.X",
    "numpy.exp",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.tests.test_affinity.test_custom_affinity.CustomAffinity": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "megaman.geometry.Affinity"
   ]
  },
  "type": "class"
 },
 "megaman.geometry.tests.test_affinity.test_custom_affinity.CustomAffinity.affinity_matrix": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "abs",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.tests.test_geometry": {
  "data": {},
  "type": "module"
 },
 "megaman.geometry.tests.test_geometry.Geometry": {
  "data": {
   "shadows": "megaman.geometry.geometry.Geometry"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_geometry.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_geometry.adjacency_methods": {
  "data": {
   "shadows": "megaman.geometry.adjacency_methods"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_geometry.affinity_methods": {
  "data": {
   "shadows": "megaman.geometry.affinity_methods"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_geometry.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_geometry.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_geometry.assert_raise_message": {
  "data": {
   "shadows": "megaman.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_geometry.compute_adjacency_matrix": {
  "data": {
   "shadows": "megaman.geometry.compute_adjacency_matrix"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_geometry.compute_affinity_matrix": {
  "data": {
   "shadows": "megaman.geometry.compute_affinity_matrix"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_geometry.compute_laplacian_matrix": {
  "data": {
   "shadows": "megaman.geometry.compute_laplacian_matrix"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_geometry.distance_error_msg": {
  "data": {
   "shadows": "megaman.geometry.geometry.distance_error_msg"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_geometry.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_geometry.laplacian_methods": {
  "data": {
   "shadows": "megaman.geometry.laplacian_methods"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_geometry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_geometry.pdist": {
  "data": {
   "shadows": "scipy.spatial.distance.pdist"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_geometry.pyf": {
  "data": {
   "shadows": "pyflann"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_geometry.squareform": {
  "data": {
   "shadows": "scipy.spatial.distance.squareform"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_geometry.test_compute_adjacency_matrix_args": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "input",
    "megaman.geometry.adjacency_methods",
    "megaman.geometry.compute_adjacency_matrix",
    "megaman.geometry.compute_affinity_matrix",
    "megaman.geometry.geometry.Geometry",
    "megaman.geometry.geometry.distance_error_msg",
    "megaman.utils.testing.assert_raise_message",
    "nose.SkipTest",
    "numpy.random.uniform",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.tests.test_geometry.test_compute_affinity_matrix_args": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "input",
    "megaman.geometry.affinity_methods",
    "megaman.geometry.compute_adjacency_matrix",
    "megaman.geometry.compute_affinity_matrix",
    "megaman.geometry.geometry.Geometry",
    "megaman.geometry.geometry.distance_error_msg",
    "megaman.utils.testing.assert_raise_message",
    "numpy.random.uniform",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.tests.test_geometry.test_compute_laplacian_matrix_args": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "input",
    "megaman.geometry.compute_adjacency_matrix",
    "megaman.geometry.compute_affinity_matrix",
    "megaman.geometry.compute_laplacian_matrix",
    "megaman.geometry.geometry.Geometry",
    "megaman.geometry.laplacian_methods",
    "numpy.random.uniform",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.tests.test_laplacian": {
  "data": {
   "symbols_in_volume": [
    "megaman.geometry.tests.test_laplacian.os"
   ]
  },
  "type": "module"
 },
 "megaman.geometry.tests.test_laplacian.Laplacian": {
  "data": {
   "shadows": "megaman.geometry.Laplacian"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_laplacian.TEST_DATA": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "megaman.geometry.tests.test_laplacian.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_laplacian.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_laplacian.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_laplacian.compute_adjacency_matrix": {
  "data": {
   "shadows": "megaman.geometry.compute_adjacency_matrix"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_laplacian.compute_affinity_matrix": {
  "data": {
   "shadows": "megaman.geometry.compute_affinity_matrix"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_laplacian.compute_laplacian_matrix": {
  "data": {
   "shadows": "megaman.geometry.compute_laplacian_matrix"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_laplacian.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_laplacian.io": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_laplacian.isspmatrix": {
  "data": {
   "shadows": "scipy.sparse.isspmatrix"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_laplacian.laplacian_methods": {
  "data": {
   "shadows": "megaman.geometry.laplacian_methods"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_laplacian.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_laplacian.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_laplacian.test_laplacian_full_output": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "megaman.geometry.Laplacian.asymmetric_methods",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.tests.test_laplacian.test_laplacian_full_output.check_symmetric": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "megaman.geometry.compute_adjacency_matrix",
    "megaman.geometry.compute_affinity_matrix",
    "megaman.geometry.compute_laplacian_matrix",
    "numpy.eye",
    "numpy.newaxis",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.tests.test_laplacian.test_laplacian_methods": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "megaman.geometry.laplacian_methods",
    "numpy.testing.assert_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.tests.test_laplacian.test_laplacian_smoketest": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "megaman.geometry.Laplacian.asymmetric_methods",
    "megaman.geometry.compute_adjacency_matrix",
    "megaman.geometry.compute_affinity_matrix",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.tests.test_laplacian.test_laplacian_smoketest.check_laplacian": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "megaman.geometry.compute_laplacian_matrix",
    "numpy.testing.assert_equal",
    "scipy.sparse.isspmatrix"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.tests.test_laplacian.test_laplacian_unknown_method": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError",
    "megaman.geometry.compute_laplacian_matrix",
    "numpy.array",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.tests.test_laplacian.test_laplacian_vs_matlab": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "input_type",
    "megaman.geometry.tests.test_laplacian.TEST_DATA",
    "numpy.array",
    "scipy.io.loadmat",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.tests.test_laplacian.test_laplacian_vs_matlab.check_laplacian": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "input_type",
    "megaman.geometry.compute_affinity_matrix",
    "megaman.geometry.compute_laplacian_matrix",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.tests.test_rmetric": {
  "data": {
   "symbols_in_volume": [
    "megaman.geometry.tests.test_rmetric.os"
   ]
  },
  "type": "module"
 },
 "megaman.geometry.tests.test_rmetric.SkipTest": {
  "data": {
   "shadows": "nose.plugins.skip.SkipTest"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_rmetric.TEST_DATA": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "megaman.geometry.tests.test_rmetric._graph_is_connected": {
  "data": {
   "shadows": "megaman.embedding.spectral_embedding._graph_is_connected"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_rmetric._load_test_data": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "megaman.geometry.tests.test_rmetric.TEST_DATA",
    "numpy.sqrt",
    "numpy.transpose",
    "print"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.tests.test_rmetric.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_rmetric.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_rmetric.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_rmetric.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_rmetric.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_rmetric.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_rmetric.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_rmetric.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_rmetric.isspmatrix": {
  "data": {
   "shadows": "scipy.sparse.isspmatrix"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_rmetric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_rmetric.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_rmetric.scipy.io": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "megaman.geometry.tests.test_rmetric.test_equal_original": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "megaman.geometry.tests.test_rmetric._load_test_data",
    "numpy.mean",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "riemann_metric"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.utils": {
  "data": {},
  "type": "module"
 },
 "megaman.geometry.utils.RegisterSubclasses": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "megaman.geometry.utils.RegistryMeta",
    "megaman.geometry.utils.with_metaclass"
   ]
  },
  "type": "class"
 },
 "megaman.geometry.utils.RegisterSubclasses._remove_from_registry": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.utils.RegisterSubclasses.get_method": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "list"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.utils.RegisterSubclasses.init": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "Method",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.utils.RegisterSubclasses.methods": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.utils.RegistryMeta": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "megaman.geometry.utils.RegistryMeta.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "hasattr",
    "megaman.geometry.utils.RegistryMeta",
    "super"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.utils.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "megaman.geometry.utils.with_metaclass": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "type.__new__"
   ]
  },
  "type": "function"
 },
 "megaman.geometry.utils.with_metaclass.metaclass": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "megaman.geometry.utils.with_metaclass.metaclass.__new__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "meta"
   ]
  },
  "type": "function"
 },
 "megaman.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "megaman.setup.configuration",
    "numpy.distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "megaman.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "megaman.setup.configuration": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "megaman.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "megaman.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "megaman.utils": {
  "data": {},
  "type": "module"
 },
 "megaman.utils.eigendecomp": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "megaman.utils.eigendecomp.BAD_EIGEN_SOLVERS",
    "megaman.utils.eigendecomp.EIGEN_SOLVERS"
   ]
  },
  "type": "module"
 },
 "megaman.utils.eigendecomp.BAD_EIGEN_SOLVERS": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "megaman.utils.eigendecomp.EIGEN_SOLVERS": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "megaman.utils.eigendecomp.PYAMG_LOADED": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "megaman.utils.eigendecomp._is_symmetric": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.all",
    "scipy.sparse.isspmatrix"
   ]
  },
  "type": "function"
 },
 "megaman.utils.eigendecomp.check_eigen_solver": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "megaman.utils.eigendecomp.BAD_EIGEN_SOLVERS",
    "megaman.utils.eigendecomp.EIGEN_SOLVERS",
    "megaman.utils.eigendecomp.PYAMG_LOADED",
    "megaman.utils.eigendecomp.warnings"
   ]
  },
  "type": "function"
 },
 "megaman.utils.eigendecomp.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.validation.check_random_state"
  },
  "type": "import"
 },
 "megaman.utils.eigendecomp.eig": {
  "data": {
   "shadows": "scipy.linalg.eig"
  },
  "type": "import"
 },
 "megaman.utils.eigendecomp.eigen_decomposition": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ValueError",
    "check_array",
    "megaman.utils.eigendecomp._is_symmetric",
    "megaman.utils.eigendecomp.check_eigen_solver",
    "megaman.utils.eigendecomp.warnings",
    "min",
    "numpy.argsort",
    "numpy.float",
    "numpy.real",
    "pyamg.smoothed_aggregation_solver",
    "scipy.linalg.eig",
    "scipy.linalg.eigh",
    "scipy.sparse.issparse",
    "scipy.sparse.isspmatrix",
    "scipy.sparse.linalg.eigs",
    "scipy.sparse.linalg.eigsh",
    "scipy.sparse.linalg.lobpcg",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "megaman.utils.eigendecomp.eigh": {
  "data": {
   "shadows": "scipy.linalg.eigh"
  },
  "type": "import"
 },
 "megaman.utils.eigendecomp.eigs": {
  "data": {
   "shadows": "scipy.sparse.linalg.eigs"
  },
  "type": "import"
 },
 "megaman.utils.eigendecomp.eigsh": {
  "data": {
   "shadows": "scipy.sparse.linalg.eigsh"
  },
  "type": "import"
 },
 "megaman.utils.eigendecomp.lobpcg": {
  "data": {
   "shadows": "scipy.sparse.linalg.lobpcg"
  },
  "type": "import"
 },
 "megaman.utils.eigendecomp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "megaman.utils.eigendecomp.null_space": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "hasattr",
    "megaman.utils.eigendecomp.check_eigen_solver",
    "megaman.utils.eigendecomp.eigen_decomposition",
    "megaman.utils.eigendecomp.warnings",
    "min",
    "numpy.abs",
    "numpy.argsort",
    "numpy.linalg.LinAlgError",
    "numpy.sum",
    "scipy.linalg.eigh",
    "scipy.sparse.identity",
    "scipy.sparse.linalg.eigsh",
    "sklearn.utils.validation.check_random_state"
   ]
  },
  "type": "function"
 },
 "megaman.utils.eigendecomp.smoothed_aggregation_solver": {
  "data": {
   "shadows": "pyamg.smoothed_aggregation_solver"
  },
  "type": "import"
 },
 "megaman.utils.eigendecomp.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "megaman.utils.eigendecomp.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "megaman.utils.testing": {
  "data": {},
  "type": "module"
 },
 "megaman.utils.testing._IgnoreWarnings": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "megaman.utils.testing._IgnoreWarnings.__enter__": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "RuntimeError",
    "megaman.utils.testing.clean_warning_registry",
    "megaman.utils.testing.warnings"
   ]
  },
  "type": "function"
 },
 "megaman.utils.testing._IgnoreWarnings.__enter__.showwarning": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "megaman.utils.testing.warnings"
   ]
  },
  "type": "function"
 },
 "megaman.utils.testing._IgnoreWarnings.__exit__": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "RuntimeError",
    "megaman.utils.testing.clean_warning_registry"
   ]
  },
  "type": "function"
 },
 "megaman.utils.testing._IgnoreWarnings.__init__": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "megaman.utils.testing.sys"
   ]
  },
  "type": "function"
 },
 "megaman.utils.testing._IgnoreWarnings.__repr__": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "megaman.utils.testing.sys",
    "type"
   ]
  },
  "type": "function"
 },
 "megaman.utils.testing._ignore_warnings": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "megaman.utils.testing._ignore_warnings.wrapper": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "fn",
    "functools.wraps",
    "megaman.utils.testing.clean_warning_registry",
    "megaman.utils.testing.warnings"
   ]
  },
  "type": "function"
 },
 "megaman.utils.testing.assert_no_warnings": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "AssertionError",
    "func",
    "func.__name__",
    "hasattr",
    "len",
    "megaman.utils.testing.clean_warning_registry",
    "megaman.utils.testing.warnings",
    "numpy",
    "numpy.VisibleDeprecationWarning"
   ]
  },
  "type": "function"
 },
 "megaman.utils.testing.assert_raise_message": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "AssertionError",
    "function",
    "function.__name__",
    "isinstance",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "megaman.utils.testing.assert_warns": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "AssertionError",
    "any",
    "func",
    "func.__name__",
    "hasattr",
    "len",
    "megaman.utils.testing.clean_warning_registry",
    "megaman.utils.testing.warnings",
    "numpy",
    "numpy.VisibleDeprecationWarning"
   ]
  },
  "type": "function"
 },
 "megaman.utils.testing.clean_warning_registry": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "list",
    "megaman.utils.testing.sys",
    "megaman.utils.testing.warnings"
   ]
  },
  "type": "function"
 },
 "megaman.utils.testing.ignore_warnings": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "callable",
    "megaman.utils.testing._IgnoreWarnings",
    "megaman.utils.testing._ignore_warnings"
   ]
  },
  "type": "function"
 },
 "megaman.utils.testing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "megaman.utils.testing.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "megaman.utils.testing.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "megaman.utils.testing.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "megaman.utils.tests": {
  "data": {},
  "type": "module"
 },
 "megaman.utils.tests.test_eigendecomp": {
  "data": {
   "symbols_in_volume": [
    "megaman.utils.eigendecomp.EIGEN_SOLVERS"
   ]
  },
  "type": "module"
 },
 "megaman.utils.tests.test_eigendecomp.EIGEN_SOLVERS": {
  "data": {
   "shadows": "megaman.utils.eigendecomp.EIGEN_SOLVERS"
  },
  "type": "import"
 },
 "megaman.utils.tests.test_eigendecomp.NON_SPD_SOLVERS": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "megaman.utils.tests.test_eigendecomp.SPD_SOLVERS": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "megaman.utils.tests.test_eigendecomp._check_with_col_sign_flipping": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "megaman.utils.tests.test_eigendecomp._test_all_null_solvers": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "len",
    "megaman.utils.eigendecomp.null_space",
    "megaman.utils.tests.test_eigendecomp._check_with_col_sign_flipping",
    "print",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "megaman.utils.tests.test_eigendecomp._test_all_solvers": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "len",
    "megaman.utils.eigendecomp.eigen_decomposition",
    "numpy.sort",
    "numpy.testing.assert_array_almost_equal",
    "print",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "megaman.utils.tests.test_eigendecomp.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "megaman.utils.tests.test_eigendecomp.eigen_decomposition": {
  "data": {
   "shadows": "megaman.utils.eigendecomp.eigen_decomposition"
  },
  "type": "import"
 },
 "megaman.utils.tests.test_eigendecomp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "megaman.utils.tests.test_eigendecomp.null_space": {
  "data": {
   "shadows": "megaman.utils.eigendecomp.null_space"
  },
  "type": "import"
 },
 "megaman.utils.tests.test_eigendecomp.test_null_space_non_sym_agreement": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "megaman.utils.tests.test_eigendecomp.NON_SPD_SOLVERS",
    "megaman.utils.tests.test_eigendecomp._test_all_null_solvers",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "megaman.utils.tests.test_eigendecomp.test_null_space_sym_agreement": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "megaman.utils.tests.test_eigendecomp.NON_SPD_SOLVERS",
    "megaman.utils.tests.test_eigendecomp._test_all_null_solvers",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "megaman.utils.tests.test_eigendecomp.test_null_space_sym_pos_def_agreement": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "megaman.utils.tests.test_eigendecomp.SPD_SOLVERS",
    "megaman.utils.tests.test_eigendecomp._test_all_null_solvers",
    "numpy.dot",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "megaman.utils.tests.test_eigendecomp.test_sym_pos_def_agreement": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "megaman.utils.tests.test_eigendecomp.SPD_SOLVERS",
    "megaman.utils.tests.test_eigendecomp._test_all_solvers",
    "numpy.dot",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "megaman.utils.tests.test_testing": {
  "data": {},
  "type": "module"
 },
 "megaman.utils.tests.test_testing.TestWarns": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "megaman.utils.tests.test_testing.unittest"
   ]
  },
  "type": "class"
 },
 "megaman.utils.tests.test_testing.TestWarns.test_warn": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "AssertionError",
    "UserWarning",
    "megaman.utils.testing.assert_no_warnings",
    "megaman.utils.testing.assert_warns",
    "megaman.utils.tests.test_testing.sys",
    "megaman.utils.tests.test_testing.warnings",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "megaman.utils.tests.test_testing.TestWarns.test_warn.f": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "megaman.utils.tests.test_testing.warnings"
   ]
  },
  "type": "function"
 },
 "megaman.utils.tests.test_testing.TestWarns.test_warn_wrong_warning": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "AssertionError",
    "UserWarning",
    "megaman.utils.testing.assert_warns",
    "megaman.utils.tests.test_testing.sys"
   ]
  },
  "type": "function"
 },
 "megaman.utils.tests.test_testing.TestWarns.test_warn_wrong_warning.f": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "DeprecationWarning",
    "megaman.utils.tests.test_testing.warnings"
   ]
  },
  "type": "function"
 },
 "megaman.utils.tests.test_testing.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "megaman.utils.tests.test_testing.assert_no_warnings": {
  "data": {
   "shadows": "megaman.utils.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "megaman.utils.tests.test_testing.assert_raise_message": {
  "data": {
   "shadows": "megaman.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "megaman.utils.tests.test_testing.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "megaman.utils.tests.test_testing.assert_warns": {
  "data": {
   "shadows": "megaman.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "megaman.utils.tests.test_testing.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "megaman.utils.tests.test_testing.test_assert_raise_message": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "AssertionError",
    "AttributeError",
    "TypeError",
    "ValueError",
    "megaman.utils.testing.assert_raise_message",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "megaman.utils.tests.test_testing.test_assert_raise_message._no_raise": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "megaman.utils.tests.test_testing.test_assert_raise_message._raise_ValueError": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "megaman.utils.tests.test_testing.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "megaman.utils.tests.test_testing.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "megaman.utils.tests.test_validation": {
  "data": {},
  "type": "module"
 },
 "megaman.utils.tests.test_validation.DataConversionWarning": {
  "data": {
   "shadows": "megaman.utils.validation.DataConversionWarning"
  },
  "type": "import"
 },
 "megaman.utils.tests.test_validation.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "megaman.utils.tests.test_validation.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "megaman.utils.tests.test_validation.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "megaman.utils.tests.test_validation.assert_no_warnings": {
  "data": {
   "shadows": "megaman.utils.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "megaman.utils.tests.test_validation.assert_raise_message": {
  "data": {
   "shadows": "megaman.utils.testing.assert_raise_message"
  },
  "type": "import"
 },
 "megaman.utils.tests.test_validation.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "megaman.utils.tests.test_validation.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "megaman.utils.tests.test_validation.assert_warns": {
  "data": {
   "shadows": "megaman.utils.testing.assert_warns"
  },
  "type": "import"
 },
 "megaman.utils.tests.test_validation.check_array": {
  "data": {
   "shadows": "megaman.utils.validation.check_array"
  },
  "type": "import"
 },
 "megaman.utils.tests.test_validation.check_symmetric": {
  "data": {
   "shadows": "megaman.utils.validation.check_symmetric"
  },
  "type": "import"
 },
 "megaman.utils.tests.test_validation.ignore_warnings": {
  "data": {
   "shadows": "megaman.utils.testing.ignore_warnings"
  },
  "type": "import"
 },
 "megaman.utils.tests.test_validation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "megaman.utils.tests.test_validation.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "megaman.utils.tests.test_validation.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "megaman.utils.tests.test_validation.test_check_array": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "DeprecationWarning",
    "TypeError",
    "ValueError",
    "isinstance",
    "itertools.product",
    "len",
    "megaman.utils.testing.assert_warns",
    "megaman.utils.testing.ignore_warnings",
    "megaman.utils.tests.test_validation.warnings",
    "megaman.utils.validation.check_array",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.bool",
    "numpy.float",
    "numpy.float32",
    "numpy.inf",
    "numpy.int",
    "numpy.int32",
    "numpy.nan",
    "numpy.ndarray",
    "object",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.isspmatrix_dok",
    "str"
   ]
  },
  "type": "function"
 },
 "megaman.utils.tests.test_validation.test_check_array_dtype_stability": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "megaman.utils.validation.check_array",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "megaman.utils.tests.test_validation.test_check_array_dtype_warning": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "megaman.utils.testing.assert_no_warnings",
    "megaman.utils.testing.assert_warns",
    "megaman.utils.validation.DataConversionWarning",
    "megaman.utils.validation.check_array",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "numpy.asarray",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "megaman.utils.tests.test_validation.test_check_array_min_samples_and_features_messages": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "DeprecationWarning",
    "TypeError",
    "ValueError",
    "megaman.utils.testing.assert_raise_message",
    "megaman.utils.testing.assert_warns",
    "megaman.utils.validation.check_array",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "megaman.utils.tests.test_validation.test_check_symmetric": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "megaman.utils.testing.assert_warns",
    "megaman.utils.validation.check_symmetric",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "scipy.sparse.bsr_matrix",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.dok_matrix",
    "scipy.sparse.issparse",
    "scipy.sparse.lil_matrix"
   ]
  },
  "type": "function"
 },
 "megaman.utils.tests.test_validation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "megaman.utils.validation": {
  "data": {
   "symbols_in_volume": [
    "megaman.utils.validation.DataConversionWarning",
    "megaman.utils.validation.warnings"
   ]
  },
  "type": "module"
 },
 "megaman.utils.validation.DataConversionWarning": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "megaman.utils.validation._assert_all_finite": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asanyarray",
    "numpy.isfinite",
    "numpy.typecodes"
   ]
  },
  "type": "function"
 },
 "megaman.utils.validation._ensure_sparse_format": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "isinstance",
    "list",
    "megaman.utils.validation._assert_all_finite",
    "megaman.utils.validation.warnings",
    "tuple"
   ]
  },
  "type": "function"
 },
 "megaman.utils.validation._num_samples": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "len",
    "numpy.asarray",
    "type"
   ]
  },
  "type": "function"
 },
 "megaman.utils.validation._shape_repr": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "megaman.utils.validation.check_array": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "getattr",
    "hasattr",
    "isinstance",
    "list",
    "megaman.utils.validation.DataConversionWarning",
    "megaman.utils.validation._assert_all_finite",
    "megaman.utils.validation._ensure_sparse_format",
    "megaman.utils.validation._num_samples",
    "megaman.utils.validation._shape_repr",
    "megaman.utils.validation.warnings",
    "numpy.array",
    "numpy.atleast_2d",
    "numpy.float64",
    "scipy.sparse.issparse",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "megaman.utils.validation.check_random_state": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "megaman.utils.validation.numbers",
    "numpy.integer",
    "numpy.random",
    "numpy.random.RandomState",
    "numpy.random.mtrand._rand"
   ]
  },
  "type": "function"
 },
 "megaman.utils.validation.check_symmetric": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "getattr",
    "megaman.utils.validation.warnings",
    "numpy.all",
    "numpy.allclose",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "megaman.utils.validation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "megaman.utils.validation.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "megaman.utils.validation.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "megaman.utils.validation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 }
}