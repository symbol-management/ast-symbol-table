{
 "*": {
  "data": {
   "imports": [
    "cloudpickle"
   ]
  },
  "type": "star-import"
 },
 "mlflow": {
  "data": {
   "symbols_in_volume": [
    "DeprecationWarning",
    "__name__",
    "mlflow.projects.run",
    "mlflow.sys",
    "mlflow.tracking.get_tracking_uri",
    "mlflow.tracking.set_tracking_uri",
    "mlflow.utils.logging_utils._configure_mlflow_loggers",
    "mlflow.warnings"
   ]
  },
  "type": "module"
 },
 "mlflow.ActiveRun": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "mlflow.__all__": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "mlflow.__version__": {
  "data": {
   "shadows": "mlflow.version.VERSION"
  },
  "type": "import"
 },
 "mlflow._configure_mlflow_loggers": {
  "data": {
   "shadows": "mlflow.utils.logging_utils._configure_mlflow_loggers"
  },
  "type": "import"
 },
 "mlflow._spark_autologging": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow._spark_autologging.logging",
    "mlflow._spark_autologging.threading"
   ]
  },
  "type": "module"
 },
 "mlflow._spark_autologging.CallbackServerParameters": {
  "data": {
   "shadows": "py4j.java_gateway.CallbackServerParameters"
  },
  "type": "import"
 },
 "mlflow._spark_autologging.MlflowClient": {
  "data": {
   "shadows": "mlflow.tracking.client.MlflowClient"
  },
  "type": "import"
 },
 "mlflow._spark_autologging.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow._spark_autologging.PythonSubscriber": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow._spark_autologging.PythonSubscriber.Java": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "mlflow._spark_autologging._JAVA_PACKAGE"
   ]
  },
  "type": "class"
 },
 "mlflow._spark_autologging.PythonSubscriber.__init__": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "mlflow._spark_autologging._get_repl_id"
   ]
  },
  "type": "function"
 },
 "mlflow._spark_autologging.PythonSubscriber._notify": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "mlflow._spark_autologging._set_run_tag_async",
    "mlflow._spark_autologging.add_table_info_to_context_provider",
    "mlflow._spark_autologging.mlflow"
   ]
  },
  "type": "function"
 },
 "mlflow._spark_autologging.PythonSubscriber.notify": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "Exception",
    "mlflow._spark_autologging._logger"
   ]
  },
  "type": "function"
 },
 "mlflow._spark_autologging.PythonSubscriber.ping": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "mlflow._spark_autologging.PythonSubscriber.register": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "mlflow._spark_autologging._get_jvm_event_publisher"
   ]
  },
  "type": "function"
 },
 "mlflow._spark_autologging.PythonSubscriber.replId": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "mlflow._spark_autologging.PythonSubscriber.toString": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "mlflow._spark_autologging.RunContextProvider": {
  "data": {
   "shadows": "mlflow.tracking.context.abstract_context.RunContextProvider"
  },
  "type": "import"
 },
 "mlflow._spark_autologging.SparkAutologgingContext": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "mlflow.tracking.context.abstract_context.RunContextProvider"
   ]
  },
  "type": "class"
 },
 "mlflow._spark_autologging.SparkAutologgingContext.in_context": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "mlflow._spark_autologging.SparkAutologgingContext.tags": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "len",
    "mlflow._spark_autologging._SPARK_TABLE_INFO_TAG_NAME",
    "mlflow._spark_autologging._get_table_info_string",
    "mlflow._spark_autologging._lock",
    "mlflow._spark_autologging._table_infos",
    "set"
   ]
  },
  "type": "function"
 },
 "mlflow._spark_autologging.SparkContext": {
  "data": {
   "shadows": "pyspark.SparkContext"
  },
  "type": "import"
 },
 "mlflow._spark_autologging.SparkSession": {
  "data": {
   "shadows": "pyspark.sql.SparkSession"
  },
  "type": "import"
 },
 "mlflow._spark_autologging._JAVA_PACKAGE": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mlflow._spark_autologging._SPARK_TABLE_INFO_TAG_NAME": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mlflow._spark_autologging._get_active_spark_session": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "Exception",
    "pyspark.sql.SparkSession._instantiatedSession",
    "pyspark.sql.SparkSession.builder.getActiveSession"
   ]
  },
  "type": "function"
 },
 "mlflow._spark_autologging._get_current_listener": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "mlflow._spark_autologging._spark_table_info_listener"
   ]
  },
  "type": "function"
 },
 "mlflow._spark_autologging._get_jvm_event_publisher": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "getattr",
    "mlflow._spark_autologging._JAVA_PACKAGE",
    "pyspark.SparkContext._gateway.jvm"
   ]
  },
  "type": "function"
 },
 "mlflow._spark_autologging._get_repl_id": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "len",
    "mlflow._spark_autologging.sys",
    "mlflow._spark_autologging.uuid",
    "pyspark.SparkContext.getOrCreate"
   ]
  },
  "type": "function"
 },
 "mlflow._spark_autologging._get_spark_major_version": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "mlflow._spark_autologging._get_table_info_string": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "mlflow._spark_autologging._lock": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mlflow._spark_autologging._logger": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mlflow._spark_autologging._merge_tag_lines": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "mlflow._spark_autologging._metric_queue": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mlflow._spark_autologging._run_context_provider_registry": {
  "data": {
   "shadows": "mlflow.tracking.context.registry._run_context_provider_registry"
  },
  "type": "import"
 },
 "mlflow._spark_autologging._set_run_tag": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "mlflow._spark_autologging._SPARK_TABLE_INFO_TAG_NAME",
    "mlflow._spark_autologging._get_table_info_string",
    "mlflow._spark_autologging._merge_tag_lines",
    "mlflow.tracking.client.MlflowClient"
   ]
  },
  "type": "function"
 },
 "mlflow._spark_autologging._set_run_tag_async": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "mlflow._spark_autologging._thread_pool"
   ]
  },
  "type": "function"
 },
 "mlflow._spark_autologging._spark_table_info_listener": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mlflow._spark_autologging._table_infos": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mlflow._spark_autologging._thread_pool": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mlflow._spark_autologging.add_table_info_to_context_provider": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "mlflow._spark_autologging._lock",
    "mlflow._spark_autologging._table_infos"
   ]
  },
  "type": "function"
 },
 "mlflow._spark_autologging.autolog": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "Exception",
    "mlflow._spark_autologging.PythonSubscriber",
    "mlflow._spark_autologging._get_active_spark_session",
    "mlflow._spark_autologging._get_current_listener",
    "mlflow._spark_autologging._get_jvm_event_publisher",
    "mlflow._spark_autologging._get_spark_major_version",
    "mlflow._spark_autologging._spark_table_info_listener",
    "mlflow.exceptions.MlflowException",
    "mlflow.tracking.context.registry._run_context_provider_registry.register",
    "py4j.java_gateway.CallbackServerParameters",
    "pyspark.SparkContext.getOrCreate"
   ]
  },
  "type": "function"
 },
 "mlflow._spark_autologging.concurrent.futures": {
  "data": {
   "shadows": "concurrent.futures"
  },
  "type": "import"
 },
 "mlflow._spark_autologging.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow._spark_autologging.mlflow": {
  "data": {
   "shadows": "mlflow"
  },
  "type": "import"
 },
 "mlflow._spark_autologging.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlflow._spark_autologging.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "mlflow._spark_autologging.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "mlflow.active_run": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "mlflow.azureml": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.azureml.logging"
   ]
  },
  "type": "module"
 },
 "mlflow.azureml.AzureModel": {
  "data": {
   "shadows": "azureml.core.model.Model"
  },
  "type": "import"
 },
 "mlflow.azureml.ContainerImage": {
  "data": {
   "shadows": "azureml.core.image.ContainerImage"
  },
  "type": "import"
 },
 "mlflow.azureml.INVALID_PARAMETER_VALUE": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  },
  "type": "import"
 },
 "mlflow.azureml.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.azureml.Model": {
  "data": {
   "shadows": "mlflow.models.Model"
  },
  "type": "import"
 },
 "mlflow.azureml.PYTHON_VERSION": {
  "data": {
   "shadows": "mlflow.utils.PYTHON_VERSION"
  },
  "type": "import"
 },
 "mlflow.azureml.SCORE_SRC": {
  "data": {
   "lineno": 315
  },
  "type": "constant"
 },
 "mlflow.azureml.StrictVersion": {
  "data": {
   "shadows": "distutils.version.StrictVersion"
  },
  "type": "import"
 },
 "mlflow.azureml.TempDir": {
  "data": {
   "shadows": "mlflow.utils.file_utils.TempDir"
  },
  "type": "import"
 },
 "mlflow.azureml._build_tags": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "mlflow.azureml._copy_file_or_tree": {
  "data": {
   "shadows": "mlflow.utils.file_utils._copy_file_or_tree"
  },
  "type": "import"
 },
 "mlflow.azureml._copy_project": {
  "data": {
   "shadows": "mlflow.utils.file_utils._copy_project"
  },
  "type": "import"
 },
 "mlflow.azureml._create_dockerfile": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "mlflow.azureml._get_container_path",
    "mlflow.exceptions.MlflowException",
    "mlflow.version.VERSION",
    "mlflow.version.VERSION.endswith",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.azureml._create_execution_script": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.azureml._download_artifact_from_uri": {
  "data": {
   "shadows": "mlflow.tracking.artifact_utils._download_artifact_from_uri"
  },
  "type": "import"
 },
 "mlflow.azureml._get_container_path": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "mlflow.azureml.os"
   ]
  },
  "type": "function"
 },
 "mlflow.azureml._get_mlflow_azure_resource_name": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "len",
    "mlflow.utils.get_unique_resource_id"
   ]
  },
  "type": "function"
 },
 "mlflow.azureml._load_pyfunc_conf": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "azureml.core.model.Model.load",
    "mlflow.azureml.os",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.pyfunc.FLAVOR_NAME"
   ]
  },
  "type": "function"
 },
 "mlflow.azureml._logger": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mlflow.azureml.build_image": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "azureml.core.image.ContainerImage.create",
    "azureml.core.image.ContainerImage.image_configuration",
    "azureml.core.model.Model.register",
    "distutils.version.StrictVersion",
    "mlflow.azureml._build_tags",
    "mlflow.azureml._create_dockerfile",
    "mlflow.azureml._create_execution_script",
    "mlflow.azureml._get_mlflow_azure_resource_name",
    "mlflow.azureml._load_pyfunc_conf",
    "mlflow.azureml._logger",
    "mlflow.azureml.os",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.pyfunc.ENV",
    "mlflow.pyfunc.PY_VERSION",
    "mlflow.tracking.artifact_utils._download_artifact_from_uri",
    "mlflow.utils.experimental",
    "mlflow.utils.file_utils.TempDir",
    "mlflow.utils.file_utils._copy_file_or_tree",
    "mlflow.utils.file_utils._copy_project"
   ]
  },
  "type": "function"
 },
 "mlflow.azureml.cli": {
  "data": {},
  "type": "module"
 },
 "mlflow.azureml.cli.Workspace": {
  "data": {
   "shadows": "azureml.core.Workspace"
  },
  "type": "import"
 },
 "mlflow.azureml.cli.build_image": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "azureml.core.Workspace.get",
    "mlflow.azureml.cli.click",
    "mlflow.azureml.cli.commands",
    "mlflow.azureml.cli.json",
    "mlflow.utils.cli_args.MLFLOW_HOME",
    "mlflow.utils.cli_args.MODEL_URI",
    "mlflow.utils.experimental"
   ]
  },
  "type": "function"
 },
 "mlflow.azureml.cli.cli_args": {
  "data": {
   "shadows": "mlflow.utils.cli_args"
  },
  "type": "import"
 },
 "mlflow.azureml.cli.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "mlflow.azureml.cli.commands": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "mlflow.azureml.cli.click"
   ]
  },
  "type": "function"
 },
 "mlflow.azureml.cli.experimental": {
  "data": {
   "shadows": "mlflow.utils.experimental"
  },
  "type": "import"
 },
 "mlflow.azureml.cli.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mlflow.azureml.cli.mlflow.azureml": {
  "data": {
   "shadows": "mlflow.azureml"
  },
  "type": "import"
 },
 "mlflow.azureml.cli.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mlflow.azureml.experimental": {
  "data": {
   "shadows": "mlflow.utils.experimental"
  },
  "type": "import"
 },
 "mlflow.azureml.get_unique_resource_id": {
  "data": {
   "shadows": "mlflow.utils.get_unique_resource_id"
  },
  "type": "import"
 },
 "mlflow.azureml.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.azureml.mlflow": {
  "data": {
   "shadows": "mlflow"
  },
  "type": "import"
 },
 "mlflow.azureml.mlflow_version": {
  "data": {
   "shadows": "mlflow.version.VERSION"
  },
  "type": "import"
 },
 "mlflow.azureml.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.azureml.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mlflow.azureml.pyfunc": {
  "data": {
   "shadows": "mlflow.pyfunc"
  },
  "type": "import"
 },
 "mlflow.azureml.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mlflow.azureml.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlflow.azureml.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "mlflow.cli": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.cli.cli",
    "mlflow.cli.logging"
   ]
  },
  "type": "module"
 },
 "mlflow.cli.DEFAULT_LOCAL_FILE_AND_ARTIFACT_PATH": {
  "data": {
   "shadows": "mlflow.store.tracking.DEFAULT_LOCAL_FILE_AND_ARTIFACT_PATH"
  },
  "type": "import"
 },
 "mlflow.cli.LifecycleStage": {
  "data": {
   "shadows": "mlflow.entities.lifecycle_stage.LifecycleStage"
  },
  "type": "import"
 },
 "mlflow.cli.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.cli.ShellCommandException": {
  "data": {
   "shadows": "mlflow.utils.process.ShellCommandException"
  },
  "type": "import"
 },
 "mlflow.cli.UsageError": {
  "data": {
   "shadows": "click.UsageError"
  },
  "type": "import"
 },
 "mlflow.cli._get_store": {
  "data": {
   "shadows": "mlflow.tracking._get_store"
  },
  "type": "import"
 },
 "mlflow.cli._logger": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mlflow.cli._run_server": {
  "data": {
   "shadows": "mlflow.server._run_server"
  },
  "type": "import"
 },
 "mlflow.cli._validate_server_args": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "NotImplementedError",
    "mlflow.cli.sys"
   ]
  },
  "type": "function"
 },
 "mlflow.cli._validate_static_prefix": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "click.UsageError"
   ]
  },
  "type": "function"
 },
 "mlflow.cli.cli": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "mlflow.cli.click"
   ]
  },
  "type": "function"
 },
 "mlflow.cli.cli_args": {
  "data": {
   "shadows": "mlflow.utils.cli_args"
  },
  "type": "import"
 },
 "mlflow.cli.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "mlflow.cli.eprint": {
  "data": {
   "shadows": "mlflow.utils.logging_utils.eprint"
  },
  "type": "import"
 },
 "mlflow.cli.experimental": {
  "data": {
   "shadows": "mlflow.utils.experimental"
  },
  "type": "import"
 },
 "mlflow.cli.gc": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "mlflow.cli.cli",
    "mlflow.cli.click",
    "mlflow.cli.run",
    "mlflow.entities.lifecycle_stage.LifecycleStage.DELETED",
    "mlflow.exceptions.MlflowException",
    "mlflow.store.artifact.artifact_repository_registry.get_artifact_repository",
    "mlflow.store.tracking.DEFAULT_LOCAL_FILE_AND_ARTIFACT_PATH",
    "mlflow.tracking._get_store",
    "mlflow.utils.experimental",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.cli.get_artifact_repository": {
  "data": {
   "shadows": "mlflow.store.artifact.artifact_repository_registry.get_artifact_repository"
  },
  "type": "import"
 },
 "mlflow.cli.initialize_backend_stores": {
  "data": {
   "shadows": "mlflow.server.handlers.initialize_backend_stores"
  },
  "type": "import"
 },
 "mlflow.cli.is_local_uri": {
  "data": {
   "shadows": "mlflow.utils.uri.is_local_uri"
  },
  "type": "import"
 },
 "mlflow.cli.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mlflow.cli.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.cli.mlflow.azureml.cli": {
  "data": {
   "shadows": "mlflow.azureml.cli"
  },
  "type": "import"
 },
 "mlflow.cli.mlflow.db": {
  "data": {
   "shadows": "mlflow.db"
  },
  "type": "import"
 },
 "mlflow.cli.mlflow.experiments": {
  "data": {
   "shadows": "mlflow.experiments"
  },
  "type": "import"
 },
 "mlflow.cli.mlflow.models.cli": {
  "data": {
   "shadows": "mlflow.models.cli"
  },
  "type": "import"
 },
 "mlflow.cli.mlflow.runs": {
  "data": {
   "shadows": "mlflow.runs"
  },
  "type": "import"
 },
 "mlflow.cli.mlflow.sagemaker.cli": {
  "data": {
   "shadows": "mlflow.sagemaker.cli"
  },
  "type": "import"
 },
 "mlflow.cli.mlflow.store.artifact.cli": {
  "data": {
   "shadows": "mlflow.store.artifact.cli"
  },
  "type": "import"
 },
 "mlflow.cli.mlflow.store.db.utils": {
  "data": {
   "shadows": "mlflow.store.db.utils"
  },
  "type": "import"
 },
 "mlflow.cli.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.cli.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mlflow.cli.projects": {
  "data": {
   "shadows": "mlflow.projects"
  },
  "type": "import"
 },
 "mlflow.cli.run": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "mlflow.cli._logger",
    "mlflow.cli.cli",
    "mlflow.cli.click",
    "mlflow.cli.json",
    "mlflow.cli.os",
    "mlflow.cli.sys",
    "mlflow.projects.ExecutionException",
    "mlflow.projects.run",
    "mlflow.tracking._EXPERIMENT_ID_ENV_VAR",
    "mlflow.tracking._EXPERIMENT_NAME_ENV_VAR",
    "mlflow.utils.cli_args.NO_CONDA",
    "mlflow.utils.logging_utils.eprint"
   ]
  },
  "type": "function"
 },
 "mlflow.cli.server": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "Exception",
    "mlflow.cli._logger",
    "mlflow.cli._validate_server_args",
    "mlflow.cli._validate_static_prefix",
    "mlflow.cli.cli",
    "mlflow.cli.click",
    "mlflow.cli.sys",
    "mlflow.server._run_server",
    "mlflow.server.handlers.initialize_backend_stores",
    "mlflow.store.tracking.DEFAULT_LOCAL_FILE_AND_ARTIFACT_PATH",
    "mlflow.utils.cli_args.HOST",
    "mlflow.utils.cli_args.PORT",
    "mlflow.utils.cli_args.WORKERS",
    "mlflow.utils.logging_utils.eprint",
    "mlflow.utils.process.ShellCommandException",
    "mlflow.utils.uri.is_local_uri"
   ]
  },
  "type": "function"
 },
 "mlflow.cli.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlflow.cli.tracking": {
  "data": {
   "shadows": "mlflow.tracking"
  },
  "type": "import"
 },
 "mlflow.cli.ui": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "Exception",
    "mlflow.cli._logger",
    "mlflow.cli.cli",
    "mlflow.cli.click",
    "mlflow.cli.sys",
    "mlflow.server._run_server",
    "mlflow.server.handlers.initialize_backend_stores",
    "mlflow.store.tracking.DEFAULT_LOCAL_FILE_AND_ARTIFACT_PATH",
    "mlflow.utils.cli_args.HOST",
    "mlflow.utils.cli_args.PORT",
    "mlflow.utils.logging_utils.eprint",
    "mlflow.utils.process.ShellCommandException",
    "mlflow.utils.uri.is_local_uri"
   ]
  },
  "type": "function"
 },
 "mlflow.create_experiment": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "mlflow.data": {
  "data": {
   "symbols_in_volume": [
    "mlflow.data.DBFS_PREFIX",
    "mlflow.data.GS_PREFIX",
    "mlflow.data.S3_PREFIX",
    "mlflow.data.re"
   ]
  },
  "type": "module"
 },
 "mlflow.data.DBFS_PREFIX": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "mlflow.data.DBFS_REGEX": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mlflow.data.DownloadException": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "mlflow.data.GS_PREFIX": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mlflow.data.GS_REGEX": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mlflow.data.S3_PREFIX": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mlflow.data.S3_REGEX": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mlflow.data._fetch_dbfs": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "mlflow.data.os",
    "mlflow.utils.process.exec_cmd",
    "print"
   ]
  },
  "type": "function"
 },
 "mlflow.data._fetch_gs": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "google.cloud.storage.Client",
    "mlflow.data.os",
    "mlflow.data.parse_gs_uri",
    "print"
   ]
  },
  "type": "function"
 },
 "mlflow.data._fetch_s3": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "mlflow.data.boto3",
    "mlflow.data.os",
    "mlflow.data.parse_s3_uri",
    "print"
   ]
  },
  "type": "function"
 },
 "mlflow.data.boto3": {
  "data": {
   "shadows": "boto3"
  },
  "type": "import"
 },
 "mlflow.data.download_uri": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "mlflow.data.DBFS_PREFIX",
    "mlflow.data.DBFS_REGEX",
    "mlflow.data.DownloadException",
    "mlflow.data.GS_PREFIX",
    "mlflow.data.GS_REGEX",
    "mlflow.data.S3_PREFIX",
    "mlflow.data.S3_REGEX",
    "mlflow.data._fetch_dbfs",
    "mlflow.data._fetch_gs",
    "mlflow.data._fetch_s3"
   ]
  },
  "type": "function"
 },
 "mlflow.data.is_uri": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "len",
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "mlflow.data.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.data.parse_gs_uri": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "Exception",
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "mlflow.data.parse_s3_uri": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "Exception",
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "mlflow.data.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mlflow.data.process": {
  "data": {
   "shadows": "mlflow.utils.process"
  },
  "type": "import"
 },
 "mlflow.data.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mlflow.data.storage": {
  "data": {
   "shadows": "google.cloud.storage"
  },
  "type": "import"
 },
 "mlflow.data.urllib": {
  "data": {
   "shadows": "six.moves.urllib"
  },
  "type": "import"
 },
 "mlflow.db": {
  "data": {},
  "type": "module"
 },
 "mlflow.db.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "mlflow.db.commands": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "mlflow.db.click"
   ]
  },
  "type": "function"
 },
 "mlflow.db.mlflow.store.db.utils": {
  "data": {
   "shadows": "mlflow.store.db.utils"
  },
  "type": "import"
 },
 "mlflow.db.upgrade": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "mlflow.db.click",
    "mlflow.db.commands"
   ]
  },
  "type": "function"
 },
 "mlflow.delete_experiment": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "mlflow.delete_run": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "mlflow.delete_tag": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "mlflow.end_run": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "mlflow.entities": {
  "data": {},
  "type": "module"
 },
 "mlflow.entities.Experiment": {
  "data": {
   "shadows": "mlflow.entities.experiment.Experiment"
  },
  "type": "import"
 },
 "mlflow.entities.ExperimentTag": {
  "data": {
   "shadows": "mlflow.entities.experiment_tag.ExperimentTag"
  },
  "type": "import"
 },
 "mlflow.entities.FileInfo": {
  "data": {
   "shadows": "mlflow.entities.file_info.FileInfo"
  },
  "type": "import"
 },
 "mlflow.entities.LifecycleStage": {
  "data": {
   "shadows": "mlflow.entities.lifecycle_stage.LifecycleStage"
  },
  "type": "import"
 },
 "mlflow.entities.Metric": {
  "data": {
   "shadows": "mlflow.entities.metric.Metric"
  },
  "type": "import"
 },
 "mlflow.entities.Param": {
  "data": {
   "shadows": "mlflow.entities.param.Param"
  },
  "type": "import"
 },
 "mlflow.entities.Run": {
  "data": {
   "shadows": "mlflow.entities.run.Run"
  },
  "type": "import"
 },
 "mlflow.entities.RunData": {
  "data": {
   "shadows": "mlflow.entities.run_data.RunData"
  },
  "type": "import"
 },
 "mlflow.entities.RunInfo": {
  "data": {
   "shadows": "mlflow.entities.run_info.RunInfo"
  },
  "type": "import"
 },
 "mlflow.entities.RunStatus": {
  "data": {
   "shadows": "mlflow.entities.run_status.RunStatus"
  },
  "type": "import"
 },
 "mlflow.entities.RunTag": {
  "data": {
   "shadows": "mlflow.entities.run_tag.RunTag"
  },
  "type": "import"
 },
 "mlflow.entities.SourceType": {
  "data": {
   "shadows": "mlflow.entities.source_type.SourceType"
  },
  "type": "import"
 },
 "mlflow.entities.ViewType": {
  "data": {
   "shadows": "mlflow.entities.view_type.ViewType"
  },
  "type": "import"
 },
 "mlflow.entities.__all__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mlflow.entities._mlflow_object": {
  "data": {},
  "type": "module"
 },
 "mlflow.entities._mlflow_object._MLflowObject": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.entities._mlflow_object._MLflowObject.__iter__": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "mlflow.entities._mlflow_object._MLflowObject.__repr__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "mlflow.entities._mlflow_object.to_string"
   ]
  },
  "type": "function"
 },
 "mlflow.entities._mlflow_object._MLflowObject._get_properties_helper": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "classmethod",
    "getattr",
    "isinstance",
    "property",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mlflow.entities._mlflow_object._MLflowObject._properties": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.entities._mlflow_object._MLflowObject.from_dictionary": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "mlflow.entities._mlflow_object._MLflowObject.from_proto": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.entities._mlflow_object._MLflowObjectPrinter": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.entities._mlflow_object._MLflowObjectPrinter.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "mlflow.entities._mlflow_object._MLflowObjectPrinter",
    "mlflow.entities._mlflow_object.pprint",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.entities._mlflow_object._MLflowObjectPrinter._entity_to_string": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "mlflow.entities._mlflow_object._MLflowObjectPrinter.to_string": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "isinstance",
    "mlflow.entities._mlflow_object._MLflowObject",
    "mlflow.entities._mlflow_object.get_classname"
   ]
  },
  "type": "function"
 },
 "mlflow.entities._mlflow_object.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "mlflow.entities._mlflow_object.get_classname": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "mlflow.entities._mlflow_object.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "mlflow.entities._mlflow_object.to_string": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "mlflow.entities._mlflow_object._MLflowObjectPrinter"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.experiment": {
  "data": {},
  "type": "module"
 },
 "mlflow.entities.experiment.Experiment": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "mlflow.entities._mlflow_object._MLflowObject"
   ]
  },
  "type": "class"
 },
 "mlflow.entities.experiment.Experiment.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.Experiment",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.experiment.Experiment._add_tag": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "mlflow.entities.experiment.Experiment._set_name": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "mlflow.entities.experiment.Experiment.artifact_location": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.experiment.Experiment.experiment_id": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.experiment.Experiment.from_proto": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "mlflow.protos.service_pb2.ExperimentTag.from_proto"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.experiment.Experiment.lifecycle_stage": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.experiment.Experiment.name": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.experiment.Experiment.tags": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.experiment.Experiment.to_proto": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.Experiment",
    "mlflow.protos.service_pb2.ExperimentTag"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.experiment.ExperimentTag": {
  "data": {
   "shadows": "mlflow.entities.experiment_tag.ExperimentTag"
  },
  "type": "import"
 },
 "mlflow.entities.experiment.ProtoExperiment": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.Experiment"
  },
  "type": "import"
 },
 "mlflow.entities.experiment.ProtoExperimentTag": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.ExperimentTag"
  },
  "type": "import"
 },
 "mlflow.entities.experiment._MLflowObject": {
  "data": {
   "shadows": "mlflow.entities._mlflow_object._MLflowObject"
  },
  "type": "import"
 },
 "mlflow.entities.experiment_tag": {
  "data": {},
  "type": "module"
 },
 "mlflow.entities.experiment_tag.ExperimentTag": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "mlflow.entities._mlflow_object._MLflowObject"
   ]
  },
  "type": "class"
 },
 "mlflow.entities.experiment_tag.ExperimentTag.__eq__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.experiment_tag.ExperimentTag.__init__": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "mlflow.entities.experiment_tag.ExperimentTag.from_proto": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.experiment_tag.ExperimentTag.key": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.experiment_tag.ExperimentTag.to_proto": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.ExperimentTag"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.experiment_tag.ExperimentTag.value": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.experiment_tag.ProtoExperimentTag": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.ExperimentTag"
  },
  "type": "import"
 },
 "mlflow.entities.experiment_tag._MLflowObject": {
  "data": {
   "shadows": "mlflow.entities._mlflow_object._MLflowObject"
  },
  "type": "import"
 },
 "mlflow.entities.file_info": {
  "data": {},
  "type": "module"
 },
 "mlflow.entities.file_info.FileInfo": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "mlflow.entities._mlflow_object._MLflowObject"
   ]
  },
  "type": "class"
 },
 "mlflow.entities.file_info.FileInfo.__eq__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.file_info.FileInfo.__init__": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "mlflow.entities.file_info.FileInfo.file_size": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.file_info.FileInfo.from_proto": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.file_info.FileInfo.is_dir": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.file_info.FileInfo.path": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.file_info.FileInfo.to_proto": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.FileInfo"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.file_info.ProtoFileInfo": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.FileInfo"
  },
  "type": "import"
 },
 "mlflow.entities.file_info._MLflowObject": {
  "data": {
   "shadows": "mlflow.entities._mlflow_object._MLflowObject"
  },
  "type": "import"
 },
 "mlflow.entities.lifecycle_stage": {
  "data": {},
  "type": "module"
 },
 "mlflow.entities.lifecycle_stage.LifecycleStage": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "object",
    "set"
   ]
  },
  "type": "class"
 },
 "mlflow.entities.lifecycle_stage.LifecycleStage.is_valid": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.lifecycle_stage.LifecycleStage.matches_view_type": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "classmethod",
    "mlflow.entities.lifecycle_stage.LifecycleStage",
    "mlflow.entities.view_type.ViewType.ACTIVE_ONLY",
    "mlflow.entities.view_type.ViewType.ALL",
    "mlflow.entities.view_type.ViewType.DELETED_ONLY",
    "mlflow.exceptions.MlflowException",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.lifecycle_stage.LifecycleStage.view_type_to_stages": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "classmethod",
    "mlflow.entities.view_type.ViewType.ACTIVE_ONLY",
    "mlflow.entities.view_type.ViewType.ALL",
    "mlflow.entities.view_type.ViewType.DELETED_ONLY"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.lifecycle_stage.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.entities.lifecycle_stage.ViewType": {
  "data": {
   "shadows": "mlflow.entities.view_type.ViewType"
  },
  "type": "import"
 },
 "mlflow.entities.metric": {
  "data": {},
  "type": "module"
 },
 "mlflow.entities.metric.Metric": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "mlflow.entities._mlflow_object._MLflowObject"
   ]
  },
  "type": "class"
 },
 "mlflow.entities.metric.Metric.__init__": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "mlflow.entities.metric.Metric.from_proto": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.metric.Metric.key": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.metric.Metric.step": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.metric.Metric.timestamp": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.metric.Metric.to_proto": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.Metric"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.metric.Metric.value": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.metric.ProtoMetric": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.Metric"
  },
  "type": "import"
 },
 "mlflow.entities.metric._MLflowObject": {
  "data": {
   "shadows": "mlflow.entities._mlflow_object._MLflowObject"
  },
  "type": "import"
 },
 "mlflow.entities.model_registry": {
  "data": {},
  "type": "module"
 },
 "mlflow.entities.model_registry.ModelVersion": {
  "data": {
   "shadows": "mlflow.entities.model_registry.model_version.ModelVersion"
  },
  "type": "import"
 },
 "mlflow.entities.model_registry.RegisteredModel": {
  "data": {
   "shadows": "mlflow.entities.model_registry.registered_model.RegisteredModel"
  },
  "type": "import"
 },
 "mlflow.entities.model_registry.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "mlflow.entities.model_registry._model_registry_entity": {
  "data": {},
  "type": "module"
 },
 "mlflow.entities.model_registry._model_registry_entity._MLflowObject": {
  "data": {
   "shadows": "mlflow.entities._mlflow_object._MLflowObject"
  },
  "type": "import"
 },
 "mlflow.entities.model_registry._model_registry_entity._ModelRegistryEntity": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "mlflow.entities._mlflow_object._MLflowObject"
   ]
  },
  "type": "class"
 },
 "mlflow.entities.model_registry._model_registry_entity._ModelRegistryEntity.__eq__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.model_registry._model_registry_entity._ModelRegistryEntity.from_proto": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.model_registry._model_registry_entity.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "mlflow.entities.model_registry.model_version": {
  "data": {},
  "type": "module"
 },
 "mlflow.entities.model_registry.model_version.ModelVersion": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "mlflow.entities.model_registry._model_registry_entity._ModelRegistryEntity"
   ]
  },
  "type": "class"
 },
 "mlflow.entities.model_registry.model_version.ModelVersion.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "mlflow.protos.model_registry_pb2.ModelVersion",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version.ModelVersion._properties": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "classmethod",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version.ModelVersion.creation_timestamp": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version.ModelVersion.current_stage": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version.ModelVersion.description": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version.ModelVersion.from_proto": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "mlflow.entities.model_registry.model_version_status.ModelVersionStatus.to_string"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version.ModelVersion.last_updated_timestamp": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version.ModelVersion.name": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version.ModelVersion.run_id": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version.ModelVersion.source": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version.ModelVersion.status": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version.ModelVersion.status_message": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version.ModelVersion.to_proto": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "mlflow.entities.model_registry.model_version_status.ModelVersionStatus.from_string",
    "mlflow.protos.model_registry_pb2.ModelVersion",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version.ModelVersion.user_id": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version.ModelVersion.version": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version.ModelVersionStatus": {
  "data": {
   "shadows": "mlflow.entities.model_registry.model_version_status.ModelVersionStatus"
  },
  "type": "import"
 },
 "mlflow.entities.model_registry.model_version.ProtoModelVersion": {
  "data": {
   "shadows": "mlflow.protos.model_registry_pb2.ModelVersion"
  },
  "type": "import"
 },
 "mlflow.entities.model_registry.model_version._ModelRegistryEntity": {
  "data": {
   "shadows": "mlflow.entities.model_registry._model_registry_entity._ModelRegistryEntity"
  },
  "type": "import"
 },
 "mlflow.entities.model_registry.model_version_stages": {
  "data": {
   "symbols_in_volume": [
    "mlflow.entities.model_registry.model_version_stages.ALL_STAGES",
    "mlflow.entities.model_registry.model_version_stages.STAGE_ARCHIVED",
    "mlflow.entities.model_registry.model_version_stages.STAGE_NONE",
    "mlflow.entities.model_registry.model_version_stages.STAGE_PRODUCTION",
    "mlflow.entities.model_registry.model_version_stages.STAGE_STAGING"
   ]
  },
  "type": "module"
 },
 "mlflow.entities.model_registry.model_version_stages.ALL_STAGES": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mlflow.entities.model_registry.model_version_stages.DEFAULT_STAGES_FOR_GET_LATEST_VERSIONS": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mlflow.entities.model_registry.model_version_stages.INVALID_PARAMETER_VALUE": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  },
  "type": "import"
 },
 "mlflow.entities.model_registry.model_version_stages.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.entities.model_registry.model_version_stages.STAGE_ARCHIVED": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "mlflow.entities.model_registry.model_version_stages.STAGE_DELETED_INTERNAL": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "mlflow.entities.model_registry.model_version_stages.STAGE_NONE": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "mlflow.entities.model_registry.model_version_stages.STAGE_PRODUCTION": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "mlflow.entities.model_registry.model_version_stages.STAGE_STAGING": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "mlflow.entities.model_registry.model_version_stages._CANONICAL_MAPPING": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mlflow.entities.model_registry.model_version_stages.get_canonical_stage": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "mlflow.entities.model_registry.model_version_stages._CANONICAL_MAPPING",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version_status": {
  "data": {},
  "type": "module"
 },
 "mlflow.entities.model_registry.model_version_status.ModelVersionStatus": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "mlflow.protos.model_registry_pb2.ModelVersionStatus.Value",
    "mlflow.protos.model_registry_pb2.ModelVersionStatus.keys",
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.entities.model_registry.model_version_status.ModelVersionStatus.all_status": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "list",
    "mlflow.protos.model_registry_pb2.ModelVersionStatus._STATUS_TO_STRING.keys",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version_status.ModelVersionStatus.from_string": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "Exception",
    "list",
    "mlflow.protos.model_registry_pb2.ModelVersionStatus._STRING_TO_STATUS",
    "mlflow.protos.model_registry_pb2.ModelVersionStatus._STRING_TO_STATUS.keys",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version_status.ModelVersionStatus.to_string": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "Exception",
    "list",
    "mlflow.protos.model_registry_pb2.ModelVersionStatus._STATUS_TO_STRING",
    "mlflow.protos.model_registry_pb2.ModelVersionStatus._STATUS_TO_STRING.keys",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version_status.ProtoModelVersionStatus": {
  "data": {
   "shadows": "mlflow.protos.model_registry_pb2.ModelVersionStatus"
  },
  "type": "import"
 },
 "mlflow.entities.model_registry.registered_model": {
  "data": {},
  "type": "module"
 },
 "mlflow.entities.model_registry.registered_model.ModelVersion": {
  "data": {
   "shadows": "mlflow.entities.model_registry.model_version.ModelVersion"
  },
  "type": "import"
 },
 "mlflow.entities.model_registry.registered_model.ProtoRegisteredModel": {
  "data": {
   "shadows": "mlflow.protos.model_registry_pb2.RegisteredModel"
  },
  "type": "import"
 },
 "mlflow.entities.model_registry.registered_model.RegisteredModel": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "mlflow.entities.model_registry._model_registry_entity._ModelRegistryEntity"
   ]
  },
  "type": "class"
 },
 "mlflow.entities.model_registry.registered_model.RegisteredModel.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "mlflow.protos.model_registry_pb2.RegisteredModel",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.model_registry.registered_model.RegisteredModel._properties": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "classmethod",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.model_registry.registered_model.RegisteredModel.creation_timestamp": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.model_registry.registered_model.RegisteredModel.description": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.model_registry.registered_model.RegisteredModel.from_proto": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "mlflow.entities.model_registry.model_version.ModelVersion.from_proto"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.model_registry.registered_model.RegisteredModel.last_updated_timestamp": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.model_registry.registered_model.RegisteredModel.latest_versions": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.model_registry.registered_model.RegisteredModel.name": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.model_registry.registered_model.RegisteredModel.to_proto": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "mlflow.protos.model_registry_pb2.RegisteredModel"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.model_registry.registered_model._ModelRegistryEntity": {
  "data": {
   "shadows": "mlflow.entities.model_registry._model_registry_entity._ModelRegistryEntity"
  },
  "type": "import"
 },
 "mlflow.entities.param": {
  "data": {},
  "type": "module"
 },
 "mlflow.entities.param.Param": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "mlflow.entities._mlflow_object._MLflowObject"
   ]
  },
  "type": "class"
 },
 "mlflow.entities.param.Param.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "isinstance",
    "mlflow.entities.param.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.param.Param.from_proto": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.param.Param.key": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.param.Param.to_proto": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.Param"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.param.Param.value": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.param.ProtoParam": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.Param"
  },
  "type": "import"
 },
 "mlflow.entities.param._MLflowObject": {
  "data": {
   "shadows": "mlflow.entities._mlflow_object._MLflowObject"
  },
  "type": "import"
 },
 "mlflow.entities.param.pyspark.ml.param": {
  "data": {
   "shadows": "pyspark.ml.param"
  },
  "type": "import"
 },
 "mlflow.entities.param.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlflow.entities.run": {
  "data": {},
  "type": "module"
 },
 "mlflow.entities.run.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.entities.run.ProtoRun": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.Run"
  },
  "type": "import"
 },
 "mlflow.entities.run.Run": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "mlflow.entities._mlflow_object._MLflowObject"
   ]
  },
  "type": "class"
 },
 "mlflow.entities.run.Run.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run.Run.data": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run.Run.from_proto": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "mlflow.entities.run_data.RunData.from_proto",
    "mlflow.entities.run_info.RunInfo.from_proto"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run.Run.info": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run.Run.to_dictionary": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run.Run.to_proto": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.Run"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run.RunData": {
  "data": {
   "shadows": "mlflow.entities.run_data.RunData"
  },
  "type": "import"
 },
 "mlflow.entities.run.RunInfo": {
  "data": {
   "shadows": "mlflow.entities.run_info.RunInfo"
  },
  "type": "import"
 },
 "mlflow.entities.run._MLflowObject": {
  "data": {
   "shadows": "mlflow.entities._mlflow_object._MLflowObject"
  },
  "type": "import"
 },
 "mlflow.entities.run_data": {
  "data": {},
  "type": "module"
 },
 "mlflow.entities.run_data.Metric": {
  "data": {
   "shadows": "mlflow.entities.metric.Metric"
  },
  "type": "import"
 },
 "mlflow.entities.run_data.Param": {
  "data": {
   "shadows": "mlflow.entities.param.Param"
  },
  "type": "import"
 },
 "mlflow.entities.run_data.ProtoParam": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.Param"
  },
  "type": "import"
 },
 "mlflow.entities.run_data.ProtoRunData": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.RunData"
  },
  "type": "import"
 },
 "mlflow.entities.run_data.ProtoRunTag": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.RunTag"
  },
  "type": "import"
 },
 "mlflow.entities.run_data.RunData": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "mlflow.entities._mlflow_object._MLflowObject"
   ]
  },
  "type": "class"
 },
 "mlflow.entities.run_data.RunData.__init__": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "mlflow.entities.run_data.RunData._add_metric": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "mlflow.entities.run_data.RunData._add_param": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "mlflow.entities.run_data.RunData._add_tag": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "mlflow.entities.run_data.RunData.from_proto": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "mlflow.entities.metric.Metric.from_proto",
    "mlflow.protos.service_pb2.Param.from_proto",
    "mlflow.protos.service_pb2.RunTag.from_proto"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_data.RunData.metrics": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_data.RunData.params": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_data.RunData.tags": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_data.RunData.to_dictionary": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "mlflow.entities.run_data.RunData.to_proto": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.Param",
    "mlflow.protos.service_pb2.RunData",
    "mlflow.protos.service_pb2.RunTag"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_data.RunTag": {
  "data": {
   "shadows": "mlflow.entities.run_tag.RunTag"
  },
  "type": "import"
 },
 "mlflow.entities.run_data._MLflowObject": {
  "data": {
   "shadows": "mlflow.entities._mlflow_object._MLflowObject"
  },
  "type": "import"
 },
 "mlflow.entities.run_info": {
  "data": {},
  "type": "module"
 },
 "mlflow.entities.run_info.LifecycleStage": {
  "data": {
   "shadows": "mlflow.entities.lifecycle_stage.LifecycleStage"
  },
  "type": "import"
 },
 "mlflow.entities.run_info.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.entities.run_info.ProtoRunInfo": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.RunInfo"
  },
  "type": "import"
 },
 "mlflow.entities.run_info.RunInfo": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "mlflow.entities._mlflow_object._MLflowObject"
   ]
  },
  "type": "class"
 },
 "mlflow.entities.run_info.RunInfo.__eq__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo._copy_with_overrides": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.RunInfo.from_proto"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.artifact_uri": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "mlflow.entities.run_info.searchable_attribute"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.end_time": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "mlflow.entities.run_info.orderable_attribute"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.experiment_id": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.from_proto": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "mlflow.entities.run_status.RunStatus.to_string"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.get_orderable_attributes": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "cls.__dict__",
    "getattr",
    "isinstance",
    "mlflow.entities.run_info.orderable_attribute",
    "mlflow.entities.run_info.searchable_attribute",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.get_searchable_attributes": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "cls.__dict__",
    "getattr",
    "isinstance",
    "mlflow.entities.run_info.searchable_attribute",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.lifecycle_stage": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.run_id": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.run_uuid": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.start_time": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "mlflow.entities.run_info.orderable_attribute"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.status": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "mlflow.entities.run_info.searchable_attribute"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.to_proto": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "mlflow.entities.run_status.RunStatus.from_string",
    "mlflow.protos.service_pb2.RunInfo"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.user_id": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.RunStatus": {
  "data": {
   "shadows": "mlflow.entities.run_status.RunStatus"
  },
  "type": "import"
 },
 "mlflow.entities.run_info._MLflowObject": {
  "data": {
   "shadows": "mlflow.entities._mlflow_object._MLflowObject"
  },
  "type": "import"
 },
 "mlflow.entities.run_info.check_run_is_active": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
    "mlflow.exceptions.MlflowException"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.check_run_is_deleted": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "mlflow.entities.lifecycle_stage.LifecycleStage.DELETED",
    "mlflow.exceptions.MlflowException"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.orderable_attribute": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "class"
 },
 "mlflow.entities.run_info.searchable_attribute": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "class"
 },
 "mlflow.entities.run_status": {
  "data": {},
  "type": "module"
 },
 "mlflow.entities.run_status.ProtoRunStatus": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.RunStatus"
  },
  "type": "import"
 },
 "mlflow.entities.run_status.RunStatus": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.RunStatus.Value",
    "mlflow.protos.service_pb2.RunStatus.keys",
    "object",
    "set"
   ]
  },
  "type": "class"
 },
 "mlflow.entities.run_status.RunStatus.all_status": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "list",
    "mlflow.protos.service_pb2.RunStatus._STATUS_TO_STRING.keys",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_status.RunStatus.from_string": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "Exception",
    "list",
    "mlflow.protos.service_pb2.RunStatus._STRING_TO_STATUS",
    "mlflow.protos.service_pb2.RunStatus._STRING_TO_STATUS.keys",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_status.RunStatus.is_terminated": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.RunStatus._TERMINATED_STATUSES",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_status.RunStatus.to_string": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "Exception",
    "list",
    "mlflow.protos.service_pb2.RunStatus._STATUS_TO_STRING",
    "mlflow.protos.service_pb2.RunStatus._STATUS_TO_STRING.keys",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_tag": {
  "data": {},
  "type": "module"
 },
 "mlflow.entities.run_tag.ProtoRunTag": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.RunTag"
  },
  "type": "import"
 },
 "mlflow.entities.run_tag.RunTag": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "mlflow.entities._mlflow_object._MLflowObject"
   ]
  },
  "type": "class"
 },
 "mlflow.entities.run_tag.RunTag.__eq__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_tag.RunTag.__init__": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "mlflow.entities.run_tag.RunTag.from_proto": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_tag.RunTag.key": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_tag.RunTag.to_proto": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.RunTag"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_tag.RunTag.value": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_tag._MLflowObject": {
  "data": {
   "shadows": "mlflow.entities._mlflow_object._MLflowObject"
  },
  "type": "import"
 },
 "mlflow.entities.source_type": {
  "data": {},
  "type": "module"
 },
 "mlflow.entities.source_type.SourceType": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "object",
    "range"
   ]
  },
  "type": "class"
 },
 "mlflow.entities.source_type.SourceType.from_string": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "Exception",
    "list",
    "mlflow.entities.source_type.SourceType",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.source_type.SourceType.to_string": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "Exception",
    "list",
    "mlflow.entities.source_type.SourceType",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.view_type": {
  "data": {},
  "type": "module"
 },
 "mlflow.entities.view_type.ViewType": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "object",
    "range"
   ]
  },
  "type": "class"
 },
 "mlflow.entities.view_type.ViewType.from_proto": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "mlflow.protos.service_pb2.ACTIVE_ONLY",
    "mlflow.protos.service_pb2.ALL",
    "mlflow.protos.service_pb2.DELETED_ONLY"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.view_type.ViewType.from_string": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "Exception",
    "classmethod",
    "list"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.view_type.ViewType.to_proto": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "mlflow.protos.service_pb2.ACTIVE_ONLY",
    "mlflow.protos.service_pb2.ALL",
    "mlflow.protos.service_pb2.DELETED_ONLY"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.view_type.ViewType.to_string": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "Exception",
    "classmethod",
    "list"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.view_type.service_pb2": {
  "data": {
   "shadows": "mlflow.protos.service_pb2"
  },
  "type": "import"
 },
 "mlflow.exceptions": {
  "data": {
   "symbols_in_volume": [
    "mlflow.protos.databricks_pb2.BAD_REQUEST",
    "mlflow.protos.databricks_pb2.ENDPOINT_NOT_FOUND",
    "mlflow.protos.databricks_pb2.ErrorCode.Name",
    "mlflow.protos.databricks_pb2.INTERNAL_ERROR",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.protos.databricks_pb2.INVALID_STATE",
    "mlflow.protos.databricks_pb2.PERMISSION_DENIED",
    "mlflow.protos.databricks_pb2.REQUEST_LIMIT_EXCEEDED",
    "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.protos.databricks_pb2.TEMPORARILY_UNAVAILABLE"
   ]
  },
  "type": "module"
 },
 "mlflow.exceptions.BAD_REQUEST": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.BAD_REQUEST"
  },
  "type": "import"
 },
 "mlflow.exceptions.ENDPOINT_NOT_FOUND": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.ENDPOINT_NOT_FOUND"
  },
  "type": "import"
 },
 "mlflow.exceptions.ERROR_CODE_TO_HTTP_STATUS": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "mlflow.exceptions.ErrorCode": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.ErrorCode"
  },
  "type": "import"
 },
 "mlflow.exceptions.ExecutionException": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException"
   ]
  },
  "type": "class"
 },
 "mlflow.exceptions.INTERNAL_ERROR": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INTERNAL_ERROR"
  },
  "type": "import"
 },
 "mlflow.exceptions.INVALID_PARAMETER_VALUE": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  },
  "type": "import"
 },
 "mlflow.exceptions.INVALID_STATE": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INVALID_STATE"
  },
  "type": "import"
 },
 "mlflow.exceptions.MissingConfigException": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException"
   ]
  },
  "type": "class"
 },
 "mlflow.exceptions.MlflowException": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "mlflow.exceptions.MlflowException.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.ErrorCode.Name",
    "mlflow.protos.databricks_pb2.INTERNAL_ERROR",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.exceptions.MlflowException.get_http_status_code": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "mlflow.exceptions.ERROR_CODE_TO_HTTP_STATUS"
   ]
  },
  "type": "function"
 },
 "mlflow.exceptions.MlflowException.serialize_as_json": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "mlflow.exceptions.json"
   ]
  },
  "type": "function"
 },
 "mlflow.exceptions.PERMISSION_DENIED": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.PERMISSION_DENIED"
  },
  "type": "import"
 },
 "mlflow.exceptions.REQUEST_LIMIT_EXCEEDED": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.REQUEST_LIMIT_EXCEEDED"
  },
  "type": "import"
 },
 "mlflow.exceptions.RESOURCE_ALREADY_EXISTS": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS"
  },
  "type": "import"
 },
 "mlflow.exceptions.RESOURCE_DOES_NOT_EXIST": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST"
  },
  "type": "import"
 },
 "mlflow.exceptions.RestException": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException"
   ]
  },
  "type": "class"
 },
 "mlflow.exceptions.RestException.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "mlflow.exceptions.RestException",
    "mlflow.exceptions.json",
    "mlflow.protos.databricks_pb2.ErrorCode.Name",
    "mlflow.protos.databricks_pb2.ErrorCode.Value",
    "mlflow.protos.databricks_pb2.INTERNAL_ERROR",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.exceptions.TEMPORARILY_UNAVAILABLE": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.TEMPORARILY_UNAVAILABLE"
  },
  "type": "import"
 },
 "mlflow.exceptions.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mlflow.experiments": {
  "data": {
   "symbols_in_volume": [
    "mlflow.experiments.click"
   ]
  },
  "type": "module"
 },
 "mlflow.experiments.EXPERIMENT_ID": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mlflow.experiments.ViewType": {
  "data": {
   "shadows": "mlflow.entities.ViewType"
  },
  "type": "import"
 },
 "mlflow.experiments._get_store": {
  "data": {
   "shadows": "mlflow.tracking._get_store"
  },
  "type": "import"
 },
 "mlflow.experiments.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "mlflow.experiments.commands": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "mlflow.experiments.click"
   ]
  },
  "type": "function"
 },
 "mlflow.experiments.create": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "mlflow.experiments.click",
    "mlflow.experiments.commands",
    "mlflow.tracking._get_store",
    "print"
   ]
  },
  "type": "function"
 },
 "mlflow.experiments.delete_experiment": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "mlflow.experiments.EXPERIMENT_ID",
    "mlflow.experiments.commands",
    "mlflow.tracking._get_store",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.experiments.fluent": {
  "data": {
   "shadows": "mlflow.tracking.fluent"
  },
  "type": "import"
 },
 "mlflow.experiments.generate_csv_with_runs": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "mlflow.experiments.EXPERIMENT_ID",
    "mlflow.experiments.click",
    "mlflow.experiments.commands",
    "mlflow.tracking.fluent.search_runs",
    "print"
   ]
  },
  "type": "function"
 },
 "mlflow.experiments.is_uri": {
  "data": {
   "shadows": "mlflow.data.is_uri"
  },
  "type": "import"
 },
 "mlflow.experiments.list_experiments": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "mlflow.data.is_uri",
    "mlflow.entities.ViewType.ACTIVE_ONLY",
    "mlflow.entities.ViewType.from_string",
    "mlflow.experiments.click",
    "mlflow.experiments.commands",
    "mlflow.experiments.os",
    "mlflow.tracking._get_store",
    "print",
    "sorted",
    "tabulate.tabulate"
   ]
  },
  "type": "function"
 },
 "mlflow.experiments.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.experiments.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mlflow.experiments.rename_experiment": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "mlflow.experiments.EXPERIMENT_ID",
    "mlflow.experiments.click",
    "mlflow.experiments.commands",
    "mlflow.tracking._get_store",
    "print"
   ]
  },
  "type": "function"
 },
 "mlflow.experiments.restore_experiment": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "mlflow.experiments.EXPERIMENT_ID",
    "mlflow.experiments.commands",
    "mlflow.tracking._get_store",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.experiments.tabulate": {
  "data": {
   "shadows": "tabulate.tabulate"
  },
  "type": "import"
 },
 "mlflow.get_artifact_uri": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "mlflow.get_experiment": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "mlflow.get_experiment_by_name": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "mlflow.get_run": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "mlflow.get_tracking_uri": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "mlflow.gluon": {
  "data": {},
  "type": "module"
 },
 "mlflow.gluon.EpochEnd": {
  "data": {
   "shadows": "mxnet.gluon.contrib.estimator.EpochEnd"
  },
  "type": "import"
 },
 "mlflow.gluon.Estimator": {
  "data": {
   "shadows": "mxnet.gluon.contrib.estimator.Estimator"
  },
  "type": "import"
 },
 "mlflow.gluon.FLAVOR_NAME": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mlflow.gluon.HybridSequential": {
  "data": {
   "shadows": "mxnet.gluon.nn.HybridSequential"
  },
  "type": "import"
 },
 "mlflow.gluon.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.gluon.Model": {
  "data": {
   "shadows": "mlflow.models.Model"
  },
  "type": "import"
 },
 "mlflow.gluon.TrainBegin": {
  "data": {
   "shadows": "mxnet.gluon.contrib.estimator.TrainBegin"
  },
  "type": "import"
 },
 "mlflow.gluon.TrainEnd": {
  "data": {
   "shadows": "mxnet.gluon.contrib.estimator.TrainEnd"
  },
  "type": "import"
 },
 "mlflow.gluon._GluonModelWrapper": {
  "data": {
   "lineno": 61
  },
  "type": "class"
 },
 "mlflow.gluon._GluonModelWrapper.__init__": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "mlflow.gluon._GluonModelWrapper.predict": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "mxnet.nd.array",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "mlflow.gluon._MODEL_SAVE_PATH": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mlflow.gluon._download_artifact_from_uri": {
  "data": {
   "shadows": "mlflow.tracking.artifact_utils._download_artifact_from_uri"
  },
  "type": "import"
 },
 "mlflow.gluon._load_pyfunc": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "mlflow.gluon._GluonModelWrapper",
    "mlflow.gluon.load_model",
    "mxnet.current_context"
   ]
  },
  "type": "function"
 },
 "mlflow.gluon._mlflow_conda_env": {
  "data": {
   "shadows": "mlflow.utils.environment._mlflow_conda_env"
  },
  "type": "import"
 },
 "mlflow.gluon.autolog": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "mlflow.gluon.gorilla",
    "mlflow.utils.experimental",
    "mxnet.gluon.contrib.estimator.Estimator"
   ]
  },
  "type": "function"
 },
 "mlflow.gluon.autolog.__MLflowGluonCallback": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "mxnet.gluon.contrib.estimator.EpochEnd",
    "mxnet.gluon.contrib.estimator.TrainBegin",
    "mxnet.gluon.contrib.estimator.TrainEnd"
   ]
  },
  "type": "class"
 },
 "mlflow.gluon.autolog.__MLflowGluonCallback.__init__": {
  "data": {
   "lineno": 224
  },
  "type": "function"
 },
 "mlflow.gluon.autolog.__MLflowGluonCallback.epoch_end": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "mlflow.gluon.mlflow",
    "mlflow.utils.autologging_utils.try_mlflow_log"
   ]
  },
  "type": "function"
 },
 "mlflow.gluon.autolog.__MLflowGluonCallback.train_begin": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "mlflow.gluon.mlflow",
    "mlflow.utils.autologging_utils.try_mlflow_log",
    "type"
   ]
  },
  "type": "function"
 },
 "mlflow.gluon.autolog.__MLflowGluonCallback.train_end": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "isinstance",
    "mlflow.gluon.log_model",
    "mlflow.utils.autologging_utils.try_mlflow_log",
    "mxnet.gluon.nn.HybridSequential"
   ]
  },
  "type": "function"
 },
 "mlflow.gluon.autolog.fit": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "__MLflowGluonCallback",
    "len",
    "list",
    "mlflow.gluon.gorilla",
    "mlflow.gluon.mlflow",
    "mxnet.gluon.contrib.estimator.Estimator",
    "original",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mlflow.gluon.experimental": {
  "data": {
   "shadows": "mlflow.utils.experimental"
  },
  "type": "import"
 },
 "mlflow.gluon.get_default_conda_env": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "mlflow.utils.environment._mlflow_conda_env",
    "mxnet.__version__"
   ]
  },
  "type": "function"
 },
 "mlflow.gluon.gluon": {
  "data": {
   "shadows": "mxnet.gluon"
  },
  "type": "import"
 },
 "mlflow.gluon.gorilla": {
  "data": {
   "shadows": "gorilla"
  },
  "type": "import"
 },
 "mlflow.gluon.load_model": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "mlflow.gluon._MODEL_SAVE_PATH",
    "mlflow.gluon.os",
    "mlflow.tracking.artifact_utils._download_artifact_from_uri",
    "mlflow.utils.experimental",
    "mxnet.gluon.SymbolBlock",
    "mxnet.sym.load",
    "mxnet.sym.var"
   ]
  },
  "type": "function"
 },
 "mlflow.gluon.log_model": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "mlflow.gluon.mlflow",
    "mlflow.models.Model.log",
    "mlflow.utils.experimental"
   ]
  },
  "type": "function"
 },
 "mlflow.gluon.mlflow": {
  "data": {
   "shadows": "mlflow"
  },
  "type": "import"
 },
 "mlflow.gluon.mx": {
  "data": {
   "shadows": "mxnet"
  },
  "type": "import"
 },
 "mlflow.gluon.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.gluon.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "mlflow.gluon.pyfunc": {
  "data": {
   "shadows": "mlflow.pyfunc"
  },
  "type": "import"
 },
 "mlflow.gluon.save_model": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "mlflow.exceptions.MlflowException",
    "mlflow.gluon._MODEL_SAVE_PATH",
    "mlflow.gluon.get_default_conda_env",
    "mlflow.gluon.os",
    "mlflow.gluon.yaml",
    "mlflow.models.Model",
    "mlflow.pyfunc.add_to_model",
    "mlflow.utils.experimental",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.gluon.sym": {
  "data": {
   "shadows": "mxnet.sym"
  },
  "type": "import"
 },
 "mlflow.gluon.try_mlflow_log": {
  "data": {
   "shadows": "mlflow.utils.autologging_utils.try_mlflow_log"
  },
  "type": "import"
 },
 "mlflow.gluon.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "mlflow.h2o": {
  "data": {},
  "type": "module"
 },
 "mlflow.h2o.FLAVOR_NAME": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mlflow.h2o.Model": {
  "data": {
   "shadows": "mlflow.models.Model"
  },
  "type": "import"
 },
 "mlflow.h2o._H2OModelWrapper": {
  "data": {
   "lineno": 152
  },
  "type": "class"
 },
 "mlflow.h2o._H2OModelWrapper.__init__": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "mlflow.h2o._H2OModelWrapper.predict": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "mlflow.h2o.h2o"
   ]
  },
  "type": "function"
 },
 "mlflow.h2o._download_artifact_from_uri": {
  "data": {
   "shadows": "mlflow.tracking.artifact_utils._download_artifact_from_uri"
  },
  "type": "import"
 },
 "mlflow.h2o._get_flavor_configuration": {
  "data": {
   "shadows": "mlflow.utils.model_utils._get_flavor_configuration"
  },
  "type": "import"
 },
 "mlflow.h2o._load_model": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "mlflow.h2o.h2o",
    "mlflow.h2o.os",
    "mlflow.h2o.yaml",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.h2o._load_pyfunc": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "mlflow.h2o._H2OModelWrapper",
    "mlflow.h2o._load_model"
   ]
  },
  "type": "function"
 },
 "mlflow.h2o._mlflow_conda_env": {
  "data": {
   "shadows": "mlflow.utils.environment._mlflow_conda_env"
  },
  "type": "import"
 },
 "mlflow.h2o.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "mlflow.h2o.get_default_conda_env": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "mlflow.h2o.h2o",
    "mlflow.utils.environment._mlflow_conda_env"
   ]
  },
  "type": "function"
 },
 "mlflow.h2o.h2o": {
  "data": {
   "shadows": "h2o"
  },
  "type": "import"
 },
 "mlflow.h2o.load_model": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "mlflow.h2o.FLAVOR_NAME",
    "mlflow.h2o._load_model",
    "mlflow.h2o.os",
    "mlflow.tracking.artifact_utils._download_artifact_from_uri",
    "mlflow.utils.model_utils._get_flavor_configuration"
   ]
  },
  "type": "function"
 },
 "mlflow.h2o.log_model": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "mlflow.h2o.mlflow",
    "mlflow.models.Model.log"
   ]
  },
  "type": "function"
 },
 "mlflow.h2o.mlflow": {
  "data": {
   "shadows": "mlflow"
  },
  "type": "import"
 },
 "mlflow.h2o.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.h2o.pyfunc": {
  "data": {
   "shadows": "mlflow.pyfunc"
  },
  "type": "import"
 },
 "mlflow.h2o.save_model": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "isinstance",
    "mlflow.h2o.FLAVOR_NAME",
    "mlflow.h2o.get_default_conda_env",
    "mlflow.h2o.h2o",
    "mlflow.h2o.os",
    "mlflow.h2o.yaml",
    "mlflow.models.Model",
    "mlflow.pyfunc.add_to_model",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.h2o.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "mlflow.keras": {
  "data": {},
  "type": "module"
 },
 "mlflow.keras.FLAVOR_NAME": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mlflow.keras.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "mlflow.keras.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.keras.Model": {
  "data": {
   "shadows": "mlflow.models.Model"
  },
  "type": "import"
 },
 "mlflow.keras.StrictVersion": {
  "data": {
   "shadows": "distutils.version.StrictVersion"
  },
  "type": "import"
 },
 "mlflow.keras._CONDA_ENV_SUBPATH": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mlflow.keras._CUSTOM_OBJECTS_SAVE_PATH": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mlflow.keras._KERAS_MODULE_SPEC_PATH": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mlflow.keras._KerasModelWrapper": {
  "data": {
   "lineno": 310
  },
  "type": "class"
 },
 "mlflow.keras._KerasModelWrapper.__init__": {
  "data": {
   "lineno": 311
  },
  "type": "function"
 },
 "mlflow.keras._KerasModelWrapper.predict": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "mlflow.keras._MODEL_SAVE_PATH": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mlflow.keras._download_artifact_from_uri": {
  "data": {
   "shadows": "mlflow.tracking.artifact_utils._download_artifact_from_uri"
  },
  "type": "import"
 },
 "mlflow.keras._get_flavor_configuration": {
  "data": {
   "shadows": "mlflow.utils.model_utils._get_flavor_configuration"
  },
  "type": "import"
 },
 "mlflow.keras._load_model": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "distutils.version.StrictVersion",
    "mlflow.keras._CUSTOM_OBJECTS_SAVE_PATH",
    "mlflow.keras._MODEL_SAVE_PATH",
    "mlflow.keras.cloudpickle",
    "mlflow.keras.h5py",
    "mlflow.keras.importlib",
    "mlflow.keras.os",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.keras._load_pyfunc": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "mlflow.exceptions.MlflowException",
    "mlflow.keras._KERAS_MODULE_SPEC_PATH",
    "mlflow.keras._KerasModelWrapper",
    "mlflow.keras._load_model",
    "mlflow.keras.importlib",
    "mlflow.keras.keras",
    "mlflow.keras.os",
    "open",
    "tensorflow.Graph",
    "tensorflow.Session",
    "tensorflow.__version__"
   ]
  },
  "type": "function"
 },
 "mlflow.keras._mlflow_conda_env": {
  "data": {
   "shadows": "mlflow.utils.environment._mlflow_conda_env"
  },
  "type": "import"
 },
 "mlflow.keras._save_custom_objects": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "mlflow.keras._CUSTOM_OBJECTS_SAVE_PATH",
    "mlflow.keras.cloudpickle",
    "mlflow.keras.os",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.keras.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "mlflow.keras.autolog": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "mlflow.keras.gorilla",
    "mlflow.keras.keras",
    "mlflow.utils.annotations.experimental"
   ]
  },
  "type": "function"
 },
 "mlflow.keras.autolog.__MLflowKerasCallback": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "mlflow.keras.keras"
   ]
  },
  "type": "class"
 },
 "mlflow.keras.autolog.__MLflowKerasCallback.on_epoch_end": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "mlflow.utils.autologging_utils.try_mlflow_log"
   ]
  },
  "type": "function"
 },
 "mlflow.keras.autolog.__MLflowKerasCallback.on_train_begin": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "float",
    "hasattr",
    "len",
    "mlflow.keras.keras",
    "mlflow.keras.os",
    "mlflow.keras.shutil",
    "mlflow.keras.tempfile",
    "mlflow.utils.autologging_utils.try_mlflow_log",
    "open",
    "type"
   ]
  },
  "type": "function"
 },
 "mlflow.keras.autolog.__MLflowKerasCallback.on_train_end": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "mlflow.keras.log_model",
    "mlflow.utils.autologging_utils.try_mlflow_log"
   ]
  },
  "type": "function"
 },
 "mlflow.keras.autolog._early_stop_check": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "isinstance",
    "mlflow.keras.keras"
   ]
  },
  "type": "function"
 },
 "mlflow.keras.autolog._get_early_stop_callback_attrs": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "mlflow.keras.autolog._log_early_stop_callback_metrics": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "_get_early_stop_callback_attrs",
    "iter",
    "len",
    "max",
    "mlflow.utils.autologging_utils.try_mlflow_log",
    "next"
   ]
  },
  "type": "function"
 },
 "mlflow.keras.autolog._log_early_stop_callback_params": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "Exception",
    "mlflow.utils.autologging_utils.try_mlflow_log"
   ]
  },
  "type": "function"
 },
 "mlflow.keras.autolog._run_and_log_function": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "__MLflowKerasCallback",
    "_early_stop_check",
    "_log_early_stop_callback_metrics",
    "_log_early_stop_callback_params",
    "len",
    "list",
    "mlflow.utils.autologging_utils.log_fn_args_as_params",
    "mlflow.utils.autologging_utils.try_mlflow_log",
    "original",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mlflow.keras.autolog.fit": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "_run_and_log_function",
    "mlflow.keras.gorilla",
    "mlflow.keras.keras",
    "original"
   ]
  },
  "type": "function"
 },
 "mlflow.keras.autolog.fit_generator": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "_run_and_log_function",
    "mlflow.keras.gorilla",
    "mlflow.keras.keras",
    "original"
   ]
  },
  "type": "function"
 },
 "mlflow.keras.cloudpickle": {
  "data": {
   "shadows": "cloudpickle"
  },
  "type": "import"
 },
 "mlflow.keras.experimental": {
  "data": {
   "shadows": "mlflow.utils.annotations.experimental"
  },
  "type": "import"
 },
 "mlflow.keras.get_default_conda_env": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "mlflow.keras.cloudpickle",
    "mlflow.keras.keras",
    "mlflow.utils.environment._mlflow_conda_env",
    "tensorflow.__version__"
   ]
  },
  "type": "function"
 },
 "mlflow.keras.gorilla": {
  "data": {
   "shadows": "gorilla"
  },
  "type": "import"
 },
 "mlflow.keras.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "mlflow.keras.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "mlflow.keras.keras": {
  "data": {
   "shadows": "keras"
  },
  "type": "import"
 },
 "mlflow.keras.keras.engine.network": {
  "data": {
   "shadows": "keras.engine.network"
  },
  "type": "import"
 },
 "mlflow.keras.load_model": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "mlflow.keras.FLAVOR_NAME",
    "mlflow.keras._MODEL_SAVE_PATH",
    "mlflow.keras._load_model",
    "mlflow.keras.importlib",
    "mlflow.keras.os",
    "mlflow.tracking.artifact_utils._download_artifact_from_uri",
    "mlflow.utils.model_utils._get_flavor_configuration"
   ]
  },
  "type": "function"
 },
 "mlflow.keras.log_fn_args_as_params": {
  "data": {
   "shadows": "mlflow.utils.autologging_utils.log_fn_args_as_params"
  },
  "type": "import"
 },
 "mlflow.keras.log_model": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "mlflow.models.Model.log"
   ]
  },
  "type": "function"
 },
 "mlflow.keras.mlflow.tracking": {
  "data": {
   "shadows": "mlflow.tracking"
  },
  "type": "import"
 },
 "mlflow.keras.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.keras.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "mlflow.keras.pyfunc": {
  "data": {
   "shadows": "mlflow.pyfunc"
  },
  "type": "import"
 },
 "mlflow.keras.save_model": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "_is_plain_keras",
    "_is_tf_keras",
    "dict",
    "isinstance",
    "mlflow.exceptions.MlflowException",
    "mlflow.keras.FLAVOR_NAME",
    "mlflow.keras._CONDA_ENV_SUBPATH",
    "mlflow.keras._KERAS_MODULE_SPEC_PATH",
    "mlflow.keras._MODEL_SAVE_PATH",
    "mlflow.keras._save_custom_objects",
    "mlflow.keras.get_default_conda_env",
    "mlflow.keras.importlib",
    "mlflow.keras.os",
    "mlflow.keras.shutil",
    "mlflow.keras.tempfile",
    "mlflow.keras.yaml",
    "mlflow.models.Model",
    "mlflow.pyfunc.add_to_model",
    "open",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "mlflow.keras.save_model._is_plain_keras": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "ImportError",
    "isinstance",
    "mlflow.keras.keras"
   ]
  },
  "type": "function"
 },
 "mlflow.keras.save_model._is_tf_keras": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ImportError",
    "isinstance",
    "tensorflow.keras.models.Model"
   ]
  },
  "type": "function"
 },
 "mlflow.keras.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mlflow.keras.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "mlflow.keras.tensorflow.keras.models": {
  "data": {
   "shadows": "tensorflow.keras.models"
  },
  "type": "import"
 },
 "mlflow.keras.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "mlflow.keras.try_mlflow_log": {
  "data": {
   "shadows": "mlflow.utils.autologging_utils.try_mlflow_log"
  },
  "type": "import"
 },
 "mlflow.keras.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "mlflow.lightgbm": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.lightgbm.logging"
   ]
  },
  "type": "module"
 },
 "mlflow.lightgbm.FLAVOR_NAME": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mlflow.lightgbm.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.lightgbm.Model": {
  "data": {
   "shadows": "mlflow.models.Model"
  },
  "type": "import"
 },
 "mlflow.lightgbm._LGBModelWrapper": {
  "data": {
   "lineno": 192
  },
  "type": "class"
 },
 "mlflow.lightgbm._LGBModelWrapper.__init__": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "mlflow.lightgbm._LGBModelWrapper.predict": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "mlflow.lightgbm._download_artifact_from_uri": {
  "data": {
   "shadows": "mlflow.tracking.artifact_utils._download_artifact_from_uri"
  },
  "type": "import"
 },
 "mlflow.lightgbm._get_flavor_configuration": {
  "data": {
   "shadows": "mlflow.utils.model_utils._get_flavor_configuration"
  },
  "type": "import"
 },
 "mlflow.lightgbm._load_model": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "lightgbm.Booster"
   ]
  },
  "type": "function"
 },
 "mlflow.lightgbm._load_pyfunc": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "mlflow.lightgbm._LGBModelWrapper",
    "mlflow.lightgbm._load_model"
   ]
  },
  "type": "function"
 },
 "mlflow.lightgbm._logger": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mlflow.lightgbm._mlflow_conda_env": {
  "data": {
   "shadows": "mlflow.utils.environment._mlflow_conda_env"
  },
  "type": "import"
 },
 "mlflow.lightgbm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "mlflow.lightgbm.autolog": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "mlflow.lightgbm.gorilla",
    "mlflow.lightgbm.lightgbm",
    "mlflow.utils.annotations.experimental"
   ]
  },
  "type": "function"
 },
 "mlflow.lightgbm.autolog.train": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "Exception",
    "enumerate",
    "len",
    "list",
    "log_feature_importance_plot",
    "mlflow.lightgbm._logger",
    "mlflow.lightgbm.gorilla",
    "mlflow.lightgbm.inspect",
    "mlflow.lightgbm.json",
    "mlflow.lightgbm.lightgbm",
    "mlflow.lightgbm.log_model",
    "mlflow.lightgbm.mlflow",
    "mlflow.lightgbm.os",
    "mlflow.lightgbm.shutil",
    "mlflow.lightgbm.tempfile",
    "mlflow.utils.autologging_utils.log_fn_args_as_params",
    "mlflow.utils.autologging_utils.try_mlflow_log",
    "open",
    "original",
    "record_eval_results",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "mlflow.lightgbm.autolog.train.log_feature_importance_plot": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.subplots",
    "mlflow.lightgbm.mlflow",
    "mlflow.lightgbm.os",
    "mlflow.lightgbm.shutil",
    "mlflow.lightgbm.tempfile",
    "mlflow.utils.autologging_utils.try_mlflow_log",
    "numpy.arange",
    "numpy.argsort",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "mlflow.lightgbm.autolog.train.record_eval_results": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "mlflow.lightgbm.autolog.train.record_eval_results.callback": {
  "data": {
   "lineno": 223
  },
  "type": "function"
 },
 "mlflow.lightgbm.experimental": {
  "data": {
   "shadows": "mlflow.utils.annotations.experimental"
  },
  "type": "import"
 },
 "mlflow.lightgbm.get_default_conda_env": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "lightgbm.__version__",
    "mlflow.utils.environment._mlflow_conda_env"
   ]
  },
  "type": "function"
 },
 "mlflow.lightgbm.gorilla": {
  "data": {
   "shadows": "gorilla"
  },
  "type": "import"
 },
 "mlflow.lightgbm.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mlflow.lightgbm.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mlflow.lightgbm.lgb": {
  "data": {
   "shadows": "lightgbm"
  },
  "type": "import"
 },
 "mlflow.lightgbm.lightgbm": {
  "data": {
   "shadows": "lightgbm"
  },
  "type": "import"
 },
 "mlflow.lightgbm.load_model": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "mlflow.lightgbm.FLAVOR_NAME",
    "mlflow.lightgbm._load_model",
    "mlflow.lightgbm.os",
    "mlflow.tracking.artifact_utils._download_artifact_from_uri",
    "mlflow.utils.model_utils._get_flavor_configuration"
   ]
  },
  "type": "function"
 },
 "mlflow.lightgbm.log_fn_args_as_params": {
  "data": {
   "shadows": "mlflow.utils.autologging_utils.log_fn_args_as_params"
  },
  "type": "import"
 },
 "mlflow.lightgbm.log_model": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "mlflow.lightgbm.mlflow",
    "mlflow.models.Model.log"
   ]
  },
  "type": "function"
 },
 "mlflow.lightgbm.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.lightgbm.mlflow": {
  "data": {
   "shadows": "mlflow"
  },
  "type": "import"
 },
 "mlflow.lightgbm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlflow.lightgbm.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.lightgbm.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mlflow.lightgbm.pyfunc": {
  "data": {
   "shadows": "mlflow.pyfunc"
  },
  "type": "import"
 },
 "mlflow.lightgbm.save_model": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "lightgbm.__version__",
    "mlflow.exceptions.MlflowException",
    "mlflow.lightgbm.FLAVOR_NAME",
    "mlflow.lightgbm.get_default_conda_env",
    "mlflow.lightgbm.os",
    "mlflow.lightgbm.yaml",
    "mlflow.models.Model",
    "mlflow.pyfunc.add_to_model",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.lightgbm.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mlflow.lightgbm.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "mlflow.lightgbm.try_mlflow_log": {
  "data": {
   "shadows": "mlflow.utils.autologging_utils.try_mlflow_log"
  },
  "type": "import"
 },
 "mlflow.lightgbm.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "mlflow.log_artifact": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "mlflow.log_artifacts": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "mlflow.log_metric": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "mlflow.log_metrics": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "mlflow.log_param": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "mlflow.log_params": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "mlflow.mleap": {
  "data": {},
  "type": "module"
 },
 "mlflow.mleap.DataFrame": {
  "data": {
   "shadows": "pyspark.sql.DataFrame"
  },
  "type": "import"
 },
 "mlflow.mleap.FLAVOR_NAME": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mlflow.mleap.MLeapSerializationException": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException"
   ]
  },
  "type": "class"
 },
 "mlflow.mleap.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.mleap.Model": {
  "data": {
   "shadows": "mlflow.models.Model"
  },
  "type": "import"
 },
 "mlflow.mleap.PipelineModel": {
  "data": {
   "shadows": "pyspark.ml.pipeline.PipelineModel"
  },
  "type": "import"
 },
 "mlflow.mleap.Py4JError": {
  "data": {
   "shadows": "py4j.protocol.Py4JError"
  },
  "type": "import"
 },
 "mlflow.mleap.SimpleSparkSerializer": {
  "data": {
   "shadows": "mleap.pyspark.spark_support.SimpleSparkSerializer"
  },
  "type": "import"
 },
 "mlflow.mleap._handle_py4j_error": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "mlflow.mleap.sys",
    "mlflow.mleap.traceback",
    "reraised_error_type",
    "six.reraise"
   ]
  },
  "type": "function"
 },
 "mlflow.mleap.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "mlflow.mleap.add_to_model": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "mlflow.mleap.FLAVOR_NAME",
    "mlflow.mleap._handle_py4j_error",
    "mlflow.mleap.os",
    "mlflow.utils.keyword_only",
    "py4j.protocol.Py4JError",
    "pyspark.ml.pipeline.PipelineModel",
    "pyspark.sql.DataFrame",
    "pyspark.sql.DataFrame.__module__"
   ]
  },
  "type": "function"
 },
 "mlflow.mleap.keyword_only": {
  "data": {
   "shadows": "mlflow.utils.keyword_only"
  },
  "type": "import"
 },
 "mlflow.mleap.log_model": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "mlflow.mleap.mlflow",
    "mlflow.models.Model.log",
    "mlflow.utils.keyword_only"
   ]
  },
  "type": "function"
 },
 "mlflow.mleap.mleap.version": {
  "data": {
   "shadows": "mleap.version"
  },
  "type": "import"
 },
 "mlflow.mleap.mlflow": {
  "data": {
   "shadows": "mlflow"
  },
  "type": "import"
 },
 "mlflow.mleap.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.mleap.reraise": {
  "data": {
   "shadows": "six.reraise"
  },
  "type": "import"
 },
 "mlflow.mleap.save_model": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "mlflow.mleap.add_to_model",
    "mlflow.mleap.os",
    "mlflow.models.Model",
    "mlflow.utils.keyword_only"
   ]
  },
  "type": "function"
 },
 "mlflow.mleap.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlflow.mleap.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "mlflow.mlflow.tracking._model_registry.fluent": {
  "data": {
   "shadows": "mlflow.tracking._model_registry.fluent"
  },
  "type": "import"
 },
 "mlflow.mlflow.tracking.fluent": {
  "data": {
   "shadows": "mlflow.tracking.fluent"
  },
  "type": "import"
 },
 "mlflow.models": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.models.logging"
   ]
  },
  "type": "module"
 },
 "mlflow.models.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "mlflow.models.FlavorBackend": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.models.FlavorBackend.__init__": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "mlflow.models.FlavorBackend.can_build_image": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "callable",
    "getattr"
   ]
  },
  "type": "function"
 },
 "mlflow.models.FlavorBackend.can_score_model": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.models.FlavorBackend.predict": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.models.FlavorBackend.prepare_env": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "mlflow.models.FlavorBackend.serve": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.models.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.models.Model": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.models.Model.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "datetime.datetime.utcnow",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.models.Model.add_flavor": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "mlflow.models.Model.from_dict": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "mlflow.models.Model.load": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "mlflow.models.os",
    "mlflow.models.yaml",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.models.Model.log": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "mlflow.exceptions.MlflowException",
    "mlflow.models._logger",
    "mlflow.models.mlflow",
    "mlflow.utils.file_utils.TempDir"
   ]
  },
  "type": "function"
 },
 "mlflow.models.Model.save": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.models.Model.to_dict": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "mlflow.models.Model.to_json": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "mlflow.models.json"
   ]
  },
  "type": "function"
 },
 "mlflow.models.Model.to_yaml": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "mlflow.models.yaml"
   ]
  },
  "type": "function"
 },
 "mlflow.models.TempDir": {
  "data": {
   "shadows": "mlflow.utils.file_utils.TempDir"
  },
  "type": "import"
 },
 "mlflow.models._logger": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mlflow.models.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "mlflow.models.container.scoring_server": {
  "data": {},
  "type": "module"
 },
 "mlflow.models.container.scoring_server.wsgi": {
  "data": {
   "symbols_in_volume": [
    "mlflow.pyfunc.load_pyfunc",
    "mlflow.pyfunc.scoring_server.init"
   ]
  },
  "type": "module"
 },
 "mlflow.models.container.scoring_server.wsgi.app": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "mlflow.models.container.scoring_server.wsgi.pyfunc": {
  "data": {
   "shadows": "mlflow.pyfunc"
  },
  "type": "import"
 },
 "mlflow.models.container.scoring_server.wsgi.scoring_server": {
  "data": {
   "shadows": "mlflow.pyfunc.scoring_server"
  },
  "type": "import"
 },
 "mlflow.models.databricks_pb2": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2"
  },
  "type": "import"
 },
 "mlflow.models.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "mlflow.models.docker_utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.models.docker_utils.logging"
   ]
  },
  "type": "module"
 },
 "mlflow.models.docker_utils.DISABLE_ENV_CREATION": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mlflow.models.docker_utils.PIPE": {
  "data": {
   "shadows": "subprocess.PIPE"
  },
  "type": "import"
 },
 "mlflow.models.docker_utils.Popen": {
  "data": {
   "shadows": "subprocess.Popen"
  },
  "type": "import"
 },
 "mlflow.models.docker_utils.STDOUT": {
  "data": {
   "shadows": "subprocess.STDOUT"
  },
  "type": "import"
 },
 "mlflow.models.docker_utils.TempDir": {
  "data": {
   "shadows": "mlflow.utils.file_utils.TempDir"
  },
  "type": "import"
 },
 "mlflow.models.docker_utils._DOCKERFILE_TEMPLATE": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mlflow.models.docker_utils._build_image": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "custom_setup_steps_hook",
    "iter",
    "mlflow.models.docker_utils._DOCKERFILE_TEMPLATE",
    "mlflow.models.docker_utils._get_mlflow_install_step",
    "mlflow.models.docker_utils._logger",
    "mlflow.models.docker_utils.os",
    "mlflow.utils.file_utils.TempDir",
    "mlflow.utils.logging_utils.eprint",
    "open",
    "subprocess.PIPE",
    "subprocess.Popen",
    "subprocess.STDOUT"
   ]
  },
  "type": "function"
 },
 "mlflow.models.docker_utils._copy_project": {
  "data": {
   "shadows": "mlflow.utils.file_utils._copy_project"
  },
  "type": "import"
 },
 "mlflow.models.docker_utils._get_mlflow_install_step": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "mlflow.models.docker_utils.mlflow",
    "mlflow.utils.file_utils._copy_project"
   ]
  },
  "type": "function"
 },
 "mlflow.models.docker_utils._logger": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "mlflow.models.docker_utils.eprint": {
  "data": {
   "shadows": "mlflow.utils.logging_utils.eprint"
  },
  "type": "import"
 },
 "mlflow.models.docker_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.models.docker_utils.mlflow": {
  "data": {
   "shadows": "mlflow"
  },
  "type": "import"
 },
 "mlflow.models.docker_utils.mlflow.version": {
  "data": {
   "shadows": "mlflow.version"
  },
  "type": "import"
 },
 "mlflow.models.docker_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.models.flavor_backend_registry": {
  "data": {
   "symbols_in_volume": [
    "mlflow.pyfunc.FLAVOR_NAME",
    "mlflow.pyfunc.backend.PyFuncBackend",
    "mlflow.rfunc.backend.RFuncBackend"
   ]
  },
  "type": "module"
 },
 "mlflow.models.flavor_backend_registry.PyFuncBackend": {
  "data": {
   "shadows": "mlflow.pyfunc.backend.PyFuncBackend"
  },
  "type": "import"
 },
 "mlflow.models.flavor_backend_registry.RFuncBackend": {
  "data": {
   "shadows": "mlflow.rfunc.backend.RFuncBackend"
  },
  "type": "import"
 },
 "mlflow.models.flavor_backend_registry._flavor_backends": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mlflow.models.flavor_backend_registry.get_flavor_backend": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "mlflow.models.flavor_backend_registry._flavor_backends"
   ]
  },
  "type": "function"
 },
 "mlflow.models.flavor_backend_registry.pyfunc": {
  "data": {
   "shadows": "mlflow.pyfunc"
  },
  "type": "import"
 },
 "mlflow.models.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mlflow.models.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.models.mlflow": {
  "data": {
   "shadows": "mlflow"
  },
  "type": "import"
 },
 "mlflow.models.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.models.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "mlflow.onnx": {
  "data": {},
  "type": "module"
 },
 "mlflow.onnx.FLAVOR_NAME": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mlflow.onnx.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.onnx.Model": {
  "data": {
   "shadows": "mlflow.models.Model"
  },
  "type": "import"
 },
 "mlflow.onnx.RESOURCE_ALREADY_EXISTS": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS"
  },
  "type": "import"
 },
 "mlflow.onnx._OnnxModelWrapper": {
  "data": {
   "lineno": 118
  },
  "type": "class"
 },
 "mlflow.onnx._OnnxModelWrapper.__init__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "len",
    "mlflow.onnx.onnxruntime"
   ]
  },
  "type": "function"
 },
 "mlflow.onnx._OnnxModelWrapper._cast_float64_to_float32": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.onnx._OnnxModelWrapper.predict": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "len",
    "mlflow.onnx._OnnxModelWrapper",
    "mlflow.utils.experimental",
    "pandas.DataFrame.from_dict",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "mlflow.onnx._download_artifact_from_uri": {
  "data": {
   "shadows": "mlflow.tracking.artifact_utils._download_artifact_from_uri"
  },
  "type": "import"
 },
 "mlflow.onnx._get_flavor_configuration": {
  "data": {
   "shadows": "mlflow.utils.model_utils._get_flavor_configuration"
  },
  "type": "import"
 },
 "mlflow.onnx._load_model": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "mlflow.onnx.onnx"
   ]
  },
  "type": "function"
 },
 "mlflow.onnx._load_pyfunc": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "mlflow.onnx._OnnxModelWrapper"
   ]
  },
  "type": "function"
 },
 "mlflow.onnx._mlflow_conda_env": {
  "data": {
   "shadows": "mlflow.utils.environment._mlflow_conda_env"
  },
  "type": "import"
 },
 "mlflow.onnx.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "mlflow.onnx.experimental": {
  "data": {
   "shadows": "mlflow.utils.experimental"
  },
  "type": "import"
 },
 "mlflow.onnx.get_default_conda_env": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "mlflow.onnx.onnx",
    "mlflow.onnx.onnxruntime",
    "mlflow.utils.environment._mlflow_conda_env",
    "mlflow.utils.experimental"
   ]
  },
  "type": "function"
 },
 "mlflow.onnx.load_model": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "mlflow.onnx.FLAVOR_NAME",
    "mlflow.onnx._load_model",
    "mlflow.onnx.os",
    "mlflow.tracking.artifact_utils._download_artifact_from_uri",
    "mlflow.utils.experimental",
    "mlflow.utils.model_utils._get_flavor_configuration"
   ]
  },
  "type": "function"
 },
 "mlflow.onnx.log_model": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "mlflow.models.Model.log",
    "mlflow.utils.experimental"
   ]
  },
  "type": "function"
 },
 "mlflow.onnx.mlflow.tracking": {
  "data": {
   "shadows": "mlflow.tracking"
  },
  "type": "import"
 },
 "mlflow.onnx.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlflow.onnx.onnx": {
  "data": {
   "shadows": "onnx"
  },
  "type": "import"
 },
 "mlflow.onnx.onnxruntime": {
  "data": {
   "shadows": "onnxruntime"
  },
  "type": "import"
 },
 "mlflow.onnx.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.onnx.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "mlflow.onnx.pyfunc": {
  "data": {
   "shadows": "mlflow.pyfunc"
  },
  "type": "import"
 },
 "mlflow.onnx.save_model": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "mlflow.exceptions.MlflowException",
    "mlflow.models.Model",
    "mlflow.onnx.FLAVOR_NAME",
    "mlflow.onnx.get_default_conda_env",
    "mlflow.onnx.onnx",
    "mlflow.onnx.os",
    "mlflow.onnx.yaml",
    "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS",
    "mlflow.pyfunc.add_to_model",
    "mlflow.utils.experimental",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.onnx.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "mlflow.projects": {
  "data": {
   "shadows": "mlflow.projects"
  },
  "type": "import"
 },
 "mlflow.projects.databricks": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.projects.databricks.DB_CONTAINER_BASE",
    "mlflow.projects.databricks.logging",
    "mlflow.projects.databricks.posixpath"
   ]
  },
  "type": "module"
 },
 "mlflow.projects.databricks.DBFS_EXPERIMENT_DIR_BASE": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mlflow.projects.databricks.DB_CONTAINER_BASE": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mlflow.projects.databricks.DB_PROJECTS_BASE": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mlflow.projects.databricks.DB_TARFILE_ARCHIVE_NAME": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mlflow.projects.databricks.DB_TARFILE_BASE": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mlflow.projects.databricks.DatabricksJobRunner": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.projects.databricks.DatabricksJobRunner.__init__": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner._databricks_api_request": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "mlflow.utils.databricks_utils.get_databricks_host_creds",
    "mlflow.utils.rest_utils.http_request_safe"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner._dbfs_path_exists": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "Exception",
    "mlflow.exceptions.ExecutionException",
    "mlflow.exceptions.MlflowException",
    "mlflow.projects.databricks.json",
    "mlflow.utils.databricks_utils.get_databricks_host_creds",
    "mlflow.utils.rest_utils.http_request"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner._get_status": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "mlflow.entities.RunStatus.FAILED",
    "mlflow.entities.RunStatus.FINISHED",
    "mlflow.entities.RunStatus.RUNNING"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner._jobs_runs_submit": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "mlflow.projects.databricks.json"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner._run_shell_command_job": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "mlflow.version.VERSION"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner._upload_project_to_dbfs": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "mlflow.projects.databricks.DBFS_EXPERIMENT_DIR_BASE",
    "mlflow.projects.databricks.DB_TARFILE_ARCHIVE_NAME",
    "mlflow.projects.databricks._logger",
    "mlflow.projects.databricks.hashlib",
    "mlflow.projects.databricks.os",
    "mlflow.projects.databricks.posixpath",
    "mlflow.projects.databricks.shutil",
    "mlflow.projects.databricks.tempfile",
    "mlflow.utils.file_utils.make_tarfile",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner._upload_project_to_dbfs.custom_filter": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "mlflow.projects.databricks.os"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner._upload_to_dbfs": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.projects.databricks._logger",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner.get_run_result_state": {
  "data": {
   "lineno": 211
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner.get_status": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "mlflow.entities.RunStatus.to_string"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner.jobs_runs_cancel": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "mlflow.projects.databricks.json"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner.jobs_runs_get": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "mlflow.projects.databricks.json"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner.run_databricks": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "mlflow.projects.databricks._get_databricks_run_cmd",
    "mlflow.projects.databricks._get_tracking_uri_for_run",
    "mlflow.projects.databricks._logger",
    "mlflow.tracking._EXPERIMENT_ID_ENV_VAR",
    "mlflow.tracking._TRACKING_URI_ENV_VAR"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksSubmittedRun": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "mlflow.projects.submitted_run.SubmittedRun"
   ]
  },
  "type": "class"
 },
 "mlflow.projects.databricks.DatabricksSubmittedRun.__init__": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "mlflow.projects.databricks.DatabricksSubmittedRun",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksSubmittedRun._print_description_and_log_tags": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "mlflow.projects.databricks._logger",
    "mlflow.tracking.MlflowClient",
    "mlflow.utils.databricks_utils.get_databricks_host_creds",
    "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_RUN_URL",
    "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_SHELL_JOB_ID",
    "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_SHELL_JOB_RUN_ID",
    "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_WEBAPP_URL"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksSubmittedRun.cancel": {
  "data": {
   "lineno": 346
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksSubmittedRun.get_status": {
  "data": {
   "lineno": 350
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksSubmittedRun.run_id": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksSubmittedRun.wait": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "mlflow.projects.databricks.time"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.ExecutionException": {
  "data": {
   "shadows": "mlflow.exceptions.ExecutionException"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.INVALID_PARAMETER_VALUE": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.MLFLOW_DATABRICKS_RUN_URL": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_RUN_URL"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.MLFLOW_DATABRICKS_SHELL_JOB_ID": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_SHELL_JOB_ID"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.MLFLOW_DATABRICKS_SHELL_JOB_RUN_ID": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_SHELL_JOB_RUN_ID"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.MLFLOW_DATABRICKS_WEBAPP_URL": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_WEBAPP_URL"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.RunStatus": {
  "data": {
   "shadows": "mlflow.entities.RunStatus"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.SubmittedRun": {
  "data": {
   "shadows": "mlflow.projects.submitted_run.SubmittedRun"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.VERSION": {
  "data": {
   "shadows": "mlflow.version.VERSION"
  },
  "type": "import"
 },
 "mlflow.projects.databricks._get_databricks_run_cmd": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "list",
    "map",
    "mlflow.projects.databricks.DB_PROJECTS_BASE",
    "mlflow.projects.databricks.DB_TARFILE_ARCHIVE_NAME",
    "mlflow.projects.databricks.DB_TARFILE_BASE",
    "mlflow.projects.databricks.posixpath",
    "mlflow.projects.databricks.textwrap",
    "six.moves.shlex_quote"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks._get_tracking_uri_for_run": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "mlflow.tracking.get_tracking_uri"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks._logger": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mlflow.projects.databricks.before_run_validations": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "mlflow.exceptions.ExecutionException",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.utils.uri.is_databricks_uri",
    "mlflow.utils.uri.is_http_uri"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.databricks_utils": {
  "data": {
   "shadows": "mlflow.utils.databricks_utils"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.file_utils": {
  "data": {
   "shadows": "mlflow.utils.file_utils"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.get_db_profile_from_uri": {
  "data": {
   "shadows": "mlflow.utils.uri.get_db_profile_from_uri"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.is_databricks_uri": {
  "data": {
   "shadows": "mlflow.utils.uri.is_databricks_uri"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.is_http_uri": {
  "data": {
   "shadows": "mlflow.utils.uri.is_http_uri"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.rest_utils": {
  "data": {
   "shadows": "mlflow.utils.rest_utils"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.run_databricks": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "mlflow.projects.databricks.DatabricksJobRunner",
    "mlflow.projects.databricks.DatabricksSubmittedRun",
    "mlflow.tracking.get_tracking_uri",
    "mlflow.utils.uri.get_db_profile_from_uri"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.shlex_quote": {
  "data": {
   "shadows": "six.moves.shlex_quote"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.tracking": {
  "data": {
   "shadows": "mlflow.tracking"
  },
  "type": "import"
 },
 "mlflow.projects.kubernetes": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.projects.kubernetes.logging"
   ]
  },
  "type": "module"
 },
 "mlflow.projects.kubernetes.ConfigException": {
  "data": {
   "shadows": "kubernetes.config.config_exception.ConfigException"
  },
  "type": "import"
 },
 "mlflow.projects.kubernetes.ExecutionException": {
  "data": {
   "shadows": "mlflow.exceptions.ExecutionException"
  },
  "type": "import"
 },
 "mlflow.projects.kubernetes.KubernetesSubmittedRun": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "mlflow.projects.submitted_run.SubmittedRun"
   ]
  },
  "type": "class"
 },
 "mlflow.projects.kubernetes.KubernetesSubmittedRun.__init__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "mlflow.entities.RunStatus.SCHEDULED",
    "mlflow.projects.kubernetes.KubernetesSubmittedRun",
    "super",
    "threading.RLock"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.kubernetes.KubernetesSubmittedRun._update_status": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "mlflow.entities.RunStatus.FAILED",
    "mlflow.entities.RunStatus.FINISHED",
    "mlflow.entities.RunStatus.RUNNING",
    "mlflow.entities.RunStatus.SCHEDULED",
    "mlflow.entities.RunStatus.is_terminated",
    "mlflow.projects.kubernetes._logger",
    "mlflow.projects.kubernetes.kubernetes"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.kubernetes.KubernetesSubmittedRun.cancel": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "mlflow.entities.RunStatus.KILLED",
    "mlflow.entities.RunStatus.is_terminated",
    "mlflow.projects.kubernetes._logger",
    "mlflow.projects.kubernetes.kubernetes"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.kubernetes.KubernetesSubmittedRun.get_status": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "mlflow.entities.RunStatus.is_terminated"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.kubernetes.KubernetesSubmittedRun.run_id": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.kubernetes.KubernetesSubmittedRun.wait": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "mlflow.entities.RunStatus.FINISHED",
    "mlflow.entities.RunStatus.is_terminated",
    "mlflow.projects.kubernetes.kubernetes",
    "mlflow.projects.kubernetes.time"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.kubernetes.RLock": {
  "data": {
   "shadows": "threading.RLock"
  },
  "type": "import"
 },
 "mlflow.projects.kubernetes.RunStatus": {
  "data": {
   "shadows": "mlflow.entities.RunStatus"
  },
  "type": "import"
 },
 "mlflow.projects.kubernetes.SubmittedRun": {
  "data": {
   "shadows": "mlflow.projects.submitted_run.SubmittedRun"
  },
  "type": "import"
 },
 "mlflow.projects.kubernetes._get_kubernetes_job_definition": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "mlflow.projects.kubernetes._logger"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.kubernetes._get_run_command": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "shlex.split",
    "six.moves.shlex_quote"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.kubernetes._load_kube_context": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "IOError",
    "kubernetes.config.config_exception.ConfigException",
    "mlflow.projects.kubernetes._logger",
    "mlflow.projects.kubernetes.kubernetes"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.kubernetes._logger": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mlflow.projects.kubernetes.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "mlflow.projects.kubernetes.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "mlflow.projects.kubernetes.docker": {
  "data": {
   "shadows": "docker"
  },
  "type": "import"
 },
 "mlflow.projects.kubernetes.kubernetes": {
  "data": {
   "shadows": "kubernetes"
  },
  "type": "import"
 },
 "mlflow.projects.kubernetes.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.projects.kubernetes.push_image_to_registry": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "mlflow.exceptions.ExecutionException",
    "mlflow.projects.kubernetes._logger",
    "mlflow.projects.kubernetes.docker"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.kubernetes.quote": {
  "data": {
   "shadows": "six.moves.shlex_quote"
  },
  "type": "import"
 },
 "mlflow.projects.kubernetes.run_kubernetes_job": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "mlflow.projects.kubernetes.KubernetesSubmittedRun",
    "mlflow.projects.kubernetes._get_kubernetes_job_definition",
    "mlflow.projects.kubernetes._get_run_command",
    "mlflow.projects.kubernetes._load_kube_context",
    "mlflow.projects.kubernetes.kubernetes"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.kubernetes.split": {
  "data": {
   "shadows": "shlex.split"
  },
  "type": "import"
 },
 "mlflow.projects.kubernetes.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mlflow.projects.submitted_run": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.projects.submitted_run.logging"
   ]
  },
  "type": "module"
 },
 "mlflow.projects.submitted_run.LocalSubmittedRun": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "mlflow.projects.submitted_run.SubmittedRun"
   ]
  },
  "type": "class"
 },
 "mlflow.projects.submitted_run.LocalSubmittedRun.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "mlflow.projects.submitted_run.LocalSubmittedRun",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.submitted_run.LocalSubmittedRun._get_status": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "mlflow.entities.RunStatus.FAILED",
    "mlflow.entities.RunStatus.FINISHED",
    "mlflow.entities.RunStatus.RUNNING"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.submitted_run.LocalSubmittedRun.cancel": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "OSError",
    "mlflow.projects.submitted_run._logger",
    "mlflow.projects.submitted_run.os",
    "mlflow.projects.submitted_run.signal"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.submitted_run.LocalSubmittedRun.get_status": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "mlflow.entities.RunStatus.to_string"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.submitted_run.LocalSubmittedRun.run_id": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.submitted_run.LocalSubmittedRun.wait": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "mlflow.projects.submitted_run.RunStatus": {
  "data": {
   "shadows": "mlflow.entities.RunStatus"
  },
  "type": "import"
 },
 "mlflow.projects.submitted_run.SubmittedRun": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.projects.submitted_run.SubmittedRun.cancel": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.submitted_run.SubmittedRun.get_status": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.submitted_run.SubmittedRun.run_id": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.submitted_run.SubmittedRun.wait": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.submitted_run._logger": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "mlflow.projects.submitted_run.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "mlflow.projects.submitted_run.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.projects.submitted_run.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.projects.submitted_run.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "mlflow.projects.utils": {
  "data": {
   "symbols_in_volume": [
    "mlflow.projects.utils.re"
   ]
  },
  "type": "module"
 },
 "mlflow.projects.utils.ExecutionException": {
  "data": {
   "shadows": "mlflow.exceptions.ExecutionException"
  },
  "type": "import"
 },
 "mlflow.projects.utils.GitCommandError": {
  "data": {
   "shadows": "git.exc.GitCommandError"
  },
  "type": "import"
 },
 "mlflow.projects.utils.InvalidGitRepositoryError": {
  "data": {
   "shadows": "git.exc.InvalidGitRepositoryError"
  },
  "type": "import"
 },
 "mlflow.projects.utils.Repo": {
  "data": {
   "shadows": "git.Repo"
  },
  "type": "import"
 },
 "mlflow.projects.utils._FILE_URI_REGEX": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "mlflow.projects.utils._GIT_URI_REGEX": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "mlflow.projects.utils._ZIP_URI_REGEX": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mlflow.projects.utils._expand_uri": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "mlflow.projects.utils._is_local_uri",
    "mlflow.projects.utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.utils._get_git_repo_url": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "git.Repo",
    "git.exc.GitCommandError",
    "git.exc.InvalidGitRepositoryError",
    "len"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.utils._get_storage_dir": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "mlflow.projects.utils.os",
    "mlflow.projects.utils.tempfile"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.utils._is_file_uri": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "mlflow.projects.utils._FILE_URI_REGEX"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.utils._is_local_uri": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "mlflow.projects.utils._GIT_URI_REGEX"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.utils._is_valid_branch_name": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "git.Repo",
    "git.exc.GitCommandError"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.utils._is_zip_uri": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "mlflow.projects.utils._ZIP_URI_REGEX"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.utils._parse_subdirectory": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "mlflow.exceptions.ExecutionException"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.projects.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mlflow.projects.utils.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "mlflow.protos": {
  "data": {},
  "type": "module"
 },
 "mlflow.protos.databricks_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.EnumDescriptor",
    "google.protobuf.descriptor.EnumValueDescriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor_pb2.DESCRIPTOR",
    "google.protobuf.descriptor_pb2.EnumOptions.RegisterExtension",
    "google.protobuf.descriptor_pb2.EnumValueOptions.RegisterExtension",
    "google.protobuf.descriptor_pb2.FieldOptions.RegisterExtension",
    "google.protobuf.descriptor_pb2.MessageOptions.RegisterExtension",
    "google.protobuf.descriptor_pb2.MethodOptions.RegisterExtension",
    "google.protobuf.descriptor_pb2.ServiceOptions.RegisterExtension",
    "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "mlflow.protos.databricks_pb2.ApiVersion",
    "mlflow.protos.databricks_pb2.DESCRIPTOR",
    "mlflow.protos.databricks_pb2.DatabricksRpcOptions",
    "mlflow.protos.databricks_pb2.DatabricksServiceExceptionProto",
    "mlflow.protos.databricks_pb2.DocumentationMetadata",
    "mlflow.protos.databricks_pb2.HttpEndpoint",
    "mlflow.protos.databricks_pb2.RateLimit",
    "mlflow.protos.databricks_pb2._APIVERSION",
    "mlflow.protos.databricks_pb2._DATABRICKSRPCOPTIONS",
    "mlflow.protos.databricks_pb2._DATABRICKSSERVICEEXCEPTIONPROTO",
    "mlflow.protos.databricks_pb2._DOCUMENTATIONMETADATA",
    "mlflow.protos.databricks_pb2._ERRORCODE",
    "mlflow.protos.databricks_pb2._HTTPENDPOINT",
    "mlflow.protos.databricks_pb2._RATELIMIT",
    "mlflow.protos.databricks_pb2._VISIBILITY",
    "mlflow.protos.databricks_pb2._b",
    "mlflow.protos.databricks_pb2._sym_db",
    "mlflow.protos.databricks_pb2.enum_doc",
    "mlflow.protos.databricks_pb2.enum_value_doc",
    "mlflow.protos.databricks_pb2.enum_value_visibility",
    "mlflow.protos.databricks_pb2.field_doc",
    "mlflow.protos.databricks_pb2.json_inline",
    "mlflow.protos.databricks_pb2.json_map",
    "mlflow.protos.databricks_pb2.message_doc",
    "mlflow.protos.databricks_pb2.method_doc",
    "mlflow.protos.databricks_pb2.rpc",
    "mlflow.protos.databricks_pb2.service_doc",
    "mlflow.protos.databricks_pb2.sys",
    "mlflow.protos.databricks_pb2.validate_required",
    "mlflow.protos.databricks_pb2.visibility"
   ]
  },
  "type": "module"
 },
 "mlflow.protos.databricks_pb2.ApiVersion": {
  "data": {
   "lineno": 619
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.BAD_REQUEST": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.COULD_NOT_ACQUIRE_LOCK": {
  "data": {
   "lineno": 183
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.CUSTOMER_UNAUTHORIZED": {
  "data": {
   "lineno": 180
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.DIRECTORY_NOT_EMPTY": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.DIRECTORY_PROTECTED": {
  "data": {
   "lineno": 192
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.DRY_RUN_FAILED": {
  "data": {
   "lineno": 189
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.DatabricksRpcOptions": {
  "data": {
   "lineno": 605
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.DatabricksServiceExceptionProto": {
  "data": {
   "lineno": 640
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.DocumentationMetadata": {
  "data": {
   "lineno": 633
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.ENDPOINT_NOT_FOUND": {
  "data": {
   "lineno": 175
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.ENUM_DOC_FIELD_NUMBER": {
  "data": {
   "lineno": 267
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.ENUM_VALUE_DOC_FIELD_NUMBER": {
  "data": {
   "lineno": 283
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.ENUM_VALUE_VISIBILITY_FIELD_NUMBER": {
  "data": {
   "lineno": 275
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.ErrorCode": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.FEATURE_DISABLED": {
  "data": {
   "lineno": 179
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.FIELD_DOC_FIELD_NUMBER": {
  "data": {
   "lineno": 227
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.HttpEndpoint": {
  "data": {
   "lineno": 612
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.INTERNAL": {
  "data": {
   "lineno": 168
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.INTERNAL_ERROR": {
  "data": {
   "lineno": 170
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE": {
  "data": {
   "lineno": 174
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.INVALID_STATE": {
  "data": {
   "lineno": 177
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.INVALID_STATE_TRANSITION": {
  "data": {
   "lineno": 182
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.IO_ERROR": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.JSON_INLINE_FIELD_NUMBER": {
  "data": {
   "lineno": 211
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.JSON_MAP_FIELD_NUMBER": {
  "data": {
   "lineno": 219
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.MALFORMED_REQUEST": {
  "data": {
   "lineno": 176
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.MAX_BLOCK_SIZE_EXCEEDED": {
  "data": {
   "lineno": 187
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.MAX_NOTEBOOK_SIZE_EXCEEDED": {
  "data": {
   "lineno": 193
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.MAX_READ_SIZE_EXCEEDED": {
  "data": {
   "lineno": 188
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.MESSAGE_DOC_FIELD_NUMBER": {
  "data": {
   "lineno": 251
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.METHOD_DOC_FIELD_NUMBER": {
  "data": {
   "lineno": 243
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.PERMISSION_DENIED": {
  "data": {
   "lineno": 178
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.PUBLIC": {
  "data": {
   "lineno": 167
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.PUBLIC_UNDOCUMENTED": {
  "data": {
   "lineno": 169
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.QUOTA_EXCEEDED": {
  "data": {
   "lineno": 186
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.REQUEST_LIMIT_EXCEEDED": {
  "data": {
   "lineno": 181
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS": {
  "data": {
   "lineno": 184
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST": {
  "data": {
   "lineno": 185
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.RESOURCE_LIMIT_EXCEEDED": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.RPC_FIELD_NUMBER": {
  "data": {
   "lineno": 235
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.RateLimit": {
  "data": {
   "lineno": 626
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.SERVICE_DOC_FIELD_NUMBER": {
  "data": {
   "lineno": 259
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.TEMPORARILY_UNAVAILABLE": {
  "data": {
   "lineno": 171
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.VALIDATE_REQUIRED_FIELD_NUMBER": {
  "data": {
   "lineno": 203
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.VISIBILITY_FIELD_NUMBER": {
  "data": {
   "lineno": 195
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.Visibility": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2._APIVERSION": {
  "data": {
   "lineno": 397
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2._DATABRICKSRPCOPTIONS": {
  "data": {
   "lineno": 293
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2._DATABRICKSSERVICEEXCEPTIONPROTO": {
  "data": {
   "lineno": 532
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2._DOCUMENTATIONMETADATA": {
  "data": {
   "lineno": 473
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2._ERRORCODE": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2._HTTPENDPOINT": {
  "data": {
   "lineno": 352
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2._RATELIMIT": {
  "data": {
   "lineno": 435
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2._VISIBILITY": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "mlflow.protos.databricks_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "mlflow.protos.databricks_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "mlflow.protos.databricks_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "mlflow.protos.databricks_pb2.enum_doc": {
  "data": {
   "lineno": 268
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.enum_type_wrapper": {
  "data": {
   "shadows": "google.protobuf.internal.enum_type_wrapper"
  },
  "type": "import"
 },
 "mlflow.protos.databricks_pb2.enum_value_doc": {
  "data": {
   "lineno": 284
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.enum_value_visibility": {
  "data": {
   "lineno": 276
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.field_doc": {
  "data": {
   "lineno": 228
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.google_dot_protobuf_dot_descriptor__pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "mlflow.protos.databricks_pb2.json_inline": {
  "data": {
   "lineno": 212
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.json_map": {
  "data": {
   "lineno": 220
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.message_doc": {
  "data": {
   "lineno": 252
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.method_doc": {
  "data": {
   "lineno": 244
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.rpc": {
  "data": {
   "lineno": 236
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.scalapb_dot_scalapb__pb2": {
  "data": {
   "shadows": "scalapb_pb2"
  },
  "type": "import"
 },
 "mlflow.protos.databricks_pb2.service_doc": {
  "data": {
   "lineno": 260
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlflow.protos.databricks_pb2.validate_required": {
  "data": {
   "lineno": 204
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.visibility": {
  "data": {
   "lineno": 196
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.EnumDescriptor",
    "google.protobuf.descriptor.EnumValueDescriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor.MethodDescriptor",
    "google.protobuf.descriptor.ServiceDescriptor",
    "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.service.Service",
    "google.protobuf.service_reflection.GeneratedServiceStubType",
    "google.protobuf.service_reflection.GeneratedServiceType",
    "google.protobuf.symbol_database.Default",
    "mlflow.protos.model_registry_pb2.CreateModelVersion",
    "mlflow.protos.model_registry_pb2.CreateRegisteredModel",
    "mlflow.protos.model_registry_pb2.DESCRIPTOR",
    "mlflow.protos.model_registry_pb2.DeleteModelVersion",
    "mlflow.protos.model_registry_pb2.DeleteRegisteredModel",
    "mlflow.protos.model_registry_pb2.GetLatestVersions",
    "mlflow.protos.model_registry_pb2.GetModelVersion",
    "mlflow.protos.model_registry_pb2.GetModelVersionDownloadUri",
    "mlflow.protos.model_registry_pb2.GetRegisteredModel",
    "mlflow.protos.model_registry_pb2.ListRegisteredModels",
    "mlflow.protos.model_registry_pb2.ModelRegistryService",
    "mlflow.protos.model_registry_pb2.ModelVersion",
    "mlflow.protos.model_registry_pb2.RegisteredModel",
    "mlflow.protos.model_registry_pb2.RenameRegisteredModel",
    "mlflow.protos.model_registry_pb2.SearchModelVersions",
    "mlflow.protos.model_registry_pb2.TransitionModelVersionStage",
    "mlflow.protos.model_registry_pb2.UpdateModelVersion",
    "mlflow.protos.model_registry_pb2.UpdateRegisteredModel",
    "mlflow.protos.model_registry_pb2._CREATEMODELVERSION",
    "mlflow.protos.model_registry_pb2._CREATEMODELVERSION_RESPONSE",
    "mlflow.protos.model_registry_pb2._CREATEREGISTEREDMODEL",
    "mlflow.protos.model_registry_pb2._CREATEREGISTEREDMODEL_RESPONSE",
    "mlflow.protos.model_registry_pb2._DELETEMODELVERSION",
    "mlflow.protos.model_registry_pb2._DELETEMODELVERSION_RESPONSE",
    "mlflow.protos.model_registry_pb2._DELETEREGISTEREDMODEL",
    "mlflow.protos.model_registry_pb2._DELETEREGISTEREDMODEL_RESPONSE",
    "mlflow.protos.model_registry_pb2._GETLATESTVERSIONS",
    "mlflow.protos.model_registry_pb2._GETLATESTVERSIONS_RESPONSE",
    "mlflow.protos.model_registry_pb2._GETMODELVERSION",
    "mlflow.protos.model_registry_pb2._GETMODELVERSIONDOWNLOADURI",
    "mlflow.protos.model_registry_pb2._GETMODELVERSIONDOWNLOADURI_RESPONSE",
    "mlflow.protos.model_registry_pb2._GETMODELVERSION_RESPONSE",
    "mlflow.protos.model_registry_pb2._GETREGISTEREDMODEL",
    "mlflow.protos.model_registry_pb2._GETREGISTEREDMODEL_RESPONSE",
    "mlflow.protos.model_registry_pb2._LISTREGISTEREDMODELS",
    "mlflow.protos.model_registry_pb2._LISTREGISTEREDMODELS_RESPONSE",
    "mlflow.protos.model_registry_pb2._MODELREGISTRYSERVICE",
    "mlflow.protos.model_registry_pb2._MODELVERSION",
    "mlflow.protos.model_registry_pb2._MODELVERSIONSTATUS",
    "mlflow.protos.model_registry_pb2._REGISTEREDMODEL",
    "mlflow.protos.model_registry_pb2._RENAMEREGISTEREDMODEL",
    "mlflow.protos.model_registry_pb2._RENAMEREGISTEREDMODEL_RESPONSE",
    "mlflow.protos.model_registry_pb2._SEARCHMODELVERSIONS",
    "mlflow.protos.model_registry_pb2._SEARCHMODELVERSIONS_RESPONSE",
    "mlflow.protos.model_registry_pb2._TRANSITIONMODELVERSIONSTAGE",
    "mlflow.protos.model_registry_pb2._TRANSITIONMODELVERSIONSTAGE_RESPONSE",
    "mlflow.protos.model_registry_pb2._UPDATEMODELVERSION",
    "mlflow.protos.model_registry_pb2._UPDATEMODELVERSION_RESPONSE",
    "mlflow.protos.model_registry_pb2._UPDATEREGISTEREDMODEL",
    "mlflow.protos.model_registry_pb2._UPDATEREGISTEREDMODEL_RESPONSE",
    "mlflow.protos.model_registry_pb2._b",
    "mlflow.protos.model_registry_pb2._sym_db",
    "mlflow.protos.model_registry_pb2.sys"
   ]
  },
  "type": "module"
 },
 "mlflow.protos.model_registry_pb2.CreateModelVersion": {
  "data": {
   "lineno": 1354
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2.CreateRegisteredModel": {
  "data": {
   "lineno": 1249
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2.DeleteModelVersion": {
  "data": {
   "lineno": 1399
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2.DeleteRegisteredModel": {
  "data": {
   "lineno": 1294
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2.FAILED_REGISTRATION": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2.GetLatestVersions": {
  "data": {
   "lineno": 1339
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2.GetModelVersion": {
  "data": {
   "lineno": 1414
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2.GetModelVersionDownloadUri": {
  "data": {
   "lineno": 1444
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2.GetRegisteredModel": {
  "data": {
   "lineno": 1309
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2.ListRegisteredModels": {
  "data": {
   "lineno": 1324
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2.ModelRegistryService": {
  "data": {
   "lineno": 1636
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2.ModelRegistryService_Stub": {
  "data": {
   "lineno": 1641
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2.ModelVersion": {
  "data": {
   "lineno": 1242
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2.ModelVersionStatus": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2.PENDING_REGISTRATION": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2.READY": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2.RegisteredModel": {
  "data": {
   "lineno": 1235
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2.RenameRegisteredModel": {
  "data": {
   "lineno": 1264
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2.SearchModelVersions": {
  "data": {
   "lineno": 1429
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2.TransitionModelVersionStage": {
  "data": {
   "lineno": 1384
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2.UpdateModelVersion": {
  "data": {
   "lineno": 1369
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2.UpdateRegisteredModel": {
  "data": {
   "lineno": 1279
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._CREATEMODELVERSION": {
  "data": {
   "lineno": 702
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._CREATEMODELVERSION_RESPONSE": {
  "data": {
   "lineno": 672
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._CREATEREGISTEREDMODEL": {
  "data": {
   "lineno": 261
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._CREATEREGISTEREDMODEL_RESPONSE": {
  "data": {
   "lineno": 231
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._DELETEMODELVERSION": {
  "data": {
   "lineno": 927
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._DELETEMODELVERSION_RESPONSE": {
  "data": {
   "lineno": 904
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._DELETEREGISTEREDMODEL": {
  "data": {
   "lineno": 451
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._DELETEREGISTEREDMODEL_RESPONSE": {
  "data": {
   "lineno": 428
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._GETLATESTVERSIONS": {
  "data": {
   "lineno": 634
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._GETLATESTVERSIONS_RESPONSE": {
  "data": {
   "lineno": 604
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._GETMODELVERSION": {
  "data": {
   "lineno": 995
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._GETMODELVERSIONDOWNLOADURI": {
  "data": {
   "lineno": 1152
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._GETMODELVERSIONDOWNLOADURI_RESPONSE": {
  "data": {
   "lineno": 1122
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._GETMODELVERSION_RESPONSE": {
  "data": {
   "lineno": 965
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._GETREGISTEREDMODEL": {
  "data": {
   "lineno": 512
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._GETREGISTEREDMODEL_RESPONSE": {
  "data": {
   "lineno": 482
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._LISTREGISTEREDMODELS": {
  "data": {
   "lineno": 573
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._LISTREGISTEREDMODELS_RESPONSE": {
  "data": {
   "lineno": 543
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._MODELREGISTRYSERVICE": {
  "data": {
   "lineno": 1496
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._MODELVERSION": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._MODELVERSIONSTATUS": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._REGISTEREDMODEL": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._RENAMEREGISTEREDMODEL": {
  "data": {
   "lineno": 322
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._RENAMEREGISTEREDMODEL_RESPONSE": {
  "data": {
   "lineno": 292
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._SEARCHMODELVERSIONS": {
  "data": {
   "lineno": 1070
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._SEARCHMODELVERSIONS_RESPONSE": {
  "data": {
   "lineno": 1033
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._TRANSITIONMODELVERSIONSTAGE": {
  "data": {
   "lineno": 852
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._TRANSITIONMODELVERSIONSTAGE_RESPONSE": {
  "data": {
   "lineno": 822
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._UPDATEMODELVERSION": {
  "data": {
   "lineno": 777
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._UPDATEMODELVERSION_RESPONSE": {
  "data": {
   "lineno": 747
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._UPDATEREGISTEREDMODEL": {
  "data": {
   "lineno": 390
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._UPDATEREGISTEREDMODEL_RESPONSE": {
  "data": {
   "lineno": 360
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "mlflow.protos.model_registry_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "mlflow.protos.model_registry_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "mlflow.protos.model_registry_pb2._service": {
  "data": {
   "shadows": "google.protobuf.service"
  },
  "type": "import"
 },
 "mlflow.protos.model_registry_pb2._sym_db": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mlflow.protos.model_registry_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "mlflow.protos.model_registry_pb2.databricks__pb2": {
  "data": {
   "shadows": "databricks_pb2"
  },
  "type": "import"
 },
 "mlflow.protos.model_registry_pb2.enum_type_wrapper": {
  "data": {
   "shadows": "google.protobuf.internal.enum_type_wrapper"
  },
  "type": "import"
 },
 "mlflow.protos.model_registry_pb2.scalapb_dot_scalapb__pb2": {
  "data": {
   "shadows": "scalapb_pb2"
  },
  "type": "import"
 },
 "mlflow.protos.model_registry_pb2.service_reflection": {
  "data": {
   "shadows": "google.protobuf.service_reflection"
  },
  "type": "import"
 },
 "mlflow.protos.model_registry_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlflow.protos.scalapb": {
  "data": {},
  "type": "module"
 },
 "mlflow.protos.scalapb.scalapb_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor_pb2.DESCRIPTOR",
    "google.protobuf.descriptor_pb2.FieldOptions.RegisterExtension",
    "google.protobuf.descriptor_pb2.FileOptions.RegisterExtension",
    "google.protobuf.descriptor_pb2.MessageOptions.RegisterExtension",
    "google.protobuf.message",
    "google.protobuf.message.Message",
    "google.protobuf.message.message_type",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "mlflow.protos.scalapb.scalapb_pb2.DESCRIPTOR",
    "mlflow.protos.scalapb.scalapb_pb2.FieldOptions",
    "mlflow.protos.scalapb.scalapb_pb2.MessageOptions",
    "mlflow.protos.scalapb.scalapb_pb2.ScalaPbOptions",
    "mlflow.protos.scalapb.scalapb_pb2._FIELDOPTIONS",
    "mlflow.protos.scalapb.scalapb_pb2._MESSAGEOPTIONS",
    "mlflow.protos.scalapb.scalapb_pb2._SCALAPBOPTIONS",
    "mlflow.protos.scalapb.scalapb_pb2._b",
    "mlflow.protos.scalapb.scalapb_pb2._sym_db",
    "mlflow.protos.scalapb.scalapb_pb2.field",
    "mlflow.protos.scalapb.scalapb_pb2.options",
    "mlflow.protos.scalapb.scalapb_pb2.sys"
   ]
  },
  "type": "module"
 },
 "mlflow.protos.scalapb.scalapb_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mlflow.protos.scalapb.scalapb_pb2.FIELD_FIELD_NUMBER": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mlflow.protos.scalapb.scalapb_pb2.FieldOptions": {
  "data": {
   "lineno": 182
  },
  "type": "constant"
 },
 "mlflow.protos.scalapb.scalapb_pb2.MESSAGE_FIELD_NUMBER": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mlflow.protos.scalapb.scalapb_pb2.MessageOptions": {
  "data": {
   "lineno": 175
  },
  "type": "constant"
 },
 "mlflow.protos.scalapb.scalapb_pb2.OPTIONS_FIELD_NUMBER": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mlflow.protos.scalapb.scalapb_pb2.ScalaPbOptions": {
  "data": {
   "lineno": 168
  },
  "type": "constant"
 },
 "mlflow.protos.scalapb.scalapb_pb2._FIELDOPTIONS": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "mlflow.protos.scalapb.scalapb_pb2._MESSAGEOPTIONS": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "mlflow.protos.scalapb.scalapb_pb2._SCALAPBOPTIONS": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "mlflow.protos.scalapb.scalapb_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "mlflow.protos.scalapb.scalapb_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "mlflow.protos.scalapb.scalapb_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "mlflow.protos.scalapb.scalapb_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "mlflow.protos.scalapb.scalapb_pb2._sym_db": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mlflow.protos.scalapb.scalapb_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "mlflow.protos.scalapb.scalapb_pb2.field": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mlflow.protos.scalapb.scalapb_pb2.google_dot_protobuf_dot_descriptor__pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "mlflow.protos.scalapb.scalapb_pb2.message": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mlflow.protos.scalapb.scalapb_pb2.options": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mlflow.protos.scalapb.scalapb_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlflow.protos.service_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "float",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.EnumDescriptor",
    "google.protobuf.descriptor.EnumValueDescriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor.MethodDescriptor",
    "google.protobuf.descriptor.ServiceDescriptor",
    "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.service.Service",
    "google.protobuf.service_reflection.GeneratedServiceStubType",
    "google.protobuf.service_reflection.GeneratedServiceType",
    "google.protobuf.symbol_database.Default",
    "mlflow.protos.service_pb2.CreateExperiment",
    "mlflow.protos.service_pb2.CreateRun",
    "mlflow.protos.service_pb2.DESCRIPTOR",
    "mlflow.protos.service_pb2.DeleteExperiment",
    "mlflow.protos.service_pb2.DeleteRun",
    "mlflow.protos.service_pb2.DeleteTag",
    "mlflow.protos.service_pb2.Experiment",
    "mlflow.protos.service_pb2.ExperimentTag",
    "mlflow.protos.service_pb2.FileInfo",
    "mlflow.protos.service_pb2.GetExperiment",
    "mlflow.protos.service_pb2.GetExperimentByName",
    "mlflow.protos.service_pb2.GetMetricHistory",
    "mlflow.protos.service_pb2.GetRun",
    "mlflow.protos.service_pb2.ListArtifacts",
    "mlflow.protos.service_pb2.ListExperiments",
    "mlflow.protos.service_pb2.LogBatch",
    "mlflow.protos.service_pb2.LogMetric",
    "mlflow.protos.service_pb2.LogModel",
    "mlflow.protos.service_pb2.LogParam",
    "mlflow.protos.service_pb2.Metric",
    "mlflow.protos.service_pb2.MlflowService",
    "mlflow.protos.service_pb2.Param",
    "mlflow.protos.service_pb2.RestoreExperiment",
    "mlflow.protos.service_pb2.RestoreRun",
    "mlflow.protos.service_pb2.Run",
    "mlflow.protos.service_pb2.RunData",
    "mlflow.protos.service_pb2.RunInfo",
    "mlflow.protos.service_pb2.RunTag",
    "mlflow.protos.service_pb2.SearchRuns",
    "mlflow.protos.service_pb2.SetExperimentTag",
    "mlflow.protos.service_pb2.SetTag",
    "mlflow.protos.service_pb2.UpdateExperiment",
    "mlflow.protos.service_pb2.UpdateRun",
    "mlflow.protos.service_pb2._CREATEEXPERIMENT",
    "mlflow.protos.service_pb2._CREATEEXPERIMENT_RESPONSE",
    "mlflow.protos.service_pb2._CREATERUN",
    "mlflow.protos.service_pb2._CREATERUN_RESPONSE",
    "mlflow.protos.service_pb2._DELETEEXPERIMENT",
    "mlflow.protos.service_pb2._DELETEEXPERIMENT_RESPONSE",
    "mlflow.protos.service_pb2._DELETERUN",
    "mlflow.protos.service_pb2._DELETERUN_RESPONSE",
    "mlflow.protos.service_pb2._DELETETAG",
    "mlflow.protos.service_pb2._DELETETAG_RESPONSE",
    "mlflow.protos.service_pb2._EXPERIMENT",
    "mlflow.protos.service_pb2._EXPERIMENTTAG",
    "mlflow.protos.service_pb2._FILEINFO",
    "mlflow.protos.service_pb2._GETEXPERIMENT",
    "mlflow.protos.service_pb2._GETEXPERIMENTBYNAME",
    "mlflow.protos.service_pb2._GETEXPERIMENTBYNAME_RESPONSE",
    "mlflow.protos.service_pb2._GETEXPERIMENT_RESPONSE",
    "mlflow.protos.service_pb2._GETMETRICHISTORY",
    "mlflow.protos.service_pb2._GETMETRICHISTORY_RESPONSE",
    "mlflow.protos.service_pb2._GETRUN",
    "mlflow.protos.service_pb2._GETRUN_RESPONSE",
    "mlflow.protos.service_pb2._LISTARTIFACTS",
    "mlflow.protos.service_pb2._LISTARTIFACTS_RESPONSE",
    "mlflow.protos.service_pb2._LISTEXPERIMENTS",
    "mlflow.protos.service_pb2._LISTEXPERIMENTS_RESPONSE",
    "mlflow.protos.service_pb2._LOGBATCH",
    "mlflow.protos.service_pb2._LOGBATCH_RESPONSE",
    "mlflow.protos.service_pb2._LOGMETRIC",
    "mlflow.protos.service_pb2._LOGMETRIC_RESPONSE",
    "mlflow.protos.service_pb2._LOGMODEL",
    "mlflow.protos.service_pb2._LOGMODEL_RESPONSE",
    "mlflow.protos.service_pb2._LOGPARAM",
    "mlflow.protos.service_pb2._LOGPARAM_RESPONSE",
    "mlflow.protos.service_pb2._METRIC",
    "mlflow.protos.service_pb2._MLFLOWSERVICE",
    "mlflow.protos.service_pb2._PARAM",
    "mlflow.protos.service_pb2._RESTOREEXPERIMENT",
    "mlflow.protos.service_pb2._RESTOREEXPERIMENT_RESPONSE",
    "mlflow.protos.service_pb2._RESTORERUN",
    "mlflow.protos.service_pb2._RESTORERUN_RESPONSE",
    "mlflow.protos.service_pb2._RUN",
    "mlflow.protos.service_pb2._RUNDATA",
    "mlflow.protos.service_pb2._RUNINFO",
    "mlflow.protos.service_pb2._RUNSTATUS",
    "mlflow.protos.service_pb2._RUNTAG",
    "mlflow.protos.service_pb2._SEARCHRUNS",
    "mlflow.protos.service_pb2._SEARCHRUNS_RESPONSE",
    "mlflow.protos.service_pb2._SETEXPERIMENTTAG",
    "mlflow.protos.service_pb2._SETEXPERIMENTTAG_RESPONSE",
    "mlflow.protos.service_pb2._SETTAG",
    "mlflow.protos.service_pb2._SETTAG_RESPONSE",
    "mlflow.protos.service_pb2._SOURCETYPE",
    "mlflow.protos.service_pb2._UPDATEEXPERIMENT",
    "mlflow.protos.service_pb2._UPDATEEXPERIMENT_RESPONSE",
    "mlflow.protos.service_pb2._UPDATERUN",
    "mlflow.protos.service_pb2._UPDATERUN_RESPONSE",
    "mlflow.protos.service_pb2._VIEWTYPE",
    "mlflow.protos.service_pb2._b",
    "mlflow.protos.service_pb2._sym_db",
    "mlflow.protos.service_pb2.sys"
   ]
  },
  "type": "module"
 },
 "mlflow.protos.service_pb2.ACTIVE_ONLY": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.ALL": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.CreateExperiment": {
  "data": {
   "lineno": 2266
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.CreateRun": {
  "data": {
   "lineno": 2356
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.DELETED_ONLY": {
  "data": {
   "lineno": 129
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.DeleteExperiment": {
  "data": {
   "lineno": 2311
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.DeleteRun": {
  "data": {
   "lineno": 2386
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.DeleteTag": {
  "data": {
   "lineno": 2476
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.Experiment": {
  "data": {
   "lineno": 2259
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.ExperimentTag": {
  "data": {
   "lineno": 2245
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.FAILED": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.FINISHED": {
  "data": {
   "lineno": 138
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.FileInfo": {
  "data": {
   "lineno": 2536
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.GetExperiment": {
  "data": {
   "lineno": 2296
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.GetExperimentByName": {
  "data": {
   "lineno": 2588
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.GetMetricHistory": {
  "data": {
   "lineno": 2543
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.GetRun": {
  "data": {
   "lineno": 2491
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.JOB": {
  "data": {
   "lineno": 132
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.KILLED": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.LOCAL": {
  "data": {
   "lineno": 134
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.ListArtifacts": {
  "data": {
   "lineno": 2521
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.ListExperiments": {
  "data": {
   "lineno": 2281
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.LogBatch": {
  "data": {
   "lineno": 2558
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.LogMetric": {
  "data": {
   "lineno": 2416
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.LogModel": {
  "data": {
   "lineno": 2573
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.LogParam": {
  "data": {
   "lineno": 2431
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.Metric": {
  "data": {
   "lineno": 2210
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.MlflowService": {
  "data": {
   "lineno": 2862
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.MlflowService_Stub": {
  "data": {
   "lineno": 2867
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.NOTEBOOK": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.PROJECT": {
  "data": {
   "lineno": 133
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.Param": {
  "data": {
   "lineno": 2217
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.RUNNING": {
  "data": {
   "lineno": 136
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.RestoreExperiment": {
  "data": {
   "lineno": 2326
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.RestoreRun": {
  "data": {
   "lineno": 2401
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.Run": {
  "data": {
   "lineno": 2224
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.RunData": {
  "data": {
   "lineno": 2231
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.RunInfo": {
  "data": {
   "lineno": 2252
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.RunStatus": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.RunTag": {
  "data": {
   "lineno": 2238
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.SCHEDULED": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.SearchRuns": {
  "data": {
   "lineno": 2506
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.SetExperimentTag": {
  "data": {
   "lineno": 2446
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.SetTag": {
  "data": {
   "lineno": 2461
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.SourceType": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.UNKNOWN": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.UpdateExperiment": {
  "data": {
   "lineno": 2341
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.UpdateRun": {
  "data": {
   "lineno": 2371
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.ViewType": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._CREATEEXPERIMENT": {
  "data": {
   "lineno": 583
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._CREATEEXPERIMENT_RESPONSE": {
  "data": {
   "lineno": 553
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._CREATERUN": {
  "data": {
   "lineno": 949
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._CREATERUN_RESPONSE": {
  "data": {
   "lineno": 919
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._DELETEEXPERIMENT": {
  "data": {
   "lineno": 773
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._DELETEEXPERIMENT_RESPONSE": {
  "data": {
   "lineno": 750
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._DELETERUN": {
  "data": {
   "lineno": 1106
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._DELETERUN_RESPONSE": {
  "data": {
   "lineno": 1083
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._DELETETAG": {
  "data": {
   "lineno": 1521
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._DELETETAG_RESPONSE": {
  "data": {
   "lineno": 1498
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._EXPERIMENT": {
  "data": {
   "lineno": 480
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._EXPERIMENTTAG": {
  "data": {
   "lineno": 355
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._FILEINFO": {
  "data": {
   "lineno": 1812
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._GETEXPERIMENT": {
  "data": {
   "lineno": 719
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._GETEXPERIMENTBYNAME": {
  "data": {
   "lineno": 2098
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._GETEXPERIMENTBYNAME_RESPONSE": {
  "data": {
   "lineno": 2068
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._GETEXPERIMENT_RESPONSE": {
  "data": {
   "lineno": 682
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._GETMETRICHISTORY": {
  "data": {
   "lineno": 1887
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._GETMETRICHISTORY_RESPONSE": {
  "data": {
   "lineno": 1857
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._GETRUN": {
  "data": {
   "lineno": 1589
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._GETRUN_RESPONSE": {
  "data": {
   "lineno": 1559
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._LISTARTIFACTS": {
  "data": {
   "lineno": 1767
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._LISTARTIFACTS_RESPONSE": {
  "data": {
   "lineno": 1730
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._LISTEXPERIMENTS": {
  "data": {
   "lineno": 651
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._LISTEXPERIMENTS_RESPONSE": {
  "data": {
   "lineno": 621
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._LOGBATCH": {
  "data": {
   "lineno": 1955
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._LOGBATCH_RESPONSE": {
  "data": {
   "lineno": 1932
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._LOGMETRIC": {
  "data": {
   "lineno": 1214
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._LOGMETRIC_RESPONSE": {
  "data": {
   "lineno": 1191
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._LOGMODEL": {
  "data": {
   "lineno": 2030
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._LOGMODEL_RESPONSE": {
  "data": {
   "lineno": 2007
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._LOGPARAM": {
  "data": {
   "lineno": 1303
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._LOGPARAM_RESPONSE": {
  "data": {
   "lineno": 1280
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._METRIC": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._MLFLOWSERVICE": {
  "data": {
   "lineno": 2650
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._PARAM": {
  "data": {
   "lineno": 196
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._RESTOREEXPERIMENT": {
  "data": {
   "lineno": 827
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._RESTOREEXPERIMENT_RESPONSE": {
  "data": {
   "lineno": 804
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._RESTORERUN": {
  "data": {
   "lineno": 1160
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._RESTORERUN_RESPONSE": {
  "data": {
   "lineno": 1137
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._RUN": {
  "data": {
   "lineno": 234
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._RUNDATA": {
  "data": {
   "lineno": 272
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._RUNINFO": {
  "data": {
   "lineno": 393
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._RUNSTATUS": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._RUNTAG": {
  "data": {
   "lineno": 317
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._SEARCHRUNS": {
  "data": {
   "lineno": 1664
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._SEARCHRUNS_RESPONSE": {
  "data": {
   "lineno": 1627
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._SETEXPERIMENTTAG": {
  "data": {
   "lineno": 1378
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._SETEXPERIMENTTAG_RESPONSE": {
  "data": {
   "lineno": 1355
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._SETTAG": {
  "data": {
   "lineno": 1446
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._SETTAG_RESPONSE": {
  "data": {
   "lineno": 1423
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._SOURCETYPE": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._UPDATEEXPERIMENT": {
  "data": {
   "lineno": 881
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._UPDATEEXPERIMENT_RESPONSE": {
  "data": {
   "lineno": 858
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._UPDATERUN": {
  "data": {
   "lineno": 1031
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._UPDATERUN_RESPONSE": {
  "data": {
   "lineno": 1001
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._VIEWTYPE": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "mlflow.protos.service_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "mlflow.protos.service_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "mlflow.protos.service_pb2._service": {
  "data": {
   "shadows": "google.protobuf.service"
  },
  "type": "import"
 },
 "mlflow.protos.service_pb2._sym_db": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "mlflow.protos.service_pb2.databricks__pb2": {
  "data": {
   "shadows": "databricks_pb2"
  },
  "type": "import"
 },
 "mlflow.protos.service_pb2.enum_type_wrapper": {
  "data": {
   "shadows": "google.protobuf.internal.enum_type_wrapper"
  },
  "type": "import"
 },
 "mlflow.protos.service_pb2.scalapb_dot_scalapb__pb2": {
  "data": {
   "shadows": "scalapb_pb2"
  },
  "type": "import"
 },
 "mlflow.protos.service_pb2.service_reflection": {
  "data": {
   "shadows": "google.protobuf.service_reflection"
  },
  "type": "import"
 },
 "mlflow.protos.service_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlflow.pyfunc": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.pyfunc.logging"
   ]
  },
  "type": "module"
 },
 "mlflow.pyfunc.ArrayType": {
  "data": {
   "shadows": "pyspark.sql.types.ArrayType"
  },
  "type": "import"
 },
 "mlflow.pyfunc.CODE": {
  "data": {
   "lineno": 213
  },
  "type": "constant"
 },
 "mlflow.pyfunc.DATA": {
  "data": {
   "lineno": 214
  },
  "type": "constant"
 },
 "mlflow.pyfunc.DataType": {
  "data": {
   "shadows": "pyspark.sql.types.DataType"
  },
  "type": "import"
 },
 "mlflow.pyfunc.DoubleType": {
  "data": {
   "shadows": "pyspark.sql.types.DoubleType"
  },
  "type": "import"
 },
 "mlflow.pyfunc.ENV": {
  "data": {
   "lineno": 215
  },
  "type": "constant"
 },
 "mlflow.pyfunc.FLAVOR_NAME": {
  "data": {
   "lineno": 211
  },
  "type": "constant"
 },
 "mlflow.pyfunc.FloatType": {
  "data": {
   "shadows": "pyspark.sql.types.FloatType"
  },
  "type": "import"
 },
 "mlflow.pyfunc.INVALID_PARAMETER_VALUE": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  },
  "type": "import"
 },
 "mlflow.pyfunc.IntegerType": {
  "data": {
   "shadows": "pyspark.sql.types.IntegerType"
  },
  "type": "import"
 },
 "mlflow.pyfunc.LongType": {
  "data": {
   "shadows": "pyspark.sql.types.LongType"
  },
  "type": "import"
 },
 "mlflow.pyfunc.MAIN": {
  "data": {
   "lineno": 212
  },
  "type": "constant"
 },
 "mlflow.pyfunc.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.pyfunc.Model": {
  "data": {
   "shadows": "mlflow.models.Model"
  },
  "type": "import"
 },
 "mlflow.pyfunc.PYTHON_VERSION": {
  "data": {
   "shadows": "mlflow.utils.PYTHON_VERSION"
  },
  "type": "import"
 },
 "mlflow.pyfunc.PY_VERSION": {
  "data": {
   "lineno": 216
  },
  "type": "constant"
 },
 "mlflow.pyfunc.PythonModel": {
  "data": {
   "shadows": "mlflow.pyfunc.model.PythonModel"
  },
  "type": "import"
 },
 "mlflow.pyfunc.PythonModelContext": {
  "data": {
   "shadows": "mlflow.pyfunc.model.PythonModelContext"
  },
  "type": "import"
 },
 "mlflow.pyfunc.RESOURCE_ALREADY_EXISTS": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS"
  },
  "type": "import"
 },
 "mlflow.pyfunc.SparkModelCache": {
  "data": {
   "shadows": "mlflow.pyfunc.spark_model_cache.SparkModelCache"
  },
  "type": "import"
 },
 "mlflow.pyfunc.StringType": {
  "data": {
   "shadows": "pyspark.sql.types.StringType"
  },
  "type": "import"
 },
 "mlflow.pyfunc.TempDir": {
  "data": {
   "shadows": "mlflow.utils.file_utils.TempDir"
  },
  "type": "import"
 },
 "mlflow.pyfunc._copy_file_or_tree": {
  "data": {
   "shadows": "mlflow.utils.file_utils._copy_file_or_tree"
  },
  "type": "import"
 },
 "mlflow.pyfunc._download_artifact_from_uri": {
  "data": {
   "shadows": "mlflow.tracking.artifact_utils._download_artifact_from_uri"
  },
  "type": "import"
 },
 "mlflow.pyfunc._get_flavor_configuration": {
  "data": {
   "shadows": "mlflow.utils.model_utils._get_flavor_configuration"
  },
  "type": "import"
 },
 "mlflow.pyfunc._load_model_env": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "mlflow.pyfunc.ENV",
    "mlflow.pyfunc.FLAVOR_NAME",
    "mlflow.utils.model_utils._get_flavor_configuration"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc._logger": {
  "data": {
   "lineno": 218
  },
  "type": "constant"
 },
 "mlflow.pyfunc._parse_datatype_string": {
  "data": {
   "shadows": "pyspark.sql.types._parse_datatype_string"
  },
  "type": "import"
 },
 "mlflow.pyfunc._save_model_with_loader_module_and_data_path": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.models.Model",
    "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS",
    "mlflow.pyfunc.mlflow",
    "mlflow.pyfunc.os",
    "mlflow.pyfunc.shutil",
    "mlflow.utils.file_utils._copy_file_or_tree"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc._warn_potentially_incompatible_py_version_if_necessary": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "mlflow.pyfunc._logger",
    "mlflow.utils.PYTHON_VERSION",
    "mlflow.utils.get_major_minor_py_version"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc.add_to_model": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "copy.deepcopy",
    "mlflow.pyfunc.CODE",
    "mlflow.pyfunc.DATA",
    "mlflow.pyfunc.ENV",
    "mlflow.pyfunc.FLAVOR_NAME",
    "mlflow.pyfunc.MAIN",
    "mlflow.pyfunc.PY_VERSION",
    "mlflow.utils.PYTHON_VERSION"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mlflow.pyfunc.deprecated": {
  "data": {
   "shadows": "mlflow.utils.deprecated"
  },
  "type": "import"
 },
 "mlflow.pyfunc.get_default_conda_env": {
  "data": {
   "shadows": "mlflow.pyfunc.model.get_default_conda_env"
  },
  "type": "import"
 },
 "mlflow.pyfunc.get_major_minor_py_version": {
  "data": {
   "shadows": "mlflow.utils.get_major_minor_py_version"
  },
  "type": "import"
 },
 "mlflow.pyfunc.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "mlflow.pyfunc.load_model": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "mlflow.pyfunc.CODE",
    "mlflow.pyfunc.DATA",
    "mlflow.pyfunc.FLAVOR_NAME",
    "mlflow.pyfunc.MAIN",
    "mlflow.pyfunc.PY_VERSION",
    "mlflow.pyfunc._warn_potentially_incompatible_py_version_if_necessary",
    "mlflow.pyfunc.importlib",
    "mlflow.pyfunc.mlflow",
    "mlflow.pyfunc.os",
    "mlflow.tracking.artifact_utils._download_artifact_from_uri",
    "mlflow.utils.model_utils._get_flavor_configuration"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc.load_pyfunc": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "mlflow.pyfunc.load_model",
    "mlflow.utils.deprecated"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc.loader_template": {
  "data": {
   "lineno": 741
  },
  "type": "constant"
 },
 "mlflow.pyfunc.log_model": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "mlflow.models.Model.log",
    "mlflow.pyfunc.mlflow"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.pyfunc.mlflow": {
  "data": {
   "shadows": "mlflow"
  },
  "type": "import"
 },
 "mlflow.pyfunc.mlflow.pyfunc.model": {
  "data": {
   "shadows": "mlflow.pyfunc.model"
  },
  "type": "import"
 },
 "mlflow.pyfunc.mlflow.pyfunc.utils": {
  "data": {
   "shadows": "mlflow.pyfunc.utils"
  },
  "type": "import"
 },
 "mlflow.pyfunc.model": {
  "data": {},
  "type": "module"
 },
 "mlflow.pyfunc.model.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "mlflow.pyfunc.model.CONFIG_KEY_ARTIFACTS": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mlflow.pyfunc.model.CONFIG_KEY_ARTIFACT_RELATIVE_PATH": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mlflow.pyfunc.model.CONFIG_KEY_ARTIFACT_URI": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mlflow.pyfunc.model.CONFIG_KEY_CLOUDPICKLE_VERSION": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mlflow.pyfunc.model.CONFIG_KEY_PYTHON_MODEL": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mlflow.pyfunc.model.INVALID_PARAMETER_VALUE": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  },
  "type": "import"
 },
 "mlflow.pyfunc.model.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.pyfunc.model.Model": {
  "data": {
   "shadows": "mlflow.models.Model"
  },
  "type": "import"
 },
 "mlflow.pyfunc.model.PythonModel": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.pyfunc.model.PythonModel.load_context": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "mlflow.pyfunc.model.PythonModel.predict": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc.model.PythonModelContext": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.pyfunc.model.PythonModelContext.__init__": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "mlflow.pyfunc.model.PythonModelContext.artifacts": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc.model.RESOURCE_ALREADY_EXISTS": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS"
  },
  "type": "import"
 },
 "mlflow.pyfunc.model.TempDir": {
  "data": {
   "shadows": "mlflow.utils.file_utils.TempDir"
  },
  "type": "import"
 },
 "mlflow.pyfunc.model._PythonModelPyfuncWrapper": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.pyfunc.model._PythonModelPyfuncWrapper.__init__": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "mlflow.pyfunc.model._PythonModelPyfuncWrapper.predict": {
  "data": {
   "lineno": 242
  },
  "type": "function"
 },
 "mlflow.pyfunc.model._copy_file_or_tree": {
  "data": {
   "shadows": "mlflow.utils.file_utils._copy_file_or_tree"
  },
  "type": "import"
 },
 "mlflow.pyfunc.model._download_artifact_from_uri": {
  "data": {
   "shadows": "mlflow.tracking.artifact_utils._download_artifact_from_uri"
  },
  "type": "import"
 },
 "mlflow.pyfunc.model._get_flavor_configuration": {
  "data": {
   "shadows": "mlflow.utils.model_utils._get_flavor_configuration"
  },
  "type": "import"
 },
 "mlflow.pyfunc.model._load_pyfunc": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.pyfunc.model.CONFIG_KEY_ARTIFACTS",
    "mlflow.pyfunc.model.CONFIG_KEY_ARTIFACT_RELATIVE_PATH",
    "mlflow.pyfunc.model.CONFIG_KEY_CLOUDPICKLE_VERSION",
    "mlflow.pyfunc.model.CONFIG_KEY_PYTHON_MODEL",
    "mlflow.pyfunc.model.PythonModelContext",
    "mlflow.pyfunc.model._PythonModelPyfuncWrapper",
    "mlflow.pyfunc.model.cloudpickle",
    "mlflow.pyfunc.model.os",
    "mlflow.utils.model_utils._get_flavor_configuration",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc.model._mlflow_conda_env": {
  "data": {
   "shadows": "mlflow.utils.environment._mlflow_conda_env"
  },
  "type": "import"
 },
 "mlflow.pyfunc.model._save_model_with_class_artifacts_params": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "__name__",
    "dict",
    "isinstance",
    "mlflow.exceptions.MlflowException",
    "mlflow.models.Model",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS",
    "mlflow.pyfunc.model.CONFIG_KEY_ARTIFACTS",
    "mlflow.pyfunc.model.CONFIG_KEY_ARTIFACT_RELATIVE_PATH",
    "mlflow.pyfunc.model.CONFIG_KEY_ARTIFACT_URI",
    "mlflow.pyfunc.model.CONFIG_KEY_CLOUDPICKLE_VERSION",
    "mlflow.pyfunc.model.CONFIG_KEY_PYTHON_MODEL",
    "mlflow.pyfunc.model.PythonModel",
    "mlflow.pyfunc.model.cloudpickle",
    "mlflow.pyfunc.model.get_default_conda_env",
    "mlflow.pyfunc.model.os",
    "mlflow.pyfunc.model.shutil",
    "mlflow.pyfunc.model.yaml",
    "mlflow.tracking.artifact_utils._download_artifact_from_uri",
    "mlflow.utils.file_utils.TempDir",
    "mlflow.utils.file_utils._copy_file_or_tree",
    "open",
    "type"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc.model.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "mlflow.pyfunc.model.cloudpickle": {
  "data": {
   "shadows": "cloudpickle"
  },
  "type": "import"
 },
 "mlflow.pyfunc.model.get_default_conda_env": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "mlflow.pyfunc.model.cloudpickle",
    "mlflow.utils.environment._mlflow_conda_env"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc.model.mlflow.pyfunc": {
  "data": {
   "shadows": "mlflow.pyfunc"
  },
  "type": "import"
 },
 "mlflow.pyfunc.model.mlflow.utils": {
  "data": {
   "shadows": "mlflow.utils"
  },
  "type": "import"
 },
 "mlflow.pyfunc.model.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.pyfunc.model.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mlflow.pyfunc.model.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "mlflow.pyfunc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlflow.pyfunc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.pyfunc.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "mlflow.pyfunc.pandas_udf": {
  "data": {
   "shadows": "pyspark.sql.functions.pandas_udf"
  },
  "type": "import"
 },
 "mlflow.pyfunc.save_model": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "TypeError",
    "any",
    "isinstance",
    "len",
    "list",
    "mlflow.exceptions.MlflowException",
    "mlflow.models.Model",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.pyfunc._save_model_with_loader_module_and_data_path",
    "mlflow.pyfunc.mlflow",
    "type"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc.scoring_server.wsgi": {
  "data": {
   "symbols_in_volume": [
    "mlflow.pyfunc.load_model",
    "mlflow.pyfunc.scoring_server._SERVER_MODEL_PATH",
    "mlflow.pyfunc.scoring_server.init",
    "mlflow.pyfunc.scoring_server.wsgi.os"
   ]
  },
  "type": "module"
 },
 "mlflow.pyfunc.scoring_server.wsgi.app": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "mlflow.pyfunc.scoring_server.wsgi.load_model": {
  "data": {
   "shadows": "mlflow.pyfunc.load_model"
  },
  "type": "import"
 },
 "mlflow.pyfunc.scoring_server.wsgi.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.pyfunc.scoring_server.wsgi.scoring_server": {
  "data": {
   "shadows": "mlflow.pyfunc.scoring_server"
  },
  "type": "import"
 },
 "mlflow.pyfunc.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mlflow.pyfunc.spark_model_cache": {
  "data": {},
  "type": "module"
 },
 "mlflow.pyfunc.spark_model_cache.SparkFiles": {
  "data": {
   "shadows": "pyspark.files.SparkFiles"
  },
  "type": "import"
 },
 "mlflow.pyfunc.spark_model_cache.SparkModelCache": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.pyfunc.spark_model_cache.SparkModelCache.__init__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "mlflow.pyfunc.spark_model_cache.SparkModelCache.add_local_model": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "mlflow.pyfunc.spark_model_cache.shutil",
    "mlflow.pyfunc.spark_model_cache.tempfile",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc.spark_model_cache.SparkModelCache.get_or_load": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "mlflow.pyfunc.load_pyfunc",
    "mlflow.pyfunc.spark_model_cache.SparkModelCache",
    "mlflow.pyfunc.spark_model_cache.os",
    "mlflow.pyfunc.spark_model_cache.tempfile",
    "mlflow.pyfunc.spark_model_cache.zipfile",
    "pyspark.files.SparkFiles.get",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc.spark_model_cache.load_pyfunc": {
  "data": {
   "shadows": "mlflow.pyfunc.load_pyfunc"
  },
  "type": "import"
 },
 "mlflow.pyfunc.spark_model_cache.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.pyfunc.spark_model_cache.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mlflow.pyfunc.spark_model_cache.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "mlflow.pyfunc.spark_model_cache.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "mlflow.pyfunc.spark_udf": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "any",
    "isinstance",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.pyfunc.spark_model_cache.SparkModelCache.add_local_model",
    "mlflow.tracking.artifact_utils._download_artifact_from_uri",
    "mlflow.utils.file_utils.TempDir",
    "pyspark.sql.functions.pandas_udf",
    "pyspark.sql.types.ArrayType",
    "pyspark.sql.types.DataType",
    "pyspark.sql.types.DoubleType",
    "pyspark.sql.types.FloatType",
    "pyspark.sql.types.IntegerType",
    "pyspark.sql.types.LongType",
    "pyspark.sql.types.StringType",
    "pyspark.sql.types._parse_datatype_string",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc.spark_udf.predict": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "Exception",
    "enumerate",
    "isinstance",
    "len",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.pyfunc.pandas",
    "mlflow.pyfunc.spark_model_cache.SparkModelCache.get_or_load",
    "numpy.byte",
    "numpy.float32",
    "numpy.float64",
    "numpy.int",
    "numpy.int32",
    "numpy.long",
    "numpy.number",
    "numpy.short",
    "numpy.ubyte",
    "numpy.ushort",
    "pyspark.sql.types.ArrayType",
    "pyspark.sql.types.DoubleType",
    "pyspark.sql.types.FloatType",
    "pyspark.sql.types.IntegerType",
    "pyspark.sql.types.LongType",
    "pyspark.sql.types.StringType",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc.utils": {
  "data": {},
  "type": "module"
 },
 "mlflow.pyfunc.utils._add_code_to_system_path": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "mlflow.pyfunc.utils._get_code_dirs",
    "mlflow.pyfunc.utils.sys"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc.utils._get_code_dirs": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "mlflow.pyfunc.utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.pyfunc.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlflow.pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.pytorch.logging"
   ]
  },
  "type": "module"
 },
 "mlflow.pytorch.FLAVOR_NAME": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mlflow.pytorch.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.pytorch.Model": {
  "data": {
   "shadows": "mlflow.models.Model"
  },
  "type": "import"
 },
 "mlflow.pytorch.RESOURCE_DOES_NOT_EXIST": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST"
  },
  "type": "import"
 },
 "mlflow.pytorch._PICKLE_MODULE_INFO_FILE_NAME": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mlflow.pytorch._PyTorchWrapper": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.pytorch._PyTorchWrapper.__init__": {
  "data": {
   "lineno": 371
  },
  "type": "function"
 },
 "mlflow.pytorch._PyTorchWrapper.predict": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "mlflow.pytorch.torch",
    "numpy.float32",
    "pandas.DataFrame",
    "type"
   ]
  },
  "type": "function"
 },
 "mlflow.pytorch._SERIALIZED_TORCH_MODEL_FILE_NAME": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mlflow.pytorch._copy_file_or_tree": {
  "data": {
   "shadows": "mlflow.utils.file_utils._copy_file_or_tree"
  },
  "type": "import"
 },
 "mlflow.pytorch._download_artifact_from_uri": {
  "data": {
   "shadows": "mlflow.tracking.artifact_utils._download_artifact_from_uri"
  },
  "type": "import"
 },
 "mlflow.pytorch._get_flavor_configuration": {
  "data": {
   "shadows": "mlflow.utils.model_utils._get_flavor_configuration"
  },
  "type": "import"
 },
 "mlflow.pytorch._load_model": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "ImportError",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.pytorch._PICKLE_MODULE_INFO_FILE_NAME",
    "mlflow.pytorch._logger",
    "mlflow.pytorch.importlib",
    "mlflow.pytorch.os",
    "mlflow.pytorch.torch",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.pytorch._load_pyfunc": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "mlflow.pytorch._PyTorchWrapper",
    "mlflow.pytorch._load_model"
   ]
  },
  "type": "function"
 },
 "mlflow.pytorch._logger": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mlflow.pytorch._mlflow_conda_env": {
  "data": {
   "shadows": "mlflow.utils.environment._mlflow_conda_env"
  },
  "type": "import"
 },
 "mlflow.pytorch.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "mlflow.pytorch.cloudpickle": {
  "data": {
   "shadows": "cloudpickle"
  },
  "type": "import"
 },
 "mlflow.pytorch.get_default_conda_env": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "mlflow.pytorch.cloudpickle",
    "mlflow.pytorch.torch",
    "mlflow.pytorch.torchvision",
    "mlflow.utils.environment._mlflow_conda_env"
   ]
  },
  "type": "function"
 },
 "mlflow.pytorch.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "mlflow.pytorch.load_model": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.pyfunc.CODE",
    "mlflow.pyfunc.FLAVOR_NAME",
    "mlflow.pyfunc.utils._add_code_to_system_path",
    "mlflow.pytorch.FLAVOR_NAME",
    "mlflow.pytorch._load_model",
    "mlflow.pytorch._logger",
    "mlflow.pytorch.os",
    "mlflow.pytorch.torch",
    "mlflow.tracking.artifact_utils._download_artifact_from_uri",
    "mlflow.utils.model_utils._get_flavor_configuration"
   ]
  },
  "type": "function"
 },
 "mlflow.pytorch.log_model": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "mlflow.models.Model.log",
    "mlflow.pytorch.mlflow",
    "mlflow.pytorch.pickle_module"
   ]
  },
  "type": "function"
 },
 "mlflow.pytorch.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.pytorch.mlflow": {
  "data": {
   "shadows": "mlflow"
  },
  "type": "import"
 },
 "mlflow.pytorch.mlflow_pytorch_pickle_module": {
  "data": {
   "shadows": "mlflow.pytorch.pickle_module"
  },
  "type": "import"
 },
 "mlflow.pytorch.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlflow.pytorch.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.pytorch.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "mlflow.pytorch.pickle_module": {
  "data": {},
  "type": "module"
 },
 "mlflow.pytorch.pickle_module.Pickler": {
  "data": {
   "shadows": "cloudpickle.CloudPickler"
  },
  "type": "import"
 },
 "mlflow.pytorch.pickle_module.Unpickler": {
  "data": {
   "shadows": "pickle.Unpickler"
  },
  "type": "import"
 },
 "mlflow.pytorch.pyfunc": {
  "data": {
   "shadows": "mlflow.pyfunc"
  },
  "type": "import"
 },
 "mlflow.pytorch.pyfunc_utils": {
  "data": {
   "shadows": "mlflow.pyfunc.utils"
  },
  "type": "import"
 },
 "mlflow.pytorch.save_model": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "dict",
    "isinstance",
    "list",
    "mlflow.models.Model",
    "mlflow.pyfunc.add_to_model",
    "mlflow.pytorch.FLAVOR_NAME",
    "mlflow.pytorch._PICKLE_MODULE_INFO_FILE_NAME",
    "mlflow.pytorch._SERIALIZED_TORCH_MODEL_FILE_NAME",
    "mlflow.pytorch.get_default_conda_env",
    "mlflow.pytorch.os",
    "mlflow.pytorch.pickle_module",
    "mlflow.pytorch.pickle_module.__name__",
    "mlflow.pytorch.torch",
    "mlflow.pytorch.yaml",
    "mlflow.utils.file_utils._copy_file_or_tree",
    "open",
    "type"
   ]
  },
  "type": "function"
 },
 "mlflow.pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "mlflow.pytorch.torchvision": {
  "data": {
   "shadows": "torchvision"
  },
  "type": "import"
 },
 "mlflow.pytorch.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "mlflow.register_model": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "mlflow.rfunc": {
  "data": {},
  "type": "module"
 },
 "mlflow.run": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "mlflow.runs": {
  "data": {
   "symbols_in_volume": [
    "mlflow.runs.click"
   ]
  },
  "type": "module"
 },
 "mlflow.runs.MLFLOW_RUN_NAME": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_RUN_NAME"
  },
  "type": "import"
 },
 "mlflow.runs.RUN_ID": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mlflow.runs.ViewType": {
  "data": {
   "shadows": "mlflow.entities.ViewType"
  },
  "type": "import"
 },
 "mlflow.runs._get_store": {
  "data": {
   "shadows": "mlflow.tracking._get_store"
  },
  "type": "import"
 },
 "mlflow.runs.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "mlflow.runs.commands": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "mlflow.runs.click"
   ]
  },
  "type": "function"
 },
 "mlflow.runs.conv_longdate_to_str": {
  "data": {
   "shadows": "mlflow.utils.time_utils.conv_longdate_to_str"
  },
  "type": "import"
 },
 "mlflow.runs.delete_run": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "mlflow.runs.RUN_ID",
    "mlflow.runs.commands",
    "mlflow.tracking._get_store",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.runs.describe_run": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "mlflow.runs.RUN_ID",
    "mlflow.runs.commands",
    "mlflow.runs.json",
    "mlflow.tracking._get_store",
    "print"
   ]
  },
  "type": "function"
 },
 "mlflow.runs.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mlflow.runs.list_run": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "mlflow.entities.ViewType.ACTIVE_ONLY",
    "mlflow.entities.ViewType.from_string",
    "mlflow.runs.click",
    "mlflow.runs.commands",
    "mlflow.tracking._get_store",
    "mlflow.utils.mlflow_tags.MLFLOW_RUN_NAME",
    "mlflow.utils.time_utils.conv_longdate_to_str",
    "print",
    "sorted",
    "tabulate.tabulate"
   ]
  },
  "type": "function"
 },
 "mlflow.runs.mlflow.tracking": {
  "data": {
   "shadows": "mlflow.tracking"
  },
  "type": "import"
 },
 "mlflow.runs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mlflow.runs.restore_run": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "mlflow.runs.RUN_ID",
    "mlflow.runs.commands",
    "mlflow.tracking._get_store",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.runs.tabulate": {
  "data": {
   "shadows": "tabulate.tabulate"
  },
  "type": "import"
 },
 "mlflow.sagemaker.cli": {
  "data": {},
  "type": "module"
 },
 "mlflow.sagemaker.cli.IMAGE": {
  "data": {
   "shadows": "mlflow.sagemaker.DEFAULT_IMAGE_NAME"
  },
  "type": "import"
 },
 "mlflow.sagemaker.cli.build_and_push_container": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "mlflow.sagemaker.DEFAULT_IMAGE_NAME",
    "mlflow.sagemaker.cli.click",
    "mlflow.sagemaker.cli.commands",
    "mlflow.sagemaker.cli.mlflow",
    "mlflow.sagemaker.cli.os",
    "mlflow.utils.cli_args.MLFLOW_HOME",
    "print"
   ]
  },
  "type": "function"
 },
 "mlflow.sagemaker.cli.build_and_push_container.setup_container": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "mlflow.sagemaker.cli.cli_args": {
  "data": {
   "shadows": "mlflow.utils.cli_args"
  },
  "type": "import"
 },
 "mlflow.sagemaker.cli.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "mlflow.sagemaker.cli.commands": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "mlflow.sagemaker.cli.click"
   ]
  },
  "type": "function"
 },
 "mlflow.sagemaker.cli.delete": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "mlflow.sagemaker.cli.click",
    "mlflow.sagemaker.cli.commands",
    "mlflow.sagemaker.cli.mlflow"
   ]
  },
  "type": "function"
 },
 "mlflow.sagemaker.cli.deploy": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "mlflow.sagemaker.cli.click",
    "mlflow.sagemaker.cli.commands",
    "mlflow.sagemaker.cli.json",
    "mlflow.sagemaker.cli.mlflow",
    "mlflow.utils.cli_args.MODEL_URI",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.sagemaker.cli.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mlflow.sagemaker.cli.mlflow": {
  "data": {
   "shadows": "mlflow"
  },
  "type": "import"
 },
 "mlflow.sagemaker.cli.mlflow.models.docker_utils": {
  "data": {
   "shadows": "mlflow.models.docker_utils"
  },
  "type": "import"
 },
 "mlflow.sagemaker.cli.mlflow.sagemaker": {
  "data": {
   "shadows": "mlflow.sagemaker"
  },
  "type": "import"
 },
 "mlflow.sagemaker.cli.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.sagemaker.cli.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mlflow.sagemaker.cli.run_local": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "mlflow.sagemaker.DEFAULT_IMAGE_NAME",
    "mlflow.sagemaker.cli.click",
    "mlflow.sagemaker.cli.commands",
    "mlflow.sagemaker.cli.mlflow",
    "mlflow.utils.cli_args.MODEL_URI"
   ]
  },
  "type": "function"
 },
 "mlflow.search_runs": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "mlflow.server": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "flask.Flask",
    "mlflow.server.PROMETHEUS_EXPORTER_ENV_VAR",
    "mlflow.server.REL_STATIC_DIR",
    "mlflow.server.app",
    "mlflow.server.handlers.get_endpoints",
    "mlflow.server.os",
    "mlflow.server.prometheus_exporter.activate_prometheus_exporter",
    "mlflow.server.prometheus_metrics_path"
   ]
  },
  "type": "module"
 },
 "mlflow.server.ARTIFACT_ROOT_ENV_VAR": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mlflow.server.BACKEND_STORE_URI_ENV_VAR": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mlflow.server.Flask": {
  "data": {
   "shadows": "flask.Flask"
  },
  "type": "import"
 },
 "mlflow.server.PROMETHEUS_EXPORTER_ENV_VAR": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mlflow.server.REL_STATIC_DIR": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mlflow.server.STATIC_DIR": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mlflow.server.STATIC_PREFIX_ENV_VAR": {
  "data": {
   "shadows": "mlflow.server.handlers.STATIC_PREFIX_ENV_VAR"
  },
  "type": "import"
 },
 "mlflow.server._add_static_prefix": {
  "data": {
   "shadows": "mlflow.server.handlers._add_static_prefix"
  },
  "type": "import"
 },
 "mlflow.server._build_gunicorn_command": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "mlflow.server.shlex"
   ]
  },
  "type": "function"
 },
 "mlflow.server._build_waitress_command": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "mlflow.server.shlex"
   ]
  },
  "type": "function"
 },
 "mlflow.server._run_server": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "mlflow.server.ARTIFACT_ROOT_ENV_VAR",
    "mlflow.server.BACKEND_STORE_URI_ENV_VAR",
    "mlflow.server.PROMETHEUS_EXPORTER_ENV_VAR",
    "mlflow.server._build_gunicorn_command",
    "mlflow.server._build_waitress_command",
    "mlflow.server.handlers.STATIC_PREFIX_ENV_VAR",
    "mlflow.server.sys",
    "mlflow.utils.process.exec_cmd"
   ]
  },
  "type": "function"
 },
 "mlflow.server.activate_prometheus_exporter": {
  "data": {
   "shadows": "mlflow.server.prometheus_exporter.activate_prometheus_exporter"
  },
  "type": "import"
 },
 "mlflow.server.app": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mlflow.server.exec_cmd": {
  "data": {
   "shadows": "mlflow.utils.process.exec_cmd"
  },
  "type": "import"
 },
 "mlflow.server.get_artifact_handler": {
  "data": {
   "shadows": "mlflow.server.handlers.get_artifact_handler"
  },
  "type": "import"
 },
 "mlflow.server.handlers": {
  "data": {
   "shadows": "mlflow.server.handlers"
  },
  "type": "import"
 },
 "mlflow.server.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.server.prometheus_exporter": {
  "data": {},
  "type": "module"
 },
 "mlflow.server.prometheus_exporter.GunicornInternalPrometheusMetrics": {
  "data": {
   "shadows": "prometheus_flask_exporter.multiprocess.GunicornInternalPrometheusMetrics"
  },
  "type": "import"
 },
 "mlflow.server.prometheus_exporter.activate_prometheus_exporter": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "flask.request.path",
    "histogram",
    "mlflow.server.prometheus_exporter.change_path_for_metric",
    "prometheus_flask_exporter.multiprocess.GunicornInternalPrometheusMetrics"
   ]
  },
  "type": "function"
 },
 "mlflow.server.prometheus_exporter.change_path_for_metric": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "mlflow.server.prometheus_exporter.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "mlflow.server.prometheus_metrics_path": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mlflow.server.send_from_directory": {
  "data": {
   "shadows": "flask.send_from_directory"
  },
  "type": "import"
 },
 "mlflow.server.serve": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "flask.send_from_directory",
    "mlflow.server.STATIC_DIR",
    "mlflow.server.app",
    "mlflow.server.handlers._add_static_prefix"
   ]
  },
  "type": "function"
 },
 "mlflow.server.serve_artifacts": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "mlflow.server.app",
    "mlflow.server.handlers._add_static_prefix",
    "mlflow.server.handlers.get_artifact_handler"
   ]
  },
  "type": "function"
 },
 "mlflow.server.serve_static_file": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "flask.send_from_directory",
    "mlflow.server.STATIC_DIR",
    "mlflow.server.app",
    "mlflow.server.handlers._add_static_prefix"
   ]
  },
  "type": "function"
 },
 "mlflow.server.shlex": {
  "data": {
   "shadows": "shlex"
  },
  "type": "import"
 },
 "mlflow.server.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlflow.set_experiment": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "mlflow.set_tag": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "mlflow.set_tags": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "mlflow.set_tracking_uri": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "mlflow.sklearn": {
  "data": {
   "symbols_in_volume": [
    "mlflow.sklearn.SERIALIZATION_FORMAT_CLOUDPICKLE",
    "mlflow.sklearn.SERIALIZATION_FORMAT_PICKLE"
   ]
  },
  "type": "module"
 },
 "mlflow.sklearn.FLAVOR_NAME": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mlflow.sklearn.INTERNAL_ERROR": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INTERNAL_ERROR"
  },
  "type": "import"
 },
 "mlflow.sklearn.INVALID_PARAMETER_VALUE": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  },
  "type": "import"
 },
 "mlflow.sklearn.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.sklearn.Model": {
  "data": {
   "shadows": "mlflow.models.Model"
  },
  "type": "import"
 },
 "mlflow.sklearn.RESOURCE_ALREADY_EXISTS": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS"
  },
  "type": "import"
 },
 "mlflow.sklearn.SERIALIZATION_FORMAT_CLOUDPICKLE": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mlflow.sklearn.SERIALIZATION_FORMAT_PICKLE": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mlflow.sklearn.SUPPORTED_SERIALIZATION_FORMATS": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mlflow.sklearn._download_artifact_from_uri": {
  "data": {
   "shadows": "mlflow.tracking.artifact_utils._download_artifact_from_uri"
  },
  "type": "import"
 },
 "mlflow.sklearn._get_flavor_configuration": {
  "data": {
   "shadows": "mlflow.utils.model_utils._get_flavor_configuration"
  },
  "type": "import"
 },
 "mlflow.sklearn._load_model_from_local_file": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "mlflow.sklearn.pickle",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.sklearn._load_pyfunc": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "mlflow.sklearn._load_model_from_local_file"
   ]
  },
  "type": "function"
 },
 "mlflow.sklearn._mlflow_conda_env": {
  "data": {
   "shadows": "mlflow.utils.environment._mlflow_conda_env"
  },
  "type": "import"
 },
 "mlflow.sklearn._save_model": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INTERNAL_ERROR",
    "mlflow.sklearn.SERIALIZATION_FORMAT_CLOUDPICKLE",
    "mlflow.sklearn.SERIALIZATION_FORMAT_PICKLE",
    "mlflow.sklearn.cloudpickle",
    "mlflow.sklearn.pickle",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.sklearn.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "mlflow.sklearn.cloudpickle": {
  "data": {
   "shadows": "cloudpickle"
  },
  "type": "import"
 },
 "mlflow.sklearn.get_default_conda_env": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "mlflow.sklearn.cloudpickle",
    "mlflow.sklearn.sklearn",
    "mlflow.utils.environment._mlflow_conda_env"
   ]
  },
  "type": "function"
 },
 "mlflow.sklearn.load_model": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "mlflow.sklearn.FLAVOR_NAME",
    "mlflow.sklearn._load_model_from_local_file",
    "mlflow.sklearn.os",
    "mlflow.tracking.artifact_utils._download_artifact_from_uri",
    "mlflow.utils.model_utils._get_flavor_configuration"
   ]
  },
  "type": "function"
 },
 "mlflow.sklearn.log_model": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "mlflow.models.Model.log",
    "mlflow.sklearn.SERIALIZATION_FORMAT_CLOUDPICKLE",
    "mlflow.sklearn.mlflow"
   ]
  },
  "type": "function"
 },
 "mlflow.sklearn.mlflow": {
  "data": {
   "shadows": "mlflow"
  },
  "type": "import"
 },
 "mlflow.sklearn.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.sklearn.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "mlflow.sklearn.pyfunc": {
  "data": {
   "shadows": "mlflow.pyfunc"
  },
  "type": "import"
 },
 "mlflow.sklearn.save_model": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "mlflow.exceptions.MlflowException",
    "mlflow.models.Model",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS",
    "mlflow.pyfunc.add_to_model",
    "mlflow.sklearn.FLAVOR_NAME",
    "mlflow.sklearn.SERIALIZATION_FORMAT_CLOUDPICKLE",
    "mlflow.sklearn.SUPPORTED_SERIALIZATION_FORMATS",
    "mlflow.sklearn._save_model",
    "mlflow.sklearn.get_default_conda_env",
    "mlflow.sklearn.os",
    "mlflow.sklearn.sklearn",
    "mlflow.sklearn.yaml",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.sklearn.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "mlflow.sklearn.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "mlflow.spark": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.spark.logging"
   ]
  },
  "type": "module"
 },
 "mlflow.spark.DFS_TMP": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mlflow.spark.FLAVOR_NAME": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mlflow.spark.INVALID_PARAMETER_VALUE": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  },
  "type": "import"
 },
 "mlflow.spark.MLReadable": {
  "data": {
   "shadows": "pyspark.ml.util.MLReadable"
  },
  "type": "import"
 },
 "mlflow.spark.MLWritable": {
  "data": {
   "shadows": "pyspark.ml.util.MLWritable"
  },
  "type": "import"
 },
 "mlflow.spark.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.spark.Model": {
  "data": {
   "shadows": "mlflow.models.Model"
  },
  "type": "import"
 },
 "mlflow.spark.ModelsArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.spark.PipelineModel": {
  "data": {
   "shadows": "pyspark.ml.pipeline.PipelineModel"
  },
  "type": "import"
 },
 "mlflow.spark.Py4JJavaError": {
  "data": {
   "shadows": "py4j.protocol.Py4JJavaError"
  },
  "type": "import"
 },
 "mlflow.spark.PySparkModel": {
  "data": {
   "shadows": "pyspark.ml.Model"
  },
  "type": "import"
 },
 "mlflow.spark.RunsArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.spark.SparkContext": {
  "data": {
   "shadows": "pyspark.SparkContext"
  },
  "type": "import"
 },
 "mlflow.spark.TempDir": {
  "data": {
   "shadows": "mlflow.utils.file_utils.TempDir"
  },
  "type": "import"
 },
 "mlflow.spark._HadoopFileSystem": {
  "data": {
   "lineno": 180
  },
  "type": "class"
 },
 "mlflow.spark._HadoopFileSystem.__init__": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "mlflow.spark._HadoopFileSystem._conf": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "classmethod",
    "pyspark.SparkContext.getOrCreate"
   ]
  },
  "type": "function"
 },
 "mlflow.spark._HadoopFileSystem._fs": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.spark._HadoopFileSystem._jvm": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "classmethod",
    "pyspark.SparkContext._gateway.jvm"
   ]
  },
  "type": "function"
 },
 "mlflow.spark._HadoopFileSystem._local_path": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "classmethod",
    "mlflow.spark.os"
   ]
  },
  "type": "function"
 },
 "mlflow.spark._HadoopFileSystem._remote_path": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.spark._HadoopFileSystem._try_file_exists": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "Exception",
    "classmethod",
    "mlflow.spark._logger"
   ]
  },
  "type": "function"
 },
 "mlflow.spark._HadoopFileSystem.copy_from_local_file": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.spark._HadoopFileSystem.copy_to_local_file": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.spark._HadoopFileSystem.delete": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.spark._HadoopFileSystem.maybe_copy_from_local_file": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "classmethod",
    "mlflow.spark._logger"
   ]
  },
  "type": "function"
 },
 "mlflow.spark._HadoopFileSystem.maybe_copy_from_uri": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "Exception",
    "classmethod",
    "mlflow.spark._logger",
    "mlflow.tracking.artifact_utils._download_artifact_from_uri"
   ]
  },
  "type": "function"
 },
 "mlflow.spark._HadoopFileSystem.qualified_local_path": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.spark._PyFuncModelWrapper": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.spark._PyFuncModelWrapper.__init__": {
  "data": {
   "lineno": 468
  },
  "type": "function"
 },
 "mlflow.spark._PyFuncModelWrapper.predict": {
  "data": {
   "lineno": 472
  },
  "type": "function"
 },
 "mlflow.spark._SPARK_MODEL_PATH_SUB": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mlflow.spark._download_artifact_from_uri": {
  "data": {
   "shadows": "mlflow.tracking.artifact_utils._download_artifact_from_uri"
  },
  "type": "import"
 },
 "mlflow.spark._format_exception": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "mlflow.spark.traceback",
    "type"
   ]
  },
  "type": "function"
 },
 "mlflow.spark._get_flavor_configuration_from_uri": {
  "data": {
   "shadows": "mlflow.utils.model_utils._get_flavor_configuration_from_uri"
  },
  "type": "import"
 },
 "mlflow.spark._load_model": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "mlflow.spark.DFS_TMP",
    "mlflow.spark._HadoopFileSystem",
    "mlflow.spark._tmp_path",
    "pyspark.ml.pipeline.PipelineModel.load"
   ]
  },
  "type": "function"
 },
 "mlflow.spark._load_pyfunc": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "mlflow.spark._PyFuncModelWrapper",
    "mlflow.spark._load_model",
    "mlflow.spark.pyspark"
   ]
  },
  "type": "function"
 },
 "mlflow.spark._logger": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mlflow.spark._mlflow_conda_env": {
  "data": {
   "shadows": "mlflow.utils.environment._mlflow_conda_env"
  },
  "type": "import"
 },
 "mlflow.spark._save_model_metadata": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "mlflow.mleap.add_to_model",
    "mlflow.pyfunc.add_to_model",
    "mlflow.spark.FLAVOR_NAME",
    "mlflow.spark._SPARK_MODEL_PATH_SUB",
    "mlflow.spark.get_default_conda_env",
    "mlflow.spark.os",
    "mlflow.spark.pyspark",
    "mlflow.spark.yaml",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.spark._spark_autologging": {
  "data": {
   "shadows": "mlflow._spark_autologging"
  },
  "type": "import"
 },
 "mlflow.spark._tmp_path": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "mlflow.spark.os",
    "mlflow.spark.uuid",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.spark._validate_model": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "isinstance",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "pyspark.ml.Model",
    "pyspark.ml.util.MLReadable",
    "pyspark.ml.util.MLWritable"
   ]
  },
  "type": "function"
 },
 "mlflow.spark.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "mlflow.spark.append_to_uri_path": {
  "data": {
   "shadows": "mlflow.utils.uri.append_to_uri_path"
  },
  "type": "import"
 },
 "mlflow.spark.autolog": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "mlflow._spark_autologging.autolog",
    "mlflow.utils.experimental"
   ]
  },
  "type": "function"
 },
 "mlflow.spark.experimental": {
  "data": {
   "shadows": "mlflow.utils.experimental"
  },
  "type": "import"
 },
 "mlflow.spark.get_default_conda_env": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "mlflow.spark.pyspark",
    "mlflow.spark.re",
    "mlflow.utils.environment._mlflow_conda_env"
   ]
  },
  "type": "function"
 },
 "mlflow.spark.is_local_uri": {
  "data": {
   "shadows": "mlflow.utils.uri.is_local_uri"
  },
  "type": "import"
 },
 "mlflow.spark.load_model": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "mlflow.spark.FLAVOR_NAME",
    "mlflow.spark._load_model",
    "mlflow.spark._logger",
    "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository.get_underlying_uri",
    "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository.is_models_uri",
    "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository.get_underlying_uri",
    "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository.is_runs_uri",
    "mlflow.utils.model_utils._get_flavor_configuration_from_uri",
    "mlflow.utils.uri.append_to_uri_path"
   ]
  },
  "type": "function"
 },
 "mlflow.spark.log_model": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "isinstance",
    "mlflow.models.Model",
    "mlflow.models.Model.log",
    "mlflow.spark._SPARK_MODEL_PATH_SUB",
    "mlflow.spark._save_model_metadata",
    "mlflow.spark._validate_model",
    "mlflow.spark.mlflow",
    "mlflow.spark.os",
    "mlflow.utils.file_utils.TempDir",
    "mlflow.utils.uri.is_local_uri",
    "py4j.protocol.Py4JJavaError",
    "pyspark.ml.PipelineModel"
   ]
  },
  "type": "function"
 },
 "mlflow.spark.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.spark.mleap": {
  "data": {
   "shadows": "mlflow.mleap"
  },
  "type": "import"
 },
 "mlflow.spark.mlflow": {
  "data": {
   "shadows": "mlflow"
  },
  "type": "import"
 },
 "mlflow.spark.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.spark.pyfunc": {
  "data": {
   "shadows": "mlflow.pyfunc"
  },
  "type": "import"
 },
 "mlflow.spark.pyspark": {
  "data": {
   "shadows": "pyspark"
  },
  "type": "import"
 },
 "mlflow.spark.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mlflow.spark.save_model": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "isinstance",
    "mlflow.spark.DFS_TMP",
    "mlflow.spark._HadoopFileSystem",
    "mlflow.spark._SPARK_MODEL_PATH_SUB",
    "mlflow.spark._save_model_metadata",
    "mlflow.spark._tmp_path",
    "mlflow.spark._validate_model",
    "mlflow.spark.os",
    "pyspark.ml.Model",
    "pyspark.ml.PipelineModel"
   ]
  },
  "type": "function"
 },
 "mlflow.spark.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "mlflow.spark.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "mlflow.spark.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "mlflow.start_run": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "mlflow.store": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "mlflow.store.abstract_store": {
  "data": {
   "shadows": "mlflow.store.tracking.abstract_store"
  },
  "type": "import"
 },
 "mlflow.store.artifact": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.artifact.artifact_repo": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.artifact.artifact_repo.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "mlflow.store.artifact.artifact_repo.ArtifactRepository": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "mlflow.store.artifact.artifact_repo.ArtifactRepository.__init__": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "mlflow.store.artifact.artifact_repo.ArtifactRepository._download_file": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.artifact_repo.ArtifactRepository._is_directory": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.artifact_repo.ArtifactRepository.delete_artifacts": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "mlflow.utils.experimental"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.artifact_repo.ArtifactRepository.download_artifacts": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "download_artifact_dir",
    "download_file",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.store.artifact.artifact_repo.os",
    "mlflow.store.artifact.artifact_repo.tempfile"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.artifact_repo.ArtifactRepository.download_artifacts.download_artifact_dir": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "download_artifact_dir",
    "download_file",
    "mlflow.store.artifact.artifact_repo.os"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.artifact_repo.ArtifactRepository.download_artifacts.download_file": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "mlflow.store.artifact.artifact_repo.os",
    "mlflow.store.artifact.artifact_repo.posixpath"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.artifact_repo.ArtifactRepository.list_artifacts": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.artifact_repo.ArtifactRepository.log_artifact": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.artifact_repo.ArtifactRepository.log_artifacts": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.artifact_repo.INVALID_PARAMETER_VALUE": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  },
  "type": "import"
 },
 "mlflow.store.artifact.artifact_repo.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.store.artifact.artifact_repo.RESOURCE_DOES_NOT_EXIST": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST"
  },
  "type": "import"
 },
 "mlflow.store.artifact.artifact_repo.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "mlflow.store.artifact.artifact_repo.bad_path_message": {
  "data": {
   "shadows": "mlflow.utils.validation.bad_path_message"
  },
  "type": "import"
 },
 "mlflow.store.artifact.artifact_repo.experimental": {
  "data": {
   "shadows": "mlflow.utils.experimental"
  },
  "type": "import"
 },
 "mlflow.store.artifact.artifact_repo.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.store.artifact.artifact_repo.path_not_unique": {
  "data": {
   "shadows": "mlflow.utils.validation.path_not_unique"
  },
  "type": "import"
 },
 "mlflow.store.artifact.artifact_repo.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "mlflow.store.artifact.artifact_repo.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "mlflow.store.artifact.artifact_repo.verify_artifact_path": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.utils.validation.bad_path_message",
    "mlflow.utils.validation.path_not_unique"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.artifact_repository_registry": {
  "data": {
   "symbols_in_volume": [
    "mlflow.store.artifact.artifact_repository_registry.ArtifactRepositoryRegistry",
    "mlflow.store.artifact.artifact_repository_registry._artifact_repository_registry",
    "mlflow.store.artifact.azure_blob_artifact_repo.AzureBlobArtifactRepository",
    "mlflow.store.artifact.dbfs_artifact_repo.dbfs_artifact_repo_factory",
    "mlflow.store.artifact.ftp_artifact_repo.FTPArtifactRepository",
    "mlflow.store.artifact.gcs_artifact_repo.GCSArtifactRepository",
    "mlflow.store.artifact.hdfs_artifact_repo.HdfsArtifactRepository",
    "mlflow.store.artifact.local_artifact_repo.LocalArtifactRepository",
    "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository",
    "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository",
    "mlflow.store.artifact.s3_artifact_repo.S3ArtifactRepository",
    "mlflow.store.artifact.sftp_artifact_repo.SFTPArtifactRepository"
   ]
  },
  "type": "module"
 },
 "mlflow.store.artifact.artifact_repository_registry.ArtifactRepositoryRegistry": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "mlflow.store.artifact.artifact_repository_registry.ArtifactRepositoryRegistry.__init__": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "mlflow.store.artifact.artifact_repository_registry.ArtifactRepositoryRegistry.get_artifact_repository": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "list",
    "mlflow.exceptions.MlflowException",
    "mlflow.utils.uri.get_uri_scheme",
    "repository"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.artifact_repository_registry.ArtifactRepositoryRegistry.register": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "mlflow.store.artifact.artifact_repository_registry.ArtifactRepositoryRegistry.register_entrypoints": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "mlflow.store.artifact.artifact_repository_registry.entrypoints",
    "mlflow.store.artifact.artifact_repository_registry.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.artifact_repository_registry.AzureBlobArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.artifact.azure_blob_artifact_repo.AzureBlobArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.artifact.artifact_repository_registry.FTPArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.artifact.ftp_artifact_repo.FTPArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.artifact.artifact_repository_registry.GCSArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.artifact.gcs_artifact_repo.GCSArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.artifact.artifact_repository_registry.HdfsArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.artifact.hdfs_artifact_repo.HdfsArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.artifact.artifact_repository_registry.LocalArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.artifact.local_artifact_repo.LocalArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.artifact.artifact_repository_registry.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.store.artifact.artifact_repository_registry.ModelsArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.artifact.artifact_repository_registry.RunsArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.artifact.artifact_repository_registry.S3ArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.artifact.s3_artifact_repo.S3ArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.artifact.artifact_repository_registry.SFTPArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.artifact.sftp_artifact_repo.SFTPArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.artifact.artifact_repository_registry._artifact_repository_registry": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "mlflow.store.artifact.artifact_repository_registry.dbfs_artifact_repo_factory": {
  "data": {
   "shadows": "mlflow.store.artifact.dbfs_artifact_repo.dbfs_artifact_repo_factory"
  },
  "type": "import"
 },
 "mlflow.store.artifact.artifact_repository_registry.entrypoints": {
  "data": {
   "shadows": "entrypoints"
  },
  "type": "import"
 },
 "mlflow.store.artifact.artifact_repository_registry.get_artifact_repository": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "mlflow.store.artifact.artifact_repository_registry._artifact_repository_registry"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.artifact_repository_registry.get_uri_scheme": {
  "data": {
   "shadows": "mlflow.utils.uri.get_uri_scheme"
  },
  "type": "import"
 },
 "mlflow.store.artifact.artifact_repository_registry.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mlflow.store.artifact.azure_blob_artifact_repo": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.artifact.azure_blob_artifact_repo.ArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.artifact.artifact_repo.ArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.artifact.azure_blob_artifact_repo.AzureBlobArtifactRepository": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "mlflow.store.artifact.artifact_repo.ArtifactRepository"
   ]
  },
  "type": "class"
 },
 "mlflow.store.artifact.azure_blob_artifact_repo.AzureBlobArtifactRepository.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "Exception",
    "azure.storage.blob.BlockBlobService",
    "mlflow.store.artifact.azure_blob_artifact_repo.AzureBlobArtifactRepository",
    "mlflow.store.artifact.azure_blob_artifact_repo.os",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.azure_blob_artifact_repo.AzureBlobArtifactRepository._download_file": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "mlflow.store.artifact.azure_blob_artifact_repo.posixpath"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.azure_blob_artifact_repo.AzureBlobArtifactRepository.delete_artifacts": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.azure_blob_artifact_repo.AzureBlobArtifactRepository.list_artifacts": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "azure.storage.blob.models.BlobPrefix",
    "isinstance",
    "mlflow.entities.FileInfo",
    "mlflow.exceptions.MlflowException",
    "mlflow.store.artifact.azure_blob_artifact_repo.posixpath",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.azure_blob_artifact_repo.AzureBlobArtifactRepository.log_artifact": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "mlflow.store.artifact.azure_blob_artifact_repo.os",
    "mlflow.store.artifact.azure_blob_artifact_repo.posixpath"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.azure_blob_artifact_repo.AzureBlobArtifactRepository.log_artifacts": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "mlflow.store.artifact.azure_blob_artifact_repo.os",
    "mlflow.store.artifact.azure_blob_artifact_repo.posixpath"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.azure_blob_artifact_repo.AzureBlobArtifactRepository.parse_wasbs_uri": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "Exception",
    "mlflow.store.artifact.azure_blob_artifact_repo.re",
    "six.moves.urllib.parse.urlparse",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.azure_blob_artifact_repo.BlobPrefix": {
  "data": {
   "shadows": "azure.storage.blob.models.BlobPrefix"
  },
  "type": "import"
 },
 "mlflow.store.artifact.azure_blob_artifact_repo.BlockBlobService": {
  "data": {
   "shadows": "azure.storage.blob.BlockBlobService"
  },
  "type": "import"
 },
 "mlflow.store.artifact.azure_blob_artifact_repo.FileInfo": {
  "data": {
   "shadows": "mlflow.entities.FileInfo"
  },
  "type": "import"
 },
 "mlflow.store.artifact.azure_blob_artifact_repo.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.store.artifact.azure_blob_artifact_repo.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.store.artifact.azure_blob_artifact_repo.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "mlflow.store.artifact.azure_blob_artifact_repo.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mlflow.store.artifact.azure_blob_artifact_repo.urllib": {
  "data": {
   "shadows": "six.moves.urllib"
  },
  "type": "import"
 },
 "mlflow.store.artifact.cli": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.store.artifact.cli.commands",
    "mlflow.store.artifact.cli.logging"
   ]
  },
  "type": "module"
 },
 "mlflow.store.artifact.cli._download_artifact_from_uri": {
  "data": {
   "shadows": "mlflow.tracking.artifact_utils._download_artifact_from_uri"
  },
  "type": "import"
 },
 "mlflow.store.artifact.cli._file_infos_to_json": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.cli._get_store": {
  "data": {
   "shadows": "mlflow.tracking._get_store"
  },
  "type": "import"
 },
 "mlflow.store.artifact.cli._logger": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mlflow.store.artifact.cli.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "mlflow.store.artifact.cli.commands": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "mlflow.store.artifact.cli.click"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.cli.download_artifacts": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "mlflow.store.artifact.artifact_repository_registry.get_artifact_repository",
    "mlflow.store.artifact.cli._logger",
    "mlflow.store.artifact.cli.click",
    "mlflow.store.artifact.cli.commands",
    "mlflow.store.artifact.cli.sys",
    "mlflow.tracking._get_store",
    "mlflow.tracking.artifact_utils._download_artifact_from_uri",
    "print"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.cli.get_artifact_repository": {
  "data": {
   "shadows": "mlflow.store.artifact.artifact_repository_registry.get_artifact_repository"
  },
  "type": "import"
 },
 "mlflow.store.artifact.cli.list_artifacts": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "mlflow.store.artifact.artifact_repository_registry.get_artifact_repository",
    "mlflow.store.artifact.cli._file_infos_to_json",
    "mlflow.store.artifact.cli.click",
    "mlflow.store.artifact.cli.commands",
    "mlflow.tracking._get_store",
    "print"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.cli.log_artifact": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "mlflow.store.artifact.artifact_repository_registry.get_artifact_repository",
    "mlflow.store.artifact.cli._logger",
    "mlflow.store.artifact.cli.click",
    "mlflow.store.artifact.cli.commands",
    "mlflow.tracking._get_store"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.cli.log_artifacts": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "mlflow.store.artifact.artifact_repository_registry.get_artifact_repository",
    "mlflow.store.artifact.cli._logger",
    "mlflow.store.artifact.cli.click",
    "mlflow.store.artifact.cli.commands",
    "mlflow.tracking._get_store"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.cli.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.store.artifact.cli.message_to_json": {
  "data": {
   "shadows": "mlflow.utils.proto_json_utils.message_to_json"
  },
  "type": "import"
 },
 "mlflow.store.artifact.cli.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlflow.store.artifact.dbfs_artifact_repo": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.ArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.artifact.artifact_repo.ArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.DOWNLOAD_CHUNK_SIZE": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.DbfsRestArtifactRepository": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "mlflow.store.artifact.artifact_repo.ArtifactRepository"
   ]
  },
  "type": "class"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.DbfsRestArtifactRepository.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.store.artifact.dbfs_artifact_repo.DbfsRestArtifactRepository",
    "mlflow.store.artifact.dbfs_artifact_repo._get_host_creds_from_default_store",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.DbfsRestArtifactRepository._databricks_api_request": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "mlflow.utils.rest_utils.http_request_safe"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.DbfsRestArtifactRepository._dbfs_download": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "mlflow.store.artifact.dbfs_artifact_repo.DOWNLOAD_CHUNK_SIZE",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.DbfsRestArtifactRepository._dbfs_is_dir": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "KeyError",
    "mlflow.exceptions.MlflowException",
    "mlflow.store.artifact.dbfs_artifact_repo.GET_STATUS_ENDPOINT",
    "mlflow.store.artifact.dbfs_artifact_repo.json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.DbfsRestArtifactRepository._dbfs_list_api": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "mlflow.store.artifact.dbfs_artifact_repo.LIST_API_ENDPOINT",
    "mlflow.store.artifact.dbfs_artifact_repo.json",
    "mlflow.utils.rest_utils.http_request"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.DbfsRestArtifactRepository._download_file": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.DbfsRestArtifactRepository._get_dbfs_endpoint": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.DbfsRestArtifactRepository._get_dbfs_path": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "mlflow.utils.string_utils.strip_prefix"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.DbfsRestArtifactRepository._is_directory": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.DbfsRestArtifactRepository.delete_artifacts": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.DbfsRestArtifactRepository.list_artifacts": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "ValueError",
    "mlflow.entities.FileInfo",
    "mlflow.exceptions.MlflowException",
    "mlflow.store.artifact.dbfs_artifact_repo.json",
    "mlflow.utils.rest_utils.RESOURCE_DOES_NOT_EXIST",
    "mlflow.utils.string_utils.strip_prefix",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.DbfsRestArtifactRepository.log_artifact": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "mlflow.store.artifact.dbfs_artifact_repo.os",
    "mlflow.store.artifact.dbfs_artifact_repo.posixpath",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.DbfsRestArtifactRepository.log_artifacts": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "mlflow.store.artifact.dbfs_artifact_repo.os",
    "mlflow.store.artifact.dbfs_artifact_repo.posixpath",
    "mlflow.utils.file_utils.relative_path_to_artifact_path"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.FileInfo": {
  "data": {
   "shadows": "mlflow.entities.FileInfo"
  },
  "type": "import"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.GET_STATUS_ENDPOINT": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.LIST_API_ENDPOINT": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.LocalArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.artifact.local_artifact_repo.LocalArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.RESOURCE_DOES_NOT_EXIST": {
  "data": {
   "shadows": "mlflow.utils.rest_utils.RESOURCE_DOES_NOT_EXIST"
  },
  "type": "import"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.RestStore": {
  "data": {
   "shadows": "mlflow.store.tracking.rest_store.RestStore"
  },
  "type": "import"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.USE_FUSE_ENV_VAR": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mlflow.store.artifact.dbfs_artifact_repo._get_host_creds_from_default_store": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "isinstance",
    "mlflow.exceptions.MlflowException",
    "mlflow.store.tracking.rest_store.RestStore",
    "mlflow.tracking._tracking_service.utils._get_store"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.dbfs_artifact_repo_factory": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "mlflow.store.artifact.dbfs_artifact_repo.DbfsRestArtifactRepository",
    "mlflow.store.artifact.dbfs_artifact_repo.USE_FUSE_ENV_VAR",
    "mlflow.store.artifact.dbfs_artifact_repo.os",
    "mlflow.store.artifact.local_artifact_repo.LocalArtifactRepository",
    "mlflow.utils.string_utils.strip_prefix"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.http_request": {
  "data": {
   "shadows": "mlflow.utils.rest_utils.http_request"
  },
  "type": "import"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.http_request_safe": {
  "data": {
   "shadows": "mlflow.utils.rest_utils.http_request_safe"
  },
  "type": "import"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.mlflow.utils.databricks_utils": {
  "data": {
   "shadows": "mlflow.utils.databricks_utils"
  },
  "type": "import"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.relative_path_to_artifact_path": {
  "data": {
   "shadows": "mlflow.utils.file_utils.relative_path_to_artifact_path"
  },
  "type": "import"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.strip_prefix": {
  "data": {
   "shadows": "mlflow.utils.string_utils.strip_prefix"
  },
  "type": "import"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.utils": {
  "data": {
   "shadows": "mlflow.tracking._tracking_service.utils"
  },
  "type": "import"
 },
 "mlflow.store.artifact.ftp_artifact_repo": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.artifact.ftp_artifact_repo.ArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.artifact.artifact_repo.ArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.artifact.ftp_artifact_repo.FTP": {
  "data": {
   "shadows": "ftplib.FTP"
  },
  "type": "import"
 },
 "mlflow.store.artifact.ftp_artifact_repo.FTPArtifactRepository": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "mlflow.store.artifact.artifact_repo.ArtifactRepository"
   ]
  },
  "type": "class"
 },
 "mlflow.store.artifact.ftp_artifact_repo.FTPArtifactRepository.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "mlflow.store.artifact.ftp_artifact_repo.FTPArtifactRepository",
    "six.moves.urllib.parse.urlparse",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.ftp_artifact_repo.FTPArtifactRepository._download_file": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "mlflow.store.artifact.ftp_artifact_repo.posixpath",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.ftp_artifact_repo.FTPArtifactRepository._is_dir": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "mlflow.store.artifact.ftp_artifact_repo.ftplib",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.ftp_artifact_repo.FTPArtifactRepository._is_directory": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "mlflow.store.artifact.ftp_artifact_repo.posixpath"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.ftp_artifact_repo.FTPArtifactRepository._mkdir": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "mlflow.store.artifact.ftp_artifact_repo.FTPArtifactRepository",
    "mlflow.store.artifact.ftp_artifact_repo.ftplib",
    "mlflow.store.artifact.ftp_artifact_repo.posixpath",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.ftp_artifact_repo.FTPArtifactRepository._size": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.ftp_artifact_repo.FTPArtifactRepository.delete_artifacts": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.ftp_artifact_repo.FTPArtifactRepository.get_ftp_client": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "ftplib.FTP"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.ftp_artifact_repo.FTPArtifactRepository.list_artifacts": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "mlflow.entities.file_info.FileInfo",
    "mlflow.store.artifact.ftp_artifact_repo.posixpath"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.ftp_artifact_repo.FTPArtifactRepository.log_artifact": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "mlflow.store.artifact.ftp_artifact_repo.os",
    "mlflow.store.artifact.ftp_artifact_repo.posixpath",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.ftp_artifact_repo.FTPArtifactRepository.log_artifacts": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "mlflow.store.artifact.ftp_artifact_repo.os",
    "mlflow.store.artifact.ftp_artifact_repo.posixpath",
    "mlflow.utils.file_utils.relative_path_to_artifact_path"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.ftp_artifact_repo.FileInfo": {
  "data": {
   "shadows": "mlflow.entities.file_info.FileInfo"
  },
  "type": "import"
 },
 "mlflow.store.artifact.ftp_artifact_repo.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.store.artifact.ftp_artifact_repo.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "mlflow.store.artifact.ftp_artifact_repo.ftplib": {
  "data": {
   "shadows": "ftplib"
  },
  "type": "import"
 },
 "mlflow.store.artifact.ftp_artifact_repo.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.store.artifact.ftp_artifact_repo.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "mlflow.store.artifact.ftp_artifact_repo.relative_path_to_artifact_path": {
  "data": {
   "shadows": "mlflow.utils.file_utils.relative_path_to_artifact_path"
  },
  "type": "import"
 },
 "mlflow.store.artifact.ftp_artifact_repo.urllib": {
  "data": {
   "shadows": "six.moves.urllib"
  },
  "type": "import"
 },
 "mlflow.store.artifact.gcs_artifact_repo": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.artifact.gcs_artifact_repo.ArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.artifact.artifact_repo.ArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.artifact.gcs_artifact_repo.DefaultCredentialsError": {
  "data": {
   "shadows": "google.auth.exceptions.DefaultCredentialsError"
  },
  "type": "import"
 },
 "mlflow.store.artifact.gcs_artifact_repo.FileInfo": {
  "data": {
   "shadows": "mlflow.entities.FileInfo"
  },
  "type": "import"
 },
 "mlflow.store.artifact.gcs_artifact_repo.GCSArtifactRepository": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "mlflow.store.artifact.artifact_repo.ArtifactRepository"
   ]
  },
  "type": "class"
 },
 "mlflow.store.artifact.gcs_artifact_repo.GCSArtifactRepository.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "google.cloud.storage",
    "mlflow.store.artifact.gcs_artifact_repo.GCSArtifactRepository",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.gcs_artifact_repo.GCSArtifactRepository._download_file": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "mlflow.store.artifact.gcs_artifact_repo.posixpath"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.gcs_artifact_repo.GCSArtifactRepository._get_bucket": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "google.auth.exceptions.DefaultCredentialsError"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.gcs_artifact_repo.GCSArtifactRepository._list_folders": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "len",
    "mlflow.entities.FileInfo",
    "set"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.gcs_artifact_repo.GCSArtifactRepository.delete_artifacts": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.gcs_artifact_repo.GCSArtifactRepository.list_artifacts": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "len",
    "mlflow.entities.FileInfo",
    "mlflow.store.artifact.gcs_artifact_repo.posixpath",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.gcs_artifact_repo.GCSArtifactRepository.log_artifact": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "mlflow.store.artifact.gcs_artifact_repo.os",
    "mlflow.store.artifact.gcs_artifact_repo.posixpath"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.gcs_artifact_repo.GCSArtifactRepository.log_artifacts": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "mlflow.store.artifact.gcs_artifact_repo.os",
    "mlflow.store.artifact.gcs_artifact_repo.posixpath",
    "mlflow.utils.file_utils.relative_path_to_artifact_path"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.gcs_artifact_repo.GCSArtifactRepository.parse_gcs_uri": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "Exception",
    "six.moves.urllib.parse.urlparse",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.gcs_artifact_repo.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.store.artifact.gcs_artifact_repo.gcs_storage": {
  "data": {
   "shadows": "google.cloud.storage"
  },
  "type": "import"
 },
 "mlflow.store.artifact.gcs_artifact_repo.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.store.artifact.gcs_artifact_repo.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "mlflow.store.artifact.gcs_artifact_repo.relative_path_to_artifact_path": {
  "data": {
   "shadows": "mlflow.utils.file_utils.relative_path_to_artifact_path"
  },
  "type": "import"
 },
 "mlflow.store.artifact.gcs_artifact_repo.urllib": {
  "data": {
   "shadows": "six.moves.urllib"
  },
  "type": "import"
 },
 "mlflow.store.artifact.local_artifact_repo": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.artifact.local_artifact_repo.ArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.artifact.artifact_repo.ArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.artifact.local_artifact_repo.LocalArtifactRepository": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "mlflow.store.artifact.artifact_repo.ArtifactRepository"
   ]
  },
  "type": "class"
 },
 "mlflow.store.artifact.local_artifact_repo.LocalArtifactRepository.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "mlflow.store.artifact.local_artifact_repo.LocalArtifactRepository",
    "mlflow.utils.file_utils.local_file_uri_to_path",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.local_artifact_repo.LocalArtifactRepository._download_file": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "mlflow.store.artifact.local_artifact_repo.os",
    "mlflow.store.artifact.local_artifact_repo.shutil"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.local_artifact_repo.LocalArtifactRepository._is_directory": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "mlflow.store.artifact.local_artifact_repo.os"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.local_artifact_repo.LocalArtifactRepository.artifact_dir": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.local_artifact_repo.LocalArtifactRepository.delete_artifacts": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "mlflow.store.artifact.local_artifact_repo.os",
    "mlflow.store.artifact.local_artifact_repo.shutil",
    "mlflow.utils.file_utils.local_file_uri_to_path"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.local_artifact_repo.LocalArtifactRepository.download_artifacts": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "IOError",
    "mlflow.store.artifact.local_artifact_repo.LocalArtifactRepository",
    "mlflow.store.artifact.local_artifact_repo.os",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.local_artifact_repo.LocalArtifactRepository.list_artifacts": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "mlflow.store.artifact.local_artifact_repo.os",
    "mlflow.utils.file_utils.get_file_info",
    "mlflow.utils.file_utils.list_all",
    "mlflow.utils.file_utils.relative_path_to_artifact_path",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.local_artifact_repo.LocalArtifactRepository.log_artifact": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "mlflow.store.artifact.artifact_repo.verify_artifact_path",
    "mlflow.store.artifact.local_artifact_repo.os",
    "mlflow.store.artifact.local_artifact_repo.shutil",
    "mlflow.utils.file_utils.mkdir"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.local_artifact_repo.LocalArtifactRepository.log_artifacts": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "distutils.dir_util.copy_tree",
    "mlflow.store.artifact.artifact_repo.verify_artifact_path",
    "mlflow.store.artifact.local_artifact_repo.os",
    "mlflow.utils.file_utils.mkdir"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.local_artifact_repo.dir_util": {
  "data": {
   "shadows": "distutils.dir_util"
  },
  "type": "import"
 },
 "mlflow.store.artifact.local_artifact_repo.get_file_info": {
  "data": {
   "shadows": "mlflow.utils.file_utils.get_file_info"
  },
  "type": "import"
 },
 "mlflow.store.artifact.local_artifact_repo.list_all": {
  "data": {
   "shadows": "mlflow.utils.file_utils.list_all"
  },
  "type": "import"
 },
 "mlflow.store.artifact.local_artifact_repo.local_file_uri_to_path": {
  "data": {
   "shadows": "mlflow.utils.file_utils.local_file_uri_to_path"
  },
  "type": "import"
 },
 "mlflow.store.artifact.local_artifact_repo.mkdir": {
  "data": {
   "shadows": "mlflow.utils.file_utils.mkdir"
  },
  "type": "import"
 },
 "mlflow.store.artifact.local_artifact_repo.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.store.artifact.local_artifact_repo.relative_path_to_artifact_path": {
  "data": {
   "shadows": "mlflow.utils.file_utils.relative_path_to_artifact_path"
  },
  "type": "import"
 },
 "mlflow.store.artifact.local_artifact_repo.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mlflow.store.artifact.local_artifact_repo.verify_artifact_path": {
  "data": {
   "shadows": "mlflow.store.artifact.artifact_repo.verify_artifact_path"
  },
  "type": "import"
 },
 "mlflow.store.artifact.models_artifact_repo": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.artifact.models_artifact_repo.ArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.artifact.artifact_repo.ArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.artifact.models_artifact_repo.MlflowClient": {
  "data": {
   "shadows": "mlflow.tracking.MlflowClient"
  },
  "type": "import"
 },
 "mlflow.store.artifact.models_artifact_repo.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "mlflow.store.artifact.artifact_repo.ArtifactRepository"
   ]
  },
  "type": "class"
 },
 "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "mlflow.store.artifact.artifact_repository_registry.get_artifact_repository",
    "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository._download_file": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository._improper_model_uri_msg": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository._parse_uri": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "int",
    "len",
    "mlflow.exceptions.MlflowException",
    "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository",
    "six.moves.urllib.parse.urlparse",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository.delete_artifacts": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository.download_artifacts": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository.get_underlying_uri": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "len",
    "mlflow.exceptions.MlflowException",
    "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository",
    "mlflow.tracking.MlflowClient",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository.is_models_uri": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "six.moves.urllib.parse.urlparse",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository.list_artifacts": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository.log_artifact": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository.log_artifacts": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.models_artifact_repo.get_artifact_repository": {
  "data": {
   "shadows": "mlflow.store.artifact.artifact_repository_registry.get_artifact_repository"
  },
  "type": "import"
 },
 "mlflow.store.artifact.models_artifact_repo.urllib": {
  "data": {
   "shadows": "six.moves.urllib"
  },
  "type": "import"
 },
 "mlflow.store.artifact.runs_artifact_repo": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.artifact.runs_artifact_repo.ArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.artifact.artifact_repo.ArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.artifact.runs_artifact_repo.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "mlflow.store.artifact.artifact_repo.ArtifactRepository"
   ]
  },
  "type": "class"
 },
 "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "mlflow.store.artifact.artifact_repository_registry.get_artifact_repository",
    "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository._download_file": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository._is_directory": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository.delete_artifacts": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository.download_artifacts": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository.get_underlying_uri": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository",
    "mlflow.tracking.artifact_utils.get_artifact_uri",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository.is_runs_uri": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "six.moves.urllib.parse.urlparse",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository.list_artifacts": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository.log_artifact": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository.log_artifacts": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository.parse_runs_uri": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "len",
    "mlflow.exceptions.MlflowException",
    "six.moves.urllib.parse.urlparse",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.runs_artifact_repo.get_artifact_repository": {
  "data": {
   "shadows": "mlflow.store.artifact.artifact_repository_registry.get_artifact_repository"
  },
  "type": "import"
 },
 "mlflow.store.artifact.runs_artifact_repo.get_artifact_uri": {
  "data": {
   "shadows": "mlflow.tracking.artifact_utils.get_artifact_uri"
  },
  "type": "import"
 },
 "mlflow.store.artifact.runs_artifact_repo.urllib": {
  "data": {
   "shadows": "six.moves.urllib"
  },
  "type": "import"
 },
 "mlflow.store.artifact.s3_artifact_repo": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.artifact.s3_artifact_repo.ArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.artifact.artifact_repo.ArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.artifact.s3_artifact_repo.FileInfo": {
  "data": {
   "shadows": "mlflow.entities.FileInfo"
  },
  "type": "import"
 },
 "mlflow.store.artifact.s3_artifact_repo.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.store.artifact.s3_artifact_repo.S3ArtifactRepository": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "mlflow.store.artifact.artifact_repo.ArtifactRepository"
   ]
  },
  "type": "class"
 },
 "mlflow.store.artifact.s3_artifact_repo.S3ArtifactRepository._download_file": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "mlflow.data.parse_s3_uri",
    "mlflow.store.artifact.s3_artifact_repo.posixpath"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.s3_artifact_repo.S3ArtifactRepository._get_s3_client": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "mlflow.store.artifact.s3_artifact_repo.boto3",
    "mlflow.store.artifact.s3_artifact_repo.os"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.s3_artifact_repo.S3ArtifactRepository._verify_listed_object_contains_artifact_path_prefix": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.s3_artifact_repo.S3ArtifactRepository.delete_artifacts": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.s3_artifact_repo.S3ArtifactRepository.list_artifacts": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "int",
    "mlflow.data.parse_s3_uri",
    "mlflow.entities.FileInfo",
    "mlflow.store.artifact.s3_artifact_repo.posixpath",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.s3_artifact_repo.S3ArtifactRepository.log_artifact": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "mlflow.data.parse_s3_uri",
    "mlflow.store.artifact.s3_artifact_repo.os",
    "mlflow.store.artifact.s3_artifact_repo.posixpath"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.s3_artifact_repo.S3ArtifactRepository.log_artifacts": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "mlflow.data.parse_s3_uri",
    "mlflow.store.artifact.s3_artifact_repo.os",
    "mlflow.store.artifact.s3_artifact_repo.posixpath",
    "mlflow.utils.file_utils.relative_path_to_artifact_path"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.s3_artifact_repo.S3ArtifactRepository.parse_s3_uri": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "Exception",
    "six.moves.urllib.parse.urlparse",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.s3_artifact_repo.boto3": {
  "data": {
   "shadows": "boto3"
  },
  "type": "import"
 },
 "mlflow.store.artifact.s3_artifact_repo.data": {
  "data": {
   "shadows": "mlflow.data"
  },
  "type": "import"
 },
 "mlflow.store.artifact.s3_artifact_repo.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.store.artifact.s3_artifact_repo.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "mlflow.store.artifact.s3_artifact_repo.relative_path_to_artifact_path": {
  "data": {
   "shadows": "mlflow.utils.file_utils.relative_path_to_artifact_path"
  },
  "type": "import"
 },
 "mlflow.store.artifact.s3_artifact_repo.urllib": {
  "data": {
   "shadows": "six.moves.urllib"
  },
  "type": "import"
 },
 "mlflow.store.artifact.sftp_artifact_repo": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.artifact.sftp_artifact_repo.ArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.artifact.artifact_repo.ArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.artifact.sftp_artifact_repo.FileInfo": {
  "data": {
   "shadows": "mlflow.entities.FileInfo"
  },
  "type": "import"
 },
 "mlflow.store.artifact.sftp_artifact_repo.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.store.artifact.sftp_artifact_repo.SFTPArtifactRepository": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "mlflow.store.artifact.artifact_repo.ArtifactRepository"
   ]
  },
  "type": "class"
 },
 "mlflow.store.artifact.sftp_artifact_repo.SFTPArtifactRepository.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "int",
    "mlflow.store.artifact.sftp_artifact_repo.SFTPArtifactRepository",
    "mlflow.store.artifact.sftp_artifact_repo.os",
    "mlflow.store.artifact.sftp_artifact_repo.paramiko",
    "mlflow.store.artifact.sftp_artifact_repo.pysftp",
    "open",
    "six.moves.urllib.parse.urlparse",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.sftp_artifact_repo.SFTPArtifactRepository._download_file": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "mlflow.store.artifact.sftp_artifact_repo.posixpath"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.sftp_artifact_repo.SFTPArtifactRepository._is_directory": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "mlflow.store.artifact.sftp_artifact_repo.posixpath"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.sftp_artifact_repo.SFTPArtifactRepository.delete_artifacts": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.sftp_artifact_repo.SFTPArtifactRepository.list_artifacts": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "mlflow.entities.FileInfo",
    "mlflow.store.artifact.sftp_artifact_repo.posixpath"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.sftp_artifact_repo.SFTPArtifactRepository.log_artifact": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "mlflow.store.artifact.sftp_artifact_repo.os",
    "mlflow.store.artifact.sftp_artifact_repo.posixpath"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.sftp_artifact_repo.SFTPArtifactRepository.log_artifacts": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "mlflow.store.artifact.sftp_artifact_repo.posixpath"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact.sftp_artifact_repo.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.store.artifact.sftp_artifact_repo.paramiko": {
  "data": {
   "shadows": "paramiko"
  },
  "type": "import"
 },
 "mlflow.store.artifact.sftp_artifact_repo.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "mlflow.store.artifact.sftp_artifact_repo.pysftp": {
  "data": {
   "shadows": "pysftp"
  },
  "type": "import"
 },
 "mlflow.store.artifact.sftp_artifact_repo.urllib": {
  "data": {
   "shadows": "six.moves.urllib"
  },
  "type": "import"
 },
 "mlflow.store.artifact_repo": {
  "data": {
   "shadows": "mlflow.store.artifact.artifact_repo"
  },
  "type": "import"
 },
 "mlflow.store.db": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.db.base_sql_model": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "mlflow.store.db.base_sql_model.Base": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "mlflow.store.db.base_sql_model.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "mlflow.store.db.db_types": {
  "data": {
   "symbols_in_volume": [
    "mlflow.store.db.db_types.MSSQL",
    "mlflow.store.db.db_types.MYSQL",
    "mlflow.store.db.db_types.POSTGRES",
    "mlflow.store.db.db_types.SQLITE"
   ]
  },
  "type": "module"
 },
 "mlflow.store.db.db_types.DATABASE_ENGINES": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "mlflow.store.db.db_types.MSSQL": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "mlflow.store.db.db_types.MYSQL": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "mlflow.store.db.db_types.POSTGRES": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "mlflow.store.db.db_types.SQLITE": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "mlflow.store.db.utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.store.db.utils.logging"
   ]
  },
  "type": "module"
 },
 "mlflow.store.db.utils.Config": {
  "data": {
   "shadows": "alembic.config.Config"
  },
  "type": "import"
 },
 "mlflow.store.db.utils.INTERNAL_ERROR": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INTERNAL_ERROR"
  },
  "type": "import"
 },
 "mlflow.store.db.utils.InitialBase": {
  "data": {
   "shadows": "mlflow.store.tracking.dbmodels.initial_models.Base"
  },
  "type": "import"
 },
 "mlflow.store.db.utils.MLFLOW_SQLALCHEMYSTORE_MAX_OVERFLOW": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mlflow.store.db.utils.MLFLOW_SQLALCHEMYSTORE_POOL_SIZE": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mlflow.store.db.utils.MigrationContext": {
  "data": {
   "shadows": "alembic.migration.MigrationContext"
  },
  "type": "import"
 },
 "mlflow.store.db.utils.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.store.db.utils.ScriptDirectory": {
  "data": {
   "shadows": "alembic.script.ScriptDirectory"
  },
  "type": "import"
 },
 "mlflow.store.db.utils._get_alembic_config": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "alembic.config.Config",
    "mlflow.store.db.utils._get_package_dir",
    "mlflow.store.db.utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.store.db.utils._get_latest_schema_revision": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "alembic.script.ScriptDirectory.from_config",
    "len",
    "mlflow.exceptions.MlflowException",
    "mlflow.store.db.utils._get_alembic_config"
   ]
  },
  "type": "function"
 },
 "mlflow.store.db.utils._get_managed_session_maker": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "mlflow.store.db.utils._get_managed_session_maker.make_managed_session": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "Exception",
    "SessionMaker",
    "contextlib.contextmanager",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INTERNAL_ERROR"
   ]
  },
  "type": "function"
 },
 "mlflow.store.db.utils._get_package_dir": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "mlflow.store.db.utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.store.db.utils._get_schema_version": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "alembic.migration.MigrationContext.configure"
   ]
  },
  "type": "function"
 },
 "mlflow.store.db.utils._initialize_tables": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "mlflow.store.db.utils._logger",
    "mlflow.store.db.utils._upgrade_db",
    "mlflow.store.tracking.dbmodels.initial_models.Base.metadata.create_all",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.db.utils._is_initialized_before_mlflow_1": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "mlflow.store.db.utils._get_schema_version",
    "mlflow.store.db.utils.sqlalchemy"
   ]
  },
  "type": "function"
 },
 "mlflow.store.db.utils._logger": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mlflow.store.db.utils._upgrade_db": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "alembic.command.upgrade",
    "mlflow.store.db.utils._get_alembic_config",
    "mlflow.store.db.utils._logger"
   ]
  },
  "type": "function"
 },
 "mlflow.store.db.utils._upgrade_db_initialized_before_mlflow_1": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "alembic.command.stamp",
    "alembic.command.upgrade",
    "mlflow.store.db.utils._get_alembic_config",
    "mlflow.store.db.utils._get_package_dir",
    "mlflow.store.db.utils._logger",
    "mlflow.store.db.utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.store.db.utils._verify_schema": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.store.db.utils._get_latest_schema_revision",
    "mlflow.store.db.utils._get_schema_version"
   ]
  },
  "type": "function"
 },
 "mlflow.store.db.utils.command": {
  "data": {
   "shadows": "alembic.command"
  },
  "type": "import"
 },
 "mlflow.store.db.utils.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "mlflow.store.db.utils.create_sqlalchemy_engine": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "int",
    "mlflow.store.db.utils.MLFLOW_SQLALCHEMYSTORE_MAX_OVERFLOW",
    "mlflow.store.db.utils.MLFLOW_SQLALCHEMYSTORE_POOL_SIZE",
    "mlflow.store.db.utils._logger",
    "mlflow.store.db.utils.os",
    "mlflow.store.db.utils.sqlalchemy"
   ]
  },
  "type": "function"
 },
 "mlflow.store.db.utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.store.db.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.store.db.utils.sqlalchemy": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.db_migrations.env": {
  "data": {
   "symbols_in_volume": [
    "alembic.context.config",
    "alembic.context.is_offline_mode",
    "logging.config.fileConfig",
    "mlflow.store.db.base_sql_model.Base.metadata",
    "mlflow.store.db_migrations.env.config",
    "mlflow.store.db_migrations.env.run_migrations_offline",
    "mlflow.store.db_migrations.env.run_migrations_online"
   ]
  },
  "type": "module"
 },
 "mlflow.store.db_migrations.env.Base": {
  "data": {
   "shadows": "mlflow.store.db.base_sql_model.Base"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.env.config": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.env.context": {
  "data": {
   "shadows": "alembic.context"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.env.engine_from_config": {
  "data": {
   "shadows": "sqlalchemy.engine_from_config"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.env.fileConfig": {
  "data": {
   "shadows": "logging.config.fileConfig"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.env.pool": {
  "data": {
   "shadows": "sqlalchemy.pool"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.env.run_migrations_offline": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "alembic.context.begin_transaction",
    "alembic.context.configure",
    "alembic.context.run_migrations",
    "mlflow.store.db_migrations.env.config",
    "mlflow.store.db_migrations.env.target_metadata"
   ]
  },
  "type": "function"
 },
 "mlflow.store.db_migrations.env.run_migrations_online": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "alembic.context.begin_transaction",
    "alembic.context.configure",
    "alembic.context.run_migrations",
    "mlflow.store.db_migrations.env.config",
    "mlflow.store.db_migrations.env.target_metadata",
    "sqlalchemy.engine_from_config",
    "sqlalchemy.pool.NullPool"
   ]
  },
  "type": "function"
 },
 "mlflow.store.db_migrations.env.target_metadata": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.db_migrations.versions.0a8213491aaa_drop_duplicate_killed_constraint": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.store.db_migrations.versions.0a8213491aaa_drop_duplicate_killed_constraint.logging"
   ]
  },
  "type": "module"
 },
 "mlflow.store.db_migrations.versions.0a8213491aaa_drop_duplicate_killed_constraint._logger": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.0a8213491aaa_drop_duplicate_killed_constraint.branch_labels": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.0a8213491aaa_drop_duplicate_killed_constraint.depends_on": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.0a8213491aaa_drop_duplicate_killed_constraint.down_revision": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.0a8213491aaa_drop_duplicate_killed_constraint.downgrade": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.0a8213491aaa_drop_duplicate_killed_constraint.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.0a8213491aaa_drop_duplicate_killed_constraint.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.0a8213491aaa_drop_duplicate_killed_constraint.revision": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.0a8213491aaa_drop_duplicate_killed_constraint.upgrade": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.drop_constraint",
    "mlflow.store.db_migrations.versions.0a8213491aaa_drop_duplicate_killed_constraint._logger"
   ]
  },
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.181f10493468_allow_nulls_for_metric_values": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.db_migrations.versions.181f10493468_allow_nulls_for_metric_values.branch_labels": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.181f10493468_allow_nulls_for_metric_values.depends_on": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.181f10493468_allow_nulls_for_metric_values.down_revision": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.181f10493468_allow_nulls_for_metric_values.downgrade": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.181f10493468_allow_nulls_for_metric_values.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.181f10493468_allow_nulls_for_metric_values.revision": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.181f10493468_allow_nulls_for_metric_values.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.181f10493468_allow_nulls_for_metric_values.upgrade": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.types.Float"
   ]
  },
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db._logger",
    "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db.logging"
   ]
  },
  "type": "module"
 },
 "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db.BigInteger": {
  "data": {
   "shadows": "sqlalchemy.BigInteger"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db.Boolean": {
  "data": {
   "shadows": "sqlalchemy.Boolean"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db.Float": {
  "data": {
   "shadows": "sqlalchemy.Float"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db.ModelVersionStatus": {
  "data": {
   "shadows": "mlflow.entities.model_registry.model_version_status.ModelVersionStatus"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db.PrimaryKeyConstraint": {
  "data": {
   "shadows": "sqlalchemy.PrimaryKeyConstraint"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db.STAGE_NONE": {
  "data": {
   "shadows": "mlflow.entities.model_registry.model_version_stages.STAGE_NONE"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db.SqlModelVersion": {
  "data": {
   "shadows": "mlflow.store.model_registry.dbmodels.models.SqlModelVersion"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db.SqlRegisteredModel": {
  "data": {
   "shadows": "mlflow.store.model_registry.dbmodels.models.SqlRegisteredModel"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db._logger": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db.and_": {
  "data": {
   "shadows": "sqlalchemy.and_"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db.branch_labels": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db.depends_on": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db.distinct": {
  "data": {
   "shadows": "sqlalchemy.distinct"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db.down_revision": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db.downgrade": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "alembic.op.drop_table",
    "mlflow.store.model_registry.dbmodels.models.SqlModelVersion.__tablename__",
    "mlflow.store.model_registry.dbmodels.models.SqlRegisteredModel.__tablename__"
   ]
  },
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db.func": {
  "data": {
   "shadows": "sqlalchemy.func"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db.orm": {
  "data": {
   "shadows": "sqlalchemy.orm"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db.revision": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db.upgrade": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "alembic.op.create_table",
    "alembic.op.get_bind",
    "int",
    "mlflow.entities.model_registry.model_version_stages.STAGE_NONE",
    "mlflow.entities.model_registry.model_version_status.ModelVersionStatus.READY",
    "mlflow.entities.model_registry.model_version_status.ModelVersionStatus.to_string",
    "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db._logger",
    "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db.time",
    "mlflow.store.model_registry.dbmodels.models.SqlModelVersion.__tablename__",
    "mlflow.store.model_registry.dbmodels.models.SqlRegisteredModel.__tablename__",
    "sqlalchemy.BigInteger",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.orm.Session"
   ]
  },
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.451aebb31d03_add_metric_step": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.db_migrations.versions.451aebb31d03_add_metric_step.branch_labels": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.451aebb31d03_add_metric_step.depends_on": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.451aebb31d03_add_metric_step.down_revision": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.451aebb31d03_add_metric_step.downgrade": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.451aebb31d03_add_metric_step.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.451aebb31d03_add_metric_step.revision": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.451aebb31d03_add_metric_step.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.451aebb31d03_add_metric_step.upgrade": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "alembic.op.batch_alter_table",
    "sqlalchemy.BigInteger",
    "sqlalchemy.Column"
   ]
  },
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.7ac759974ad8_update_run_tags_with_larger_limit": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.db_migrations.versions.7ac759974ad8_update_run_tags_with_larger_limit.branch_labels": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.7ac759974ad8_update_run_tags_with_larger_limit.depends_on": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.7ac759974ad8_update_run_tags_with_larger_limit.down_revision": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.7ac759974ad8_update_run_tags_with_larger_limit.downgrade": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.7ac759974ad8_update_run_tags_with_larger_limit.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.7ac759974ad8_update_run_tags_with_larger_limit.revision": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.7ac759974ad8_update_run_tags_with_larger_limit.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.7ac759974ad8_update_run_tags_with_larger_limit.upgrade": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "sqlalchemy.String"
   ]
  },
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table._logger",
    "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table.logging"
   ]
  },
  "type": "module"
 },
 "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table.BigInteger": {
  "data": {
   "shadows": "sqlalchemy.BigInteger"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table.Boolean": {
  "data": {
   "shadows": "sqlalchemy.Boolean"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table.Float": {
  "data": {
   "shadows": "sqlalchemy.Float"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table.PrimaryKeyConstraint": {
  "data": {
   "shadows": "sqlalchemy.PrimaryKeyConstraint"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table.SqlLatestMetric": {
  "data": {
   "shadows": "mlflow.store.tracking.dbmodels.models.SqlLatestMetric"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table.SqlMetric": {
  "data": {
   "shadows": "mlflow.store.tracking.dbmodels.models.SqlMetric"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table._describe_migration_if_necessary": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table._logger",
    "mlflow.store.tracking.dbmodels.models.SqlMetric",
    "mlflow.store.tracking.dbmodels.models.SqlMetric.key",
    "mlflow.store.tracking.dbmodels.models.SqlMetric.run_uuid",
    "sqlalchemy.distinct"
   ]
  },
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table._get_latest_metrics_for_runs": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "mlflow.store.tracking.dbmodels.models.SqlMetric.is_nan",
    "mlflow.store.tracking.dbmodels.models.SqlMetric.key",
    "mlflow.store.tracking.dbmodels.models.SqlMetric.run_uuid",
    "mlflow.store.tracking.dbmodels.models.SqlMetric.step",
    "mlflow.store.tracking.dbmodels.models.SqlMetric.timestamp",
    "mlflow.store.tracking.dbmodels.models.SqlMetric.value",
    "sqlalchemy.and_",
    "sqlalchemy.func.max"
   ]
  },
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table._logger": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table.and_": {
  "data": {
   "shadows": "sqlalchemy.and_"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table.branch_labels": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table.depends_on": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table.distinct": {
  "data": {
   "shadows": "sqlalchemy.distinct"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table.down_revision": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table.downgrade": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "alembic.op.drop_table",
    "mlflow.store.tracking.dbmodels.models.SqlLatestMetric.__tablename__"
   ]
  },
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table.func": {
  "data": {
   "shadows": "sqlalchemy.func"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table.orm": {
  "data": {
   "shadows": "sqlalchemy.orm"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table.revision": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table.upgrade": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "alembic.op.create_table",
    "alembic.op.get_bind",
    "int",
    "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table._describe_migration_if_necessary",
    "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table._get_latest_metrics_for_runs",
    "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table._logger",
    "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table.time",
    "mlflow.store.tracking.dbmodels.models.SqlLatestMetric",
    "mlflow.store.tracking.dbmodels.models.SqlLatestMetric.__tablename__",
    "sqlalchemy.BigInteger",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.Float",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.orm.Session"
   ]
  },
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.90e64c465722_migrate_user_column_to_tags": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "mlflow.store.db_migrations.versions.90e64c465722_migrate_user_column_to_tags.Base": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.90e64c465722_migrate_user_column_to_tags.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.90e64c465722_migrate_user_column_to_tags.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.90e64c465722_migrate_user_column_to_tags.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.90e64c465722_migrate_user_column_to_tags.MLFLOW_USER": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_USER"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.90e64c465722_migrate_user_column_to_tags.PrimaryKeyConstraint": {
  "data": {
   "shadows": "sqlalchemy.PrimaryKeyConstraint"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.90e64c465722_migrate_user_column_to_tags.SqlRun": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "mlflow.store.db_migrations.versions.90e64c465722_migrate_user_column_to_tags.Base",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String"
   ]
  },
  "type": "class"
 },
 "mlflow.store.db_migrations.versions.90e64c465722_migrate_user_column_to_tags.SqlTag": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "mlflow.store.db_migrations.versions.90e64c465722_migrate_user_column_to_tags.Base",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "mlflow.store.db_migrations.versions.90e64c465722_migrate_user_column_to_tags.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.90e64c465722_migrate_user_column_to_tags.backref": {
  "data": {
   "shadows": "sqlalchemy.orm.backref"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.90e64c465722_migrate_user_column_to_tags.branch_labels": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.90e64c465722_migrate_user_column_to_tags.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.90e64c465722_migrate_user_column_to_tags.depends_on": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.90e64c465722_migrate_user_column_to_tags.down_revision": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.90e64c465722_migrate_user_column_to_tags.downgrade": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.90e64c465722_migrate_user_column_to_tags.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.90e64c465722_migrate_user_column_to_tags.orm": {
  "data": {
   "shadows": "sqlalchemy.orm"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.90e64c465722_migrate_user_column_to_tags.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.90e64c465722_migrate_user_column_to_tags.revision": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.90e64c465722_migrate_user_column_to_tags.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.90e64c465722_migrate_user_column_to_tags.upgrade": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "mlflow.store.db_migrations.versions.90e64c465722_migrate_user_column_to_tags.SqlRun",
    "mlflow.store.db_migrations.versions.90e64c465722_migrate_user_column_to_tags.SqlTag",
    "mlflow.utils.mlflow_tags.MLFLOW_USER",
    "sqlalchemy.orm.Session"
   ]
  },
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.cfd24bdc0731_update_run_status_constraint_with_killed": {
  "data": {
   "symbols_in_volume": [
    "mlflow.entities.RunStatus.FAILED",
    "mlflow.entities.RunStatus.FINISHED",
    "mlflow.entities.RunStatus.KILLED",
    "mlflow.entities.RunStatus.RUNNING",
    "mlflow.entities.RunStatus.SCHEDULED",
    "mlflow.entities.RunStatus.to_string",
    "mlflow.entities.ViewType.ALL",
    "mlflow.entities.lifecycle_stage.LifecycleStage.view_type_to_stages",
    "mlflow.store.tracking.dbmodels.models.SourceTypes",
    "mlflow.store.tracking.dbmodels.models.SqlRun.lifecycle_stage.in_",
    "mlflow.store.tracking.dbmodels.models.SqlRun.source_type.in_",
    "sqlalchemy.CheckConstraint"
   ]
  },
  "type": "module"
 },
 "mlflow.store.db_migrations.versions.cfd24bdc0731_update_run_status_constraint_with_killed.CheckConstraint": {
  "data": {
   "shadows": "sqlalchemy.CheckConstraint"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.cfd24bdc0731_update_run_status_constraint_with_killed.Enum": {
  "data": {
   "shadows": "sqlalchemy.Enum"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.cfd24bdc0731_update_run_status_constraint_with_killed.LifecycleStage": {
  "data": {
   "shadows": "mlflow.entities.lifecycle_stage.LifecycleStage"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.cfd24bdc0731_update_run_status_constraint_with_killed.RunStatus": {
  "data": {
   "shadows": "mlflow.entities.RunStatus"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.cfd24bdc0731_update_run_status_constraint_with_killed.SourceTypes": {
  "data": {
   "shadows": "mlflow.store.tracking.dbmodels.models.SourceTypes"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.cfd24bdc0731_update_run_status_constraint_with_killed.SqlRun": {
  "data": {
   "shadows": "mlflow.store.tracking.dbmodels.models.SqlRun"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.cfd24bdc0731_update_run_status_constraint_with_killed.ViewType": {
  "data": {
   "shadows": "mlflow.entities.ViewType"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.cfd24bdc0731_update_run_status_constraint_with_killed.branch_labels": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.cfd24bdc0731_update_run_status_constraint_with_killed.check_constraint_table_args": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.cfd24bdc0731_update_run_status_constraint_with_killed.depends_on": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.cfd24bdc0731_update_run_status_constraint_with_killed.down_revision": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.cfd24bdc0731_update_run_status_constraint_with_killed.downgrade": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.cfd24bdc0731_update_run_status_constraint_with_killed.new_run_statuses": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.cfd24bdc0731_update_run_status_constraint_with_killed.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.cfd24bdc0731_update_run_status_constraint_with_killed.revision": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.cfd24bdc0731_update_run_status_constraint_with_killed.upgrade": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "mlflow.store.db_migrations.versions.cfd24bdc0731_update_run_status_constraint_with_killed.check_constraint_table_args",
    "mlflow.store.db_migrations.versions.cfd24bdc0731_update_run_status_constraint_with_killed.new_run_statuses",
    "sqlalchemy.Enum"
   ]
  },
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.df50e92ffc5e_add_experiment_tags_table": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.db_migrations.versions.df50e92ffc5e_add_experiment_tags_table.SqlExperimentTag": {
  "data": {
   "shadows": "mlflow.store.tracking.dbmodels.models.SqlExperimentTag"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.df50e92ffc5e_add_experiment_tags_table.branch_labels": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.df50e92ffc5e_add_experiment_tags_table.depends_on": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.df50e92ffc5e_add_experiment_tags_table.down_revision": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.df50e92ffc5e_add_experiment_tags_table.downgrade": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.df50e92ffc5e_add_experiment_tags_table.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.df50e92ffc5e_add_experiment_tags_table.revision": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mlflow.store.db_migrations.versions.df50e92ffc5e_add_experiment_tags_table.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "mlflow.store.db_migrations.versions.df50e92ffc5e_add_experiment_tags_table.upgrade": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "alembic.op.create_table",
    "mlflow.store.tracking.dbmodels.models.SqlExperimentTag.__tablename__",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String"
   ]
  },
  "type": "function"
 },
 "mlflow.store.entities": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.entities.paged_list": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.entities.paged_list.PagedList": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "class"
 },
 "mlflow.store.entities.paged_list.PagedList.__init__": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "mlflow.store.entities.paged_list.PagedList",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.model_registry.abstract_store": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.model_registry.abstract_store.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.abstract_store.AbstractStore": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "mlflow.store.model_registry.abstract_store.AbstractStore.__init__": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "mlflow.store.model_registry.abstract_store.AbstractStore.create_model_version": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.abstract_store.AbstractStore.create_registered_model": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.abstract_store.AbstractStore.delete_model_version": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.abstract_store.AbstractStore.delete_registered_model": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.abstract_store.AbstractStore.get_latest_versions": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.abstract_store.AbstractStore.get_model_version_download_uri": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.abstract_store.AbstractStore.get_registered_model": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.abstract_store.AbstractStore.list_registered_models": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.abstract_store.AbstractStore.rename_registered_model": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.abstract_store.AbstractStore.search_model_versions": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.abstract_store.AbstractStore.transition_model_version_stage": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.abstract_store.AbstractStore.update_model_version": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.abstract_store.AbstractStore.update_registered_model": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.abstract_store.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.dbmodels": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.model_registry.dbmodels.models": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.model_registry.dbmodels.models.Base": {
  "data": {
   "shadows": "mlflow.store.db.base_sql_model.Base"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.dbmodels.models.BigInteger": {
  "data": {
   "shadows": "sqlalchemy.BigInteger"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.dbmodels.models.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.dbmodels.models.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.dbmodels.models.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.dbmodels.models.ModelVersion": {
  "data": {
   "shadows": "mlflow.entities.model_registry.ModelVersion"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.dbmodels.models.ModelVersionStatus": {
  "data": {
   "shadows": "mlflow.entities.model_registry.model_version_status.ModelVersionStatus"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.dbmodels.models.PrimaryKeyConstraint": {
  "data": {
   "shadows": "sqlalchemy.PrimaryKeyConstraint"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.dbmodels.models.RegisteredModel": {
  "data": {
   "shadows": "mlflow.entities.model_registry.RegisteredModel"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.dbmodels.models.STAGE_DELETED_INTERNAL": {
  "data": {
   "shadows": "mlflow.entities.model_registry.model_version_stages.STAGE_DELETED_INTERNAL"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.dbmodels.models.STAGE_NONE": {
  "data": {
   "shadows": "mlflow.entities.model_registry.model_version_stages.STAGE_NONE"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.dbmodels.models.SqlModelVersion": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "int",
    "mlflow.entities.model_registry.model_version_stages.STAGE_NONE",
    "mlflow.entities.model_registry.model_version_status.ModelVersionStatus.READY",
    "mlflow.entities.model_registry.model_version_status.ModelVersionStatus.to_string",
    "mlflow.store.db.base_sql_model.Base",
    "mlflow.store.model_registry.dbmodels.models.time",
    "sqlalchemy.BigInteger",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "mlflow.store.model_registry.dbmodels.models.SqlModelVersion.to_mlflow_entity": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "mlflow.entities.model_registry.ModelVersion"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.dbmodels.models.SqlRegisteredModel": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "int",
    "mlflow.store.db.base_sql_model.Base",
    "mlflow.store.model_registry.dbmodels.models.time",
    "sqlalchemy.BigInteger",
    "sqlalchemy.Column",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String"
   ]
  },
  "type": "class"
 },
 "mlflow.store.model_registry.dbmodels.models.SqlRegisteredModel.__repr__": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "mlflow.store.model_registry.dbmodels.models.SqlRegisteredModel.to_mlflow_entity": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "mlflow.entities.model_registry.RegisteredModel",
    "mlflow.entities.model_registry.model_version_stages.STAGE_DELETED_INTERNAL"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.dbmodels.models.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.dbmodels.models.backref": {
  "data": {
   "shadows": "sqlalchemy.orm.backref"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.dbmodels.models.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.dbmodels.models.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.rest_store": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.protos.model_registry_pb2.ModelRegistryService",
    "mlflow.store.model_registry.rest_store._PATH_PREFIX",
    "mlflow.store.model_registry.rest_store.logging",
    "mlflow.utils.rest_utils.extract_api_info_for_service"
   ]
  },
  "type": "module"
 },
 "mlflow.store.model_registry.rest_store.AbstractStore": {
  "data": {
   "shadows": "mlflow.store.model_registry.abstract_store.AbstractStore"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.rest_store.CreateModelVersion": {
  "data": {
   "shadows": "mlflow.protos.model_registry_pb2.CreateModelVersion"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.rest_store.CreateRegisteredModel": {
  "data": {
   "shadows": "mlflow.protos.model_registry_pb2.CreateRegisteredModel"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.rest_store.DeleteModelVersion": {
  "data": {
   "shadows": "mlflow.protos.model_registry_pb2.DeleteModelVersion"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.rest_store.DeleteRegisteredModel": {
  "data": {
   "shadows": "mlflow.protos.model_registry_pb2.DeleteRegisteredModel"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.rest_store.GetLatestVersions": {
  "data": {
   "shadows": "mlflow.protos.model_registry_pb2.GetLatestVersions"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.rest_store.GetModelVersion": {
  "data": {
   "shadows": "mlflow.protos.model_registry_pb2.GetModelVersion"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.rest_store.GetModelVersionDownloadUri": {
  "data": {
   "shadows": "mlflow.protos.model_registry_pb2.GetModelVersionDownloadUri"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.rest_store.GetRegisteredModel": {
  "data": {
   "shadows": "mlflow.protos.model_registry_pb2.GetRegisteredModel"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.rest_store.ListRegisteredModels": {
  "data": {
   "shadows": "mlflow.protos.model_registry_pb2.ListRegisteredModels"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.rest_store.ModelRegistryService": {
  "data": {
   "shadows": "mlflow.protos.model_registry_pb2.ModelRegistryService"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.rest_store.ModelVersion": {
  "data": {
   "shadows": "mlflow.entities.model_registry.ModelVersion"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.rest_store.PagedList": {
  "data": {
   "shadows": "mlflow.store.entities.paged_list.PagedList"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.rest_store.RegisteredModel": {
  "data": {
   "shadows": "mlflow.entities.model_registry.RegisteredModel"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.rest_store.RenameRegisteredModel": {
  "data": {
   "shadows": "mlflow.protos.model_registry_pb2.RenameRegisteredModel"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.rest_store.RestStore": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "mlflow.store.model_registry.abstract_store.AbstractStore"
   ]
  },
  "type": "class"
 },
 "mlflow.store.model_registry.rest_store.RestStore.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "mlflow.store.model_registry.rest_store.RestStore",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.rest_store.RestStore._call_endpoint": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "mlflow.store.model_registry.rest_store._METHOD_TO_INFO",
    "mlflow.utils.rest_utils.call_endpoint"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.rest_store.RestStore.create_model_version": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "mlflow.entities.model_registry.ModelVersion.from_proto",
    "mlflow.protos.model_registry_pb2.CreateModelVersion",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.rest_store.RestStore.create_registered_model": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "mlflow.entities.model_registry.RegisteredModel.from_proto",
    "mlflow.protos.model_registry_pb2.CreateRegisteredModel",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.rest_store.RestStore.delete_model_version": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "mlflow.protos.model_registry_pb2.DeleteModelVersion",
    "mlflow.utils.proto_json_utils.message_to_json",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.rest_store.RestStore.delete_registered_model": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "mlflow.protos.model_registry_pb2.DeleteRegisteredModel",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.rest_store.RestStore.get_latest_versions": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "mlflow.entities.model_registry.ModelVersion.from_proto",
    "mlflow.protos.model_registry_pb2.GetLatestVersions",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.rest_store.RestStore.get_model_version": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "mlflow.entities.model_registry.ModelVersion.from_proto",
    "mlflow.protos.model_registry_pb2.GetModelVersion",
    "mlflow.utils.proto_json_utils.message_to_json",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.rest_store.RestStore.get_model_version_download_uri": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "mlflow.protos.model_registry_pb2.GetModelVersionDownloadUri",
    "mlflow.utils.proto_json_utils.message_to_json",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.rest_store.RestStore.get_registered_model": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "mlflow.entities.model_registry.RegisteredModel.from_proto",
    "mlflow.protos.model_registry_pb2.GetRegisteredModel",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.rest_store.RestStore.list_registered_models": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "mlflow.entities.model_registry.RegisteredModel.from_proto",
    "mlflow.protos.model_registry_pb2.ListRegisteredModels",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.rest_store.RestStore.rename_registered_model": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "mlflow.entities.model_registry.RegisteredModel.from_proto",
    "mlflow.protos.model_registry_pb2.RenameRegisteredModel",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.rest_store.RestStore.search_model_versions": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "mlflow.entities.model_registry.ModelVersion.from_proto",
    "mlflow.protos.model_registry_pb2.SearchModelVersions",
    "mlflow.store.entities.paged_list.PagedList",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.rest_store.RestStore.transition_model_version_stage": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "mlflow.entities.model_registry.ModelVersion.from_proto",
    "mlflow.protos.model_registry_pb2.TransitionModelVersionStage",
    "mlflow.utils.proto_json_utils.message_to_json",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.rest_store.RestStore.update_model_version": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "mlflow.entities.model_registry.ModelVersion.from_proto",
    "mlflow.protos.model_registry_pb2.UpdateModelVersion",
    "mlflow.utils.proto_json_utils.message_to_json",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.rest_store.RestStore.update_registered_model": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "mlflow.entities.model_registry.RegisteredModel.from_proto",
    "mlflow.protos.model_registry_pb2.UpdateRegisteredModel",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.rest_store.SearchModelVersions": {
  "data": {
   "shadows": "mlflow.protos.model_registry_pb2.SearchModelVersions"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.rest_store.TransitionModelVersionStage": {
  "data": {
   "shadows": "mlflow.protos.model_registry_pb2.TransitionModelVersionStage"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.rest_store.UpdateModelVersion": {
  "data": {
   "shadows": "mlflow.protos.model_registry_pb2.UpdateModelVersion"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.rest_store.UpdateRegisteredModel": {
  "data": {
   "shadows": "mlflow.protos.model_registry_pb2.UpdateRegisteredModel"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.rest_store._METHOD_TO_INFO": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mlflow.store.model_registry.rest_store._PATH_PREFIX": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mlflow.store.model_registry.rest_store._logger": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mlflow.store.model_registry.rest_store.call_endpoint": {
  "data": {
   "shadows": "mlflow.utils.rest_utils.call_endpoint"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.rest_store.extract_api_info_for_service": {
  "data": {
   "shadows": "mlflow.utils.rest_utils.extract_api_info_for_service"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.rest_store.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.rest_store.message_to_json": {
  "data": {
   "shadows": "mlflow.utils.proto_json_utils.message_to_json"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.sqlalchemy_store": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.store.model_registry.sqlalchemy_store.logging",
    "mlflow.store.model_registry.sqlalchemy_store.sqlalchemy"
   ]
  },
  "type": "module"
 },
 "mlflow.store.model_registry.sqlalchemy_store.AbstractStore": {
  "data": {
   "shadows": "mlflow.store.model_registry.abstract_store.AbstractStore"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.sqlalchemy_store.Base": {
  "data": {
   "shadows": "mlflow.store.db.base_sql_model.Base"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.sqlalchemy_store.DEFAULT_STAGES_FOR_GET_LATEST_VERSIONS": {
  "data": {
   "shadows": "mlflow.entities.model_registry.model_version_stages.DEFAULT_STAGES_FOR_GET_LATEST_VERSIONS"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.sqlalchemy_store.INVALID_PARAMETER_VALUE": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.sqlalchemy_store.INVALID_STATE": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INVALID_STATE"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.sqlalchemy_store.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.sqlalchemy_store.PagedList": {
  "data": {
   "shadows": "mlflow.store.entities.paged_list.PagedList"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.sqlalchemy_store.RESOURCE_ALREADY_EXISTS": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.sqlalchemy_store.RESOURCE_DOES_NOT_EXIST": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.sqlalchemy_store.STAGE_DELETED_INTERNAL": {
  "data": {
   "shadows": "mlflow.entities.model_registry.model_version_stages.STAGE_DELETED_INTERNAL"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SearchUtils": {
  "data": {
   "shadows": "mlflow.utils.search_utils.SearchUtils"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "mlflow.store.model_registry.abstract_store.AbstractStore"
   ]
  },
  "type": "class"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "mlflow.store.db.base_sql_model.Base.metadata.bind",
    "mlflow.store.db.base_sql_model.Base.metadata.create_all",
    "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore",
    "mlflow.store.model_registry.sqlalchemy_store.sqlalchemy",
    "mlflow.utils.uri.extract_db_type_from_uri",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore._get_registered_model": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "classmethod",
    "len",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_STATE",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.store.model_registry.dbmodels.models.SqlRegisteredModel",
    "mlflow.store.model_registry.dbmodels.models.SqlRegisteredModel.name"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore._get_sql_model_version": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "int",
    "len",
    "mlflow.entities.model_registry.model_version_stages.STAGE_DELETED_INTERNAL",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_STATE",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.store.model_registry.dbmodels.models.SqlModelVersion",
    "mlflow.store.model_registry.dbmodels.models.SqlModelVersion.current_stage",
    "mlflow.store.model_registry.dbmodels.models.SqlModelVersion.name",
    "mlflow.store.model_registry.dbmodels.models.SqlModelVersion.version"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore._save_to_db": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "list",
    "type"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore._verify_registry_tables_exist": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "any",
    "mlflow.exceptions.MlflowException",
    "mlflow.store.model_registry.dbmodels.models.SqlModelVersion.__tablename__",
    "mlflow.store.model_registry.dbmodels.models.SqlRegisteredModel.__tablename__",
    "mlflow.store.model_registry.sqlalchemy_store.sqlalchemy",
    "set",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore.create_model_version": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.store.model_registry.dbmodels.models.SqlModelVersion",
    "mlflow.store.model_registry.sqlalchemy_store._logger",
    "mlflow.store.model_registry.sqlalchemy_store.now",
    "mlflow.store.model_registry.sqlalchemy_store.sqlalchemy",
    "next_version",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore.create_model_version.next_version": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "max"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore.create_registered_model": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS",
    "mlflow.store.model_registry.dbmodels.models.SqlRegisteredModel",
    "mlflow.store.model_registry.sqlalchemy_store.now",
    "mlflow.store.model_registry.sqlalchemy_store.sqlalchemy",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore.delete_model_version": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "mlflow.entities.model_registry.model_version_stages.STAGE_DELETED_INTERNAL",
    "mlflow.store.model_registry.sqlalchemy_store.now"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore.delete_registered_model": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore.get_latest_versions": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "len",
    "mlflow.entities.model_registry.model_version_stages.DEFAULT_STAGES_FOR_GET_LATEST_VERSIONS",
    "mlflow.entities.model_registry.model_version_stages.get_canonical_stage",
    "set"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore.get_model_version": {
  "data": {
   "lineno": 372
  },
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore.get_model_version_download_uri": {
  "data": {
   "lineno": 383
  },
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore.get_registered_model": {
  "data": {
   "lineno": 208
  },
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore.list_registered_models": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "mlflow.store.model_registry.dbmodels.models.SqlRegisteredModel"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore.rename_registered_model": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS",
    "mlflow.store.model_registry.sqlalchemy_store.now",
    "mlflow.store.model_registry.sqlalchemy_store.sqlalchemy",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore.search_model_versions": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "len",
    "mlflow.entities.model_registry.model_version_stages.STAGE_DELETED_INTERNAL",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.store.entities.paged_list.PagedList",
    "mlflow.store.model_registry.dbmodels.models.SqlModelVersion",
    "mlflow.store.model_registry.dbmodels.models.SqlModelVersion.current_stage",
    "mlflow.store.model_registry.dbmodels.models.SqlModelVersion.name",
    "mlflow.store.model_registry.dbmodels.models.SqlModelVersion.run_id",
    "mlflow.store.model_registry.dbmodels.models.SqlModelVersion.source",
    "mlflow.utils.search_utils.SearchUtils.parse_filter_for_model_registry"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore.transition_model_version_stage": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "mlflow.entities.model_registry.model_version_stages.get_canonical_stage",
    "mlflow.exceptions.MlflowException",
    "mlflow.store.model_registry.sqlalchemy_store.now"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore.update_model_version": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "mlflow.store.model_registry.sqlalchemy_store.now"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore.update_registered_model": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "mlflow.store.model_registry.sqlalchemy_store.now"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlModelVersion": {
  "data": {
   "shadows": "mlflow.store.model_registry.dbmodels.models.SqlModelVersion"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlRegisteredModel": {
  "data": {
   "shadows": "mlflow.store.model_registry.dbmodels.models.SqlRegisteredModel"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.sqlalchemy_store._logger": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mlflow.store.model_registry.sqlalchemy_store.extract_db_type_from_uri": {
  "data": {
   "shadows": "mlflow.utils.uri.extract_db_type_from_uri"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.sqlalchemy_store.get_canonical_stage": {
  "data": {
   "shadows": "mlflow.entities.model_registry.model_version_stages.get_canonical_stage"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.sqlalchemy_store.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.sqlalchemy_store.mlflow.store.db.utils": {
  "data": {
   "shadows": "mlflow.store.db.utils"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.sqlalchemy_store.now": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "int",
    "mlflow.store.model_registry.sqlalchemy_store.time"
   ]
  },
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.sqlalchemy": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "mlflow.store.model_registry.sqlalchemy_store.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mlflow.store.tracking": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.tracking.DEFAULT_LOCAL_FILE_AND_ARTIFACT_PATH": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mlflow.store.tracking.SEARCH_MAX_RESULTS_DEFAULT": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mlflow.store.tracking.SEARCH_MAX_RESULTS_THRESHOLD": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mlflow.store.tracking.abstract_store": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.tracking.abstract_store.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.__init__": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore._search_runs": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.create_experiment": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.create_run": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.delete_experiment": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.delete_run": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.get_experiment": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.get_experiment_by_name": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "mlflow.entities.ViewType.ALL"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.get_metric_history": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.get_run": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.list_experiments": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mlflow.entities.ViewType.ACTIVE_ONLY"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.list_run_infos": {
  "data": {
   "lineno": 250
  },
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.log_batch": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.log_metric": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.log_param": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.record_logged_model": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mlflow.utils.experimental"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.rename_experiment": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.restore_experiment": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.restore_run": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.search_runs": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "mlflow.store.entities.paged_list.PagedList",
    "mlflow.store.tracking.SEARCH_MAX_RESULTS_DEFAULT"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.set_experiment_tag": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.set_tag": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.update_run_info": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.PagedList": {
  "data": {
   "shadows": "mlflow.store.entities.paged_list.PagedList"
  },
  "type": "import"
 },
 "mlflow.store.tracking.abstract_store.SEARCH_MAX_RESULTS_DEFAULT": {
  "data": {
   "shadows": "mlflow.store.tracking.SEARCH_MAX_RESULTS_DEFAULT"
  },
  "type": "import"
 },
 "mlflow.store.tracking.abstract_store.ViewType": {
  "data": {
   "shadows": "mlflow.entities.ViewType"
  },
  "type": "import"
 },
 "mlflow.store.tracking.abstract_store.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "mlflow.store.tracking.abstract_store.experimental": {
  "data": {
   "shadows": "mlflow.utils.experimental"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.tracking.dbmodels.initial_models": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "mlflow.store.tracking.dbmodels.initial_models.Base": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mlflow.store.tracking.dbmodels.initial_models.BigInteger": {
  "data": {
   "shadows": "sqlalchemy.BigInteger"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.initial_models.CheckConstraint": {
  "data": {
   "shadows": "sqlalchemy.CheckConstraint"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.initial_models.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.initial_models.Float": {
  "data": {
   "shadows": "sqlalchemy.Float"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.initial_models.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.initial_models.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.initial_models.PrimaryKeyConstraint": {
  "data": {
   "shadows": "sqlalchemy.PrimaryKeyConstraint"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.initial_models.RunStatusTypes": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mlflow.store.tracking.dbmodels.initial_models.SourceTypes": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mlflow.store.tracking.dbmodels.initial_models.SqlExperiment": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "mlflow.store.tracking.dbmodels.initial_models.Base",
    "sqlalchemy.CheckConstraint",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String"
   ]
  },
  "type": "class"
 },
 "mlflow.store.tracking.dbmodels.initial_models.SqlExperiment.__repr__": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.initial_models.SqlMetric": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "int",
    "mlflow.store.tracking.dbmodels.initial_models.Base",
    "mlflow.store.tracking.dbmodels.initial_models.time",
    "sqlalchemy.BigInteger",
    "sqlalchemy.Column",
    "sqlalchemy.Float",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "mlflow.store.tracking.dbmodels.initial_models.SqlMetric.__repr__": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.initial_models.SqlParam": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "mlflow.store.tracking.dbmodels.initial_models.Base",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "mlflow.store.tracking.dbmodels.initial_models.SqlParam.__repr__": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.initial_models.SqlRun": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "int",
    "mlflow.store.tracking.dbmodels.initial_models.Base",
    "mlflow.store.tracking.dbmodels.initial_models.RunStatusTypes",
    "mlflow.store.tracking.dbmodels.initial_models.SourceTypes",
    "mlflow.store.tracking.dbmodels.initial_models.time",
    "sqlalchemy.BigInteger",
    "sqlalchemy.CheckConstraint",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "mlflow.store.tracking.dbmodels.initial_models.SqlTag": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "mlflow.store.tracking.dbmodels.initial_models.Base",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "mlflow.store.tracking.dbmodels.initial_models.SqlTag.__repr__": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.initial_models.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.initial_models.backref": {
  "data": {
   "shadows": "sqlalchemy.orm.backref"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.initial_models.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.initial_models.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.initial_models.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.models": {
  "data": {
   "symbols_in_volume": [
    "mlflow.entities.RunStatus.FAILED",
    "mlflow.entities.RunStatus.FINISHED",
    "mlflow.entities.RunStatus.KILLED",
    "mlflow.entities.RunStatus.RUNNING",
    "mlflow.entities.RunStatus.SCHEDULED",
    "mlflow.entities.RunStatus.to_string",
    "mlflow.entities.SourceType.JOB",
    "mlflow.entities.SourceType.LOCAL",
    "mlflow.entities.SourceType.NOTEBOOK",
    "mlflow.entities.SourceType.PROJECT",
    "mlflow.entities.SourceType.UNKNOWN",
    "mlflow.entities.SourceType.to_string"
   ]
  },
  "type": "module"
 },
 "mlflow.store.tracking.dbmodels.models.Base": {
  "data": {
   "shadows": "mlflow.store.db.base_sql_model.Base"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.models.BigInteger": {
  "data": {
   "shadows": "sqlalchemy.BigInteger"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.models.Boolean": {
  "data": {
   "shadows": "sqlalchemy.Boolean"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.models.CheckConstraint": {
  "data": {
   "shadows": "sqlalchemy.CheckConstraint"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.models.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.models.Experiment": {
  "data": {
   "shadows": "mlflow.entities.Experiment"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.models.ExperimentTag": {
  "data": {
   "shadows": "mlflow.entities.ExperimentTag"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.models.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.models.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.models.LifecycleStage": {
  "data": {
   "shadows": "mlflow.entities.lifecycle_stage.LifecycleStage"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.models.Metric": {
  "data": {
   "shadows": "mlflow.entities.Metric"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.models.Param": {
  "data": {
   "shadows": "mlflow.entities.Param"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.models.PrimaryKeyConstraint": {
  "data": {
   "shadows": "sqlalchemy.PrimaryKeyConstraint"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.models.Run": {
  "data": {
   "shadows": "mlflow.entities.Run"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.models.RunData": {
  "data": {
   "shadows": "mlflow.entities.RunData"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.models.RunInfo": {
  "data": {
   "shadows": "mlflow.entities.RunInfo"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.models.RunStatus": {
  "data": {
   "shadows": "mlflow.entities.RunStatus"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.models.RunStatusTypes": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mlflow.store.tracking.dbmodels.models.RunTag": {
  "data": {
   "shadows": "mlflow.entities.RunTag"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.models.SourceType": {
  "data": {
   "shadows": "mlflow.entities.SourceType"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.models.SourceTypes": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mlflow.store.tracking.dbmodels.models.SqlExperiment": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "mlflow.entities.ViewType.ALL",
    "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
    "mlflow.entities.lifecycle_stage.LifecycleStage.view_type_to_stages",
    "mlflow.store.db.base_sql_model.Base",
    "sqlalchemy.CheckConstraint",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String"
   ]
  },
  "type": "class"
 },
 "mlflow.store.tracking.dbmodels.models.SqlExperiment.__repr__": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.models.SqlExperiment.to_mlflow_entity": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "mlflow.entities.Experiment",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.models.SqlExperimentTag": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "mlflow.store.db.base_sql_model.Base",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "mlflow.store.tracking.dbmodels.models.SqlExperimentTag.__repr__": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.models.SqlExperimentTag.to_mlflow_entity": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "mlflow.entities.ExperimentTag"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.models.SqlLatestMetric": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "int",
    "mlflow.store.db.base_sql_model.Base",
    "mlflow.store.tracking.dbmodels.models.time",
    "sqlalchemy.BigInteger",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship",
    "sqlalchemy.types.Float"
   ]
  },
  "type": "class"
 },
 "mlflow.store.tracking.dbmodels.models.SqlLatestMetric.__repr__": {
  "data": {
   "lineno": 364
  },
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.models.SqlLatestMetric.to_mlflow_entity": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "float",
    "mlflow.entities.Metric"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.models.SqlMetric": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "int",
    "mlflow.store.db.base_sql_model.Base",
    "mlflow.store.tracking.dbmodels.models.time",
    "sqlalchemy.BigInteger",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship",
    "sqlalchemy.types.Float"
   ]
  },
  "type": "class"
 },
 "mlflow.store.tracking.dbmodels.models.SqlMetric.__repr__": {
  "data": {
   "lineno": 310
  },
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.models.SqlMetric.to_mlflow_entity": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "float",
    "mlflow.entities.Metric"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.models.SqlParam": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "mlflow.store.db.base_sql_model.Base",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "mlflow.store.tracking.dbmodels.models.SqlParam.__repr__": {
  "data": {
   "lineno": 406
  },
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.models.SqlParam.to_mlflow_entity": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "mlflow.entities.Param"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.models.SqlRun": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "int",
    "mlflow.entities.RunStatus.SCHEDULED",
    "mlflow.entities.RunStatus.to_string",
    "mlflow.entities.SourceType.LOCAL",
    "mlflow.entities.SourceType.to_string",
    "mlflow.entities.ViewType.ALL",
    "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
    "mlflow.entities.lifecycle_stage.LifecycleStage.view_type_to_stages",
    "mlflow.store.db.base_sql_model.Base",
    "mlflow.store.tracking.dbmodels.models.RunStatusTypes",
    "mlflow.store.tracking.dbmodels.models.SourceTypes",
    "mlflow.store.tracking.dbmodels.models.time",
    "sqlalchemy.BigInteger",
    "sqlalchemy.CheckConstraint",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "mlflow.store.tracking.dbmodels.models.SqlRun.get_attribute_name": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.models.SqlRun.to_mlflow_entity": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "mlflow.entities.Run",
    "mlflow.entities.RunData",
    "mlflow.entities.RunInfo",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.models.SqlTag": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "mlflow.store.db.base_sql_model.Base",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "mlflow.store.tracking.dbmodels.models.SqlTag.__repr__": {
  "data": {
   "lineno": 257
  },
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.models.SqlTag.to_mlflow_entity": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "mlflow.entities.RunTag"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.models.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.models.ViewType": {
  "data": {
   "shadows": "mlflow.entities.ViewType"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.models.backref": {
  "data": {
   "shadows": "sqlalchemy.orm.backref"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.models.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.models.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "mlflow.store.tracking.dbmodels.models.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.tracking.file_store.AbstractStore": {
  "data": {
   "shadows": "mlflow.store.tracking.abstract_store.AbstractStore"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.DEFAULT_LOCAL_FILE_AND_ARTIFACT_PATH": {
  "data": {
   "shadows": "mlflow.store.tracking.DEFAULT_LOCAL_FILE_AND_ARTIFACT_PATH"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.Experiment": {
  "data": {
   "shadows": "mlflow.entities.Experiment"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.ExperimentTag": {
  "data": {
   "shadows": "mlflow.entities.ExperimentTag"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.FileStore": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "mlflow.store.tracking.abstract_store.AbstractStore"
   ]
  },
  "type": "class"
 },
 "mlflow.store.tracking.file_store.FileStore.__init__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "mlflow.entities.Experiment.DEFAULT_EXPERIMENT_NAME",
    "mlflow.store.tracking.file_store.FileStore",
    "mlflow.store.tracking.file_store._default_root_dir",
    "mlflow.store.tracking.file_store.os",
    "mlflow.utils.file_utils.exists",
    "mlflow.utils.file_utils.local_file_uri_to_path",
    "mlflow.utils.file_utils.mkdir",
    "mlflow.utils.file_utils.path_to_local_file_uri",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._check_root_dir": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "Exception",
    "mlflow.utils.file_utils.exists",
    "mlflow.utils.file_utils.is_directory"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._create_experiment_with_id": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "dict",
    "mlflow.entities.Experiment",
    "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
    "mlflow.store.tracking.file_store.FileStore",
    "mlflow.utils.file_utils.mkdir",
    "mlflow.utils.file_utils.write_yaml",
    "mlflow.utils.uri.append_to_uri_path",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._find_experiment_folder": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "mlflow.store.tracking.file_store.FileStore",
    "mlflow.store.tracking.file_store.os",
    "mlflow.utils.file_utils.get_parent_dir"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._find_run_root": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "len",
    "mlflow.store.tracking.file_store.os",
    "mlflow.utils.file_utils.find",
    "mlflow.utils.validation._validate_run_id"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_active_experiments": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "mlflow.store.tracking.file_store.FileStore",
    "mlflow.utils.file_utils.list_subdirs"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_all_metrics": {
  "data": {
   "lineno": 504
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_all_params": {
  "data": {
   "lineno": 549
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_all_tags": {
  "data": {
   "lineno": 580
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_artifact_dir": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "mlflow.store.tracking.file_store.FileStore",
    "mlflow.utils.uri.append_to_uri_path",
    "mlflow.utils.validation._validate_run_id"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_deleted_experiments": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.list_subdirs"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_deleted_runs": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "mlflow.entities.ViewType.DELETED_ONLY"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_experiment": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "mlflow.entities.ViewType.ALL",
    "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
    "mlflow.entities.lifecycle_stage.LifecycleStage.DELETED",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.store.tracking.file_store.FileStore",
    "mlflow.store.tracking.file_store._read_persisted_experiment_dict",
    "mlflow.store.tracking.file_store.logging",
    "mlflow.utils.file_utils.read_yaml",
    "mlflow.utils.validation._validate_experiment_id"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_experiment_files": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "mlflow.store.tracking.file_store.FileStore",
    "mlflow.utils.validation._validate_experiment_id"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_experiment_path": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "len",
    "mlflow.entities.ViewType.ACTIVE_ONLY",
    "mlflow.entities.ViewType.ALL",
    "mlflow.entities.ViewType.DELETED_ONLY",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.utils.file_utils.find"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_experiment_tag_from_file": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "mlflow.entities.ExperimentTag",
    "mlflow.utils.file_utils.read_file",
    "mlflow.utils.validation._validate_tag_name",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_experiment_tag_path": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "mlflow.store.tracking.file_store.FileStore",
    "mlflow.store.tracking.file_store.os",
    "mlflow.utils.validation._validate_experiment_id",
    "mlflow.utils.validation._validate_param_name"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_metric_from_file": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "max",
    "mlflow.store.tracking.file_store.FileStore",
    "mlflow.utils.file_utils.read_file_lines",
    "mlflow.utils.validation._validate_metric_name",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_metric_from_line": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "mlflow.entities.Metric",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INTERNAL_ERROR",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_metric_history": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.store.tracking.file_store.FileStore",
    "mlflow.utils.file_utils.read_file_lines"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_metric_path": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "mlflow.store.tracking.file_store.FileStore",
    "mlflow.store.tracking.file_store.os",
    "mlflow.utils.validation._validate_metric_name",
    "mlflow.utils.validation._validate_run_id"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_param_from_file": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "mlflow.entities.Param",
    "mlflow.utils.file_utils.read_file",
    "mlflow.utils.validation._validate_param_name",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_param_path": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "mlflow.store.tracking.file_store.FileStore",
    "mlflow.store.tracking.file_store.os",
    "mlflow.utils.validation._validate_param_name",
    "mlflow.utils.validation._validate_run_id"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_resource_files": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "len",
    "mlflow.store.tracking.file_store.os",
    "mlflow.store.tracking.file_store.sys",
    "mlflow.utils.file_utils.find",
    "mlflow.utils.file_utils.relative_path_to_artifact_path"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_run_dir": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "mlflow.store.tracking.file_store.os",
    "mlflow.utils.validation._validate_run_id"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_run_files": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "Exception",
    "mlflow.store.tracking.file_store.FileStore"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_run_from_info": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "mlflow.entities.Run",
    "mlflow.entities.RunData"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_run_info": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_STATE",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_run_info_from_dir": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "mlflow.store.tracking.file_store.FileStore",
    "mlflow.store.tracking.file_store._read_persisted_run_info_dict",
    "mlflow.utils.file_utils.read_yaml"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_tag_from_file": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "mlflow.entities.RunTag",
    "mlflow.utils.file_utils.read_file",
    "mlflow.utils.validation._validate_tag_name",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_tag_path": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "mlflow.store.tracking.file_store.FileStore",
    "mlflow.store.tracking.file_store.os",
    "mlflow.utils.validation._validate_run_id",
    "mlflow.utils.validation._validate_tag_name"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._hard_delete_run": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "mlflow.store.tracking.file_store.shutil"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._has_experiment": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._list_run_infos": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "all",
    "mlflow.entities.lifecycle_stage.LifecycleStage.matches_view_type",
    "mlflow.exceptions.MissingConfigException",
    "mlflow.store.tracking.file_store.FileStore",
    "mlflow.store.tracking.file_store.logging",
    "mlflow.store.tracking.file_store.os",
    "mlflow.utils.file_utils.list_all",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._log_run_metric": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.append_to",
    "mlflow.utils.file_utils.make_containing_dirs"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._log_run_param": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "mlflow.store.tracking.file_store.os",
    "mlflow.utils.file_utils.make_containing_dirs",
    "mlflow.utils.file_utils.write_to"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._overwrite_run_info": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "mlflow.store.tracking.file_store.FileStore",
    "mlflow.store.tracking.file_store._make_persisted_run_info_dict",
    "mlflow.utils.file_utils.write_yaml"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._search_runs": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.store.tracking.SEARCH_MAX_RESULTS_THRESHOLD",
    "mlflow.utils.search_utils.SearchUtils.filter",
    "mlflow.utils.search_utils.SearchUtils.paginate",
    "mlflow.utils.search_utils.SearchUtils.sort"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._set_run_tag": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.make_containing_dirs",
    "mlflow.utils.file_utils.write_to"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._validate_experiment_name": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "mlflow.entities.lifecycle_stage.LifecycleStage.DELETED",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._validate_new_param_value": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._writeable_value": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "mlflow.utils.string_utils.is_string_type"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.create_experiment": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "int",
    "max",
    "mlflow.entities.ViewType.ALL",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.create_run": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "mlflow.entities.RunInfo",
    "mlflow.entities.RunStatus.RUNNING",
    "mlflow.entities.RunStatus.to_string",
    "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_STATE",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.store.tracking.file_store.FileStore",
    "mlflow.store.tracking.file_store._make_persisted_run_info_dict",
    "mlflow.store.tracking.file_store.uuid",
    "mlflow.utils.file_utils.mkdir",
    "mlflow.utils.file_utils.write_yaml"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.delete_experiment": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "mlflow.entities.ViewType.ACTIVE_ONLY",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.utils.file_utils.mv"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.delete_run": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "mlflow.entities.lifecycle_stage.LifecycleStage.DELETED",
    "mlflow.entities.run_info.check_run_is_active",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_STATE"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.delete_tag": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "mlflow.entities.run_info.check_run_is_active",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.store.tracking.file_store.os",
    "mlflow.utils.file_utils.exists",
    "mlflow.utils.validation._validate_run_id"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.get_all_experiment_tags": {
  "data": {
   "lineno": 562
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.get_all_metrics": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "mlflow.utils.validation._validate_run_id"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.get_all_params": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "mlflow.utils.validation._validate_run_id"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.get_all_tags": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "mlflow.utils.validation._validate_run_id"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.get_experiment": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.store.tracking.file_store.FileStore"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.get_metric_history": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "mlflow.utils.validation._validate_metric_name",
    "mlflow.utils.validation._validate_run_id"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.get_run": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_STATE",
    "mlflow.utils.validation._validate_run_id"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.list_experiments": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "mlflow.entities.ViewType.ACTIVE_ONLY",
    "mlflow.entities.ViewType.ALL",
    "mlflow.entities.ViewType.DELETED_ONLY",
    "mlflow.exceptions.MissingConfigException",
    "mlflow.store.tracking.file_store.logging",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.log_batch": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "Exception",
    "mlflow.entities.run_info.check_run_is_active",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INTERNAL_ERROR",
    "mlflow.utils.validation._validate_batch_log_data",
    "mlflow.utils.validation._validate_batch_log_limits",
    "mlflow.utils.validation._validate_run_id"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.log_metric": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "mlflow.entities.run_info.check_run_is_active",
    "mlflow.utils.validation._validate_metric_name",
    "mlflow.utils.validation._validate_run_id"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.log_param": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "mlflow.entities.run_info.check_run_is_active",
    "mlflow.utils.validation._validate_param_name",
    "mlflow.utils.validation._validate_run_id"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.record_logged_model": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "isinstance",
    "mlflow.entities.RunTag",
    "mlflow.entities.run_info.check_run_is_active",
    "mlflow.exceptions.MlflowException",
    "mlflow.models.Model",
    "mlflow.protos.databricks_pb2.INTERNAL_ERROR",
    "mlflow.store.tracking.file_store.json",
    "mlflow.store.tracking.file_store.os",
    "mlflow.utils.mlflow_tags.MLFLOW_LOGGED_MODELS",
    "mlflow.utils.validation._validate_run_id",
    "open",
    "type"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.rename_experiment": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.store.tracking.file_store.FileStore",
    "mlflow.store.tracking.file_store.os",
    "mlflow.utils.file_utils.write_yaml"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.restore_experiment": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "mlflow.entities.ViewType.ACTIVE_ONLY",
    "mlflow.entities.ViewType.DELETED_ONLY",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.utils.file_utils.mv"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.restore_run": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
    "mlflow.entities.run_info.check_run_is_deleted",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_STATE"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.set_experiment_tag": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.utils.file_utils.make_containing_dirs",
    "mlflow.utils.file_utils.write_to",
    "mlflow.utils.validation._validate_tag_name"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.set_tag": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "mlflow.entities.run_info.check_run_is_active",
    "mlflow.utils.validation._validate_run_id",
    "mlflow.utils.validation._validate_tag_name"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.update_run_info": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "mlflow.entities.run_info.check_run_is_active",
    "mlflow.utils.validation._validate_run_id"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store.INTERNAL_ERROR": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INTERNAL_ERROR"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.LifecycleStage": {
  "data": {
   "shadows": "mlflow.entities.lifecycle_stage.LifecycleStage"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.MLFLOW_LOGGED_MODELS": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_LOGGED_MODELS"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.Metric": {
  "data": {
   "shadows": "mlflow.entities.Metric"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.MissingConfigException": {
  "data": {
   "shadows": "mlflow.exceptions.MissingConfigException"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.Model": {
  "data": {
   "shadows": "mlflow.models.Model"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.Param": {
  "data": {
   "shadows": "mlflow.entities.Param"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.RESOURCE_DOES_NOT_EXIST": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.Run": {
  "data": {
   "shadows": "mlflow.entities.Run"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.RunData": {
  "data": {
   "shadows": "mlflow.entities.RunData"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.RunInfo": {
  "data": {
   "shadows": "mlflow.entities.RunInfo"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.RunStatus": {
  "data": {
   "shadows": "mlflow.entities.RunStatus"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.RunTag": {
  "data": {
   "shadows": "mlflow.entities.RunTag"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.SEARCH_MAX_RESULTS_THRESHOLD": {
  "data": {
   "shadows": "mlflow.store.tracking.SEARCH_MAX_RESULTS_THRESHOLD"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.SearchUtils": {
  "data": {
   "shadows": "mlflow.utils.search_utils.SearchUtils"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.SourceType": {
  "data": {
   "shadows": "mlflow.entities.SourceType"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.ViewType": {
  "data": {
   "shadows": "mlflow.entities.ViewType"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store._TRACKING_DIR_ENV_VAR": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mlflow.store.tracking.file_store._default_root_dir": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "mlflow.store.tracking.DEFAULT_LOCAL_FILE_AND_ARTIFACT_PATH",
    "mlflow.store.tracking.file_store._TRACKING_DIR_ENV_VAR",
    "mlflow.store.tracking.file_store.os",
    "mlflow.utils.env.get_env"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store._make_persisted_run_info_dict": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "dict",
    "mlflow.entities.RunStatus.RUNNING",
    "mlflow.entities.RunStatus.from_string",
    "mlflow.entities.SourceType.LOCAL"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store._read_persisted_experiment_dict": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "mlflow.entities.Experiment.from_dictionary",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store._read_persisted_run_info_dict": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "mlflow.entities.RunInfo.from_dictionary",
    "mlflow.entities.RunStatus.RUNNING",
    "mlflow.entities.RunStatus.to_string",
    "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.file_store._validate_batch_log_data": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_batch_log_data"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store._validate_batch_log_limits": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_batch_log_limits"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store._validate_experiment_id": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_experiment_id"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store._validate_metric_name": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_metric_name"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store._validate_param_name": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_param_name"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store._validate_run_id": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_run_id"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store._validate_tag_name": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_tag_name"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.append_to": {
  "data": {
   "shadows": "mlflow.utils.file_utils.append_to"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.append_to_uri_path": {
  "data": {
   "shadows": "mlflow.utils.uri.append_to_uri_path"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.check_run_is_active": {
  "data": {
   "shadows": "mlflow.entities.run_info.check_run_is_active"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.check_run_is_deleted": {
  "data": {
   "shadows": "mlflow.entities.run_info.check_run_is_deleted"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.databricks_pb2": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.exists": {
  "data": {
   "shadows": "mlflow.utils.file_utils.exists"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.find": {
  "data": {
   "shadows": "mlflow.utils.file_utils.find"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.get_env": {
  "data": {
   "shadows": "mlflow.utils.env.get_env"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.get_parent_dir": {
  "data": {
   "shadows": "mlflow.utils.file_utils.get_parent_dir"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.is_directory": {
  "data": {
   "shadows": "mlflow.utils.file_utils.is_directory"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.is_string_type": {
  "data": {
   "shadows": "mlflow.utils.string_utils.is_string_type"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.list_all": {
  "data": {
   "shadows": "mlflow.utils.file_utils.list_all"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.list_subdirs": {
  "data": {
   "shadows": "mlflow.utils.file_utils.list_subdirs"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.local_file_uri_to_path": {
  "data": {
   "shadows": "mlflow.utils.file_utils.local_file_uri_to_path"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.make_containing_dirs": {
  "data": {
   "shadows": "mlflow.utils.file_utils.make_containing_dirs"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.mkdir": {
  "data": {
   "shadows": "mlflow.utils.file_utils.mkdir"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.mv": {
  "data": {
   "shadows": "mlflow.utils.file_utils.mv"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.path_to_local_file_uri": {
  "data": {
   "shadows": "mlflow.utils.file_utils.path_to_local_file_uri"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.read_file": {
  "data": {
   "shadows": "mlflow.utils.file_utils.read_file"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.read_file_lines": {
  "data": {
   "shadows": "mlflow.utils.file_utils.read_file_lines"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.read_yaml": {
  "data": {
   "shadows": "mlflow.utils.file_utils.read_yaml"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.relative_path_to_artifact_path": {
  "data": {
   "shadows": "mlflow.utils.file_utils.relative_path_to_artifact_path"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.write_to": {
  "data": {
   "shadows": "mlflow.utils.file_utils.write_to"
  },
  "type": "import"
 },
 "mlflow.store.tracking.file_store.write_yaml": {
  "data": {
   "shadows": "mlflow.utils.file_utils.write_yaml"
  },
  "type": "import"
 },
 "mlflow.store.tracking.rest_store": {
  "data": {
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.MlflowService",
    "mlflow.store.tracking.rest_store._PATH_PREFIX",
    "mlflow.utils.rest_utils.extract_api_info_for_service"
   ]
  },
  "type": "module"
 },
 "mlflow.store.tracking.rest_store.AbstractStore": {
  "data": {
   "shadows": "mlflow.store.tracking.abstract_store.AbstractStore"
  },
  "type": "import"
 },
 "mlflow.store.tracking.rest_store.CreateExperiment": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.CreateExperiment"
  },
  "type": "import"
 },
 "mlflow.store.tracking.rest_store.CreateRun": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.CreateRun"
  },
  "type": "import"
 },
 "mlflow.store.tracking.rest_store.DatabricksRestStore": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "mlflow.store.tracking.rest_store.RestStore"
   ]
  },
  "type": "class"
 },
 "mlflow.store.tracking.rest_store.DatabricksRestStore.get_experiment_by_name": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "mlflow.entities.Experiment.from_proto",
    "mlflow.entities.ViewType.ALL",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.ENDPOINT_NOT_FOUND",
    "mlflow.protos.databricks_pb2.ErrorCode.Name",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.protos.service_pb2.GetExperimentByName",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.DeleteExperiment": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.DeleteExperiment"
  },
  "type": "import"
 },
 "mlflow.store.tracking.rest_store.DeleteRun": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.DeleteRun"
  },
  "type": "import"
 },
 "mlflow.store.tracking.rest_store.DeleteTag": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.DeleteTag"
  },
  "type": "import"
 },
 "mlflow.store.tracking.rest_store.Experiment": {
  "data": {
   "shadows": "mlflow.entities.Experiment"
  },
  "type": "import"
 },
 "mlflow.store.tracking.rest_store.GetExperiment": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.GetExperiment"
  },
  "type": "import"
 },
 "mlflow.store.tracking.rest_store.GetExperimentByName": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.GetExperimentByName"
  },
  "type": "import"
 },
 "mlflow.store.tracking.rest_store.GetMetricHistory": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.GetMetricHistory"
  },
  "type": "import"
 },
 "mlflow.store.tracking.rest_store.GetRun": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.GetRun"
  },
  "type": "import"
 },
 "mlflow.store.tracking.rest_store.ListExperiments": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.ListExperiments"
  },
  "type": "import"
 },
 "mlflow.store.tracking.rest_store.LogBatch": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.LogBatch"
  },
  "type": "import"
 },
 "mlflow.store.tracking.rest_store.LogMetric": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.LogMetric"
  },
  "type": "import"
 },
 "mlflow.store.tracking.rest_store.LogModel": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.LogModel"
  },
  "type": "import"
 },
 "mlflow.store.tracking.rest_store.LogParam": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.LogParam"
  },
  "type": "import"
 },
 "mlflow.store.tracking.rest_store.Metric": {
  "data": {
   "shadows": "mlflow.entities.Metric"
  },
  "type": "import"
 },
 "mlflow.store.tracking.rest_store.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.store.tracking.rest_store.MlflowService": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.MlflowService"
  },
  "type": "import"
 },
 "mlflow.store.tracking.rest_store.RestStore": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "mlflow.store.tracking.abstract_store.AbstractStore"
   ]
  },
  "type": "class"
 },
 "mlflow.store.tracking.rest_store.RestStore.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "mlflow.store.tracking.rest_store.RestStore",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore._call_endpoint": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "mlflow.store.tracking.rest_store._METHOD_TO_INFO",
    "mlflow.utils.rest_utils.call_endpoint"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore._search_runs": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "mlflow.entities.Run.from_proto",
    "mlflow.entities.ViewType.to_proto",
    "mlflow.protos.service_pb2.SearchRuns",
    "mlflow.utils.proto_json_utils.message_to_json",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.create_experiment": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.CreateExperiment",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.create_run": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "mlflow.entities.Run.from_proto",
    "mlflow.protos.service_pb2.CreateRun",
    "mlflow.utils.proto_json_utils.message_to_json",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.delete_experiment": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.DeleteExperiment",
    "mlflow.utils.proto_json_utils.message_to_json",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.delete_run": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.DeleteRun",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.delete_tag": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.DeleteTag",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.get_experiment": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "mlflow.entities.Experiment.from_proto",
    "mlflow.protos.service_pb2.GetExperiment",
    "mlflow.utils.proto_json_utils.message_to_json",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.get_experiment_by_name": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "mlflow.entities.Experiment.from_proto",
    "mlflow.entities.ViewType.ALL",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.ErrorCode.Name",
    "mlflow.protos.databricks_pb2.REQUEST_LIMIT_EXCEEDED",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.protos.service_pb2.GetExperimentByName",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.get_metric_history": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "mlflow.entities.Metric.from_proto",
    "mlflow.protos.service_pb2.GetMetricHistory",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.get_run": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "mlflow.entities.Run.from_proto",
    "mlflow.protos.service_pb2.GetRun",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.list_experiments": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "mlflow.entities.Experiment.from_proto",
    "mlflow.entities.ViewType.ACTIVE_ONLY",
    "mlflow.protos.service_pb2.ListExperiments",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.log_batch": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.LogBatch",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.log_metric": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.LogMetric",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.log_param": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.LogParam",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.record_logged_model": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.LogModel",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.rename_experiment": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.UpdateExperiment",
    "mlflow.utils.proto_json_utils.message_to_json",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.restore_experiment": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.RestoreExperiment",
    "mlflow.utils.proto_json_utils.message_to_json",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.restore_run": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.RestoreRun",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.set_experiment_tag": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.SetExperimentTag",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.set_tag": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.SetTag",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.update_run_info": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "mlflow.entities.RunInfo.from_proto",
    "mlflow.protos.service_pb2.UpdateRun",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestoreExperiment": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.RestoreExperiment"
  },
  "type": "import"
 },
 "mlflow.store.tracking.rest_store.RestoreRun": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.RestoreRun"
  },
  "type": "import"
 },
 "mlflow.store.tracking.rest_store.Run": {
  "data": {
   "shadows": "mlflow.entities.Run"
  },
  "type": "import"
 },
 "mlflow.store.tracking.rest_store.RunInfo": {
  "data": {
   "shadows": "mlflow.entities.RunInfo"
  },
  "type": "import"
 },
 "mlflow.store.tracking.rest_store.SearchRuns": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.SearchRuns"
  },
  "type": "import"
 },
 "mlflow.store.tracking.rest_store.SetExperimentTag": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.SetExperimentTag"
  },
  "type": "import"
 },
 "mlflow.store.tracking.rest_store.SetTag": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.SetTag"
  },
  "type": "import"
 },
 "mlflow.store.tracking.rest_store.UpdateExperiment": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.UpdateExperiment"
  },
  "type": "import"
 },
 "mlflow.store.tracking.rest_store.UpdateRun": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.UpdateRun"
  },
  "type": "import"
 },
 "mlflow.store.tracking.rest_store.ViewType": {
  "data": {
   "shadows": "mlflow.entities.ViewType"
  },
  "type": "import"
 },
 "mlflow.store.tracking.rest_store._METHOD_TO_INFO": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mlflow.store.tracking.rest_store._PATH_PREFIX": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mlflow.store.tracking.rest_store.call_endpoint": {
  "data": {
   "shadows": "mlflow.utils.rest_utils.call_endpoint"
  },
  "type": "import"
 },
 "mlflow.store.tracking.rest_store.databricks_pb2": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2"
  },
  "type": "import"
 },
 "mlflow.store.tracking.rest_store.extract_api_info_for_service": {
  "data": {
   "shadows": "mlflow.utils.rest_utils.extract_api_info_for_service"
  },
  "type": "import"
 },
 "mlflow.store.tracking.rest_store.message_to_json": {
  "data": {
   "shadows": "mlflow.utils.proto_json_utils.message_to_json"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.store.tracking.sqlalchemy_store.logging",
    "mlflow.store.tracking.sqlalchemy_store.sqlalchemy"
   ]
  },
  "type": "module"
 },
 "mlflow.store.tracking.sqlalchemy_store.AbstractStore": {
  "data": {
   "shadows": "mlflow.store.tracking.abstract_store.AbstractStore"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.Base": {
  "data": {
   "shadows": "mlflow.store.db.base_sql_model.Base"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.Experiment": {
  "data": {
   "shadows": "mlflow.entities.Experiment"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.INTERNAL_ERROR": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INTERNAL_ERROR"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.INVALID_PARAMETER_VALUE": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.INVALID_STATE": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INVALID_STATE"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.LifecycleStage": {
  "data": {
   "shadows": "mlflow.entities.lifecycle_stage.LifecycleStage"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.MLFLOW_LOGGED_MODELS": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_LOGGED_MODELS"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.MSSQL": {
  "data": {
   "shadows": "mlflow.store.db.db_types.MSSQL"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.MYSQL": {
  "data": {
   "shadows": "mlflow.store.db.db_types.MYSQL"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.Model": {
  "data": {
   "shadows": "mlflow.models.Model"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.RESOURCE_ALREADY_EXISTS": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.RESOURCE_DOES_NOT_EXIST": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.RunStatus": {
  "data": {
   "shadows": "mlflow.entities.RunStatus"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.SEARCH_MAX_RESULTS_THRESHOLD": {
  "data": {
   "shadows": "mlflow.store.tracking.SEARCH_MAX_RESULTS_THRESHOLD"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.SearchUtils": {
  "data": {
   "shadows": "mlflow.utils.search_utils.SearchUtils"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.SourceType": {
  "data": {
   "shadows": "mlflow.entities.SourceType"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "mlflow.store.tracking.abstract_store.AbstractStore"
   ]
  },
  "type": "class"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "any",
    "len",
    "mlflow.store.db.base_sql_model.Base.metadata.bind",
    "mlflow.store.tracking.dbmodels.models.SqlExperiment.__tablename__",
    "mlflow.store.tracking.dbmodels.models.SqlExperimentTag.__tablename__",
    "mlflow.store.tracking.dbmodels.models.SqlLatestMetric.__tablename__",
    "mlflow.store.tracking.dbmodels.models.SqlMetric.__tablename__",
    "mlflow.store.tracking.dbmodels.models.SqlParam.__tablename__",
    "mlflow.store.tracking.dbmodels.models.SqlRun.__tablename__",
    "mlflow.store.tracking.dbmodels.models.SqlTag.__tablename__",
    "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore",
    "mlflow.store.tracking.sqlalchemy_store.sqlalchemy",
    "mlflow.utils.file_utils.local_file_uri_to_path",
    "mlflow.utils.file_utils.mkdir",
    "mlflow.utils.uri.extract_db_type_from_uri",
    "mlflow.utils.uri.is_local_uri",
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._check_experiment_is_active": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._check_run_is_active": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._check_run_is_deleted": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "mlflow.entities.lifecycle_stage.LifecycleStage.DELETED",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._create_default_experiment": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "decorate",
    "int",
    "list",
    "mlflow.entities.Experiment.DEFAULT_EXPERIMENT_NAME",
    "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
    "mlflow.store.tracking.dbmodels.models.SqlExperiment.__tablename__",
    "mlflow.store.tracking.dbmodels.models.SqlExperiment.artifact_location.name",
    "mlflow.store.tracking.dbmodels.models.SqlExperiment.experiment_id.name",
    "mlflow.store.tracking.dbmodels.models.SqlExperiment.lifecycle_stage.name",
    "mlflow.store.tracking.dbmodels.models.SqlExperiment.name.name",
    "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._create_default_experiment.decorate": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "mlflow.utils.string_utils.is_string_type"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._get_artifact_location": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "mlflow.utils.uri.append_to_uri_path",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._get_deleted_runs": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "mlflow.entities.lifecycle_stage.LifecycleStage.DELETED",
    "mlflow.store.tracking.dbmodels.models.SqlRun.lifecycle_stage",
    "mlflow.store.tracking.dbmodels.models.SqlRun.run_uuid"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._get_eager_experiment_query_options": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "mlflow.store.tracking.dbmodels.models.SqlExperiment.tags",
    "mlflow.store.tracking.sqlalchemy_store.sqlalchemy",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._get_eager_run_query_options": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "mlflow.store.tracking.dbmodels.models.SqlRun.latest_metrics",
    "mlflow.store.tracking.dbmodels.models.SqlRun.params",
    "mlflow.store.tracking.dbmodels.models.SqlRun.tags",
    "mlflow.store.tracking.sqlalchemy_store.sqlalchemy",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._get_experiment": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "mlflow.entities.lifecycle_stage.LifecycleStage.view_type_to_stages",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.store.tracking.dbmodels.models.SqlExperiment",
    "mlflow.store.tracking.dbmodels.models.SqlExperiment.experiment_id",
    "mlflow.store.tracking.dbmodels.models.SqlExperiment.lifecycle_stage.in_",
    "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._get_or_create": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "model"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._get_run": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "len",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_STATE",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.store.tracking.dbmodels.models.SqlRun",
    "mlflow.store.tracking.dbmodels.models.SqlRun.run_uuid"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._hard_delete_run": {
  "data": {
   "lineno": 442
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._list_experiments": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "int",
    "len",
    "mlflow.entities.ViewType.ACTIVE_ONLY",
    "mlflow.entities.lifecycle_stage.LifecycleStage.view_type_to_stages",
    "mlflow.store.tracking.dbmodels.models.SqlExperiment",
    "mlflow.store.tracking.dbmodels.models.SqlExperiment.experiment_id.in_",
    "mlflow.store.tracking.dbmodels.models.SqlExperiment.lifecycle_stage.in_",
    "mlflow.store.tracking.dbmodels.models.SqlExperiment.name.in_"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._save_to_db": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "list",
    "type"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._search_runs": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "compute_next_token",
    "len",
    "mlflow.entities.lifecycle_stage.LifecycleStage.view_type_to_stages",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.store.tracking.SEARCH_MAX_RESULTS_THRESHOLD",
    "mlflow.store.tracking.dbmodels.models.SqlRun",
    "mlflow.store.tracking.dbmodels.models.SqlRun.experiment_id.in_",
    "mlflow.store.tracking.dbmodels.models.SqlRun.lifecycle_stage.in_",
    "mlflow.store.tracking.sqlalchemy_store._get_attributes_filtering_clauses",
    "mlflow.store.tracking.sqlalchemy_store._get_orderby_clauses",
    "mlflow.store.tracking.sqlalchemy_store._get_sqlalchemy_filter_clauses",
    "mlflow.utils.search_utils.SearchUtils.parse_search_filter",
    "mlflow.utils.search_utils.SearchUtils.parse_start_offset_from_page_token",
    "set"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._search_runs.compute_next_token": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "mlflow.utils.search_utils.SearchUtils.create_page_token"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._set_zero_value_insertion_for_autoincrement_column": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "mlflow.store.db.db_types.MSSQL",
    "mlflow.store.db.db_types.MYSQL"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._try_get_run_tag": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "mlflow.store.tracking.dbmodels.models.SqlTag",
    "mlflow.store.tracking.dbmodels.models.SqlTag.key",
    "mlflow.store.tracking.dbmodels.models.SqlTag.run_uuid"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._unset_zero_value_insertion_for_autoincrement_column": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "mlflow.store.db.db_types.MSSQL",
    "mlflow.store.db.db_types.MYSQL"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._update_latest_metric_if_necessary": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "_compare_metrics",
    "mlflow.store.tracking.dbmodels.models.SqlLatestMetric",
    "mlflow.store.tracking.dbmodels.models.SqlLatestMetric.key",
    "mlflow.store.tracking.dbmodels.models.SqlLatestMetric.run_uuid",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._update_latest_metric_if_necessary._compare_metrics": {
  "data": {
   "lineno": 484
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.create_experiment": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS",
    "mlflow.store.tracking.dbmodels.models.SqlExperiment",
    "mlflow.store.tracking.sqlalchemy_store.sqlalchemy",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.create_run": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "mlflow.entities.RunStatus.RUNNING",
    "mlflow.entities.RunStatus.to_string",
    "mlflow.entities.SourceType.UNKNOWN",
    "mlflow.entities.SourceType.to_string",
    "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
    "mlflow.store.tracking.dbmodels.models.SqlRun",
    "mlflow.store.tracking.dbmodels.models.SqlTag",
    "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore",
    "mlflow.store.tracking.sqlalchemy_store.uuid",
    "mlflow.utils.uri.append_to_uri_path"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.delete_experiment": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "mlflow.entities.ViewType.ACTIVE_ONLY",
    "mlflow.entities.lifecycle_stage.LifecycleStage.DELETED"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.delete_run": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "mlflow.entities.lifecycle_stage.LifecycleStage.DELETED"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.delete_tag": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "len",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_STATE",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.store.tracking.dbmodels.models.SqlTag"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.get_experiment": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "mlflow.entities.ViewType.ALL"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.get_experiment_by_name": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "mlflow.entities.ViewType.ALL",
    "mlflow.entities.lifecycle_stage.LifecycleStage.view_type_to_stages",
    "mlflow.store.tracking.dbmodels.models.SqlExperiment",
    "mlflow.store.tracking.dbmodels.models.SqlExperiment.lifecycle_stage.in_",
    "mlflow.store.tracking.dbmodels.models.SqlExperiment.name"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.get_metric_history": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "mlflow.store.tracking.dbmodels.models.SqlMetric"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.get_run": {
  "data": {
   "lineno": 419
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.list_experiments": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "mlflow.entities.ViewType.ACTIVE_ONLY"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.log_batch": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "Exception",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INTERNAL_ERROR",
    "mlflow.utils.validation._validate_batch_log_data",
    "mlflow.utils.validation._validate_batch_log_limits",
    "mlflow.utils.validation._validate_run_id"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.log_metric": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "mlflow.store.tracking.dbmodels.models.SqlMetric",
    "mlflow.store.tracking.sqlalchemy_store.math",
    "mlflow.utils.validation._validate_metric"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.log_param": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "len",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.store.tracking.dbmodels.models.SqlParam",
    "mlflow.store.tracking.sqlalchemy_store.sqlalchemy"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.record_logged_model": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "mlflow.models.Model",
    "mlflow.store.tracking.dbmodels.models.SqlTag",
    "mlflow.store.tracking.sqlalchemy_store.json",
    "mlflow.utils.mlflow_tags.MLFLOW_LOGGED_MODELS",
    "mlflow.utils.validation._validate_tag",
    "type"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.rename_experiment": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "mlflow.entities.ViewType.ALL",
    "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_STATE"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.restore_experiment": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "mlflow.entities.ViewType.DELETED_ONLY",
    "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.restore_run": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.set_experiment_tag": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "mlflow.entities.ViewType.ALL",
    "mlflow.store.tracking.dbmodels.models.SqlExperimentTag",
    "mlflow.utils.validation._validate_experiment_tag"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.set_tag": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "mlflow.store.tracking.dbmodels.models.SqlTag",
    "mlflow.utils.validation._validate_tag"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.update_run_info": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "mlflow.entities.RunStatus.to_string"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlExperiment": {
  "data": {
   "shadows": "mlflow.store.tracking.dbmodels.models.SqlExperiment"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlExperimentTag": {
  "data": {
   "shadows": "mlflow.store.tracking.dbmodels.models.SqlExperimentTag"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlLatestMetric": {
  "data": {
   "shadows": "mlflow.store.tracking.dbmodels.models.SqlLatestMetric"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlMetric": {
  "data": {
   "shadows": "mlflow.store.tracking.dbmodels.models.SqlMetric"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlParam": {
  "data": {
   "shadows": "mlflow.store.tracking.dbmodels.models.SqlParam"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlRun": {
  "data": {
   "shadows": "mlflow.store.tracking.dbmodels.models.SqlRun"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlTag": {
  "data": {
   "shadows": "mlflow.store.tracking.dbmodels.models.SqlTag"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.ViewType": {
  "data": {
   "shadows": "mlflow.entities.ViewType"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store._get_attributes_filtering_clauses": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "getattr",
    "mlflow.store.tracking.dbmodels.models.SqlRun",
    "mlflow.store.tracking.dbmodels.models.SqlRun.get_attribute_name",
    "mlflow.utils.search_utils.SearchUtils.filter_ops.get",
    "mlflow.utils.search_utils.SearchUtils.is_attribute",
    "op"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store._get_orderby_clauses": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "getattr",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.store.tracking.dbmodels.models.SqlLatestMetric",
    "mlflow.store.tracking.dbmodels.models.SqlParam",
    "mlflow.store.tracking.dbmodels.models.SqlRun",
    "mlflow.store.tracking.dbmodels.models.SqlRun.get_attribute_name",
    "mlflow.store.tracking.dbmodels.models.SqlRun.run_uuid",
    "mlflow.store.tracking.dbmodels.models.SqlRun.start_time.desc",
    "mlflow.store.tracking.dbmodels.models.SqlTag",
    "mlflow.utils.search_utils.SearchUtils.is_attribute",
    "mlflow.utils.search_utils.SearchUtils.is_metric",
    "mlflow.utils.search_utils.SearchUtils.is_param",
    "mlflow.utils.search_utils.SearchUtils.is_tag",
    "mlflow.utils.search_utils.SearchUtils.parse_order_by",
    "sqlalchemy.sql.expression.case"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store._get_sqlalchemy_filter_clauses": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "mlflow.store.tracking.sqlalchemy_store._to_sqlalchemy_filtering_statement"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store._logger": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mlflow.store.tracking.sqlalchemy_store._to_sqlalchemy_filtering_statement": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "float",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.store.tracking.dbmodels.models.SqlLatestMetric",
    "mlflow.store.tracking.dbmodels.models.SqlParam",
    "mlflow.store.tracking.dbmodels.models.SqlTag",
    "mlflow.utils.search_utils.SearchUtils.filter_ops.get",
    "mlflow.utils.search_utils.SearchUtils.is_attribute",
    "mlflow.utils.search_utils.SearchUtils.is_metric",
    "mlflow.utils.search_utils.SearchUtils.is_param",
    "mlflow.utils.search_utils.SearchUtils.is_tag",
    "op"
   ]
  },
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store._validate_batch_log_data": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_batch_log_data"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store._validate_batch_log_limits": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_batch_log_limits"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store._validate_experiment_tag": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_experiment_tag"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store._validate_metric": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_metric"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store._validate_run_id": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_run_id"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store._validate_tag": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_tag"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.append_to_uri_path": {
  "data": {
   "shadows": "mlflow.utils.uri.append_to_uri_path"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.extract_db_type_from_uri": {
  "data": {
   "shadows": "mlflow.utils.uri.extract_db_type_from_uri"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.is_local_uri": {
  "data": {
   "shadows": "mlflow.utils.uri.is_local_uri"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.is_string_type": {
  "data": {
   "shadows": "mlflow.utils.string_utils.is_string_type"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.local_file_uri_to_path": {
  "data": {
   "shadows": "mlflow.utils.file_utils.local_file_uri_to_path"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.mkdir": {
  "data": {
   "shadows": "mlflow.utils.file_utils.mkdir"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.mlflow.store.db.utils": {
  "data": {
   "shadows": "mlflow.store.db.utils"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.sql": {
  "data": {
   "shadows": "sqlalchemy.sql.expression"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.sqlalchemy": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "mlflow.store.tracking.sqlalchemy_store.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "mlflow.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users": {
  "data": {},
  "type": "module"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.env": {
  "data": {
   "symbols_in_volume": [
    "alembic.context.config",
    "alembic.context.is_offline_mode",
    "logging.config.fileConfig",
    "mlflow.store.db.base_sql_model.Base.metadata",
    "mlflow.temporary_db_migrations_for_pre_1_users.env.config",
    "mlflow.temporary_db_migrations_for_pre_1_users.env.run_migrations_offline",
    "mlflow.temporary_db_migrations_for_pre_1_users.env.run_migrations_online"
   ]
  },
  "type": "module"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.env.Base": {
  "data": {
   "shadows": "mlflow.store.db.base_sql_model.Base"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.env.config": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.env.context": {
  "data": {
   "shadows": "alembic.context"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.env.engine_from_config": {
  "data": {
   "shadows": "sqlalchemy.engine_from_config"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.env.fileConfig": {
  "data": {
   "shadows": "logging.config.fileConfig"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.env.pool": {
  "data": {
   "shadows": "sqlalchemy.pool"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.env.run_migrations_offline": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "alembic.context.begin_transaction",
    "alembic.context.configure",
    "alembic.context.run_migrations",
    "mlflow.temporary_db_migrations_for_pre_1_users.env.config",
    "mlflow.temporary_db_migrations_for_pre_1_users.env.target_metadata"
   ]
  },
  "type": "function"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.env.run_migrations_online": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "alembic.context.begin_transaction",
    "alembic.context.configure",
    "alembic.context.run_migrations",
    "mlflow.temporary_db_migrations_for_pre_1_users.env.config",
    "mlflow.temporary_db_migrations_for_pre_1_users.env.target_metadata",
    "sqlalchemy.engine_from_config",
    "sqlalchemy.pool.NullPool"
   ]
  },
  "type": "function"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.env.target_metadata": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions": {
  "data": {},
  "type": "module"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.Base": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.BigInteger": {
  "data": {
   "shadows": "sqlalchemy.BigInteger"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.CheckConstraint": {
  "data": {
   "shadows": "sqlalchemy.CheckConstraint"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.Float": {
  "data": {
   "shadows": "sqlalchemy.Float"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.PrimaryKeyConstraint": {
  "data": {
   "shadows": "sqlalchemy.PrimaryKeyConstraint"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.RunStatusTypes": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.SourceTypes": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.SqlExperiment": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.Base",
    "sqlalchemy.CheckConstraint",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String"
   ]
  },
  "type": "class"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.SqlExperiment.__repr__": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.SqlRun": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "int",
    "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.Base",
    "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.RunStatusTypes",
    "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.SourceTypes",
    "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.time",
    "sqlalchemy.BigInteger",
    "sqlalchemy.CheckConstraint",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.backref": {
  "data": {
   "shadows": "sqlalchemy.orm.backref"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.branch_labels": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.column": {
  "data": {
   "shadows": "sqlalchemy.column"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.depends_on": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.down_revision": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.downgrade": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.revision": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.upgrade": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "alembic.op.get_bind",
    "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.SqlExperiment",
    "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.SqlRun",
    "sqlalchemy.column"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking": {
  "data": {},
  "type": "module"
 },
 "mlflow.tracking.MlflowClient": {
  "data": {
   "shadows": "mlflow.tracking.client.MlflowClient"
  },
  "type": "import"
 },
 "mlflow.tracking._EXPERIMENT_ID_ENV_VAR": {
  "data": {
   "shadows": "mlflow.tracking.fluent._EXPERIMENT_ID_ENV_VAR"
  },
  "type": "import"
 },
 "mlflow.tracking._EXPERIMENT_NAME_ENV_VAR": {
  "data": {
   "shadows": "mlflow.tracking.fluent._EXPERIMENT_NAME_ENV_VAR"
  },
  "type": "import"
 },
 "mlflow.tracking._RUN_ID_ENV_VAR": {
  "data": {
   "shadows": "mlflow.tracking.fluent._RUN_ID_ENV_VAR"
  },
  "type": "import"
 },
 "mlflow.tracking._TRACKING_URI_ENV_VAR": {
  "data": {
   "shadows": "mlflow.tracking._tracking_service.utils._TRACKING_URI_ENV_VAR"
  },
  "type": "import"
 },
 "mlflow.tracking.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mlflow.tracking._get_store": {
  "data": {
   "shadows": "mlflow.tracking._tracking_service.utils._get_store"
  },
  "type": "import"
 },
 "mlflow.tracking._model_registry": {
  "data": {},
  "type": "module"
 },
 "mlflow.tracking._model_registry.client": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.tracking._model_registry.client.logging"
   ]
  },
  "type": "module"
 },
 "mlflow.tracking._model_registry.client.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.tracking._model_registry.client.ModelRegistryClient": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.tracking._model_registry.client.ModelRegistryClient.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "mlflow.tracking._model_registry.utils._get_store"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._model_registry.client.ModelRegistryClient.create_model_version": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "mlflow.tracking._model_registry.client.ModelRegistryClient.create_registered_model": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "mlflow.tracking._model_registry.client.ModelRegistryClient.delete_model_version": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "mlflow.tracking._model_registry.client.ModelRegistryClient.delete_registered_model": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "mlflow.tracking._model_registry.client.ModelRegistryClient.get_latest_versions": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "mlflow.tracking._model_registry.client.ModelRegistryClient.get_model_version": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "mlflow.tracking._model_registry.client.ModelRegistryClient.get_model_version_download_uri": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "mlflow.tracking._model_registry.client.ModelRegistryClient.get_model_version_stages": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "mlflow.tracking._model_registry.client.ModelRegistryClient.get_registered_model": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "mlflow.tracking._model_registry.client.ModelRegistryClient.list_registered_models": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "mlflow.tracking._model_registry.client.ModelRegistryClient.rename_registered_model": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._model_registry.client.ModelRegistryClient.search_model_versions": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "mlflow.tracking._model_registry.client.ModelRegistryClient.transition_model_version_stage": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._model_registry.client.ModelRegistryClient.update_model_version": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "mlflow.tracking._model_registry.client.ModelRegistryClient.update_registered_model": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "mlflow.tracking._model_registry.client._logger": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mlflow.tracking._model_registry.client.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.tracking._model_registry.client.utils": {
  "data": {
   "shadows": "mlflow.tracking._model_registry.utils"
  },
  "type": "import"
 },
 "mlflow.tracking._model_registry.fluent": {
  "data": {},
  "type": "module"
 },
 "mlflow.tracking._model_registry.fluent.ErrorCode": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.ErrorCode"
  },
  "type": "import"
 },
 "mlflow.tracking._model_registry.fluent.MlflowClient": {
  "data": {
   "shadows": "mlflow.tracking.MlflowClient"
  },
  "type": "import"
 },
 "mlflow.tracking._model_registry.fluent.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.tracking._model_registry.fluent.RESOURCE_ALREADY_EXISTS": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS"
  },
  "type": "import"
 },
 "mlflow.tracking._model_registry.fluent.RunsArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.tracking._model_registry.fluent.eprint": {
  "data": {
   "shadows": "mlflow.utils.logging_utils.eprint"
  },
  "type": "import"
 },
 "mlflow.tracking._model_registry.fluent.experimental": {
  "data": {
   "shadows": "mlflow.utils.experimental"
  },
  "type": "import"
 },
 "mlflow.tracking._model_registry.fluent.register_model": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.ErrorCode.Name",
    "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS",
    "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository.get_underlying_uri",
    "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository.is_runs_uri",
    "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository.parse_runs_uri",
    "mlflow.tracking.MlflowClient",
    "mlflow.utils.experimental",
    "mlflow.utils.logging_utils.eprint"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._model_registry.registry": {
  "data": {},
  "type": "module"
 },
 "mlflow.tracking._model_registry.registry.ModelRegistryStoreRegistry": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "mlflow.tracking.registry.StoreRegistry"
   ]
  },
  "type": "class"
 },
 "mlflow.tracking._model_registry.registry.ModelRegistryStoreRegistry.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "mlflow.tracking._model_registry.registry.ModelRegistryStoreRegistry",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._model_registry.registry.ModelRegistryStoreRegistry.get_store": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "builder",
    "mlflow.tracking._tracking_service.utils.get_tracking_uri"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._model_registry.registry.StoreRegistry": {
  "data": {
   "shadows": "mlflow.tracking.registry.StoreRegistry"
  },
  "type": "import"
 },
 "mlflow.tracking._model_registry.registry.utils": {
  "data": {
   "shadows": "mlflow.tracking._tracking_service.utils"
  },
  "type": "import"
 },
 "mlflow.tracking._model_registry.utils": {
  "data": {
   "symbols_in_volume": [
    "mlflow.store.db.db_types.DATABASE_ENGINES",
    "mlflow.tracking._model_registry.registry.ModelRegistryStoreRegistry",
    "mlflow.tracking._model_registry.utils._get_databricks_rest_store",
    "mlflow.tracking._model_registry.utils._get_rest_store",
    "mlflow.tracking._model_registry.utils._get_sqlalchemy_store",
    "mlflow.tracking._model_registry.utils._model_registry_store_registry"
   ]
  },
  "type": "module"
 },
 "mlflow.tracking._model_registry.utils.DATABASE_ENGINES": {
  "data": {
   "shadows": "mlflow.store.db.db_types.DATABASE_ENGINES"
  },
  "type": "import"
 },
 "mlflow.tracking._model_registry.utils.ModelRegistryStoreRegistry": {
  "data": {
   "shadows": "mlflow.tracking._model_registry.registry.ModelRegistryStoreRegistry"
  },
  "type": "import"
 },
 "mlflow.tracking._model_registry.utils.RestStore": {
  "data": {
   "shadows": "mlflow.store.model_registry.rest_store.RestStore"
  },
  "type": "import"
 },
 "mlflow.tracking._model_registry.utils.SqlAlchemyStore": {
  "data": {
   "shadows": "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore"
  },
  "type": "import"
 },
 "mlflow.tracking._model_registry.utils._TRACKING_INSECURE_TLS_ENV_VAR": {
  "data": {
   "shadows": "mlflow.tracking._tracking_service.utils._TRACKING_INSECURE_TLS_ENV_VAR"
  },
  "type": "import"
 },
 "mlflow.tracking._model_registry.utils._TRACKING_PASSWORD_ENV_VAR": {
  "data": {
   "shadows": "mlflow.tracking._tracking_service.utils._TRACKING_PASSWORD_ENV_VAR"
  },
  "type": "import"
 },
 "mlflow.tracking._model_registry.utils._TRACKING_TOKEN_ENV_VAR": {
  "data": {
   "shadows": "mlflow.tracking._tracking_service.utils._TRACKING_TOKEN_ENV_VAR"
  },
  "type": "import"
 },
 "mlflow.tracking._model_registry.utils._TRACKING_USERNAME_ENV_VAR": {
  "data": {
   "shadows": "mlflow.tracking._tracking_service.utils._TRACKING_USERNAME_ENV_VAR"
  },
  "type": "import"
 },
 "mlflow.tracking._model_registry.utils._get_databricks_rest_store": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "mlflow.store.model_registry.rest_store.RestStore",
    "mlflow.utils.databricks_utils.get_databricks_host_creds",
    "mlflow.utils.uri.get_db_profile_from_uri"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._model_registry.utils._get_rest_store": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "mlflow.store.model_registry.rest_store.RestStore"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._model_registry.utils._get_rest_store.get_default_host_creds": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "mlflow.tracking._model_registry.utils.os",
    "mlflow.tracking._tracking_service.utils._TRACKING_INSECURE_TLS_ENV_VAR",
    "mlflow.tracking._tracking_service.utils._TRACKING_PASSWORD_ENV_VAR",
    "mlflow.tracking._tracking_service.utils._TRACKING_TOKEN_ENV_VAR",
    "mlflow.tracking._tracking_service.utils._TRACKING_USERNAME_ENV_VAR",
    "mlflow.utils.rest_utils.MlflowHostCreds"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._model_registry.utils._get_sqlalchemy_store": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._model_registry.utils._get_store": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "mlflow.tracking._model_registry.utils._model_registry_store_registry"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._model_registry.utils._model_registry_store_registry": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "mlflow.tracking._model_registry.utils.get_databricks_host_creds": {
  "data": {
   "shadows": "mlflow.utils.databricks_utils.get_databricks_host_creds"
  },
  "type": "import"
 },
 "mlflow.tracking._model_registry.utils.get_db_profile_from_uri": {
  "data": {
   "shadows": "mlflow.utils.uri.get_db_profile_from_uri"
  },
  "type": "import"
 },
 "mlflow.tracking._model_registry.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.tracking._model_registry.utils.rest_utils": {
  "data": {
   "shadows": "mlflow.utils.rest_utils"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service": {
  "data": {},
  "type": "module"
 },
 "mlflow.tracking._tracking_service.client": {
  "data": {},
  "type": "module"
 },
 "mlflow.tracking._tracking_service.client.ExperimentTag": {
  "data": {
   "shadows": "mlflow.entities.ExperimentTag"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.client.MLFLOW_USER": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_USER"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.client.Metric": {
  "data": {
   "shadows": "mlflow.entities.Metric"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.client.Model": {
  "data": {
   "shadows": "mlflow.models.Model"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.client.Param": {
  "data": {
   "shadows": "mlflow.entities.Param"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.client.RunStatus": {
  "data": {
   "shadows": "mlflow.entities.RunStatus"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.client.RunTag": {
  "data": {
   "shadows": "mlflow.entities.RunTag"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.client.SEARCH_MAX_RESULTS_DEFAULT": {
  "data": {
   "shadows": "mlflow.store.tracking.SEARCH_MAX_RESULTS_DEFAULT"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "mlflow.tracking._tracking_service.utils._get_store"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient._record_logged_model": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "mlflow.models.Model",
    "type"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.create_experiment": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "mlflow.utils.validation._validate_experiment_artifact_location",
    "mlflow.utils.validation._validate_experiment_name"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.create_run": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "int",
    "mlflow.entities.RunTag",
    "mlflow.tracking._tracking_service.client.time",
    "mlflow.utils.mlflow_tags.MLFLOW_USER",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.delete_experiment": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.delete_run": {
  "data": {
   "lineno": 314
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.delete_tag": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.download_artifacts": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "mlflow.store.artifact.artifact_repository_registry.get_artifact_repository"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.get_experiment": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.get_experiment_by_name": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.get_metric_history": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.get_run": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "mlflow.utils.validation._validate_run_id"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.list_artifacts": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "mlflow.store.artifact.artifact_repository_registry.get_artifact_repository"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.list_experiments": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "mlflow.entities.ViewType.ACTIVE_ONLY"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.list_run_infos": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "mlflow.entities.ViewType.ACTIVE_ONLY"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.log_artifact": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "mlflow.store.artifact.artifact_repository_registry.get_artifact_repository",
    "mlflow.tracking._tracking_service.client.os"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.log_artifacts": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "mlflow.store.artifact.artifact_repository_registry.get_artifact_repository"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.log_batch": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "len",
    "mlflow.utils.validation._validate_metric",
    "mlflow.utils.validation._validate_param_name",
    "mlflow.utils.validation._validate_tag_name"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.log_metric": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "int",
    "mlflow.entities.Metric",
    "mlflow.tracking._tracking_service.client.time",
    "mlflow.utils.validation._validate_metric"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.log_param": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "mlflow.entities.Param",
    "mlflow.utils.validation._validate_param_name",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.rename_experiment": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.restore_experiment": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.restore_run": {
  "data": {
   "lineno": 320
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.search_runs": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "mlflow.entities.ViewType.ACTIVE_ONLY",
    "mlflow.store.tracking.SEARCH_MAX_RESULTS_DEFAULT",
    "mlflow.utils.string_utils.is_string_type"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.set_experiment_tag": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "mlflow.entities.ExperimentTag",
    "mlflow.utils.validation._validate_tag_name",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.set_tag": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "mlflow.entities.RunTag",
    "mlflow.utils.validation._validate_tag_name",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.set_terminated": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "int",
    "mlflow.entities.RunStatus.FINISHED",
    "mlflow.entities.RunStatus.from_string",
    "mlflow.entities.RunStatus.to_string",
    "mlflow.tracking._tracking_service.client.time"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.ViewType": {
  "data": {
   "shadows": "mlflow.entities.ViewType"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.client._validate_experiment_artifact_location": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_experiment_artifact_location"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.client._validate_experiment_name": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_experiment_name"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.client._validate_metric": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_metric"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.client._validate_param_name": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_param_name"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.client._validate_run_id": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_run_id"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.client._validate_tag_name": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_tag_name"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.client.get_artifact_repository": {
  "data": {
   "shadows": "mlflow.store.artifact.artifact_repository_registry.get_artifact_repository"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.client.is_string_type": {
  "data": {
   "shadows": "mlflow.utils.string_utils.is_string_type"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.client.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.client.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.client.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.client.utils": {
  "data": {
   "shadows": "mlflow.tracking._tracking_service.utils"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.registry": {
  "data": {},
  "type": "module"
 },
 "mlflow.tracking._tracking_service.registry.StoreRegistry": {
  "data": {
   "shadows": "mlflow.tracking.registry.StoreRegistry"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.registry.TrackingStoreRegistry": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "mlflow.tracking.registry.StoreRegistry"
   ]
  },
  "type": "class"
 },
 "mlflow.tracking._tracking_service.registry.TrackingStoreRegistry.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "mlflow.tracking._tracking_service.registry.TrackingStoreRegistry",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.registry.TrackingStoreRegistry.get_store": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "builder",
    "mlflow.tracking._tracking_service.utils.get_tracking_uri"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.registry.utils": {
  "data": {
   "shadows": "mlflow.tracking._tracking_service.utils"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.utils": {
  "data": {
   "symbols_in_volume": [
    "mlflow.store.db.db_types.DATABASE_ENGINES",
    "mlflow.tracking._tracking_service.registry.TrackingStoreRegistry",
    "mlflow.tracking._tracking_service.utils._get_databricks_rest_store",
    "mlflow.tracking._tracking_service.utils._get_file_store",
    "mlflow.tracking._tracking_service.utils._get_rest_store",
    "mlflow.tracking._tracking_service.utils._get_sqlalchemy_store",
    "mlflow.tracking._tracking_service.utils._tracking_store_registry"
   ]
  },
  "type": "module"
 },
 "mlflow.tracking._tracking_service.utils.DATABASE_ENGINES": {
  "data": {
   "shadows": "mlflow.store.db.db_types.DATABASE_ENGINES"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.utils.DEFAULT_LOCAL_FILE_AND_ARTIFACT_PATH": {
  "data": {
   "shadows": "mlflow.store.tracking.DEFAULT_LOCAL_FILE_AND_ARTIFACT_PATH"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.utils.DatabricksRestStore": {
  "data": {
   "shadows": "mlflow.store.tracking.rest_store.DatabricksRestStore"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.utils.FileStore": {
  "data": {
   "shadows": "mlflow.store.tracking.file_store.FileStore"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.utils.GitCommandNotFound": {
  "data": {
   "shadows": "git.GitCommandNotFound"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.utils.InvalidGitRepositoryError": {
  "data": {
   "shadows": "git.InvalidGitRepositoryError"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.utils.NoSuchPathError": {
  "data": {
   "shadows": "git.NoSuchPathError"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.utils.Repo": {
  "data": {
   "shadows": "git.Repo"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.utils.RestStore": {
  "data": {
   "shadows": "mlflow.store.tracking.rest_store.RestStore"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.utils.SqlAlchemyStore": {
  "data": {
   "shadows": "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.utils.TrackingStoreRegistry": {
  "data": {
   "shadows": "mlflow.tracking._tracking_service.registry.TrackingStoreRegistry"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.utils._TRACKING_INSECURE_TLS_ENV_VAR": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mlflow.tracking._tracking_service.utils._TRACKING_PASSWORD_ENV_VAR": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mlflow.tracking._tracking_service.utils._TRACKING_TOKEN_ENV_VAR": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mlflow.tracking._tracking_service.utils._TRACKING_URI_ENV_VAR": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mlflow.tracking._tracking_service.utils._TRACKING_USERNAME_ENV_VAR": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mlflow.tracking._tracking_service.utils._get_databricks_rest_store": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "mlflow.store.tracking.rest_store.DatabricksRestStore",
    "mlflow.utils.databricks_utils.get_databricks_host_creds",
    "mlflow.utils.uri.get_db_profile_from_uri"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.utils._get_file_store": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "mlflow.store.tracking.file_store.FileStore"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.utils._get_git_url_if_present": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "git.GitCommandNotFound",
    "git.InvalidGitRepositoryError",
    "git.NoSuchPathError",
    "git.Repo",
    "mlflow.tracking._tracking_service.utils.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.utils._get_rest_store": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "mlflow.store.tracking.rest_store.RestStore"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.utils._get_rest_store.get_default_host_creds": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "mlflow.tracking._tracking_service.utils._TRACKING_INSECURE_TLS_ENV_VAR",
    "mlflow.tracking._tracking_service.utils._TRACKING_PASSWORD_ENV_VAR",
    "mlflow.tracking._tracking_service.utils._TRACKING_TOKEN_ENV_VAR",
    "mlflow.tracking._tracking_service.utils._TRACKING_USERNAME_ENV_VAR",
    "mlflow.tracking._tracking_service.utils.os",
    "mlflow.utils.rest_utils.MlflowHostCreds"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.utils._get_sqlalchemy_store": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "mlflow.store.tracking.DEFAULT_LOCAL_FILE_AND_ARTIFACT_PATH",
    "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.utils._get_store": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "mlflow.tracking._tracking_service.utils._tracking_store_registry"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.utils._tracking_store_registry": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "mlflow.tracking._tracking_service.utils._tracking_uri": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mlflow.tracking._tracking_service.utils.env": {
  "data": {
   "shadows": "mlflow.utils.env"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.utils.get_databricks_host_creds": {
  "data": {
   "shadows": "mlflow.utils.databricks_utils.get_databricks_host_creds"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.utils.get_db_profile_from_uri": {
  "data": {
   "shadows": "mlflow.utils.uri.get_db_profile_from_uri"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.utils.get_tracking_uri": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "mlflow.store.tracking.DEFAULT_LOCAL_FILE_AND_ARTIFACT_PATH",
    "mlflow.tracking._tracking_service.utils._TRACKING_URI_ENV_VAR",
    "mlflow.tracking._tracking_service.utils._tracking_uri",
    "mlflow.tracking._tracking_service.utils.os",
    "mlflow.utils.env.get_env",
    "mlflow.utils.file_utils.path_to_local_file_uri"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.utils.is_tracking_uri_set": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "mlflow.tracking._tracking_service.utils._TRACKING_URI_ENV_VAR",
    "mlflow.tracking._tracking_service.utils._tracking_uri",
    "mlflow.utils.env.get_env"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.utils.path_to_local_file_uri": {
  "data": {
   "shadows": "mlflow.utils.file_utils.path_to_local_file_uri"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.utils.rest_utils": {
  "data": {
   "shadows": "mlflow.utils.rest_utils"
  },
  "type": "import"
 },
 "mlflow.tracking._tracking_service.utils.set_tracking_uri": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "mlflow.tracking._tracking_service.utils._tracking_uri"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking._tracking_service.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlflow.tracking.artifact_utils": {
  "data": {},
  "type": "module"
 },
 "mlflow.tracking.artifact_utils.INVALID_PARAMETER_VALUE": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  },
  "type": "import"
 },
 "mlflow.tracking.artifact_utils.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.tracking.artifact_utils.ModelsArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.tracking.artifact_utils._download_artifact_from_uri": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "mlflow.store.artifact.artifact_repository_registry.get_artifact_repository",
    "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository.is_models_uri",
    "mlflow.tracking.artifact_utils.posixpath",
    "six.moves.urllib.parse.urlparse",
    "six.moves.urllib.parse.urlunparse"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.artifact_utils._get_store": {
  "data": {
   "shadows": "mlflow.tracking._tracking_service.utils._get_store"
  },
  "type": "import"
 },
 "mlflow.tracking.artifact_utils.append_to_uri_path": {
  "data": {
   "shadows": "mlflow.utils.uri.append_to_uri_path"
  },
  "type": "import"
 },
 "mlflow.tracking.artifact_utils.get_artifact_repository": {
  "data": {
   "shadows": "mlflow.store.artifact.artifact_repository_registry.get_artifact_repository"
  },
  "type": "import"
 },
 "mlflow.tracking.artifact_utils.get_artifact_uri": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.tracking._tracking_service.utils._get_store",
    "mlflow.utils.uri.append_to_uri_path",
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.artifact_utils.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "mlflow.tracking.artifact_utils.urllib": {
  "data": {
   "shadows": "six.moves.urllib"
  },
  "type": "import"
 },
 "mlflow.tracking.client": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.tracking.client.logging"
   ]
  },
  "type": "module"
 },
 "mlflow.tracking.client.ALL_STAGES": {
  "data": {
   "shadows": "mlflow.entities.model_registry.model_version_stages.ALL_STAGES"
  },
  "type": "import"
 },
 "mlflow.tracking.client.FEATURE_DISABLED": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.FEATURE_DISABLED"
  },
  "type": "import"
 },
 "mlflow.tracking.client.MlflowClient": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.tracking.client.MlflowClient.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "mlflow.tracking._tracking_service.client.TrackingServiceClient",
    "mlflow.tracking._tracking_service.utils.get_tracking_uri"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient._get_registry_client": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "getattr",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.FEATURE_DISABLED",
    "mlflow.tracking._model_registry.client.ModelRegistryClient",
    "mlflow.tracking.registry.UnsupportedModelRegistryStoreURIException",
    "setattr"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient._record_logged_model": {
  "data": {
   "lineno": 268
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.create_experiment": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.create_model_version": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "mlflow.utils.experimental"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.create_registered_model": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "mlflow.utils.experimental"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.create_run": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.delete_experiment": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.delete_model_version": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "mlflow.utils.experimental"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.delete_registered_model": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "mlflow.utils.experimental"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.delete_run": {
  "data": {
   "lineno": 312
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.delete_tag": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.download_artifacts": {
  "data": {
   "lineno": 288
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.get_experiment": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.get_experiment_by_name": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.get_latest_versions": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "mlflow.utils.experimental"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.get_metric_history": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.get_model_version": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "mlflow.utils.experimental"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.get_model_version_details": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "mlflow.utils.deprecated"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.get_model_version_download_uri": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "mlflow.utils.experimental"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.get_model_version_stages": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "mlflow.entities.model_registry.model_version_stages.ALL_STAGES",
    "mlflow.utils.experimental"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.get_registered_model": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "mlflow.utils.experimental"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.get_registered_model_details": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "mlflow.utils.deprecated"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.get_run": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.list_artifacts": {
  "data": {
   "lineno": 277
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.list_experiments": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.list_registered_models": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "mlflow.utils.experimental"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.list_run_infos": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "mlflow.entities.ViewType.ACTIVE_ONLY"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.log_artifact": {
  "data": {
   "lineno": 250
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.log_artifacts": {
  "data": {
   "lineno": 259
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.log_batch": {
  "data": {
   "lineno": 236
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.log_metric": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.log_param": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.rename_experiment": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.rename_registered_model": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "mlflow.utils.experimental"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.restore_experiment": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.restore_run": {
  "data": {
   "lineno": 318
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.search_model_versions": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "mlflow.utils.experimental"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.search_runs": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "mlflow.entities.ViewType.ACTIVE_ONLY",
    "mlflow.store.tracking.SEARCH_MAX_RESULTS_DEFAULT"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.set_experiment_tag": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.set_tag": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.set_terminated": {
  "data": {
   "lineno": 304
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.transition_model_version_stage": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "mlflow.utils.experimental"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.update_model_version": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.tracking.client._logger",
    "mlflow.utils.experimental"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.update_registered_model": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.tracking.client._logger",
    "mlflow.utils.experimental"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.tracking.client.ModelRegistryClient": {
  "data": {
   "shadows": "mlflow.tracking._model_registry.client.ModelRegistryClient"
  },
  "type": "import"
 },
 "mlflow.tracking.client.SEARCH_MAX_RESULTS_DEFAULT": {
  "data": {
   "shadows": "mlflow.store.tracking.SEARCH_MAX_RESULTS_DEFAULT"
  },
  "type": "import"
 },
 "mlflow.tracking.client.TrackingServiceClient": {
  "data": {
   "shadows": "mlflow.tracking._tracking_service.client.TrackingServiceClient"
  },
  "type": "import"
 },
 "mlflow.tracking.client.UnsupportedModelRegistryStoreURIException": {
  "data": {
   "shadows": "mlflow.tracking.registry.UnsupportedModelRegistryStoreURIException"
  },
  "type": "import"
 },
 "mlflow.tracking.client.ViewType": {
  "data": {
   "shadows": "mlflow.entities.ViewType"
  },
  "type": "import"
 },
 "mlflow.tracking.client._logger": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mlflow.tracking.client.deprecated": {
  "data": {
   "shadows": "mlflow.utils.deprecated"
  },
  "type": "import"
 },
 "mlflow.tracking.client.experimental": {
  "data": {
   "shadows": "mlflow.utils.experimental"
  },
  "type": "import"
 },
 "mlflow.tracking.client.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.tracking.client.utils": {
  "data": {
   "shadows": "mlflow.tracking._tracking_service.utils"
  },
  "type": "import"
 },
 "mlflow.tracking.context": {
  "data": {},
  "type": "module"
 },
 "mlflow.tracking.context.abstract_context": {
  "data": {},
  "type": "module"
 },
 "mlflow.tracking.context.abstract_context.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "mlflow.tracking.context.abstract_context.RunContextProvider": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.tracking.context.abstract_context.RunContextProvider.in_context": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context.abstract_context.RunContextProvider.tags": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context.abstract_context.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "mlflow.tracking.context.databricks_job_context": {
  "data": {},
  "type": "module"
 },
 "mlflow.tracking.context.databricks_job_context.DatabricksJobRunContext": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "mlflow.tracking.context.abstract_context.RunContextProvider"
   ]
  },
  "type": "class"
 },
 "mlflow.tracking.context.databricks_job_context.DatabricksJobRunContext.in_context": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "mlflow.utils.databricks_utils.is_in_databricks_job"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context.databricks_job_context.DatabricksJobRunContext.tags": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "mlflow.entities.SourceType.JOB",
    "mlflow.entities.SourceType.to_string",
    "mlflow.utils.databricks_utils.get_job_id",
    "mlflow.utils.databricks_utils.get_job_run_id",
    "mlflow.utils.databricks_utils.get_job_type",
    "mlflow.utils.databricks_utils.get_webapp_url",
    "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_JOB_ID",
    "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_JOB_RUN_ID",
    "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_JOB_TYPE",
    "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_WEBAPP_URL",
    "mlflow.utils.mlflow_tags.MLFLOW_SOURCE_NAME",
    "mlflow.utils.mlflow_tags.MLFLOW_SOURCE_TYPE"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context.databricks_job_context.MLFLOW_DATABRICKS_JOB_ID": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_JOB_ID"
  },
  "type": "import"
 },
 "mlflow.tracking.context.databricks_job_context.MLFLOW_DATABRICKS_JOB_RUN_ID": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_JOB_RUN_ID"
  },
  "type": "import"
 },
 "mlflow.tracking.context.databricks_job_context.MLFLOW_DATABRICKS_JOB_TYPE": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_JOB_TYPE"
  },
  "type": "import"
 },
 "mlflow.tracking.context.databricks_job_context.MLFLOW_DATABRICKS_WEBAPP_URL": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_WEBAPP_URL"
  },
  "type": "import"
 },
 "mlflow.tracking.context.databricks_job_context.MLFLOW_SOURCE_NAME": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_SOURCE_NAME"
  },
  "type": "import"
 },
 "mlflow.tracking.context.databricks_job_context.MLFLOW_SOURCE_TYPE": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_SOURCE_TYPE"
  },
  "type": "import"
 },
 "mlflow.tracking.context.databricks_job_context.RunContextProvider": {
  "data": {
   "shadows": "mlflow.tracking.context.abstract_context.RunContextProvider"
  },
  "type": "import"
 },
 "mlflow.tracking.context.databricks_job_context.SourceType": {
  "data": {
   "shadows": "mlflow.entities.SourceType"
  },
  "type": "import"
 },
 "mlflow.tracking.context.databricks_job_context.databricks_utils": {
  "data": {
   "shadows": "mlflow.utils.databricks_utils"
  },
  "type": "import"
 },
 "mlflow.tracking.context.databricks_notebook_context": {
  "data": {},
  "type": "module"
 },
 "mlflow.tracking.context.databricks_notebook_context.DatabricksNotebookRunContext": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "mlflow.tracking.context.abstract_context.RunContextProvider"
   ]
  },
  "type": "class"
 },
 "mlflow.tracking.context.databricks_notebook_context.DatabricksNotebookRunContext.in_context": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "mlflow.utils.databricks_utils.is_in_databricks_notebook"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context.databricks_notebook_context.DatabricksNotebookRunContext.tags": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "mlflow.entities.SourceType.NOTEBOOK",
    "mlflow.entities.SourceType.to_string",
    "mlflow.utils.databricks_utils.get_notebook_id",
    "mlflow.utils.databricks_utils.get_notebook_path",
    "mlflow.utils.databricks_utils.get_webapp_url",
    "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_NOTEBOOK_ID",
    "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_NOTEBOOK_PATH",
    "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_WEBAPP_URL",
    "mlflow.utils.mlflow_tags.MLFLOW_SOURCE_NAME",
    "mlflow.utils.mlflow_tags.MLFLOW_SOURCE_TYPE"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context.databricks_notebook_context.MLFLOW_DATABRICKS_NOTEBOOK_ID": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_NOTEBOOK_ID"
  },
  "type": "import"
 },
 "mlflow.tracking.context.databricks_notebook_context.MLFLOW_DATABRICKS_NOTEBOOK_PATH": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_NOTEBOOK_PATH"
  },
  "type": "import"
 },
 "mlflow.tracking.context.databricks_notebook_context.MLFLOW_DATABRICKS_WEBAPP_URL": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_WEBAPP_URL"
  },
  "type": "import"
 },
 "mlflow.tracking.context.databricks_notebook_context.MLFLOW_SOURCE_NAME": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_SOURCE_NAME"
  },
  "type": "import"
 },
 "mlflow.tracking.context.databricks_notebook_context.MLFLOW_SOURCE_TYPE": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_SOURCE_TYPE"
  },
  "type": "import"
 },
 "mlflow.tracking.context.databricks_notebook_context.RunContextProvider": {
  "data": {
   "shadows": "mlflow.tracking.context.abstract_context.RunContextProvider"
  },
  "type": "import"
 },
 "mlflow.tracking.context.databricks_notebook_context.SourceType": {
  "data": {
   "shadows": "mlflow.entities.SourceType"
  },
  "type": "import"
 },
 "mlflow.tracking.context.databricks_notebook_context.databricks_utils": {
  "data": {
   "shadows": "mlflow.utils.databricks_utils"
  },
  "type": "import"
 },
 "mlflow.tracking.context.default_context": {
  "data": {},
  "type": "module"
 },
 "mlflow.tracking.context.default_context.DefaultRunContext": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "mlflow.tracking.context.abstract_context.RunContextProvider"
   ]
  },
  "type": "class"
 },
 "mlflow.tracking.context.default_context.DefaultRunContext.in_context": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "mlflow.tracking.context.default_context.DefaultRunContext.tags": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "mlflow.entities.SourceType.to_string",
    "mlflow.tracking.context.default_context._get_source_name",
    "mlflow.tracking.context.default_context._get_source_type",
    "mlflow.tracking.context.default_context._get_user",
    "mlflow.utils.mlflow_tags.MLFLOW_SOURCE_NAME",
    "mlflow.utils.mlflow_tags.MLFLOW_SOURCE_TYPE",
    "mlflow.utils.mlflow_tags.MLFLOW_USER"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context.default_context.MLFLOW_SOURCE_NAME": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_SOURCE_NAME"
  },
  "type": "import"
 },
 "mlflow.tracking.context.default_context.MLFLOW_SOURCE_TYPE": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_SOURCE_TYPE"
  },
  "type": "import"
 },
 "mlflow.tracking.context.default_context.MLFLOW_USER": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_USER"
  },
  "type": "import"
 },
 "mlflow.tracking.context.default_context.RunContextProvider": {
  "data": {
   "shadows": "mlflow.tracking.context.abstract_context.RunContextProvider"
  },
  "type": "import"
 },
 "mlflow.tracking.context.default_context.SourceType": {
  "data": {
   "shadows": "mlflow.entities.SourceType"
  },
  "type": "import"
 },
 "mlflow.tracking.context.default_context._DEFAULT_USER": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mlflow.tracking.context.default_context._get_main_file": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "len",
    "mlflow.tracking.context.default_context.sys"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context.default_context._get_source_name": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "mlflow.tracking.context.default_context._get_main_file"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context.default_context._get_source_type": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "mlflow.entities.SourceType.LOCAL"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context.default_context._get_user": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ImportError",
    "mlflow.tracking.context.default_context._DEFAULT_USER",
    "mlflow.tracking.context.default_context.getpass"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context.default_context.getpass": {
  "data": {
   "shadows": "getpass"
  },
  "type": "import"
 },
 "mlflow.tracking.context.default_context.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlflow.tracking.context.git_context": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.tracking.context.git_context.logging"
   ]
  },
  "type": "module"
 },
 "mlflow.tracking.context.git_context.GitRunContext": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "mlflow.tracking.context.abstract_context.RunContextProvider"
   ]
  },
  "type": "class"
 },
 "mlflow.tracking.context.git_context.GitRunContext.__init__": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "mlflow.tracking.context.git_context.GitRunContext._source_version": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "mlflow.tracking.context.git_context._get_source_version",
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context.git_context.GitRunContext.in_context": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "mlflow.tracking.context.git_context.GitRunContext.tags": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "mlflow.utils.mlflow_tags.MLFLOW_GIT_COMMIT"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context.git_context.MLFLOW_GIT_COMMIT": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_GIT_COMMIT"
  },
  "type": "import"
 },
 "mlflow.tracking.context.git_context.RunContextProvider": {
  "data": {
   "shadows": "mlflow.tracking.context.abstract_context.RunContextProvider"
  },
  "type": "import"
 },
 "mlflow.tracking.context.git_context._get_git_commit": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "mlflow.tracking.context.git_context._logger",
    "mlflow.tracking.context.git_context.git",
    "mlflow.tracking.context.git_context.os"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context.git_context._get_main_file": {
  "data": {
   "shadows": "mlflow.tracking.context.default_context._get_main_file"
  },
  "type": "import"
 },
 "mlflow.tracking.context.git_context._get_source_version": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "mlflow.tracking.context.default_context._get_main_file",
    "mlflow.tracking.context.git_context._get_git_commit"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context.git_context._logger": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "mlflow.tracking.context.git_context.git": {
  "data": {
   "shadows": "git"
  },
  "type": "import"
 },
 "mlflow.tracking.context.git_context.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.tracking.context.git_context.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.tracking.context.registry": {
  "data": {
   "symbols_in_volume": [
    "mlflow.tracking.context.databricks_job_context.DatabricksJobRunContext",
    "mlflow.tracking.context.databricks_notebook_context.DatabricksNotebookRunContext",
    "mlflow.tracking.context.default_context.DefaultRunContext",
    "mlflow.tracking.context.git_context.GitRunContext",
    "mlflow.tracking.context.registry.RunContextProviderRegistry",
    "mlflow.tracking.context.registry._run_context_provider_registry"
   ]
  },
  "type": "module"
 },
 "mlflow.tracking.context.registry.DatabricksJobRunContext": {
  "data": {
   "shadows": "mlflow.tracking.context.databricks_job_context.DatabricksJobRunContext"
  },
  "type": "import"
 },
 "mlflow.tracking.context.registry.DatabricksNotebookRunContext": {
  "data": {
   "shadows": "mlflow.tracking.context.databricks_notebook_context.DatabricksNotebookRunContext"
  },
  "type": "import"
 },
 "mlflow.tracking.context.registry.DefaultRunContext": {
  "data": {
   "shadows": "mlflow.tracking.context.default_context.DefaultRunContext"
  },
  "type": "import"
 },
 "mlflow.tracking.context.registry.GitRunContext": {
  "data": {
   "shadows": "mlflow.tracking.context.git_context.GitRunContext"
  },
  "type": "import"
 },
 "mlflow.tracking.context.registry.RunContextProviderRegistry": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.tracking.context.registry.RunContextProviderRegistry.__init__": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "mlflow.tracking.context.registry.RunContextProviderRegistry.__iter__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context.registry.RunContextProviderRegistry.register": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "run_context_provider_cls"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context.registry.RunContextProviderRegistry.register_entrypoints": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "mlflow.tracking.context.registry.entrypoints",
    "mlflow.tracking.context.registry.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context.registry._run_context_provider_registry": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mlflow.tracking.context.registry.entrypoints": {
  "data": {
   "shadows": "entrypoints"
  },
  "type": "import"
 },
 "mlflow.tracking.context.registry.resolve_tags": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "mlflow.tracking.context.registry._run_context_provider_registry"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context.registry.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mlflow.tracking.get_tracking_uri": {
  "data": {
   "shadows": "mlflow.tracking._tracking_service.utils.get_tracking_uri"
  },
  "type": "import"
 },
 "mlflow.tracking.is_tracking_uri_set": {
  "data": {
   "shadows": "mlflow.tracking._tracking_service.utils.is_tracking_uri_set"
  },
  "type": "import"
 },
 "mlflow.tracking.registry": {
  "data": {},
  "type": "module"
 },
 "mlflow.tracking.registry.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "mlflow.tracking.registry.INVALID_PARAMETER_VALUE": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  },
  "type": "import"
 },
 "mlflow.tracking.registry.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.tracking.registry.StoreRegistry": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "mlflow.tracking.registry.StoreRegistry.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.registry.StoreRegistry.get_store_builder": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "KeyError",
    "list",
    "mlflow.tracking.registry.UnsupportedModelRegistryStoreURIException",
    "mlflow.utils.uri.get_uri_scheme"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.registry.StoreRegistry.register": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "mlflow.tracking.registry.StoreRegistry.register_entrypoints": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "mlflow.tracking.registry.entrypoints",
    "mlflow.tracking.registry.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.registry.UnsupportedModelRegistryStoreURIException": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException"
   ]
  },
  "type": "class"
 },
 "mlflow.tracking.registry.UnsupportedModelRegistryStoreURIException.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.tracking.registry.UnsupportedModelRegistryStoreURIException",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.registry.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "mlflow.tracking.registry.entrypoints": {
  "data": {
   "shadows": "entrypoints"
  },
  "type": "import"
 },
 "mlflow.tracking.registry.get_uri_scheme": {
  "data": {
   "shadows": "mlflow.utils.uri.get_uri_scheme"
  },
  "type": "import"
 },
 "mlflow.tracking.registry.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mlflow.tracking.set_tracking_uri": {
  "data": {
   "shadows": "mlflow.tracking._tracking_service.utils.set_tracking_uri"
  },
  "type": "import"
 },
 "mlflow.utils": {
  "data": {
   "symbols_in_volume": [
    "sys.version_info.major",
    "sys.version_info.micro",
    "sys.version_info.minor"
   ]
  },
  "type": "module"
 },
 "mlflow.utils.PYTHON_VERSION": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "mlflow.utils.annotations": {
  "data": {},
  "type": "module"
 },
 "mlflow.utils.annotations.deprecated": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "mlflow.utils.annotations.deprecated.deprecated_decorator": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "func.__doc__"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.annotations.deprecated.deprecated_decorator.deprecated_func": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "DeprecationWarning",
    "func",
    "functools.wraps",
    "mlflow.utils.annotations.warnings"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.annotations.experimental": {
  "data": {
   "lineno": 5
  },
  "type": "function"
 },
 "mlflow.utils.annotations.keyword_only": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "mlflow.utils.annotations.keyword_only.wrapper": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "TypeError",
    "func",
    "func.__name__",
    "functools.wraps",
    "len"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.annotations.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mlflow.utils.annotations.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "mlflow.utils.autologging_utils": {
  "data": {},
  "type": "module"
 },
 "mlflow.utils.autologging_utils.get_unspecified_default_args": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "dict",
    "len",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.autologging_utils.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mlflow.utils.autologging_utils.log_fn_args_as_params": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "dict",
    "fn",
    "len",
    "mlflow.utils.autologging_utils.get_unspecified_default_args",
    "mlflow.utils.autologging_utils.inspect",
    "mlflow.utils.autologging_utils.mlflow",
    "mlflow.utils.autologging_utils.try_mlflow_log",
    "zip"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.autologging_utils.mlflow": {
  "data": {
   "shadows": "mlflow"
  },
  "type": "import"
 },
 "mlflow.utils.autologging_utils.try_mlflow_log": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "Exception",
    "fn",
    "mlflow.utils.autologging_utils.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.autologging_utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mlflow.utils.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "mlflow.utils.cli_args": {
  "data": {
   "symbols_in_volume": [
    "mlflow.utils.cli_args.click"
   ]
  },
  "type": "module"
 },
 "mlflow.utils.cli_args.HOST": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mlflow.utils.cli_args.INSTALL_MLFLOW": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mlflow.utils.cli_args.MLFLOW_HOME": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mlflow.utils.cli_args.MODEL_PATH": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "mlflow.utils.cli_args.MODEL_URI": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "mlflow.utils.cli_args.NO_CONDA": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mlflow.utils.cli_args.PORT": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mlflow.utils.cli_args.RUN_ID": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mlflow.utils.cli_args.WORKERS": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mlflow.utils.cli_args.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "mlflow.utils.databricks_utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.utils.databricks_utils.logging"
   ]
  },
  "type": "module"
 },
 "mlflow.utils.databricks_utils.IPython": {
  "data": {
   "shadows": "IPython"
  },
  "type": "import"
 },
 "mlflow.utils.databricks_utils.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.utils.databricks_utils.MlflowHostCreds": {
  "data": {
   "shadows": "mlflow.utils.rest_utils.MlflowHostCreds"
  },
  "type": "import"
 },
 "mlflow.utils.databricks_utils.TaskContext": {
  "data": {
   "shadows": "pyspark.TaskContext"
  },
  "type": "import"
 },
 "mlflow.utils.databricks_utils._NoDbutilsError": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "mlflow.utils.databricks_utils._fail_malformed_databricks_auth": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.databricks_utils._get_context_tag": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "mlflow.utils.databricks_utils._get_java_dbutils"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.databricks_utils._get_dbutils": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ImportError",
    "KeyError",
    "mlflow.utils.databricks_utils.IPython"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.databricks_utils._get_extra_context": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "mlflow.utils.databricks_utils._get_java_dbutils"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.databricks_utils._get_java_dbutils": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "mlflow.utils.databricks_utils._get_dbutils"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.databricks_utils._get_property_from_spark_context": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "Exception",
    "pyspark.TaskContext.get"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.databricks_utils._logger": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "mlflow.utils.databricks_utils.get_databricks_host_creds": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "databricks_cli.configure.provider",
    "databricks_cli.configure.provider.ProfileConfigProvider",
    "databricks_cli.configure.provider.get_config",
    "databricks_cli.configure.provider.get_config_for_profile",
    "hasattr",
    "mlflow.utils.databricks_utils._fail_malformed_databricks_auth",
    "mlflow.utils.databricks_utils._logger",
    "mlflow.utils.rest_utils.MlflowHostCreds"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.databricks_utils.get_job_id": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "mlflow.utils.databricks_utils._get_context_tag"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.databricks_utils.get_job_run_id": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "mlflow.utils.databricks_utils._get_context_tag"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.databricks_utils.get_job_type": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "mlflow.utils.databricks_utils._get_context_tag"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.databricks_utils.get_notebook_id": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "mlflow.utils.databricks_utils._get_extra_context",
    "mlflow.utils.databricks_utils._get_property_from_spark_context"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.databricks_utils.get_notebook_path": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "mlflow.utils.databricks_utils._get_extra_context",
    "mlflow.utils.databricks_utils._get_property_from_spark_context"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.databricks_utils.get_webapp_url": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "mlflow.utils.databricks_utils._get_extra_context",
    "mlflow.utils.databricks_utils._get_property_from_spark_context"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.databricks_utils.is_dbfs_fuse_available": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "Exception",
    "mlflow.utils.databricks_utils.os",
    "mlflow.utils.databricks_utils.subprocess",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.databricks_utils.is_in_databricks_job": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "Exception",
    "mlflow.utils.databricks_utils._get_context_tag"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.databricks_utils.is_in_databricks_notebook": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "Exception",
    "mlflow.utils.databricks_utils._get_extra_context",
    "mlflow.utils.databricks_utils._get_property_from_spark_context"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.databricks_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.utils.databricks_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.utils.databricks_utils.provider": {
  "data": {
   "shadows": "databricks_cli.configure.provider"
  },
  "type": "import"
 },
 "mlflow.utils.databricks_utils.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "mlflow.utils.deprecated": {
  "data": {
   "shadows": "mlflow.utils.annotations.deprecated"
  },
  "type": "import"
 },
 "mlflow.utils.env": {
  "data": {},
  "type": "module"
 },
 "mlflow.utils.env.get_env": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "mlflow.utils.env.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.env.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.utils.env.unset_variable": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "mlflow.utils.env.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.environment": {
  "data": {},
  "type": "module"
 },
 "mlflow.utils.environment.PYTHON_VERSION": {
  "data": {
   "shadows": "mlflow.utils.PYTHON_VERSION"
  },
  "type": "import"
 },
 "mlflow.utils.environment._conda_header": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "mlflow.utils.environment._mlflow_conda_env": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "mlflow.utils.PYTHON_VERSION",
    "mlflow.utils.environment._conda_header",
    "mlflow.utils.environment.yaml",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.environment.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "mlflow.utils.experimental": {
  "data": {
   "shadows": "mlflow.utils.annotations.experimental"
  },
  "type": "import"
 },
 "mlflow.utils.file_utils": {
  "data": {},
  "type": "module"
 },
 "mlflow.utils.file_utils.ENCODING": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mlflow.utils.file_utils.FileInfo": {
  "data": {
   "shadows": "mlflow.entities.FileInfo"
  },
  "type": "import"
 },
 "mlflow.utils.file_utils.MissingConfigException": {
  "data": {
   "shadows": "mlflow.exceptions.MissingConfigException"
  },
  "type": "import"
 },
 "mlflow.utils.file_utils.TempDir": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.utils.file_utils.TempDir.__enter__": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.os",
    "mlflow.utils.file_utils.tempfile"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.TempDir.__exit__": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.os",
    "mlflow.utils.file_utils.shutil"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.TempDir.__init__": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.TempDir.path": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils._copy_file_or_tree": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.os",
    "mlflow.utils.file_utils.shutil"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils._copy_project": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "_docker_ignore",
    "mlflow.utils.file_utils.os",
    "mlflow.utils.file_utils.shutil",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils._copy_project._docker_ignore": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.os",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils._copy_project._docker_ignore.ignore": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "list",
    "mlflow.utils.file_utils.fnmatch",
    "set"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.append_to": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "mlflow.utils.file_utils.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "mlflow.utils.file_utils.exists": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.find": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.list_all",
    "mlflow.utils.file_utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "mlflow.utils.file_utils.get_file_info": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "mlflow.entities.FileInfo",
    "mlflow.utils.file_utils.is_directory",
    "mlflow.utils.file_utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.get_local_path_or_none": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "len",
    "mlflow.utils.file_utils.local_file_uri_to_path",
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.get_parent_dir": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.get_relative_path": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "Exception",
    "len",
    "mlflow.utils.file_utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "mlflow.utils.file_utils.is_directory": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.is_file": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.list_all": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "Exception",
    "filter_func",
    "mlflow.utils.file_utils.is_directory",
    "mlflow.utils.file_utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.list_files": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.list_all",
    "mlflow.utils.file_utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.list_subdirs": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.list_all",
    "mlflow.utils.file_utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.local_file_uri_to_path": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "six.moves.urllib.parse.urlparse",
    "six.moves.urllib.request.url2pathname"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.make_containing_dirs": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.make_tarfile": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.gzip",
    "mlflow.utils.file_utils.os",
    "mlflow.utils.file_utils.tarfile",
    "mlflow.utils.file_utils.tempfile",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.make_tarfile._filter_timestamps": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "custom_filter"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.mkdir": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "OSError",
    "mlflow.utils.file_utils.errno",
    "mlflow.utils.file_utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.mv": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.shutil"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.utils.file_utils.path_to_local_file_uri": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.posixpath",
    "six.moves.urllib.request.pathname2url"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.path_to_local_sqlite_uri": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.os",
    "mlflow.utils.file_utils.posixpath",
    "mlflow.utils.file_utils.sys",
    "six.moves.urllib.request.pathname2url"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.pathname2url": {
  "data": {
   "shadows": "six.moves.urllib.request.pathname2url"
  },
  "type": "import"
 },
 "mlflow.utils.file_utils.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "mlflow.utils.file_utils.read_file": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.ENCODING",
    "mlflow.utils.file_utils.codecs",
    "mlflow.utils.file_utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.read_file_lines": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.ENCODING",
    "mlflow.utils.file_utils.codecs",
    "mlflow.utils.file_utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.read_yaml": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "Exception",
    "mlflow.exceptions.MissingConfigException",
    "mlflow.utils.file_utils.ENCODING",
    "mlflow.utils.file_utils.codecs",
    "mlflow.utils.file_utils.exists",
    "mlflow.utils.file_utils.os",
    "mlflow.utils.file_utils.yaml"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.relative_path_to_artifact_path": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "Exception",
    "mlflow.utils.file_utils.os",
    "mlflow.utils.file_utils.posixpath",
    "six.moves.urllib.parse.unquote",
    "six.moves.urllib.request.pathname2url"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mlflow.utils.file_utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlflow.utils.file_utils.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "mlflow.utils.file_utils.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "mlflow.utils.file_utils.unquote": {
  "data": {
   "shadows": "six.moves.urllib.parse.unquote"
  },
  "type": "import"
 },
 "mlflow.utils.file_utils.urllib": {
  "data": {
   "shadows": "six.moves.urllib"
  },
  "type": "import"
 },
 "mlflow.utils.file_utils.write_to": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.ENCODING",
    "mlflow.utils.file_utils.codecs"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.write_yaml": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "Exception",
    "mlflow.exceptions.MissingConfigException",
    "mlflow.utils.file_utils.ENCODING",
    "mlflow.utils.file_utils.codecs",
    "mlflow.utils.file_utils.exists",
    "mlflow.utils.file_utils.os",
    "mlflow.utils.file_utils.yaml"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "mlflow.utils.get_major_minor_py_version": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "mlflow.utils.get_unique_resource_id": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "mlflow.utils.base64",
    "mlflow.utils.uuid",
    "sys.version_info"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.keyword_only": {
  "data": {
   "shadows": "mlflow.utils.annotations.keyword_only"
  },
  "type": "import"
 },
 "mlflow.utils.logging_utils": {
  "data": {},
  "type": "module"
 },
 "mlflow.utils.logging_utils.LOGGING_DATETIME_FORMAT": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mlflow.utils.logging_utils.LOGGING_LINE_FORMAT": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "mlflow.utils.logging_utils._configure_mlflow_loggers": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "mlflow.utils.logging_utils.LOGGING_DATETIME_FORMAT",
    "mlflow.utils.logging_utils.LOGGING_LINE_FORMAT",
    "mlflow.utils.logging_utils.logging",
    "mlflow.utils.logging_utils.sys"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.logging_utils.eprint": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "mlflow.utils.logging_utils.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.logging_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.utils.logging_utils.logging.config": {
  "data": {
   "shadows": "logging.config"
  },
  "type": "import"
 },
 "mlflow.utils.logging_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mlflow.utils.logging_utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlflow.utils.mlflow_tags": {
  "data": {},
  "type": "module"
 },
 "mlflow.utils.mlflow_tags.LEGACY_MLFLOW_GIT_BRANCH_NAME": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.LEGACY_MLFLOW_GIT_REPO_URL": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_JOB_ID": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_JOB_RUN_ID": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_JOB_TYPE": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_NOTEBOOK_ID": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_NOTEBOOK_PATH": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_RUN_URL": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_SHELL_JOB_ID": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_SHELL_JOB_RUN_ID": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_WEBAPP_URL": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_DOCKER_IMAGE_ID": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_DOCKER_IMAGE_URI": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_GIT_BRANCH": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_GIT_COMMIT": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_GIT_REPO_URL": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_LOGGED_MODELS": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_PARENT_RUN_ID": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_PROJECT_BACKEND": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_PROJECT_ENTRY_POINT": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_PROJECT_ENV": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_RUN_NAME": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_SOURCE_NAME": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_SOURCE_TYPE": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_USER": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "mlflow.utils.model_utils": {
  "data": {},
  "type": "module"
 },
 "mlflow.utils.model_utils.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.utils.model_utils.Model": {
  "data": {
   "shadows": "mlflow.models.Model"
  },
  "type": "import"
 },
 "mlflow.utils.model_utils.RESOURCE_DOES_NOT_EXIST": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST"
  },
  "type": "import"
 },
 "mlflow.utils.model_utils._download_artifact_from_uri": {
  "data": {
   "shadows": "mlflow.tracking.artifact_utils._download_artifact_from_uri"
  },
  "type": "import"
 },
 "mlflow.utils.model_utils._get_flavor_configuration": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.models.Model.load",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.utils.model_utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.model_utils._get_flavor_configuration_from_uri": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "Exception",
    "mlflow.exceptions.MlflowException",
    "mlflow.models.Model.load",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.tracking.artifact_utils._download_artifact_from_uri",
    "mlflow.utils.uri.append_to_uri_path"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.model_utils.append_to_uri_path": {
  "data": {
   "shadows": "mlflow.utils.uri.append_to_uri_path"
  },
  "type": "import"
 },
 "mlflow.utils.model_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.utils.process": {
  "data": {},
  "type": "module"
 },
 "mlflow.utils.process.ShellCommandException": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "mlflow.utils.process.exec_cmd": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "mlflow.utils.process.ShellCommandException",
    "mlflow.utils.process.os",
    "mlflow.utils.process.subprocess"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.process.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.utils.process.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "mlflow.utils.proto_json_utils": {
  "data": {},
  "type": "module"
 },
 "mlflow.utils.proto_json_utils.MessageToJson": {
  "data": {
   "shadows": "google.protobuf.json_format.MessageToJson"
  },
  "type": "import"
 },
 "mlflow.utils.proto_json_utils.ParseDict": {
  "data": {
   "shadows": "google.protobuf.json_format.ParseDict"
  },
  "type": "import"
 },
 "mlflow.utils.proto_json_utils._stringify_all_experiment_ids": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.proto_json_utils.message_to_json": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "google.protobuf.json_format.MessageToJson"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.proto_json_utils.parse_dict": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "google.protobuf.json_format.ParseDict",
    "mlflow.utils.proto_json_utils._stringify_all_experiment_ids"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.rest_utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.__version__",
    "mlflow.utils.rest_utils.logging"
   ]
  },
  "type": "module"
 },
 "mlflow.utils.rest_utils.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.utils.rest_utils.MlflowHostCreds": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.utils.rest_utils.MlflowHostCreds.__init__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.rest_utils.RESOURCE_DOES_NOT_EXIST": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mlflow.utils.rest_utils.RestException": {
  "data": {
   "shadows": "mlflow.exceptions.RestException"
  },
  "type": "import"
 },
 "mlflow.utils.rest_utils._DEFAULT_HEADERS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mlflow.utils.rest_utils.__version__": {
  "data": {
   "shadows": "mlflow.__version__"
  },
  "type": "import"
 },
 "mlflow.utils.rest_utils._can_parse_as_json": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "Exception",
    "mlflow.utils.rest_utils.json"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.rest_utils._get_path": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "mlflow.utils.rest_utils._logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mlflow.utils.rest_utils.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "mlflow.utils.rest_utils.call_endpoint": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "mlflow.utils.proto_json_utils.parse_dict",
    "mlflow.utils.rest_utils.http_request",
    "mlflow.utils.rest_utils.json",
    "mlflow.utils.rest_utils.verify_rest_response"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.rest_utils.databricks_pb2": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2"
  },
  "type": "import"
 },
 "mlflow.utils.rest_utils.extract_api_info_for_service": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "mlflow.protos.databricks_pb2.rpc.endpoints",
    "mlflow.utils.rest_utils._get_path",
    "service"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.rest_utils.http_request": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "dict",
    "mlflow.exceptions.MlflowException",
    "mlflow.utils.rest_utils._DEFAULT_HEADERS",
    "mlflow.utils.rest_utils._logger",
    "mlflow.utils.rest_utils.base64",
    "mlflow.utils.rest_utils.time",
    "mlflow.utils.string_utils.strip_suffix",
    "range",
    "request_with_ratelimit_retries"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.rest_utils.http_request.request_with_ratelimit_retries": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "min",
    "mlflow.utils.rest_utils._logger",
    "mlflow.utils.rest_utils.requests",
    "mlflow.utils.rest_utils.time"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.rest_utils.http_request_safe": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "mlflow.utils.rest_utils.http_request",
    "mlflow.utils.rest_utils.verify_rest_response"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.rest_utils.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mlflow.utils.rest_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.utils.rest_utils.parse_dict": {
  "data": {
   "shadows": "mlflow.utils.proto_json_utils.parse_dict"
  },
  "type": "import"
 },
 "mlflow.utils.rest_utils.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "mlflow.utils.rest_utils.strip_suffix": {
  "data": {
   "shadows": "mlflow.utils.string_utils.strip_suffix"
  },
  "type": "import"
 },
 "mlflow.utils.rest_utils.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mlflow.utils.rest_utils.verify_rest_response": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.exceptions.RestException",
    "mlflow.utils.rest_utils._can_parse_as_json",
    "mlflow.utils.rest_utils.json"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils": {
  "data": {},
  "type": "module"
 },
 "mlflow.utils.search_utils.Comparison": {
  "data": {
   "shadows": "sqlparse.sql.Comparison"
  },
  "type": "import"
 },
 "mlflow.utils.search_utils.INVALID_PARAMETER_VALUE": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  },
  "type": "import"
 },
 "mlflow.utils.search_utils.Identifier": {
  "data": {
   "shadows": "sqlparse.sql.Identifier"
  },
  "type": "import"
 },
 "mlflow.utils.search_utils.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.utils.search_utils.RunInfo": {
  "data": {
   "shadows": "mlflow.entities.RunInfo"
  },
  "type": "import"
 },
 "mlflow.utils.search_utils.SearchUtils": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "list",
    "mlflow.entities.RunInfo.get_orderable_attributes",
    "mlflow.entities.RunInfo.get_searchable_attributes",
    "mlflow.utils.search_utils.operator",
    "object",
    "set",
    "sqlparse.tokens.Token.Literal.Number.Float",
    "sqlparse.tokens.Token.Literal.Number.Integer",
    "sqlparse.tokens.Token.Literal.String.Single"
   ]
  },
  "type": "class"
 },
 "mlflow.utils.search_utils.SearchUtils._does_run_match_clause": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "classmethod",
    "float",
    "getattr",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils._get_comparison": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils._get_comparison_for_model_registry": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "classmethod",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils._get_identifier": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils._get_value": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "classmethod",
    "isinstance",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "sqlparse.sql.Identifier"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils._get_value_for_sort": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "classmethod",
    "float",
    "getattr",
    "isinstance",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.utils.search_utils.math"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils._invalid_statement_token": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "classmethod",
    "isinstance",
    "sqlparse.sql.Comparison",
    "sqlparse.tokens.Token.Keyword"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils._is_quoted": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "classmethod",
    "len"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils._process_statement": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "classmethod",
    "filter",
    "isinstance",
    "len",
    "list",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "sqlparse.sql.Comparison"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils._strip_quotes": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "classmethod",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils._trim_backticks": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils._trim_ends": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils._valid_entity_type": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "classmethod",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils._validate_comparison": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "classmethod",
    "isinstance",
    "len",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "sqlparse.sql.Identifier",
    "sqlparse.tokens.Token",
    "sqlparse.tokens.Token.Operator.Comparison",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils.create_page_token": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "classmethod",
    "mlflow.utils.search_utils.base64",
    "mlflow.utils.search_utils.json"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils.filter": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "classmethod",
    "run_matches"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils.filter.run_matches": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "all"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils.is_attribute": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "classmethod",
    "mlflow.exceptions.MlflowException"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils.is_metric": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "classmethod",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils.is_param": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "classmethod",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils.is_tag": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "classmethod",
    "mlflow.exceptions.MlflowException"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils.paginate": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "classmethod",
    "len"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils.parse_filter_for_model_registry": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "Exception",
    "classmethod",
    "filter",
    "isinstance",
    "len",
    "list",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.utils.search_utils.sqlparse",
    "sqlparse.sql.Comparison",
    "sqlparse.sql.Statement"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils.parse_order_by": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "Exception",
    "classmethod",
    "isinstance",
    "len",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.utils.search_utils.sqlparse",
    "sqlparse.sql.Identifier",
    "sqlparse.sql.Statement"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils.parse_search_filter": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "Exception",
    "classmethod",
    "isinstance",
    "len",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.utils.search_utils.SearchUtils",
    "mlflow.utils.search_utils.sqlparse",
    "sqlparse.sql.Statement"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils.parse_start_offset_from_page_token": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "classmethod",
    "int",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.utils.search_utils.base64",
    "mlflow.utils.search_utils.json"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils.sort": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "classmethod",
    "reversed",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.Statement": {
  "data": {
   "shadows": "sqlparse.sql.Statement"
  },
  "type": "import"
 },
 "mlflow.utils.search_utils.Token": {
  "data": {
   "shadows": "sqlparse.sql.Token"
  },
  "type": "import"
 },
 "mlflow.utils.search_utils.TokenType": {
  "data": {
   "shadows": "sqlparse.tokens.Token"
  },
  "type": "import"
 },
 "mlflow.utils.search_utils.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "mlflow.utils.search_utils.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mlflow.utils.search_utils.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "mlflow.utils.search_utils.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "mlflow.utils.search_utils.sqlparse": {
  "data": {
   "shadows": "sqlparse"
  },
  "type": "import"
 },
 "mlflow.utils.string_utils": {
  "data": {},
  "type": "module"
 },
 "mlflow.utils.string_utils.is_string_type": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "isinstance",
    "mlflow.utils.string_utils.six"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.string_utils.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "mlflow.utils.string_utils.strip_prefix": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.string_utils.strip_suffix": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.time_utils": {
  "data": {},
  "type": "module"
 },
 "mlflow.utils.time_utils.conv_longdate_to_str": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "mlflow.utils.time_utils.datetime",
    "pytz.reference.LocalTimezone"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.time_utils.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mlflow.utils.time_utils.reference": {
  "data": {
   "shadows": "pytz.reference"
  },
  "type": "import"
 },
 "mlflow.utils.uri": {
  "data": {},
  "type": "module"
 },
 "mlflow.utils.uri.DATABASE_ENGINES": {
  "data": {
   "shadows": "mlflow.store.db.db_types.DATABASE_ENGINES"
  },
  "type": "import"
 },
 "mlflow.utils.uri.INVALID_PARAMETER_VALUE": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  },
  "type": "import"
 },
 "mlflow.utils.uri.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.utils.uri._INVALID_DB_URI_MSG": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "mlflow.utils.uri._join_posixpaths_and_append_absolute_suffixes": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "len",
    "mlflow.utils.uri.posixpath"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.uri._validate_db_type_string": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_db_type_string"
  },
  "type": "import"
 },
 "mlflow.utils.uri.append_to_uri_path": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "len",
    "mlflow.utils.uri._join_posixpaths_and_append_absolute_suffixes",
    "six.moves.urllib.parse.urlparse",
    "six.moves.urllib.parse.urlunparse"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.uri.extract_db_type_from_uri": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.utils.uri._INVALID_DB_URI_MSG",
    "mlflow.utils.validation._validate_db_type_string",
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.uri.get_db_profile_from_uri": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.uri.get_uri_scheme": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "any",
    "mlflow.store.db.db_types.DATABASE_ENGINES",
    "mlflow.utils.uri.extract_db_type_from_uri",
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.uri.is_databricks_uri": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.uri.is_http_uri": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.uri.is_local_uri": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.uri.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "mlflow.utils.uri.urllib": {
  "data": {
   "shadows": "six.moves.urllib"
  },
  "type": "import"
 },
 "mlflow.utils.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "mlflow.utils.version_info": {
  "data": {
   "shadows": "sys.version_info"
  },
  "type": "import"
 },
 "mlflow.version": {
  "data": {},
  "type": "module"
 },
 "mlflow.version.VERSION": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "mlflow.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mlflow.xgboost": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.xgboost.logging"
   ]
  },
  "type": "module"
 },
 "mlflow.xgboost.FLAVOR_NAME": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mlflow.xgboost.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.xgboost.Model": {
  "data": {
   "shadows": "mlflow.models.Model"
  },
  "type": "import"
 },
 "mlflow.xgboost._XGBModelWrapper": {
  "data": {
   "lineno": 192
  },
  "type": "class"
 },
 "mlflow.xgboost._XGBModelWrapper.__init__": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "mlflow.xgboost._XGBModelWrapper.predict": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "xgboost.DMatrix"
   ]
  },
  "type": "function"
 },
 "mlflow.xgboost._download_artifact_from_uri": {
  "data": {
   "shadows": "mlflow.tracking.artifact_utils._download_artifact_from_uri"
  },
  "type": "import"
 },
 "mlflow.xgboost._get_flavor_configuration": {
  "data": {
   "shadows": "mlflow.utils.model_utils._get_flavor_configuration"
  },
  "type": "import"
 },
 "mlflow.xgboost._load_model": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "mlflow.xgboost.os",
    "xgboost.Booster"
   ]
  },
  "type": "function"
 },
 "mlflow.xgboost._load_pyfunc": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "mlflow.xgboost._XGBModelWrapper",
    "mlflow.xgboost._load_model"
   ]
  },
  "type": "function"
 },
 "mlflow.xgboost._logger": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mlflow.xgboost._mlflow_conda_env": {
  "data": {
   "shadows": "mlflow.utils.environment._mlflow_conda_env"
  },
  "type": "import"
 },
 "mlflow.xgboost.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "mlflow.xgboost.autolog": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "mlflow.utils.annotations.experimental",
    "mlflow.xgboost.gorilla",
    "mlflow.xgboost.xgboost"
   ]
  },
  "type": "function"
 },
 "mlflow.xgboost.autolog.train": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "Exception",
    "enumerate",
    "len",
    "list",
    "log_feature_importance_plot",
    "mlflow.utils.autologging_utils.log_fn_args_as_params",
    "mlflow.utils.autologging_utils.try_mlflow_log",
    "mlflow.xgboost._logger",
    "mlflow.xgboost.gorilla",
    "mlflow.xgboost.inspect",
    "mlflow.xgboost.json",
    "mlflow.xgboost.log_model",
    "mlflow.xgboost.mlflow",
    "mlflow.xgboost.os",
    "mlflow.xgboost.shutil",
    "mlflow.xgboost.tempfile",
    "mlflow.xgboost.xgboost",
    "open",
    "original",
    "record_eval_results",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "mlflow.xgboost.autolog.train.log_feature_importance_plot": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.subplots",
    "mlflow.utils.autologging_utils.try_mlflow_log",
    "mlflow.xgboost.mlflow",
    "mlflow.xgboost.os",
    "mlflow.xgboost.shutil",
    "mlflow.xgboost.tempfile",
    "numpy.arange",
    "numpy.argsort",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "mlflow.xgboost.autolog.train.record_eval_results": {
  "data": {
   "lineno": 223
  },
  "type": "function"
 },
 "mlflow.xgboost.autolog.train.record_eval_results.callback": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "mlflow.xgboost.experimental": {
  "data": {
   "shadows": "mlflow.utils.annotations.experimental"
  },
  "type": "import"
 },
 "mlflow.xgboost.get_default_conda_env": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "mlflow.utils.environment._mlflow_conda_env",
    "xgboost.__version__"
   ]
  },
  "type": "function"
 },
 "mlflow.xgboost.gorilla": {
  "data": {
   "shadows": "gorilla"
  },
  "type": "import"
 },
 "mlflow.xgboost.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mlflow.xgboost.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mlflow.xgboost.load_model": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "mlflow.tracking.artifact_utils._download_artifact_from_uri",
    "mlflow.utils.model_utils._get_flavor_configuration",
    "mlflow.xgboost.FLAVOR_NAME",
    "mlflow.xgboost._load_model",
    "mlflow.xgboost.os"
   ]
  },
  "type": "function"
 },
 "mlflow.xgboost.log_fn_args_as_params": {
  "data": {
   "shadows": "mlflow.utils.autologging_utils.log_fn_args_as_params"
  },
  "type": "import"
 },
 "mlflow.xgboost.log_model": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "mlflow.models.Model.log",
    "mlflow.xgboost.mlflow"
   ]
  },
  "type": "function"
 },
 "mlflow.xgboost.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.xgboost.mlflow": {
  "data": {
   "shadows": "mlflow"
  },
  "type": "import"
 },
 "mlflow.xgboost.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlflow.xgboost.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.xgboost.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mlflow.xgboost.pyfunc": {
  "data": {
   "shadows": "mlflow.pyfunc"
  },
  "type": "import"
 },
 "mlflow.xgboost.save_model": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "mlflow.exceptions.MlflowException",
    "mlflow.models.Model",
    "mlflow.pyfunc.add_to_model",
    "mlflow.xgboost.FLAVOR_NAME",
    "mlflow.xgboost.get_default_conda_env",
    "mlflow.xgboost.os",
    "mlflow.xgboost.yaml",
    "open",
    "xgboost.__version__"
   ]
  },
  "type": "function"
 },
 "mlflow.xgboost.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mlflow.xgboost.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "mlflow.xgboost.try_mlflow_log": {
  "data": {
   "shadows": "mlflow.utils.autologging_utils.try_mlflow_log"
  },
  "type": "import"
 },
 "mlflow.xgboost.xgb": {
  "data": {
   "shadows": "xgboost"
  },
  "type": "import"
 },
 "mlflow.xgboost.xgboost": {
  "data": {
   "shadows": "xgboost"
  },
  "type": "import"
 },
 "mlflow.xgboost.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 }
}