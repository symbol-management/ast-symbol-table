{
 "mlflow": {
  "lineno": null,
  "symbols_in_volume": [
   "mlflow.projects.run",
   "mlflow.tracking.get_tracking_uri",
   "mlflow.tracking.set_tracking_uri",
   "mlflow.utils.logging_utils._configure_mlflow_loggers",
   "sys.version_info.major",
   "warnings.filterwarnings",
   "warnings.warn"
  ],
  "type": "module"
 },
 "mlflow._spark_autologging": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "threading.Lock"
  ],
  "type": "module"
 },
 "mlflow._spark_autologging.PythonSubscriber": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow._spark_autologging.PythonSubscriber.Java": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow._spark_autologging.PythonSubscriber.__init__": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow._spark_autologging.PythonSubscriber._notify": {
  "lineno": 186,
  "symbols_in_volume": [
   "mlflow.active_run"
  ],
  "type": "function"
 },
 "mlflow._spark_autologging.PythonSubscriber.notify": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow._spark_autologging.PythonSubscriber.ping": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow._spark_autologging.PythonSubscriber.register": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow._spark_autologging.PythonSubscriber.replId": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow._spark_autologging.PythonSubscriber.toString": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow._spark_autologging.SparkAutologgingContext": {
  "lineno": 212,
  "symbols_in_volume": [
   "mlflow.tracking.context.abstract_context.RunContextProvider"
  ],
  "type": "class"
 },
 "mlflow._spark_autologging.SparkAutologgingContext.in_context": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow._spark_autologging.SparkAutologgingContext.tags": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow._spark_autologging._get_active_spark_session": {
  "lineno": 90,
  "symbols_in_volume": [
   "pyspark.sql.SparkSession._instantiatedSession",
   "pyspark.sql.SparkSession.builder.getActiveSession"
  ],
  "type": "function"
 },
 "mlflow._spark_autologging._get_current_listener": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow._spark_autologging._get_jvm_event_publisher": {
  "lineno": 64,
  "symbols_in_volume": [
   "pyspark.SparkContext._gateway.jvm"
  ],
  "type": "function"
 },
 "mlflow._spark_autologging._get_repl_id": {
  "lineno": 142,
  "symbols_in_volume": [
   "pyspark.SparkContext.getOrCreate",
   "sys.argv",
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "mlflow._spark_autologging._get_spark_major_version": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow._spark_autologging._get_table_info_string": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow._spark_autologging._merge_tag_lines": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow._spark_autologging._set_run_tag": {
  "lineno": 81,
  "symbols_in_volume": [
   "mlflow.tracking.client.MlflowClient"
  ],
  "type": "function"
 },
 "mlflow._spark_autologging._set_run_tag_async": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow._spark_autologging.add_table_info_to_context_provider": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow._spark_autologging.autolog": {
  "lineno": 97,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.tracking.context.registry._run_context_provider_registry.register",
   "py4j.java_gateway.CallbackServerParameters",
   "pyspark.SparkContext.getOrCreate"
  ],
  "type": "function"
 },
 "mlflow.azureml": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "mlflow.azureml._build_tags": {
  "lineno": 405,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.azureml._create_dockerfile": {
  "lineno": 438,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.version.VERSION",
   "mlflow.version.VERSION.endswith"
  ],
  "type": "function"
 },
 "mlflow.azureml._create_execution_script": {
  "lineno": 421,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.azureml._create_mlflow_wheel": {
  "lineno": 535,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "pathlib.Path",
   "subprocess.run",
   "sys.executable"
  ],
  "type": "function"
 },
 "mlflow.azureml._get_container_path": {
  "lineno": 472,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.azureml._get_mlflow_azure_name": {
  "lineno": 524,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.azureml._get_mlflow_azure_resource_name": {
  "lineno": 512,
  "symbols_in_volume": [
   "mlflow.utils.get_unique_resource_id"
  ],
  "type": "function"
 },
 "mlflow.azureml._load_pyfunc_conf_with_model": {
  "lineno": 494,
  "symbols_in_volume": [
   "azureml.core.model.Model.load",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "mlflow.pyfunc.FLAVOR_NAME",
   "os.path.abspath",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.azureml.build_image": {
  "lineno": 32,
  "symbols_in_volume": [
   "azureml.core.image.ContainerImage.create",
   "azureml.core.image.ContainerImage.image_configuration",
   "azureml.core.model.Model.register",
   "distutils.version.StrictVersion",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "mlflow.pyfunc.ENV",
   "mlflow.pyfunc.PY_VERSION",
   "mlflow.tracking.artifact_utils._download_artifact_from_uri",
   "mlflow.utils.experimental",
   "mlflow.utils.file_utils.TempDir",
   "mlflow.utils.file_utils._copy_file_or_tree",
   "mlflow.utils.file_utils._copy_project",
   "os.path.basename",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.azureml.cli": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.azureml.cli.build_image": {
  "lineno": 25,
  "symbols_in_volume": [
   "azureml.core.Workspace.get",
   "click.option",
   "json.loads",
   "mlflow.utils.cli_args.MLFLOW_HOME",
   "mlflow.utils.cli_args.MODEL_URI",
   "mlflow.utils.experimental"
  ],
  "type": "function"
 },
 "mlflow.azureml.cli.commands": {
  "lineno": 14,
  "symbols_in_volume": [
   "click.group"
  ],
  "type": "function"
 },
 "mlflow.azureml.deploy": {
  "lineno": 215,
  "symbols_in_volume": [
   "azureml.core.Environment",
   "azureml.core.Environment.add_private_pip_wheel",
   "azureml.core.Environment.from_conda_specification",
   "azureml.core.VERSION",
   "azureml.core.model.InferenceConfig",
   "azureml.core.model.Model.deploy",
   "azureml.core.model.Model.register",
   "azureml.core.webservice.AciWebservice.deploy_configuration",
   "distutils.version.StrictVersion",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "mlflow.pyfunc.ENV",
   "mlflow.pyfunc.PY_VERSION",
   "mlflow.tracking.artifact_utils._download_artifact_from_uri",
   "mlflow.utils.experimental",
   "mlflow.utils.file_utils.TempDir",
   "mlflow.utils.file_utils._copy_file_or_tree",
   "mlflow.version.VERSION",
   "os.path.join",
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "mlflow.cli": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "mlflow.cli._user_args_to_dict": {
  "lineno": 140,
  "symbols_in_volume": [
   "mlflow.utils.logging_utils.eprint",
   "sys.exit"
  ],
  "type": "function"
 },
 "mlflow.cli._validate_server_args": {
  "lineno": 157,
  "symbols_in_volume": [
   "sys.platform"
  ],
  "type": "function"
 },
 "mlflow.cli._validate_static_prefix": {
  "lineno": 220,
  "symbols_in_volume": [
   "click.UsageError"
  ],
  "type": "function"
 },
 "mlflow.cli.cli": {
  "lineno": 36,
  "symbols_in_volume": [
   "click.group",
   "click.version_option"
  ],
  "type": "function"
 },
 "mlflow.cli.gc": {
  "lineno": 300,
  "symbols_in_volume": [
   "click.option",
   "mlflow.entities.lifecycle_stage.LifecycleStage.DELETED",
   "mlflow.exceptions.MlflowException",
   "mlflow.store.artifact.artifact_repository_registry.get_artifact_repository",
   "mlflow.store.tracking.DEFAULT_LOCAL_FILE_AND_ARTIFACT_PATH",
   "mlflow.tracking._get_store",
   "mlflow.utils.experimental"
  ],
  "type": "function"
 },
 "mlflow.cli.run": {
  "lineno": 42,
  "symbols_in_volume": [
   "click.STRING",
   "click.argument",
   "click.option",
   "json.loads",
   "mlflow.projects.ExecutionException",
   "mlflow.projects.run",
   "mlflow.tracking._EXPERIMENT_ID_ENV_VAR",
   "mlflow.tracking._EXPERIMENT_NAME_ENV_VAR",
   "mlflow.utils.cli_args.NO_CONDA",
   "mlflow.utils.logging_utils.eprint",
   "os.path.splitext",
   "sys.exit"
  ],
  "type": "function"
 },
 "mlflow.cli.server": {
  "lineno": 234,
  "symbols_in_volume": [
   "click.option",
   "mlflow.server._run_server",
   "mlflow.server.handlers.initialize_backend_stores",
   "mlflow.store.tracking.DEFAULT_LOCAL_FILE_AND_ARTIFACT_PATH",
   "mlflow.utils.cli_args.HOST",
   "mlflow.utils.cli_args.PORT",
   "mlflow.utils.cli_args.WORKERS",
   "mlflow.utils.logging_utils.eprint",
   "mlflow.utils.process.ShellCommandException",
   "mlflow.utils.uri.is_local_uri",
   "sys.exit"
  ],
  "type": "function"
 },
 "mlflow.cli.ui": {
  "lineno": 170,
  "symbols_in_volume": [
   "click.option",
   "mlflow.server._run_server",
   "mlflow.server.handlers.initialize_backend_stores",
   "mlflow.store.tracking.DEFAULT_LOCAL_FILE_AND_ARTIFACT_PATH",
   "mlflow.utils.cli_args.HOST",
   "mlflow.utils.cli_args.PORT",
   "mlflow.utils.logging_utils.eprint",
   "mlflow.utils.process.ShellCommandException",
   "mlflow.utils.uri.is_local_uri",
   "sys.exit"
  ],
  "type": "function"
 },
 "mlflow.data": {
  "lineno": null,
  "symbols_in_volume": [
   "re.compile",
   "re.escape"
  ],
  "type": "module"
 },
 "mlflow.data.DownloadException": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.data._fetch_dbfs": {
  "lineno": 22,
  "symbols_in_volume": [
   "mlflow.utils.process.exec_cmd",
   "os.path.abspath"
  ],
  "type": "function"
 },
 "mlflow.data._fetch_gs": {
  "lineno": 41,
  "symbols_in_volume": [
   "google.cloud.storage.Client",
   "os.path.abspath"
  ],
  "type": "function"
 },
 "mlflow.data._fetch_s3": {
  "lineno": 27,
  "symbols_in_volume": [
   "boto3.client",
   "os.environ.get",
   "os.path.abspath"
  ],
  "type": "function"
 },
 "mlflow.data.download_uri": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.data.is_uri": {
  "lineno": 70,
  "symbols_in_volume": [
   "six.moves.urllib.parse.urlparse"
  ],
  "type": "function"
 },
 "mlflow.data.parse_gs_uri": {
  "lineno": 59,
  "symbols_in_volume": [
   "six.moves.urllib.parse.urlparse"
  ],
  "type": "function"
 },
 "mlflow.data.parse_s3_uri": {
  "lineno": 48,
  "symbols_in_volume": [
   "six.moves.urllib.parse.urlparse"
  ],
  "type": "function"
 },
 "mlflow.db": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.db.commands": {
  "lineno": 6,
  "symbols_in_volume": [
   "click.group"
  ],
  "type": "function"
 },
 "mlflow.db.upgrade": {
  "lineno": 14,
  "symbols_in_volume": [
   "click.argument"
  ],
  "type": "function"
 },
 "mlflow.entities": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.entities._mlflow_object": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.entities._mlflow_object._MLflowObject": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.entities._mlflow_object._MLflowObject.__iter__": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities._mlflow_object._MLflowObject.__repr__": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities._mlflow_object._MLflowObject._get_properties_helper": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities._mlflow_object._MLflowObject._properties": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities._mlflow_object._MLflowObject.from_dictionary": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities._mlflow_object._MLflowObject.from_proto": {
  "lineno": 19,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.entities._mlflow_object._MLflowObjectPrinter": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.entities._mlflow_object._MLflowObjectPrinter.__init__": {
  "lineno": 43,
  "symbols_in_volume": [
   "pprint.PrettyPrinter"
  ],
  "type": "function"
 },
 "mlflow.entities._mlflow_object._MLflowObjectPrinter._entity_to_string": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities._mlflow_object._MLflowObjectPrinter.to_string": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities._mlflow_object.get_classname": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities._mlflow_object.to_string": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.experiment": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.entities.experiment.Experiment": {
  "lineno": 7,
  "symbols_in_volume": [
   "mlflow.entities._mlflow_object._MLflowObject"
  ],
  "type": "class"
 },
 "mlflow.entities.experiment.Experiment.__init__": {
  "lineno": 13,
  "symbols_in_volume": [
   "mlflow.protos.service_pb2.Experiment"
  ],
  "type": "function"
 },
 "mlflow.entities.experiment.Experiment._add_tag": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.experiment.Experiment._set_name": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.experiment.Experiment.artifact_location": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.experiment.Experiment.experiment_id": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.experiment.Experiment.from_proto": {
  "lineno": 52,
  "symbols_in_volume": [
   "mlflow.protos.service_pb2.ExperimentTag.from_proto"
  ],
  "type": "function"
 },
 "mlflow.entities.experiment.Experiment.lifecycle_stage": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.experiment.Experiment.name": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.experiment.Experiment.tags": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.experiment.Experiment.to_proto": {
  "lineno": 62,
  "symbols_in_volume": [
   "mlflow.protos.service_pb2.Experiment",
   "mlflow.protos.service_pb2.ExperimentTag"
  ],
  "type": "function"
 },
 "mlflow.entities.experiment_tag": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.entities.experiment_tag.ExperimentTag": {
  "lineno": 5,
  "symbols_in_volume": [
   "mlflow.entities._mlflow_object._MLflowObject"
  ],
  "type": "class"
 },
 "mlflow.entities.experiment_tag.ExperimentTag.__eq__": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.experiment_tag.ExperimentTag.__init__": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.experiment_tag.ExperimentTag.from_proto": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.experiment_tag.ExperimentTag.key": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.experiment_tag.ExperimentTag.to_proto": {
  "lineno": 26,
  "symbols_in_volume": [
   "mlflow.protos.service_pb2.ExperimentTag"
  ],
  "type": "function"
 },
 "mlflow.entities.experiment_tag.ExperimentTag.value": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.file_info": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.entities.file_info.FileInfo": {
  "lineno": 5,
  "symbols_in_volume": [
   "mlflow.entities._mlflow_object._MLflowObject"
  ],
  "type": "class"
 },
 "mlflow.entities.file_info.FileInfo.__eq__": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.file_info.FileInfo.__init__": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.file_info.FileInfo.file_size": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.file_info.FileInfo.from_proto": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.file_info.FileInfo.is_dir": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.file_info.FileInfo.path": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.file_info.FileInfo.to_proto": {
  "lineno": 35,
  "symbols_in_volume": [
   "mlflow.protos.service_pb2.FileInfo"
  ],
  "type": "function"
 },
 "mlflow.entities.lifecycle_stage": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.entities.lifecycle_stage.LifecycleStage": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.entities.lifecycle_stage.LifecycleStage.is_valid": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.lifecycle_stage.LifecycleStage.matches_view_type": {
  "lineno": 23,
  "symbols_in_volume": [
   "mlflow.entities.view_type.ViewType.ACTIVE_ONLY",
   "mlflow.entities.view_type.ViewType.ALL",
   "mlflow.entities.view_type.ViewType.DELETED_ONLY",
   "mlflow.exceptions.MlflowException"
  ],
  "type": "function"
 },
 "mlflow.entities.lifecycle_stage.LifecycleStage.view_type_to_stages": {
  "lineno": 10,
  "symbols_in_volume": [
   "mlflow.entities.view_type.ViewType.ACTIVE_ONLY",
   "mlflow.entities.view_type.ViewType.ALL",
   "mlflow.entities.view_type.ViewType.DELETED_ONLY"
  ],
  "type": "function"
 },
 "mlflow.entities.metric": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.entities.metric.Metric": {
  "lineno": 5,
  "symbols_in_volume": [
   "mlflow.entities._mlflow_object._MLflowObject"
  ],
  "type": "class"
 },
 "mlflow.entities.metric.Metric.__init__": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.metric.Metric.from_proto": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.metric.Metric.key": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.metric.Metric.step": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.metric.Metric.timestamp": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.metric.Metric.to_proto": {
  "lineno": 36,
  "symbols_in_volume": [
   "mlflow.protos.service_pb2.Metric"
  ],
  "type": "function"
 },
 "mlflow.entities.metric.Metric.value": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.model_registry": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.entities.model_registry._model_registry_entity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.entities.model_registry._model_registry_entity._ModelRegistryEntity": {
  "lineno": 5,
  "symbols_in_volume": [
   "mlflow.entities._mlflow_object._MLflowObject"
  ],
  "type": "class"
 },
 "mlflow.entities.model_registry._model_registry_entity._ModelRegistryEntity.__eq__": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.model_registry._model_registry_entity._ModelRegistryEntity.from_proto": {
  "lineno": 6,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.entities.model_registry.model_version.ModelVersion": {
  "lineno": 6,
  "symbols_in_volume": [
   "mlflow.entities.model_registry._model_registry_entity._ModelRegistryEntity"
  ],
  "type": "class"
 },
 "mlflow.entities.model_registry.model_version.ModelVersion.__init__": {
  "lineno": 14,
  "symbols_in_volume": [
   "mlflow.protos.model_registry_pb2.ModelVersion"
  ],
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version.ModelVersion._properties": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version.ModelVersion.creation_timestamp": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version.ModelVersion.current_stage": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version.ModelVersion.description": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version.ModelVersion.from_proto": {
  "lineno": 92,
  "symbols_in_volume": [
   "mlflow.entities.model_registry.model_version_status.ModelVersionStatus.to_string"
  ],
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version.ModelVersion.last_updated_timestamp": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version.ModelVersion.name": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version.ModelVersion.run_id": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version.ModelVersion.source": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version.ModelVersion.status": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version.ModelVersion.status_message": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version.ModelVersion.to_proto": {
  "lineno": 108,
  "symbols_in_volume": [
   "mlflow.entities.model_registry.model_version_status.ModelVersionStatus.from_string",
   "mlflow.protos.model_registry_pb2.ModelVersion"
  ],
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version.ModelVersion.user_id": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version.ModelVersion.version": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version_stages": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.entities.model_registry.model_version_stages.get_canonical_stage": {
  "lineno": 16,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  ],
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version_status": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.entities.model_registry.model_version_status.ModelVersionStatus": {
  "lineno": 4,
  "symbols_in_volume": [
   "mlflow.protos.model_registry_pb2.ModelVersionStatus.Value",
   "mlflow.protos.model_registry_pb2.ModelVersionStatus.keys"
  ],
  "type": "class"
 },
 "mlflow.entities.model_registry.model_version_status.ModelVersionStatus.all_status": {
  "lineno": 29,
  "symbols_in_volume": [
   "mlflow.protos.model_registry_pb2.ModelVersionStatus._STATUS_TO_STRING.keys"
  ],
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version_status.ModelVersionStatus.from_string": {
  "lineno": 13,
  "symbols_in_volume": [
   "mlflow.protos.model_registry_pb2.ModelVersionStatus._STRING_TO_STATUS",
   "mlflow.protos.model_registry_pb2.ModelVersionStatus._STRING_TO_STATUS.keys"
  ],
  "type": "function"
 },
 "mlflow.entities.model_registry.model_version_status.ModelVersionStatus.to_string": {
  "lineno": 21,
  "symbols_in_volume": [
   "mlflow.protos.model_registry_pb2.ModelVersionStatus._STATUS_TO_STRING",
   "mlflow.protos.model_registry_pb2.ModelVersionStatus._STATUS_TO_STRING.keys"
  ],
  "type": "function"
 },
 "mlflow.entities.model_registry.registered_model": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.entities.model_registry.registered_model.RegisteredModel": {
  "lineno": 6,
  "symbols_in_volume": [
   "mlflow.entities.model_registry._model_registry_entity._ModelRegistryEntity"
  ],
  "type": "class"
 },
 "mlflow.entities.model_registry.registered_model.RegisteredModel.__init__": {
  "lineno": 14,
  "symbols_in_volume": [
   "mlflow.protos.model_registry_pb2.RegisteredModel"
  ],
  "type": "function"
 },
 "mlflow.entities.model_registry.registered_model.RegisteredModel._properties": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.model_registry.registered_model.RegisteredModel.creation_timestamp": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.model_registry.registered_model.RegisteredModel.description": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.model_registry.registered_model.RegisteredModel.from_proto": {
  "lineno": 57,
  "symbols_in_volume": [
   "mlflow.entities.model_registry.model_version.ModelVersion.from_proto"
  ],
  "type": "function"
 },
 "mlflow.entities.model_registry.registered_model.RegisteredModel.last_updated_timestamp": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.model_registry.registered_model.RegisteredModel.latest_versions": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.model_registry.registered_model.RegisteredModel.name": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.model_registry.registered_model.RegisteredModel.to_proto": {
  "lineno": 67,
  "symbols_in_volume": [
   "mlflow.protos.model_registry_pb2.RegisteredModel"
  ],
  "type": "function"
 },
 "mlflow.entities.param": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.entities.param.Param": {
  "lineno": 7,
  "symbols_in_volume": [
   "mlflow.entities._mlflow_object._MLflowObject"
  ],
  "type": "class"
 },
 "mlflow.entities.param.Param.__init__": {
  "lineno": 12,
  "symbols_in_volume": [
   "sys.modules"
  ],
  "type": "function"
 },
 "mlflow.entities.param.Param.from_proto": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.param.Param.key": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.param.Param.to_proto": {
  "lineno": 31,
  "symbols_in_volume": [
   "mlflow.protos.service_pb2.Param"
  ],
  "type": "function"
 },
 "mlflow.entities.param.Param.value": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.run": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.entities.run.Run": {
  "lineno": 8,
  "symbols_in_volume": [
   "mlflow.entities._mlflow_object._MLflowObject"
  ],
  "type": "class"
 },
 "mlflow.entities.run.Run.__init__": {
  "lineno": 13,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException"
  ],
  "type": "function"
 },
 "mlflow.entities.run.Run.data": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.run.Run.from_proto": {
  "lineno": 44,
  "symbols_in_volume": [
   "mlflow.entities.run_data.RunData.from_proto",
   "mlflow.entities.run_info.RunInfo.from_proto"
  ],
  "type": "function"
 },
 "mlflow.entities.run.Run.info": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.run.Run.to_dictionary": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.run.Run.to_proto": {
  "lineno": 37,
  "symbols_in_volume": [
   "mlflow.protos.service_pb2.Run"
  ],
  "type": "function"
 },
 "mlflow.entities.run_data": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.entities.run_data.RunData": {
  "lineno": 9,
  "symbols_in_volume": [
   "mlflow.entities._mlflow_object._MLflowObject"
  ],
  "type": "class"
 },
 "mlflow.entities.run_data.RunData.__init__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.run_data.RunData._add_metric": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.run_data.RunData._add_param": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.run_data.RunData._add_tag": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.run_data.RunData.from_proto": {
  "lineno": 70,
  "symbols_in_volume": [
   "mlflow.entities.metric.Metric.from_proto",
   "mlflow.protos.service_pb2.Param.from_proto",
   "mlflow.protos.service_pb2.RunTag.from_proto"
  ],
  "type": "function"
 },
 "mlflow.entities.run_data.RunData.metrics": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.run_data.RunData.params": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.run_data.RunData.tags": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.run_data.RunData.to_dictionary": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.run_data.RunData.to_proto": {
  "lineno": 56,
  "symbols_in_volume": [
   "mlflow.protos.service_pb2.Param",
   "mlflow.protos.service_pb2.RunData",
   "mlflow.protos.service_pb2.RunTag"
  ],
  "type": "function"
 },
 "mlflow.entities.run_info": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.entities.run_info.RunInfo": {
  "lineno": 33,
  "symbols_in_volume": [
   "mlflow.entities._mlflow_object._MLflowObject"
  ],
  "type": "class"
 },
 "mlflow.entities.run_info.RunInfo.__eq__": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.__init__": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo._copy_with_overrides": {
  "lineno": 69,
  "symbols_in_volume": [
   "mlflow.protos.service_pb2.RunInfo.from_proto"
  ],
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.artifact_uri": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.end_time": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.experiment_id": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.from_proto": {
  "lineno": 142,
  "symbols_in_volume": [
   "mlflow.entities.run_status.RunStatus.to_string"
  ],
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.get_orderable_attributes": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.get_searchable_attributes": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.lifecycle_stage": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.run_id": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.run_uuid": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.start_time": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.status": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.to_proto": {
  "lineno": 127,
  "symbols_in_volume": [
   "mlflow.entities.run_status.RunStatus.from_string",
   "mlflow.protos.service_pb2.RunInfo"
  ],
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.user_id": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.run_info.check_run_is_active": {
  "lineno": 9,
  "symbols_in_volume": [
   "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
   "mlflow.exceptions.MlflowException"
  ],
  "type": "function"
 },
 "mlflow.entities.run_info.check_run_is_deleted": {
  "lineno": 15,
  "symbols_in_volume": [
   "mlflow.entities.lifecycle_stage.LifecycleStage.DELETED",
   "mlflow.exceptions.MlflowException"
  ],
  "type": "function"
 },
 "mlflow.entities.run_info.orderable_attribute": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.entities.run_info.searchable_attribute": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.entities.run_status": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.entities.run_status.RunStatus": {
  "lineno": 4,
  "symbols_in_volume": [
   "mlflow.protos.service_pb2.RunStatus.Value",
   "mlflow.protos.service_pb2.RunStatus.keys"
  ],
  "type": "class"
 },
 "mlflow.entities.run_status.RunStatus.all_status": {
  "lineno": 35,
  "symbols_in_volume": [
   "mlflow.protos.service_pb2.RunStatus._STATUS_TO_STRING.keys"
  ],
  "type": "function"
 },
 "mlflow.entities.run_status.RunStatus.from_string": {
  "lineno": 16,
  "symbols_in_volume": [
   "mlflow.protos.service_pb2.RunStatus._STRING_TO_STATUS",
   "mlflow.protos.service_pb2.RunStatus._STRING_TO_STATUS.keys"
  ],
  "type": "function"
 },
 "mlflow.entities.run_status.RunStatus.is_terminated": {
  "lineno": 31,
  "symbols_in_volume": [
   "mlflow.protos.service_pb2.RunStatus._TERMINATED_STATUSES"
  ],
  "type": "function"
 },
 "mlflow.entities.run_status.RunStatus.to_string": {
  "lineno": 24,
  "symbols_in_volume": [
   "mlflow.protos.service_pb2.RunStatus._STATUS_TO_STRING",
   "mlflow.protos.service_pb2.RunStatus._STATUS_TO_STRING.keys"
  ],
  "type": "function"
 },
 "mlflow.entities.run_tag": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.entities.run_tag.RunTag": {
  "lineno": 5,
  "symbols_in_volume": [
   "mlflow.entities._mlflow_object._MLflowObject"
  ],
  "type": "class"
 },
 "mlflow.entities.run_tag.RunTag.__eq__": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.run_tag.RunTag.__init__": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.run_tag.RunTag.from_proto": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.run_tag.RunTag.key": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.run_tag.RunTag.to_proto": {
  "lineno": 27,
  "symbols_in_volume": [
   "mlflow.protos.service_pb2.RunTag"
  ],
  "type": "function"
 },
 "mlflow.entities.run_tag.RunTag.value": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.source_type": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.entities.source_type.SourceType": {
  "lineno": 1,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.entities.source_type.SourceType.from_string": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.source_type.SourceType.to_string": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.view_type": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.entities.view_type.ViewType": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.entities.view_type.ViewType.from_proto": {
  "lineno": 40,
  "symbols_in_volume": [
   "mlflow.protos.service_pb2.ACTIVE_ONLY",
   "mlflow.protos.service_pb2.ALL",
   "mlflow.protos.service_pb2.DELETED_ONLY"
  ],
  "type": "function"
 },
 "mlflow.entities.view_type.ViewType.from_string": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.entities.view_type.ViewType.to_proto": {
  "lineno": 30,
  "symbols_in_volume": [
   "mlflow.protos.service_pb2.ACTIVE_ONLY",
   "mlflow.protos.service_pb2.ALL",
   "mlflow.protos.service_pb2.DELETED_ONLY"
  ],
  "type": "function"
 },
 "mlflow.entities.view_type.ViewType.to_string": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.exceptions": {
  "lineno": null,
  "symbols_in_volume": [
   "mlflow.protos.databricks_pb2.BAD_REQUEST",
   "mlflow.protos.databricks_pb2.ENDPOINT_NOT_FOUND",
   "mlflow.protos.databricks_pb2.ErrorCode.Name",
   "mlflow.protos.databricks_pb2.INTERNAL_ERROR",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "mlflow.protos.databricks_pb2.INVALID_STATE",
   "mlflow.protos.databricks_pb2.PERMISSION_DENIED",
   "mlflow.protos.databricks_pb2.REQUEST_LIMIT_EXCEEDED",
   "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS",
   "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
   "mlflow.protos.databricks_pb2.TEMPORARILY_UNAVAILABLE"
  ],
  "type": "module"
 },
 "mlflow.exceptions.ExecutionException": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.exceptions.MissingConfigException": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.exceptions.MlflowException": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.exceptions.MlflowException.__init__": {
  "lineno": 29,
  "symbols_in_volume": [
   "mlflow.protos.databricks_pb2.ErrorCode.Name",
   "mlflow.protos.databricks_pb2.INTERNAL_ERROR"
  ],
  "type": "function"
 },
 "mlflow.exceptions.MlflowException.get_http_status_code": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.exceptions.MlflowException.serialize_as_json": {
  "lineno": 47,
  "symbols_in_volume": [
   "json.dumps"
  ],
  "type": "function"
 },
 "mlflow.exceptions.RestException": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.exceptions.RestException.__init__": {
  "lineno": 58,
  "symbols_in_volume": [
   "json",
   "json.get",
   "mlflow.protos.databricks_pb2.ErrorCode.Name",
   "mlflow.protos.databricks_pb2.ErrorCode.Value",
   "mlflow.protos.databricks_pb2.INTERNAL_ERROR"
  ],
  "type": "function"
 },
 "mlflow.experiments": {
  "lineno": null,
  "symbols_in_volume": [
   "click.STRING",
   "click.option"
  ],
  "type": "module"
 },
 "mlflow.experiments.commands": {
  "lineno": 15,
  "symbols_in_volume": [
   "click.group"
  ],
  "type": "function"
 },
 "mlflow.experiments.create": {
  "lineno": 24,
  "symbols_in_volume": [
   "click.STRING",
   "click.option",
   "mlflow.tracking._get_store"
  ],
  "type": "function"
 },
 "mlflow.experiments.delete_experiment": {
  "lineno": 64,
  "symbols_in_volume": [
   "mlflow.tracking._get_store"
  ],
  "type": "function"
 },
 "mlflow.experiments.generate_csv_with_runs": {
  "lineno": 113,
  "symbols_in_volume": [
   "click.STRING",
   "click.option",
   "mlflow.tracking.fluent.search_runs"
  ],
  "type": "function"
 },
 "mlflow.experiments.list_experiments": {
  "lineno": 48,
  "symbols_in_volume": [
   "click.option",
   "mlflow.data.is_uri",
   "mlflow.entities.ViewType.ACTIVE_ONLY",
   "mlflow.entities.ViewType.from_string",
   "mlflow.tracking._get_store",
   "os.path.abspath",
   "tabulate.tabulate"
  ],
  "type": "function"
 },
 "mlflow.experiments.rename_experiment": {
  "lineno": 100,
  "symbols_in_volume": [
   "click.STRING",
   "click.option",
   "mlflow.tracking._get_store"
  ],
  "type": "function"
 },
 "mlflow.experiments.restore_experiment": {
  "lineno": 87,
  "symbols_in_volume": [
   "mlflow.tracking._get_store"
  ],
  "type": "function"
 },
 "mlflow.gluon": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.gluon._GluonModelWrapper": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.gluon._GluonModelWrapper.__init__": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.gluon._GluonModelWrapper.predict": {
  "lineno": 68,
  "symbols_in_volume": [
   "mxnet.nd.array",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "mlflow.gluon._load_pyfunc": {
  "lineno": 79,
  "symbols_in_volume": [
   "mxnet.current_context"
  ],
  "type": "function"
 },
 "mlflow.gluon.autolog": {
  "lineno": 223,
  "symbols_in_volume": [
   "gorilla.Patch",
   "gorilla.Settings",
   "gorilla.apply",
   "mlflow.utils.experimental",
   "mxnet.gluon.contrib.estimator.Estimator"
  ],
  "type": "function"
 },
 "mlflow.gluon.autolog.__MLflowGluonCallback": {
  "lineno": 232,
  "symbols_in_volume": [
   "mxnet.gluon.contrib.estimator.EpochEnd",
   "mxnet.gluon.contrib.estimator.TrainBegin",
   "mxnet.gluon.contrib.estimator.TrainEnd"
  ],
  "type": "class"
 },
 "mlflow.gluon.autolog.__MLflowGluonCallback.__init__": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.gluon.autolog.__MLflowGluonCallback.epoch_end": {
  "lineno": 236,
  "symbols_in_volume": [
   "mlflow.log_metrics",
   "mlflow.utils.autologging_utils.try_mlflow_log"
  ],
  "type": "function"
 },
 "mlflow.gluon.autolog.__MLflowGluonCallback.train_begin": {
  "lineno": 247,
  "symbols_in_volume": [
   "mlflow.log_param",
   "mlflow.utils.autologging_utils.try_mlflow_log"
  ],
  "type": "function"
 },
 "mlflow.gluon.autolog.__MLflowGluonCallback.train_end": {
  "lineno": 262,
  "symbols_in_volume": [
   "mlflow.utils.autologging_utils.try_mlflow_log",
   "mxnet.gluon.nn.HybridSequential"
  ],
  "type": "function"
 },
 "mlflow.gluon.autolog.fit": {
  "lineno": 266,
  "symbols_in_volume": [
   "gorilla.get_original_attribute",
   "gorilla.patch",
   "mlflow.active_run",
   "mlflow.end_run",
   "mxnet.gluon.contrib.estimator.Estimator"
  ],
  "type": "function"
 },
 "mlflow.gluon.get_default_conda_env": {
  "lineno": 161,
  "symbols_in_volume": [
   "mlflow.utils.environment._mlflow_conda_env",
   "mxnet.__version__"
  ],
  "type": "function"
 },
 "mlflow.gluon.load_model": {
  "lineno": 25,
  "symbols_in_volume": [
   "mlflow.tracking.artifact_utils._download_artifact_from_uri",
   "mlflow.utils.experimental",
   "mxnet.gluon.SymbolBlock",
   "mxnet.sym.load",
   "mxnet.sym.var",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.gluon.log_model": {
  "lineno": 171,
  "symbols_in_volume": [
   "mlflow.gluon",
   "mlflow.models.Model.log",
   "mlflow.utils.experimental"
  ],
  "type": "function"
 },
 "mlflow.gluon.save_model": {
  "lineno": 89,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.models.Model",
   "mlflow.pyfunc.add_to_model",
   "mlflow.utils.experimental",
   "os.makedirs",
   "os.path.abspath",
   "os.path.exists",
   "os.path.join",
   "yaml.safe_dump",
   "yaml.safe_load"
  ],
  "type": "function"
 },
 "mlflow.h2o": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.h2o._H2OModelWrapper": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.h2o._H2OModelWrapper.__init__": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.h2o._H2OModelWrapper.predict": {
  "lineno": 156,
  "symbols_in_volume": [
   "h2o.H2OFrame"
  ],
  "type": "function"
 },
 "mlflow.h2o._load_model": {
  "lineno": 140,
  "symbols_in_volume": [
   "h2o.init",
   "h2o.load_model",
   "h2o.no_progress",
   "os.path.abspath",
   "os.path.join",
   "yaml.safe_load"
  ],
  "type": "function"
 },
 "mlflow.h2o._load_pyfunc": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.h2o.get_default_conda_env": {
  "lineno": 26,
  "symbols_in_volume": [
   "h2o.__version__",
   "mlflow.utils.environment._mlflow_conda_env"
  ],
  "type": "function"
 },
 "mlflow.h2o.load_model": {
  "lineno": 173,
  "symbols_in_volume": [
   "mlflow.tracking.artifact_utils._download_artifact_from_uri",
   "mlflow.utils.model_utils._get_flavor_configuration",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.h2o.log_model": {
  "lineno": 105,
  "symbols_in_volume": [
   "mlflow.h2o",
   "mlflow.models.Model.log"
  ],
  "type": "function"
 },
 "mlflow.h2o.save_model": {
  "lineno": 41,
  "symbols_in_volume": [
   "h2o.__version__",
   "h2o.save_model",
   "mlflow.models.Model",
   "mlflow.pyfunc.add_to_model",
   "os.makedirs",
   "os.path.abspath",
   "os.path.basename",
   "os.path.exists",
   "os.path.join",
   "yaml.safe_dump",
   "yaml.safe_load"
  ],
  "type": "function"
 },
 "mlflow.keras": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.keras._KerasModelWrapper": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.keras._KerasModelWrapper.__init__": {
  "lineno": 317,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.keras._KerasModelWrapper.predict": {
  "lineno": 322,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "mlflow.keras._load_model": {
  "lineno": 290,
  "symbols_in_volume": [
   "cloudpickle.load",
   "distutils.version.StrictVersion",
   "h5py.File",
   "importlib.import_module",
   "os.path.abspath",
   "os.path.isdir",
   "os.path.isfile",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.keras._load_pyfunc": {
  "lineno": 335,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "importlib.import_module",
   "keras",
   "mlflow.exceptions.MlflowException",
   "os.path.isfile",
   "os.path.join",
   "tensorflow.Graph",
   "tensorflow.Session",
   "tensorflow.__version__"
  ],
  "type": "function"
 },
 "mlflow.keras._save_custom_objects": {
  "lineno": 272,
  "symbols_in_volume": [
   "cloudpickle.dump",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.keras.autolog": {
  "lineno": 408,
  "symbols_in_volume": [
   "gorilla.Patch",
   "gorilla.Settings",
   "gorilla.apply",
   "keras.Model",
   "mlflow.utils.annotations.experimental"
  ],
  "type": "function"
 },
 "mlflow.keras.autolog.__MLflowKerasCallback": {
  "lineno": 438,
  "symbols_in_volume": [
   "keras.callbacks.Callback"
  ],
  "type": "class"
 },
 "mlflow.keras.autolog.__MLflowKerasCallback.on_epoch_end": {
  "lineno": 470,
  "symbols_in_volume": [
   "mlflow.utils.autologging_utils.try_mlflow_log"
  ],
  "type": "function"
 },
 "mlflow.keras.autolog.__MLflowKerasCallback.on_train_begin": {
  "lineno": 444,
  "symbols_in_volume": [
   "keras.backend.eval",
   "mlflow.utils.autologging_utils.try_mlflow_log",
   "os.path.join",
   "shutil.rmtree",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "mlflow.keras.autolog.__MLflowKerasCallback.on_train_end": {
  "lineno": 475,
  "symbols_in_volume": [
   "mlflow.utils.autologging_utils.try_mlflow_log"
  ],
  "type": "function"
 },
 "mlflow.keras.autolog._early_stop_check": {
  "lineno": 478,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "keras.__version__",
   "keras.callbacks.EarlyStopping",
   "keras.callbacks.callbacks.EarlyStopping"
  ],
  "type": "function"
 },
 "mlflow.keras.autolog._get_early_stop_callback_attrs": {
  "lineno": 500,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.keras.autolog._log_early_stop_callback_metrics": {
  "lineno": 506,
  "symbols_in_volume": [
   "mlflow.utils.autologging_utils.try_mlflow_log"
  ],
  "type": "function"
 },
 "mlflow.keras.autolog._log_early_stop_callback_params": {
  "lineno": 488,
  "symbols_in_volume": [
   "mlflow.utils.autologging_utils.try_mlflow_log"
  ],
  "type": "function"
 },
 "mlflow.keras.autolog._run_and_log_function": {
  "lineno": 525,
  "symbols_in_volume": [
   "mlflow.utils.autologging_utils.log_fn_args_as_params",
   "mlflow.utils.autologging_utils.try_mlflow_log"
  ],
  "type": "function"
 },
 "mlflow.keras.autolog.fit": {
  "lineno": 558,
  "symbols_in_volume": [
   "gorilla.get_original_attribute",
   "gorilla.patch",
   "keras.Model"
  ],
  "type": "function"
 },
 "mlflow.keras.autolog.fit_generator": {
  "lineno": 564,
  "symbols_in_volume": [
   "gorilla.get_original_attribute",
   "gorilla.patch",
   "keras.Model"
  ],
  "type": "function"
 },
 "mlflow.keras.get_default_conda_env": {
  "lineno": 44,
  "symbols_in_volume": [
   "cloudpickle.__version__",
   "distutils.version.LooseVersion",
   "keras",
   "mlflow.utils.environment._mlflow_conda_env",
   "tensorflow.__version__"
  ],
  "type": "function"
 },
 "mlflow.keras.load_model": {
  "lineno": 371,
  "symbols_in_volume": [
   "importlib.import_module",
   "mlflow.tracking.artifact_utils._download_artifact_from_uri",
   "mlflow.utils.model_utils._get_flavor_configuration",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.keras.log_model": {
  "lineno": 213,
  "symbols_in_volume": [
   "mlflow.models.Model.log"
  ],
  "type": "function"
 },
 "mlflow.keras.save_model": {
  "lineno": 82,
  "symbols_in_volume": [
   "importlib.import_module",
   "mlflow.exceptions.MlflowException",
   "mlflow.models.Model",
   "mlflow.pyfunc.add_to_model",
   "os.makedirs",
   "os.path.abspath",
   "os.path.exists",
   "os.path.join",
   "shutil.copyfile",
   "tempfile.NamedTemporaryFile",
   "yaml.safe_dump",
   "yaml.safe_load"
  ],
  "type": "function"
 },
 "mlflow.keras.save_model._is_plain_keras": {
  "lineno": 131,
  "symbols_in_volume": [
   "keras.engine.network.Network"
  ],
  "type": "function"
 },
 "mlflow.keras.save_model._is_tf_keras": {
  "lineno": 139,
  "symbols_in_volume": [
   "tensorflow.keras.models.Model"
  ],
  "type": "function"
 },
 "mlflow.lightgbm": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "mlflow.lightgbm._LGBModelWrapper": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.lightgbm._LGBModelWrapper.__init__": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.lightgbm._LGBModelWrapper.predict": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.lightgbm._load_model": {
  "lineno": 155,
  "symbols_in_volume": [
   "lightgbm.Booster"
  ],
  "type": "function"
 },
 "mlflow.lightgbm._load_pyfunc": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.lightgbm.autolog": {
  "lineno": 200,
  "symbols_in_volume": [
   "gorilla.Patch",
   "gorilla.Settings",
   "gorilla.apply",
   "lightgbm",
   "mlflow.utils.annotations.experimental"
  ],
  "type": "function"
 },
 "mlflow.lightgbm.autolog.train": {
  "lineno": 216,
  "symbols_in_volume": [
   "gorilla.get_original_attribute",
   "gorilla.patch",
   "inspect.getargspec",
   "json.dump",
   "lightgbm",
   "mlflow.active_run",
   "mlflow.end_run",
   "mlflow.log_artifact",
   "mlflow.log_metric",
   "mlflow.log_metrics",
   "mlflow.log_params",
   "mlflow.start_run",
   "mlflow.utils.autologging_utils.log_fn_args_as_params",
   "mlflow.utils.autologging_utils.try_mlflow_log",
   "os.path.join",
   "shutil.rmtree",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "mlflow.lightgbm.autolog.train.log_feature_importance_plot": {
  "lineno": 232,
  "symbols_in_volume": [
   "matplotlib.pyplot.close",
   "matplotlib.pyplot.subplots",
   "mlflow.log_artifact",
   "mlflow.utils.autologging_utils.try_mlflow_log",
   "numpy.arange",
   "numpy.argsort",
   "numpy.array",
   "os.path.join",
   "shutil.rmtree",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "mlflow.lightgbm.autolog.train.record_eval_results": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.lightgbm.autolog.train.record_eval_results.callback": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.lightgbm.get_default_conda_env": {
  "lineno": 48,
  "symbols_in_volume": [
   "lightgbm.__version__",
   "mlflow.utils.environment._mlflow_conda_env"
  ],
  "type": "function"
 },
 "mlflow.lightgbm.load_model": {
  "lineno": 169,
  "symbols_in_volume": [
   "mlflow.tracking.artifact_utils._download_artifact_from_uri",
   "mlflow.utils.model_utils._get_flavor_configuration",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.lightgbm.log_model": {
  "lineno": 119,
  "symbols_in_volume": [
   "mlflow.lightgbm",
   "mlflow.models.Model.log"
  ],
  "type": "function"
 },
 "mlflow.lightgbm.save_model": {
  "lineno": 64,
  "symbols_in_volume": [
   "lightgbm.__version__",
   "mlflow.exceptions.MlflowException",
   "mlflow.models.Model",
   "mlflow.pyfunc.add_to_model",
   "os.makedirs",
   "os.path.abspath",
   "os.path.exists",
   "os.path.join",
   "yaml.safe_dump",
   "yaml.safe_load"
  ],
  "type": "function"
 },
 "mlflow.mleap": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.mleap.MLeapSerializationException": {
  "lineno": 175,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException"
  ],
  "type": "class"
 },
 "mlflow.mleap._handle_py4j_error": {
  "lineno": 165,
  "symbols_in_volume": [
   "six.reraise",
   "sys.exc_info",
   "traceback.print_exc"
  ],
  "type": "function"
 },
 "mlflow.mleap.add_to_model": {
  "lineno": 111,
  "symbols_in_volume": [
   "mlflow.utils.keyword_only",
   "os.makedirs",
   "os.path.abspath",
   "os.path.exists",
   "os.path.join",
   "py4j.protocol.Py4JError",
   "pyspark.ml.pipeline.PipelineModel",
   "pyspark.sql.DataFrame",
   "pyspark.sql.DataFrame.__module__"
  ],
  "type": "function"
 },
 "mlflow.mleap.log_model": {
  "lineno": 27,
  "symbols_in_volume": [
   "mlflow.mleap",
   "mlflow.models.Model.log",
   "mlflow.utils.keyword_only"
  ],
  "type": "function"
 },
 "mlflow.mleap.save_model": {
  "lineno": 87,
  "symbols_in_volume": [
   "mlflow.models.Model",
   "mlflow.utils.keyword_only",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.models": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "mlflow.models.FlavorBackend": {
  "lineno": 121,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "mlflow.models.FlavorBackend.__init__": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.models.FlavorBackend.can_build_image": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.models.FlavorBackend.can_score_model": {
  "lineno": 173,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.models.FlavorBackend.predict": {
  "lineno": 132,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.models.FlavorBackend.prepare_env": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.models.FlavorBackend.serve": {
  "lineno": 154,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.models.Model": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.models.Model.__init__": {
  "lineno": 38,
  "symbols_in_volume": [
   "datetime.datetime.utcnow"
  ],
  "type": "function"
 },
 "mlflow.models.Model.add_flavor": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.models.Model.from_dict": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.models.Model.load": {
  "lineno": 67,
  "symbols_in_volume": [
   "os.path.isdir",
   "os.path.join",
   "yaml.safe_load"
  ],
  "type": "function"
 },
 "mlflow.models.Model.log": {
  "lineno": 81,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.get_artifact_uri",
   "mlflow.register_model",
   "mlflow.tracking.fluent._get_or_start_run",
   "mlflow.tracking.fluent._record_logged_model",
   "mlflow.tracking.fluent.active_run",
   "mlflow.tracking.fluent.log_artifacts",
   "mlflow.utils.file_utils.TempDir"
  ],
  "type": "function"
 },
 "mlflow.models.Model.save": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.models.Model.to_dict": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.models.Model.to_json": {
  "lineno": 59,
  "symbols_in_volume": [
   "json.dumps"
  ],
  "type": "function"
 },
 "mlflow.models.Model.to_yaml": {
  "lineno": 56,
  "symbols_in_volume": [
   "yaml.safe_dump"
  ],
  "type": "function"
 },
 "mlflow.models.cli": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "mlflow.models.cli._get_flavor_backend": {
  "lineno": 156,
  "symbols_in_volume": [
   "mlflow.models.Model.load",
   "mlflow.models.flavor_backend_registry.get_flavor_backend",
   "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository.get_underlying_uri",
   "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository.is_models_uri",
   "mlflow.tracking.artifact_utils._download_artifact_from_uri",
   "mlflow.utils.file_utils.TempDir",
   "mlflow.utils.uri.append_to_uri_path"
  ],
  "type": "function"
 },
 "mlflow.models.cli.build_docker": {
  "lineno": 111,
  "symbols_in_volume": [
   "click.option",
   "mlflow.utils.cli_args.INSTALL_MLFLOW",
   "mlflow.utils.cli_args.MODEL_URI",
   "os.environ.get"
  ],
  "type": "function"
 },
 "mlflow.models.cli.commands": {
  "lineno": 16,
  "symbols_in_volume": [
   "click.group"
  ],
  "type": "function"
 },
 "mlflow.models.cli.predict": {
  "lineno": 60,
  "symbols_in_volume": [
   "click.option",
   "mlflow.utils.cli_args.INSTALL_MLFLOW",
   "mlflow.utils.cli_args.MODEL_URI",
   "mlflow.utils.cli_args.NO_CONDA"
  ],
  "type": "function"
 },
 "mlflow.models.cli.prepare_env": {
  "lineno": 95,
  "symbols_in_volume": [
   "mlflow.utils.cli_args.INSTALL_MLFLOW",
   "mlflow.utils.cli_args.MODEL_URI",
   "mlflow.utils.cli_args.NO_CONDA"
  ],
  "type": "function"
 },
 "mlflow.models.cli.serve": {
  "lineno": 27,
  "symbols_in_volume": [
   "mlflow.utils.cli_args.HOST",
   "mlflow.utils.cli_args.INSTALL_MLFLOW",
   "mlflow.utils.cli_args.MODEL_URI",
   "mlflow.utils.cli_args.NO_CONDA",
   "mlflow.utils.cli_args.PORT",
   "mlflow.utils.cli_args.WORKERS"
  ],
  "type": "function"
 },
 "mlflow.models.container": {
  "lineno": null,
  "symbols_in_volume": [
   "mlflow.mleap.FLAVOR_NAME",
   "mlflow.pyfunc.FLAVOR_NAME"
  ],
  "type": "module"
 },
 "mlflow.models.container._await_subprocess_exit_any": {
  "lineno": 178,
  "symbols_in_volume": [
   "os.wait"
  ],
  "type": "function"
 },
 "mlflow.models.container._container_includes_mlflow_source": {
  "lineno": 170,
  "symbols_in_volume": [
   "os.path.exists"
  ],
  "type": "function"
 },
 "mlflow.models.container._init": {
  "lineno": 41,
  "symbols_in_volume": [
   "sys.argv"
  ],
  "type": "function"
 },
 "mlflow.models.container._install_pyfunc_deps": {
  "lineno": 79,
  "symbols_in_volume": [
   "mlflow.models.Model.load",
   "mlflow.pyfunc.ENV",
   "mlflow.pyfunc.FLAVOR_NAME",
   "mlflow.version.VERSION",
   "os.makedirs",
   "os.path.dirname",
   "os.path.exists",
   "os.path.join",
   "shutil.copyfile",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "mlflow.models.container._serve": {
  "lineno": 56,
  "symbols_in_volume": [
   "mlflow.mleap.FLAVOR_NAME",
   "mlflow.models.Model.load",
   "mlflow.pyfunc.FLAVOR_NAME",
   "os.environ",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.models.container._serve_mleap": {
  "lineno": 158,
  "symbols_in_volume": [
   "mlflow.mleap",
   "mlflow.mleap.pid",
   "signal.SIGTERM",
   "signal.signal",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "mlflow.models.container._serve_pyfunc": {
  "lineno": 121,
  "symbols_in_volume": [
   "mlflow.models.__name__",
   "mlflow.models.docker_utils.DISABLE_ENV_CREATION",
   "mlflow.pyfunc.ENV",
   "mlflow.pyfunc.FLAVOR_NAME",
   "multiprocessing.cpu_count",
   "os.environ.get",
   "os.getenv",
   "os.system",
   "pkg_resources.resource_filename",
   "signal.SIGTERM",
   "signal.signal",
   "subprocess.Popen",
   "subprocess.check_call"
  ],
  "type": "function"
 },
 "mlflow.models.container._sigterm_handler": {
  "lineno": 187,
  "symbols_in_volume": [
   "os.kill",
   "signal.SIGTERM",
   "sys.exit"
  ],
  "type": "function"
 },
 "mlflow.models.container._train": {
  "lineno": 174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.models.container.scoring_server": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.models.container.scoring_server.wsgi": {
  "lineno": null,
  "symbols_in_volume": [
   "mlflow.pyfunc.load_pyfunc",
   "mlflow.pyfunc.scoring_server.init"
  ],
  "type": "module"
 },
 "mlflow.models.docker_utils": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "mlflow.models.docker_utils._build_image": {
  "lineno": 81,
  "symbols_in_volume": [
   "mlflow.utils.file_utils.TempDir",
   "mlflow.utils.logging_utils.eprint",
   "os.path.abspath",
   "os.path.join",
   "os.system",
   "subprocess.PIPE",
   "subprocess.Popen",
   "subprocess.STDOUT"
  ],
  "type": "function"
 },
 "mlflow.models.docker_utils._get_mlflow_install_step": {
  "lineno": 47,
  "symbols_in_volume": [
   "mlflow.utils.file_utils._copy_project",
   "mlflow.version.VERSION"
  ],
  "type": "function"
 },
 "mlflow.models.flavor_backend_registry": {
  "lineno": null,
  "symbols_in_volume": [
   "mlflow.pyfunc.FLAVOR_NAME",
   "mlflow.pyfunc.backend.PyFuncBackend",
   "mlflow.rfunc.backend.RFuncBackend"
  ],
  "type": "module"
 },
 "mlflow.models.flavor_backend_registry.get_flavor_backend": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.onnx": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.onnx._OnnxModelWrapper": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.onnx._OnnxModelWrapper.__init__": {
  "lineno": 119,
  "symbols_in_volume": [
   "onnxruntime.InferenceSession"
  ],
  "type": "function"
 },
 "mlflow.onnx._OnnxModelWrapper._cast_float64_to_float32": {
  "lineno": 130,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64"
  ],
  "type": "function"
 },
 "mlflow.onnx._OnnxModelWrapper.predict": {
  "lineno": 137,
  "symbols_in_volume": [
   "mlflow.utils.experimental",
   "pandas.DataFrame.from_dict"
  ],
  "type": "function"
 },
 "mlflow.onnx._load_model": {
  "lineno": 109,
  "symbols_in_volume": [
   "onnx.checker.check_model",
   "onnx.load"
  ],
  "type": "function"
 },
 "mlflow.onnx._load_pyfunc": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.onnx.get_default_conda_env": {
  "lineno": 32,
  "symbols_in_volume": [
   "mlflow.utils.environment._mlflow_conda_env",
   "mlflow.utils.experimental",
   "onnx.__version__",
   "onnxruntime.__version__"
  ],
  "type": "function"
 },
 "mlflow.onnx.load_model": {
  "lineno": 186,
  "symbols_in_volume": [
   "mlflow.tracking.artifact_utils._download_artifact_from_uri",
   "mlflow.utils.experimental",
   "mlflow.utils.model_utils._get_flavor_configuration",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.onnx.log_model": {
  "lineno": 213,
  "symbols_in_volume": [
   "mlflow.models.Model.log",
   "mlflow.utils.experimental"
  ],
  "type": "function"
 },
 "mlflow.onnx.save_model": {
  "lineno": 53,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.models.Model",
   "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS",
   "mlflow.pyfunc.add_to_model",
   "mlflow.utils.experimental",
   "onnx.__version__",
   "onnx.save_model",
   "os.makedirs",
   "os.path.abspath",
   "os.path.exists",
   "os.path.join",
   "yaml.safe_dump",
   "yaml.safe_load"
  ],
  "type": "function"
 },
 "mlflow.projects": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "mlflow.store.artifact.azure_blob_artifact_repo.AzureBlobArtifactRepository",
   "mlflow.store.artifact.gcs_artifact_repo.GCSArtifactRepository",
   "mlflow.store.artifact.hdfs_artifact_repo.HdfsArtifactRepository",
   "mlflow.store.artifact.local_artifact_repo.LocalArtifactRepository",
   "mlflow.store.artifact.s3_artifact_repo.S3ArtifactRepository"
  ],
  "type": "module"
 },
 "mlflow.projects._build_docker_image": {
  "lineno": 762,
  "symbols_in_volume": [
   "docker.from_env",
   "mlflow.tracking.MlflowClient",
   "mlflow.utils.mlflow_tags.MLFLOW_DOCKER_IMAGE_ID",
   "mlflow.utils.mlflow_tags.MLFLOW_DOCKER_IMAGE_URI",
   "os.remove",
   "posixpath.join"
  ],
  "type": "function"
 },
 "mlflow.projects._build_mlflow_run_cmd": {
  "lineno": 517,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.projects._create_docker_build_ctx": {
  "lineno": 743,
  "symbols_in_volume": [
   "mlflow.utils.file_utils.make_tarfile",
   "os.path.join",
   "shutil.copytree",
   "shutil.rmtree",
   "tempfile.mkdtemp",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "mlflow.projects._create_run": {
  "lineno": 551,
  "symbols_in_volume": [
   "mlflow.entities.SourceType.PROJECT",
   "mlflow.entities.SourceType.to_string",
   "mlflow.projects.utils._expand_uri",
   "mlflow.projects.utils._is_local_uri",
   "mlflow.tracking.MlflowClient",
   "mlflow.tracking._tracking_service.utils._get_git_url_if_present",
   "mlflow.tracking.context.default_context._get_user",
   "mlflow.tracking.context.git_context._get_git_commit",
   "mlflow.tracking.fluent.active_run",
   "mlflow.utils.mlflow_tags.MLFLOW_GIT_COMMIT",
   "mlflow.utils.mlflow_tags.MLFLOW_PARENT_RUN_ID",
   "mlflow.utils.mlflow_tags.MLFLOW_PROJECT_ENTRY_POINT",
   "mlflow.utils.mlflow_tags.MLFLOW_SOURCE_NAME",
   "mlflow.utils.mlflow_tags.MLFLOW_SOURCE_TYPE",
   "mlflow.utils.mlflow_tags.MLFLOW_USER"
  ],
  "type": "function"
 },
 "mlflow.projects._fetch_git_repo": {
  "lineno": 373,
  "symbols_in_volume": [
   "git.Repo.init",
   "git.exc.GitCommandError",
   "mlflow.exceptions.ExecutionException"
  ],
  "type": "function"
 },
 "mlflow.projects._fetch_project": {
  "lineno": 318,
  "symbols_in_volume": [
   "distutils.dir_util.copy_tree",
   "mlflow.exceptions.ExecutionException",
   "mlflow.projects.utils._GIT_URI_REGEX.match",
   "mlflow.projects.utils._is_file_uri",
   "mlflow.projects.utils._is_local_uri",
   "mlflow.projects.utils._is_zip_uri",
   "mlflow.projects.utils._parse_subdirectory",
   "os.path.abspath",
   "os.path.exists",
   "os.path.join",
   "six.moves.urllib.parse.unquote",
   "six.moves.urllib.parse.urlparse",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "mlflow.projects._fetch_zip_repo": {
  "lineno": 358,
  "symbols_in_volume": [
   "io.BytesIO",
   "mlflow.exceptions.ExecutionException",
   "requests.HTTPError",
   "requests.get"
  ],
  "type": "function"
 },
 "mlflow.projects._get_azure_blob_artifact_cmd_and_envs": {
  "lineno": 841,
  "symbols_in_volume": [
   "os.environ.get"
  ],
  "type": "function"
 },
 "mlflow.projects._get_conda_bin_executable": {
  "lineno": 406,
  "symbols_in_volume": [
   "os.environ",
   "os.environ.get",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.projects._get_conda_command": {
  "lineno": 610,
  "symbols_in_volume": [
   "os.environ",
   "os.name",
   "os.path.dirname"
  ],
  "type": "function"
 },
 "mlflow.projects._get_conda_env_name": {
  "lineno": 399,
  "symbols_in_volume": [
   "hashlib.sha1"
  ],
  "type": "function"
 },
 "mlflow.projects._get_docker_artifact_storage_cmd_and_envs": {
  "lineno": 889,
  "symbols_in_volume": [
   "mlflow.store.artifact.artifact_repository_registry.get_artifact_repository"
  ],
  "type": "function"
 },
 "mlflow.projects._get_docker_command": {
  "lineno": 650,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.tracking.get_tracking_uri",
   "os.environ.get"
  ],
  "type": "function"
 },
 "mlflow.projects._get_docker_image_uri": {
  "lineno": 795,
  "symbols_in_volume": [
   "mlflow.tracking.context.git_context._get_git_commit"
  ],
  "type": "function"
 },
 "mlflow.projects._get_docker_tracking_cmd_and_envs": {
  "lineno": 898,
  "symbols_in_volume": [
   "mlflow.tracking._TRACKING_URI_ENV_VAR",
   "mlflow.utils.databricks_utils.get_databricks_host_creds",
   "mlflow.utils.uri.get_db_profile_from_uri",
   "mlflow.utils.uri.is_databricks_uri"
  ],
  "type": "function"
 },
 "mlflow.projects._get_entry_point_command": {
  "lineno": 477,
  "symbols_in_volume": [
   "mlflow.projects.utils._get_storage_dir"
  ],
  "type": "function"
 },
 "mlflow.projects._get_gcs_artifact_cmd_and_envs": {
  "lineno": 851,
  "symbols_in_volume": [
   "os.environ"
  ],
  "type": "function"
 },
 "mlflow.projects._get_hdfs_artifact_cmd_and_envs": {
  "lineno": 863,
  "symbols_in_volume": [
   "os.environ.get"
  ],
  "type": "function"
 },
 "mlflow.projects._get_local_artifact_cmd_and_envs": {
  "lineno": 811,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.isabs",
   "os.path.join",
   "os.path.normpath"
  ],
  "type": "function"
 },
 "mlflow.projects._get_local_uri_or_none": {
  "lineno": 635,
  "symbols_in_volume": [
   "mlflow.utils.file_utils.path_to_local_file_uri",
   "mlflow.utils.file_utils.path_to_local_sqlite_uri",
   "six.moves.urllib.parse.urlparse",
   "six.moves.urllib.request.url2pathname"
  ],
  "type": "function"
 },
 "mlflow.projects._get_or_create_conda_env": {
  "lineno": 426,
  "symbols_in_volume": [
   "json.loads",
   "mlflow.exceptions.ExecutionException",
   "mlflow.utils.process.exec_cmd",
   "os.path.basename"
  ],
  "type": "function"
 },
 "mlflow.projects._get_run_env_vars": {
  "lineno": 583,
  "symbols_in_volume": [
   "mlflow.tracking._EXPERIMENT_ID_ENV_VAR",
   "mlflow.tracking._RUN_ID_ENV_VAR",
   "mlflow.tracking._TRACKING_URI_ENV_VAR",
   "mlflow.tracking.get_tracking_uri"
  ],
  "type": "function"
 },
 "mlflow.projects._get_s3_artifact_cmd_and_envs": {
  "lineno": 821,
  "symbols_in_volume": [
   "os.environ",
   "os.environ.get",
   "os.path.join",
   "platform.system",
   "posixpath.exists",
   "posixpath.expanduser"
  ],
  "type": "function"
 },
 "mlflow.projects._invoke_mlflow_run_subprocess": {
  "lineno": 595,
  "symbols_in_volume": [
   "mlflow.projects.submitted_run.LocalSubmittedRun"
  ],
  "type": "function"
 },
 "mlflow.projects._maybe_set_run_terminated": {
  "lineno": 463,
  "symbols_in_volume": [
   "mlflow.entities.RunStatus.is_terminated",
   "mlflow.tracking.MlflowClient"
  ],
  "type": "function"
 },
 "mlflow.projects._parse_kubernetes_config": {
  "lineno": 716,
  "symbols_in_volume": [
   "mlflow.exceptions.ExecutionException",
   "os.path.exists",
   "yaml.safe_load"
  ],
  "type": "function"
 },
 "mlflow.projects._project_spec": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.projects._project_spec.EntryPoint": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.projects._project_spec.EntryPoint.__init__": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.projects._project_spec.EntryPoint._sanitize_param_dict": {
  "lineno": 170,
  "symbols_in_volume": [
   "six.moves.shlex_quote"
  ],
  "type": "function"
 },
 "mlflow.projects._project_spec.EntryPoint._validate_parameters": {
  "lineno": 124,
  "symbols_in_volume": [
   "mlflow.exceptions.ExecutionException"
  ],
  "type": "function"
 },
 "mlflow.projects._project_spec.EntryPoint.compute_command": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.projects._project_spec.EntryPoint.compute_parameters": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.projects._project_spec.Parameter": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.projects._project_spec.Parameter.__init__": {
  "lineno": 177,
  "symbols_in_volume": [
   "mlflow.utils.string_utils.is_string_type"
  ],
  "type": "function"
 },
 "mlflow.projects._project_spec.Parameter._compute_path_value": {
  "lineno": 192,
  "symbols_in_volume": [
   "mlflow.data.download_uri",
   "mlflow.exceptions.ExecutionException",
   "mlflow.utils.file_utils.get_local_path_or_none",
   "os.path.abspath",
   "os.path.basename",
   "os.path.exists",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.projects._project_spec.Parameter._compute_uri_value": {
  "lineno": 186,
  "symbols_in_volume": [
   "mlflow.data.is_uri",
   "mlflow.exceptions.ExecutionException"
  ],
  "type": "function"
 },
 "mlflow.projects._project_spec.Parameter.compute_value": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.projects._project_spec.Project": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.projects._project_spec.Project.__init__": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.projects._project_spec.Project.get_entry_point": {
  "lineno": 98,
  "symbols_in_volume": [
   "mlflow.exceptions.ExecutionException",
   "mlflow.utils.string_utils.is_string_type",
   "os.environ.get",
   "os.path.splitext",
   "six.moves.shlex_quote"
  ],
  "type": "function"
 },
 "mlflow.projects._project_spec._find_mlproject": {
  "lineno": 18,
  "symbols_in_volume": [
   "os.listdir",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.projects._project_spec.load_project": {
  "lineno": 26,
  "symbols_in_volume": [
   "mlflow.exceptions.ExecutionException",
   "os.path.exists",
   "os.path.join",
   "yaml.safe_load"
  ],
  "type": "function"
 },
 "mlflow.projects._resolve_experiment_id": {
  "lineno": 64,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.tracking.MlflowClient",
   "mlflow.tracking.fluent._get_experiment_id"
  ],
  "type": "function"
 },
 "mlflow.projects._run": {
  "lineno": 96,
  "symbols_in_volume": [
   "mlflow.exceptions.ExecutionException",
   "mlflow.projects._project_spec.load_project",
   "mlflow.projects.databricks.run_databricks",
   "mlflow.projects.kubernetes.push_image_to_registry",
   "mlflow.projects.kubernetes.run_kubernetes_job",
   "mlflow.projects.utils._get_git_repo_url",
   "mlflow.projects.utils._is_valid_branch_name",
   "mlflow.tracking.MlflowClient",
   "mlflow.utils.mlflow_tags.LEGACY_MLFLOW_GIT_BRANCH_NAME",
   "mlflow.utils.mlflow_tags.LEGACY_MLFLOW_GIT_REPO_URL",
   "mlflow.utils.mlflow_tags.MLFLOW_GIT_BRANCH",
   "mlflow.utils.mlflow_tags.MLFLOW_GIT_REPO_URL",
   "mlflow.utils.mlflow_tags.MLFLOW_PROJECT_BACKEND",
   "mlflow.utils.mlflow_tags.MLFLOW_PROJECT_ENV"
  ],
  "type": "function"
 },
 "mlflow.projects._run_entry_point": {
  "lineno": 497,
  "symbols_in_volume": [
   "mlflow.projects.submitted_run.LocalSubmittedRun",
   "mlflow.utils.process",
   "os.environ.copy",
   "os.name",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "mlflow.projects._run_mlflow_run_cmd": {
  "lineno": 533,
  "symbols_in_volume": [
   "os.environ.copy",
   "os.setsid",
   "subprocess.CREATE_NEW_PROCESS_GROUP",
   "subprocess.Popen",
   "sys.platform"
  ],
  "type": "function"
 },
 "mlflow.projects._unzip_repo": {
  "lineno": 352,
  "symbols_in_volume": [
   "zipfile.ZipFile"
  ],
  "type": "function"
 },
 "mlflow.projects._validate_docker_env": {
  "lineno": 707,
  "symbols_in_volume": [
   "mlflow.exceptions.ExecutionException"
  ],
  "type": "function"
 },
 "mlflow.projects._validate_docker_installation": {
  "lineno": 694,
  "symbols_in_volume": [
   "mlflow.exceptions.ExecutionException",
   "mlflow.utils.process.exec_cmd"
  ],
  "type": "function"
 },
 "mlflow.projects._validate_execution_environment": {
  "lineno": 629,
  "symbols_in_volume": [
   "mlflow.exceptions.ExecutionException"
  ],
  "type": "function"
 },
 "mlflow.projects._wait_for": {
  "lineno": 297,
  "symbols_in_volume": [
   "mlflow.exceptions.ExecutionException",
   "mlflow.tracking.MlflowClient"
  ],
  "type": "function"
 },
 "mlflow.projects.databricks": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "posixpath.join"
  ],
  "type": "module"
 },
 "mlflow.projects.databricks.DatabricksJobRunner": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.projects.databricks.DatabricksJobRunner.__init__": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner._databricks_api_request": {
  "lineno": 73,
  "symbols_in_volume": [
   "mlflow.utils.databricks_utils.get_databricks_host_creds",
   "mlflow.utils.rest_utils.http_request_safe"
  ],
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner._dbfs_path_exists": {
  "lineno": 99,
  "symbols_in_volume": [
   "json.loads",
   "mlflow.exceptions.ExecutionException",
   "mlflow.exceptions.MlflowException",
   "mlflow.utils.databricks_utils.get_databricks_host_creds",
   "mlflow.utils.rest_utils.http_request"
  ],
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner._get_status": {
  "lineno": 200,
  "symbols_in_volume": [
   "mlflow.entities.RunStatus.FAILED",
   "mlflow.entities.RunStatus.FINISHED",
   "mlflow.entities.RunStatus.RUNNING"
  ],
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner._jobs_runs_submit": {
  "lineno": 78,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner._run_shell_command_job": {
  "lineno": 156,
  "symbols_in_volume": [
   "mlflow.version.VERSION"
  ],
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner._upload_project_to_dbfs": {
  "lineno": 124,
  "symbols_in_volume": [
   "hashlib.sha256",
   "mlflow.utils.file_utils.make_tarfile",
   "os.path.join",
   "posixpath.join",
   "shutil.rmtree",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner._upload_project_to_dbfs.custom_filter": {
  "lineno": 135,
  "symbols_in_volume": [
   "os.path.basename"
  ],
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner._upload_to_dbfs": {
  "lineno": 83,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException"
  ],
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner.get_run_result_state": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner.get_status": {
  "lineno": 208,
  "symbols_in_volume": [
   "mlflow.entities.RunStatus.to_string"
  ],
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner.jobs_runs_cancel": {
  "lineno": 223,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner.jobs_runs_get": {
  "lineno": 228,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner.run_databricks": {
  "lineno": 187,
  "symbols_in_volume": [
   "mlflow.tracking._EXPERIMENT_ID_ENV_VAR",
   "mlflow.tracking._TRACKING_URI_ENV_VAR"
  ],
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksSubmittedRun": {
  "lineno": 294,
  "symbols_in_volume": [
   "mlflow.projects.submitted_run.SubmittedRun"
  ],
  "type": "class"
 },
 "mlflow.projects.databricks.DatabricksSubmittedRun.__init__": {
  "lineno": 307,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksSubmittedRun._print_description_and_log_tags": {
  "lineno": 313,
  "symbols_in_volume": [
   "mlflow.tracking.MlflowClient",
   "mlflow.utils.databricks_utils.get_databricks_host_creds",
   "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_RUN_URL",
   "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_SHELL_JOB_ID",
   "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_SHELL_JOB_RUN_ID",
   "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_WEBAPP_URL"
  ],
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksSubmittedRun.cancel": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksSubmittedRun.get_status": {
  "lineno": 350,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksSubmittedRun.run_id": {
  "lineno": 335,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksSubmittedRun.wait": {
  "lineno": 339,
  "symbols_in_volume": [
   "time.sleep"
  ],
  "type": "function"
 },
 "mlflow.projects.databricks._get_databricks_run_cmd": {
  "lineno": 241,
  "symbols_in_volume": [
   "posixpath.abspath",
   "posixpath.basename",
   "posixpath.join",
   "posixpath.splitext",
   "six.moves.shlex_quote",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "mlflow.projects.databricks._get_tracking_uri_for_run": {
  "lineno": 234,
  "symbols_in_volume": [
   "mlflow.tracking.get_tracking_uri"
  ],
  "type": "function"
 },
 "mlflow.projects.databricks.before_run_validations": {
  "lineno": 41,
  "symbols_in_volume": [
   "mlflow.exceptions.ExecutionException",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "mlflow.utils.uri.is_databricks_uri",
   "mlflow.utils.uri.is_http_uri"
  ],
  "type": "function"
 },
 "mlflow.projects.databricks.run_databricks": {
  "lineno": 279,
  "symbols_in_volume": [
   "mlflow.tracking.get_tracking_uri",
   "mlflow.utils.uri.get_db_profile_from_uri"
  ],
  "type": "function"
 },
 "mlflow.projects.kubernetes": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "mlflow.projects.kubernetes.KubernetesSubmittedRun": {
  "lineno": 83,
  "symbols_in_volume": [
   "mlflow.projects.submitted_run.SubmittedRun"
  ],
  "type": "class"
 },
 "mlflow.projects.kubernetes.KubernetesSubmittedRun.__init__": {
  "lineno": 94,
  "symbols_in_volume": [
   "mlflow.entities.RunStatus.SCHEDULED",
   "threading.RLock"
  ],
  "type": "function"
 },
 "mlflow.projects.kubernetes.KubernetesSubmittedRun._update_status": {
  "lineno": 113,
  "symbols_in_volume": [
   "kubernetes.client.BatchV1Api",
   "mlflow.entities.RunStatus.FAILED",
   "mlflow.entities.RunStatus.FINISHED",
   "mlflow.entities.RunStatus.RUNNING",
   "mlflow.entities.RunStatus.SCHEDULED",
   "mlflow.entities.RunStatus.is_terminated"
  ],
  "type": "function"
 },
 "mlflow.projects.kubernetes.KubernetesSubmittedRun.cancel": {
  "lineno": 141,
  "symbols_in_volume": [
   "kubernetes.client.BatchV1Api",
   "kubernetes.client.V1DeleteOptions",
   "mlflow.entities.RunStatus.KILLED",
   "mlflow.entities.RunStatus.is_terminated"
  ],
  "type": "function"
 },
 "mlflow.projects.kubernetes.KubernetesSubmittedRun.get_status": {
  "lineno": 137,
  "symbols_in_volume": [
   "mlflow.entities.RunStatus.is_terminated"
  ],
  "type": "function"
 },
 "mlflow.projects.kubernetes.KubernetesSubmittedRun.run_id": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.projects.kubernetes.KubernetesSubmittedRun.wait": {
  "lineno": 106,
  "symbols_in_volume": [
   "kubernetes.client.BatchV1Api",
   "mlflow.entities.RunStatus.FINISHED",
   "mlflow.entities.RunStatus.is_terminated",
   "time.sleep"
  ],
  "type": "function"
 },
 "mlflow.projects.kubernetes._get_kubernetes_job_definition": {
  "lineno": 31,
  "symbols_in_volume": [
   "datetime.datetime.now"
  ],
  "type": "function"
 },
 "mlflow.projects.kubernetes._get_run_command": {
  "lineno": 48,
  "symbols_in_volume": [
   "shlex.split",
   "six.moves.shlex_quote"
  ],
  "type": "function"
 },
 "mlflow.projects.kubernetes._load_kube_context": {
  "lineno": 55,
  "symbols_in_volume": [
   "kubernetes.config.config_exception.ConfigException",
   "kubernetes.config.load_incluster_config",
   "kubernetes.config.load_kube_config"
  ],
  "type": "function"
 },
 "mlflow.projects.kubernetes.push_image_to_registry": {
  "lineno": 21,
  "symbols_in_volume": [
   "docker.from_env",
   "mlflow.exceptions.ExecutionException"
  ],
  "type": "function"
 },
 "mlflow.projects.kubernetes.run_kubernetes_job": {
  "lineno": 66,
  "symbols_in_volume": [
   "kubernetes.client.BatchV1Api"
  ],
  "type": "function"
 },
 "mlflow.projects.run": {
  "lineno": 212,
  "symbols_in_volume": [
   "json.load",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "mlflow.projects.submitted_run": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "mlflow.projects.submitted_run.LocalSubmittedRun": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.projects.submitted_run.LocalSubmittedRun.__init__": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.projects.submitted_run.LocalSubmittedRun._get_status": {
  "lineno": 95,
  "symbols_in_volume": [
   "mlflow.entities.RunStatus.FAILED",
   "mlflow.entities.RunStatus.FINISHED",
   "mlflow.entities.RunStatus.RUNNING"
  ],
  "type": "function"
 },
 "mlflow.projects.submitted_run.LocalSubmittedRun.cancel": {
  "lineno": 76,
  "symbols_in_volume": [
   "os.getpgid",
   "os.killpg",
   "signal.SIGTERM"
  ],
  "type": "function"
 },
 "mlflow.projects.submitted_run.LocalSubmittedRun.get_status": {
  "lineno": 103,
  "symbols_in_volume": [
   "mlflow.entities.RunStatus.to_string"
  ],
  "type": "function"
 },
 "mlflow.projects.submitted_run.LocalSubmittedRun.run_id": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.projects.submitted_run.LocalSubmittedRun.wait": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.projects.submitted_run.SubmittedRun": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.projects.submitted_run.SubmittedRun.cancel": {
  "lineno": 44,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.projects.submitted_run.SubmittedRun.get_status": {
  "lineno": 37,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.projects.submitted_run.SubmittedRun.run_id": {
  "lineno": 53,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.projects.submitted_run.SubmittedRun.wait": {
  "lineno": 28,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.projects.utils": {
  "lineno": null,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "module"
 },
 "mlflow.projects.utils._expand_uri": {
  "lineno": 48,
  "symbols_in_volume": [
   "os.path.abspath"
  ],
  "type": "function"
 },
 "mlflow.projects.utils._get_git_repo_url": {
  "lineno": 33,
  "symbols_in_volume": [
   "git.Repo",
   "git.exc.GitCommandError",
   "git.exc.InvalidGitRepositoryError"
  ],
  "type": "function"
 },
 "mlflow.projects.utils._get_storage_dir": {
  "lineno": 27,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.exists",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "mlflow.projects.utils._is_file_uri": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.projects.utils._is_local_uri": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.projects.utils._is_valid_branch_name": {
  "lineno": 69,
  "symbols_in_volume": [
   "git.Repo",
   "git.exc.GitCommandError"
  ],
  "type": "function"
 },
 "mlflow.projects.utils._is_zip_uri": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.projects.utils._parse_subdirectory": {
  "lineno": 14,
  "symbols_in_volume": [
   "mlflow.exceptions.ExecutionException"
  ],
  "type": "function"
 },
 "mlflow.protos": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.protos.databricks_pb2": {
  "lineno": null,
  "symbols_in_volume": [
   "google.protobuf.descriptor.Descriptor",
   "google.protobuf.descriptor.EnumDescriptor",
   "google.protobuf.descriptor.EnumValueDescriptor",
   "google.protobuf.descriptor.FieldDescriptor",
   "google.protobuf.descriptor.FileDescriptor",
   "google.protobuf.descriptor_pb2.DESCRIPTOR",
   "google.protobuf.descriptor_pb2.EnumOptions.RegisterExtension",
   "google.protobuf.descriptor_pb2.EnumValueOptions.RegisterExtension",
   "google.protobuf.descriptor_pb2.FieldOptions.RegisterExtension",
   "google.protobuf.descriptor_pb2.MessageOptions.RegisterExtension",
   "google.protobuf.descriptor_pb2.MethodOptions.RegisterExtension",
   "google.protobuf.descriptor_pb2.ServiceOptions.RegisterExtension",
   "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper",
   "google.protobuf.message.Message",
   "google.protobuf.reflection.GeneratedProtocolMessageType",
   "google.protobuf.symbol_database.Default",
   "sys.version_info"
  ],
  "type": "module"
 },
 "mlflow.protos.model_registry_pb2": {
  "lineno": null,
  "symbols_in_volume": [
   "google.protobuf.descriptor.Descriptor",
   "google.protobuf.descriptor.EnumDescriptor",
   "google.protobuf.descriptor.EnumValueDescriptor",
   "google.protobuf.descriptor.FieldDescriptor",
   "google.protobuf.descriptor.FileDescriptor",
   "google.protobuf.descriptor.MethodDescriptor",
   "google.protobuf.descriptor.ServiceDescriptor",
   "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper",
   "google.protobuf.message.Message",
   "google.protobuf.reflection.GeneratedProtocolMessageType",
   "google.protobuf.service.Service",
   "google.protobuf.service_reflection.GeneratedServiceStubType",
   "google.protobuf.service_reflection.GeneratedServiceType",
   "google.protobuf.symbol_database.Default",
   "sys.version_info"
  ],
  "type": "module"
 },
 "mlflow.protos.scalapb": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.protos.scalapb.scalapb_pb2": {
  "lineno": null,
  "symbols_in_volume": [
   "google.protobuf.descriptor.Descriptor",
   "google.protobuf.descriptor.FieldDescriptor",
   "google.protobuf.descriptor.FileDescriptor",
   "google.protobuf.descriptor_pb2.DESCRIPTOR",
   "google.protobuf.descriptor_pb2.FieldOptions.RegisterExtension",
   "google.protobuf.descriptor_pb2.FileOptions.RegisterExtension",
   "google.protobuf.descriptor_pb2.MessageOptions.RegisterExtension",
   "google.protobuf.message",
   "google.protobuf.message.Message",
   "google.protobuf.message.message_type",
   "google.protobuf.reflection.GeneratedProtocolMessageType",
   "google.protobuf.symbol_database.Default",
   "sys.version_info"
  ],
  "type": "module"
 },
 "mlflow.protos.service_pb2": {
  "lineno": null,
  "symbols_in_volume": [
   "google.protobuf.descriptor.Descriptor",
   "google.protobuf.descriptor.EnumDescriptor",
   "google.protobuf.descriptor.EnumValueDescriptor",
   "google.protobuf.descriptor.FieldDescriptor",
   "google.protobuf.descriptor.FileDescriptor",
   "google.protobuf.descriptor.MethodDescriptor",
   "google.protobuf.descriptor.ServiceDescriptor",
   "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper",
   "google.protobuf.message.Message",
   "google.protobuf.reflection.GeneratedProtocolMessageType",
   "google.protobuf.service.Service",
   "google.protobuf.service_reflection.GeneratedServiceStubType",
   "google.protobuf.service_reflection.GeneratedServiceType",
   "google.protobuf.symbol_database.Default",
   "sys.version_info"
  ],
  "type": "module"
 },
 "mlflow.pyfunc": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "mlflow.pyfunc._load_model_env": {
  "lineno": 259,
  "symbols_in_volume": [
   "mlflow.utils.model_utils._get_flavor_configuration"
  ],
  "type": "function"
 },
 "mlflow.pyfunc._save_model_with_loader_module_and_data_path": {
  "lineno": 702,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.models.Model",
   "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS",
   "mlflow.pyfunc.add_to_model",
   "mlflow.pyfunc.model.get_default_conda_env",
   "mlflow.utils.file_utils._copy_file_or_tree",
   "os.makedirs",
   "os.path.exists",
   "os.path.join",
   "yaml.safe_dump",
   "yaml.safe_load"
  ],
  "type": "function"
 },
 "mlflow.pyfunc._warn_potentially_incompatible_py_version_if_necessary": {
  "lineno": 325,
  "symbols_in_volume": [
   "mlflow.utils.PYTHON_VERSION",
   "mlflow.utils.get_major_minor_py_version"
  ],
  "type": "function"
 },
 "mlflow.pyfunc.add_to_model": {
  "lineno": 226,
  "symbols_in_volume": [
   "copy.deepcopy",
   "mlflow.utils.PYTHON_VERSION"
  ],
  "type": "function"
 },
 "mlflow.pyfunc.backend": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "mlflow.pyfunc.backend.PyFuncBackend": {
  "lineno": 20,
  "symbols_in_volume": [
   "mlflow.models.FlavorBackend"
  ],
  "type": "class"
 },
 "mlflow.pyfunc.backend.PyFuncBackend.__init__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.pyfunc.backend.PyFuncBackend.build_image": {
  "lineno": 114,
  "symbols_in_volume": [
   "mlflow.models.docker_utils._build_image"
  ],
  "type": "function"
 },
 "mlflow.pyfunc.backend.PyFuncBackend.build_image.copy_model_into_container": {
  "lineno": 116,
  "symbols_in_volume": [
   "mlflow.models.docker_utils.DISABLE_ENV_CREATION",
   "mlflow.tracking.artifact_utils._download_artifact_from_uri",
   "os.mkdir",
   "os.path.basename",
   "os.path.join",
   "posixpath.join"
  ],
  "type": "function"
 },
 "mlflow.pyfunc.backend.PyFuncBackend.can_score_model": {
  "lineno": 100,
  "symbols_in_volume": [
   "mlflow.projects._get_conda_bin_executable",
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "mlflow.pyfunc.backend.PyFuncBackend.predict": {
  "lineno": 39,
  "symbols_in_volume": [
   "mlflow.pyfunc.ENV",
   "mlflow.pyfunc.scoring_server._predict",
   "mlflow.tracking.artifact_utils._download_artifact_from_uri",
   "mlflow.utils.file_utils.path_to_local_file_uri",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.pyfunc.backend.PyFuncBackend.prepare_env": {
  "lineno": 31,
  "symbols_in_volume": [
   "mlflow.pyfunc.ENV",
   "mlflow.tracking.artifact_utils._download_artifact_from_uri",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.pyfunc.backend.PyFuncBackend.serve": {
  "lineno": 67,
  "symbols_in_volume": [
   "mlflow.pyfunc.ENV",
   "mlflow.pyfunc.scoring_server._SERVER_MODEL_PATH",
   "mlflow.tracking.artifact_utils._download_artifact_from_uri",
   "mlflow.utils.file_utils.path_to_local_file_uri",
   "os.environ.copy",
   "os.name",
   "os.path.join",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "mlflow.pyfunc.backend._execute_in_conda_env": {
  "lineno": 144,
  "symbols_in_volume": [
   "mlflow.projects._get_conda_command",
   "mlflow.projects._get_or_create_conda_env",
   "mlflow.version.VERSION",
   "os.environ",
   "os.environ.get",
   "os.name",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "mlflow.pyfunc.load_model": {
  "lineno": 268,
  "symbols_in_volume": [
   "importlib.import_module",
   "mlflow.pyfunc.utils._add_code_to_system_path",
   "mlflow.tracking.artifact_utils._download_artifact_from_uri",
   "mlflow.utils.model_utils._get_flavor_configuration",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.pyfunc.load_pyfunc": {
  "lineno": 300,
  "symbols_in_volume": [
   "mlflow.utils.deprecated"
  ],
  "type": "function"
 },
 "mlflow.pyfunc.log_model": {
  "lineno": 612,
  "symbols_in_volume": [
   "mlflow.models.Model.log",
   "mlflow.pyfunc"
  ],
  "type": "function"
 },
 "mlflow.pyfunc.model": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.pyfunc.model.PythonModel": {
  "lineno": 45,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "mlflow.pyfunc.model.PythonModel.load_context": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.pyfunc.model.PythonModel.predict": {
  "lineno": 69,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.pyfunc.model.PythonModelContext": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.pyfunc.model.PythonModelContext.__init__": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.pyfunc.model.PythonModelContext.artifacts": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.pyfunc.model._PythonModelPyfuncWrapper": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.pyfunc.model._PythonModelPyfuncWrapper.__init__": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.pyfunc.model._PythonModelPyfuncWrapper.predict": {
  "lineno": 242,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.pyfunc.model._load_pyfunc": {
  "lineno": 190,
  "symbols_in_volume": [
   "cloudpickle.__version__",
   "cloudpickle.load",
   "mlflow.exceptions.MlflowException",
   "mlflow.utils.model_utils._get_flavor_configuration",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.pyfunc.model._save_model_with_class_artifacts_params": {
  "lineno": 106,
  "symbols_in_volume": [
   "cloudpickle.__version__",
   "cloudpickle.dump",
   "mlflow.exceptions.MlflowException",
   "mlflow.models.Model",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS",
   "mlflow.tracking.artifact_utils._download_artifact_from_uri",
   "mlflow.utils.file_utils.TempDir",
   "mlflow.utils.file_utils._copy_file_or_tree",
   "os.makedirs",
   "os.path.exists",
   "os.path.join",
   "os.path.relpath",
   "shutil.move",
   "yaml.safe_dump",
   "yaml.safe_load"
  ],
  "type": "function"
 },
 "mlflow.pyfunc.model.get_default_conda_env": {
  "lineno": 30,
  "symbols_in_volume": [
   "cloudpickle.__version__",
   "mlflow.utils.environment._mlflow_conda_env"
  ],
  "type": "function"
 },
 "mlflow.pyfunc.save_model": {
  "lineno": 488,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.models.Model",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "mlflow.pyfunc.model._save_model_with_class_artifacts_params"
  ],
  "type": "function"
 },
 "mlflow.pyfunc.scoring_server": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "mlflow.pyfunc.scoring_server.NumpyEncoder": {
  "lineno": 235,
  "symbols_in_volume": [
   "json.JSONEncoder"
  ],
  "type": "class"
 },
 "mlflow.pyfunc.scoring_server.NumpyEncoder.default": {
  "lineno": 242,
  "symbols_in_volume": [
   "json.JSONEncoder.default",
   "numpy.asscalar",
   "numpy.generic"
  ],
  "type": "function"
 },
 "mlflow.pyfunc.scoring_server._get_jsonable_obj": {
  "lineno": 248,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "mlflow.pyfunc.scoring_server._handle_serving_error": {
  "lineno": 128,
  "symbols_in_volume": [
   "io.StringIO",
   "mlflow.exceptions.MlflowException",
   "six.reraise",
   "traceback.print_exc"
  ],
  "type": "function"
 },
 "mlflow.pyfunc.scoring_server._predict": {
  "lineno": 211,
  "symbols_in_volume": [
   "mlflow.pyfunc.load_pyfunc",
   "sys.stdin",
   "sys.stdout"
  ],
  "type": "function"
 },
 "mlflow.pyfunc.scoring_server._serve": {
  "lineno": 230,
  "symbols_in_volume": [
   "mlflow.pyfunc.load_pyfunc"
  ],
  "type": "function"
 },
 "mlflow.pyfunc.scoring_server.init": {
  "lineno": 147,
  "symbols_in_volume": [
   "flask.Flask"
  ],
  "type": "function"
 },
 "mlflow.pyfunc.scoring_server.init.ping": {
  "lineno": 153,
  "symbols_in_volume": [
   "flask.Response"
  ],
  "type": "function"
 },
 "mlflow.pyfunc.scoring_server.init.transformation": {
  "lineno": 163,
  "symbols_in_volume": [
   "flask.Response",
   "flask.request.content_type",
   "flask.request.data.decode",
   "io.StringIO",
   "mlflow.protos.databricks_pb2.BAD_REQUEST",
   "mlflow.server.handlers.catch_mlflow_exception"
  ],
  "type": "function"
 },
 "mlflow.pyfunc.scoring_server.parse_csv_input": {
  "lineno": 84,
  "symbols_in_volume": [
   "mlflow.protos.databricks_pb2.MALFORMED_REQUEST",
   "pandas.read_csv"
  ],
  "type": "function"
 },
 "mlflow.pyfunc.scoring_server.parse_json_input": {
  "lineno": 64,
  "symbols_in_volume": [
   "mlflow.protos.databricks_pb2.MALFORMED_REQUEST",
   "pandas.read_json"
  ],
  "type": "function"
 },
 "mlflow.pyfunc.scoring_server.parse_split_oriented_json_input_to_numpy": {
  "lineno": 101,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "json.loads",
   "mlflow.protos.databricks_pb2.MALFORMED_REQUEST",
   "numpy.array",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "mlflow.pyfunc.scoring_server.predictions_to_json": {
  "lineno": 123,
  "symbols_in_volume": [
   "json.dump"
  ],
  "type": "function"
 },
 "mlflow.pyfunc.scoring_server.wsgi": {
  "lineno": null,
  "symbols_in_volume": [
   "mlflow.pyfunc.load_model",
   "mlflow.pyfunc.scoring_server._SERVER_MODEL_PATH",
   "mlflow.pyfunc.scoring_server.init",
   "os.environ"
  ],
  "type": "module"
 },
 "mlflow.pyfunc.spark_model_cache": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.pyfunc.spark_model_cache.SparkModelCache": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.pyfunc.spark_model_cache.SparkModelCache.__init__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.pyfunc.spark_model_cache.SparkModelCache.add_local_model": {
  "lineno": 28,
  "symbols_in_volume": [
   "shutil.make_archive",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "mlflow.pyfunc.spark_model_cache.SparkModelCache.get_or_load": {
  "lineno": 41,
  "symbols_in_volume": [
   "mlflow.pyfunc.load_pyfunc",
   "os.path.basename",
   "pyspark.files.SparkFiles.get",
   "tempfile.mkdtemp",
   "zipfile.ZipFile"
  ],
  "type": "function"
 },
 "mlflow.pyfunc.spark_udf": {
  "lineno": 344,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "mlflow.pyfunc.spark_model_cache.SparkModelCache.add_local_model",
   "mlflow.tracking.artifact_utils._download_artifact_from_uri",
   "mlflow.utils.file_utils.TempDir",
   "pyspark.sql.functions.pandas_udf",
   "pyspark.sql.types.ArrayType",
   "pyspark.sql.types.DataType",
   "pyspark.sql.types.DoubleType",
   "pyspark.sql.types.FloatType",
   "pyspark.sql.types.IntegerType",
   "pyspark.sql.types.LongType",
   "pyspark.sql.types.StringType",
   "pyspark.sql.types._parse_datatype_string"
  ],
  "type": "function"
 },
 "mlflow.pyfunc.spark_udf.predict": {
  "lineno": 439,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "mlflow.pyfunc.spark_model_cache.SparkModelCache.get_or_load",
   "numpy.byte",
   "numpy.float32",
   "numpy.float64",
   "numpy.int",
   "numpy.int32",
   "numpy.long",
   "numpy.number",
   "numpy.short",
   "numpy.ubyte",
   "numpy.ushort",
   "pandas.DataFrame",
   "pandas.Series",
   "pyspark.sql.types.ArrayType",
   "pyspark.sql.types.DoubleType",
   "pyspark.sql.types.FloatType",
   "pyspark.sql.types.IntegerType",
   "pyspark.sql.types.LongType",
   "pyspark.sql.types.StringType"
  ],
  "type": "function"
 },
 "mlflow.pyfunc.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.pyfunc.utils._add_code_to_system_path": {
  "lineno": 5,
  "symbols_in_volume": [
   "sys.path"
  ],
  "type": "function"
 },
 "mlflow.pyfunc.utils._get_code_dirs": {
  "lineno": 9,
  "symbols_in_volume": [
   "os.listdir",
   "os.path.isdir",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.pytorch": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "mlflow.pytorch._PyTorchWrapper": {
  "lineno": 375,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.pytorch._PyTorchWrapper.__init__": {
  "lineno": 380,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.pytorch._PyTorchWrapper.predict": {
  "lineno": 383,
  "symbols_in_volume": [
   "numpy.float32",
   "pandas.DataFrame",
   "torch.Tensor",
   "torch.from_numpy",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "mlflow.pytorch._load_model": {
  "lineno": 275,
  "symbols_in_volume": [
   "importlib.import_module",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
   "os.path.isdir",
   "os.path.join",
   "torch.load"
  ],
  "type": "function"
 },
 "mlflow.pytorch._load_pyfunc": {
  "lineno": 366,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.pytorch.get_default_conda_env": {
  "lineno": 42,
  "symbols_in_volume": [
   "cloudpickle.__version__",
   "mlflow.utils.environment._mlflow_conda_env",
   "torch.__version__",
   "torchvision.__version__"
  ],
  "type": "function"
 },
 "mlflow.pytorch.load_model": {
  "lineno": 312,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.pyfunc.CODE",
   "mlflow.pyfunc.FLAVOR_NAME",
   "mlflow.pyfunc.utils._add_code_to_system_path",
   "mlflow.tracking.artifact_utils._download_artifact_from_uri",
   "mlflow.utils.model_utils._get_flavor_configuration",
   "os.path.join",
   "torch.__version__"
  ],
  "type": "function"
 },
 "mlflow.pytorch.log_model": {
  "lineno": 66,
  "symbols_in_volume": [
   "mlflow.models.Model.log",
   "mlflow.pytorch",
   "mlflow.pytorch.pickle_module"
  ],
  "type": "function"
 },
 "mlflow.pytorch.pickle_module": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.pytorch.save_model": {
  "lineno": 161,
  "symbols_in_volume": [
   "mlflow.models.Model",
   "mlflow.pyfunc.add_to_model",
   "mlflow.pytorch.pickle_module",
   "mlflow.pytorch.pickle_module.__name__",
   "mlflow.utils.file_utils._copy_file_or_tree",
   "os.makedirs",
   "os.path.abspath",
   "os.path.exists",
   "os.path.join",
   "torch.__version__",
   "torch.nn.Module",
   "torch.save",
   "yaml.safe_dump",
   "yaml.safe_load"
  ],
  "type": "function"
 },
 "mlflow.rfunc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.rfunc.backend": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "mlflow.rfunc.backend.RFuncBackend": {
  "lineno": 13,
  "symbols_in_volume": [
   "mlflow.models.FlavorBackend",
   "re.compile"
  ],
  "type": "class"
 },
 "mlflow.rfunc.backend.RFuncBackend.can_score_model": {
  "lineno": 44,
  "symbols_in_volume": [
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "mlflow.rfunc.backend.RFuncBackend.predict": {
  "lineno": 20,
  "symbols_in_volume": [
   "mlflow.tracking.artifact_utils._download_artifact_from_uri",
   "six.moves.shlex_quote"
  ],
  "type": "function"
 },
 "mlflow.rfunc.backend.RFuncBackend.serve": {
  "lineno": 35,
  "symbols_in_volume": [
   "mlflow.tracking.artifact_utils._download_artifact_from_uri",
   "six.moves.shlex_quote"
  ],
  "type": "function"
 },
 "mlflow.rfunc.backend._execute": {
  "lineno": 59,
  "symbols_in_volume": [
   "os.environ.copy",
   "subprocess.Popen",
   "sys.stderr",
   "sys.stdin",
   "sys.stdout"
  ],
  "type": "function"
 },
 "mlflow.rfunc.backend._str_optional": {
  "lineno": 70,
  "symbols_in_volume": [
   "six.moves.shlex_quote"
  ],
  "type": "function"
 },
 "mlflow.runs": {
  "lineno": null,
  "symbols_in_volume": [
   "click.STRING",
   "click.option"
  ],
  "type": "module"
 },
 "mlflow.runs.commands": {
  "lineno": 18,
  "symbols_in_volume": [
   "click.group"
  ],
  "type": "function"
 },
 "mlflow.runs.delete_run": {
  "lineno": 48,
  "symbols_in_volume": [
   "mlflow.tracking._get_store"
  ],
  "type": "function"
 },
 "mlflow.runs.describe_run": {
  "lineno": 73,
  "symbols_in_volume": [
   "json.dumps",
   "mlflow.tracking._get_store"
  ],
  "type": "function"
 },
 "mlflow.runs.list_run": {
  "lineno": 27,
  "symbols_in_volume": [
   "click.STRING",
   "click.option",
   "mlflow.entities.ViewType.ACTIVE_ONLY",
   "mlflow.entities.ViewType.from_string",
   "mlflow.tracking._get_store",
   "mlflow.utils.mlflow_tags.MLFLOW_RUN_NAME",
   "mlflow.utils.time_utils.conv_longdate_to_str",
   "tabulate.tabulate"
  ],
  "type": "function"
 },
 "mlflow.runs.restore_run": {
  "lineno": 61,
  "symbols_in_volume": [
   "mlflow.tracking._get_store"
  ],
  "type": "function"
 },
 "mlflow.sagemaker": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "mlflow.sagemaker._SageMakerOperation": {
  "lineno": 923,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.sagemaker._SageMakerOperation.__init__": {
  "lineno": 925,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "mlflow.sagemaker._SageMakerOperation.await_completion": {
  "lineno": 932,
  "symbols_in_volume": [
   "time.sleep",
   "time.time"
  ],
  "type": "function"
 },
 "mlflow.sagemaker._SageMakerOperation.clean_up": {
  "lineno": 952,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.sagemaker._SageMakerOperationStatus": {
  "lineno": 966,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.sagemaker._SageMakerOperationStatus.__init__": {
  "lineno": 973,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.sagemaker._SageMakerOperationStatus.failed": {
  "lineno": 990,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.sagemaker._SageMakerOperationStatus.in_progress": {
  "lineno": 977,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.sagemaker._SageMakerOperationStatus.succeeded": {
  "lineno": 994,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.sagemaker._SageMakerOperationStatus.timed_out": {
  "lineno": 983,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.sagemaker._create_sagemaker_endpoint": {
  "lineno": 619,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.sagemaker._create_sagemaker_endpoint.cleanup_fn": {
  "lineno": 698,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.sagemaker._create_sagemaker_endpoint.status_check_fn": {
  "lineno": 677,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.sagemaker._create_sagemaker_model": {
  "lineno": 829,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.sagemaker._delete_sagemaker_endpoint_configuration": {
  "lineno": 887,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.sagemaker._delete_sagemaker_model": {
  "lineno": 862,
  "symbols_in_volume": [
   "six.moves.urllib.parse.urlparse"
  ],
  "type": "function"
 },
 "mlflow.sagemaker._find_endpoint": {
  "lineno": 898,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.sagemaker._get_account_id": {
  "lineno": 510,
  "symbols_in_volume": [
   "boto3.Session"
  ],
  "type": "function"
 },
 "mlflow.sagemaker._get_assumed_role_arn": {
  "lineno": 519,
  "symbols_in_volume": [
   "boto3.Session"
  ],
  "type": "function"
 },
 "mlflow.sagemaker._get_default_image_url": {
  "lineno": 492,
  "symbols_in_volume": [
   "boto3.client",
   "mlflow.version.VERSION",
   "os.environ.get"
  ],
  "type": "function"
 },
 "mlflow.sagemaker._get_default_s3_bucket": {
  "lineno": 534,
  "symbols_in_volume": [
   "boto3.Session"
  ],
  "type": "function"
 },
 "mlflow.sagemaker._get_deployment_config": {
  "lineno": 603,
  "symbols_in_volume": [
   "mlflow.models.container.DEPLOYMENT_CONFIG_KEY_FLAVOR_NAME"
  ],
  "type": "function"
 },
 "mlflow.sagemaker._get_preferred_deployment_flavor": {
  "lineno": 53,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.mleap.FLAVOR_NAME",
   "mlflow.models.container.SUPPORTED_FLAVORS",
   "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
   "mlflow.pyfunc.FLAVOR_NAME"
  ],
  "type": "function"
 },
 "mlflow.sagemaker._get_sagemaker_config_name": {
  "lineno": 615,
  "symbols_in_volume": [
   "mlflow.utils.get_unique_resource_id"
  ],
  "type": "function"
 },
 "mlflow.sagemaker._get_sagemaker_model_name": {
  "lineno": 611,
  "symbols_in_volume": [
   "mlflow.utils.get_unique_resource_id"
  ],
  "type": "function"
 },
 "mlflow.sagemaker._make_tarfile": {
  "lineno": 566,
  "symbols_in_volume": [
   "os.listdir",
   "os.path.join",
   "tarfile.open"
  ],
  "type": "function"
 },
 "mlflow.sagemaker._update_sagemaker_endpoint": {
  "lineno": 704,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "mlflow.sagemaker._update_sagemaker_endpoint.cleanup_fn": {
  "lineno": 813,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.sagemaker._update_sagemaker_endpoint.status_check_fn": {
  "lineno": 788,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "mlflow.sagemaker._upload_s3": {
  "lineno": 575,
  "symbols_in_volume": [
   "boto3.Session",
   "mlflow.utils.file_utils.TempDir",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.sagemaker._validate_deployment_flavor": {
  "lineno": 77,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.models.container.SUPPORTED_FLAVORS",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST"
  ],
  "type": "function"
 },
 "mlflow.sagemaker.cli": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.sagemaker.cli.build_and_push_container": {
  "lineno": 153,
  "symbols_in_volume": [
   "click.option",
   "mlflow.models.docker_utils._build_image",
   "mlflow.sagemaker.DEFAULT_IMAGE_NAME",
   "mlflow.sagemaker.push_image_to_ecr",
   "mlflow.utils.cli_args.MLFLOW_HOME",
   "os.path.abspath"
  ],
  "type": "function"
 },
 "mlflow.sagemaker.cli.build_and_push_container.setup_container": {
  "lineno": 174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.sagemaker.cli.commands": {
  "lineno": 15,
  "symbols_in_volume": [
   "click.group"
  ],
  "type": "function"
 },
 "mlflow.sagemaker.cli.delete": {
  "lineno": 101,
  "symbols_in_volume": [
   "click.option",
   "mlflow.sagemaker.delete"
  ],
  "type": "function"
 },
 "mlflow.sagemaker.cli.deploy": {
  "lineno": 26,
  "symbols_in_volume": [
   "click.option",
   "json.load",
   "mlflow.sagemaker.DEFAULT_SAGEMAKER_INSTANCE_COUNT",
   "mlflow.sagemaker.DEFAULT_SAGEMAKER_INSTANCE_TYPE",
   "mlflow.sagemaker.DEPLOYMENT_MODES",
   "mlflow.sagemaker.DEPLOYMENT_MODE_CREATE",
   "mlflow.sagemaker.DEPLOYMENT_MODE_REPLACE",
   "mlflow.sagemaker.SUPPORTED_DEPLOYMENT_FLAVORS",
   "mlflow.sagemaker.deploy",
   "mlflow.utils.cli_args.MODEL_URI"
  ],
  "type": "function"
 },
 "mlflow.sagemaker.cli.run_local": {
  "lineno": 137,
  "symbols_in_volume": [
   "click.option",
   "mlflow.sagemaker.DEFAULT_IMAGE_NAME",
   "mlflow.sagemaker.SUPPORTED_DEPLOYMENT_FLAVORS",
   "mlflow.sagemaker.run_local",
   "mlflow.utils.cli_args.MODEL_URI"
  ],
  "type": "function"
 },
 "mlflow.sagemaker.delete": {
  "lineno": 357,
  "symbols_in_volume": [
   "boto3.client",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  ],
  "type": "function"
 },
 "mlflow.sagemaker.delete.cleanup_fn": {
  "lineno": 408,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.sagemaker.delete.status_check_fn": {
  "lineno": 398,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.sagemaker.deploy": {
  "lineno": 151,
  "symbols_in_volume": [
   "boto3.client",
   "mlflow.exceptions.MlflowException",
   "mlflow.models.Model.load",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "mlflow.tracking.artifact_utils._download_artifact_from_uri",
   "os.path.exists",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.sagemaker.push_image_to_ecr": {
  "lineno": 103,
  "symbols_in_volume": [
   "boto3.client",
   "boto3.session.Session",
   "mlflow.version.VERSION",
   "os.system",
   "platform.system"
  ],
  "type": "function"
 },
 "mlflow.sagemaker.run_local": {
  "lineno": 438,
  "symbols_in_volume": [
   "mlflow.models.Model.load",
   "mlflow.tracking.artifact_utils._download_artifact_from_uri",
   "os.path.join",
   "signal.SIGTERM",
   "signal.signal",
   "subprocess.Popen",
   "sys.stderr",
   "sys.stdout"
  ],
  "type": "function"
 },
 "mlflow.sagemaker.run_local._sigterm_handler": {
  "lineno": 483,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.server": {
  "lineno": null,
  "symbols_in_volume": [
   "flask.Flask",
   "mlflow.server.handlers.get_endpoints",
   "mlflow.server.prometheus_exporter.activate_prometheus_exporter",
   "os.getenv",
   "os.makedirs",
   "os.path.exists",
   "os.path.join"
  ],
  "type": "module"
 },
 "mlflow.server._build_gunicorn_command": {
  "lineno": 70,
  "symbols_in_volume": [
   "shlex.split"
  ],
  "type": "function"
 },
 "mlflow.server._build_waitress_command": {
  "lineno": 59,
  "symbols_in_volume": [
   "shlex.split"
  ],
  "type": "function"
 },
 "mlflow.server._run_server": {
  "lineno": 76,
  "symbols_in_volume": [
   "mlflow.server.handlers.STATIC_PREFIX_ENV_VAR",
   "mlflow.utils.process.exec_cmd",
   "sys.platform"
  ],
  "type": "function"
 },
 "mlflow.server.handlers": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "mlflow.protos.model_registry_pb2.CreateModelVersion",
   "mlflow.protos.model_registry_pb2.CreateRegisteredModel",
   "mlflow.protos.model_registry_pb2.DeleteModelVersion",
   "mlflow.protos.model_registry_pb2.DeleteRegisteredModel",
   "mlflow.protos.model_registry_pb2.GetLatestVersions",
   "mlflow.protos.model_registry_pb2.GetModelVersion",
   "mlflow.protos.model_registry_pb2.GetModelVersionDownloadUri",
   "mlflow.protos.model_registry_pb2.GetRegisteredModel",
   "mlflow.protos.model_registry_pb2.ListRegisteredModels",
   "mlflow.protos.model_registry_pb2.RenameRegisteredModel",
   "mlflow.protos.model_registry_pb2.SearchModelVersions",
   "mlflow.protos.model_registry_pb2.TransitionModelVersionStage",
   "mlflow.protos.model_registry_pb2.UpdateModelVersion",
   "mlflow.protos.model_registry_pb2.UpdateRegisteredModel",
   "mlflow.protos.service_pb2.CreateExperiment",
   "mlflow.protos.service_pb2.CreateRun",
   "mlflow.protos.service_pb2.DeleteExperiment",
   "mlflow.protos.service_pb2.DeleteRun",
   "mlflow.protos.service_pb2.DeleteTag",
   "mlflow.protos.service_pb2.GetExperiment",
   "mlflow.protos.service_pb2.GetExperimentByName",
   "mlflow.protos.service_pb2.GetMetricHistory",
   "mlflow.protos.service_pb2.GetRun",
   "mlflow.protos.service_pb2.ListArtifacts",
   "mlflow.protos.service_pb2.ListExperiments",
   "mlflow.protos.service_pb2.LogBatch",
   "mlflow.protos.service_pb2.LogMetric",
   "mlflow.protos.service_pb2.LogModel",
   "mlflow.protos.service_pb2.LogParam",
   "mlflow.protos.service_pb2.RestoreExperiment",
   "mlflow.protos.service_pb2.RestoreRun",
   "mlflow.protos.service_pb2.SearchRuns",
   "mlflow.protos.service_pb2.SetExperimentTag",
   "mlflow.protos.service_pb2.SetTag",
   "mlflow.protos.service_pb2.UpdateExperiment",
   "mlflow.protos.service_pb2.UpdateRun"
  ],
  "type": "module"
 },
 "mlflow.server.handlers.ModelRegistryStoreRegistryWrapper": {
  "lineno": 63,
  "symbols_in_volume": [
   "mlflow.tracking._model_registry.registry.ModelRegistryStoreRegistry"
  ],
  "type": "class"
 },
 "mlflow.server.handlers.ModelRegistryStoreRegistryWrapper.__init__": {
  "lineno": 64,
  "symbols_in_volume": [
   "mlflow.store.db.db_types.DATABASE_ENGINES"
  ],
  "type": "function"
 },
 "mlflow.server.handlers.ModelRegistryStoreRegistryWrapper._get_sqlalchemy_store": {
  "lineno": 71,
  "symbols_in_volume": [
   "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore"
  ],
  "type": "function"
 },
 "mlflow.server.handlers.TrackingStoreRegistryWrapper": {
  "lineno": 43,
  "symbols_in_volume": [
   "mlflow.tracking._tracking_service.registry.TrackingStoreRegistry"
  ],
  "type": "class"
 },
 "mlflow.server.handlers.TrackingStoreRegistryWrapper.__init__": {
  "lineno": 44,
  "symbols_in_volume": [
   "mlflow.store.db.db_types.DATABASE_ENGINES"
  ],
  "type": "function"
 },
 "mlflow.server.handlers.TrackingStoreRegistryWrapper._get_file_store": {
  "lineno": 52,
  "symbols_in_volume": [
   "mlflow.store.tracking.file_store.FileStore"
  ],
  "type": "function"
 },
 "mlflow.server.handlers.TrackingStoreRegistryWrapper._get_sqlalchemy_store": {
  "lineno": 57,
  "symbols_in_volume": [
   "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._add_static_prefix": {
  "lineno": 633,
  "symbols_in_volume": [
   "os.environ.get"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._create_experiment": {
  "lineno": 191,
  "symbols_in_volume": [
   "flask.Response",
   "mlflow.protos.service_pb2.CreateExperiment",
   "mlflow.protos.service_pb2.CreateExperiment.Response",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._create_model_version": {
  "lineno": 563,
  "symbols_in_volume": [
   "mlflow.protos.model_registry_pb2.CreateModelVersion",
   "mlflow.protos.model_registry_pb2.CreateModelVersion.Response"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._create_registered_model": {
  "lineno": 494,
  "symbols_in_volume": [
   "mlflow.protos.model_registry_pb2.CreateRegisteredModel",
   "mlflow.protos.model_registry_pb2.CreateRegisteredModel.Response"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._create_run": {
  "lineno": 262,
  "symbols_in_volume": [
   "flask.Response",
   "mlflow.entities.RunTag",
   "mlflow.protos.service_pb2.CreateRun",
   "mlflow.protos.service_pb2.CreateRun.Response",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._delete_experiment": {
  "lineno": 230,
  "symbols_in_volume": [
   "flask.Response",
   "mlflow.protos.service_pb2.DeleteExperiment",
   "mlflow.protos.service_pb2.DeleteExperiment.Response",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._delete_model_version": {
  "lineno": 606,
  "symbols_in_volume": [
   "mlflow.protos.model_registry_pb2.DeleteModelVersion",
   "mlflow.protos.model_registry_pb2.DeleteModelVersion.Response"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._delete_registered_model": {
  "lineno": 535,
  "symbols_in_volume": [
   "mlflow.protos.model_registry_pb2.DeleteRegisteredModel",
   "mlflow.protos.model_registry_pb2.DeleteRegisteredModel.Response"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._delete_run": {
  "lineno": 292,
  "symbols_in_volume": [
   "flask.Response",
   "mlflow.protos.service_pb2.DeleteRun",
   "mlflow.protos.service_pb2.DeleteRun.Response",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._delete_tag": {
  "lineno": 360,
  "symbols_in_volume": [
   "flask.Response",
   "mlflow.protos.service_pb2.DeleteTag",
   "mlflow.protos.service_pb2.DeleteTag.Response",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._get_artifact_repo": {
  "lineno": 445,
  "symbols_in_volume": [
   "mlflow.store.artifact.artifact_repository_registry.get_artifact_repository"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._get_experiment": {
  "lineno": 203,
  "symbols_in_volume": [
   "flask.Response",
   "mlflow.protos.service_pb2.GetExperiment",
   "mlflow.protos.service_pb2.GetExperiment.Response",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._get_experiment_by_name": {
  "lineno": 214,
  "symbols_in_volume": [
   "flask.Response",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
   "mlflow.protos.service_pb2.GetExperimentByName",
   "mlflow.protos.service_pb2.GetExperimentByName.Response",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._get_latest_versions": {
  "lineno": 553,
  "symbols_in_volume": [
   "mlflow.protos.model_registry_pb2.GetLatestVersions",
   "mlflow.protos.model_registry_pb2.GetLatestVersions.Response"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._get_metric_history": {
  "lineno": 421,
  "symbols_in_volume": [
   "flask.Response",
   "mlflow.protos.service_pb2.GetMetricHistory",
   "mlflow.protos.service_pb2.GetMetricHistory.Response",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._get_model_registry_store": {
  "lineno": 91,
  "symbols_in_volume": [
   "mlflow.server.BACKEND_STORE_URI_ENV_VAR",
   "os.environ.get"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._get_model_version": {
  "lineno": 573,
  "symbols_in_volume": [
   "mlflow.protos.model_registry_pb2.GetModelVersion",
   "mlflow.protos.model_registry_pb2.GetModelVersion.Response"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._get_model_version_download_uri": {
  "lineno": 614,
  "symbols_in_volume": [
   "mlflow.protos.model_registry_pb2.GetModelVersionDownloadUri",
   "mlflow.protos.model_registry_pb2.GetModelVersionDownloadUri.Response"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._get_paths": {
  "lineno": 640,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.server.handlers._get_registered_model": {
  "lineno": 503,
  "symbols_in_volume": [
   "mlflow.protos.model_registry_pb2.GetRegisteredModel",
   "mlflow.protos.model_registry_pb2.GetRegisteredModel.Response"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._get_request_json": {
  "lineno": 108,
  "symbols_in_volume": [
   "flask.request"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._get_request_message": {
  "lineno": 112,
  "symbols_in_volume": [
   "flask.request",
   "google.protobuf.descriptor.FieldDescriptor.LABEL_REPEATED",
   "json.loads",
   "mlflow.utils.proto_json_utils.parse_dict",
   "mlflow.utils.string_utils.is_string_type",
   "querystring_parser.parser.parse",
   "re.sub"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._get_run": {
  "lineno": 370,
  "symbols_in_volume": [
   "flask.Response",
   "mlflow.protos.service_pb2.GetRun",
   "mlflow.protos.service_pb2.GetRun.Response",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._get_tracking_store": {
  "lineno": 81,
  "symbols_in_volume": [
   "mlflow.server.ARTIFACT_ROOT_ENV_VAR",
   "mlflow.server.BACKEND_STORE_URI_ENV_VAR",
   "os.environ.get"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._list_artifacts": {
  "lineno": 403,
  "symbols_in_volume": [
   "flask.Response",
   "mlflow.protos.service_pb2.ListArtifacts",
   "mlflow.protos.service_pb2.ListArtifacts.Response",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._list_experiments": {
  "lineno": 434,
  "symbols_in_volume": [
   "flask.Response",
   "mlflow.protos.service_pb2.ListExperiments",
   "mlflow.protos.service_pb2.ListExperiments.Response",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._list_registered_models": {
  "lineno": 543,
  "symbols_in_volume": [
   "mlflow.protos.model_registry_pb2.ListRegisteredModels",
   "mlflow.protos.model_registry_pb2.ListRegisteredModels.Response"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._log_batch": {
  "lineno": 450,
  "symbols_in_volume": [
   "flask.Response",
   "mlflow.entities.Metric.from_proto",
   "mlflow.entities.Param.from_proto",
   "mlflow.entities.RunTag.from_proto",
   "mlflow.protos.service_pb2.LogBatch",
   "mlflow.protos.service_pb2.LogBatch.Response",
   "mlflow.utils.proto_json_utils.message_to_json",
   "mlflow.utils.validation._validate_batch_log_api_req"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._log_metric": {
  "lineno": 312,
  "symbols_in_volume": [
   "flask.Response",
   "mlflow.entities.Metric",
   "mlflow.protos.service_pb2.LogMetric",
   "mlflow.protos.service_pb2.LogMetric.Response",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._log_model": {
  "lineno": 465,
  "symbols_in_volume": [
   "flask.Response",
   "json.loads",
   "mlflow.exceptions.MlflowException",
   "mlflow.models.Model.from_dict",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "mlflow.protos.service_pb2.LogModel",
   "mlflow.protos.service_pb2.LogModel.Response",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._log_param": {
  "lineno": 325,
  "symbols_in_volume": [
   "flask.Response",
   "mlflow.entities.Param",
   "mlflow.protos.service_pb2.LogParam",
   "mlflow.protos.service_pb2.LogParam.Response",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._not_implemented": {
  "lineno": 185,
  "symbols_in_volume": [
   "flask.Response"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._rename_registered_model": {
  "lineno": 524,
  "symbols_in_volume": [
   "mlflow.protos.model_registry_pb2.RenameRegisteredModel",
   "mlflow.protos.model_registry_pb2.RenameRegisteredModel.Response"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._restore_experiment": {
  "lineno": 240,
  "symbols_in_volume": [
   "flask.Response",
   "mlflow.protos.service_pb2.RestoreExperiment",
   "mlflow.protos.service_pb2.RestoreExperiment.Response",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._restore_run": {
  "lineno": 302,
  "symbols_in_volume": [
   "flask.Response",
   "mlflow.protos.service_pb2.RestoreRun",
   "mlflow.protos.service_pb2.RestoreRun.Response",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._search_model_versions": {
  "lineno": 623,
  "symbols_in_volume": [
   "mlflow.protos.model_registry_pb2.SearchModelVersions",
   "mlflow.protos.model_registry_pb2.SearchModelVersions.Response"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._search_runs": {
  "lineno": 381,
  "symbols_in_volume": [
   "flask.Response",
   "mlflow.entities.ViewType.ACTIVE_ONLY",
   "mlflow.entities.ViewType.from_proto",
   "mlflow.protos.service_pb2.SearchRuns",
   "mlflow.protos.service_pb2.SearchRuns.Response",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._set_experiment_tag": {
  "lineno": 337,
  "symbols_in_volume": [
   "flask.Response",
   "mlflow.entities.ExperimentTag",
   "mlflow.protos.service_pb2.SetExperimentTag",
   "mlflow.protos.service_pb2.SetExperimentTag.Response",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._set_tag": {
  "lineno": 348,
  "symbols_in_volume": [
   "flask.Response",
   "mlflow.entities.RunTag",
   "mlflow.protos.service_pb2.SetTag",
   "mlflow.protos.service_pb2.SetTag.Response",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._transition_stage": {
  "lineno": 595,
  "symbols_in_volume": [
   "mlflow.protos.model_registry_pb2.TransitionModelVersionStage",
   "mlflow.protos.model_registry_pb2.TransitionModelVersionStage.Response"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._update_experiment": {
  "lineno": 250,
  "symbols_in_volume": [
   "flask.Response",
   "mlflow.protos.service_pb2.UpdateExperiment",
   "mlflow.protos.service_pb2.UpdateExperiment.Response",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._update_model_version": {
  "lineno": 583,
  "symbols_in_volume": [
   "mlflow.protos.model_registry_pb2.UpdateModelVersion",
   "mlflow.protos.model_registry_pb2.UpdateModelVersion.Response"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._update_registered_model": {
  "lineno": 513,
  "symbols_in_volume": [
   "mlflow.protos.model_registry_pb2.UpdateRegisteredModel",
   "mlflow.protos.model_registry_pb2.UpdateRegisteredModel.Response"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._update_run": {
  "lineno": 280,
  "symbols_in_volume": [
   "flask.Response",
   "mlflow.protos.service_pb2.UpdateRun",
   "mlflow.protos.service_pb2.UpdateRun.Response",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.server.handlers._wrap_response": {
  "lineno": 488,
  "symbols_in_volume": [
   "flask.Response",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.server.handlers.catch_mlflow_exception": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.server.handlers.catch_mlflow_exception.wrapper": {
  "lineno": 152,
  "symbols_in_volume": [
   "flask.Response",
   "functools.wraps",
   "mlflow.exceptions.MlflowException"
  ],
  "type": "function"
 },
 "mlflow.server.handlers.get_artifact_handler": {
  "lineno": 169,
  "symbols_in_volume": [
   "flask.request.query_string.decode",
   "flask.send_file",
   "os.path.abspath",
   "os.path.splitext",
   "querystring_parser.parser.parse"
  ],
  "type": "function"
 },
 "mlflow.server.handlers.get_endpoints": {
  "lineno": 657,
  "symbols_in_volume": [
   "mlflow.protos.model_registry_pb2.ModelRegistryService",
   "mlflow.protos.service_pb2.MlflowService"
  ],
  "type": "function"
 },
 "mlflow.server.handlers.get_endpoints.get_service_endpoints": {
  "lineno": 662,
  "symbols_in_volume": [
   "mlflow.protos.databricks_pb2.rpc.endpoints"
  ],
  "type": "function"
 },
 "mlflow.server.handlers.get_handler": {
  "lineno": 649,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.server.handlers.initialize_backend_stores": {
  "lineno": 100,
  "symbols_in_volume": [
   "mlflow.tracking.registry.UnsupportedModelRegistryStoreURIException"
  ],
  "type": "function"
 },
 "mlflow.server.health": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.server.prometheus_exporter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.server.prometheus_exporter.activate_prometheus_exporter": {
  "lineno": 5,
  "symbols_in_volume": [
   "flask.request.path",
   "prometheus_flask_exporter.multiprocess.GunicornInternalPrometheusMetrics"
  ],
  "type": "function"
 },
 "mlflow.server.prometheus_exporter.change_path_for_metric": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.server.serve": {
  "lineno": 54,
  "symbols_in_volume": [
   "flask.send_from_directory",
   "mlflow.server.handlers._add_static_prefix"
  ],
  "type": "function"
 },
 "mlflow.server.serve_artifacts": {
  "lineno": 41,
  "symbols_in_volume": [
   "mlflow.server.handlers._add_static_prefix",
   "mlflow.server.handlers.get_artifact_handler"
  ],
  "type": "function"
 },
 "mlflow.server.serve_static_file": {
  "lineno": 48,
  "symbols_in_volume": [
   "flask.send_from_directory",
   "mlflow.server.handlers._add_static_prefix"
  ],
  "type": "function"
 },
 "mlflow.sklearn": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.sklearn._load_model_from_local_file": {
  "lineno": 214,
  "symbols_in_volume": [
   "pickle.load"
  ],
  "type": "function"
 },
 "mlflow.sklearn._load_pyfunc": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.sklearn._save_model": {
  "lineno": 233,
  "symbols_in_volume": [
   "cloudpickle.dump",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INTERNAL_ERROR",
   "pickle.dump"
  ],
  "type": "function"
 },
 "mlflow.sklearn.get_default_conda_env": {
  "lineno": 39,
  "symbols_in_volume": [
   "cloudpickle.__version__",
   "mlflow.utils.environment._mlflow_conda_env",
   "sklearn.__version__"
  ],
  "type": "function"
 },
 "mlflow.sklearn.load_model": {
  "lineno": 254,
  "symbols_in_volume": [
   "mlflow.tracking.artifact_utils._download_artifact_from_uri",
   "mlflow.utils.model_utils._get_flavor_configuration",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.sklearn.log_model": {
  "lineno": 151,
  "symbols_in_volume": [
   "mlflow.models.Model.log",
   "mlflow.sklearn"
  ],
  "type": "function"
 },
 "mlflow.sklearn.save_model": {
  "lineno": 58,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.models.Model",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS",
   "mlflow.pyfunc.add_to_model",
   "os.makedirs",
   "os.path.exists",
   "os.path.join",
   "sklearn.__version__",
   "yaml.safe_dump",
   "yaml.safe_load"
  ],
  "type": "function"
 },
 "mlflow.spacy": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "mlflow.spacy._SpacyModelWrapper": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.spacy._SpacyModelWrapper.__init__": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.spacy._SpacyModelWrapper.predict": {
  "lineno": 160,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "mlflow.spacy._load_model": {
  "lineno": 149,
  "symbols_in_volume": [
   "os.path.abspath",
   "spacy.load"
  ],
  "type": "function"
 },
 "mlflow.spacy._load_pyfunc": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.spacy.get_default_conda_env": {
  "lineno": 32,
  "symbols_in_volume": [
   "mlflow.utils.environment._mlflow_conda_env",
   "spacy.__version__"
  ],
  "type": "function"
 },
 "mlflow.spacy.load_model": {
  "lineno": 185,
  "symbols_in_volume": [
   "mlflow.tracking.artifact_utils._download_artifact_from_uri",
   "mlflow.utils.model_utils._get_flavor_configuration",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.spacy.log_model": {
  "lineno": 114,
  "symbols_in_volume": [
   "mlflow.models.Model.log",
   "mlflow.spacy"
  ],
  "type": "function"
 },
 "mlflow.spacy.save_model": {
  "lineno": 47,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.models.Model",
   "mlflow.pyfunc.add_to_model",
   "os.makedirs",
   "os.path.abspath",
   "os.path.exists",
   "os.path.join",
   "spacy.__version__",
   "spacy.pipeline.TextCategorizer",
   "yaml.safe_dump",
   "yaml.safe_load"
  ],
  "type": "function"
 },
 "mlflow.spark": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "mlflow.spark._HadoopFileSystem": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.spark._HadoopFileSystem.__init__": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.spark._HadoopFileSystem._conf": {
  "lineno": 210,
  "symbols_in_volume": [
   "pyspark.SparkContext.getOrCreate"
  ],
  "type": "function"
 },
 "mlflow.spark._HadoopFileSystem._fs": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.spark._HadoopFileSystem._jvm": {
  "lineno": 198,
  "symbols_in_volume": [
   "pyspark.SparkContext._gateway.jvm"
  ],
  "type": "function"
 },
 "mlflow.spark._HadoopFileSystem._local_path": {
  "lineno": 217,
  "symbols_in_volume": [
   "os.path.abspath"
  ],
  "type": "function"
 },
 "mlflow.spark._HadoopFileSystem._remote_path": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.spark._HadoopFileSystem._try_file_exists": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.spark._HadoopFileSystem.copy_from_local_file": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.spark._HadoopFileSystem.copy_to_local_file": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.spark._HadoopFileSystem.delete": {
  "lineno": 282,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.spark._HadoopFileSystem.maybe_copy_from_local_file": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.spark._HadoopFileSystem.maybe_copy_from_uri": {
  "lineno": 263,
  "symbols_in_volume": [
   "mlflow.tracking.artifact_utils._download_artifact_from_uri"
  ],
  "type": "function"
 },
 "mlflow.spark._HadoopFileSystem.qualified_local_path": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.spark._PyFuncModelWrapper": {
  "lineno": 472,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.spark._PyFuncModelWrapper.__init__": {
  "lineno": 477,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.spark._PyFuncModelWrapper.predict": {
  "lineno": 481,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.spark._format_exception": {
  "lineno": 54,
  "symbols_in_volume": [
   "traceback.format_exception"
  ],
  "type": "function"
 },
 "mlflow.spark._load_model": {
  "lineno": 393,
  "symbols_in_volume": [
   "pyspark.ml.pipeline.PipelineModel.load"
  ],
  "type": "function"
 },
 "mlflow.spark._load_pyfunc": {
  "lineno": 453,
  "symbols_in_volume": [
   "pyspark.sql.SparkSession._instantiatedSession",
   "pyspark.sql.SparkSession.builder.config"
  ],
  "type": "function"
 },
 "mlflow.spark._save_model_metadata": {
  "lineno": 287,
  "symbols_in_volume": [
   "mlflow.mleap.add_to_model",
   "mlflow.pyfunc.add_to_model",
   "os.path.join",
   "pyspark.__version__",
   "yaml.safe_dump",
   "yaml.safe_load"
  ],
  "type": "function"
 },
 "mlflow.spark._tmp_path": {
  "lineno": 178,
  "symbols_in_volume": [
   "os.path.join",
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "mlflow.spark._validate_model": {
  "lineno": 315,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "pyspark.ml.Model",
   "pyspark.ml.util.MLReadable",
   "pyspark.ml.util.MLWritable"
  ],
  "type": "function"
 },
 "mlflow.spark.autolog": {
  "lineno": 493,
  "symbols_in_volume": [
   "mlflow._spark_autologging.autolog",
   "mlflow.utils.experimental"
  ],
  "type": "function"
 },
 "mlflow.spark.get_default_conda_env": {
  "lineno": 58,
  "symbols_in_volume": [
   "mlflow.utils.environment._mlflow_conda_env",
   "pyspark.__version__",
   "re.sub"
  ],
  "type": "function"
 },
 "mlflow.spark.load_model": {
  "lineno": 405,
  "symbols_in_volume": [
   "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository.get_underlying_uri",
   "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository.is_models_uri",
   "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository.get_underlying_uri",
   "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository.is_runs_uri",
   "mlflow.utils.model_utils._get_flavor_configuration_from_uri",
   "mlflow.utils.uri.append_to_uri_path"
  ],
  "type": "function"
 },
 "mlflow.spark.log_model": {
  "lineno": 81,
  "symbols_in_volume": [
   "mlflow.get_artifact_uri",
   "mlflow.models.Model",
   "mlflow.models.Model.log",
   "mlflow.register_model",
   "mlflow.spark",
   "mlflow.tracking.fluent._get_or_start_run",
   "mlflow.tracking.fluent.log_artifacts",
   "mlflow.utils.file_utils.TempDir",
   "mlflow.utils.uri.is_local_uri",
   "os.path.join",
   "py4j.protocol.Py4JJavaError",
   "pyspark.ml.PipelineModel"
  ],
  "type": "function"
 },
 "mlflow.spark.save_model": {
  "lineno": 327,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.join",
   "pyspark.ml.Model",
   "pyspark.ml.PipelineModel"
  ],
  "type": "function"
 },
 "mlflow.store": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.store.artifact": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.store.artifact.artifact_repo": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.store.artifact.artifact_repo.ArtifactRepository": {
  "lineno": 13,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "mlflow.store.artifact.artifact_repo.ArtifactRepository.__init__": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.artifact.artifact_repo.ArtifactRepository._download_file": {
  "lineno": 142,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.artifact_repo.ArtifactRepository._is_directory": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.artifact.artifact_repo.ArtifactRepository.delete_artifacts": {
  "lineno": 154,
  "symbols_in_volume": [
   "mlflow.utils.experimental"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.artifact_repo.ArtifactRepository.download_artifacts": {
  "lineno": 65,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
   "os.path.abspath",
   "os.path.exists",
   "os.path.isdir",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.artifact_repo.ArtifactRepository.download_artifacts.download_artifact_dir": {
  "lineno": 108,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.exists",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.artifact_repo.ArtifactRepository.download_artifacts.download_file": {
  "lineno": 99,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.exists",
   "os.path.join",
   "posixpath.split"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.artifact_repo.ArtifactRepository.list_artifacts": {
  "lineno": 49,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.artifact_repo.ArtifactRepository.log_artifact": {
  "lineno": 24,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.artifact_repo.ArtifactRepository.log_artifacts": {
  "lineno": 37,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.artifact_repo.verify_artifact_path": {
  "lineno": 165,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.utils.validation.bad_path_message",
   "mlflow.utils.validation.path_not_unique"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.artifact_repository_registry": {
  "lineno": null,
  "symbols_in_volume": [
   "mlflow.store.artifact.azure_blob_artifact_repo.AzureBlobArtifactRepository",
   "mlflow.store.artifact.dbfs_artifact_repo.dbfs_artifact_repo_factory",
   "mlflow.store.artifact.ftp_artifact_repo.FTPArtifactRepository",
   "mlflow.store.artifact.gcs_artifact_repo.GCSArtifactRepository",
   "mlflow.store.artifact.hdfs_artifact_repo.HdfsArtifactRepository",
   "mlflow.store.artifact.local_artifact_repo.LocalArtifactRepository",
   "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository",
   "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository",
   "mlflow.store.artifact.s3_artifact_repo.S3ArtifactRepository",
   "mlflow.store.artifact.sftp_artifact_repo.SFTPArtifactRepository"
  ],
  "type": "module"
 },
 "mlflow.store.artifact.artifact_repository_registry.ArtifactRepositoryRegistry": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.store.artifact.artifact_repository_registry.ArtifactRepositoryRegistry.__init__": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.artifact.artifact_repository_registry.ArtifactRepositoryRegistry.get_artifact_repository": {
  "lineno": 52,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.utils.uri.get_uri_scheme"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.artifact_repository_registry.ArtifactRepositoryRegistry.register": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.artifact.artifact_repository_registry.ArtifactRepositoryRegistry.register_entrypoints": {
  "lineno": 39,
  "symbols_in_volume": [
   "entrypoints.get_group_all",
   "warnings.warn"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.artifact_repository_registry.get_artifact_repository": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.artifact.azure_blob_artifact_repo": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.store.artifact.azure_blob_artifact_repo.AzureBlobArtifactRepository": {
  "lineno": 12,
  "symbols_in_volume": [
   "mlflow.store.artifact.artifact_repo.ArtifactRepository"
  ],
  "type": "class"
 },
 "mlflow.store.artifact.azure_blob_artifact_repo.AzureBlobArtifactRepository.__init__": {
  "lineno": 22,
  "symbols_in_volume": [
   "azure.storage.blob.BlobServiceClient",
   "azure.storage.blob.BlobServiceClient.from_connection_string",
   "os.environ",
   "os.environ.get"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.azure_blob_artifact_repo.AzureBlobArtifactRepository._download_file": {
  "lineno": 114,
  "symbols_in_volume": [
   "posixpath.join"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.azure_blob_artifact_repo.AzureBlobArtifactRepository.delete_artifacts": {
  "lineno": 121,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.azure_blob_artifact_repo.AzureBlobArtifactRepository.list_artifacts": {
  "lineno": 88,
  "symbols_in_volume": [
   "azure.storage.blob._models.BlobPrefix",
   "mlflow.entities.FileInfo",
   "mlflow.exceptions.MlflowException",
   "posixpath.join",
   "posixpath.relpath"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.azure_blob_artifact_repo.AzureBlobArtifactRepository.log_artifact": {
  "lineno": 61,
  "symbols_in_volume": [
   "os.path.basename",
   "posixpath.join"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.azure_blob_artifact_repo.AzureBlobArtifactRepository.log_artifacts": {
  "lineno": 71,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.join",
   "os.path.relpath",
   "os.walk",
   "posixpath.join"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.azure_blob_artifact_repo.AzureBlobArtifactRepository.parse_wasbs_uri": {
  "lineno": 44,
  "symbols_in_volume": [
   "re.match",
   "six.moves.urllib.parse.urlparse"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.cli": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "mlflow.store.artifact.cli._file_infos_to_json": {
  "lineno": 86,
  "symbols_in_volume": [
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.cli.commands": {
  "lineno": 14,
  "symbols_in_volume": [
   "click.group"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.cli.download_artifacts": {
  "lineno": 91,
  "symbols_in_volume": [
   "click.option",
   "mlflow.store.artifact.artifact_repository_registry.get_artifact_repository",
   "mlflow.tracking._get_store",
   "mlflow.tracking.artifact_utils._download_artifact_from_uri",
   "sys.exit"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.cli.list_artifacts": {
  "lineno": 68,
  "symbols_in_volume": [
   "click.option",
   "mlflow.store.artifact.artifact_repository_registry.get_artifact_repository",
   "mlflow.tracking._get_store"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.cli.log_artifact": {
  "lineno": 25,
  "symbols_in_volume": [
   "click.option",
   "mlflow.store.artifact.artifact_repository_registry.get_artifact_repository",
   "mlflow.tracking._get_store"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.cli.log_artifacts": {
  "lineno": 47,
  "symbols_in_volume": [
   "click.option",
   "mlflow.store.artifact.artifact_repository_registry.get_artifact_repository",
   "mlflow.tracking._get_store"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.dbfs_artifact_repo": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.DbfsRestArtifactRepository": {
  "lineno": 22,
  "symbols_in_volume": [
   "mlflow.store.artifact.artifact_repo.ArtifactRepository"
  ],
  "type": "class"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.DbfsRestArtifactRepository.__init__": {
  "lineno": 29,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.DbfsRestArtifactRepository._databricks_api_request": {
  "lineno": 37,
  "symbols_in_volume": [
   "mlflow.utils.rest_utils.http_request_safe"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.DbfsRestArtifactRepository._dbfs_download": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.DbfsRestArtifactRepository._dbfs_is_dir": {
  "lineno": 62,
  "symbols_in_volume": [
   "json.loads",
   "mlflow.exceptions.MlflowException"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.DbfsRestArtifactRepository._dbfs_list_api": {
  "lineno": 41,
  "symbols_in_volume": [
   "json",
   "mlflow.utils.rest_utils.http_request"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.DbfsRestArtifactRepository._download_file": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.DbfsRestArtifactRepository._get_dbfs_endpoint": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.DbfsRestArtifactRepository._get_dbfs_path": {
  "lineno": 71,
  "symbols_in_volume": [
   "mlflow.utils.string_utils.strip_prefix"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.DbfsRestArtifactRepository._is_directory": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.DbfsRestArtifactRepository.delete_artifacts": {
  "lineno": 143,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.DbfsRestArtifactRepository.list_artifacts": {
  "lineno": 108,
  "symbols_in_volume": [
   "json.loads",
   "mlflow.entities.FileInfo",
   "mlflow.exceptions.MlflowException",
   "mlflow.utils.rest_utils.RESOURCE_DOES_NOT_EXIST",
   "mlflow.utils.string_utils.strip_prefix"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.DbfsRestArtifactRepository.log_artifact": {
  "lineno": 78,
  "symbols_in_volume": [
   "os.path.basename",
   "os.stat",
   "posixpath.join"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.DbfsRestArtifactRepository.log_artifacts": {
  "lineno": 96,
  "symbols_in_volume": [
   "mlflow.utils.file_utils.relative_path_to_artifact_path",
   "os.path.join",
   "os.path.relpath",
   "os.walk",
   "posixpath.join"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.dbfs_artifact_repo._get_host_creds_from_default_store": {
  "lineno": 147,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.store.tracking.rest_store.RestStore",
   "mlflow.tracking._tracking_service.utils._get_store"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.dbfs_artifact_repo.dbfs_artifact_repo_factory": {
  "lineno": 156,
  "symbols_in_volume": [
   "mlflow.store.artifact.local_artifact_repo.LocalArtifactRepository",
   "mlflow.utils.string_utils.strip_prefix",
   "os.environ.get"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.ftp_artifact_repo": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.store.artifact.ftp_artifact_repo.FTPArtifactRepository": {
  "lineno": 15,
  "symbols_in_volume": [
   "mlflow.store.artifact.artifact_repo.ArtifactRepository"
  ],
  "type": "class"
 },
 "mlflow.store.artifact.ftp_artifact_repo.FTPArtifactRepository.__init__": {
  "lineno": 18,
  "symbols_in_volume": [
   "six.moves.urllib.parse.urlparse"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.ftp_artifact_repo.FTPArtifactRepository._download_file": {
  "lineno": 127,
  "symbols_in_volume": [
   "posixpath.join"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.ftp_artifact_repo.FTPArtifactRepository._is_dir": {
  "lineno": 42,
  "symbols_in_volume": [
   "ftplib.error_perm"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.ftp_artifact_repo.FTPArtifactRepository._is_directory": {
  "lineno": 101,
  "symbols_in_volume": [
   "posixpath.join"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.ftp_artifact_repo.FTPArtifactRepository._mkdir": {
  "lineno": 50,
  "symbols_in_volume": [
   "ftplib.error_perm",
   "posixpath.split"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.ftp_artifact_repo.FTPArtifactRepository._size": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.artifact.ftp_artifact_repo.FTPArtifactRepository.delete_artifacts": {
  "lineno": 134,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.ftp_artifact_repo.FTPArtifactRepository.get_ftp_client": {
  "lineno": 34,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "ftplib.FTP"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.ftp_artifact_repo.FTPArtifactRepository.list_artifacts": {
  "lineno": 107,
  "symbols_in_volume": [
   "mlflow.entities.file_info.FileInfo",
   "posixpath.join"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.ftp_artifact_repo.FTPArtifactRepository.log_artifact": {
  "lineno": 67,
  "symbols_in_volume": [
   "os.path.basename",
   "posixpath.join"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.ftp_artifact_repo.FTPArtifactRepository.log_artifacts": {
  "lineno": 76,
  "symbols_in_volume": [
   "mlflow.utils.file_utils.relative_path_to_artifact_path",
   "os.path.abspath",
   "os.path.isfile",
   "os.path.join",
   "os.path.relpath",
   "os.path.split",
   "os.walk",
   "posixpath.join"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.gcs_artifact_repo": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.store.artifact.gcs_artifact_repo.GCSArtifactRepository": {
  "lineno": 12,
  "symbols_in_volume": [
   "mlflow.store.artifact.artifact_repo.ArtifactRepository"
  ],
  "type": "class"
 },
 "mlflow.store.artifact.gcs_artifact_repo.GCSArtifactRepository.__init__": {
  "lineno": 20,
  "symbols_in_volume": [
   "google.cloud.storage"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.gcs_artifact_repo.GCSArtifactRepository._download_file": {
  "lineno": 101,
  "symbols_in_volume": [
   "posixpath.join"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.gcs_artifact_repo.GCSArtifactRepository._get_bucket": {
  "lineno": 39,
  "symbols_in_volume": [
   "google.auth.exceptions.DefaultCredentialsError"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.gcs_artifact_repo.GCSArtifactRepository._list_folders": {
  "lineno": 93,
  "symbols_in_volume": [
   "mlflow.entities.FileInfo"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.gcs_artifact_repo.GCSArtifactRepository.delete_artifacts": {
  "lineno": 107,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.gcs_artifact_repo.GCSArtifactRepository.list_artifacts": {
  "lineno": 75,
  "symbols_in_volume": [
   "mlflow.entities.FileInfo",
   "posixpath.join"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.gcs_artifact_repo.GCSArtifactRepository.log_artifact": {
  "lineno": 47,
  "symbols_in_volume": [
   "os.path.basename",
   "posixpath.join"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.gcs_artifact_repo.GCSArtifactRepository.log_artifacts": {
  "lineno": 58,
  "symbols_in_volume": [
   "mlflow.utils.file_utils.relative_path_to_artifact_path",
   "os.path.abspath",
   "os.path.join",
   "os.path.relpath",
   "os.walk",
   "posixpath.join"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.gcs_artifact_repo.GCSArtifactRepository.parse_gcs_uri": {
  "lineno": 28,
  "symbols_in_volume": [
   "six.moves.urllib.parse.urlparse"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.hdfs_artifact_repo": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.store.artifact.hdfs_artifact_repo.HdfsArtifactRepository": {
  "lineno": 14,
  "symbols_in_volume": [
   "mlflow.store.artifact.artifact_repo.ArtifactRepository"
  ],
  "type": "class"
 },
 "mlflow.store.artifact.hdfs_artifact_repo.HdfsArtifactRepository.__init__": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.artifact.hdfs_artifact_repo.HdfsArtifactRepository._download_file": {
  "lineno": 147,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.hdfs_artifact_repo.HdfsArtifactRepository._walk_path": {
  "lineno": 94,
  "symbols_in_volume": [
   "posixpath.join"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.hdfs_artifact_repo.HdfsArtifactRepository.delete_artifacts": {
  "lineno": 150,
  "symbols_in_volume": [
   "posixpath.join"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.hdfs_artifact_repo.HdfsArtifactRepository.download_artifacts": {
  "lineno": 106,
  "symbols_in_volume": [
   "mlflow.utils.file_utils.mkdir",
   "os.path.join",
   "os.path.normpath"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.hdfs_artifact_repo.HdfsArtifactRepository.list_artifacts": {
  "lineno": 70,
  "symbols_in_volume": [
   "mlflow.entities.FileInfo"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.hdfs_artifact_repo.HdfsArtifactRepository.log_artifact": {
  "lineno": 26,
  "symbols_in_volume": [
   "os.path.split",
   "posixpath.join"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.hdfs_artifact_repo.HdfsArtifactRepository.log_artifacts": {
  "lineno": 40,
  "symbols_in_volume": [
   "os.path.join",
   "os.walk",
   "posixpath.join"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.hdfs_artifact_repo._download_hdfs_file": {
  "lineno": 213,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.dirname",
   "os.path.exists"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.hdfs_artifact_repo._parse_extra_conf": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.artifact.hdfs_artifact_repo._parse_extra_conf.as_pair": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.artifact.hdfs_artifact_repo._relative_path": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.artifact.hdfs_artifact_repo._relative_path_local": {
  "lineno": 200,
  "symbols_in_volume": [
   "mlflow.utils.file_utils.relative_path_to_artifact_path",
   "os.path"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.hdfs_artifact_repo._relative_path_remote": {
  "lineno": 205,
  "symbols_in_volume": [
   "posixpath"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.hdfs_artifact_repo._resolve_base_path": {
  "lineno": 187,
  "symbols_in_volume": [
   "posixpath.join"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.hdfs_artifact_repo._resolve_connection_params": {
  "lineno": 182,
  "symbols_in_volume": [
   "six.moves.urllib.parse.urlparse"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.hdfs_artifact_repo._tmp_dir": {
  "lineno": 209,
  "symbols_in_volume": [
   "os.path.abspath",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.hdfs_artifact_repo.hdfs_system": {
  "lineno": 156,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "os.getenv",
   "pyarrow.hdfs.connect"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.local_artifact_repo": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.store.artifact.local_artifact_repo.LocalArtifactRepository": {
  "lineno": 10,
  "symbols_in_volume": [
   "mlflow.store.artifact.artifact_repo.ArtifactRepository"
  ],
  "type": "class"
 },
 "mlflow.store.artifact.local_artifact_repo.LocalArtifactRepository.__init__": {
  "lineno": 13,
  "symbols_in_volume": [
   "mlflow.utils.file_utils.local_file_uri_to_path"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.local_artifact_repo.LocalArtifactRepository._download_file": {
  "lineno": 91,
  "symbols_in_volume": [
   "os.path.join",
   "os.path.normpath",
   "shutil.copyfile"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.local_artifact_repo.LocalArtifactRepository._is_directory": {
  "lineno": 34,
  "symbols_in_volume": [
   "os.path.isdir",
   "os.path.join",
   "os.path.normpath"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.local_artifact_repo.LocalArtifactRepository.artifact_dir": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.artifact.local_artifact_repo.LocalArtifactRepository.delete_artifacts": {
  "lineno": 97,
  "symbols_in_volume": [
   "mlflow.utils.file_utils.local_file_uri_to_path",
   "os.path.join",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.local_artifact_repo.LocalArtifactRepository.download_artifacts": {
  "lineno": 53,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.exists",
   "os.path.join",
   "os.path.normpath"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.local_artifact_repo.LocalArtifactRepository.list_artifacts": {
  "lineno": 75,
  "symbols_in_volume": [
   "mlflow.utils.file_utils.get_file_info",
   "mlflow.utils.file_utils.list_all",
   "mlflow.utils.file_utils.relative_path_to_artifact_path",
   "os.path.isdir",
   "os.path.join",
   "os.path.normpath",
   "os.path.relpath"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.local_artifact_repo.LocalArtifactRepository.log_artifact": {
  "lineno": 21,
  "symbols_in_volume": [
   "mlflow.store.artifact.artifact_repo.verify_artifact_path",
   "mlflow.utils.file_utils.mkdir",
   "os.path.basename",
   "os.path.exists",
   "os.path.join",
   "os.path.normpath",
   "shutil.copyfile"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.local_artifact_repo.LocalArtifactRepository.log_artifacts": {
  "lineno": 41,
  "symbols_in_volume": [
   "distutils.dir_util.copy_tree",
   "mlflow.store.artifact.artifact_repo.verify_artifact_path",
   "mlflow.utils.file_utils.mkdir",
   "os.path.exists",
   "os.path.join",
   "os.path.normpath"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.models_artifact_repo": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository": {
  "lineno": 7,
  "symbols_in_volume": [
   "mlflow.store.artifact.artifact_repo.ArtifactRepository"
  ],
  "type": "class"
 },
 "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository.__init__": {
  "lineno": 16,
  "symbols_in_volume": [
   "mlflow.store.artifact.artifact_repository_registry.get_artifact_repository"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository._download_file": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository._improper_model_uri_msg": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository._parse_uri": {
  "lineno": 29,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "six.moves.urllib.parse.urlparse"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository.delete_artifacts": {
  "lineno": 135,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository.download_artifacts": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository.get_underlying_uri": {
  "lineno": 56,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.tracking.MlflowClient"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository.is_models_uri": {
  "lineno": 52,
  "symbols_in_volume": [
   "six.moves.urllib.parse.urlparse"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository.list_artifacts": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository.log_artifact": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository.log_artifacts": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.artifact.runs_artifact_repo": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository": {
  "lineno": 7,
  "symbols_in_volume": [
   "mlflow.store.artifact.artifact_repo.ArtifactRepository"
  ],
  "type": "class"
 },
 "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository.__init__": {
  "lineno": 18,
  "symbols_in_volume": [
   "mlflow.store.artifact.artifact_repository_registry.get_artifact_repository"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository._download_file": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository._is_directory": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository.delete_artifacts": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository.download_artifacts": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository.get_underlying_uri": {
  "lineno": 28,
  "symbols_in_volume": [
   "mlflow.tracking.artifact_utils.get_artifact_uri"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository.is_runs_uri": {
  "lineno": 24,
  "symbols_in_volume": [
   "six.moves.urllib.parse.urlparse"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository.list_artifacts": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository.log_artifact": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository.log_artifacts": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository.parse_runs_uri": {
  "lineno": 36,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "six.moves.urllib.parse.urlparse"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.s3_artifact_repo": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.store.artifact.s3_artifact_repo.S3ArtifactRepository": {
  "lineno": 13,
  "symbols_in_volume": [
   "mlflow.store.artifact.artifact_repo.ArtifactRepository"
  ],
  "type": "class"
 },
 "mlflow.store.artifact.s3_artifact_repo.S3ArtifactRepository._download_file": {
  "lineno": 118,
  "symbols_in_volume": [
   "mlflow.data.parse_s3_uri",
   "posixpath.join"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.s3_artifact_repo.S3ArtifactRepository._get_s3_client": {
  "lineno": 35,
  "symbols_in_volume": [
   "boto3.client",
   "botocore.client.Config",
   "os.environ.get"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.s3_artifact_repo.S3ArtifactRepository._verify_listed_object_contains_artifact_path_prefix": {
  "lineno": 109,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.s3_artifact_repo.S3ArtifactRepository.delete_artifacts": {
  "lineno": 124,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.s3_artifact_repo.S3ArtifactRepository.get_s3_file_upload_extra_args": {
  "lineno": 26,
  "symbols_in_volume": [
   "json.loads",
   "os.environ.get"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.s3_artifact_repo.S3ArtifactRepository.list_artifacts": {
  "lineno": 78,
  "symbols_in_volume": [
   "mlflow.data.parse_s3_uri",
   "mlflow.entities.FileInfo",
   "posixpath.join",
   "posixpath.relpath"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.s3_artifact_repo.S3ArtifactRepository.log_artifact": {
  "lineno": 46,
  "symbols_in_volume": [
   "mlflow.data.parse_s3_uri",
   "os.path.basename",
   "posixpath.join"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.s3_artifact_repo.S3ArtifactRepository.log_artifacts": {
  "lineno": 59,
  "symbols_in_volume": [
   "mlflow.data.parse_s3_uri",
   "mlflow.utils.file_utils.relative_path_to_artifact_path",
   "os.path.abspath",
   "os.path.join",
   "os.path.relpath",
   "os.walk",
   "posixpath.join"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.s3_artifact_repo.S3ArtifactRepository.parse_s3_uri": {
  "lineno": 15,
  "symbols_in_volume": [
   "six.moves.urllib.parse.urlparse"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.sftp_artifact_repo": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.store.artifact.sftp_artifact_repo.SFTPArtifactRepository": {
  "lineno": 11,
  "symbols_in_volume": [
   "mlflow.store.artifact.artifact_repo.ArtifactRepository"
  ],
  "type": "class"
 },
 "mlflow.store.artifact.sftp_artifact_repo.SFTPArtifactRepository.__init__": {
  "lineno": 14,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.expanduser",
   "paramiko.SSHConfig",
   "pysftp.Connection",
   "six.moves.urllib.parse.urlparse"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.sftp_artifact_repo.SFTPArtifactRepository._download_file": {
  "lineno": 96,
  "symbols_in_volume": [
   "posixpath.join"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.sftp_artifact_repo.SFTPArtifactRepository._is_directory": {
  "lineno": 75,
  "symbols_in_volume": [
   "posixpath.join"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.sftp_artifact_repo.SFTPArtifactRepository.delete_artifacts": {
  "lineno": 100,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.sftp_artifact_repo.SFTPArtifactRepository.list_artifacts": {
  "lineno": 80,
  "symbols_in_volume": [
   "mlflow.entities.FileInfo",
   "posixpath.join"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.sftp_artifact_repo.SFTPArtifactRepository.log_artifact": {
  "lineno": 61,
  "symbols_in_volume": [
   "os.path.basename",
   "posixpath.join"
  ],
  "type": "function"
 },
 "mlflow.store.artifact.sftp_artifact_repo.SFTPArtifactRepository.log_artifacts": {
  "lineno": 69,
  "symbols_in_volume": [
   "posixpath.join"
  ],
  "type": "function"
 },
 "mlflow.store.db": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.store.db.base_sql_model": {
  "lineno": null,
  "symbols_in_volume": [
   "sqlalchemy.ext.declarative.declarative_base"
  ],
  "type": "module"
 },
 "mlflow.store.db.db_types": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.store.db.utils": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "mlflow.store.db.utils._get_alembic_config": {
  "lineno": 86,
  "symbols_in_volume": [
   "alembic.config.Config",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.store.db.utils._get_latest_schema_revision": {
  "lineno": 33,
  "symbols_in_volume": [
   "alembic.script.ScriptDirectory.from_config",
   "mlflow.exceptions.MlflowException"
  ],
  "type": "function"
 },
 "mlflow.store.db.utils._get_managed_session_maker": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.db.utils._get_managed_session_maker.make_managed_session": {
  "lineno": 67,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INTERNAL_ERROR"
  ],
  "type": "function"
 },
 "mlflow.store.db.utils._get_package_dir": {
  "lineno": 21,
  "symbols_in_volume": [
   "os.pardir",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join",
   "os.path.normpath"
  ],
  "type": "function"
 },
 "mlflow.store.db.utils._get_schema_version": {
  "lineno": 136,
  "symbols_in_volume": [
   "alembic.migration.MigrationContext.configure"
  ],
  "type": "function"
 },
 "mlflow.store.db.utils._initialize_tables": {
  "lineno": 27,
  "symbols_in_volume": [
   "mlflow.store.tracking.dbmodels.initial_models.Base.metadata.create_all"
  ],
  "type": "function"
 },
 "mlflow.store.db.utils._is_initialized_before_mlflow_1": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.db.utils._upgrade_db": {
  "lineno": 111,
  "symbols_in_volume": [
   "alembic.command.upgrade"
  ],
  "type": "function"
 },
 "mlflow.store.db.utils._upgrade_db_initialized_before_mlflow_1": {
  "lineno": 151,
  "symbols_in_volume": [
   "alembic.command.stamp",
   "alembic.command.upgrade",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.store.db.utils._verify_schema": {
  "lineno": 46,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException"
  ],
  "type": "function"
 },
 "mlflow.store.db.utils.create_sqlalchemy_engine": {
  "lineno": 175,
  "symbols_in_volume": [
   "os.environ.get",
   "sqlalchemy.create_engine"
  ],
  "type": "function"
 },
 "mlflow.store.db_migrations": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.store.db_migrations.env": {
  "lineno": null,
  "symbols_in_volume": [
   "alembic.context.config",
   "alembic.context.is_offline_mode",
   "logging.config.fileConfig",
   "mlflow.store.db.base_sql_model.Base.metadata"
  ],
  "type": "module"
 },
 "mlflow.store.db_migrations.env.run_migrations_offline": {
  "lineno": 31,
  "symbols_in_volume": [
   "alembic.context.begin_transaction",
   "alembic.context.configure",
   "alembic.context.run_migrations"
  ],
  "type": "function"
 },
 "mlflow.store.db_migrations.env.run_migrations_online": {
  "lineno": 53,
  "symbols_in_volume": [
   "alembic.context.begin_transaction",
   "alembic.context.configure",
   "alembic.context.run_migrations",
   "sqlalchemy.engine_from_config",
   "sqlalchemy.pool.NullPool"
  ],
  "type": "function"
 },
 "mlflow.store.db_migrations.versions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.store.db_migrations.versions.0a8213491aaa_drop_duplicate_killed_constraint": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "mlflow.store.db_migrations.versions.0a8213491aaa_drop_duplicate_killed_constraint.downgrade": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.0a8213491aaa_drop_duplicate_killed_constraint.upgrade": {
  "lineno": 23,
  "symbols_in_volume": [
   "alembic.op.drop_constraint"
  ],
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.181f10493468_allow_nulls_for_metric_values": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.store.db_migrations.versions.181f10493468_allow_nulls_for_metric_values.downgrade": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.181f10493468_allow_nulls_for_metric_values.upgrade": {
  "lineno": 18,
  "symbols_in_volume": [
   "alembic.op.batch_alter_table",
   "sqlalchemy.Boolean",
   "sqlalchemy.Column",
   "sqlalchemy.types.Float"
  ],
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.INFO",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db.downgrade": {
  "lineno": 70,
  "symbols_in_volume": [
   "alembic.op.drop_table",
   "mlflow.store.model_registry.dbmodels.models.SqlModelVersion.__tablename__",
   "mlflow.store.model_registry.dbmodels.models.SqlRegisteredModel.__tablename__"
  ],
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.2b4d017a5e9b_add_model_registry_tables_to_db.upgrade": {
  "lineno": 35,
  "symbols_in_volume": [
   "alembic.op.create_table",
   "alembic.op.get_bind",
   "mlflow.entities.model_registry.model_version_stages.STAGE_NONE",
   "mlflow.entities.model_registry.model_version_status.ModelVersionStatus.READY",
   "mlflow.entities.model_registry.model_version_status.ModelVersionStatus.to_string",
   "mlflow.store.model_registry.dbmodels.models.SqlModelVersion.__tablename__",
   "mlflow.store.model_registry.dbmodels.models.SqlRegisteredModel.__tablename__",
   "sqlalchemy.BigInteger",
   "sqlalchemy.Column",
   "sqlalchemy.ForeignKey",
   "sqlalchemy.Integer",
   "sqlalchemy.PrimaryKeyConstraint",
   "sqlalchemy.String",
   "sqlalchemy.orm.Session",
   "time.time"
  ],
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.451aebb31d03_add_metric_step": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.store.db_migrations.versions.451aebb31d03_add_metric_step.downgrade": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.451aebb31d03_add_metric_step.upgrade": {
  "lineno": 19,
  "symbols_in_volume": [
   "alembic.op.add_column",
   "alembic.op.batch_alter_table",
   "sqlalchemy.BigInteger",
   "sqlalchemy.Column"
  ],
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.7ac759974ad8_update_run_tags_with_larger_limit": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.store.db_migrations.versions.7ac759974ad8_update_run_tags_with_larger_limit.downgrade": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.7ac759974ad8_update_run_tags_with_larger_limit.upgrade": {
  "lineno": 19,
  "symbols_in_volume": [
   "alembic.op.batch_alter_table",
   "sqlalchemy.String"
  ],
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.INFO",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table._describe_migration_if_necessary": {
  "lineno": 28,
  "symbols_in_volume": [
   "mlflow.store.tracking.dbmodels.models.SqlMetric",
   "mlflow.store.tracking.dbmodels.models.SqlMetric.key",
   "mlflow.store.tracking.dbmodels.models.SqlMetric.run_uuid",
   "sqlalchemy.distinct"
  ],
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table._get_latest_metrics_for_runs": {
  "lineno": 66,
  "symbols_in_volume": [
   "mlflow.store.tracking.dbmodels.models.SqlMetric.is_nan",
   "mlflow.store.tracking.dbmodels.models.SqlMetric.key",
   "mlflow.store.tracking.dbmodels.models.SqlMetric.run_uuid",
   "mlflow.store.tracking.dbmodels.models.SqlMetric.step",
   "mlflow.store.tracking.dbmodels.models.SqlMetric.timestamp",
   "mlflow.store.tracking.dbmodels.models.SqlMetric.value",
   "sqlalchemy.and_",
   "sqlalchemy.func.max"
  ],
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table.downgrade": {
  "lineno": 127,
  "symbols_in_volume": [
   "alembic.op.drop_table",
   "mlflow.store.tracking.dbmodels.models.SqlLatestMetric.__tablename__"
  ],
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.89d4b8295536_create_latest_metrics_table.upgrade": {
  "lineno": 94,
  "symbols_in_volume": [
   "alembic.op.create_table",
   "alembic.op.get_bind",
   "mlflow.store.tracking.dbmodels.models.SqlLatestMetric",
   "mlflow.store.tracking.dbmodels.models.SqlLatestMetric.__tablename__",
   "sqlalchemy.BigInteger",
   "sqlalchemy.Boolean",
   "sqlalchemy.Column",
   "sqlalchemy.Float",
   "sqlalchemy.ForeignKey",
   "sqlalchemy.PrimaryKeyConstraint",
   "sqlalchemy.String",
   "sqlalchemy.orm.Session",
   "time.time"
  ],
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.90e64c465722_migrate_user_column_to_tags": {
  "lineno": null,
  "symbols_in_volume": [
   "sqlalchemy.ext.declarative.declarative_base"
  ],
  "type": "module"
 },
 "mlflow.store.db_migrations.versions.90e64c465722_migrate_user_column_to_tags.SqlRun": {
  "lineno": 25,
  "symbols_in_volume": [
   "sqlalchemy.Column",
   "sqlalchemy.Integer",
   "sqlalchemy.PrimaryKeyConstraint",
   "sqlalchemy.String"
  ],
  "type": "class"
 },
 "mlflow.store.db_migrations.versions.90e64c465722_migrate_user_column_to_tags.SqlTag": {
  "lineno": 36,
  "symbols_in_volume": [
   "sqlalchemy.Column",
   "sqlalchemy.ForeignKey",
   "sqlalchemy.PrimaryKeyConstraint",
   "sqlalchemy.String",
   "sqlalchemy.orm.backref",
   "sqlalchemy.orm.relationship"
  ],
  "type": "class"
 },
 "mlflow.store.db_migrations.versions.90e64c465722_migrate_user_column_to_tags.downgrade": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.90e64c465722_migrate_user_column_to_tags.upgrade": {
  "lineno": 48,
  "symbols_in_volume": [
   "alembic.op.get_bind",
   "mlflow.utils.mlflow_tags.MLFLOW_USER",
   "sqlalchemy.orm.Session"
  ],
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.cfd24bdc0731_update_run_status_constraint_with_killed": {
  "lineno": null,
  "symbols_in_volume": [
   "mlflow.entities.RunStatus.FAILED",
   "mlflow.entities.RunStatus.FINISHED",
   "mlflow.entities.RunStatus.KILLED",
   "mlflow.entities.RunStatus.RUNNING",
   "mlflow.entities.RunStatus.SCHEDULED",
   "mlflow.entities.RunStatus.to_string",
   "mlflow.entities.ViewType.ALL",
   "mlflow.entities.lifecycle_stage.LifecycleStage.view_type_to_stages",
   "mlflow.store.tracking.dbmodels.models.SourceTypes",
   "mlflow.store.tracking.dbmodels.models.SqlRun.lifecycle_stage.in_",
   "mlflow.store.tracking.dbmodels.models.SqlRun.source_type.in_",
   "sqlalchemy.CheckConstraint"
  ],
  "type": "module"
 },
 "mlflow.store.db_migrations.versions.cfd24bdc0731_update_run_status_constraint_with_killed.downgrade": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.cfd24bdc0731_update_run_status_constraint_with_killed.upgrade": {
  "lineno": 40,
  "symbols_in_volume": [
   "alembic.op.batch_alter_table",
   "sqlalchemy.Enum"
  ],
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.df50e92ffc5e_add_experiment_tags_table": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.store.db_migrations.versions.df50e92ffc5e_add_experiment_tags_table.downgrade": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.db_migrations.versions.df50e92ffc5e_add_experiment_tags_table.upgrade": {
  "lineno": 19,
  "symbols_in_volume": [
   "alembic.op.create_table",
   "mlflow.store.tracking.dbmodels.models.SqlExperimentTag.__tablename__",
   "sqlalchemy.Column",
   "sqlalchemy.ForeignKey",
   "sqlalchemy.Integer",
   "sqlalchemy.PrimaryKeyConstraint",
   "sqlalchemy.String"
  ],
  "type": "function"
 },
 "mlflow.store.entities": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.store.entities.paged_list": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.store.entities.paged_list.PagedList": {
  "lineno": 1,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.store.entities.paged_list.PagedList.__init__": {
  "lineno": 3,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.model_registry": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.store.model_registry.abstract_store": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.store.model_registry.abstract_store.AbstractStore": {
  "lineno": 4,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "mlflow.store.model_registry.abstract_store.AbstractStore.__init__": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.model_registry.abstract_store.AbstractStore.create_model_version": {
  "lineno": 105,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.abstract_store.AbstractStore.create_registered_model": {
  "lineno": 21,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.abstract_store.AbstractStore.delete_model_version": {
  "lineno": 148,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.abstract_store.AbstractStore.delete_registered_model": {
  "lineno": 59,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.abstract_store.AbstractStore.get_latest_versions": {
  "lineno": 89,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.abstract_store.AbstractStore.get_model_version_download_uri": {
  "lineno": 160,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.abstract_store.AbstractStore.get_registered_model": {
  "lineno": 80,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.abstract_store.AbstractStore.list_registered_models": {
  "lineno": 71,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.abstract_store.AbstractStore.rename_registered_model": {
  "lineno": 46,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.abstract_store.AbstractStore.search_model_versions": {
  "lineno": 172,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.abstract_store.AbstractStore.transition_model_version_stage": {
  "lineno": 132,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.abstract_store.AbstractStore.update_model_version": {
  "lineno": 119,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.abstract_store.AbstractStore.update_registered_model": {
  "lineno": 33,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.dbmodels": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.store.model_registry.dbmodels.models": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.store.model_registry.dbmodels.models.SqlModelVersion": {
  "lineno": 47,
  "symbols_in_volume": [
   "mlflow.entities.model_registry.model_version_stages.STAGE_NONE",
   "mlflow.entities.model_registry.model_version_status.ModelVersionStatus.READY",
   "mlflow.entities.model_registry.model_version_status.ModelVersionStatus.to_string",
   "mlflow.store.db.base_sql_model.Base",
   "sqlalchemy.BigInteger",
   "sqlalchemy.Column",
   "sqlalchemy.ForeignKey",
   "sqlalchemy.Integer",
   "sqlalchemy.PrimaryKeyConstraint",
   "sqlalchemy.String",
   "sqlalchemy.orm.backref",
   "sqlalchemy.orm.relationship",
   "time.time"
  ],
  "type": "class"
 },
 "mlflow.store.model_registry.dbmodels.models.SqlModelVersion.to_mlflow_entity": {
  "lineno": 83,
  "symbols_in_volume": [
   "mlflow.entities.model_registry.ModelVersion"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.dbmodels.models.SqlRegisteredModel": {
  "lineno": 13,
  "symbols_in_volume": [
   "mlflow.store.db.base_sql_model.Base",
   "sqlalchemy.BigInteger",
   "sqlalchemy.Column",
   "sqlalchemy.PrimaryKeyConstraint",
   "sqlalchemy.String",
   "time.time"
  ],
  "type": "class"
 },
 "mlflow.store.model_registry.dbmodels.models.SqlRegisteredModel.__repr__": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.model_registry.dbmodels.models.SqlRegisteredModel.to_mlflow_entity": {
  "lineno": 33,
  "symbols_in_volume": [
   "mlflow.entities.model_registry.RegisteredModel",
   "mlflow.entities.model_registry.model_version_stages.STAGE_DELETED_INTERNAL"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.rest_store": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "mlflow.protos.model_registry_pb2.ModelRegistryService",
   "mlflow.utils.rest_utils.extract_api_info_for_service"
  ],
  "type": "module"
 },
 "mlflow.store.model_registry.rest_store.RestStore": {
  "lineno": 21,
  "symbols_in_volume": [
   "mlflow.store.model_registry.abstract_store.AbstractStore"
  ],
  "type": "class"
 },
 "mlflow.store.model_registry.rest_store.RestStore.__init__": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.model_registry.rest_store.RestStore._call_endpoint": {
  "lineno": 35,
  "symbols_in_volume": [
   "mlflow.utils.rest_utils.call_endpoint"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.rest_store.RestStore.create_model_version": {
  "lineno": 137,
  "symbols_in_volume": [
   "mlflow.entities.model_registry.ModelVersion.from_proto",
   "mlflow.protos.model_registry_pb2.CreateModelVersion",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.rest_store.RestStore.create_registered_model": {
  "lineno": 42,
  "symbols_in_volume": [
   "mlflow.entities.model_registry.RegisteredModel.from_proto",
   "mlflow.protos.model_registry_pb2.CreateRegisteredModel",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.rest_store.RestStore.delete_model_version": {
  "lineno": 187,
  "symbols_in_volume": [
   "mlflow.protos.model_registry_pb2.DeleteModelVersion",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.rest_store.RestStore.delete_registered_model": {
  "lineno": 85,
  "symbols_in_volume": [
   "mlflow.protos.model_registry_pb2.DeleteRegisteredModel",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.rest_store.RestStore.get_latest_versions": {
  "lineno": 119,
  "symbols_in_volume": [
   "mlflow.entities.model_registry.ModelVersion.from_proto",
   "mlflow.protos.model_registry_pb2.GetLatestVersions",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.rest_store.RestStore.get_model_version": {
  "lineno": 199,
  "symbols_in_volume": [
   "mlflow.entities.model_registry.ModelVersion.from_proto",
   "mlflow.protos.model_registry_pb2.GetModelVersion",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.rest_store.RestStore.get_model_version_download_uri": {
  "lineno": 210,
  "symbols_in_volume": [
   "mlflow.protos.model_registry_pb2.GetModelVersionDownloadUri",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.rest_store.RestStore.get_registered_model": {
  "lineno": 109,
  "symbols_in_volume": [
   "mlflow.entities.model_registry.RegisteredModel.from_proto",
   "mlflow.protos.model_registry_pb2.GetRegisteredModel",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.rest_store.RestStore.list_registered_models": {
  "lineno": 98,
  "symbols_in_volume": [
   "mlflow.entities.model_registry.RegisteredModel.from_proto",
   "mlflow.protos.model_registry_pb2.ListRegisteredModels",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.rest_store.RestStore.rename_registered_model": {
  "lineno": 70,
  "symbols_in_volume": [
   "mlflow.entities.model_registry.RegisteredModel.from_proto",
   "mlflow.protos.model_registry_pb2.RenameRegisteredModel",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.rest_store.RestStore.search_model_versions": {
  "lineno": 223,
  "symbols_in_volume": [
   "mlflow.entities.model_registry.ModelVersion.from_proto",
   "mlflow.protos.model_registry_pb2.SearchModelVersions",
   "mlflow.store.entities.paged_list.PagedList",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.rest_store.RestStore.transition_model_version_stage": {
  "lineno": 152,
  "symbols_in_volume": [
   "mlflow.entities.model_registry.ModelVersion.from_proto",
   "mlflow.protos.model_registry_pb2.TransitionModelVersionStage",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.rest_store.RestStore.update_model_version": {
  "lineno": 172,
  "symbols_in_volume": [
   "mlflow.entities.model_registry.ModelVersion.from_proto",
   "mlflow.protos.model_registry_pb2.UpdateModelVersion",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.rest_store.RestStore.update_registered_model": {
  "lineno": 55,
  "symbols_in_volume": [
   "mlflow.entities.model_registry.RegisteredModel.from_proto",
   "mlflow.protos.model_registry_pb2.UpdateRegisteredModel",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "sqlalchemy.orm.configure_mappers"
  ],
  "type": "module"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore": {
  "lineno": 34,
  "symbols_in_volume": [
   "mlflow.store.model_registry.abstract_store.AbstractStore"
  ],
  "type": "class"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore.__init__": {
  "lineno": 52,
  "symbols_in_volume": [
   "mlflow.store.db.base_sql_model.Base.metadata.bind",
   "mlflow.store.db.base_sql_model.Base.metadata.create_all",
   "mlflow.utils.uri.extract_db_type_from_uri",
   "sqlalchemy.orm.sessionmaker"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore._get_registered_model": {
  "lineno": 126,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_STATE",
   "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
   "mlflow.store.model_registry.dbmodels.models.SqlRegisteredModel",
   "mlflow.store.model_registry.dbmodels.models.SqlRegisteredModel.name"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore._get_sql_model_version": {
  "lineno": 280,
  "symbols_in_volume": [
   "mlflow.entities.model_registry.model_version_stages.STAGE_DELETED_INTERNAL",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "mlflow.protos.databricks_pb2.INVALID_STATE",
   "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
   "mlflow.store.model_registry.dbmodels.models.SqlModelVersion",
   "mlflow.store.model_registry.dbmodels.models.SqlModelVersion.current_stage",
   "mlflow.store.model_registry.dbmodels.models.SqlModelVersion.name",
   "mlflow.store.model_registry.dbmodels.models.SqlModelVersion.version"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore._save_to_db": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore._verify_registry_tables_exist": {
  "lineno": 78,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.store.model_registry.dbmodels.models.SqlModelVersion.__tablename__",
   "mlflow.store.model_registry.dbmodels.models.SqlRegisteredModel.__tablename__",
   "sqlalchemy.inspect"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore.create_model_version": {
  "lineno": 241,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.store.model_registry.dbmodels.models.SqlModelVersion",
   "sqlalchemy.exc.IntegrityError"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore.create_model_version.next_version": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore.create_registered_model": {
  "lineno": 102,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS",
   "mlflow.store.model_registry.dbmodels.models.SqlRegisteredModel",
   "sqlalchemy.exc.IntegrityError"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore.delete_model_version": {
  "lineno": 349,
  "symbols_in_volume": [
   "mlflow.entities.model_registry.model_version_stages.STAGE_DELETED_INTERNAL"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore.delete_registered_model": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore.get_latest_versions": {
  "lineno": 217,
  "symbols_in_volume": [
   "mlflow.entities.model_registry.model_version_stages.DEFAULT_STAGES_FOR_GET_LATEST_VERSIONS",
   "mlflow.entities.model_registry.model_version_stages.get_canonical_stage"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore.get_model_version": {
  "lineno": 372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore.get_model_version_download_uri": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore.get_registered_model": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore.list_registered_models": {
  "lineno": 198,
  "symbols_in_volume": [
   "mlflow.store.model_registry.dbmodels.models.SqlRegisteredModel"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore.rename_registered_model": {
  "lineno": 158,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS",
   "sqlalchemy.exc.IntegrityError"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore.search_model_versions": {
  "lineno": 398,
  "symbols_in_volume": [
   "mlflow.entities.model_registry.model_version_stages.STAGE_DELETED_INTERNAL",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "mlflow.store.entities.paged_list.PagedList",
   "mlflow.store.model_registry.dbmodels.models.SqlModelVersion",
   "mlflow.store.model_registry.dbmodels.models.SqlModelVersion.current_stage",
   "mlflow.store.model_registry.dbmodels.models.SqlModelVersion.name",
   "mlflow.store.model_registry.dbmodels.models.SqlModelVersion.run_id",
   "mlflow.store.model_registry.dbmodels.models.SqlModelVersion.source",
   "mlflow.utils.search_utils.SearchUtils.parse_filter_for_model_registry"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore.transition_model_version_stage": {
  "lineno": 321,
  "symbols_in_volume": [
   "mlflow.entities.model_registry.model_version_stages.get_canonical_stage",
   "mlflow.exceptions.MlflowException"
  ],
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore.update_model_version": {
  "lineno": 303,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore.update_registered_model": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.model_registry.sqlalchemy_store.now": {
  "lineno": 30,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "mlflow.store.tracking": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.store.tracking.abstract_store": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore": {
  "lineno": 9,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.__init__": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore._search_runs": {
  "lineno": 233,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.create_experiment": {
  "lineno": 34,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.create_run": {
  "lineno": 130,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.delete_experiment": {
  "lineno": 75,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.delete_run": {
  "lineno": 143,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.get_experiment": {
  "lineno": 47,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.get_experiment_by_name": {
  "lineno": 60,
  "symbols_in_volume": [
   "mlflow.entities.ViewType.ALL"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.get_metric_history": {
  "lineno": 197,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.get_run": {
  "lineno": 103,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.list_experiments": {
  "lineno": 24,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "mlflow.entities.ViewType.ACTIVE_ONLY"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.list_run_infos": {
  "lineno": 250,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.log_batch": {
  "lineno": 262,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.log_metric": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.log_param": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.record_logged_model": {
  "lineno": 276,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "mlflow.utils.experimental"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.rename_experiment": {
  "lineno": 94,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.restore_experiment": {
  "lineno": 85,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.restore_run": {
  "lineno": 152,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.search_runs": {
  "lineno": 209,
  "symbols_in_volume": [
   "mlflow.store.entities.paged_list.PagedList",
   "mlflow.store.tracking.SEARCH_MAX_RESULTS_DEFAULT"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.set_experiment_tag": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.set_tag": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.tracking.abstract_store.AbstractStore.update_run_info": {
  "lineno": 121,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.store.tracking.dbmodels.initial_models": {
  "lineno": null,
  "symbols_in_volume": [
   "sqlalchemy.ext.declarative.declarative_base"
  ],
  "type": "module"
 },
 "mlflow.store.tracking.dbmodels.initial_models.SqlExperiment": {
  "lineno": 37,
  "symbols_in_volume": [
   "sqlalchemy.CheckConstraint",
   "sqlalchemy.Column",
   "sqlalchemy.Integer",
   "sqlalchemy.PrimaryKeyConstraint",
   "sqlalchemy.String"
  ],
  "type": "class"
 },
 "mlflow.store.tracking.dbmodels.initial_models.SqlExperiment.__repr__": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.initial_models.SqlMetric": {
  "lineno": 180,
  "symbols_in_volume": [
   "sqlalchemy.BigInteger",
   "sqlalchemy.Column",
   "sqlalchemy.Float",
   "sqlalchemy.ForeignKey",
   "sqlalchemy.PrimaryKeyConstraint",
   "sqlalchemy.String",
   "sqlalchemy.orm.backref",
   "sqlalchemy.orm.relationship",
   "time.time"
  ],
  "type": "class"
 },
 "mlflow.store.tracking.dbmodels.initial_models.SqlMetric.__repr__": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.initial_models.SqlParam": {
  "lineno": 214,
  "symbols_in_volume": [
   "sqlalchemy.Column",
   "sqlalchemy.ForeignKey",
   "sqlalchemy.PrimaryKeyConstraint",
   "sqlalchemy.String",
   "sqlalchemy.orm.backref",
   "sqlalchemy.orm.relationship"
  ],
  "type": "class"
 },
 "mlflow.store.tracking.dbmodels.initial_models.SqlParam.__repr__": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.initial_models.SqlRun": {
  "lineno": 74,
  "symbols_in_volume": [
   "sqlalchemy.BigInteger",
   "sqlalchemy.CheckConstraint",
   "sqlalchemy.Column",
   "sqlalchemy.ForeignKey",
   "sqlalchemy.Integer",
   "sqlalchemy.PrimaryKeyConstraint",
   "sqlalchemy.String",
   "sqlalchemy.orm.backref",
   "sqlalchemy.orm.relationship",
   "time.time"
  ],
  "type": "class"
 },
 "mlflow.store.tracking.dbmodels.initial_models.SqlTag": {
  "lineno": 149,
  "symbols_in_volume": [
   "sqlalchemy.Column",
   "sqlalchemy.ForeignKey",
   "sqlalchemy.PrimaryKeyConstraint",
   "sqlalchemy.String",
   "sqlalchemy.orm.backref",
   "sqlalchemy.orm.relationship"
  ],
  "type": "class"
 },
 "mlflow.store.tracking.dbmodels.initial_models.SqlTag.__repr__": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.models": {
  "lineno": null,
  "symbols_in_volume": [
   "mlflow.entities.RunStatus.FAILED",
   "mlflow.entities.RunStatus.FINISHED",
   "mlflow.entities.RunStatus.KILLED",
   "mlflow.entities.RunStatus.RUNNING",
   "mlflow.entities.RunStatus.SCHEDULED",
   "mlflow.entities.RunStatus.to_string",
   "mlflow.entities.SourceType.JOB",
   "mlflow.entities.SourceType.LOCAL",
   "mlflow.entities.SourceType.NOTEBOOK",
   "mlflow.entities.SourceType.PROJECT",
   "mlflow.entities.SourceType.UNKNOWN",
   "mlflow.entities.SourceType.to_string"
  ],
  "type": "module"
 },
 "mlflow.store.tracking.dbmodels.models.SqlExperiment": {
  "lineno": 30,
  "symbols_in_volume": [
   "mlflow.entities.ViewType.ALL",
   "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
   "mlflow.entities.lifecycle_stage.LifecycleStage.view_type_to_stages",
   "mlflow.store.db.base_sql_model.Base",
   "sqlalchemy.CheckConstraint",
   "sqlalchemy.Column",
   "sqlalchemy.Integer",
   "sqlalchemy.PrimaryKeyConstraint",
   "sqlalchemy.String"
  ],
  "type": "class"
 },
 "mlflow.store.tracking.dbmodels.models.SqlExperiment.__repr__": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.models.SqlExperiment.to_mlflow_entity": {
  "lineno": 66,
  "symbols_in_volume": [
   "mlflow.entities.Experiment"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.models.SqlExperimentTag": {
  "lineno": 189,
  "symbols_in_volume": [
   "mlflow.store.db.base_sql_model.Base",
   "sqlalchemy.Column",
   "sqlalchemy.ForeignKey",
   "sqlalchemy.Integer",
   "sqlalchemy.PrimaryKeyConstraint",
   "sqlalchemy.String",
   "sqlalchemy.orm.backref",
   "sqlalchemy.orm.relationship"
  ],
  "type": "class"
 },
 "mlflow.store.tracking.dbmodels.models.SqlExperimentTag.__repr__": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.models.SqlExperimentTag.to_mlflow_entity": {
  "lineno": 220,
  "symbols_in_volume": [
   "mlflow.entities.ExperimentTag"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.models.SqlLatestMetric": {
  "lineno": 326,
  "symbols_in_volume": [
   "mlflow.store.db.base_sql_model.Base",
   "sqlalchemy.BigInteger",
   "sqlalchemy.Boolean",
   "sqlalchemy.Column",
   "sqlalchemy.ForeignKey",
   "sqlalchemy.PrimaryKeyConstraint",
   "sqlalchemy.String",
   "sqlalchemy.orm.backref",
   "sqlalchemy.orm.relationship",
   "sqlalchemy.types.Float",
   "time.time"
  ],
  "type": "class"
 },
 "mlflow.store.tracking.dbmodels.models.SqlLatestMetric.__repr__": {
  "lineno": 364,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.models.SqlLatestMetric.to_mlflow_entity": {
  "lineno": 368,
  "symbols_in_volume": [
   "mlflow.entities.Metric"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.models.SqlMetric": {
  "lineno": 271,
  "symbols_in_volume": [
   "mlflow.store.db.base_sql_model.Base",
   "sqlalchemy.BigInteger",
   "sqlalchemy.Boolean",
   "sqlalchemy.Column",
   "sqlalchemy.ForeignKey",
   "sqlalchemy.PrimaryKeyConstraint",
   "sqlalchemy.String",
   "sqlalchemy.orm.backref",
   "sqlalchemy.orm.relationship",
   "sqlalchemy.types.Float",
   "time.time"
  ],
  "type": "class"
 },
 "mlflow.store.tracking.dbmodels.models.SqlMetric.__repr__": {
  "lineno": 310,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.models.SqlMetric.to_mlflow_entity": {
  "lineno": 313,
  "symbols_in_volume": [
   "mlflow.entities.Metric"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.models.SqlParam": {
  "lineno": 381,
  "symbols_in_volume": [
   "mlflow.store.db.base_sql_model.Base",
   "sqlalchemy.Column",
   "sqlalchemy.ForeignKey",
   "sqlalchemy.PrimaryKeyConstraint",
   "sqlalchemy.String",
   "sqlalchemy.orm.backref",
   "sqlalchemy.orm.relationship"
  ],
  "type": "class"
 },
 "mlflow.store.tracking.dbmodels.models.SqlParam.__repr__": {
  "lineno": 406,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.models.SqlParam.to_mlflow_entity": {
  "lineno": 409,
  "symbols_in_volume": [
   "mlflow.entities.Param"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.models.SqlRun": {
  "lineno": 80,
  "symbols_in_volume": [
   "mlflow.entities.RunStatus.SCHEDULED",
   "mlflow.entities.RunStatus.to_string",
   "mlflow.entities.SourceType.LOCAL",
   "mlflow.entities.SourceType.to_string",
   "mlflow.entities.ViewType.ALL",
   "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
   "mlflow.entities.lifecycle_stage.LifecycleStage.view_type_to_stages",
   "mlflow.store.db.base_sql_model.Base",
   "sqlalchemy.BigInteger",
   "sqlalchemy.CheckConstraint",
   "sqlalchemy.Column",
   "sqlalchemy.ForeignKey",
   "sqlalchemy.Integer",
   "sqlalchemy.PrimaryKeyConstraint",
   "sqlalchemy.String",
   "sqlalchemy.orm.backref",
   "sqlalchemy.orm.relationship",
   "time.time"
  ],
  "type": "class"
 },
 "mlflow.store.tracking.dbmodels.models.SqlRun.get_attribute_name": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.models.SqlRun.to_mlflow_entity": {
  "lineno": 164,
  "symbols_in_volume": [
   "mlflow.entities.Run",
   "mlflow.entities.RunData",
   "mlflow.entities.RunInfo"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.models.SqlTag": {
  "lineno": 230,
  "symbols_in_volume": [
   "mlflow.store.db.base_sql_model.Base",
   "sqlalchemy.Column",
   "sqlalchemy.ForeignKey",
   "sqlalchemy.PrimaryKeyConstraint",
   "sqlalchemy.String",
   "sqlalchemy.orm.backref",
   "sqlalchemy.orm.relationship"
  ],
  "type": "class"
 },
 "mlflow.store.tracking.dbmodels.models.SqlTag.__repr__": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.tracking.dbmodels.models.SqlTag.to_mlflow_entity": {
  "lineno": 260,
  "symbols_in_volume": [
   "mlflow.entities.RunTag"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.store.tracking.file_store.FileStore": {
  "lineno": 84,
  "symbols_in_volume": [
   "mlflow.store.tracking.abstract_store.AbstractStore"
  ],
  "type": "class"
 },
 "mlflow.store.tracking.file_store.FileStore.__init__": {
  "lineno": 95,
  "symbols_in_volume": [
   "mlflow.entities.Experiment.DEFAULT_EXPERIMENT_NAME",
   "mlflow.utils.file_utils.exists",
   "mlflow.utils.file_utils.local_file_uri_to_path",
   "mlflow.utils.file_utils.mkdir",
   "mlflow.utils.file_utils.path_to_local_file_uri",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._check_root_dir": {
  "lineno": 113,
  "symbols_in_volume": [
   "mlflow.utils.file_utils.exists",
   "mlflow.utils.file_utils.is_directory"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._create_experiment_with_id": {
  "lineno": 206,
  "symbols_in_volume": [
   "mlflow.entities.Experiment",
   "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
   "mlflow.utils.file_utils.mkdir",
   "mlflow.utils.file_utils.write_yaml",
   "mlflow.utils.uri.append_to_uri_path"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._find_experiment_folder": {
  "lineno": 355,
  "symbols_in_volume": [
   "mlflow.utils.file_utils.get_parent_dir",
   "os.path.basename"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._find_run_root": {
  "lineno": 364,
  "symbols_in_volume": [
   "mlflow.utils.file_utils.find",
   "mlflow.utils.validation._validate_run_id",
   "os.path.abspath",
   "os.path.basename"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_active_experiments": {
  "lineno": 179,
  "symbols_in_volume": [
   "mlflow.utils.file_utils.list_subdirs"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_all_metrics": {
  "lineno": 508,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_all_params": {
  "lineno": 553,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_all_tags": {
  "lineno": 584,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_artifact_dir": {
  "lineno": 172,
  "symbols_in_volume": [
   "mlflow.utils.uri.append_to_uri_path",
   "mlflow.utils.validation._validate_run_id"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_deleted_experiments": {
  "lineno": 183,
  "symbols_in_volume": [
   "mlflow.utils.file_utils.list_subdirs"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_deleted_runs": {
  "lineno": 340,
  "symbols_in_volume": [
   "mlflow.entities.ViewType.DELETED_ONLY"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_experiment": {
  "lineno": 253,
  "symbols_in_volume": [
   "logging.warning",
   "mlflow.entities.ViewType.ALL",
   "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
   "mlflow.entities.lifecycle_stage.LifecycleStage.DELETED",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
   "mlflow.utils.file_utils.read_yaml",
   "mlflow.utils.validation._validate_experiment_id"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_experiment_files": {
  "lineno": 467,
  "symbols_in_volume": [
   "mlflow.utils.validation._validate_experiment_id"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_experiment_path": {
  "lineno": 122,
  "symbols_in_volume": [
   "mlflow.entities.ViewType.ACTIVE_ONLY",
   "mlflow.entities.ViewType.ALL",
   "mlflow.entities.ViewType.DELETED_ONLY",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
   "mlflow.utils.file_utils.find"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_experiment_tag_from_file": {
  "lineno": 560,
  "symbols_in_volume": [
   "mlflow.entities.ExperimentTag",
   "mlflow.utils.file_utils.read_file",
   "mlflow.utils.validation._validate_tag_name"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_experiment_tag_path": {
  "lineno": 158,
  "symbols_in_volume": [
   "mlflow.utils.validation._validate_experiment_id",
   "mlflow.utils.validation._validate_param_name",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_metric_from_file": {
  "lineno": 490,
  "symbols_in_volume": [
   "mlflow.utils.file_utils.read_file_lines",
   "mlflow.utils.validation._validate_metric_name"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_metric_from_line": {
  "lineno": 515,
  "symbols_in_volume": [
   "mlflow.entities.Metric",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INTERNAL_ERROR"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_metric_history": {
  "lineno": 533,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
   "mlflow.utils.file_utils.read_file_lines"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_metric_path": {
  "lineno": 144,
  "symbols_in_volume": [
   "mlflow.utils.validation._validate_metric_name",
   "mlflow.utils.validation._validate_run_id",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_param_from_file": {
  "lineno": 542,
  "symbols_in_volume": [
   "mlflow.entities.Param",
   "mlflow.utils.file_utils.read_file",
   "mlflow.utils.validation._validate_param_name"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_param_path": {
  "lineno": 151,
  "symbols_in_volume": [
   "mlflow.utils.validation._validate_param_name",
   "mlflow.utils.validation._validate_run_id",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_resource_files": {
  "lineno": 472,
  "symbols_in_volume": [
   "mlflow.utils.file_utils.find",
   "mlflow.utils.file_utils.relative_path_to_artifact_path",
   "os.path.join",
   "os.path.relpath",
   "os.walk",
   "sys.platform"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_run_dir": {
  "lineno": 137,
  "symbols_in_volume": [
   "mlflow.utils.validation._validate_run_id",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_run_files": {
  "lineno": 454,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_run_from_info": {
  "lineno": 429,
  "symbols_in_volume": [
   "mlflow.entities.Run",
   "mlflow.entities.RunData"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_run_info": {
  "lineno": 435,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_STATE",
   "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_run_info_from_dir": {
  "lineno": 449,
  "symbols_in_volume": [
   "mlflow.utils.file_utils.read_yaml"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_tag_from_file": {
  "lineno": 573,
  "symbols_in_volume": [
   "mlflow.entities.RunTag",
   "mlflow.utils.file_utils.read_file",
   "mlflow.utils.validation._validate_tag_name"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._get_tag_path": {
  "lineno": 166,
  "symbols_in_volume": [
   "mlflow.utils.validation._validate_run_id",
   "mlflow.utils.validation._validate_tag_name",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._hard_delete_run": {
  "lineno": 332,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._has_experiment": {
  "lineno": 250,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._list_run_infos": {
  "lineno": 591,
  "symbols_in_volume": [
   "logging.warning",
   "mlflow.entities.lifecycle_stage.LifecycleStage.matches_view_type",
   "mlflow.exceptions.MissingConfigException",
   "mlflow.utils.file_utils.list_all",
   "os.path.basename",
   "os.path.isdir",
   "os.path.normpath"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._log_run_metric": {
  "lineno": 645,
  "symbols_in_volume": [
   "mlflow.utils.file_utils.append_to",
   "mlflow.utils.file_utils.make_containing_dirs"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._log_run_param": {
  "lineno": 665,
  "symbols_in_volume": [
   "mlflow.utils.file_utils.make_containing_dirs",
   "mlflow.utils.file_utils.write_to",
   "os.path.exists"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._overwrite_run_info": {
  "lineno": 738,
  "symbols_in_volume": [
   "mlflow.utils.file_utils.write_yaml"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._search_runs": {
  "lineno": 622,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "mlflow.store.tracking.SEARCH_MAX_RESULTS_THRESHOLD",
   "mlflow.utils.search_utils.SearchUtils.filter",
   "mlflow.utils.search_utils.SearchUtils.paginate",
   "mlflow.utils.search_utils.SearchUtils.sort"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._set_run_tag": {
  "lineno": 717,
  "symbols_in_volume": [
   "mlflow.utils.file_utils.make_containing_dirs",
   "mlflow.utils.file_utils.write_to"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._validate_experiment_name": {
  "lineno": 219,
  "symbols_in_volume": [
   "mlflow.entities.lifecycle_stage.LifecycleStage.DELETED",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._validate_new_param_value": {
  "lineno": 675,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore._writeable_value": {
  "lineno": 650,
  "symbols_in_volume": [
   "mlflow.utils.string_utils.is_string_type"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.create_experiment": {
  "lineno": 237,
  "symbols_in_volume": [
   "mlflow.entities.ViewType.ALL"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.create_run": {
  "lineno": 383,
  "symbols_in_volume": [
   "mlflow.entities.RunInfo",
   "mlflow.entities.RunStatus.RUNNING",
   "mlflow.entities.RunStatus.to_string",
   "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_STATE",
   "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
   "mlflow.utils.file_utils.mkdir",
   "mlflow.utils.file_utils.write_yaml",
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.delete_experiment": {
  "lineno": 289,
  "symbols_in_volume": [
   "mlflow.entities.ViewType.ACTIVE_ONLY",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
   "mlflow.utils.file_utils.mv"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.delete_run": {
  "lineno": 323,
  "symbols_in_volume": [
   "mlflow.entities.lifecycle_stage.LifecycleStage.DELETED",
   "mlflow.entities.run_info.check_run_is_active",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_STATE"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.delete_tag": {
  "lineno": 723,
  "symbols_in_volume": [
   "mlflow.entities.run_info.check_run_is_active",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
   "mlflow.utils.file_utils.exists",
   "mlflow.utils.validation._validate_run_id",
   "os.remove"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.get_all_experiment_tags": {
  "lineno": 566,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.get_all_metrics": {
  "lineno": 503,
  "symbols_in_volume": [
   "mlflow.utils.validation._validate_run_id"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.get_all_params": {
  "lineno": 548,
  "symbols_in_volume": [
   "mlflow.utils.validation._validate_run_id"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.get_all_tags": {
  "lineno": 579,
  "symbols_in_volume": [
   "mlflow.utils.validation._validate_run_id"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.get_experiment": {
  "lineno": 274,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.get_metric_history": {
  "lineno": 527,
  "symbols_in_volume": [
   "mlflow.utils.validation._validate_metric_name",
   "mlflow.utils.validation._validate_run_id"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.get_run": {
  "lineno": 418,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_STATE",
   "mlflow.utils.validation._validate_run_id"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.list_experiments": {
  "lineno": 186,
  "symbols_in_volume": [
   "logging.warning",
   "mlflow.entities.ViewType.ACTIVE_ONLY",
   "mlflow.entities.ViewType.ALL",
   "mlflow.entities.ViewType.DELETED_ONLY",
   "mlflow.exceptions.MissingConfigException"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.log_batch": {
  "lineno": 743,
  "symbols_in_volume": [
   "mlflow.entities.run_info.check_run_is_active",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INTERNAL_ERROR",
   "mlflow.utils.validation._validate_batch_log_data",
   "mlflow.utils.validation._validate_batch_log_limits",
   "mlflow.utils.validation._validate_run_id"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.log_metric": {
  "lineno": 638,
  "symbols_in_volume": [
   "mlflow.entities.run_info.check_run_is_active",
   "mlflow.utils.validation._validate_metric_name",
   "mlflow.utils.validation._validate_run_id"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.log_param": {
  "lineno": 658,
  "symbols_in_volume": [
   "mlflow.entities.run_info.check_run_is_active",
   "mlflow.utils.validation._validate_param_name",
   "mlflow.utils.validation._validate_run_id"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.record_logged_model": {
  "lineno": 759,
  "symbols_in_volume": [
   "json.dumps",
   "json.loads",
   "mlflow.entities.RunTag",
   "mlflow.entities.run_info.check_run_is_active",
   "mlflow.exceptions.MlflowException",
   "mlflow.models.Model",
   "mlflow.protos.databricks_pb2.INTERNAL_ERROR",
   "mlflow.utils.mlflow_tags.MLFLOW_LOGGED_MODELS",
   "mlflow.utils.validation._validate_run_id",
   "os.path.exists"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.rename_experiment": {
  "lineno": 309,
  "symbols_in_volume": [
   "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
   "mlflow.utils.file_utils.write_yaml",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.restore_experiment": {
  "lineno": 296,
  "symbols_in_volume": [
   "mlflow.entities.ViewType.ACTIVE_ONLY",
   "mlflow.entities.ViewType.DELETED_ONLY",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS",
   "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
   "mlflow.utils.file_utils.mv"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.restore_run": {
  "lineno": 346,
  "symbols_in_volume": [
   "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
   "mlflow.entities.run_info.check_run_is_deleted",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_STATE"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.set_experiment_tag": {
  "lineno": 692,
  "symbols_in_volume": [
   "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "mlflow.utils.file_utils.make_containing_dirs",
   "mlflow.utils.file_utils.write_to",
   "mlflow.utils.validation._validate_tag_name"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.set_tag": {
  "lineno": 710,
  "symbols_in_volume": [
   "mlflow.entities.run_info.check_run_is_active",
   "mlflow.utils.validation._validate_run_id",
   "mlflow.utils.validation._validate_tag_name"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store.FileStore.update_run_info": {
  "lineno": 375,
  "symbols_in_volume": [
   "mlflow.entities.run_info.check_run_is_active",
   "mlflow.utils.validation._validate_run_id"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store._default_root_dir": {
  "lineno": 35,
  "symbols_in_volume": [
   "mlflow.store.tracking.DEFAULT_LOCAL_FILE_AND_ARTIFACT_PATH",
   "mlflow.utils.env.get_env",
   "os.path.abspath"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store._make_persisted_run_info_dict": {
  "lineno": 49,
  "symbols_in_volume": [
   "mlflow.entities.RunStatus.RUNNING",
   "mlflow.entities.RunStatus.from_string",
   "mlflow.entities.SourceType.LOCAL"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store._read_persisted_experiment_dict": {
  "lineno": 39,
  "symbols_in_volume": [
   "mlflow.entities.Experiment.from_dictionary"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.file_store._read_persisted_run_info_dict": {
  "lineno": 68,
  "symbols_in_volume": [
   "mlflow.entities.RunInfo.from_dictionary",
   "mlflow.entities.RunStatus.RUNNING",
   "mlflow.entities.RunStatus.to_string",
   "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.rest_store": {
  "lineno": null,
  "symbols_in_volume": [
   "mlflow.protos.service_pb2.MlflowService",
   "mlflow.utils.rest_utils.extract_api_info_for_service"
  ],
  "type": "module"
 },
 "mlflow.store.tracking.rest_store.DatabricksRestStore": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.store.tracking.rest_store.DatabricksRestStore.get_experiment_by_name": {
  "lineno": 258,
  "symbols_in_volume": [
   "mlflow.entities.Experiment.from_proto",
   "mlflow.entities.ViewType.ALL",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.ENDPOINT_NOT_FOUND",
   "mlflow.protos.databricks_pb2.ErrorCode.Name",
   "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
   "mlflow.protos.service_pb2.GetExperimentByName",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore": {
  "lineno": 16,
  "symbols_in_volume": [
   "mlflow.store.tracking.abstract_store.AbstractStore"
  ],
  "type": "class"
 },
 "mlflow.store.tracking.rest_store.RestStore.__init__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore._call_endpoint": {
  "lineno": 29,
  "symbols_in_volume": [
   "mlflow.utils.rest_utils.call_endpoint"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore._search_runs": {
  "lineno": 190,
  "symbols_in_volume": [
   "mlflow.entities.Run.from_proto",
   "mlflow.entities.ViewType.to_proto",
   "mlflow.protos.service_pb2.SearchRuns",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.create_experiment": {
  "lineno": 43,
  "symbols_in_volume": [
   "mlflow.protos.service_pb2.CreateExperiment",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.create_run": {
  "lineno": 102,
  "symbols_in_volume": [
   "mlflow.entities.Run.from_proto",
   "mlflow.protos.service_pb2.CreateRun",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.delete_experiment": {
  "lineno": 70,
  "symbols_in_volume": [
   "mlflow.protos.service_pb2.DeleteExperiment",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.delete_run": {
  "lineno": 208,
  "symbols_in_volume": [
   "mlflow.protos.service_pb2.DeleteRun",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.delete_tag": {
  "lineno": 167,
  "symbols_in_volume": [
   "mlflow.protos.service_pb2.DeleteTag",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.get_experiment": {
  "lineno": 57,
  "symbols_in_volume": [
   "mlflow.entities.Experiment.from_proto",
   "mlflow.protos.service_pb2.GetExperiment",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.get_experiment_by_name": {
  "lineno": 216,
  "symbols_in_volume": [
   "mlflow.entities.Experiment.from_proto",
   "mlflow.entities.ViewType.ALL",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.ErrorCode.Name",
   "mlflow.protos.databricks_pb2.REQUEST_LIMIT_EXCEEDED",
   "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
   "mlflow.protos.service_pb2.GetExperimentByName",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.get_metric_history": {
  "lineno": 176,
  "symbols_in_volume": [
   "mlflow.entities.Metric.from_proto",
   "mlflow.protos.service_pb2.GetMetricHistory",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.get_run": {
  "lineno": 83,
  "symbols_in_volume": [
   "mlflow.entities.Run.from_proto",
   "mlflow.protos.service_pb2.GetRun",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.list_experiments": {
  "lineno": 34,
  "symbols_in_volume": [
   "mlflow.entities.Experiment.from_proto",
   "mlflow.entities.ViewType.ACTIVE_ONLY",
   "mlflow.protos.service_pb2.ListExperiments",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.log_batch": {
  "lineno": 234,
  "symbols_in_volume": [
   "mlflow.protos.service_pb2.LogBatch",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.log_metric": {
  "lineno": 121,
  "symbols_in_volume": [
   "mlflow.protos.service_pb2.LogMetric",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.log_param": {
  "lineno": 134,
  "symbols_in_volume": [
   "mlflow.protos.service_pb2.LogParam",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.record_logged_model": {
  "lineno": 242,
  "symbols_in_volume": [
   "mlflow.protos.service_pb2.LogModel",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.rename_experiment": {
  "lineno": 78,
  "symbols_in_volume": [
   "mlflow.protos.service_pb2.UpdateExperiment",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.restore_experiment": {
  "lineno": 74,
  "symbols_in_volume": [
   "mlflow.protos.service_pb2.RestoreExperiment",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.restore_run": {
  "lineno": 212,
  "symbols_in_volume": [
   "mlflow.protos.service_pb2.RestoreRun",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.set_experiment_tag": {
  "lineno": 145,
  "symbols_in_volume": [
   "mlflow.protos.service_pb2.SetExperimentTag",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.set_tag": {
  "lineno": 156,
  "symbols_in_volume": [
   "mlflow.protos.service_pb2.SetTag",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.rest_store.RestStore.update_run_info": {
  "lineno": 95,
  "symbols_in_volume": [
   "mlflow.entities.RunInfo.from_proto",
   "mlflow.protos.service_pb2.UpdateRun",
   "mlflow.utils.proto_json_utils.message_to_json"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "sqlalchemy.orm.configure_mappers"
  ],
  "type": "module"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore": {
  "lineno": 43,
  "symbols_in_volume": [
   "mlflow.store.tracking.abstract_store.AbstractStore"
  ],
  "type": "class"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.__init__": {
  "lineno": 68,
  "symbols_in_volume": [
   "mlflow.store.db.base_sql_model.Base.metadata.bind",
   "mlflow.store.tracking.dbmodels.models.SqlExperiment.__tablename__",
   "mlflow.store.tracking.dbmodels.models.SqlExperimentTag.__tablename__",
   "mlflow.store.tracking.dbmodels.models.SqlLatestMetric.__tablename__",
   "mlflow.store.tracking.dbmodels.models.SqlMetric.__tablename__",
   "mlflow.store.tracking.dbmodels.models.SqlParam.__tablename__",
   "mlflow.store.tracking.dbmodels.models.SqlRun.__tablename__",
   "mlflow.store.tracking.dbmodels.models.SqlTag.__tablename__",
   "mlflow.utils.file_utils.local_file_uri_to_path",
   "mlflow.utils.file_utils.mkdir",
   "mlflow.utils.uri.extract_db_type_from_uri",
   "mlflow.utils.uri.is_local_uri",
   "sqlalchemy.inspect",
   "sqlalchemy.orm.sessionmaker"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._check_experiment_is_active": {
  "lineno": 386,
  "symbols_in_volume": [
   "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._check_run_is_active": {
  "lineno": 380,
  "symbols_in_volume": [
   "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._check_run_is_deleted": {
  "lineno": 393,
  "symbols_in_volume": [
   "mlflow.entities.lifecycle_stage.LifecycleStage.DELETED",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._create_default_experiment": {
  "lineno": 129,
  "symbols_in_volume": [
   "mlflow.entities.Experiment.DEFAULT_EXPERIMENT_NAME",
   "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
   "mlflow.store.tracking.dbmodels.models.SqlExperiment.__tablename__",
   "mlflow.store.tracking.dbmodels.models.SqlExperiment.artifact_location.name",
   "mlflow.store.tracking.dbmodels.models.SqlExperiment.experiment_id.name",
   "mlflow.store.tracking.dbmodels.models.SqlExperiment.lifecycle_stage.name",
   "mlflow.store.tracking.dbmodels.models.SqlExperiment.name.name"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._create_default_experiment.decorate": {
  "lineno": 146,
  "symbols_in_volume": [
   "mlflow.utils.string_utils.is_string_type"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._get_artifact_location": {
  "lineno": 186,
  "symbols_in_volume": [
   "mlflow.utils.uri.append_to_uri_path"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._get_deleted_runs": {
  "lineno": 451,
  "symbols_in_volume": [
   "mlflow.entities.lifecycle_stage.LifecycleStage.DELETED",
   "mlflow.store.tracking.dbmodels.models.SqlRun.lifecycle_stage",
   "mlflow.store.tracking.dbmodels.models.SqlRun.run_uuid"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._get_eager_experiment_query_options": {
  "lineno": 262,
  "symbols_in_volume": [
   "mlflow.store.tracking.dbmodels.models.SqlExperiment.tags",
   "sqlalchemy.orm.subqueryload"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._get_eager_run_query_options": {
  "lineno": 364,
  "symbols_in_volume": [
   "mlflow.store.tracking.dbmodels.models.SqlRun.latest_metrics",
   "mlflow.store.tracking.dbmodels.models.SqlRun.params",
   "mlflow.store.tracking.dbmodels.models.SqlRun.tags",
   "sqlalchemy.orm.subqueryload"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._get_experiment": {
  "lineno": 238,
  "symbols_in_volume": [
   "mlflow.entities.lifecycle_stage.LifecycleStage.view_type_to_stages",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
   "mlflow.store.tracking.dbmodels.models.SqlExperiment",
   "mlflow.store.tracking.dbmodels.models.SqlExperiment.experiment_id",
   "mlflow.store.tracking.dbmodels.models.SqlExperiment.lifecycle_stage.in_"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._get_or_create": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._get_run": {
  "lineno": 341,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_STATE",
   "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
   "mlflow.store.tracking.dbmodels.models.SqlRun",
   "mlflow.store.tracking.dbmodels.models.SqlRun.run_uuid"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._hard_delete_run": {
  "lineno": 442,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._list_experiments": {
  "lineno": 211,
  "symbols_in_volume": [
   "mlflow.entities.ViewType.ACTIVE_ONLY",
   "mlflow.entities.lifecycle_stage.LifecycleStage.view_type_to_stages",
   "mlflow.store.tracking.dbmodels.models.SqlExperiment",
   "mlflow.store.tracking.dbmodels.models.SqlExperiment.experiment_id.in_",
   "mlflow.store.tracking.dbmodels.models.SqlExperiment.lifecycle_stage.in_",
   "mlflow.store.tracking.dbmodels.models.SqlExperiment.name.in_"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._save_to_db": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._search_runs": {
  "lineno": 607,
  "symbols_in_volume": [
   "mlflow.entities.lifecycle_stage.LifecycleStage.view_type_to_stages",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "mlflow.store.db.db_types.SQLITE",
   "mlflow.store.tracking.SEARCH_MAX_RESULTS_THRESHOLD",
   "mlflow.store.tracking.dbmodels.models.SqlRun",
   "mlflow.store.tracking.dbmodels.models.SqlRun.experiment_id.in_",
   "mlflow.store.tracking.dbmodels.models.SqlRun.lifecycle_stage.in_",
   "mlflow.utils.search_utils.SearchUtils.parse_search_filter",
   "mlflow.utils.search_utils.SearchUtils.parse_start_offset_from_page_token"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._search_runs.compute_next_token": {
  "lineno": 610,
  "symbols_in_volume": [
   "mlflow.utils.search_utils.SearchUtils.create_page_token"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._set_zero_value_insertion_for_autoincrement_column": {
  "lineno": 112,
  "symbols_in_volume": [
   "mlflow.store.db.db_types.MSSQL",
   "mlflow.store.db.db_types.MYSQL"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._try_get_run_tag": {
  "lineno": 411,
  "symbols_in_volume": [
   "mlflow.store.tracking.dbmodels.models.SqlTag",
   "mlflow.store.tracking.dbmodels.models.SqlTag.key",
   "mlflow.store.tracking.dbmodels.models.SqlTag.run_uuid"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._unset_zero_value_insertion_for_autoincrement_column": {
  "lineno": 123,
  "symbols_in_volume": [
   "mlflow.store.db.db_types.MSSQL",
   "mlflow.store.db.db_types.MYSQL"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._update_latest_metric_if_necessary": {
  "lineno": 482,
  "symbols_in_volume": [
   "mlflow.store.tracking.dbmodels.models.SqlLatestMetric",
   "mlflow.store.tracking.dbmodels.models.SqlLatestMetric.key",
   "mlflow.store.tracking.dbmodels.models.SqlLatestMetric.run_uuid"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore._update_latest_metric_if_necessary._compare_metrics": {
  "lineno": 484,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.create_experiment": {
  "lineno": 189,
  "symbols_in_volume": [
   "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS",
   "mlflow.store.tracking.dbmodels.models.SqlExperiment",
   "sqlalchemy.exc.IntegrityError"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.create_run": {
  "lineno": 317,
  "symbols_in_volume": [
   "mlflow.entities.RunStatus.RUNNING",
   "mlflow.entities.RunStatus.to_string",
   "mlflow.entities.SourceType.UNKNOWN",
   "mlflow.entities.SourceType.to_string",
   "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
   "mlflow.store.tracking.dbmodels.models.SqlRun",
   "mlflow.store.tracking.dbmodels.models.SqlTag",
   "mlflow.utils.uri.append_to_uri_path",
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.delete_experiment": {
  "lineno": 296,
  "symbols_in_volume": [
   "mlflow.entities.ViewType.ACTIVE_ONLY",
   "mlflow.entities.lifecycle_stage.LifecycleStage.DELETED"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.delete_run": {
  "lineno": 435,
  "symbols_in_volume": [
   "mlflow.entities.lifecycle_stage.LifecycleStage.DELETED"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.delete_tag": {
  "lineno": 584,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_STATE",
   "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
   "mlflow.store.tracking.dbmodels.models.SqlTag"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.get_experiment": {
  "lineno": 276,
  "symbols_in_volume": [
   "mlflow.entities.ViewType.ALL"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.get_experiment_by_name": {
  "lineno": 281,
  "symbols_in_volume": [
   "mlflow.entities.ViewType.ALL",
   "mlflow.entities.lifecycle_stage.LifecycleStage.view_type_to_stages",
   "mlflow.store.tracking.dbmodels.models.SqlExperiment",
   "mlflow.store.tracking.dbmodels.models.SqlExperiment.lifecycle_stage.in_",
   "mlflow.store.tracking.dbmodels.models.SqlExperiment.name"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.get_metric_history": {
  "lineno": 509,
  "symbols_in_volume": [
   "mlflow.store.tracking.dbmodels.models.SqlMetric"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.get_run": {
  "lineno": 419,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.list_experiments": {
  "lineno": 233,
  "symbols_in_volume": [
   "mlflow.entities.ViewType.ACTIVE_ONLY"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.log_batch": {
  "lineno": 661,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INTERNAL_ERROR",
   "mlflow.utils.validation._validate_batch_log_data",
   "mlflow.utils.validation._validate_batch_log_limits",
   "mlflow.utils.validation._validate_run_id"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.log_metric": {
  "lineno": 459,
  "symbols_in_volume": [
   "math.isinf",
   "math.isnan",
   "mlflow.store.tracking.dbmodels.models.SqlMetric",
   "mlflow.utils.validation._validate_metric"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.log_param": {
  "lineno": 514,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "mlflow.store.tracking.dbmodels.models.SqlParam",
   "sqlalchemy.exc.IntegrityError"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.record_logged_model": {
  "lineno": 680,
  "symbols_in_volume": [
   "json.dumps",
   "json.loads",
   "mlflow.models.Model",
   "mlflow.store.tracking.dbmodels.models.SqlTag",
   "mlflow.utils.mlflow_tags.MLFLOW_LOGGED_MODELS",
   "mlflow.utils.validation._validate_tag"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.rename_experiment": {
  "lineno": 308,
  "symbols_in_volume": [
   "mlflow.entities.ViewType.ALL",
   "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_STATE"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.restore_experiment": {
  "lineno": 302,
  "symbols_in_volume": [
   "mlflow.entities.ViewType.DELETED_ONLY",
   "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.restore_run": {
  "lineno": 428,
  "symbols_in_volume": [
   "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.set_experiment_tag": {
  "lineno": 554,
  "symbols_in_volume": [
   "mlflow.entities.ViewType.ALL",
   "mlflow.store.tracking.dbmodels.models.SqlExperimentTag",
   "mlflow.utils.validation._validate_experiment_tag"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.set_tag": {
  "lineno": 571,
  "symbols_in_volume": [
   "mlflow.store.tracking.dbmodels.models.SqlTag",
   "mlflow.utils.validation._validate_tag"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore.update_run_info": {
  "lineno": 399,
  "symbols_in_volume": [
   "mlflow.entities.RunStatus.to_string"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store._get_attributes_filtering_clauses": {
  "lineno": 697,
  "symbols_in_volume": [
   "mlflow.store.tracking.dbmodels.models.SqlRun",
   "mlflow.store.tracking.dbmodels.models.SqlRun.get_attribute_name",
   "mlflow.utils.search_utils.SearchUtils.CASE_INSENSITIVE_STRING_COMPARISON_OPERATORS",
   "mlflow.utils.search_utils.SearchUtils.filter_ops",
   "mlflow.utils.search_utils.SearchUtils.filter_ops.get",
   "mlflow.utils.search_utils.SearchUtils.get_sql_filter_ops",
   "mlflow.utils.search_utils.SearchUtils.is_attribute"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store._get_orderby_clauses": {
  "lineno": 767,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "mlflow.store.tracking.dbmodels.models.SqlLatestMetric",
   "mlflow.store.tracking.dbmodels.models.SqlParam",
   "mlflow.store.tracking.dbmodels.models.SqlRun",
   "mlflow.store.tracking.dbmodels.models.SqlRun.get_attribute_name",
   "mlflow.store.tracking.dbmodels.models.SqlRun.run_uuid",
   "mlflow.store.tracking.dbmodels.models.SqlRun.start_time.desc",
   "mlflow.store.tracking.dbmodels.models.SqlTag",
   "mlflow.utils.search_utils.SearchUtils.is_attribute",
   "mlflow.utils.search_utils.SearchUtils.is_metric",
   "mlflow.utils.search_utils.SearchUtils.is_param",
   "mlflow.utils.search_utils.SearchUtils.is_tag",
   "mlflow.utils.search_utils.SearchUtils.parse_order_by",
   "sqlalchemy.sql.expression.case"
  ],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store._get_sqlalchemy_filter_clauses": {
  "lineno": 756,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.store.tracking.sqlalchemy_store._to_sqlalchemy_filtering_statement": {
  "lineno": 717,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "mlflow.store.tracking.dbmodels.models.SqlLatestMetric",
   "mlflow.store.tracking.dbmodels.models.SqlParam",
   "mlflow.store.tracking.dbmodels.models.SqlTag",
   "mlflow.utils.search_utils.SearchUtils.CASE_INSENSITIVE_STRING_COMPARISON_OPERATORS",
   "mlflow.utils.search_utils.SearchUtils.filter_ops",
   "mlflow.utils.search_utils.SearchUtils.filter_ops.get",
   "mlflow.utils.search_utils.SearchUtils.get_sql_filter_ops",
   "mlflow.utils.search_utils.SearchUtils.is_attribute",
   "mlflow.utils.search_utils.SearchUtils.is_metric",
   "mlflow.utils.search_utils.SearchUtils.is_param",
   "mlflow.utils.search_utils.SearchUtils.is_tag"
  ],
  "type": "function"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.env": {
  "lineno": null,
  "symbols_in_volume": [
   "alembic.context.config",
   "alembic.context.is_offline_mode",
   "logging.config.fileConfig",
   "mlflow.store.db.base_sql_model.Base.metadata"
  ],
  "type": "module"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.env.run_migrations_offline": {
  "lineno": 31,
  "symbols_in_volume": [
   "alembic.context.begin_transaction",
   "alembic.context.configure",
   "alembic.context.run_migrations"
  ],
  "type": "function"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.env.run_migrations_online": {
  "lineno": 53,
  "symbols_in_volume": [
   "alembic.context.begin_transaction",
   "alembic.context.configure",
   "alembic.context.run_migrations",
   "sqlalchemy.engine_from_config",
   "sqlalchemy.pool.NullPool"
  ],
  "type": "function"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names": {
  "lineno": null,
  "symbols_in_volume": [
   "sqlalchemy.ext.declarative.declarative_base"
  ],
  "type": "module"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.SqlExperiment": {
  "lineno": 47,
  "symbols_in_volume": [
   "sqlalchemy.CheckConstraint",
   "sqlalchemy.Column",
   "sqlalchemy.Integer",
   "sqlalchemy.PrimaryKeyConstraint",
   "sqlalchemy.String"
  ],
  "type": "class"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.SqlExperiment.__repr__": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.SqlRun": {
  "lineno": 84,
  "symbols_in_volume": [
   "sqlalchemy.BigInteger",
   "sqlalchemy.CheckConstraint",
   "sqlalchemy.Column",
   "sqlalchemy.ForeignKey",
   "sqlalchemy.Integer",
   "sqlalchemy.PrimaryKeyConstraint",
   "sqlalchemy.String",
   "sqlalchemy.orm.backref",
   "sqlalchemy.orm.relationship",
   "time.time"
  ],
  "type": "class"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.downgrade": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.upgrade": {
  "lineno": 159,
  "symbols_in_volume": [
   "alembic.op.batch_alter_table",
   "alembic.op.get_bind",
   "sqlalchemy.column"
  ],
  "type": "function"
 },
 "mlflow.tensorflow": {
  "lineno": null,
  "symbols_in_volume": [
   "atexit.register",
   "collections.namedtuple",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "mlflow.tensorflow._TF2Wrapper": {
  "lineno": 423,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.tensorflow._TF2Wrapper.__init__": {
  "lineno": 428,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tensorflow._TF2Wrapper.predict": {
  "lineno": 434,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.DataFrame.from_dict",
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "mlflow.tensorflow._TFWrapper": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.tensorflow._TFWrapper.__init__": {
  "lineno": 388,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tensorflow._TFWrapper.predict": {
  "lineno": 410,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "mlflow.tensorflow.__MLflowTfKeras2Callback": {
  "lineno": 516,
  "symbols_in_volume": [
   "tensorflow.keras.callbacks.Callback"
  ],
  "type": "class"
 },
 "mlflow.tensorflow.__MLflowTfKeras2Callback.__enter__": {
  "lineno": 524,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tensorflow.__MLflowTfKeras2Callback.__exit__": {
  "lineno": 527,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tensorflow.__MLflowTfKeras2Callback.__init__": {
  "lineno": 521,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tensorflow.__MLflowTfKeras2Callback.on_epoch_end": {
  "lineno": 547,
  "symbols_in_volume": [
   "mlflow.log_metrics",
   "mlflow.utils.autologging_utils.try_mlflow_log"
  ],
  "type": "function"
 },
 "mlflow.tensorflow.__MLflowTfKeras2Callback.on_train_begin": {
  "lineno": 530,
  "symbols_in_volume": [
   "mlflow.log_artifact",
   "mlflow.log_param",
   "mlflow.utils.autologging_utils.try_mlflow_log",
   "os.path.join",
   "shutil.rmtree",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "mlflow.tensorflow.__MLflowTfKeras2Callback.on_train_end": {
  "lineno": 551,
  "symbols_in_volume": [
   "mlflow.keras.log_model",
   "mlflow.utils.autologging_utils.try_mlflow_log"
  ],
  "type": "function"
 },
 "mlflow.tensorflow.__MLflowTfKerasCallback": {
  "lineno": 458,
  "symbols_in_volume": [
   "tensorflow.keras.callbacks.Callback"
  ],
  "type": "class"
 },
 "mlflow.tensorflow.__MLflowTfKerasCallback.__enter__": {
  "lineno": 466,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tensorflow.__MLflowTfKerasCallback.__exit__": {
  "lineno": 469,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tensorflow.__MLflowTfKerasCallback.__init__": {
  "lineno": 463,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tensorflow.__MLflowTfKerasCallback.on_epoch_end": {
  "lineno": 509,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tensorflow.__MLflowTfKerasCallback.on_train_begin": {
  "lineno": 472,
  "symbols_in_volume": [
   "mlflow.log_artifact",
   "mlflow.log_param",
   "mlflow.utils.autologging_utils.try_mlflow_log",
   "os.path.join",
   "shutil.rmtree",
   "tempfile.mkdtemp",
   "tensorflow.keras.backend.eval"
  ],
  "type": "function"
 },
 "mlflow.tensorflow.__MLflowTfKerasCallback.on_train_end": {
  "lineno": 512,
  "symbols_in_volume": [
   "mlflow.keras.log_model",
   "mlflow.utils.autologging_utils.try_mlflow_log"
  ],
  "type": "function"
 },
 "mlflow.tensorflow._add_to_queue": {
  "lineno": 585,
  "symbols_in_volume": [
   "mlflow.entities.Metric",
   "time"
  ],
  "type": "function"
 },
 "mlflow.tensorflow._assoc_list_to_map": {
  "lineno": 559,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tensorflow._flush_queue": {
  "lineno": 569,
  "symbols_in_volume": [
   "mlflow.tracking.MlflowClient",
   "mlflow.utils.autologging_utils.try_mlflow_log"
  ],
  "type": "function"
 },
 "mlflow.tensorflow._get_and_parse_flavor_configuration": {
  "lineno": 337,
  "symbols_in_volume": [
   "mlflow.utils.model_utils._get_flavor_configuration",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.tensorflow._get_tensorboard_callback": {
  "lineno": 615,
  "symbols_in_volume": [
   "tensorflow.keras.callbacks.TensorBoard"
  ],
  "type": "function"
 },
 "mlflow.tensorflow._load_pyfunc": {
  "lineno": 357,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "tensorflow.Graph",
   "tensorflow.Session",
   "tensorflow.__version__",
   "tensorflow.saved_model.load"
  ],
  "type": "function"
 },
 "mlflow.tensorflow._load_tensorflow_saved_model": {
  "lineno": 294,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "mlflow.exceptions.MlflowException",
   "tensorflow.__version__",
   "tensorflow.saved_model.load",
   "tensorflow.saved_model.loader.load"
  ],
  "type": "function"
 },
 "mlflow.tensorflow._log_artifacts_with_warning": {
  "lineno": 555,
  "symbols_in_volume": [
   "mlflow.log_artifacts",
   "mlflow.utils.autologging_utils.try_mlflow_log"
  ],
  "type": "function"
 },
 "mlflow.tensorflow._log_event": {
  "lineno": 596,
  "symbols_in_volume": [
   "mlflow.active_run",
   "mlflow.start_run",
   "mlflow.utils.autologging_utils.try_mlflow_log",
   "time.time"
  ],
  "type": "function"
 },
 "mlflow.tensorflow._setup_callbacks": {
  "lineno": 629,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "tempfile.mkdtemp",
   "tensorflow.__version__",
   "tensorflow.keras.callbacks.TensorBoard"
  ],
  "type": "function"
 },
 "mlflow.tensorflow._validate_saved_model": {
  "lineno": 204,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "tensorflow.Graph",
   "tensorflow.Session",
   "tensorflow.__version__"
  ],
  "type": "function"
 },
 "mlflow.tensorflow.autolog": {
  "lineno": 648,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "gorilla.Patch",
   "gorilla.Settings",
   "gorilla.apply",
   "mlflow.utils.experimental",
   "tensorflow.__version__",
   "tensorflow.estimator.Estimator",
   "tensorflow.keras.Model",
   "tensorflow.python.summary.writer.event_file_writer.EventFileWriter",
   "tensorflow.python.summary.writer.event_file_writer_v2.EventFileWriterV2",
   "tensorflow.python.summary.writer.writer.FileWriter",
   "warnings.warn"
  ],
  "type": "function"
 },
 "mlflow.tensorflow.autolog._early_stop_check": {
  "lineno": 758,
  "symbols_in_volume": [
   "tensorflow.keras.callbacks.EarlyStopping"
  ],
  "type": "function"
 },
 "mlflow.tensorflow.autolog._get_early_stop_callback_attrs": {
  "lineno": 776,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tensorflow.autolog._log_early_stop_callback_metrics": {
  "lineno": 782,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "mlflow.log_metric",
   "mlflow.log_metrics",
   "mlflow.utils.autologging_utils.try_mlflow_log",
   "tensorflow.__version__"
  ],
  "type": "function"
 },
 "mlflow.tensorflow.autolog._log_early_stop_callback_params": {
  "lineno": 764,
  "symbols_in_volume": [
   "mlflow.log_params",
   "mlflow.utils.autologging_utils.try_mlflow_log"
  ],
  "type": "function"
 },
 "mlflow.tensorflow.autolog._manage_active_run": {
  "lineno": 682,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "mlflow.active_run",
   "mlflow.end_run",
   "mlflow.start_run",
   "mlflow.utils.autologging_utils.try_mlflow_log"
  ],
  "type": "function"
 },
 "mlflow.tensorflow.autolog.add_event": {
  "lineno": 870,
  "symbols_in_volume": [
   "gorilla.get_original_attribute",
   "gorilla.patch",
   "tensorflow.python.summary.writer.event_file_writer.EventFileWriter"
  ],
  "type": "function"
 },
 "mlflow.tensorflow.autolog.add_summary": {
  "lineno": 876,
  "symbols_in_volume": [
   "gorilla.get_original_attribute",
   "gorilla.patch",
   "tensorflow.python.summary.writer.writer.FileWriter"
  ],
  "type": "function"
 },
 "mlflow.tensorflow.autolog.export_saved_model": {
  "lineno": 712,
  "symbols_in_volume": [
   "gorilla.get_original_attribute",
   "gorilla.patch",
   "mlflow.active_run",
   "mlflow.end_run",
   "mlflow.start_run",
   "mlflow.utils.autologging_utils.try_mlflow_log",
   "tensorflow.estimator.Estimator",
   "tensorflow.python.saved_model.tag_constants.SERVING"
  ],
  "type": "function"
 },
 "mlflow.tensorflow.autolog.export_savedmodel": {
  "lineno": 735,
  "symbols_in_volume": [
   "gorilla.get_original_attribute",
   "gorilla.patch",
   "mlflow.active_run",
   "mlflow.end_run",
   "mlflow.start_run",
   "mlflow.utils.autologging_utils.try_mlflow_log",
   "tensorflow.estimator.Estimator",
   "tensorflow.python.saved_model.tag_constants.SERVING"
  ],
  "type": "function"
 },
 "mlflow.tensorflow.autolog.fit": {
  "lineno": 807,
  "symbols_in_volume": [
   "gorilla.get_original_attribute",
   "gorilla.patch",
   "mlflow.utils.autologging_utils.log_fn_args_as_params",
   "shutil.rmtree",
   "tensorflow.keras.Model"
  ],
  "type": "function"
 },
 "mlflow.tensorflow.autolog.fit_generator": {
  "lineno": 843,
  "symbols_in_volume": [
   "gorilla.get_original_attribute",
   "gorilla.patch",
   "mlflow.utils.autologging_utils.log_fn_args_as_params",
   "shutil.rmtree",
   "tensorflow.keras.Model"
  ],
  "type": "function"
 },
 "mlflow.tensorflow.autolog.train": {
  "lineno": 693,
  "symbols_in_volume": [
   "gorilla.get_original_attribute",
   "gorilla.patch",
   "mlflow.log_param",
   "mlflow.utils.autologging_utils.try_mlflow_log",
   "tensorflow.estimator.Estimator"
  ],
  "type": "function"
 },
 "mlflow.tensorflow.get_default_conda_env": {
  "lineno": 62,
  "symbols_in_volume": [
   "mlflow.utils.environment._mlflow_conda_env",
   "tensorflow.__version__"
  ],
  "type": "function"
 },
 "mlflow.tensorflow.load_model": {
  "lineno": 223,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "mlflow.exceptions.MlflowException",
   "mlflow.tracking.artifact_utils._download_artifact_from_uri",
   "tensorflow.__version__",
   "tensorflow.get_default_session",
   "warnings.warn"
  ],
  "type": "function"
 },
 "mlflow.tensorflow.log_model": {
  "lineno": 75,
  "symbols_in_volume": [
   "mlflow.models.Model.log",
   "mlflow.tensorflow",
   "mlflow.utils.keyword_only"
  ],
  "type": "function"
 },
 "mlflow.tensorflow.save_model": {
  "lineno": 133,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.models.Model",
   "mlflow.protos.databricks_pb2.DIRECTORY_NOT_EMPTY",
   "mlflow.pyfunc.add_to_model",
   "mlflow.utils.file_utils._copy_file_or_tree",
   "mlflow.utils.keyword_only",
   "os.makedirs",
   "os.path.exists",
   "os.path.join",
   "shutil.move",
   "yaml.safe_dump",
   "yaml.safe_load"
  ],
  "type": "function"
 },
 "mlflow.tracking": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.tracking._model_registry": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.tracking._model_registry.client": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "mlflow.tracking._model_registry.client.ModelRegistryClient": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.tracking._model_registry.client.ModelRegistryClient.__init__": {
  "lineno": 21,
  "symbols_in_volume": [
   "mlflow.tracking._model_registry.utils._get_store"
  ],
  "type": "function"
 },
 "mlflow.tracking._model_registry.client.ModelRegistryClient.create_model_version": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking._model_registry.client.ModelRegistryClient.create_registered_model": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking._model_registry.client.ModelRegistryClient.delete_model_version": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking._model_registry.client.ModelRegistryClient.delete_registered_model": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking._model_registry.client.ModelRegistryClient.get_latest_versions": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking._model_registry.client.ModelRegistryClient.get_model_version": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking._model_registry.client.ModelRegistryClient.get_model_version_download_uri": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking._model_registry.client.ModelRegistryClient.get_model_version_stages": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking._model_registry.client.ModelRegistryClient.get_registered_model": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking._model_registry.client.ModelRegistryClient.list_registered_models": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking._model_registry.client.ModelRegistryClient.rename_registered_model": {
  "lineno": 54,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException"
  ],
  "type": "function"
 },
 "mlflow.tracking._model_registry.client.ModelRegistryClient.search_model_versions": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking._model_registry.client.ModelRegistryClient.transition_model_version_stage": {
  "lineno": 127,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException"
  ],
  "type": "function"
 },
 "mlflow.tracking._model_registry.client.ModelRegistryClient.update_model_version": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking._model_registry.client.ModelRegistryClient.update_registered_model": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking._model_registry.fluent": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.tracking._model_registry.fluent.register_model": {
  "lineno": 9,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.ErrorCode.Name",
   "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS",
   "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository.get_underlying_uri",
   "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository.is_runs_uri",
   "mlflow.store.artifact.runs_artifact_repo.RunsArtifactRepository.parse_runs_uri",
   "mlflow.tracking.MlflowClient",
   "mlflow.utils.experimental",
   "mlflow.utils.logging_utils.eprint"
  ],
  "type": "function"
 },
 "mlflow.tracking._model_registry.registry": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.tracking._model_registry.registry.ModelRegistryStoreRegistry": {
  "lineno": 4,
  "symbols_in_volume": [
   "mlflow.tracking.registry.StoreRegistry"
  ],
  "type": "class"
 },
 "mlflow.tracking._model_registry.registry.ModelRegistryStoreRegistry.__init__": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking._model_registry.registry.ModelRegistryStoreRegistry.get_store": {
  "lineno": 22,
  "symbols_in_volume": [
   "mlflow.tracking._tracking_service.utils.get_tracking_uri"
  ],
  "type": "function"
 },
 "mlflow.tracking._model_registry.utils": {
  "lineno": null,
  "symbols_in_volume": [
   "mlflow.store.db.db_types.DATABASE_ENGINES",
   "mlflow.tracking._model_registry.registry.ModelRegistryStoreRegistry"
  ],
  "type": "module"
 },
 "mlflow.tracking._model_registry.utils._get_databricks_rest_store": {
  "lineno": 47,
  "symbols_in_volume": [
   "mlflow.store.model_registry.rest_store.RestStore",
   "mlflow.utils.databricks_utils.get_databricks_host_creds",
   "mlflow.utils.uri.get_db_profile_from_uri"
  ],
  "type": "function"
 },
 "mlflow.tracking._model_registry.utils._get_rest_store": {
  "lineno": 35,
  "symbols_in_volume": [
   "mlflow.store.model_registry.rest_store.RestStore"
  ],
  "type": "function"
 },
 "mlflow.tracking._model_registry.utils._get_rest_store.get_default_host_creds": {
  "lineno": 36,
  "symbols_in_volume": [
   "mlflow.tracking._tracking_service.utils._TRACKING_INSECURE_TLS_ENV_VAR",
   "mlflow.tracking._tracking_service.utils._TRACKING_PASSWORD_ENV_VAR",
   "mlflow.tracking._tracking_service.utils._TRACKING_TOKEN_ENV_VAR",
   "mlflow.tracking._tracking_service.utils._TRACKING_USERNAME_ENV_VAR",
   "mlflow.utils.rest_utils.MlflowHostCreds",
   "os.environ.get"
  ],
  "type": "function"
 },
 "mlflow.tracking._model_registry.utils._get_sqlalchemy_store": {
  "lineno": 30,
  "symbols_in_volume": [
   "mlflow.store.model_registry.sqlalchemy_store.SqlAlchemyStore"
  ],
  "type": "function"
 },
 "mlflow.tracking._model_registry.utils._get_store": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking._tracking_service": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.tracking._tracking_service.client": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.__init__": {
  "lineno": 27,
  "symbols_in_volume": [
   "mlflow.tracking._tracking_service.utils._get_store"
  ],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient._record_logged_model": {
  "lineno": 236,
  "symbols_in_volume": [
   "mlflow.models.Model"
  ],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.create_experiment": {
  "lineno": 116,
  "symbols_in_volume": [
   "mlflow.utils.validation._validate_experiment_artifact_location",
   "mlflow.utils.validation._validate_experiment_name"
  ],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.create_run": {
  "lineno": 62,
  "symbols_in_volume": [
   "mlflow.entities.RunTag",
   "mlflow.utils.mlflow_tags.MLFLOW_USER",
   "six.iteritems",
   "time.time"
  ],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.delete_experiment": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.delete_run": {
  "lineno": 314,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.delete_tag": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.download_artifacts": {
  "lineno": 284,
  "symbols_in_volume": [
   "mlflow.store.artifact.artifact_repository_registry.get_artifact_repository"
  ],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.get_experiment": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.get_experiment_by_name": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.get_metric_history": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.get_run": {
  "lineno": 34,
  "symbols_in_volume": [
   "mlflow.utils.validation._validate_run_id"
  ],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.list_artifacts": {
  "lineno": 270,
  "symbols_in_volume": [
   "mlflow.store.artifact.artifact_repository_registry.get_artifact_repository"
  ],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.list_experiments": {
  "lineno": 95,
  "symbols_in_volume": [
   "mlflow.entities.ViewType.ACTIVE_ONLY"
  ],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.list_run_infos": {
  "lineno": 91,
  "symbols_in_volume": [
   "mlflow.entities.ViewType.ACTIVE_ONLY"
  ],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.log_artifact": {
  "lineno": 242,
  "symbols_in_volume": [
   "mlflow.store.artifact.artifact_repository_registry.get_artifact_repository",
   "os.path.basename",
   "os.path.isdir",
   "os.path.join",
   "os.path.normpath"
  ],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.log_artifacts": {
  "lineno": 259,
  "symbols_in_volume": [
   "mlflow.store.artifact.artifact_repository_registry.get_artifact_repository"
  ],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.log_batch": {
  "lineno": 214,
  "symbols_in_volume": [
   "mlflow.utils.validation._validate_metric",
   "mlflow.utils.validation._validate_param_name",
   "mlflow.utils.validation._validate_tag_name"
  ],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.log_metric": {
  "lineno": 155,
  "symbols_in_volume": [
   "mlflow.entities.Metric",
   "mlflow.utils.validation._validate_metric",
   "time.time"
  ],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.log_param": {
  "lineno": 173,
  "symbols_in_volume": [
   "mlflow.entities.Param",
   "mlflow.utils.validation._validate_param_name"
  ],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.rename_experiment": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.restore_experiment": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.restore_run": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.search_runs": {
  "lineno": 326,
  "symbols_in_volume": [
   "mlflow.entities.ViewType.ACTIVE_ONLY",
   "mlflow.store.tracking.SEARCH_MAX_RESULTS_DEFAULT",
   "mlflow.utils.string_utils.is_string_type"
  ],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.set_experiment_tag": {
  "lineno": 181,
  "symbols_in_volume": [
   "mlflow.entities.ExperimentTag",
   "mlflow.utils.validation._validate_tag_name"
  ],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.set_tag": {
  "lineno": 193,
  "symbols_in_volume": [
   "mlflow.entities.RunTag",
   "mlflow.utils.validation._validate_tag_name"
  ],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.client.TrackingServiceClient.set_terminated": {
  "lineno": 303,
  "symbols_in_volume": [
   "mlflow.entities.RunStatus.FINISHED",
   "mlflow.entities.RunStatus.from_string",
   "mlflow.entities.RunStatus.to_string",
   "time.time"
  ],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.registry": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.tracking._tracking_service.registry.TrackingStoreRegistry": {
  "lineno": 4,
  "symbols_in_volume": [
   "mlflow.tracking.registry.StoreRegistry"
  ],
  "type": "class"
 },
 "mlflow.tracking._tracking_service.registry.TrackingStoreRegistry.__init__": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.registry.TrackingStoreRegistry.get_store": {
  "lineno": 22,
  "symbols_in_volume": [
   "mlflow.tracking._tracking_service.utils.get_tracking_uri"
  ],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.utils": {
  "lineno": null,
  "symbols_in_volume": [
   "mlflow.store.db.db_types.DATABASE_ENGINES",
   "mlflow.tracking._tracking_service.registry.TrackingStoreRegistry"
  ],
  "type": "module"
 },
 "mlflow.tracking._tracking_service.utils._get_databricks_rest_store": {
  "lineno": 94,
  "symbols_in_volume": [
   "mlflow.store.tracking.rest_store.DatabricksRestStore",
   "mlflow.utils.databricks_utils.get_databricks_host_creds",
   "mlflow.utils.uri.get_db_profile_from_uri"
  ],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.utils._get_file_store": {
  "lineno": 70,
  "symbols_in_volume": [
   "mlflow.store.tracking.file_store.FileStore"
  ],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.utils._get_git_url_if_present": {
  "lineno": 118,
  "symbols_in_volume": [
   "git.GitCommandNotFound",
   "git.InvalidGitRepositoryError",
   "git.NoSuchPathError",
   "git.Repo",
   "sys.stderr"
  ],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.utils._get_rest_store": {
  "lineno": 81,
  "symbols_in_volume": [
   "mlflow.store.tracking.rest_store.RestStore"
  ],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.utils._get_rest_store.get_default_host_creds": {
  "lineno": 82,
  "symbols_in_volume": [
   "mlflow.utils.rest_utils.MlflowHostCreds",
   "os.environ.get"
  ],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.utils._get_sqlalchemy_store": {
  "lineno": 74,
  "symbols_in_volume": [
   "mlflow.store.tracking.DEFAULT_LOCAL_FILE_AND_ARTIFACT_PATH",
   "mlflow.store.tracking.sqlalchemy_store.SqlAlchemyStore"
  ],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.utils._get_store": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.utils.get_tracking_uri": {
  "lineno": 54,
  "symbols_in_volume": [
   "mlflow.store.tracking.DEFAULT_LOCAL_FILE_AND_ARTIFACT_PATH",
   "mlflow.utils.env.get_env",
   "mlflow.utils.file_utils.path_to_local_file_uri",
   "os.path.abspath"
  ],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.utils.is_tracking_uri_set": {
  "lineno": 28,
  "symbols_in_volume": [
   "mlflow.utils.env.get_env"
  ],
  "type": "function"
 },
 "mlflow.tracking._tracking_service.utils.set_tracking_uri": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.artifact_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.tracking.artifact_utils._download_artifact_from_uri": {
  "lineno": 52,
  "symbols_in_volume": [
   "mlflow.store.artifact.artifact_repository_registry.get_artifact_repository",
   "mlflow.store.artifact.models_artifact_repo.ModelsArtifactRepository.is_models_uri",
   "posixpath.basename",
   "posixpath.dirname",
   "six.moves.urllib.parse.urlparse",
   "six.moves.urllib.parse.urlunparse"
  ],
  "type": "function"
 },
 "mlflow.tracking.artifact_utils.get_artifact_uri": {
  "lineno": 16,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "mlflow.tracking._tracking_service.utils._get_store",
   "mlflow.utils.uri.append_to_uri_path",
   "six.moves.urllib.parse.urlparse"
  ],
  "type": "function"
 },
 "mlflow.tracking.client": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "mlflow.tracking.client.MlflowClient": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.tracking.client.MlflowClient.__init__": {
  "lineno": 30,
  "symbols_in_volume": [
   "mlflow.tracking._tracking_service.client.TrackingServiceClient",
   "mlflow.tracking._tracking_service.utils.get_tracking_uri"
  ],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient._get_registry_client": {
  "lineno": 48,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.FEATURE_DISABLED",
   "mlflow.tracking._model_registry.client.ModelRegistryClient",
   "mlflow.tracking.registry.UnsupportedModelRegistryStoreURIException"
  ],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient._record_logged_model": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.create_experiment": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.create_model_version": {
  "lineno": 452,
  "symbols_in_volume": [
   "mlflow.utils.experimental"
  ],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.create_registered_model": {
  "lineno": 352,
  "symbols_in_volume": [
   "mlflow.utils.experimental"
  ],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.create_run": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.delete_experiment": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.delete_model_version": {
  "lineno": 508,
  "symbols_in_volume": [
   "mlflow.utils.experimental"
  ],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.delete_registered_model": {
  "lineno": 406,
  "symbols_in_volume": [
   "mlflow.utils.experimental"
  ],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.delete_run": {
  "lineno": 313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.delete_tag": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.download_artifacts": {
  "lineno": 289,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.get_experiment": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.get_experiment_by_name": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.get_latest_versions": {
  "lineno": 437,
  "symbols_in_volume": [
   "mlflow.utils.experimental"
  ],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.get_metric_history": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.get_model_version": {
  "lineno": 527,
  "symbols_in_volume": [
   "mlflow.utils.experimental"
  ],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.get_model_version_details": {
  "lineno": 518,
  "symbols_in_volume": [
   "mlflow.utils.deprecated"
  ],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.get_model_version_download_uri": {
  "lineno": 536,
  "symbols_in_volume": [
   "mlflow.utils.experimental"
  ],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.get_model_version_stages": {
  "lineno": 559,
  "symbols_in_volume": [
   "mlflow.entities.model_registry.model_version_stages.ALL_STAGES",
   "mlflow.utils.experimental"
  ],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.get_registered_model": {
  "lineno": 429,
  "symbols_in_volume": [
   "mlflow.utils.experimental"
  ],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.get_registered_model_details": {
  "lineno": 425,
  "symbols_in_volume": [
   "mlflow.utils.deprecated"
  ],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.get_run": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.list_artifacts": {
  "lineno": 278,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.list_experiments": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.list_registered_models": {
  "lineno": 416,
  "symbols_in_volume": [
   "mlflow.utils.experimental"
  ],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.list_run_infos": {
  "lineno": 125,
  "symbols_in_volume": [
   "mlflow.entities.ViewType.ACTIVE_ONLY"
  ],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.log_artifact": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.log_artifacts": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.log_batch": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.log_metric": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.log_param": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.rename_experiment": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.rename_registered_model": {
  "lineno": 363,
  "symbols_in_volume": [
   "mlflow.utils.experimental"
  ],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.restore_experiment": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.restore_run": {
  "lineno": 319,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.search_model_versions": {
  "lineno": 547,
  "symbols_in_volume": [
   "mlflow.utils.experimental"
  ],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.search_runs": {
  "lineno": 325,
  "symbols_in_volume": [
   "mlflow.entities.ViewType.ACTIVE_ONLY",
   "mlflow.store.tracking.SEARCH_MAX_RESULTS_DEFAULT"
  ],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.set_experiment_tag": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.set_tag": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.set_terminated": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.transition_model_version_stage": {
  "lineno": 495,
  "symbols_in_volume": [
   "mlflow.utils.experimental"
  ],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.update_model_version": {
  "lineno": 465,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.utils.experimental"
  ],
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.update_registered_model": {
  "lineno": 375,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.utils.experimental"
  ],
  "type": "function"
 },
 "mlflow.tracking.context": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.tracking.context.abstract_context": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.tracking.context.abstract_context.RunContextProvider": {
  "lineno": 4,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "mlflow.tracking.context.abstract_context.RunContextProvider.in_context": {
  "lineno": 17,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.tracking.context.abstract_context.RunContextProvider.tags": {
  "lineno": 26,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.tracking.context.databricks_job_context": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.tracking.context.databricks_job_context.DatabricksJobRunContext": {
  "lineno": 14,
  "symbols_in_volume": [
   "mlflow.tracking.context.abstract_context.RunContextProvider"
  ],
  "type": "class"
 },
 "mlflow.tracking.context.databricks_job_context.DatabricksJobRunContext.in_context": {
  "lineno": 15,
  "symbols_in_volume": [
   "mlflow.utils.databricks_utils.is_in_databricks_job"
  ],
  "type": "function"
 },
 "mlflow.tracking.context.databricks_job_context.DatabricksJobRunContext.tags": {
  "lineno": 18,
  "symbols_in_volume": [
   "mlflow.entities.SourceType.JOB",
   "mlflow.entities.SourceType.to_string",
   "mlflow.utils.databricks_utils.get_job_id",
   "mlflow.utils.databricks_utils.get_job_run_id",
   "mlflow.utils.databricks_utils.get_job_type",
   "mlflow.utils.databricks_utils.get_webapp_url",
   "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_JOB_ID",
   "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_JOB_RUN_ID",
   "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_JOB_TYPE",
   "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_WEBAPP_URL",
   "mlflow.utils.mlflow_tags.MLFLOW_SOURCE_NAME",
   "mlflow.utils.mlflow_tags.MLFLOW_SOURCE_TYPE"
  ],
  "type": "function"
 },
 "mlflow.tracking.context.databricks_notebook_context": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.tracking.context.databricks_notebook_context.DatabricksNotebookRunContext": {
  "lineno": 13,
  "symbols_in_volume": [
   "mlflow.tracking.context.abstract_context.RunContextProvider"
  ],
  "type": "class"
 },
 "mlflow.tracking.context.databricks_notebook_context.DatabricksNotebookRunContext.in_context": {
  "lineno": 14,
  "symbols_in_volume": [
   "mlflow.utils.databricks_utils.is_in_databricks_notebook"
  ],
  "type": "function"
 },
 "mlflow.tracking.context.databricks_notebook_context.DatabricksNotebookRunContext.tags": {
  "lineno": 17,
  "symbols_in_volume": [
   "mlflow.entities.SourceType.NOTEBOOK",
   "mlflow.entities.SourceType.to_string",
   "mlflow.utils.databricks_utils.get_notebook_id",
   "mlflow.utils.databricks_utils.get_notebook_path",
   "mlflow.utils.databricks_utils.get_webapp_url",
   "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_NOTEBOOK_ID",
   "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_NOTEBOOK_PATH",
   "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_WEBAPP_URL",
   "mlflow.utils.mlflow_tags.MLFLOW_SOURCE_NAME",
   "mlflow.utils.mlflow_tags.MLFLOW_SOURCE_TYPE"
  ],
  "type": "function"
 },
 "mlflow.tracking.context.default_context": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.tracking.context.default_context.DefaultRunContext": {
  "lineno": 41,
  "symbols_in_volume": [
   "mlflow.tracking.context.abstract_context.RunContextProvider"
  ],
  "type": "class"
 },
 "mlflow.tracking.context.default_context.DefaultRunContext.in_context": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.context.default_context.DefaultRunContext.tags": {
  "lineno": 45,
  "symbols_in_volume": [
   "mlflow.entities.SourceType.to_string",
   "mlflow.utils.mlflow_tags.MLFLOW_SOURCE_NAME",
   "mlflow.utils.mlflow_tags.MLFLOW_SOURCE_TYPE",
   "mlflow.utils.mlflow_tags.MLFLOW_USER"
  ],
  "type": "function"
 },
 "mlflow.tracking.context.default_context._get_main_file": {
  "lineno": 24,
  "symbols_in_volume": [
   "sys.argv"
  ],
  "type": "function"
 },
 "mlflow.tracking.context.default_context._get_source_name": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.context.default_context._get_source_type": {
  "lineno": 37,
  "symbols_in_volume": [
   "mlflow.entities.SourceType.LOCAL"
  ],
  "type": "function"
 },
 "mlflow.tracking.context.default_context._get_user": {
  "lineno": 16,
  "symbols_in_volume": [
   "getpass.getuser"
  ],
  "type": "function"
 },
 "mlflow.tracking.context.git_context": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "mlflow.tracking.context.git_context.GitRunContext": {
  "lineno": 36,
  "symbols_in_volume": [
   "mlflow.tracking.context.abstract_context.RunContextProvider"
  ],
  "type": "class"
 },
 "mlflow.tracking.context.git_context.GitRunContext.__init__": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.context.git_context.GitRunContext._source_version": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.context.git_context.GitRunContext.in_context": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.context.git_context.GitRunContext.tags": {
  "lineno": 50,
  "symbols_in_volume": [
   "mlflow.utils.mlflow_tags.MLFLOW_GIT_COMMIT"
  ],
  "type": "function"
 },
 "mlflow.tracking.context.git_context._get_git_commit": {
  "lineno": 11,
  "symbols_in_volume": [
   "git.GitCommandNotFound",
   "git.InvalidGitRepositoryError",
   "git.NoSuchPathError",
   "git.Repo",
   "os.path.dirname",
   "os.path.isfile"
  ],
  "type": "function"
 },
 "mlflow.tracking.context.git_context._get_source_version": {
  "lineno": 29,
  "symbols_in_volume": [
   "mlflow.tracking.context.default_context._get_main_file"
  ],
  "type": "function"
 },
 "mlflow.tracking.context.registry": {
  "lineno": null,
  "symbols_in_volume": [
   "mlflow.tracking.context.databricks_job_context.DatabricksJobRunContext",
   "mlflow.tracking.context.databricks_notebook_context.DatabricksNotebookRunContext",
   "mlflow.tracking.context.default_context.DefaultRunContext",
   "mlflow.tracking.context.git_context.GitRunContext"
  ],
  "type": "module"
 },
 "mlflow.tracking.context.registry.RunContextProviderRegistry": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.tracking.context.registry.RunContextProviderRegistry.__init__": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.context.registry.RunContextProviderRegistry.__iter__": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.context.registry.RunContextProviderRegistry.register": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.context.registry.RunContextProviderRegistry.register_entrypoints": {
  "lineno": 28,
  "symbols_in_volume": [
   "entrypoints.get_group_all",
   "warnings.warn"
  ],
  "type": "function"
 },
 "mlflow.tracking.context.registry.resolve_tags": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.fluent": {
  "lineno": null,
  "symbols_in_volume": [
   "atexit.register",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "mlflow.tracking.fluent.ActiveRun": {
  "lineno": 61,
  "symbols_in_volume": [
   "mlflow.entities.Run"
  ],
  "type": "class"
 },
 "mlflow.tracking.fluent.ActiveRun.__enter__": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.fluent.ActiveRun.__exit__": {
  "lineno": 70,
  "symbols_in_volume": [
   "mlflow.entities.RunStatus.FAILED",
   "mlflow.entities.RunStatus.FINISHED",
   "mlflow.entities.RunStatus.to_string"
  ],
  "type": "function"
 },
 "mlflow.tracking.fluent.ActiveRun.__init__": {
  "lineno": 64,
  "symbols_in_volume": [
   "mlflow.entities.Run.__init__"
  ],
  "type": "function"
 },
 "mlflow.tracking.fluent._get_experiment_id": {
  "lineno": 522,
  "symbols_in_volume": [
   "mlflow.utils.databricks_utils.get_notebook_id",
   "mlflow.utils.databricks_utils.is_in_databricks_notebook"
  ],
  "type": "function"
 },
 "mlflow.tracking.fluent._get_experiment_id_from_env": {
  "lineno": 514,
  "symbols_in_volume": [
   "mlflow.tracking.client.MlflowClient",
   "mlflow.utils.env.get_env"
  ],
  "type": "function"
 },
 "mlflow.tracking.fluent._get_or_start_run": {
  "lineno": 508,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.fluent._get_paginated_runs": {
  "lineno": 488,
  "symbols_in_volume": [
   "mlflow.tracking.client.MlflowClient"
  ],
  "type": "function"
 },
 "mlflow.tracking.fluent._record_logged_model": {
  "lineno": 326,
  "symbols_in_volume": [
   "mlflow.tracking.client.MlflowClient"
  ],
  "type": "function"
 },
 "mlflow.tracking.fluent.active_run": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.fluent.create_experiment": {
  "lineno": 351,
  "symbols_in_volume": [
   "mlflow.tracking.client.MlflowClient"
  ],
  "type": "function"
 },
 "mlflow.tracking.fluent.delete_experiment": {
  "lineno": 363,
  "symbols_in_volume": [
   "mlflow.tracking.client.MlflowClient"
  ],
  "type": "function"
 },
 "mlflow.tracking.fluent.delete_run": {
  "lineno": 372,
  "symbols_in_volume": [
   "mlflow.tracking.client.MlflowClient"
  ],
  "type": "function"
 },
 "mlflow.tracking.fluent.delete_tag": {
  "lineno": 229,
  "symbols_in_volume": [
   "mlflow.tracking.client.MlflowClient"
  ],
  "type": "function"
 },
 "mlflow.tracking.fluent.end_run": {
  "lineno": 160,
  "symbols_in_volume": [
   "mlflow.entities.RunStatus.FINISHED",
   "mlflow.entities.RunStatus.to_string",
   "mlflow.tracking.client.MlflowClient",
   "mlflow.utils.env.unset_variable"
  ],
  "type": "function"
 },
 "mlflow.tracking.fluent.get_artifact_uri": {
  "lineno": 381,
  "symbols_in_volume": [
   "mlflow.tracking.artifact_utils.get_artifact_uri"
  ],
  "type": "function"
 },
 "mlflow.tracking.fluent.get_experiment": {
  "lineno": 331,
  "symbols_in_volume": [
   "mlflow.tracking.client.MlflowClient"
  ],
  "type": "function"
 },
 "mlflow.tracking.fluent.get_experiment_by_name": {
  "lineno": 341,
  "symbols_in_volume": [
   "mlflow.tracking.client.MlflowClient"
  ],
  "type": "function"
 },
 "mlflow.tracking.fluent.get_run": {
  "lineno": 188,
  "symbols_in_volume": [
   "mlflow.tracking.client.MlflowClient"
  ],
  "type": "function"
 },
 "mlflow.tracking.fluent.log_artifact": {
  "lineno": 302,
  "symbols_in_volume": [
   "mlflow.tracking.client.MlflowClient"
  ],
  "type": "function"
 },
 "mlflow.tracking.fluent.log_artifacts": {
  "lineno": 314,
  "symbols_in_volume": [
   "mlflow.tracking.client.MlflowClient"
  ],
  "type": "function"
 },
 "mlflow.tracking.fluent.log_metric": {
  "lineno": 240,
  "symbols_in_volume": [
   "mlflow.tracking.client.MlflowClient",
   "time.time"
  ],
  "type": "function"
 },
 "mlflow.tracking.fluent.log_metrics": {
  "lineno": 255,
  "symbols_in_volume": [
   "mlflow.entities.Metric",
   "mlflow.tracking.client.MlflowClient",
   "time.time"
  ],
  "type": "function"
 },
 "mlflow.tracking.fluent.log_param": {
  "lineno": 205,
  "symbols_in_volume": [
   "mlflow.tracking.client.MlflowClient"
  ],
  "type": "function"
 },
 "mlflow.tracking.fluent.log_params": {
  "lineno": 274,
  "symbols_in_volume": [
   "mlflow.entities.Param",
   "mlflow.tracking.client.MlflowClient"
  ],
  "type": "function"
 },
 "mlflow.tracking.fluent.search_runs": {
  "lineno": 404,
  "symbols_in_volume": [
   "mlflow.entities.ViewType.ACTIVE_ONLY",
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "mlflow.tracking.fluent.set_experiment": {
  "lineno": 39,
  "symbols_in_volume": [
   "mlflow.entities.lifecycle_stage.LifecycleStage.DELETED",
   "mlflow.exceptions.MlflowException",
   "mlflow.tracking.client.MlflowClient"
  ],
  "type": "function"
 },
 "mlflow.tracking.fluent.set_tag": {
  "lineno": 217,
  "symbols_in_volume": [
   "mlflow.tracking.client.MlflowClient"
  ],
  "type": "function"
 },
 "mlflow.tracking.fluent.set_tags": {
  "lineno": 288,
  "symbols_in_volume": [
   "mlflow.entities.RunTag",
   "mlflow.tracking.client.MlflowClient"
  ],
  "type": "function"
 },
 "mlflow.tracking.fluent.start_run": {
  "lineno": 76,
  "symbols_in_volume": [
   "mlflow.entities.lifecycle_stage.LifecycleStage.DELETED",
   "mlflow.exceptions.MlflowException",
   "mlflow.tracking.client.MlflowClient",
   "mlflow.tracking.context.registry.resolve_tags",
   "mlflow.utils.mlflow_tags.MLFLOW_PARENT_RUN_ID",
   "mlflow.utils.mlflow_tags.MLFLOW_RUN_NAME",
   "mlflow.utils.validation._validate_run_id",
   "os.environ"
  ],
  "type": "function"
 },
 "mlflow.tracking.registry": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.tracking.registry.StoreRegistry": {
  "lineno": 22,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "mlflow.tracking.registry.StoreRegistry.__init__": {
  "lineno": 39,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "mlflow.tracking.registry.StoreRegistry.get_store_builder": {
  "lineno": 60,
  "symbols_in_volume": [
   "mlflow.utils.uri.get_uri_scheme"
  ],
  "type": "function"
 },
 "mlflow.tracking.registry.StoreRegistry.register": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.tracking.registry.StoreRegistry.register_entrypoints": {
  "lineno": 47,
  "symbols_in_volume": [
   "entrypoints.get_group_all",
   "warnings.warn"
  ],
  "type": "function"
 },
 "mlflow.tracking.registry.UnsupportedModelRegistryStoreURIException": {
  "lineno": 10,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException"
  ],
  "type": "class"
 },
 "mlflow.tracking.registry.UnsupportedModelRegistryStoreURIException.__init__": {
  "lineno": 12,
  "symbols_in_volume": [
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  ],
  "type": "function"
 },
 "mlflow.utils": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info.major",
   "sys.version_info.micro",
   "sys.version_info.minor"
  ],
  "type": "module"
 },
 "mlflow.utils.annotations": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.utils.annotations.deprecated": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.annotations.deprecated.deprecated_decorator": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.annotations.deprecated.deprecated_decorator.deprecated_func": {
  "lineno": 37,
  "symbols_in_volume": [
   "functools.wraps",
   "warnings.warn"
  ],
  "type": "function"
 },
 "mlflow.utils.annotations.experimental": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.annotations.keyword_only": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.annotations.keyword_only.wrapper": {
  "lineno": 54,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "mlflow.utils.autologging_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.utils.autologging_utils.get_unspecified_default_args": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.autologging_utils.log_fn_args_as_params": {
  "lineno": 49,
  "symbols_in_volume": [
   "inspect.getargspec",
   "mlflow.log_param",
   "mlflow.log_params"
  ],
  "type": "function"
 },
 "mlflow.utils.autologging_utils.try_mlflow_log": {
  "lineno": 6,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "mlflow.utils.cli_args": {
  "lineno": null,
  "symbols_in_volume": [
   "click.option"
  ],
  "type": "module"
 },
 "mlflow.utils.databricks_utils": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "mlflow.utils.databricks_utils._NoDbutilsError": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.utils.databricks_utils._fail_malformed_databricks_auth": {
  "lineno": 124,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException"
  ],
  "type": "function"
 },
 "mlflow.utils.databricks_utils._get_context_tag": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.databricks_utils._get_dbutils": {
  "lineno": 13,
  "symbols_in_volume": [
   "IPython.get_ipython"
  ],
  "type": "function"
 },
 "mlflow.utils.databricks_utils._get_extra_context": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.databricks_utils._get_java_dbutils": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.databricks_utils._get_property_from_spark_context": {
  "lineno": 47,
  "symbols_in_volume": [
   "pyspark.TaskContext.get"
  ],
  "type": "function"
 },
 "mlflow.utils.databricks_utils.get_databricks_host_creds": {
  "lineno": 130,
  "symbols_in_volume": [
   "databricks_cli.configure.provider",
   "databricks_cli.configure.provider.ProfileConfigProvider",
   "databricks_cli.configure.provider.get_config",
   "databricks_cli.configure.provider.get_config_for_profile",
   "mlflow.utils.rest_utils.MlflowHostCreds"
  ],
  "type": "function"
 },
 "mlflow.utils.databricks_utils.get_job_id": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.databricks_utils.get_job_run_id": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.databricks_utils.get_job_type": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.databricks_utils.get_notebook_id": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.databricks_utils.get_notebook_path": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.databricks_utils.get_webapp_url": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.databricks_utils.is_dbfs_fuse_available": {
  "lineno": 73,
  "symbols_in_volume": [
   "os.devnull",
   "subprocess.call"
  ],
  "type": "function"
 },
 "mlflow.utils.databricks_utils.is_in_databricks_job": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.databricks_utils.is_in_databricks_notebook": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.env": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.utils.env.get_env": {
  "lineno": 4,
  "symbols_in_volume": [
   "os.environ.get"
  ],
  "type": "function"
 },
 "mlflow.utils.env.unset_variable": {
  "lineno": 8,
  "symbols_in_volume": [
   "os.environ"
  ],
  "type": "function"
 },
 "mlflow.utils.environment": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.utils.environment._mlflow_conda_env": {
  "lineno": 12,
  "symbols_in_volume": [
   "mlflow.utils.PYTHON_VERSION",
   "yaml.safe_dump",
   "yaml.safe_load"
  ],
  "type": "function"
 },
 "mlflow.utils.file_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.utils.file_utils.TempDir": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.utils.file_utils.TempDir.__enter__": {
  "lineno": 182,
  "symbols_in_volume": [
   "os.chdir",
   "os.getcwd",
   "os.path.abspath",
   "os.path.exists",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "mlflow.utils.file_utils.TempDir.__exit__": {
  "lineno": 190,
  "symbols_in_volume": [
   "os.chdir",
   "os.getcwd",
   "os.path.exists",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "mlflow.utils.file_utils.TempDir.__init__": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.file_utils.TempDir.path": {
  "lineno": 200,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.utils.file_utils._copy_file_or_tree": {
  "lineno": 331,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.abspath",
   "os.path.basename",
   "os.path.dirname",
   "os.path.exists",
   "os.path.isfile",
   "os.path.join",
   "shutil.copy",
   "shutil.copytree"
  ],
  "type": "function"
 },
 "mlflow.utils.file_utils._copy_project": {
  "lineno": 294,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.isfile",
   "os.path.join",
   "shutil.copytree"
  ],
  "type": "function"
 },
 "mlflow.utils.file_utils._copy_project._docker_ignore": {
  "lineno": 306,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.utils.file_utils._copy_project._docker_ignore.ignore": {
  "lineno": 313,
  "symbols_in_volume": [
   "fnmatch.filter"
  ],
  "type": "function"
 },
 "mlflow.utils.file_utils.append_to": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.file_utils.exists": {
  "lineno": 35,
  "symbols_in_volume": [
   "os.path.exists"
  ],
  "type": "function"
 },
 "mlflow.utils.file_utils.find": {
  "lineno": 81,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.utils.file_utils.get_file_info": {
  "lineno": 232,
  "symbols_in_volume": [
   "mlflow.entities.FileInfo",
   "os.path.getsize"
  ],
  "type": "function"
 },
 "mlflow.utils.file_utils.get_local_path_or_none": {
  "lineno": 390,
  "symbols_in_volume": [
   "six.moves.urllib.parse.urlparse"
  ],
  "type": "function"
 },
 "mlflow.utils.file_utils.get_parent_dir": {
  "lineno": 349,
  "symbols_in_volume": [
   "os.pardir",
   "os.path.abspath",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.utils.file_utils.get_relative_path": {
  "lineno": 246,
  "symbols_in_volume": [
   "os.path.commonprefix",
   "os.path.relpath"
  ],
  "type": "function"
 },
 "mlflow.utils.file_utils.is_directory": {
  "lineno": 27,
  "symbols_in_volume": [
   "os.path.isdir"
  ],
  "type": "function"
 },
 "mlflow.utils.file_utils.is_file": {
  "lineno": 31,
  "symbols_in_volume": [
   "os.path.isfile"
  ],
  "type": "function"
 },
 "mlflow.utils.file_utils.list_all": {
  "lineno": 39,
  "symbols_in_volume": [
   "os.listdir",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.utils.file_utils.list_files": {
  "lineno": 68,
  "symbols_in_volume": [
   "os.path.isfile"
  ],
  "type": "function"
 },
 "mlflow.utils.file_utils.list_subdirs": {
  "lineno": 55,
  "symbols_in_volume": [
   "os.path.isdir"
  ],
  "type": "function"
 },
 "mlflow.utils.file_utils.local_file_uri_to_path": {
  "lineno": 381,
  "symbols_in_volume": [
   "six.moves.urllib.parse.urlparse",
   "six.moves.urllib.request.url2pathname"
  ],
  "type": "function"
 },
 "mlflow.utils.file_utils.make_containing_dirs": {
  "lineno": 114,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.dirname",
   "os.path.exists"
  ],
  "type": "function"
 },
 "mlflow.utils.file_utils.make_tarfile": {
  "lineno": 275,
  "symbols_in_volume": [
   "gzip.GzipFile",
   "os.remove",
   "tarfile.open",
   "tempfile.mktemp"
  ],
  "type": "function"
 },
 "mlflow.utils.file_utils.make_tarfile._filter_timestamps": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.file_utils.mkdir": {
  "lineno": 96,
  "symbols_in_volume": [
   "errno.EEXIST",
   "os.makedirs",
   "os.path.isdir",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.utils.file_utils.mv": {
  "lineno": 261,
  "symbols_in_volume": [
   "shutil.move"
  ],
  "type": "function"
 },
 "mlflow.utils.file_utils.path_to_local_file_uri": {
  "lineno": 361,
  "symbols_in_volume": [
   "posixpath.abspath",
   "six.moves.urllib.request.pathname2url"
  ],
  "type": "function"
 },
 "mlflow.utils.file_utils.path_to_local_sqlite_uri": {
  "lineno": 372,
  "symbols_in_volume": [
   "os.path.abspath",
   "posixpath.abspath",
   "six.moves.urllib.request.pathname2url",
   "sys.platform"
  ],
  "type": "function"
 },
 "mlflow.utils.file_utils.read_file": {
  "lineno": 218,
  "symbols_in_volume": [
   "codecs.open",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.utils.file_utils.read_file_lines": {
  "lineno": 204,
  "symbols_in_volume": [
   "codecs.open",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.utils.file_utils.read_yaml": {
  "lineno": 152,
  "symbols_in_volume": [
   "codecs.open",
   "mlflow.exceptions.MissingConfigException",
   "os.path.join",
   "yaml.SafeLoader",
   "yaml.load"
  ],
  "type": "function"
 },
 "mlflow.utils.file_utils.relative_path_to_artifact_path": {
  "lineno": 353,
  "symbols_in_volume": [
   "os.path",
   "os.path.abspath",
   "posixpath",
   "six.moves.urllib.parse.unquote",
   "six.moves.urllib.request.pathname2url"
  ],
  "type": "function"
 },
 "mlflow.utils.file_utils.write_to": {
  "lineno": 265,
  "symbols_in_volume": [
   "codecs.open"
  ],
  "type": "function"
 },
 "mlflow.utils.file_utils.write_yaml": {
  "lineno": 124,
  "symbols_in_volume": [
   "codecs.open",
   "mlflow.exceptions.MissingConfigException",
   "os.path.join",
   "yaml.SafeDumper",
   "yaml.dump"
  ],
  "type": "function"
 },
 "mlflow.utils.get_major_minor_py_version": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.get_unique_resource_id": {
  "lineno": 14,
  "symbols_in_volume": [
   "base64.b64encode",
   "sys.version_info",
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "mlflow.utils.logging_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.utils.logging_utils._configure_mlflow_loggers": {
  "lineno": 14,
  "symbols_in_volume": [
   "logging.config.dictConfig",
   "sys.stderr"
  ],
  "type": "function"
 },
 "mlflow.utils.logging_utils.eprint": {
  "lineno": 42,
  "symbols_in_volume": [
   "sys.stderr"
  ],
  "type": "function"
 },
 "mlflow.utils.mlflow_tags": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.utils.model_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.utils.model_utils._get_flavor_configuration": {
  "lineno": 10,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.models.Model.load",
   "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
   "os.path.exists",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.utils.model_utils._get_flavor_configuration_from_uri": {
  "lineno": 37,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.models.Model.load",
   "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
   "mlflow.tracking.artifact_utils._download_artifact_from_uri",
   "mlflow.utils.uri.append_to_uri_path"
  ],
  "type": "function"
 },
 "mlflow.utils.process": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.utils.process.ShellCommandException": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.utils.process.exec_cmd": {
  "lineno": 9,
  "symbols_in_volume": [
   "os.environ.copy",
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "mlflow.utils.proto_json_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.utils.proto_json_utils._stringify_all_experiment_ids": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.proto_json_utils.message_to_json": {
  "lineno": 4,
  "symbols_in_volume": [
   "google.protobuf.json_format.MessageToJson"
  ],
  "type": "function"
 },
 "mlflow.utils.proto_json_utils.parse_dict": {
  "lineno": 37,
  "symbols_in_volume": [
   "google.protobuf.json_format.ParseDict"
  ],
  "type": "function"
 },
 "mlflow.utils.rest_utils": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "mlflow.__version__"
  ],
  "type": "module"
 },
 "mlflow.utils.rest_utils.MlflowHostCreds": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.utils.rest_utils.MlflowHostCreds.__init__": {
  "lineno": 157,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException"
  ],
  "type": "function"
 },
 "mlflow.utils.rest_utils._can_parse_as_json": {
  "lineno": 83,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "mlflow.utils.rest_utils._get_path": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.rest_utils.call_endpoint": {
  "lineno": 127,
  "symbols_in_volume": [
   "json.loads",
   "mlflow.utils.proto_json_utils.parse_dict"
  ],
  "type": "function"
 },
 "mlflow.utils.rest_utils.extract_api_info_for_service": {
  "lineno": 115,
  "symbols_in_volume": [
   "mlflow.protos.databricks_pb2.rpc.endpoints"
  ],
  "type": "function"
 },
 "mlflow.utils.rest_utils.http_request": {
  "lineno": 23,
  "symbols_in_volume": [
   "base64.standard_b64encode",
   "mlflow.exceptions.MlflowException",
   "mlflow.utils.string_utils.strip_suffix",
   "time.sleep"
  ],
  "type": "function"
 },
 "mlflow.utils.rest_utils.http_request.request_with_ratelimit_retries": {
  "lineno": 50,
  "symbols_in_volume": [
   "requests.request",
   "time.sleep"
  ],
  "type": "function"
 },
 "mlflow.utils.rest_utils.http_request_safe": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.rest_utils.verify_rest_response": {
  "lineno": 99,
  "symbols_in_volume": [
   "json.loads",
   "mlflow.exceptions.MlflowException",
   "mlflow.exceptions.RestException"
  ],
  "type": "function"
 },
 "mlflow.utils.search_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.utils.search_utils.SearchUtils": {
  "lineno": 17,
  "symbols_in_volume": [
   "mlflow.entities.RunInfo.get_orderable_attributes",
   "mlflow.entities.RunInfo.get_searchable_attributes",
   "operator.eq",
   "operator.ge",
   "operator.gt",
   "operator.le",
   "operator.lt",
   "operator.ne",
   "re.match",
   "sqlparse.tokens.Token.Literal.Number.Float",
   "sqlparse.tokens.Token.Literal.Number.Integer",
   "sqlparse.tokens.Token.Literal.String.Single"
  ],
  "type": "class"
 },
 "mlflow.utils.search_utils.SearchUtils._does_run_match_clause": {
  "lineno": 266,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  ],
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils._get_comparison": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils._get_comparison_for_model_registry": {
  "lineno": 445,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  ],
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils._get_identifier": {
  "lineno": 112,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  ],
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils._get_value": {
  "lineno": 128,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "sqlparse.sql.Identifier"
  ],
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils._get_value_for_sort": {
  "lineno": 343,
  "symbols_in_volume": [
   "math.isnan",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  ],
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils._invalid_statement_token": {
  "lineno": 187,
  "symbols_in_volume": [
   "sqlparse.sql.Comparison",
   "sqlparse.tokens.Token.Keyword"
  ],
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils._is_quoted": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils._process_statement": {
  "lineno": 198,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "sqlparse.sql.Comparison"
  ],
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils._strip_quotes": {
  "lineno": 76,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  ],
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils._trim_backticks": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils._trim_ends": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils._valid_entity_type": {
  "lineno": 92,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  ],
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils._validate_comparison": {
  "lineno": 156,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "sqlparse.sql.Identifier",
   "sqlparse.tokens.Token",
   "sqlparse.tokens.Token.Operator.Comparison"
  ],
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils.create_page_token": {
  "lineno": 420,
  "symbols_in_volume": [
   "base64.b64encode",
   "json.dumps"
  ],
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils.filter": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils.filter.run_matches": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils.get_sql_filter_ops": {
  "lineno": 53,
  "symbols_in_volume": [
   "operator"
  ],
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils.is_attribute": {
  "lineno": 256,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException"
  ],
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils.is_metric": {
  "lineno": 226,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  ],
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils.is_param": {
  "lineno": 237,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  ],
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils.is_tag": {
  "lineno": 247,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException"
  ],
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils.paginate": {
  "lineno": 424,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils.parse_filter_for_model_registry": {
  "lineno": 465,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "sqlparse.parse",
   "sqlparse.sql.Comparison",
   "sqlparse.sql.Statement"
  ],
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils.parse_order_by": {
  "lineno": 317,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "sqlparse.parse",
   "sqlparse.sql.Identifier",
   "sqlparse.sql.Statement"
  ],
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils.parse_search_filter": {
  "lineno": 208,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "sqlparse.parse",
   "sqlparse.sql.Statement"
  ],
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils.parse_start_offset_from_page_token": {
  "lineno": 384,
  "symbols_in_volume": [
   "base64.b64decode",
   "base64.binascii.Error",
   "json.loads",
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  ],
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchUtils.sort": {
  "lineno": 366,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.string_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.utils.string_utils.is_string_type": {
  "lineno": 13,
  "symbols_in_volume": [
   "six.string_types"
  ],
  "type": "function"
 },
 "mlflow.utils.string_utils.strip_prefix": {
  "lineno": 1,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.string_utils.strip_suffix": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.time_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.utils.time_utils.conv_longdate_to_str": {
  "lineno": 5,
  "symbols_in_volume": [
   "datetime.datetime.fromtimestamp",
   "pytz.reference.LocalTimezone"
  ],
  "type": "function"
 },
 "mlflow.utils.uri": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.utils.uri._join_posixpaths_and_append_absolute_suffixes": {
  "lineno": 110,
  "symbols_in_volume": [
   "posixpath.join",
   "posixpath.sep"
  ],
  "type": "function"
 },
 "mlflow.utils.uri.append_to_uri_path": {
  "lineno": 70,
  "symbols_in_volume": [
   "six.moves.urllib.parse.urlparse",
   "six.moves.urllib.parse.urlunparse"
  ],
  "type": "function"
 },
 "mlflow.utils.uri.extract_db_type_from_uri": {
  "lineno": 41,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "mlflow.utils.validation._validate_db_type_string",
   "six.moves.urllib.parse.urlparse"
  ],
  "type": "function"
 },
 "mlflow.utils.uri.get_db_profile_from_uri": {
  "lineno": 30,
  "symbols_in_volume": [
   "six.moves.urllib.parse.urlparse"
  ],
  "type": "function"
 },
 "mlflow.utils.uri.get_uri_scheme": {
  "lineno": 62,
  "symbols_in_volume": [
   "mlflow.store.db.db_types.DATABASE_ENGINES",
   "six.moves.urllib.parse.urlparse"
  ],
  "type": "function"
 },
 "mlflow.utils.uri.is_databricks_uri": {
  "lineno": 24,
  "symbols_in_volume": [
   "six.moves.urllib.parse.urlparse"
  ],
  "type": "function"
 },
 "mlflow.utils.uri.is_http_uri": {
  "lineno": 19,
  "symbols_in_volume": [
   "six.moves.urllib.parse.urlparse"
  ],
  "type": "function"
 },
 "mlflow.utils.uri.is_local_uri": {
  "lineno": 13,
  "symbols_in_volume": [
   "six.moves.urllib.parse.urlparse"
  ],
  "type": "function"
 },
 "mlflow.utils.validation": {
  "lineno": null,
  "symbols_in_volume": [
   "mlflow.store.db.db_types.DATABASE_ENGINES",
   "re.compile"
  ],
  "type": "module"
 },
 "mlflow.utils.validation._validate_batch_limit": {
  "lineno": 154,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  ],
  "type": "function"
 },
 "mlflow.utils.validation._validate_batch_log_api_req": {
  "lineno": 187,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  ],
  "type": "function"
 },
 "mlflow.utils.validation._validate_batch_log_data": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.validation._validate_batch_log_limits": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.validation._validate_db_type_string": {
  "lineno": 213,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "mlflow.store.db.db_types.DATABASE_ENGINES"
  ],
  "type": "function"
 },
 "mlflow.utils.validation._validate_experiment_artifact_location": {
  "lineno": 206,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  ],
  "type": "function"
 },
 "mlflow.utils.validation._validate_experiment_id": {
  "lineno": 147,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  ],
  "type": "function"
 },
 "mlflow.utils.validation._validate_experiment_name": {
  "lineno": 195,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "mlflow.utils.string_utils.is_string_type"
  ],
  "type": "function"
 },
 "mlflow.utils.validation._validate_experiment_tag": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.validation._validate_length_limit": {
  "lineno": 134,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException"
  ],
  "type": "function"
 },
 "mlflow.utils.validation._validate_metric": {
  "lineno": 60,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
   "numbers.Number"
  ],
  "type": "function"
 },
 "mlflow.utils.validation._validate_metric_name": {
  "lineno": 50,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  ],
  "type": "function"
 },
 "mlflow.utils.validation._validate_param": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.validation._validate_param_name": {
  "lineno": 113,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  ],
  "type": "function"
 },
 "mlflow.utils.validation._validate_run_id": {
  "lineno": 141,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  ],
  "type": "function"
 },
 "mlflow.utils.validation._validate_tag": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.utils.validation._validate_tag_name": {
  "lineno": 123,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  ],
  "type": "function"
 },
 "mlflow.utils.validation.bad_path_message": {
  "lineno": 38,
  "symbols_in_volume": [
   "posixpath.normpath"
  ],
  "type": "function"
 },
 "mlflow.utils.validation.path_not_unique": {
  "lineno": 45,
  "symbols_in_volume": [
   "posixpath.normpath"
  ],
  "type": "function"
 },
 "mlflow.version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mlflow.xgboost": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "mlflow.xgboost._XGBModelWrapper": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mlflow.xgboost._XGBModelWrapper.__init__": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.xgboost._XGBModelWrapper.predict": {
  "lineno": 196,
  "symbols_in_volume": [
   "xgboost.DMatrix"
  ],
  "type": "function"
 },
 "mlflow.xgboost._load_model": {
  "lineno": 153,
  "symbols_in_volume": [
   "os.path.abspath",
   "xgboost.Booster"
  ],
  "type": "function"
 },
 "mlflow.xgboost._load_pyfunc": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.xgboost.autolog": {
  "lineno": 201,
  "symbols_in_volume": [
   "gorilla.Patch",
   "gorilla.Settings",
   "gorilla.apply",
   "mlflow.utils.annotations.experimental",
   "xgboost"
  ],
  "type": "function"
 },
 "mlflow.xgboost.autolog.train": {
  "lineno": 220,
  "symbols_in_volume": [
   "gorilla.get_original_attribute",
   "gorilla.patch",
   "inspect.getargspec",
   "json.dump",
   "mlflow.active_run",
   "mlflow.end_run",
   "mlflow.log_artifact",
   "mlflow.log_metric",
   "mlflow.log_metrics",
   "mlflow.log_params",
   "mlflow.start_run",
   "mlflow.utils.autologging_utils.log_fn_args_as_params",
   "mlflow.utils.autologging_utils.try_mlflow_log",
   "os.path.join",
   "shutil.rmtree",
   "tempfile.mkdtemp",
   "xgboost"
  ],
  "type": "function"
 },
 "mlflow.xgboost.autolog.train.log_feature_importance_plot": {
  "lineno": 237,
  "symbols_in_volume": [
   "matplotlib.pyplot.close",
   "matplotlib.pyplot.subplots",
   "mlflow.log_artifact",
   "mlflow.utils.autologging_utils.try_mlflow_log",
   "numpy.arange",
   "numpy.argsort",
   "numpy.array",
   "os.path.join",
   "shutil.rmtree",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "mlflow.xgboost.autolog.train.record_eval_results": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.xgboost.autolog.train.record_eval_results.callback": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mlflow.xgboost.get_default_conda_env": {
  "lineno": 46,
  "symbols_in_volume": [
   "mlflow.utils.environment._mlflow_conda_env",
   "xgboost.__version__"
  ],
  "type": "function"
 },
 "mlflow.xgboost.load_model": {
  "lineno": 169,
  "symbols_in_volume": [
   "mlflow.tracking.artifact_utils._download_artifact_from_uri",
   "mlflow.utils.model_utils._get_flavor_configuration",
   "os.path.join"
  ],
  "type": "function"
 },
 "mlflow.xgboost.log_model": {
  "lineno": 117,
  "symbols_in_volume": [
   "mlflow.models.Model.log",
   "mlflow.xgboost"
  ],
  "type": "function"
 },
 "mlflow.xgboost.save_model": {
  "lineno": 62,
  "symbols_in_volume": [
   "mlflow.exceptions.MlflowException",
   "mlflow.models.Model",
   "mlflow.pyfunc.add_to_model",
   "os.makedirs",
   "os.path.abspath",
   "os.path.exists",
   "os.path.join",
   "xgboost.__version__",
   "yaml.safe_dump",
   "yaml.safe_load"
  ],
  "type": "function"
 }
}