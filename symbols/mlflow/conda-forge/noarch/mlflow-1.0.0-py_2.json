{
 "*": {
  "data": {
   "imports": [
    "cloudpickle"
   ]
  },
  "type": "star-import"
 },
 "mlflow": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.projects.run",
    "mlflow.tracking.get_tracking_uri",
    "mlflow.tracking.set_tracking_uri",
    "mlflow.utils.logging_utils._configure_mlflow_loggers",
    "mlflow.warnings"
   ]
  },
  "type": "module"
 },
 "mlflow.ActiveRun": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mlflow.__all__": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "mlflow.__version__": {
  "data": {
   "shadows": "mlflow.version.VERSION"
  },
  "type": "import"
 },
 "mlflow._configure_mlflow_loggers": {
  "data": {
   "shadows": "mlflow.utils.logging_utils._configure_mlflow_loggers"
  },
  "type": "import"
 },
 "mlflow.active_run": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mlflow.alembic": {
  "data": {},
  "type": "module"
 },
 "mlflow.alembic.env": {
  "data": {
   "symbols_in_volume": [
    "alembic.context.config",
    "alembic.context.is_offline_mode",
    "logging.config.fileConfig",
    "mlflow.alembic.env.config",
    "mlflow.alembic.env.run_migrations_offline",
    "mlflow.alembic.env.run_migrations_online",
    "mlflow.store.dbmodels.models.Base.metadata"
   ]
  },
  "type": "module"
 },
 "mlflow.alembic.env.Base": {
  "data": {
   "shadows": "mlflow.store.dbmodels.models.Base"
  },
  "type": "import"
 },
 "mlflow.alembic.env.config": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mlflow.alembic.env.context": {
  "data": {
   "shadows": "alembic.context"
  },
  "type": "import"
 },
 "mlflow.alembic.env.engine_from_config": {
  "data": {
   "shadows": "sqlalchemy.engine_from_config"
  },
  "type": "import"
 },
 "mlflow.alembic.env.fileConfig": {
  "data": {
   "shadows": "logging.config.fileConfig"
  },
  "type": "import"
 },
 "mlflow.alembic.env.pool": {
  "data": {
   "shadows": "sqlalchemy.pool"
  },
  "type": "import"
 },
 "mlflow.alembic.env.run_migrations_offline": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "alembic.context.begin_transaction",
    "alembic.context.configure",
    "alembic.context.run_migrations",
    "mlflow.alembic.env.config",
    "mlflow.alembic.env.target_metadata"
   ]
  },
  "type": "function"
 },
 "mlflow.alembic.env.run_migrations_online": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "alembic.context.begin_transaction",
    "alembic.context.configure",
    "alembic.context.run_migrations",
    "mlflow.alembic.env.config",
    "mlflow.alembic.env.target_metadata",
    "sqlalchemy.engine_from_config",
    "sqlalchemy.pool.NullPool"
   ]
  },
  "type": "function"
 },
 "mlflow.alembic.env.target_metadata": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mlflow.alembic.versions": {
  "data": {},
  "type": "module"
 },
 "mlflow.alembic.versions.451aebb31d03_add_metric_step": {
  "data": {},
  "type": "module"
 },
 "mlflow.alembic.versions.451aebb31d03_add_metric_step.branch_labels": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mlflow.alembic.versions.451aebb31d03_add_metric_step.depends_on": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mlflow.alembic.versions.451aebb31d03_add_metric_step.down_revision": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mlflow.alembic.versions.451aebb31d03_add_metric_step.downgrade": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "mlflow.alembic.versions.451aebb31d03_add_metric_step.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "mlflow.alembic.versions.451aebb31d03_add_metric_step.revision": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mlflow.alembic.versions.451aebb31d03_add_metric_step.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "mlflow.alembic.versions.451aebb31d03_add_metric_step.upgrade": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "alembic.op.batch_alter_table",
    "sqlalchemy.BigInteger",
    "sqlalchemy.Column"
   ]
  },
  "type": "function"
 },
 "mlflow.alembic.versions.90e64c465722_migrate_user_column_to_tags": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "mlflow.alembic.versions.90e64c465722_migrate_user_column_to_tags.Base": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mlflow.alembic.versions.90e64c465722_migrate_user_column_to_tags.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "mlflow.alembic.versions.90e64c465722_migrate_user_column_to_tags.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "mlflow.alembic.versions.90e64c465722_migrate_user_column_to_tags.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "mlflow.alembic.versions.90e64c465722_migrate_user_column_to_tags.MLFLOW_USER": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_USER"
  },
  "type": "import"
 },
 "mlflow.alembic.versions.90e64c465722_migrate_user_column_to_tags.PrimaryKeyConstraint": {
  "data": {
   "shadows": "sqlalchemy.PrimaryKeyConstraint"
  },
  "type": "import"
 },
 "mlflow.alembic.versions.90e64c465722_migrate_user_column_to_tags.SqlRun": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "mlflow.alembic.versions.90e64c465722_migrate_user_column_to_tags.Base",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String"
   ]
  },
  "type": "class"
 },
 "mlflow.alembic.versions.90e64c465722_migrate_user_column_to_tags.SqlTag": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "mlflow.alembic.versions.90e64c465722_migrate_user_column_to_tags.Base",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "mlflow.alembic.versions.90e64c465722_migrate_user_column_to_tags.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "mlflow.alembic.versions.90e64c465722_migrate_user_column_to_tags.backref": {
  "data": {
   "shadows": "sqlalchemy.orm.backref"
  },
  "type": "import"
 },
 "mlflow.alembic.versions.90e64c465722_migrate_user_column_to_tags.branch_labels": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mlflow.alembic.versions.90e64c465722_migrate_user_column_to_tags.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "mlflow.alembic.versions.90e64c465722_migrate_user_column_to_tags.depends_on": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mlflow.alembic.versions.90e64c465722_migrate_user_column_to_tags.down_revision": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mlflow.alembic.versions.90e64c465722_migrate_user_column_to_tags.downgrade": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "mlflow.alembic.versions.90e64c465722_migrate_user_column_to_tags.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "mlflow.alembic.versions.90e64c465722_migrate_user_column_to_tags.orm": {
  "data": {
   "shadows": "sqlalchemy.orm"
  },
  "type": "import"
 },
 "mlflow.alembic.versions.90e64c465722_migrate_user_column_to_tags.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "mlflow.alembic.versions.90e64c465722_migrate_user_column_to_tags.revision": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mlflow.alembic.versions.90e64c465722_migrate_user_column_to_tags.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "mlflow.alembic.versions.90e64c465722_migrate_user_column_to_tags.upgrade": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "mlflow.alembic.versions.90e64c465722_migrate_user_column_to_tags.SqlRun",
    "mlflow.alembic.versions.90e64c465722_migrate_user_column_to_tags.SqlTag",
    "mlflow.utils.mlflow_tags.MLFLOW_USER",
    "sqlalchemy.orm.Session"
   ]
  },
  "type": "function"
 },
 "mlflow.azureml": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.azureml.logging"
   ]
  },
  "type": "module"
 },
 "mlflow.azureml.AzureModel": {
  "data": {
   "shadows": "azureml.core.model.Model"
  },
  "type": "import"
 },
 "mlflow.azureml.ContainerImage": {
  "data": {
   "shadows": "azureml.core.image.ContainerImage"
  },
  "type": "import"
 },
 "mlflow.azureml.INVALID_PARAMETER_VALUE": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  },
  "type": "import"
 },
 "mlflow.azureml.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.azureml.Model": {
  "data": {
   "shadows": "mlflow.models.Model"
  },
  "type": "import"
 },
 "mlflow.azureml.PYTHON_VERSION": {
  "data": {
   "shadows": "mlflow.utils.PYTHON_VERSION"
  },
  "type": "import"
 },
 "mlflow.azureml.SCORE_SRC": {
  "data": {
   "lineno": 312
  },
  "type": "constant"
 },
 "mlflow.azureml.StrictVersion": {
  "data": {
   "shadows": "distutils.version.StrictVersion"
  },
  "type": "import"
 },
 "mlflow.azureml.TempDir": {
  "data": {
   "shadows": "mlflow.utils.file_utils.TempDir"
  },
  "type": "import"
 },
 "mlflow.azureml._build_tags": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "mlflow.azureml._copy_file_or_tree": {
  "data": {
   "shadows": "mlflow.utils.file_utils._copy_file_or_tree"
  },
  "type": "import"
 },
 "mlflow.azureml._copy_project": {
  "data": {
   "shadows": "mlflow.utils.file_utils._copy_project"
  },
  "type": "import"
 },
 "mlflow.azureml._create_dockerfile": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "mlflow.azureml._get_container_path",
    "mlflow.exceptions.MlflowException",
    "mlflow.version.VERSION",
    "mlflow.version.VERSION.endswith",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.azureml._create_execution_script": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.azureml._download_artifact_from_uri": {
  "data": {
   "shadows": "mlflow.tracking.artifact_utils._download_artifact_from_uri"
  },
  "type": "import"
 },
 "mlflow.azureml._get_container_path": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "mlflow.azureml.os"
   ]
  },
  "type": "function"
 },
 "mlflow.azureml._get_mlflow_azure_resource_name": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "len",
    "mlflow.utils.get_unique_resource_id"
   ]
  },
  "type": "function"
 },
 "mlflow.azureml._load_pyfunc_conf": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "azureml.core.model.Model.load",
    "mlflow.azureml.os",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.pyfunc.FLAVOR_NAME"
   ]
  },
  "type": "function"
 },
 "mlflow.azureml._logger": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mlflow.azureml.build_image": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "azureml.core.image.ContainerImage.create",
    "azureml.core.image.ContainerImage.image_configuration",
    "azureml.core.model.Model.register",
    "distutils.version.StrictVersion",
    "mlflow.azureml._build_tags",
    "mlflow.azureml._create_dockerfile",
    "mlflow.azureml._create_execution_script",
    "mlflow.azureml._get_mlflow_azure_resource_name",
    "mlflow.azureml._load_pyfunc_conf",
    "mlflow.azureml._logger",
    "mlflow.azureml.os",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.pyfunc.ENV",
    "mlflow.pyfunc.PY_VERSION",
    "mlflow.tracking.artifact_utils._download_artifact_from_uri",
    "mlflow.utils.experimental",
    "mlflow.utils.file_utils.TempDir",
    "mlflow.utils.file_utils._copy_file_or_tree",
    "mlflow.utils.file_utils._copy_project"
   ]
  },
  "type": "function"
 },
 "mlflow.azureml.cli": {
  "data": {},
  "type": "module"
 },
 "mlflow.azureml.cli.Workspace": {
  "data": {
   "shadows": "azureml.core.Workspace"
  },
  "type": "import"
 },
 "mlflow.azureml.cli.build_image": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "azureml.core.Workspace.get",
    "mlflow.azureml.cli.click",
    "mlflow.azureml.cli.commands",
    "mlflow.azureml.cli.json",
    "mlflow.utils.cli_args.MLFLOW_HOME",
    "mlflow.utils.cli_args.MODEL_URI",
    "mlflow.utils.experimental"
   ]
  },
  "type": "function"
 },
 "mlflow.azureml.cli.cli_args": {
  "data": {
   "shadows": "mlflow.utils.cli_args"
  },
  "type": "import"
 },
 "mlflow.azureml.cli.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "mlflow.azureml.cli.commands": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "mlflow.azureml.cli.click"
   ]
  },
  "type": "function"
 },
 "mlflow.azureml.cli.experimental": {
  "data": {
   "shadows": "mlflow.utils.experimental"
  },
  "type": "import"
 },
 "mlflow.azureml.cli.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mlflow.azureml.cli.mlflow.azureml": {
  "data": {
   "shadows": "mlflow.azureml"
  },
  "type": "import"
 },
 "mlflow.azureml.cli.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mlflow.azureml.experimental": {
  "data": {
   "shadows": "mlflow.utils.experimental"
  },
  "type": "import"
 },
 "mlflow.azureml.get_unique_resource_id": {
  "data": {
   "shadows": "mlflow.utils.get_unique_resource_id"
  },
  "type": "import"
 },
 "mlflow.azureml.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.azureml.mlflow": {
  "data": {
   "shadows": "mlflow"
  },
  "type": "import"
 },
 "mlflow.azureml.mlflow_version": {
  "data": {
   "shadows": "mlflow.version.VERSION"
  },
  "type": "import"
 },
 "mlflow.azureml.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.azureml.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mlflow.azureml.pyfunc": {
  "data": {
   "shadows": "mlflow.pyfunc"
  },
  "type": "import"
 },
 "mlflow.azureml.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mlflow.azureml.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlflow.azureml.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "mlflow.cli": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.cli.cli",
    "mlflow.cli.logging"
   ]
  },
  "type": "module"
 },
 "mlflow.cli.DEFAULT_LOCAL_FILE_AND_ARTIFACT_PATH": {
  "data": {
   "shadows": "mlflow.store.DEFAULT_LOCAL_FILE_AND_ARTIFACT_PATH"
  },
  "type": "import"
 },
 "mlflow.cli.ShellCommandException": {
  "data": {
   "shadows": "mlflow.utils.process.ShellCommandException"
  },
  "type": "import"
 },
 "mlflow.cli.UsageError": {
  "data": {
   "shadows": "click.UsageError"
  },
  "type": "import"
 },
 "mlflow.cli._get_store": {
  "data": {
   "shadows": "mlflow.server.handlers._get_store"
  },
  "type": "import"
 },
 "mlflow.cli._is_local_uri": {
  "data": {
   "shadows": "mlflow.tracking.utils._is_local_uri"
  },
  "type": "import"
 },
 "mlflow.cli._logger": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mlflow.cli._run_server": {
  "data": {
   "shadows": "mlflow.server._run_server"
  },
  "type": "import"
 },
 "mlflow.cli._validate_static_prefix": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "click.UsageError"
   ]
  },
  "type": "function"
 },
 "mlflow.cli.cli": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "mlflow.cli.click"
   ]
  },
  "type": "function"
 },
 "mlflow.cli.cli_args": {
  "data": {
   "shadows": "mlflow.utils.cli_args"
  },
  "type": "import"
 },
 "mlflow.cli.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "mlflow.cli.eprint": {
  "data": {
   "shadows": "mlflow.utils.logging_utils.eprint"
  },
  "type": "import"
 },
 "mlflow.cli.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mlflow.cli.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.cli.mlflow.azureml.cli": {
  "data": {
   "shadows": "mlflow.azureml.cli"
  },
  "type": "import"
 },
 "mlflow.cli.mlflow.data": {
  "data": {
   "shadows": "mlflow.data"
  },
  "type": "import"
 },
 "mlflow.cli.mlflow.db": {
  "data": {
   "shadows": "mlflow.db"
  },
  "type": "import"
 },
 "mlflow.cli.mlflow.experiments": {
  "data": {
   "shadows": "mlflow.experiments"
  },
  "type": "import"
 },
 "mlflow.cli.mlflow.models.cli": {
  "data": {
   "shadows": "mlflow.models.cli"
  },
  "type": "import"
 },
 "mlflow.cli.mlflow.runs": {
  "data": {
   "shadows": "mlflow.runs"
  },
  "type": "import"
 },
 "mlflow.cli.mlflow.sagemaker.cli": {
  "data": {
   "shadows": "mlflow.sagemaker.cli"
  },
  "type": "import"
 },
 "mlflow.cli.mlflow.store.cli": {
  "data": {
   "shadows": "mlflow.store.cli"
  },
  "type": "import"
 },
 "mlflow.cli.mlflow.store.db.utils": {
  "data": {
   "shadows": "mlflow.store.db.utils"
  },
  "type": "import"
 },
 "mlflow.cli.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.cli.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mlflow.cli.projects": {
  "data": {
   "shadows": "mlflow.projects"
  },
  "type": "import"
 },
 "mlflow.cli.run": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "mlflow.cli._logger",
    "mlflow.cli.cli",
    "mlflow.cli.click",
    "mlflow.cli.json",
    "mlflow.cli.os",
    "mlflow.cli.sys",
    "mlflow.projects.ExecutionException",
    "mlflow.projects.run",
    "mlflow.tracking._EXPERIMENT_ID_ENV_VAR",
    "mlflow.tracking._EXPERIMENT_NAME_ENV_VAR",
    "mlflow.utils.cli_args.NO_CONDA",
    "mlflow.utils.logging_utils.eprint"
   ]
  },
  "type": "function"
 },
 "mlflow.cli.server": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "Exception",
    "mlflow.cli._logger",
    "mlflow.cli._validate_static_prefix",
    "mlflow.cli.cli",
    "mlflow.cli.click",
    "mlflow.cli.sys",
    "mlflow.server._run_server",
    "mlflow.server.handlers._get_store",
    "mlflow.store.DEFAULT_LOCAL_FILE_AND_ARTIFACT_PATH",
    "mlflow.tracking.utils._is_local_uri",
    "mlflow.utils.cli_args.HOST",
    "mlflow.utils.cli_args.PORT",
    "mlflow.utils.cli_args.WORKERS",
    "mlflow.utils.logging_utils.eprint",
    "mlflow.utils.process.ShellCommandException"
   ]
  },
  "type": "function"
 },
 "mlflow.cli.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlflow.cli.tracking": {
  "data": {
   "shadows": "mlflow.tracking"
  },
  "type": "import"
 },
 "mlflow.cli.ui": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "Exception",
    "mlflow.cli._logger",
    "mlflow.cli.cli",
    "mlflow.cli.click",
    "mlflow.cli.sys",
    "mlflow.server._run_server",
    "mlflow.server.handlers._get_store",
    "mlflow.store.DEFAULT_LOCAL_FILE_AND_ARTIFACT_PATH",
    "mlflow.tracking.utils._is_local_uri",
    "mlflow.utils.logging_utils.eprint",
    "mlflow.utils.process.ShellCommandException"
   ]
  },
  "type": "function"
 },
 "mlflow.create_experiment": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "mlflow.data": {
  "data": {
   "symbols_in_volume": [
    "mlflow.data.DBFS_PREFIX",
    "mlflow.data.GS_PREFIX",
    "mlflow.data.S3_PREFIX",
    "mlflow.data.re"
   ]
  },
  "type": "module"
 },
 "mlflow.data.DBFS_PREFIX": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "mlflow.data.DBFS_REGEX": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mlflow.data.DownloadException": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "mlflow.data.GS_PREFIX": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mlflow.data.GS_REGEX": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mlflow.data.S3_PREFIX": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mlflow.data.S3_REGEX": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mlflow.data._fetch_dbfs": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "mlflow.data.os",
    "mlflow.utils.process.exec_cmd",
    "print"
   ]
  },
  "type": "function"
 },
 "mlflow.data._fetch_gs": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "google.cloud.storage.Client",
    "mlflow.data.os",
    "mlflow.data.parse_gs_uri",
    "print"
   ]
  },
  "type": "function"
 },
 "mlflow.data._fetch_s3": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "mlflow.data.boto3",
    "mlflow.data.os",
    "mlflow.data.parse_s3_uri",
    "print"
   ]
  },
  "type": "function"
 },
 "mlflow.data.boto3": {
  "data": {
   "shadows": "boto3"
  },
  "type": "import"
 },
 "mlflow.data.download_uri": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "mlflow.data.DBFS_PREFIX",
    "mlflow.data.DBFS_REGEX",
    "mlflow.data.DownloadException",
    "mlflow.data.GS_PREFIX",
    "mlflow.data.GS_REGEX",
    "mlflow.data.S3_PREFIX",
    "mlflow.data.S3_REGEX",
    "mlflow.data._fetch_dbfs",
    "mlflow.data._fetch_gs",
    "mlflow.data._fetch_s3"
   ]
  },
  "type": "function"
 },
 "mlflow.data.is_uri": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "len",
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "mlflow.data.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.data.parse_gs_uri": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "Exception",
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "mlflow.data.parse_s3_uri": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "Exception",
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "mlflow.data.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mlflow.data.process": {
  "data": {
   "shadows": "mlflow.utils.process"
  },
  "type": "import"
 },
 "mlflow.data.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mlflow.data.storage": {
  "data": {
   "shadows": "google.cloud.storage"
  },
  "type": "import"
 },
 "mlflow.data.urllib": {
  "data": {
   "shadows": "six.moves.urllib"
  },
  "type": "import"
 },
 "mlflow.db": {
  "data": {},
  "type": "module"
 },
 "mlflow.db.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "mlflow.db.commands": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "mlflow.db.click"
   ]
  },
  "type": "function"
 },
 "mlflow.db.mlflow.store.db.utils": {
  "data": {
   "shadows": "mlflow.store.db.utils"
  },
  "type": "import"
 },
 "mlflow.db.upgrade": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "mlflow.db.click",
    "mlflow.db.commands"
   ]
  },
  "type": "function"
 },
 "mlflow.end_run": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "mlflow.entities": {
  "data": {},
  "type": "module"
 },
 "mlflow.entities.Experiment": {
  "data": {
   "shadows": "mlflow.entities.experiment.Experiment"
  },
  "type": "import"
 },
 "mlflow.entities.FileInfo": {
  "data": {
   "shadows": "mlflow.entities.file_info.FileInfo"
  },
  "type": "import"
 },
 "mlflow.entities.LifecycleStage": {
  "data": {
   "shadows": "mlflow.entities.lifecycle_stage.LifecycleStage"
  },
  "type": "import"
 },
 "mlflow.entities.Metric": {
  "data": {
   "shadows": "mlflow.entities.metric.Metric"
  },
  "type": "import"
 },
 "mlflow.entities.Param": {
  "data": {
   "shadows": "mlflow.entities.param.Param"
  },
  "type": "import"
 },
 "mlflow.entities.Run": {
  "data": {
   "shadows": "mlflow.entities.run.Run"
  },
  "type": "import"
 },
 "mlflow.entities.RunData": {
  "data": {
   "shadows": "mlflow.entities.run_data.RunData"
  },
  "type": "import"
 },
 "mlflow.entities.RunInfo": {
  "data": {
   "shadows": "mlflow.entities.run_info.RunInfo"
  },
  "type": "import"
 },
 "mlflow.entities.RunStatus": {
  "data": {
   "shadows": "mlflow.entities.run_status.RunStatus"
  },
  "type": "import"
 },
 "mlflow.entities.RunTag": {
  "data": {
   "shadows": "mlflow.entities.run_tag.RunTag"
  },
  "type": "import"
 },
 "mlflow.entities.SourceType": {
  "data": {
   "shadows": "mlflow.entities.source_type.SourceType"
  },
  "type": "import"
 },
 "mlflow.entities.ViewType": {
  "data": {
   "shadows": "mlflow.entities.view_type.ViewType"
  },
  "type": "import"
 },
 "mlflow.entities.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mlflow.entities._mlflow_object": {
  "data": {},
  "type": "module"
 },
 "mlflow.entities._mlflow_object._MLflowObject": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.entities._mlflow_object._MLflowObject.__iter__": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "mlflow.entities._mlflow_object._MLflowObject.__repr__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "mlflow.entities._mlflow_object.to_string"
   ]
  },
  "type": "function"
 },
 "mlflow.entities._mlflow_object._MLflowObject._properties": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "classmethod",
    "getattr",
    "isinstance",
    "property",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mlflow.entities._mlflow_object._MLflowObject.from_dictionary": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "mlflow.entities._mlflow_object._MLflowObject.from_proto": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.entities._mlflow_object._MLflowObjectPrinter": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.entities._mlflow_object._MLflowObjectPrinter.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "mlflow.entities._mlflow_object._MLflowObjectPrinter",
    "mlflow.entities._mlflow_object.pprint",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.entities._mlflow_object._MLflowObjectPrinter._entity_to_string": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "mlflow.entities._mlflow_object._MLflowObjectPrinter.to_string": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "isinstance",
    "mlflow.entities._mlflow_object._MLflowObject",
    "mlflow.entities._mlflow_object.get_classname"
   ]
  },
  "type": "function"
 },
 "mlflow.entities._mlflow_object.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "mlflow.entities._mlflow_object.get_classname": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "mlflow.entities._mlflow_object.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "mlflow.entities._mlflow_object.to_string": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "mlflow.entities._mlflow_object._MLflowObjectPrinter"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.experiment": {
  "data": {},
  "type": "module"
 },
 "mlflow.entities.experiment.Experiment": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "mlflow.entities._mlflow_object._MLflowObject"
   ]
  },
  "type": "class"
 },
 "mlflow.entities.experiment.Experiment.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.Experiment",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.experiment.Experiment._set_name": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "mlflow.entities.experiment.Experiment.artifact_location": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.experiment.Experiment.experiment_id": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.experiment.Experiment.from_proto": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.experiment.Experiment.lifecycle_stage": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.experiment.Experiment.name": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.experiment.Experiment.to_proto": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.Experiment"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.experiment.ProtoExperiment": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.Experiment"
  },
  "type": "import"
 },
 "mlflow.entities.experiment._MLflowObject": {
  "data": {
   "shadows": "mlflow.entities._mlflow_object._MLflowObject"
  },
  "type": "import"
 },
 "mlflow.entities.file_info": {
  "data": {},
  "type": "module"
 },
 "mlflow.entities.file_info.FileInfo": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "mlflow.entities._mlflow_object._MLflowObject"
   ]
  },
  "type": "class"
 },
 "mlflow.entities.file_info.FileInfo.__eq__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.file_info.FileInfo.__init__": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "mlflow.entities.file_info.FileInfo.file_size": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.file_info.FileInfo.from_proto": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.file_info.FileInfo.is_dir": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.file_info.FileInfo.path": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.file_info.FileInfo.to_proto": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.FileInfo"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.file_info.ProtoFileInfo": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.FileInfo"
  },
  "type": "import"
 },
 "mlflow.entities.file_info._MLflowObject": {
  "data": {
   "shadows": "mlflow.entities._mlflow_object._MLflowObject"
  },
  "type": "import"
 },
 "mlflow.entities.lifecycle_stage": {
  "data": {},
  "type": "module"
 },
 "mlflow.entities.lifecycle_stage.LifecycleStage": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "object",
    "set"
   ]
  },
  "type": "class"
 },
 "mlflow.entities.lifecycle_stage.LifecycleStage.is_valid": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.lifecycle_stage.LifecycleStage.matches_view_type": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "classmethod",
    "mlflow.entities.lifecycle_stage.LifecycleStage",
    "mlflow.entities.view_type.ViewType.ACTIVE_ONLY",
    "mlflow.entities.view_type.ViewType.ALL",
    "mlflow.entities.view_type.ViewType.DELETED_ONLY",
    "mlflow.exceptions.MlflowException",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.lifecycle_stage.LifecycleStage.view_type_to_stages": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "classmethod",
    "mlflow.entities.view_type.ViewType.ACTIVE_ONLY",
    "mlflow.entities.view_type.ViewType.ALL",
    "mlflow.entities.view_type.ViewType.DELETED_ONLY"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.lifecycle_stage.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.entities.lifecycle_stage.ViewType": {
  "data": {
   "shadows": "mlflow.entities.view_type.ViewType"
  },
  "type": "import"
 },
 "mlflow.entities.metric": {
  "data": {},
  "type": "module"
 },
 "mlflow.entities.metric.Metric": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "mlflow.entities._mlflow_object._MLflowObject"
   ]
  },
  "type": "class"
 },
 "mlflow.entities.metric.Metric.__init__": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "mlflow.entities.metric.Metric.from_proto": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.metric.Metric.key": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.metric.Metric.step": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.metric.Metric.timestamp": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.metric.Metric.to_proto": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.Metric"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.metric.Metric.value": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.metric.ProtoMetric": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.Metric"
  },
  "type": "import"
 },
 "mlflow.entities.metric._MLflowObject": {
  "data": {
   "shadows": "mlflow.entities._mlflow_object._MLflowObject"
  },
  "type": "import"
 },
 "mlflow.entities.param": {
  "data": {},
  "type": "module"
 },
 "mlflow.entities.param.Param": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "mlflow.entities._mlflow_object._MLflowObject"
   ]
  },
  "type": "class"
 },
 "mlflow.entities.param.Param.__init__": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "mlflow.entities.param.Param.from_proto": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.param.Param.key": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.param.Param.to_proto": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.Param"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.param.Param.value": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.param.ProtoParam": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.Param"
  },
  "type": "import"
 },
 "mlflow.entities.param._MLflowObject": {
  "data": {
   "shadows": "mlflow.entities._mlflow_object._MLflowObject"
  },
  "type": "import"
 },
 "mlflow.entities.run": {
  "data": {},
  "type": "module"
 },
 "mlflow.entities.run.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.entities.run.ProtoRun": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.Run"
  },
  "type": "import"
 },
 "mlflow.entities.run.Run": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "mlflow.entities._mlflow_object._MLflowObject"
   ]
  },
  "type": "class"
 },
 "mlflow.entities.run.Run.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run.Run.data": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run.Run.from_proto": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "mlflow.entities.run_data.RunData.from_proto",
    "mlflow.entities.run_info.RunInfo.from_proto"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run.Run.info": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run.Run.to_dictionary": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run.Run.to_proto": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.Run"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run.RunData": {
  "data": {
   "shadows": "mlflow.entities.run_data.RunData"
  },
  "type": "import"
 },
 "mlflow.entities.run.RunInfo": {
  "data": {
   "shadows": "mlflow.entities.run_info.RunInfo"
  },
  "type": "import"
 },
 "mlflow.entities.run._MLflowObject": {
  "data": {
   "shadows": "mlflow.entities._mlflow_object._MLflowObject"
  },
  "type": "import"
 },
 "mlflow.entities.run_data": {
  "data": {},
  "type": "module"
 },
 "mlflow.entities.run_data.Metric": {
  "data": {
   "shadows": "mlflow.entities.metric.Metric"
  },
  "type": "import"
 },
 "mlflow.entities.run_data.Param": {
  "data": {
   "shadows": "mlflow.entities.param.Param"
  },
  "type": "import"
 },
 "mlflow.entities.run_data.ProtoParam": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.Param"
  },
  "type": "import"
 },
 "mlflow.entities.run_data.ProtoRunData": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.RunData"
  },
  "type": "import"
 },
 "mlflow.entities.run_data.ProtoRunTag": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.RunTag"
  },
  "type": "import"
 },
 "mlflow.entities.run_data.RunData": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "mlflow.entities._mlflow_object._MLflowObject"
   ]
  },
  "type": "class"
 },
 "mlflow.entities.run_data.RunData.__init__": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "mlflow.entities.run_data.RunData._add_metric": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "mlflow.entities.run_data.RunData._add_param": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "mlflow.entities.run_data.RunData._add_tag": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "mlflow.entities.run_data.RunData.from_proto": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "mlflow.entities.metric.Metric.from_proto",
    "mlflow.protos.service_pb2.Param.from_proto",
    "mlflow.protos.service_pb2.RunTag.from_proto"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_data.RunData.metrics": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_data.RunData.params": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_data.RunData.tags": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_data.RunData.to_dictionary": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "mlflow.entities.run_data.RunData.to_proto": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.Param",
    "mlflow.protos.service_pb2.RunData",
    "mlflow.protos.service_pb2.RunTag"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_data.RunTag": {
  "data": {
   "shadows": "mlflow.entities.run_tag.RunTag"
  },
  "type": "import"
 },
 "mlflow.entities.run_data._MLflowObject": {
  "data": {
   "shadows": "mlflow.entities._mlflow_object._MLflowObject"
  },
  "type": "import"
 },
 "mlflow.entities.run_info": {
  "data": {},
  "type": "module"
 },
 "mlflow.entities.run_info.LifecycleStage": {
  "data": {
   "shadows": "mlflow.entities.lifecycle_stage.LifecycleStage"
  },
  "type": "import"
 },
 "mlflow.entities.run_info.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.entities.run_info.ProtoRunInfo": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.RunInfo"
  },
  "type": "import"
 },
 "mlflow.entities.run_info.RunInfo": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "mlflow.entities._mlflow_object._MLflowObject"
   ]
  },
  "type": "class"
 },
 "mlflow.entities.run_info.RunInfo.__eq__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo._copy_with_overrides": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.RunInfo.from_proto"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.artifact_uri": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "mlflow.entities.run_info.searchable_attribute"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.end_time": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.experiment_id": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.from_proto": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "mlflow.entities.run_status.RunStatus.to_string"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.get_searchable_attributes": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "cls.__dict__",
    "getattr",
    "isinstance",
    "mlflow.entities.run_info.searchable_attribute",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.lifecycle_stage": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.run_id": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.run_uuid": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.start_time": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.status": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "mlflow.entities.run_info.searchable_attribute"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.to_proto": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "mlflow.entities.run_status.RunStatus.from_string",
    "mlflow.protos.service_pb2.RunInfo"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.RunInfo.user_id": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.RunStatus": {
  "data": {
   "shadows": "mlflow.entities.run_status.RunStatus"
  },
  "type": "import"
 },
 "mlflow.entities.run_info._MLflowObject": {
  "data": {
   "shadows": "mlflow.entities._mlflow_object._MLflowObject"
  },
  "type": "import"
 },
 "mlflow.entities.run_info.check_run_is_active": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
    "mlflow.exceptions.MlflowException"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.check_run_is_deleted": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "mlflow.entities.lifecycle_stage.LifecycleStage.DELETED",
    "mlflow.exceptions.MlflowException"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_info.searchable_attribute": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "class"
 },
 "mlflow.entities.run_status": {
  "data": {},
  "type": "module"
 },
 "mlflow.entities.run_status.ProtoRunStatus": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.RunStatus"
  },
  "type": "import"
 },
 "mlflow.entities.run_status.RunStatus": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.RunStatus.Value",
    "mlflow.protos.service_pb2.RunStatus.keys",
    "object",
    "set"
   ]
  },
  "type": "class"
 },
 "mlflow.entities.run_status.RunStatus.all_status": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "list",
    "mlflow.protos.service_pb2.RunStatus._STATUS_TO_STRING.keys",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_status.RunStatus.from_string": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "Exception",
    "list",
    "mlflow.protos.service_pb2.RunStatus._STRING_TO_STATUS",
    "mlflow.protos.service_pb2.RunStatus._STRING_TO_STATUS.keys",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_status.RunStatus.is_terminated": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.RunStatus._TERMINATED_STATUSES",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_status.RunStatus.to_string": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "Exception",
    "list",
    "mlflow.protos.service_pb2.RunStatus._STATUS_TO_STRING",
    "mlflow.protos.service_pb2.RunStatus._STATUS_TO_STRING.keys",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_tag": {
  "data": {},
  "type": "module"
 },
 "mlflow.entities.run_tag.ProtoRunTag": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.RunTag"
  },
  "type": "import"
 },
 "mlflow.entities.run_tag.RunTag": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "mlflow.entities._mlflow_object._MLflowObject"
   ]
  },
  "type": "class"
 },
 "mlflow.entities.run_tag.RunTag.__eq__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_tag.RunTag.__init__": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "mlflow.entities.run_tag.RunTag.from_proto": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_tag.RunTag.key": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_tag.RunTag.to_proto": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.RunTag"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_tag.RunTag.value": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.run_tag._MLflowObject": {
  "data": {
   "shadows": "mlflow.entities._mlflow_object._MLflowObject"
  },
  "type": "import"
 },
 "mlflow.entities.source_type": {
  "data": {},
  "type": "module"
 },
 "mlflow.entities.source_type.SourceType": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "object",
    "range"
   ]
  },
  "type": "class"
 },
 "mlflow.entities.source_type.SourceType.from_string": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "Exception",
    "list",
    "mlflow.entities.source_type.SourceType",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.source_type.SourceType.to_string": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "Exception",
    "list",
    "mlflow.entities.source_type.SourceType",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.view_type": {
  "data": {},
  "type": "module"
 },
 "mlflow.entities.view_type.ViewType": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "object",
    "range"
   ]
  },
  "type": "class"
 },
 "mlflow.entities.view_type.ViewType.from_proto": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "mlflow.protos.service_pb2.ACTIVE_ONLY",
    "mlflow.protos.service_pb2.ALL",
    "mlflow.protos.service_pb2.DELETED_ONLY"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.view_type.ViewType.from_string": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "Exception",
    "classmethod",
    "list"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.view_type.ViewType.to_proto": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "mlflow.protos.service_pb2.ACTIVE_ONLY",
    "mlflow.protos.service_pb2.ALL",
    "mlflow.protos.service_pb2.DELETED_ONLY"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.view_type.ViewType.to_string": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "Exception",
    "classmethod",
    "list"
   ]
  },
  "type": "function"
 },
 "mlflow.entities.view_type.service_pb2": {
  "data": {
   "shadows": "mlflow.protos.service_pb2"
  },
  "type": "import"
 },
 "mlflow.exceptions": {
  "data": {},
  "type": "module"
 },
 "mlflow.exceptions.ErrorCode": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.ErrorCode"
  },
  "type": "import"
 },
 "mlflow.exceptions.ExecutionException": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException"
   ]
  },
  "type": "class"
 },
 "mlflow.exceptions.INTERNAL_ERROR": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INTERNAL_ERROR"
  },
  "type": "import"
 },
 "mlflow.exceptions.MissingConfigException": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException"
   ]
  },
  "type": "class"
 },
 "mlflow.exceptions.MlflowException": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "mlflow.exceptions.MlflowException.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.ErrorCode.Name",
    "mlflow.protos.databricks_pb2.INTERNAL_ERROR",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.exceptions.MlflowException.serialize_as_json": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "mlflow.exceptions.json"
   ]
  },
  "type": "function"
 },
 "mlflow.exceptions.RestException": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException"
   ]
  },
  "type": "class"
 },
 "mlflow.exceptions.RestException.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "mlflow.exceptions.RestException",
    "mlflow.exceptions.json",
    "mlflow.protos.databricks_pb2.INTERNAL_ERROR",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.exceptions.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mlflow.experiments": {
  "data": {
   "symbols_in_volume": [
    "mlflow.experiments.click"
   ]
  },
  "type": "module"
 },
 "mlflow.experiments.EXPERIMENT_ID": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mlflow.experiments.ViewType": {
  "data": {
   "shadows": "mlflow.entities.ViewType"
  },
  "type": "import"
 },
 "mlflow.experiments._get_store": {
  "data": {
   "shadows": "mlflow.tracking._get_store"
  },
  "type": "import"
 },
 "mlflow.experiments.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "mlflow.experiments.commands": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "mlflow.experiments.click"
   ]
  },
  "type": "function"
 },
 "mlflow.experiments.create": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "mlflow.experiments.click",
    "mlflow.experiments.commands",
    "mlflow.tracking._get_store",
    "print"
   ]
  },
  "type": "function"
 },
 "mlflow.experiments.delete_experiment": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "mlflow.experiments.EXPERIMENT_ID",
    "mlflow.experiments.commands",
    "mlflow.tracking._get_store",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.experiments.is_uri": {
  "data": {
   "shadows": "mlflow.data.is_uri"
  },
  "type": "import"
 },
 "mlflow.experiments.list_experiments": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "mlflow.data.is_uri",
    "mlflow.entities.ViewType.ACTIVE_ONLY",
    "mlflow.entities.ViewType.from_string",
    "mlflow.experiments.click",
    "mlflow.experiments.commands",
    "mlflow.experiments.os",
    "mlflow.tracking._get_store",
    "print",
    "sorted",
    "tabulate.tabulate"
   ]
  },
  "type": "function"
 },
 "mlflow.experiments.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.experiments.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mlflow.experiments.rename_experiment": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "mlflow.experiments.EXPERIMENT_ID",
    "mlflow.experiments.click",
    "mlflow.experiments.commands",
    "mlflow.tracking._get_store",
    "print"
   ]
  },
  "type": "function"
 },
 "mlflow.experiments.restore_experiment": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "mlflow.experiments.EXPERIMENT_ID",
    "mlflow.experiments.commands",
    "mlflow.tracking._get_store",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.experiments.tabulate": {
  "data": {
   "shadows": "tabulate.tabulate"
  },
  "type": "import"
 },
 "mlflow.get_artifact_uri": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "mlflow.get_tracking_uri": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "mlflow.h2o": {
  "data": {},
  "type": "module"
 },
 "mlflow.h2o.FLAVOR_NAME": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mlflow.h2o.Model": {
  "data": {
   "shadows": "mlflow.models.Model"
  },
  "type": "import"
 },
 "mlflow.h2o._H2OModelWrapper": {
  "data": {
   "lineno": 148
  },
  "type": "class"
 },
 "mlflow.h2o._H2OModelWrapper.__init__": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "mlflow.h2o._H2OModelWrapper.predict": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "mlflow.h2o.h2o"
   ]
  },
  "type": "function"
 },
 "mlflow.h2o._download_artifact_from_uri": {
  "data": {
   "shadows": "mlflow.tracking.artifact_utils._download_artifact_from_uri"
  },
  "type": "import"
 },
 "mlflow.h2o._get_flavor_configuration": {
  "data": {
   "shadows": "mlflow.utils.model_utils._get_flavor_configuration"
  },
  "type": "import"
 },
 "mlflow.h2o._load_model": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "mlflow.h2o.h2o",
    "mlflow.h2o.os",
    "mlflow.h2o.yaml",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.h2o._load_pyfunc": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "mlflow.h2o._H2OModelWrapper",
    "mlflow.h2o._load_model"
   ]
  },
  "type": "function"
 },
 "mlflow.h2o._mlflow_conda_env": {
  "data": {
   "shadows": "mlflow.utils.environment._mlflow_conda_env"
  },
  "type": "import"
 },
 "mlflow.h2o.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "mlflow.h2o.get_default_conda_env": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "mlflow.h2o.h2o",
    "mlflow.utils.environment._mlflow_conda_env"
   ]
  },
  "type": "function"
 },
 "mlflow.h2o.h2o": {
  "data": {
   "shadows": "h2o"
  },
  "type": "import"
 },
 "mlflow.h2o.load_model": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "mlflow.h2o.FLAVOR_NAME",
    "mlflow.h2o._load_model",
    "mlflow.h2o.os",
    "mlflow.tracking.artifact_utils._download_artifact_from_uri",
    "mlflow.utils.model_utils._get_flavor_configuration"
   ]
  },
  "type": "function"
 },
 "mlflow.h2o.log_model": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "mlflow.h2o.mlflow",
    "mlflow.models.Model.log"
   ]
  },
  "type": "function"
 },
 "mlflow.h2o.mlflow": {
  "data": {
   "shadows": "mlflow"
  },
  "type": "import"
 },
 "mlflow.h2o.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.h2o.pyfunc": {
  "data": {
   "shadows": "mlflow.pyfunc"
  },
  "type": "import"
 },
 "mlflow.h2o.save_model": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "isinstance",
    "mlflow.h2o.FLAVOR_NAME",
    "mlflow.h2o.get_default_conda_env",
    "mlflow.h2o.h2o",
    "mlflow.h2o.os",
    "mlflow.h2o.yaml",
    "mlflow.models.Model",
    "mlflow.pyfunc.add_to_model",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.h2o.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "mlflow.keras": {
  "data": {},
  "type": "module"
 },
 "mlflow.keras.FLAVOR_NAME": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mlflow.keras.K": {
  "data": {
   "shadows": "keras.backend"
  },
  "type": "import"
 },
 "mlflow.keras.Model": {
  "data": {
   "shadows": "mlflow.models.Model"
  },
  "type": "import"
 },
 "mlflow.keras.StrictVersion": {
  "data": {
   "shadows": "distutils.version.StrictVersion"
  },
  "type": "import"
 },
 "mlflow.keras._KerasModelWrapper": {
  "data": {
   "lineno": 167
  },
  "type": "class"
 },
 "mlflow.keras._KerasModelWrapper.__init__": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "mlflow.keras._KerasModelWrapper.predict": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "mlflow.keras._download_artifact_from_uri": {
  "data": {
   "shadows": "mlflow.tracking.artifact_utils._download_artifact_from_uri"
  },
  "type": "import"
 },
 "mlflow.keras._get_flavor_configuration": {
  "data": {
   "shadows": "mlflow.utils.model_utils._get_flavor_configuration"
  },
  "type": "import"
 },
 "mlflow.keras._load_model": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "distutils.version.StrictVersion",
    "mlflow.keras.h5py",
    "mlflow.keras.keras",
    "mlflow.keras.os"
   ]
  },
  "type": "function"
 },
 "mlflow.keras._load_pyfunc": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "Exception",
    "keras.backend._BACKEND",
    "keras.backend.set_learning_phase",
    "mlflow.keras._KerasModelWrapper",
    "mlflow.keras._load_model",
    "tensorflow.Graph",
    "tensorflow.Session"
   ]
  },
  "type": "function"
 },
 "mlflow.keras._mlflow_conda_env": {
  "data": {
   "shadows": "mlflow.utils.environment._mlflow_conda_env"
  },
  "type": "import"
 },
 "mlflow.keras.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "mlflow.keras.get_default_conda_env": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "mlflow.keras.keras",
    "mlflow.utils.environment._mlflow_conda_env",
    "tensorflow.__version__"
   ]
  },
  "type": "function"
 },
 "mlflow.keras.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "mlflow.keras.keras": {
  "data": {
   "shadows": "keras"
  },
  "type": "import"
 },
 "mlflow.keras.keras.models": {
  "data": {
   "shadows": "keras.models"
  },
  "type": "import"
 },
 "mlflow.keras.load_model": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "mlflow.keras.FLAVOR_NAME",
    "mlflow.keras._load_model",
    "mlflow.keras.os",
    "mlflow.tracking.artifact_utils._download_artifact_from_uri",
    "mlflow.utils.model_utils._get_flavor_configuration"
   ]
  },
  "type": "function"
 },
 "mlflow.keras.log_model": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "mlflow.models.Model.log"
   ]
  },
  "type": "function"
 },
 "mlflow.keras.mlflow.tracking": {
  "data": {
   "shadows": "mlflow.tracking"
  },
  "type": "import"
 },
 "mlflow.keras.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.keras.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "mlflow.keras.pyfunc": {
  "data": {
   "shadows": "mlflow.pyfunc"
  },
  "type": "import"
 },
 "mlflow.keras.save_model": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "isinstance",
    "mlflow.keras.FLAVOR_NAME",
    "mlflow.keras.get_default_conda_env",
    "mlflow.keras.keras",
    "mlflow.keras.os",
    "mlflow.keras.yaml",
    "mlflow.models.Model",
    "mlflow.pyfunc.add_to_model",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.keras.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "mlflow.keras.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "mlflow.log_artifact": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mlflow.log_artifacts": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mlflow.log_metric": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mlflow.log_metrics": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "mlflow.log_param": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mlflow.log_params": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "mlflow.mleap": {
  "data": {},
  "type": "module"
 },
 "mlflow.mleap.DataFrame": {
  "data": {
   "shadows": "pyspark.sql.DataFrame"
  },
  "type": "import"
 },
 "mlflow.mleap.FLAVOR_NAME": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mlflow.mleap.MLeapSerializationException": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException"
   ]
  },
  "type": "class"
 },
 "mlflow.mleap.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.mleap.Model": {
  "data": {
   "shadows": "mlflow.models.Model"
  },
  "type": "import"
 },
 "mlflow.mleap.PipelineModel": {
  "data": {
   "shadows": "pyspark.ml.pipeline.PipelineModel"
  },
  "type": "import"
 },
 "mlflow.mleap.Py4JError": {
  "data": {
   "shadows": "py4j.protocol.Py4JError"
  },
  "type": "import"
 },
 "mlflow.mleap.SimpleSparkSerializer": {
  "data": {
   "shadows": "mleap.pyspark.spark_support.SimpleSparkSerializer"
  },
  "type": "import"
 },
 "mlflow.mleap._get_mleap_schema": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "mlflow.mleap.json",
    "pyspark.ml.util._jvm"
   ]
  },
  "type": "function"
 },
 "mlflow.mleap._handle_py4j_error": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "mlflow.mleap.sys",
    "mlflow.mleap.traceback",
    "reraised_error_type",
    "six.reraise"
   ]
  },
  "type": "function"
 },
 "mlflow.mleap._jvm": {
  "data": {
   "shadows": "pyspark.ml.util._jvm"
  },
  "type": "import"
 },
 "mlflow.mleap.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "mlflow.mleap.add_to_model": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "mlflow.mleap.FLAVOR_NAME",
    "mlflow.mleap._get_mleap_schema",
    "mlflow.mleap._handle_py4j_error",
    "mlflow.mleap.json",
    "mlflow.mleap.os",
    "mlflow.utils.keyword_only",
    "open",
    "py4j.protocol.Py4JError",
    "pyspark.ml.pipeline.PipelineModel",
    "pyspark.sql.DataFrame",
    "pyspark.sql.DataFrame.__module__"
   ]
  },
  "type": "function"
 },
 "mlflow.mleap.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mlflow.mleap.keyword_only": {
  "data": {
   "shadows": "mlflow.utils.keyword_only"
  },
  "type": "import"
 },
 "mlflow.mleap.log_model": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "mlflow.mleap.mlflow",
    "mlflow.models.Model.log",
    "mlflow.utils.keyword_only"
   ]
  },
  "type": "function"
 },
 "mlflow.mleap.mleap.version": {
  "data": {
   "shadows": "mleap.version"
  },
  "type": "import"
 },
 "mlflow.mleap.mlflow": {
  "data": {
   "shadows": "mlflow"
  },
  "type": "import"
 },
 "mlflow.mleap.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.mleap.reraise": {
  "data": {
   "shadows": "six.reraise"
  },
  "type": "import"
 },
 "mlflow.mleap.save_model": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "mlflow.mleap.add_to_model",
    "mlflow.mleap.os",
    "mlflow.models.Model",
    "mlflow.utils.keyword_only"
   ]
  },
  "type": "function"
 },
 "mlflow.mleap.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlflow.mleap.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "mlflow.mlflow.tracking.fluent": {
  "data": {
   "shadows": "mlflow.tracking.fluent"
  },
  "type": "import"
 },
 "mlflow.models": {
  "data": {},
  "type": "module"
 },
 "mlflow.models.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "mlflow.models.FlavorBackend": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.models.FlavorBackend.__init__": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "mlflow.models.FlavorBackend.can_build_image": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "callable",
    "getattr"
   ]
  },
  "type": "function"
 },
 "mlflow.models.FlavorBackend.can_score_model": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.models.FlavorBackend.predict": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.models.FlavorBackend.serve": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.models.Model": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.models.Model.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "datetime.datetime.utcnow",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.models.Model.add_flavor": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "mlflow.models.Model.load": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "mlflow.models.os",
    "mlflow.models.yaml",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.models.Model.log": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "mlflow.models.mlflow",
    "mlflow.utils.file_utils.TempDir"
   ]
  },
  "type": "function"
 },
 "mlflow.models.Model.save": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.models.Model.to_yaml": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "mlflow.models.yaml"
   ]
  },
  "type": "function"
 },
 "mlflow.models.TempDir": {
  "data": {
   "shadows": "mlflow.utils.file_utils.TempDir"
  },
  "type": "import"
 },
 "mlflow.models.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "mlflow.models.container.scoring_server": {
  "data": {},
  "type": "module"
 },
 "mlflow.models.container.scoring_server.wsgi": {
  "data": {
   "symbols_in_volume": [
    "mlflow.pyfunc.load_pyfunc",
    "mlflow.pyfunc.scoring_server.init"
   ]
  },
  "type": "module"
 },
 "mlflow.models.container.scoring_server.wsgi.app": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "mlflow.models.container.scoring_server.wsgi.pyfunc": {
  "data": {
   "shadows": "mlflow.pyfunc"
  },
  "type": "import"
 },
 "mlflow.models.container.scoring_server.wsgi.scoring_server": {
  "data": {
   "shadows": "mlflow.pyfunc.scoring_server"
  },
  "type": "import"
 },
 "mlflow.models.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "mlflow.models.docker_utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.models.docker_utils.logging"
   ]
  },
  "type": "module"
 },
 "mlflow.models.docker_utils.DISABLE_ENV_CREATION": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mlflow.models.docker_utils.PIPE": {
  "data": {
   "shadows": "subprocess.PIPE"
  },
  "type": "import"
 },
 "mlflow.models.docker_utils.Popen": {
  "data": {
   "shadows": "subprocess.Popen"
  },
  "type": "import"
 },
 "mlflow.models.docker_utils.STDOUT": {
  "data": {
   "shadows": "subprocess.STDOUT"
  },
  "type": "import"
 },
 "mlflow.models.docker_utils.TempDir": {
  "data": {
   "shadows": "mlflow.utils.file_utils.TempDir"
  },
  "type": "import"
 },
 "mlflow.models.docker_utils._DOCKERFILE_TEMPLATE": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mlflow.models.docker_utils._build_image": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "custom_setup_steps_hook",
    "iter",
    "mlflow.models.docker_utils._DOCKERFILE_TEMPLATE",
    "mlflow.models.docker_utils._get_mlflow_install_step",
    "mlflow.models.docker_utils._logger",
    "mlflow.models.docker_utils.os",
    "mlflow.utils.file_utils.TempDir",
    "mlflow.utils.logging_utils.eprint",
    "open",
    "subprocess.PIPE",
    "subprocess.Popen",
    "subprocess.STDOUT"
   ]
  },
  "type": "function"
 },
 "mlflow.models.docker_utils._copy_project": {
  "data": {
   "shadows": "mlflow.utils.file_utils._copy_project"
  },
  "type": "import"
 },
 "mlflow.models.docker_utils._get_mlflow_install_step": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "mlflow.models.docker_utils.mlflow",
    "mlflow.utils.file_utils._copy_project"
   ]
  },
  "type": "function"
 },
 "mlflow.models.docker_utils._logger": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "mlflow.models.docker_utils.eprint": {
  "data": {
   "shadows": "mlflow.utils.logging_utils.eprint"
  },
  "type": "import"
 },
 "mlflow.models.docker_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.models.docker_utils.mlflow": {
  "data": {
   "shadows": "mlflow"
  },
  "type": "import"
 },
 "mlflow.models.docker_utils.mlflow.version": {
  "data": {
   "shadows": "mlflow.version"
  },
  "type": "import"
 },
 "mlflow.models.docker_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.models.flavor_backend_registry": {
  "data": {
   "symbols_in_volume": [
    "mlflow.pyfunc.FLAVOR_NAME",
    "mlflow.pyfunc.backend.PyFuncBackend",
    "mlflow.rfunc.backend.RFuncBackend"
   ]
  },
  "type": "module"
 },
 "mlflow.models.flavor_backend_registry.PyFuncBackend": {
  "data": {
   "shadows": "mlflow.pyfunc.backend.PyFuncBackend"
  },
  "type": "import"
 },
 "mlflow.models.flavor_backend_registry.RFuncBackend": {
  "data": {
   "shadows": "mlflow.rfunc.backend.RFuncBackend"
  },
  "type": "import"
 },
 "mlflow.models.flavor_backend_registry._flavor_backends": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mlflow.models.flavor_backend_registry.get_flavor_backend": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "mlflow.models.flavor_backend_registry._flavor_backends"
   ]
  },
  "type": "function"
 },
 "mlflow.models.flavor_backend_registry.pyfunc": {
  "data": {
   "shadows": "mlflow.pyfunc"
  },
  "type": "import"
 },
 "mlflow.models.mlflow": {
  "data": {
   "shadows": "mlflow"
  },
  "type": "import"
 },
 "mlflow.models.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.models.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "mlflow.onnx": {
  "data": {},
  "type": "module"
 },
 "mlflow.onnx.FLAVOR_NAME": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mlflow.onnx.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.onnx.Model": {
  "data": {
   "shadows": "mlflow.models.Model"
  },
  "type": "import"
 },
 "mlflow.onnx.RESOURCE_ALREADY_EXISTS": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS"
  },
  "type": "import"
 },
 "mlflow.onnx._OnnxModelWrapper": {
  "data": {
   "lineno": 118
  },
  "type": "class"
 },
 "mlflow.onnx._OnnxModelWrapper.__init__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "len",
    "mlflow.onnx.onnxruntime"
   ]
  },
  "type": "function"
 },
 "mlflow.onnx._OnnxModelWrapper._cast_float64_to_float32": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.onnx._OnnxModelWrapper.predict": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "len",
    "mlflow.onnx._OnnxModelWrapper",
    "mlflow.utils.experimental",
    "pandas.DataFrame.from_dict",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "mlflow.onnx._download_artifact_from_uri": {
  "data": {
   "shadows": "mlflow.tracking.artifact_utils._download_artifact_from_uri"
  },
  "type": "import"
 },
 "mlflow.onnx._get_flavor_configuration": {
  "data": {
   "shadows": "mlflow.utils.model_utils._get_flavor_configuration"
  },
  "type": "import"
 },
 "mlflow.onnx._load_model": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "mlflow.onnx.onnx"
   ]
  },
  "type": "function"
 },
 "mlflow.onnx._load_pyfunc": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "mlflow.onnx._OnnxModelWrapper"
   ]
  },
  "type": "function"
 },
 "mlflow.onnx._mlflow_conda_env": {
  "data": {
   "shadows": "mlflow.utils.environment._mlflow_conda_env"
  },
  "type": "import"
 },
 "mlflow.onnx.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "mlflow.onnx.experimental": {
  "data": {
   "shadows": "mlflow.utils.experimental"
  },
  "type": "import"
 },
 "mlflow.onnx.get_default_conda_env": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "mlflow.onnx.onnx",
    "mlflow.onnx.onnxruntime",
    "mlflow.utils.environment._mlflow_conda_env",
    "mlflow.utils.experimental"
   ]
  },
  "type": "function"
 },
 "mlflow.onnx.load_model": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "mlflow.onnx.FLAVOR_NAME",
    "mlflow.onnx._load_model",
    "mlflow.onnx.os",
    "mlflow.tracking.artifact_utils._download_artifact_from_uri",
    "mlflow.utils.experimental",
    "mlflow.utils.model_utils._get_flavor_configuration"
   ]
  },
  "type": "function"
 },
 "mlflow.onnx.log_model": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "mlflow.models.Model.log",
    "mlflow.utils.experimental"
   ]
  },
  "type": "function"
 },
 "mlflow.onnx.mlflow.tracking": {
  "data": {
   "shadows": "mlflow.tracking"
  },
  "type": "import"
 },
 "mlflow.onnx.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlflow.onnx.onnx": {
  "data": {
   "shadows": "onnx"
  },
  "type": "import"
 },
 "mlflow.onnx.onnxruntime": {
  "data": {
   "shadows": "onnxruntime"
  },
  "type": "import"
 },
 "mlflow.onnx.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.onnx.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "mlflow.onnx.pyfunc": {
  "data": {
   "shadows": "mlflow.pyfunc"
  },
  "type": "import"
 },
 "mlflow.onnx.save_model": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "mlflow.exceptions.MlflowException",
    "mlflow.models.Model",
    "mlflow.onnx.FLAVOR_NAME",
    "mlflow.onnx.get_default_conda_env",
    "mlflow.onnx.onnx",
    "mlflow.onnx.os",
    "mlflow.onnx.yaml",
    "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS",
    "mlflow.pyfunc.add_to_model",
    "mlflow.utils.experimental",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.onnx.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "mlflow.projects": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.projects.logging",
    "mlflow.projects.re"
   ]
  },
  "type": "module"
 },
 "mlflow.projects.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "mlflow.projects.ExecutionException": {
  "data": {
   "shadows": "mlflow.exceptions.ExecutionException"
  },
  "type": "import"
 },
 "mlflow.projects.GitCommandError": {
  "data": {
   "shadows": "git.exc.GitCommandError"
  },
  "type": "import"
 },
 "mlflow.projects.InvalidGitRepositoryError": {
  "data": {
   "shadows": "git.exc.InvalidGitRepositoryError"
  },
  "type": "import"
 },
 "mlflow.projects.LEGACY_MLFLOW_GIT_BRANCH_NAME": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.LEGACY_MLFLOW_GIT_BRANCH_NAME"
  },
  "type": "import"
 },
 "mlflow.projects.LEGACY_MLFLOW_GIT_REPO_URL": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.LEGACY_MLFLOW_GIT_REPO_URL"
  },
  "type": "import"
 },
 "mlflow.projects.LocalSubmittedRun": {
  "data": {
   "shadows": "mlflow.projects.submitted_run.LocalSubmittedRun"
  },
  "type": "import"
 },
 "mlflow.projects.MLFLOW_CONDA_HOME": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mlflow.projects.MLFLOW_DOCKER_IMAGE_ID": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_DOCKER_IMAGE_ID"
  },
  "type": "import"
 },
 "mlflow.projects.MLFLOW_DOCKER_IMAGE_NAME": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_DOCKER_IMAGE_NAME"
  },
  "type": "import"
 },
 "mlflow.projects.MLFLOW_GIT_BRANCH": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_GIT_BRANCH"
  },
  "type": "import"
 },
 "mlflow.projects.MLFLOW_GIT_COMMIT": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_GIT_COMMIT"
  },
  "type": "import"
 },
 "mlflow.projects.MLFLOW_GIT_REPO_URL": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_GIT_REPO_URL"
  },
  "type": "import"
 },
 "mlflow.projects.MLFLOW_PARENT_RUN_ID": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_PARENT_RUN_ID"
  },
  "type": "import"
 },
 "mlflow.projects.MLFLOW_PROJECT_ENTRY_POINT": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_PROJECT_ENTRY_POINT"
  },
  "type": "import"
 },
 "mlflow.projects.MLFLOW_PROJECT_ENV": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_PROJECT_ENV"
  },
  "type": "import"
 },
 "mlflow.projects.MLFLOW_SOURCE_NAME": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_SOURCE_NAME"
  },
  "type": "import"
 },
 "mlflow.projects.MLFLOW_SOURCE_TYPE": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_SOURCE_TYPE"
  },
  "type": "import"
 },
 "mlflow.projects.MLFLOW_USER": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_USER"
  },
  "type": "import"
 },
 "mlflow.projects.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.projects.Repo": {
  "data": {
   "shadows": "git.Repo"
  },
  "type": "import"
 },
 "mlflow.projects.RunStatus": {
  "data": {
   "shadows": "mlflow.entities.RunStatus"
  },
  "type": "import"
 },
 "mlflow.projects.SourceType": {
  "data": {
   "shadows": "mlflow.entities.SourceType"
  },
  "type": "import"
 },
 "mlflow.projects.SubmittedRun": {
  "data": {
   "shadows": "mlflow.projects.submitted_run.SubmittedRun"
  },
  "type": "import"
 },
 "mlflow.projects._FILE_URI_REGEX": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mlflow.projects._GENERATED_DOCKERFILE_NAME": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mlflow.projects._GIT_URI_REGEX": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mlflow.projects._MLFLOW_DOCKER_TRACKING_DIR_PATH": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mlflow.projects._PROJECT_TAR_ARCHIVE_NAME": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mlflow.projects._ZIP_URI_REGEX": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mlflow.projects.__all__": {
  "data": {
   "lineno": 762
  },
  "type": "constant"
 },
 "mlflow.projects._build_docker_image": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "Exception",
    "mlflow.exceptions.ExecutionException",
    "mlflow.projects._GENERATED_DOCKERFILE_NAME",
    "mlflow.projects._PROJECT_TAR_ARCHIVE_NAME",
    "mlflow.projects._create_docker_build_ctx",
    "mlflow.projects._get_docker_tag_name",
    "mlflow.projects._logger",
    "mlflow.projects.docker",
    "mlflow.projects.os",
    "mlflow.projects.posixpath",
    "mlflow.tracking.MlflowClient",
    "mlflow.utils.mlflow_tags.MLFLOW_DOCKER_IMAGE_ID",
    "mlflow.utils.mlflow_tags.MLFLOW_DOCKER_IMAGE_NAME",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.projects._build_mlflow_run_cmd": {
  "data": {
   "lineno": 520
  },
  "type": "function"
 },
 "mlflow.projects._create_docker_build_ctx": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "mlflow.projects._GENERATED_DOCKERFILE_NAME",
    "mlflow.projects._PROJECT_TAR_ARCHIVE_NAME",
    "mlflow.projects.os",
    "mlflow.projects.shutil",
    "mlflow.projects.tempfile",
    "mlflow.utils.file_utils.make_tarfile",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.projects._create_run": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "mlflow.entities.SourceType.PROJECT",
    "mlflow.entities.SourceType.to_string",
    "mlflow.projects._expand_uri",
    "mlflow.projects._is_local_uri",
    "mlflow.tracking.MlflowClient",
    "mlflow.tracking.context._get_git_commit",
    "mlflow.tracking.context._get_user",
    "mlflow.tracking.fluent.active_run",
    "mlflow.tracking.utils._get_git_url_if_present",
    "mlflow.utils.mlflow_tags.MLFLOW_GIT_COMMIT",
    "mlflow.utils.mlflow_tags.MLFLOW_PARENT_RUN_ID",
    "mlflow.utils.mlflow_tags.MLFLOW_PROJECT_ENTRY_POINT",
    "mlflow.utils.mlflow_tags.MLFLOW_SOURCE_NAME",
    "mlflow.utils.mlflow_tags.MLFLOW_SOURCE_TYPE",
    "mlflow.utils.mlflow_tags.MLFLOW_USER"
   ]
  },
  "type": "function"
 },
 "mlflow.projects._expand_uri": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "mlflow.projects._is_local_uri",
    "mlflow.projects.os"
   ]
  },
  "type": "function"
 },
 "mlflow.projects._fetch_git_repo": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "mlflow.exceptions.ExecutionException",
    "mlflow.projects.git"
   ]
  },
  "type": "function"
 },
 "mlflow.projects._fetch_project": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "distutils.dir_util.copy_tree",
    "mlflow.exceptions.ExecutionException",
    "mlflow.projects._GIT_URI_REGEX",
    "mlflow.projects._fetch_git_repo",
    "mlflow.projects._fetch_zip_repo",
    "mlflow.projects._is_file_uri",
    "mlflow.projects._is_local_uri",
    "mlflow.projects._is_zip_uri",
    "mlflow.projects._logger",
    "mlflow.projects._parse_subdirectory",
    "mlflow.projects._unzip_repo",
    "mlflow.projects.os",
    "mlflow.projects.tempfile",
    "six.moves.urllib.parse.unquote",
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "mlflow.projects._fetch_zip_repo": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "io.BytesIO",
    "mlflow.exceptions.ExecutionException",
    "mlflow.projects.requests",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.projects._get_conda_bin_executable": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "mlflow.projects.MLFLOW_CONDA_HOME",
    "mlflow.projects.os"
   ]
  },
  "type": "function"
 },
 "mlflow.projects._get_conda_command": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "mlflow.projects._get_conda_bin_executable",
    "mlflow.projects.os"
   ]
  },
  "type": "function"
 },
 "mlflow.projects._get_conda_env_name": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "mlflow.projects.hashlib",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.projects._get_docker_command": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "mlflow.projects._MLFLOW_DOCKER_TRACKING_DIR_PATH",
    "mlflow.projects._get_local_uri_or_none",
    "mlflow.projects._get_run_env_vars",
    "mlflow.tracking._TRACKING_URI_ENV_VAR",
    "mlflow.tracking.get_tracking_uri",
    "mlflow.tracking.utils._is_databricks_uri",
    "mlflow.utils.databricks_utils.get_databricks_host_creds"
   ]
  },
  "type": "function"
 },
 "mlflow.projects._get_docker_tag_name": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "mlflow.tracking.context._get_git_commit"
   ]
  },
  "type": "function"
 },
 "mlflow.projects._get_entry_point_command": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "mlflow.projects._get_storage_dir",
    "mlflow.projects._logger"
   ]
  },
  "type": "function"
 },
 "mlflow.projects._get_experiment_id": {
  "data": {
   "shadows": "mlflow.tracking.fluent._get_experiment_id"
  },
  "type": "import"
 },
 "mlflow.projects._get_git_commit": {
  "data": {
   "shadows": "mlflow.tracking.context._get_git_commit"
  },
  "type": "import"
 },
 "mlflow.projects._get_git_repo_url": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "git.Repo",
    "git.exc.GitCommandError",
    "git.exc.InvalidGitRepositoryError",
    "len"
   ]
  },
  "type": "function"
 },
 "mlflow.projects._get_local_uri_or_none": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "mlflow.projects._MLFLOW_DOCKER_TRACKING_DIR_PATH",
    "mlflow.utils.file_utils.path_to_local_file_uri",
    "mlflow.utils.file_utils.path_to_local_sqlite_uri",
    "six.moves.urllib.parse.urlparse",
    "six.moves.urllib.request.url2pathname"
   ]
  },
  "type": "function"
 },
 "mlflow.projects._get_or_create_conda_env": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "EnvironmentError",
    "mlflow.exceptions.ExecutionException",
    "mlflow.projects.MLFLOW_CONDA_HOME",
    "mlflow.projects._get_conda_bin_executable",
    "mlflow.projects._get_conda_env_name",
    "mlflow.projects._logger",
    "mlflow.projects.json",
    "mlflow.projects.os",
    "mlflow.utils.process.exec_cmd"
   ]
  },
  "type": "function"
 },
 "mlflow.projects._get_run_env_vars": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "mlflow.tracking._EXPERIMENT_ID_ENV_VAR",
    "mlflow.tracking._RUN_ID_ENV_VAR",
    "mlflow.tracking._TRACKING_URI_ENV_VAR",
    "mlflow.tracking.get_tracking_uri",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.projects._get_storage_dir": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "mlflow.projects.os",
    "mlflow.projects.tempfile"
   ]
  },
  "type": "function"
 },
 "mlflow.projects._invoke_mlflow_run_subprocess": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "mlflow.projects._build_mlflow_run_cmd",
    "mlflow.projects._get_run_env_vars",
    "mlflow.projects._logger",
    "mlflow.projects._run_mlflow_run_cmd",
    "mlflow.projects.submitted_run.LocalSubmittedRun"
   ]
  },
  "type": "function"
 },
 "mlflow.projects._is_file_uri": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "mlflow.projects._FILE_URI_REGEX"
   ]
  },
  "type": "function"
 },
 "mlflow.projects._is_local_uri": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "mlflow.projects._GIT_URI_REGEX"
   ]
  },
  "type": "function"
 },
 "mlflow.projects._is_valid_branch_name": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "git.Repo",
    "git.exc.GitCommandError"
   ]
  },
  "type": "function"
 },
 "mlflow.projects._is_zip_uri": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "mlflow.projects._ZIP_URI_REGEX"
   ]
  },
  "type": "function"
 },
 "mlflow.projects._logger": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mlflow.projects._maybe_set_run_terminated": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "mlflow.entities.RunStatus.is_terminated",
    "mlflow.tracking.MlflowClient"
   ]
  },
  "type": "function"
 },
 "mlflow.projects._parse_subdirectory": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "mlflow.exceptions.ExecutionException"
   ]
  },
  "type": "function"
 },
 "mlflow.projects._project_spec": {
  "data": {
   "shadows": "mlflow.projects._project_spec"
  },
  "type": "import"
 },
 "mlflow.projects._resolve_experiment_id": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.tracking.MlflowClient",
    "mlflow.tracking.fluent._get_experiment_id"
   ]
  },
  "type": "function"
 },
 "mlflow.projects._run": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "list",
    "mlflow.exceptions.ExecutionException",
    "mlflow.projects._build_docker_image",
    "mlflow.projects._create_run",
    "mlflow.projects._fetch_project",
    "mlflow.projects._get_conda_command",
    "mlflow.projects._get_docker_command",
    "mlflow.projects._get_entry_point_command",
    "mlflow.projects._get_git_repo_url",
    "mlflow.projects._get_or_create_conda_env",
    "mlflow.projects._invoke_mlflow_run_subprocess",
    "mlflow.projects._is_valid_branch_name",
    "mlflow.projects._project_spec.load_project",
    "mlflow.projects._run_entry_point",
    "mlflow.projects._validate_docker_env",
    "mlflow.projects._validate_docker_installation",
    "mlflow.projects._validate_execution_environment",
    "mlflow.projects.databricks.run_databricks",
    "mlflow.tracking.MlflowClient",
    "mlflow.utils.mlflow_tags.LEGACY_MLFLOW_GIT_BRANCH_NAME",
    "mlflow.utils.mlflow_tags.LEGACY_MLFLOW_GIT_REPO_URL",
    "mlflow.utils.mlflow_tags.MLFLOW_GIT_BRANCH",
    "mlflow.utils.mlflow_tags.MLFLOW_GIT_REPO_URL",
    "mlflow.utils.mlflow_tags.MLFLOW_PROJECT_ENV"
   ]
  },
  "type": "function"
 },
 "mlflow.projects._run_entry_point": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "mlflow.projects._get_run_env_vars",
    "mlflow.projects._logger",
    "mlflow.projects.os",
    "mlflow.projects.submitted_run.LocalSubmittedRun",
    "mlflow.projects.subprocess",
    "mlflow.utils.process"
   ]
  },
  "type": "function"
 },
 "mlflow.projects._run_mlflow_run_cmd": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "mlflow.projects.os",
    "mlflow.projects.subprocess",
    "mlflow.projects.sys"
   ]
  },
  "type": "function"
 },
 "mlflow.projects._unzip_repo": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "mlflow.projects.zipfile"
   ]
  },
  "type": "function"
 },
 "mlflow.projects._validate_docker_env": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "mlflow.exceptions.ExecutionException"
   ]
  },
  "type": "function"
 },
 "mlflow.projects._validate_docker_installation": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "EnvironmentError",
    "mlflow.exceptions.ExecutionException",
    "mlflow.utils.process.exec_cmd"
   ]
  },
  "type": "function"
 },
 "mlflow.projects._validate_execution_environment": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "mlflow.exceptions.ExecutionException"
   ]
  },
  "type": "function"
 },
 "mlflow.projects._wait_for": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "mlflow.exceptions.ExecutionException",
    "mlflow.projects._logger",
    "mlflow.projects._maybe_set_run_terminated",
    "mlflow.tracking.MlflowClient"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.context": {
  "data": {
   "shadows": "mlflow.tracking.context"
  },
  "type": "import"
 },
 "mlflow.projects.databricks": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.projects.databricks.DB_CONTAINER_BASE",
    "mlflow.projects.databricks.logging",
    "mlflow.projects.databricks.os"
   ]
  },
  "type": "module"
 },
 "mlflow.projects.databricks.DBFS_EXPERIMENT_DIR_BASE": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mlflow.projects.databricks.DB_CONTAINER_BASE": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mlflow.projects.databricks.DB_PROJECTS_BASE": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mlflow.projects.databricks.DB_TARFILE_ARCHIVE_NAME": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mlflow.projects.databricks.DB_TARFILE_BASE": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mlflow.projects.databricks.DatabricksJobRunner": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.projects.databricks.DatabricksJobRunner.__init__": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner._databricks_api_request": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "mlflow.utils.databricks_utils.get_databricks_host_creds",
    "mlflow.utils.rest_utils.http_request_safe"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner._dbfs_path_exists": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ValueError",
    "mlflow.exceptions.ExecutionException",
    "mlflow.exceptions.MlflowException",
    "mlflow.projects.databricks.json",
    "mlflow.utils.databricks_utils.get_databricks_host_creds",
    "mlflow.utils.rest_utils.http_request"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner._get_status": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "mlflow.entities.RunStatus.FAILED",
    "mlflow.entities.RunStatus.FINISHED",
    "mlflow.entities.RunStatus.RUNNING"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner._jobs_runs_submit": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "mlflow.projects.databricks.json"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner._run_shell_command_job": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "mlflow.version.VERSION"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner._upload_project_to_dbfs": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "mlflow.projects.databricks.DBFS_EXPERIMENT_DIR_BASE",
    "mlflow.projects.databricks.DB_TARFILE_ARCHIVE_NAME",
    "mlflow.projects.databricks._logger",
    "mlflow.projects.databricks.hashlib",
    "mlflow.projects.databricks.os",
    "mlflow.projects.databricks.shutil",
    "mlflow.projects.databricks.tempfile",
    "mlflow.utils.file_utils.make_tarfile",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner._upload_project_to_dbfs.custom_filter": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "mlflow.projects.databricks.os"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner._upload_to_dbfs": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "mlflow.projects.databricks._logger",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner.get_run_result_state": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner.get_status": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "mlflow.entities.RunStatus.to_string"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner.jobs_runs_cancel": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "mlflow.projects.databricks.json"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner.jobs_runs_get": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "mlflow.projects.databricks.json"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksJobRunner.run_databricks": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "mlflow.projects.databricks._get_databricks_run_cmd",
    "mlflow.projects.databricks._get_tracking_uri_for_run",
    "mlflow.projects.databricks._logger",
    "mlflow.tracking._EXPERIMENT_ID_ENV_VAR",
    "mlflow.tracking._TRACKING_URI_ENV_VAR"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksSubmittedRun": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "mlflow.projects.submitted_run.SubmittedRun"
   ]
  },
  "type": "class"
 },
 "mlflow.projects.databricks.DatabricksSubmittedRun.__init__": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "mlflow.projects.databricks.DatabricksSubmittedRun",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksSubmittedRun._print_description_and_log_tags": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "mlflow.projects.databricks._logger",
    "mlflow.tracking.MlflowClient",
    "mlflow.utils.databricks_utils.get_databricks_host_creds",
    "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_RUN_URL",
    "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_SHELL_JOB_ID",
    "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_SHELL_JOB_RUN_ID",
    "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_WEBAPP_URL"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksSubmittedRun.cancel": {
  "data": {
   "lineno": 329
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksSubmittedRun.get_status": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksSubmittedRun.run_id": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.DatabricksSubmittedRun.wait": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "mlflow.projects.databricks.time"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.ExecutionException": {
  "data": {
   "shadows": "mlflow.exceptions.ExecutionException"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.MLFLOW_DATABRICKS_RUN_URL": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_RUN_URL"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.MLFLOW_DATABRICKS_SHELL_JOB_ID": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_SHELL_JOB_ID"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.MLFLOW_DATABRICKS_SHELL_JOB_RUN_ID": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_SHELL_JOB_RUN_ID"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.MLFLOW_DATABRICKS_WEBAPP_URL": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_WEBAPP_URL"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.RunStatus": {
  "data": {
   "shadows": "mlflow.entities.RunStatus"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.SubmittedRun": {
  "data": {
   "shadows": "mlflow.projects.submitted_run.SubmittedRun"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.VERSION": {
  "data": {
   "shadows": "mlflow.version.VERSION"
  },
  "type": "import"
 },
 "mlflow.projects.databricks._get_databricks_run_cmd": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "list",
    "map",
    "mlflow.projects.databricks.DB_PROJECTS_BASE",
    "mlflow.projects.databricks.DB_TARFILE_ARCHIVE_NAME",
    "mlflow.projects.databricks.DB_TARFILE_BASE",
    "mlflow.projects.databricks.os",
    "mlflow.projects.databricks.textwrap",
    "six.moves.shlex_quote"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks._get_tracking_uri_for_run": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "mlflow.tracking.get_tracking_uri"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks._logger": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mlflow.projects.databricks.before_run_validations": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "mlflow.exceptions.ExecutionException",
    "mlflow.tracking.utils._is_databricks_uri",
    "mlflow.tracking.utils._is_http_uri"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.databricks_utils": {
  "data": {
   "shadows": "mlflow.utils.databricks_utils"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.file_utils": {
  "data": {
   "shadows": "mlflow.utils.file_utils"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.rest_utils": {
  "data": {
   "shadows": "mlflow.utils.rest_utils"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.run_databricks": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "mlflow.projects.databricks.DatabricksJobRunner",
    "mlflow.projects.databricks.DatabricksSubmittedRun",
    "mlflow.tracking.get_tracking_uri",
    "mlflow.tracking.utils.get_db_profile_from_uri"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.databricks.shlex_quote": {
  "data": {
   "shadows": "six.moves.shlex_quote"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mlflow.projects.databricks.tracking": {
  "data": {
   "shadows": "mlflow.tracking"
  },
  "type": "import"
 },
 "mlflow.projects.databricks_utils": {
  "data": {
   "shadows": "mlflow.utils.databricks_utils"
  },
  "type": "import"
 },
 "mlflow.projects.dir_util": {
  "data": {
   "shadows": "distutils.dir_util"
  },
  "type": "import"
 },
 "mlflow.projects.docker": {
  "data": {
   "shadows": "docker"
  },
  "type": "import"
 },
 "mlflow.projects.file_utils": {
  "data": {
   "shadows": "mlflow.utils.file_utils"
  },
  "type": "import"
 },
 "mlflow.projects.fluent": {
  "data": {
   "shadows": "mlflow.tracking.fluent"
  },
  "type": "import"
 },
 "mlflow.projects.git": {
  "data": {
   "shadows": "git"
  },
  "type": "import"
 },
 "mlflow.projects.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "mlflow.projects.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mlflow.projects.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.projects.mlflow.projects.databricks": {
  "data": {
   "shadows": "mlflow.projects.databricks"
  },
  "type": "import"
 },
 "mlflow.projects.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.projects.path_to_local_file_uri": {
  "data": {
   "shadows": "mlflow.utils.file_utils.path_to_local_file_uri"
  },
  "type": "import"
 },
 "mlflow.projects.path_to_local_sqlite_uri": {
  "data": {
   "shadows": "mlflow.utils.file_utils.path_to_local_sqlite_uri"
  },
  "type": "import"
 },
 "mlflow.projects.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "mlflow.projects.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mlflow.projects.process": {
  "data": {
   "shadows": "mlflow.utils.process"
  },
  "type": "import"
 },
 "mlflow.projects.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mlflow.projects.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "mlflow.projects.run": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "mlflow.projects._logger",
    "mlflow.projects._resolve_experiment_id",
    "mlflow.projects._run",
    "mlflow.projects._wait_for",
    "mlflow.projects.json",
    "mlflow.projects.os",
    "open",
    "type"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.run_databricks": {
  "data": {
   "shadows": "mlflow.projects.databricks.run_databricks"
  },
  "type": "import"
 },
 "mlflow.projects.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mlflow.projects.submitted_run": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.projects.submitted_run.logging"
   ]
  },
  "type": "module"
 },
 "mlflow.projects.submitted_run.LocalSubmittedRun": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "mlflow.projects.submitted_run.SubmittedRun"
   ]
  },
  "type": "class"
 },
 "mlflow.projects.submitted_run.LocalSubmittedRun.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "mlflow.projects.submitted_run.LocalSubmittedRun",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.submitted_run.LocalSubmittedRun._get_status": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "mlflow.entities.RunStatus.FAILED",
    "mlflow.entities.RunStatus.FINISHED",
    "mlflow.entities.RunStatus.RUNNING"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.submitted_run.LocalSubmittedRun.cancel": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "OSError",
    "mlflow.projects.submitted_run._logger",
    "mlflow.projects.submitted_run.os",
    "mlflow.projects.submitted_run.signal"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.submitted_run.LocalSubmittedRun.get_status": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "mlflow.entities.RunStatus.to_string"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.submitted_run.LocalSubmittedRun.run_id": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.submitted_run.LocalSubmittedRun.wait": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "mlflow.projects.submitted_run.RunStatus": {
  "data": {
   "shadows": "mlflow.entities.RunStatus"
  },
  "type": "import"
 },
 "mlflow.projects.submitted_run.SubmittedRun": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.projects.submitted_run.SubmittedRun.cancel": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.submitted_run.SubmittedRun.get_status": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.submitted_run.SubmittedRun.run_id": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.submitted_run.SubmittedRun.wait": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.projects.submitted_run._logger": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "mlflow.projects.submitted_run.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "mlflow.projects.submitted_run.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.projects.submitted_run.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.projects.submitted_run.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "mlflow.projects.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "mlflow.projects.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlflow.projects.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "mlflow.projects.tracking": {
  "data": {
   "shadows": "mlflow.tracking"
  },
  "type": "import"
 },
 "mlflow.projects.urllib": {
  "data": {
   "shadows": "six.moves.urllib"
  },
  "type": "import"
 },
 "mlflow.projects.utils": {
  "data": {},
  "type": "module"
 },
 "mlflow.projects.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "mlflow.protos": {
  "data": {},
  "type": "module"
 },
 "mlflow.protos.databricks_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.EnumDescriptor",
    "google.protobuf.descriptor.EnumValueDescriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor_pb2.DESCRIPTOR",
    "google.protobuf.descriptor_pb2.EnumOptions.RegisterExtension",
    "google.protobuf.descriptor_pb2.EnumValueOptions.RegisterExtension",
    "google.protobuf.descriptor_pb2.FieldOptions.RegisterExtension",
    "google.protobuf.descriptor_pb2.MessageOptions.RegisterExtension",
    "google.protobuf.descriptor_pb2.MethodOptions.RegisterExtension",
    "google.protobuf.descriptor_pb2.ServiceOptions.RegisterExtension",
    "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "mlflow.protos.databricks_pb2.ApiVersion",
    "mlflow.protos.databricks_pb2.DESCRIPTOR",
    "mlflow.protos.databricks_pb2.DatabricksRpcOptions",
    "mlflow.protos.databricks_pb2.DatabricksServiceExceptionProto",
    "mlflow.protos.databricks_pb2.DocumentationMetadata",
    "mlflow.protos.databricks_pb2.HttpEndpoint",
    "mlflow.protos.databricks_pb2.RateLimit",
    "mlflow.protos.databricks_pb2._APIVERSION",
    "mlflow.protos.databricks_pb2._DATABRICKSRPCOPTIONS",
    "mlflow.protos.databricks_pb2._DATABRICKSSERVICEEXCEPTIONPROTO",
    "mlflow.protos.databricks_pb2._DOCUMENTATIONMETADATA",
    "mlflow.protos.databricks_pb2._ERRORCODE",
    "mlflow.protos.databricks_pb2._HTTPENDPOINT",
    "mlflow.protos.databricks_pb2._RATELIMIT",
    "mlflow.protos.databricks_pb2._VISIBILITY",
    "mlflow.protos.databricks_pb2._b",
    "mlflow.protos.databricks_pb2._sym_db",
    "mlflow.protos.databricks_pb2.enum_doc",
    "mlflow.protos.databricks_pb2.enum_value_doc",
    "mlflow.protos.databricks_pb2.enum_value_visibility",
    "mlflow.protos.databricks_pb2.field_doc",
    "mlflow.protos.databricks_pb2.json_inline",
    "mlflow.protos.databricks_pb2.json_map",
    "mlflow.protos.databricks_pb2.message_doc",
    "mlflow.protos.databricks_pb2.method_doc",
    "mlflow.protos.databricks_pb2.rpc",
    "mlflow.protos.databricks_pb2.service_doc",
    "mlflow.protos.databricks_pb2.sys",
    "mlflow.protos.databricks_pb2.validate_required",
    "mlflow.protos.databricks_pb2.visibility"
   ]
  },
  "type": "module"
 },
 "mlflow.protos.databricks_pb2.ApiVersion": {
  "data": {
   "lineno": 619
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.BAD_REQUEST": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.COULD_NOT_ACQUIRE_LOCK": {
  "data": {
   "lineno": 183
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.CUSTOMER_UNAUTHORIZED": {
  "data": {
   "lineno": 180
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.DIRECTORY_NOT_EMPTY": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.DIRECTORY_PROTECTED": {
  "data": {
   "lineno": 192
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.DRY_RUN_FAILED": {
  "data": {
   "lineno": 189
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.DatabricksRpcOptions": {
  "data": {
   "lineno": 605
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.DatabricksServiceExceptionProto": {
  "data": {
   "lineno": 640
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.DocumentationMetadata": {
  "data": {
   "lineno": 633
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.ENDPOINT_NOT_FOUND": {
  "data": {
   "lineno": 175
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.ENUM_DOC_FIELD_NUMBER": {
  "data": {
   "lineno": 267
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.ENUM_VALUE_DOC_FIELD_NUMBER": {
  "data": {
   "lineno": 283
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.ENUM_VALUE_VISIBILITY_FIELD_NUMBER": {
  "data": {
   "lineno": 275
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.ErrorCode": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.FEATURE_DISABLED": {
  "data": {
   "lineno": 179
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.FIELD_DOC_FIELD_NUMBER": {
  "data": {
   "lineno": 227
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.HttpEndpoint": {
  "data": {
   "lineno": 612
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.INTERNAL": {
  "data": {
   "lineno": 168
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.INTERNAL_ERROR": {
  "data": {
   "lineno": 170
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE": {
  "data": {
   "lineno": 174
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.INVALID_STATE": {
  "data": {
   "lineno": 177
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.INVALID_STATE_TRANSITION": {
  "data": {
   "lineno": 182
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.IO_ERROR": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.JSON_INLINE_FIELD_NUMBER": {
  "data": {
   "lineno": 211
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.JSON_MAP_FIELD_NUMBER": {
  "data": {
   "lineno": 219
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.MALFORMED_REQUEST": {
  "data": {
   "lineno": 176
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.MAX_BLOCK_SIZE_EXCEEDED": {
  "data": {
   "lineno": 187
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.MAX_NOTEBOOK_SIZE_EXCEEDED": {
  "data": {
   "lineno": 193
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.MAX_READ_SIZE_EXCEEDED": {
  "data": {
   "lineno": 188
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.MESSAGE_DOC_FIELD_NUMBER": {
  "data": {
   "lineno": 251
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.METHOD_DOC_FIELD_NUMBER": {
  "data": {
   "lineno": 243
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.PERMISSION_DENIED": {
  "data": {
   "lineno": 178
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.PUBLIC": {
  "data": {
   "lineno": 167
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.PUBLIC_UNDOCUMENTED": {
  "data": {
   "lineno": 169
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.QUOTA_EXCEEDED": {
  "data": {
   "lineno": 186
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.REQUEST_LIMIT_EXCEEDED": {
  "data": {
   "lineno": 181
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS": {
  "data": {
   "lineno": 184
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST": {
  "data": {
   "lineno": 185
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.RESOURCE_LIMIT_EXCEEDED": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.RPC_FIELD_NUMBER": {
  "data": {
   "lineno": 235
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.RateLimit": {
  "data": {
   "lineno": 626
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.SERVICE_DOC_FIELD_NUMBER": {
  "data": {
   "lineno": 259
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.TEMPORARILY_UNAVAILABLE": {
  "data": {
   "lineno": 171
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.VALIDATE_REQUIRED_FIELD_NUMBER": {
  "data": {
   "lineno": 203
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.VISIBILITY_FIELD_NUMBER": {
  "data": {
   "lineno": 195
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.Visibility": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2._APIVERSION": {
  "data": {
   "lineno": 397
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2._DATABRICKSRPCOPTIONS": {
  "data": {
   "lineno": 293
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2._DATABRICKSSERVICEEXCEPTIONPROTO": {
  "data": {
   "lineno": 532
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2._DOCUMENTATIONMETADATA": {
  "data": {
   "lineno": 473
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2._ERRORCODE": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2._HTTPENDPOINT": {
  "data": {
   "lineno": 352
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2._RATELIMIT": {
  "data": {
   "lineno": 435
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2._VISIBILITY": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "mlflow.protos.databricks_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "mlflow.protos.databricks_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "mlflow.protos.databricks_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "mlflow.protos.databricks_pb2.enum_doc": {
  "data": {
   "lineno": 268
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.enum_type_wrapper": {
  "data": {
   "shadows": "google.protobuf.internal.enum_type_wrapper"
  },
  "type": "import"
 },
 "mlflow.protos.databricks_pb2.enum_value_doc": {
  "data": {
   "lineno": 284
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.enum_value_visibility": {
  "data": {
   "lineno": 276
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.field_doc": {
  "data": {
   "lineno": 228
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.google_dot_protobuf_dot_descriptor__pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "mlflow.protos.databricks_pb2.json_inline": {
  "data": {
   "lineno": 212
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.json_map": {
  "data": {
   "lineno": 220
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.message_doc": {
  "data": {
   "lineno": 252
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.method_doc": {
  "data": {
   "lineno": 244
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.rpc": {
  "data": {
   "lineno": 236
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.scalapb_dot_scalapb__pb2": {
  "data": {
   "shadows": "scalapb_pb2"
  },
  "type": "import"
 },
 "mlflow.protos.databricks_pb2.service_doc": {
  "data": {
   "lineno": 260
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlflow.protos.databricks_pb2.validate_required": {
  "data": {
   "lineno": 204
  },
  "type": "constant"
 },
 "mlflow.protos.databricks_pb2.visibility": {
  "data": {
   "lineno": 196
  },
  "type": "constant"
 },
 "mlflow.protos.scalapb": {
  "data": {},
  "type": "module"
 },
 "mlflow.protos.scalapb.scalapb_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor_pb2.DESCRIPTOR",
    "google.protobuf.descriptor_pb2.FieldOptions.RegisterExtension",
    "google.protobuf.descriptor_pb2.FileOptions.RegisterExtension",
    "google.protobuf.descriptor_pb2.MessageOptions.RegisterExtension",
    "google.protobuf.message",
    "google.protobuf.message.Message",
    "google.protobuf.message.message_type",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "mlflow.protos.scalapb.scalapb_pb2.DESCRIPTOR",
    "mlflow.protos.scalapb.scalapb_pb2.FieldOptions",
    "mlflow.protos.scalapb.scalapb_pb2.MessageOptions",
    "mlflow.protos.scalapb.scalapb_pb2.ScalaPbOptions",
    "mlflow.protos.scalapb.scalapb_pb2._FIELDOPTIONS",
    "mlflow.protos.scalapb.scalapb_pb2._MESSAGEOPTIONS",
    "mlflow.protos.scalapb.scalapb_pb2._SCALAPBOPTIONS",
    "mlflow.protos.scalapb.scalapb_pb2._b",
    "mlflow.protos.scalapb.scalapb_pb2._sym_db",
    "mlflow.protos.scalapb.scalapb_pb2.field",
    "mlflow.protos.scalapb.scalapb_pb2.options",
    "mlflow.protos.scalapb.scalapb_pb2.sys"
   ]
  },
  "type": "module"
 },
 "mlflow.protos.scalapb.scalapb_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mlflow.protos.scalapb.scalapb_pb2.FIELD_FIELD_NUMBER": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mlflow.protos.scalapb.scalapb_pb2.FieldOptions": {
  "data": {
   "lineno": 182
  },
  "type": "constant"
 },
 "mlflow.protos.scalapb.scalapb_pb2.MESSAGE_FIELD_NUMBER": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mlflow.protos.scalapb.scalapb_pb2.MessageOptions": {
  "data": {
   "lineno": 175
  },
  "type": "constant"
 },
 "mlflow.protos.scalapb.scalapb_pb2.OPTIONS_FIELD_NUMBER": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mlflow.protos.scalapb.scalapb_pb2.ScalaPbOptions": {
  "data": {
   "lineno": 168
  },
  "type": "constant"
 },
 "mlflow.protos.scalapb.scalapb_pb2._FIELDOPTIONS": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "mlflow.protos.scalapb.scalapb_pb2._MESSAGEOPTIONS": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "mlflow.protos.scalapb.scalapb_pb2._SCALAPBOPTIONS": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "mlflow.protos.scalapb.scalapb_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "mlflow.protos.scalapb.scalapb_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "mlflow.protos.scalapb.scalapb_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "mlflow.protos.scalapb.scalapb_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "mlflow.protos.scalapb.scalapb_pb2._sym_db": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mlflow.protos.scalapb.scalapb_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "mlflow.protos.scalapb.scalapb_pb2.field": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mlflow.protos.scalapb.scalapb_pb2.google_dot_protobuf_dot_descriptor__pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "mlflow.protos.scalapb.scalapb_pb2.message": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mlflow.protos.scalapb.scalapb_pb2.options": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mlflow.protos.scalapb.scalapb_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlflow.protos.service_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "float",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.EnumDescriptor",
    "google.protobuf.descriptor.EnumValueDescriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor.MethodDescriptor",
    "google.protobuf.descriptor.ServiceDescriptor",
    "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.service.Service",
    "google.protobuf.service_reflection.GeneratedServiceStubType",
    "google.protobuf.service_reflection.GeneratedServiceType",
    "google.protobuf.symbol_database.Default",
    "mlflow.protos.service_pb2.CreateExperiment",
    "mlflow.protos.service_pb2.CreateRun",
    "mlflow.protos.service_pb2.DESCRIPTOR",
    "mlflow.protos.service_pb2.DeleteExperiment",
    "mlflow.protos.service_pb2.DeleteRun",
    "mlflow.protos.service_pb2.Experiment",
    "mlflow.protos.service_pb2.FileInfo",
    "mlflow.protos.service_pb2.GetExperiment",
    "mlflow.protos.service_pb2.GetMetricHistory",
    "mlflow.protos.service_pb2.GetRun",
    "mlflow.protos.service_pb2.ListArtifacts",
    "mlflow.protos.service_pb2.ListExperiments",
    "mlflow.protos.service_pb2.LogBatch",
    "mlflow.protos.service_pb2.LogMetric",
    "mlflow.protos.service_pb2.LogParam",
    "mlflow.protos.service_pb2.Metric",
    "mlflow.protos.service_pb2.MlflowService",
    "mlflow.protos.service_pb2.Param",
    "mlflow.protos.service_pb2.RestoreExperiment",
    "mlflow.protos.service_pb2.RestoreRun",
    "mlflow.protos.service_pb2.Run",
    "mlflow.protos.service_pb2.RunData",
    "mlflow.protos.service_pb2.RunInfo",
    "mlflow.protos.service_pb2.RunTag",
    "mlflow.protos.service_pb2.SearchRuns",
    "mlflow.protos.service_pb2.SetTag",
    "mlflow.protos.service_pb2.UpdateExperiment",
    "mlflow.protos.service_pb2.UpdateRun",
    "mlflow.protos.service_pb2._CREATEEXPERIMENT",
    "mlflow.protos.service_pb2._CREATEEXPERIMENT_RESPONSE",
    "mlflow.protos.service_pb2._CREATERUN",
    "mlflow.protos.service_pb2._CREATERUN_RESPONSE",
    "mlflow.protos.service_pb2._DELETEEXPERIMENT",
    "mlflow.protos.service_pb2._DELETEEXPERIMENT_RESPONSE",
    "mlflow.protos.service_pb2._DELETERUN",
    "mlflow.protos.service_pb2._DELETERUN_RESPONSE",
    "mlflow.protos.service_pb2._EXPERIMENT",
    "mlflow.protos.service_pb2._FILEINFO",
    "mlflow.protos.service_pb2._GETEXPERIMENT",
    "mlflow.protos.service_pb2._GETEXPERIMENT_RESPONSE",
    "mlflow.protos.service_pb2._GETMETRICHISTORY",
    "mlflow.protos.service_pb2._GETMETRICHISTORY_RESPONSE",
    "mlflow.protos.service_pb2._GETRUN",
    "mlflow.protos.service_pb2._GETRUN_RESPONSE",
    "mlflow.protos.service_pb2._LISTARTIFACTS",
    "mlflow.protos.service_pb2._LISTARTIFACTS_RESPONSE",
    "mlflow.protos.service_pb2._LISTEXPERIMENTS",
    "mlflow.protos.service_pb2._LISTEXPERIMENTS_RESPONSE",
    "mlflow.protos.service_pb2._LOGBATCH",
    "mlflow.protos.service_pb2._LOGBATCH_RESPONSE",
    "mlflow.protos.service_pb2._LOGMETRIC",
    "mlflow.protos.service_pb2._LOGMETRIC_RESPONSE",
    "mlflow.protos.service_pb2._LOGPARAM",
    "mlflow.protos.service_pb2._LOGPARAM_RESPONSE",
    "mlflow.protos.service_pb2._METRIC",
    "mlflow.protos.service_pb2._MLFLOWSERVICE",
    "mlflow.protos.service_pb2._PARAM",
    "mlflow.protos.service_pb2._RESTOREEXPERIMENT",
    "mlflow.protos.service_pb2._RESTOREEXPERIMENT_RESPONSE",
    "mlflow.protos.service_pb2._RESTORERUN",
    "mlflow.protos.service_pb2._RESTORERUN_RESPONSE",
    "mlflow.protos.service_pb2._RUN",
    "mlflow.protos.service_pb2._RUNDATA",
    "mlflow.protos.service_pb2._RUNINFO",
    "mlflow.protos.service_pb2._RUNSTATUS",
    "mlflow.protos.service_pb2._RUNTAG",
    "mlflow.protos.service_pb2._SEARCHRUNS",
    "mlflow.protos.service_pb2._SEARCHRUNS_RESPONSE",
    "mlflow.protos.service_pb2._SETTAG",
    "mlflow.protos.service_pb2._SETTAG_RESPONSE",
    "mlflow.protos.service_pb2._SOURCETYPE",
    "mlflow.protos.service_pb2._UPDATEEXPERIMENT",
    "mlflow.protos.service_pb2._UPDATEEXPERIMENT_RESPONSE",
    "mlflow.protos.service_pb2._UPDATERUN",
    "mlflow.protos.service_pb2._UPDATERUN_RESPONSE",
    "mlflow.protos.service_pb2._VIEWTYPE",
    "mlflow.protos.service_pb2._b",
    "mlflow.protos.service_pb2._sym_db",
    "mlflow.protos.service_pb2.sys"
   ]
  },
  "type": "module"
 },
 "mlflow.protos.service_pb2.ACTIVE_ONLY": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.ALL": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.CreateExperiment": {
  "data": {
   "lineno": 1931
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.CreateRun": {
  "data": {
   "lineno": 2021
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.DELETED_ONLY": {
  "data": {
   "lineno": 129
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.DeleteExperiment": {
  "data": {
   "lineno": 1976
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.DeleteRun": {
  "data": {
   "lineno": 2051
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.Experiment": {
  "data": {
   "lineno": 1924
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.FAILED": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.FINISHED": {
  "data": {
   "lineno": 138
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.FileInfo": {
  "data": {
   "lineno": 2171
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.GetExperiment": {
  "data": {
   "lineno": 1961
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.GetMetricHistory": {
  "data": {
   "lineno": 2178
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.GetRun": {
  "data": {
   "lineno": 2126
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.JOB": {
  "data": {
   "lineno": 132
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.KILLED": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.LOCAL": {
  "data": {
   "lineno": 134
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.ListArtifacts": {
  "data": {
   "lineno": 2156
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.ListExperiments": {
  "data": {
   "lineno": 1946
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.LogBatch": {
  "data": {
   "lineno": 2193
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.LogMetric": {
  "data": {
   "lineno": 2081
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.LogParam": {
  "data": {
   "lineno": 2096
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.Metric": {
  "data": {
   "lineno": 1882
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.MlflowService": {
  "data": {
   "lineno": 2420
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.MlflowService_Stub": {
  "data": {
   "lineno": 2425
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.NOTEBOOK": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.PROJECT": {
  "data": {
   "lineno": 133
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.Param": {
  "data": {
   "lineno": 1889
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.RUNNING": {
  "data": {
   "lineno": 136
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.RestoreExperiment": {
  "data": {
   "lineno": 1991
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.RestoreRun": {
  "data": {
   "lineno": 2066
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.Run": {
  "data": {
   "lineno": 1896
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.RunData": {
  "data": {
   "lineno": 1903
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.RunInfo": {
  "data": {
   "lineno": 1917
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.RunStatus": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.RunTag": {
  "data": {
   "lineno": 1910
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.SCHEDULED": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.SearchRuns": {
  "data": {
   "lineno": 2141
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.SetTag": {
  "data": {
   "lineno": 2111
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.SourceType": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.UNKNOWN": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.UpdateExperiment": {
  "data": {
   "lineno": 2006
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.UpdateRun": {
  "data": {
   "lineno": 2036
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2.ViewType": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._CREATEEXPERIMENT": {
  "data": {
   "lineno": 538
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._CREATEEXPERIMENT_RESPONSE": {
  "data": {
   "lineno": 508
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._CREATERUN": {
  "data": {
   "lineno": 904
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._CREATERUN_RESPONSE": {
  "data": {
   "lineno": 874
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._DELETEEXPERIMENT": {
  "data": {
   "lineno": 728
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._DELETEEXPERIMENT_RESPONSE": {
  "data": {
   "lineno": 705
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._DELETERUN": {
  "data": {
   "lineno": 1061
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._DELETERUN_RESPONSE": {
  "data": {
   "lineno": 1038
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._EXPERIMENT": {
  "data": {
   "lineno": 442
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._FILEINFO": {
  "data": {
   "lineno": 1617
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._GETEXPERIMENT": {
  "data": {
   "lineno": 674
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._GETEXPERIMENT_RESPONSE": {
  "data": {
   "lineno": 637
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._GETMETRICHISTORY": {
  "data": {
   "lineno": 1692
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._GETMETRICHISTORY_RESPONSE": {
  "data": {
   "lineno": 1662
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._GETRUN": {
  "data": {
   "lineno": 1415
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._GETRUN_RESPONSE": {
  "data": {
   "lineno": 1385
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._LISTARTIFACTS": {
  "data": {
   "lineno": 1572
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._LISTARTIFACTS_RESPONSE": {
  "data": {
   "lineno": 1535
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._LISTEXPERIMENTS": {
  "data": {
   "lineno": 606
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._LISTEXPERIMENTS_RESPONSE": {
  "data": {
   "lineno": 576
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._LOGBATCH": {
  "data": {
   "lineno": 1760
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._LOGBATCH_RESPONSE": {
  "data": {
   "lineno": 1737
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._LOGMETRIC": {
  "data": {
   "lineno": 1169
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._LOGMETRIC_RESPONSE": {
  "data": {
   "lineno": 1146
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._LOGPARAM": {
  "data": {
   "lineno": 1258
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._LOGPARAM_RESPONSE": {
  "data": {
   "lineno": 1235
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._METRIC": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._MLFLOWSERVICE": {
  "data": {
   "lineno": 2244
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._PARAM": {
  "data": {
   "lineno": 196
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._RESTOREEXPERIMENT": {
  "data": {
   "lineno": 782
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._RESTOREEXPERIMENT_RESPONSE": {
  "data": {
   "lineno": 759
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._RESTORERUN": {
  "data": {
   "lineno": 1115
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._RESTORERUN_RESPONSE": {
  "data": {
   "lineno": 1092
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._RUN": {
  "data": {
   "lineno": 234
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._RUNDATA": {
  "data": {
   "lineno": 272
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._RUNINFO": {
  "data": {
   "lineno": 355
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._RUNSTATUS": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._RUNTAG": {
  "data": {
   "lineno": 317
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._SEARCHRUNS": {
  "data": {
   "lineno": 1483
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._SEARCHRUNS_RESPONSE": {
  "data": {
   "lineno": 1453
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._SETTAG": {
  "data": {
   "lineno": 1333
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._SETTAG_RESPONSE": {
  "data": {
   "lineno": 1310
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._SOURCETYPE": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._UPDATEEXPERIMENT": {
  "data": {
   "lineno": 836
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._UPDATEEXPERIMENT_RESPONSE": {
  "data": {
   "lineno": 813
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._UPDATERUN": {
  "data": {
   "lineno": 986
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._UPDATERUN_RESPONSE": {
  "data": {
   "lineno": 956
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._VIEWTYPE": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "mlflow.protos.service_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "mlflow.protos.service_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "mlflow.protos.service_pb2._service": {
  "data": {
   "shadows": "google.protobuf.service"
  },
  "type": "import"
 },
 "mlflow.protos.service_pb2._sym_db": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mlflow.protos.service_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "mlflow.protos.service_pb2.databricks__pb2": {
  "data": {
   "shadows": "databricks_pb2"
  },
  "type": "import"
 },
 "mlflow.protos.service_pb2.enum_type_wrapper": {
  "data": {
   "shadows": "google.protobuf.internal.enum_type_wrapper"
  },
  "type": "import"
 },
 "mlflow.protos.service_pb2.scalapb_dot_scalapb__pb2": {
  "data": {
   "shadows": "scalapb_pb2"
  },
  "type": "import"
 },
 "mlflow.protos.service_pb2.service_reflection": {
  "data": {
   "shadows": "google.protobuf.service_reflection"
  },
  "type": "import"
 },
 "mlflow.protos.service_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlflow.pyfunc": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.pyfunc.logging"
   ]
  },
  "type": "module"
 },
 "mlflow.pyfunc.ArrayType": {
  "data": {
   "shadows": "pyspark.sql.types.ArrayType"
  },
  "type": "import"
 },
 "mlflow.pyfunc.CODE": {
  "data": {
   "lineno": 214
  },
  "type": "constant"
 },
 "mlflow.pyfunc.DATA": {
  "data": {
   "lineno": 215
  },
  "type": "constant"
 },
 "mlflow.pyfunc.DataType": {
  "data": {
   "shadows": "pyspark.sql.types.DataType"
  },
  "type": "import"
 },
 "mlflow.pyfunc.DoubleType": {
  "data": {
   "shadows": "pyspark.sql.types.DoubleType"
  },
  "type": "import"
 },
 "mlflow.pyfunc.ENV": {
  "data": {
   "lineno": 216
  },
  "type": "constant"
 },
 "mlflow.pyfunc.FLAVOR_NAME": {
  "data": {
   "lineno": 212
  },
  "type": "constant"
 },
 "mlflow.pyfunc.FloatType": {
  "data": {
   "shadows": "pyspark.sql.types.FloatType"
  },
  "type": "import"
 },
 "mlflow.pyfunc.INVALID_PARAMETER_VALUE": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  },
  "type": "import"
 },
 "mlflow.pyfunc.IntegerType": {
  "data": {
   "shadows": "pyspark.sql.types.IntegerType"
  },
  "type": "import"
 },
 "mlflow.pyfunc.LongType": {
  "data": {
   "shadows": "pyspark.sql.types.LongType"
  },
  "type": "import"
 },
 "mlflow.pyfunc.MAIN": {
  "data": {
   "lineno": 213
  },
  "type": "constant"
 },
 "mlflow.pyfunc.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.pyfunc.Model": {
  "data": {
   "shadows": "mlflow.models.Model"
  },
  "type": "import"
 },
 "mlflow.pyfunc.PYTHON_VERSION": {
  "data": {
   "shadows": "mlflow.utils.PYTHON_VERSION"
  },
  "type": "import"
 },
 "mlflow.pyfunc.PY_VERSION": {
  "data": {
   "lineno": 217
  },
  "type": "constant"
 },
 "mlflow.pyfunc.PythonModel": {
  "data": {
   "shadows": "mlflow.pyfunc.model.PythonModel"
  },
  "type": "import"
 },
 "mlflow.pyfunc.PythonModelContext": {
  "data": {
   "shadows": "mlflow.pyfunc.model.PythonModelContext"
  },
  "type": "import"
 },
 "mlflow.pyfunc.RESOURCE_ALREADY_EXISTS": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS"
  },
  "type": "import"
 },
 "mlflow.pyfunc.SparkModelCache": {
  "data": {
   "shadows": "mlflow.pyfunc.spark_model_cache.SparkModelCache"
  },
  "type": "import"
 },
 "mlflow.pyfunc.StringType": {
  "data": {
   "shadows": "pyspark.sql.types.StringType"
  },
  "type": "import"
 },
 "mlflow.pyfunc.TempDir": {
  "data": {
   "shadows": "mlflow.utils.file_utils.TempDir"
  },
  "type": "import"
 },
 "mlflow.pyfunc._copy_file_or_tree": {
  "data": {
   "shadows": "mlflow.utils.file_utils._copy_file_or_tree"
  },
  "type": "import"
 },
 "mlflow.pyfunc._download_artifact_from_uri": {
  "data": {
   "shadows": "mlflow.tracking.artifact_utils._download_artifact_from_uri"
  },
  "type": "import"
 },
 "mlflow.pyfunc._get_flavor_configuration": {
  "data": {
   "shadows": "mlflow.utils.model_utils._get_flavor_configuration"
  },
  "type": "import"
 },
 "mlflow.pyfunc._load_model_env": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "mlflow.pyfunc.ENV",
    "mlflow.pyfunc.FLAVOR_NAME",
    "mlflow.utils.model_utils._get_flavor_configuration"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc._logger": {
  "data": {
   "lineno": 219
  },
  "type": "constant"
 },
 "mlflow.pyfunc._parse_datatype_string": {
  "data": {
   "shadows": "pyspark.sql.types._parse_datatype_string"
  },
  "type": "import"
 },
 "mlflow.pyfunc._save_model_with_loader_module_and_data_path": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.models.Model",
    "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS",
    "mlflow.pyfunc.mlflow",
    "mlflow.pyfunc.os",
    "mlflow.pyfunc.shutil",
    "mlflow.utils.file_utils._copy_file_or_tree"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc._warn_potentially_incompatible_py_version_if_necessary": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "mlflow.pyfunc._logger",
    "mlflow.utils.PYTHON_VERSION",
    "mlflow.utils.get_major_minor_py_version"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc.active_run": {
  "data": {
   "shadows": "mlflow.tracking.fluent.active_run"
  },
  "type": "import"
 },
 "mlflow.pyfunc.add_to_model": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "copy.deepcopy",
    "mlflow.pyfunc.CODE",
    "mlflow.pyfunc.DATA",
    "mlflow.pyfunc.ENV",
    "mlflow.pyfunc.FLAVOR_NAME",
    "mlflow.pyfunc.MAIN",
    "mlflow.pyfunc.PY_VERSION",
    "mlflow.utils.PYTHON_VERSION"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mlflow.pyfunc.deprecated": {
  "data": {
   "shadows": "mlflow.utils.deprecated"
  },
  "type": "import"
 },
 "mlflow.pyfunc.get_default_conda_env": {
  "data": {
   "shadows": "mlflow.pyfunc.model.get_default_conda_env"
  },
  "type": "import"
 },
 "mlflow.pyfunc.get_major_minor_py_version": {
  "data": {
   "shadows": "mlflow.utils.get_major_minor_py_version"
  },
  "type": "import"
 },
 "mlflow.pyfunc.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "mlflow.pyfunc.load_model": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "mlflow.pyfunc.load_pyfunc"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc.load_pyfunc": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "mlflow.pyfunc.CODE",
    "mlflow.pyfunc.DATA",
    "mlflow.pyfunc.FLAVOR_NAME",
    "mlflow.pyfunc.MAIN",
    "mlflow.pyfunc.PY_VERSION",
    "mlflow.pyfunc._warn_potentially_incompatible_py_version_if_necessary",
    "mlflow.pyfunc.importlib",
    "mlflow.pyfunc.mlflow",
    "mlflow.pyfunc.os",
    "mlflow.tracking.artifact_utils._download_artifact_from_uri",
    "mlflow.utils.deprecated",
    "mlflow.utils.model_utils._get_flavor_configuration"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc.loader_template": {
  "data": {
   "lineno": 703
  },
  "type": "constant"
 },
 "mlflow.pyfunc.log_artifacts": {
  "data": {
   "shadows": "mlflow.tracking.fluent.log_artifacts"
  },
  "type": "import"
 },
 "mlflow.pyfunc.log_model": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "mlflow.models.Model",
    "mlflow.pyfunc.save_model",
    "mlflow.tracking.fluent.active_run",
    "mlflow.tracking.fluent.log_artifacts",
    "mlflow.utils.file_utils.TempDir"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.pyfunc.mlflow": {
  "data": {
   "shadows": "mlflow"
  },
  "type": "import"
 },
 "mlflow.pyfunc.mlflow.pyfunc.model": {
  "data": {
   "shadows": "mlflow.pyfunc.model"
  },
  "type": "import"
 },
 "mlflow.pyfunc.mlflow.pyfunc.utils": {
  "data": {
   "shadows": "mlflow.pyfunc.utils"
  },
  "type": "import"
 },
 "mlflow.pyfunc.model": {
  "data": {},
  "type": "module"
 },
 "mlflow.pyfunc.model.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "mlflow.pyfunc.model.CONFIG_KEY_ARTIFACTS": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mlflow.pyfunc.model.CONFIG_KEY_ARTIFACT_RELATIVE_PATH": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mlflow.pyfunc.model.CONFIG_KEY_ARTIFACT_URI": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mlflow.pyfunc.model.CONFIG_KEY_CLOUDPICKLE_VERSION": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mlflow.pyfunc.model.CONFIG_KEY_PYTHON_MODEL": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mlflow.pyfunc.model.INVALID_PARAMETER_VALUE": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  },
  "type": "import"
 },
 "mlflow.pyfunc.model.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.pyfunc.model.Model": {
  "data": {
   "shadows": "mlflow.models.Model"
  },
  "type": "import"
 },
 "mlflow.pyfunc.model.PythonModel": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.pyfunc.model.PythonModel.load_context": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "mlflow.pyfunc.model.PythonModel.predict": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc.model.PythonModelContext": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.pyfunc.model.PythonModelContext.__init__": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "mlflow.pyfunc.model.PythonModelContext.artifacts": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc.model.RESOURCE_ALREADY_EXISTS": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS"
  },
  "type": "import"
 },
 "mlflow.pyfunc.model.TempDir": {
  "data": {
   "shadows": "mlflow.utils.file_utils.TempDir"
  },
  "type": "import"
 },
 "mlflow.pyfunc.model._PythonModelPyfuncWrapper": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.pyfunc.model._PythonModelPyfuncWrapper.__init__": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "mlflow.pyfunc.model._PythonModelPyfuncWrapper.predict": {
  "data": {
   "lineno": 242
  },
  "type": "function"
 },
 "mlflow.pyfunc.model._copy_file_or_tree": {
  "data": {
   "shadows": "mlflow.utils.file_utils._copy_file_or_tree"
  },
  "type": "import"
 },
 "mlflow.pyfunc.model._download_artifact_from_uri": {
  "data": {
   "shadows": "mlflow.tracking.artifact_utils._download_artifact_from_uri"
  },
  "type": "import"
 },
 "mlflow.pyfunc.model._get_flavor_configuration": {
  "data": {
   "shadows": "mlflow.utils.model_utils._get_flavor_configuration"
  },
  "type": "import"
 },
 "mlflow.pyfunc.model._load_pyfunc": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.pyfunc.model.CONFIG_KEY_ARTIFACTS",
    "mlflow.pyfunc.model.CONFIG_KEY_ARTIFACT_RELATIVE_PATH",
    "mlflow.pyfunc.model.CONFIG_KEY_CLOUDPICKLE_VERSION",
    "mlflow.pyfunc.model.CONFIG_KEY_PYTHON_MODEL",
    "mlflow.pyfunc.model.PythonModelContext",
    "mlflow.pyfunc.model._PythonModelPyfuncWrapper",
    "mlflow.pyfunc.model.cloudpickle",
    "mlflow.pyfunc.model.os",
    "mlflow.utils.model_utils._get_flavor_configuration",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc.model._mlflow_conda_env": {
  "data": {
   "shadows": "mlflow.utils.environment._mlflow_conda_env"
  },
  "type": "import"
 },
 "mlflow.pyfunc.model._save_model_with_class_artifacts_params": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "__name__",
    "dict",
    "isinstance",
    "mlflow.exceptions.MlflowException",
    "mlflow.models.Model",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS",
    "mlflow.pyfunc.model.CONFIG_KEY_ARTIFACTS",
    "mlflow.pyfunc.model.CONFIG_KEY_ARTIFACT_RELATIVE_PATH",
    "mlflow.pyfunc.model.CONFIG_KEY_ARTIFACT_URI",
    "mlflow.pyfunc.model.CONFIG_KEY_CLOUDPICKLE_VERSION",
    "mlflow.pyfunc.model.CONFIG_KEY_PYTHON_MODEL",
    "mlflow.pyfunc.model.PythonModel",
    "mlflow.pyfunc.model.cloudpickle",
    "mlflow.pyfunc.model.get_default_conda_env",
    "mlflow.pyfunc.model.os",
    "mlflow.pyfunc.model.shutil",
    "mlflow.pyfunc.model.yaml",
    "mlflow.tracking.artifact_utils._download_artifact_from_uri",
    "mlflow.utils.file_utils.TempDir",
    "mlflow.utils.file_utils._copy_file_or_tree",
    "open",
    "type"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc.model.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "mlflow.pyfunc.model.cloudpickle": {
  "data": {
   "shadows": "cloudpickle"
  },
  "type": "import"
 },
 "mlflow.pyfunc.model.get_default_conda_env": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "mlflow.pyfunc.model.cloudpickle",
    "mlflow.utils.environment._mlflow_conda_env"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc.model.mlflow.pyfunc": {
  "data": {
   "shadows": "mlflow.pyfunc"
  },
  "type": "import"
 },
 "mlflow.pyfunc.model.mlflow.utils": {
  "data": {
   "shadows": "mlflow.utils"
  },
  "type": "import"
 },
 "mlflow.pyfunc.model.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.pyfunc.model.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mlflow.pyfunc.model.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "mlflow.pyfunc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlflow.pyfunc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.pyfunc.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "mlflow.pyfunc.pandas_udf": {
  "data": {
   "shadows": "pyspark.sql.functions.pandas_udf"
  },
  "type": "import"
 },
 "mlflow.pyfunc.save_model": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "any",
    "mlflow.exceptions.MlflowException",
    "mlflow.models.Model",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.pyfunc._save_model_with_loader_module_and_data_path",
    "mlflow.pyfunc.mlflow"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc.scoring_server.wsgi": {
  "data": {
   "symbols_in_volume": [
    "mlflow.pyfunc.load_model",
    "mlflow.pyfunc.scoring_server._SERVER_MODEL_PATH",
    "mlflow.pyfunc.scoring_server.init",
    "mlflow.pyfunc.scoring_server.wsgi.os"
   ]
  },
  "type": "module"
 },
 "mlflow.pyfunc.scoring_server.wsgi.app": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "mlflow.pyfunc.scoring_server.wsgi.load_model": {
  "data": {
   "shadows": "mlflow.pyfunc.load_model"
  },
  "type": "import"
 },
 "mlflow.pyfunc.scoring_server.wsgi.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.pyfunc.scoring_server.wsgi.scoring_server": {
  "data": {
   "shadows": "mlflow.pyfunc.scoring_server"
  },
  "type": "import"
 },
 "mlflow.pyfunc.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mlflow.pyfunc.spark_model_cache": {
  "data": {},
  "type": "module"
 },
 "mlflow.pyfunc.spark_model_cache.SparkFiles": {
  "data": {
   "shadows": "pyspark.files.SparkFiles"
  },
  "type": "import"
 },
 "mlflow.pyfunc.spark_model_cache.SparkModelCache": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.pyfunc.spark_model_cache.SparkModelCache.__init__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "mlflow.pyfunc.spark_model_cache.SparkModelCache.add_local_model": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "mlflow.pyfunc.spark_model_cache.shutil",
    "mlflow.pyfunc.spark_model_cache.tempfile",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc.spark_model_cache.SparkModelCache.get_or_load": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "mlflow.pyfunc.load_pyfunc",
    "mlflow.pyfunc.spark_model_cache.SparkModelCache",
    "mlflow.pyfunc.spark_model_cache.os",
    "mlflow.pyfunc.spark_model_cache.tempfile",
    "mlflow.pyfunc.spark_model_cache.zipfile",
    "pyspark.files.SparkFiles.get",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc.spark_model_cache.load_pyfunc": {
  "data": {
   "shadows": "mlflow.pyfunc.load_pyfunc"
  },
  "type": "import"
 },
 "mlflow.pyfunc.spark_model_cache.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.pyfunc.spark_model_cache.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mlflow.pyfunc.spark_model_cache.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "mlflow.pyfunc.spark_model_cache.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "mlflow.pyfunc.spark_udf": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "any",
    "isinstance",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.pyfunc.spark_model_cache.SparkModelCache.add_local_model",
    "mlflow.tracking.artifact_utils._download_artifact_from_uri",
    "pyspark.sql.functions.pandas_udf",
    "pyspark.sql.types.ArrayType",
    "pyspark.sql.types.DataType",
    "pyspark.sql.types.DoubleType",
    "pyspark.sql.types.FloatType",
    "pyspark.sql.types.IntegerType",
    "pyspark.sql.types.LongType",
    "pyspark.sql.types.StringType",
    "pyspark.sql.types._parse_datatype_string",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc.spark_udf.predict": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.pyfunc.pandas",
    "mlflow.pyfunc.spark_model_cache.SparkModelCache.get_or_load",
    "numpy.byte",
    "numpy.float32",
    "numpy.float64",
    "numpy.int",
    "numpy.int32",
    "numpy.long",
    "numpy.number",
    "numpy.short",
    "numpy.ubyte",
    "numpy.ushort",
    "pyspark.sql.types.ArrayType",
    "pyspark.sql.types.DoubleType",
    "pyspark.sql.types.FloatType",
    "pyspark.sql.types.IntegerType",
    "pyspark.sql.types.LongType",
    "pyspark.sql.types.StringType",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc.utils": {
  "data": {},
  "type": "module"
 },
 "mlflow.pyfunc.utils._add_code_to_system_path": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "mlflow.pyfunc.utils._get_code_dirs",
    "mlflow.pyfunc.utils.sys"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc.utils._get_code_dirs": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "mlflow.pyfunc.utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.pyfunc.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.pyfunc.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlflow.pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.pytorch.logging"
   ]
  },
  "type": "module"
 },
 "mlflow.pytorch.FLAVOR_NAME": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mlflow.pytorch.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.pytorch.Model": {
  "data": {
   "shadows": "mlflow.models.Model"
  },
  "type": "import"
 },
 "mlflow.pytorch.RESOURCE_DOES_NOT_EXIST": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST"
  },
  "type": "import"
 },
 "mlflow.pytorch._PICKLE_MODULE_INFO_FILE_NAME": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mlflow.pytorch._PyTorchWrapper": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.pytorch._PyTorchWrapper.__init__": {
  "data": {
   "lineno": 362
  },
  "type": "function"
 },
 "mlflow.pytorch._PyTorchWrapper.predict": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "mlflow.pytorch.torch",
    "numpy.float32",
    "pandas.DataFrame",
    "type"
   ]
  },
  "type": "function"
 },
 "mlflow.pytorch._SERIALIZED_TORCH_MODEL_FILE_NAME": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mlflow.pytorch._copy_file_or_tree": {
  "data": {
   "shadows": "mlflow.utils.file_utils._copy_file_or_tree"
  },
  "type": "import"
 },
 "mlflow.pytorch._download_artifact_from_uri": {
  "data": {
   "shadows": "mlflow.tracking.artifact_utils._download_artifact_from_uri"
  },
  "type": "import"
 },
 "mlflow.pytorch._get_flavor_configuration": {
  "data": {
   "shadows": "mlflow.utils.model_utils._get_flavor_configuration"
  },
  "type": "import"
 },
 "mlflow.pytorch._load_model": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "ImportError",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.pytorch._PICKLE_MODULE_INFO_FILE_NAME",
    "mlflow.pytorch._logger",
    "mlflow.pytorch.importlib",
    "mlflow.pytorch.os",
    "mlflow.pytorch.torch",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.pytorch._load_pyfunc": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "mlflow.pytorch._PyTorchWrapper",
    "mlflow.pytorch._load_model"
   ]
  },
  "type": "function"
 },
 "mlflow.pytorch._logger": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mlflow.pytorch._mlflow_conda_env": {
  "data": {
   "shadows": "mlflow.utils.environment._mlflow_conda_env"
  },
  "type": "import"
 },
 "mlflow.pytorch.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "mlflow.pytorch.cloudpickle": {
  "data": {
   "shadows": "cloudpickle"
  },
  "type": "import"
 },
 "mlflow.pytorch.get_default_conda_env": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "mlflow.pytorch.cloudpickle",
    "mlflow.pytorch.torch",
    "mlflow.pytorch.torchvision",
    "mlflow.utils.environment._mlflow_conda_env"
   ]
  },
  "type": "function"
 },
 "mlflow.pytorch.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "mlflow.pytorch.load_model": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.pyfunc.CODE",
    "mlflow.pyfunc.FLAVOR_NAME",
    "mlflow.pyfunc.utils._add_code_to_system_path",
    "mlflow.pytorch.FLAVOR_NAME",
    "mlflow.pytorch._load_model",
    "mlflow.pytorch._logger",
    "mlflow.pytorch.os",
    "mlflow.pytorch.torch",
    "mlflow.tracking.artifact_utils._download_artifact_from_uri",
    "mlflow.utils.model_utils._get_flavor_configuration"
   ]
  },
  "type": "function"
 },
 "mlflow.pytorch.log_model": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "mlflow.models.Model.log",
    "mlflow.pytorch.mlflow",
    "mlflow.pytorch.pickle_module"
   ]
  },
  "type": "function"
 },
 "mlflow.pytorch.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.pytorch.mlflow": {
  "data": {
   "shadows": "mlflow"
  },
  "type": "import"
 },
 "mlflow.pytorch.mlflow_pytorch_pickle_module": {
  "data": {
   "shadows": "mlflow.pytorch.pickle_module"
  },
  "type": "import"
 },
 "mlflow.pytorch.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlflow.pytorch.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.pytorch.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "mlflow.pytorch.pickle_module": {
  "data": {},
  "type": "module"
 },
 "mlflow.pytorch.pickle_module.Pickler": {
  "data": {
   "shadows": "cloudpickle.CloudPickler"
  },
  "type": "import"
 },
 "mlflow.pytorch.pickle_module.Unpickler": {
  "data": {
   "shadows": "pickle.Unpickler"
  },
  "type": "import"
 },
 "mlflow.pytorch.pyfunc": {
  "data": {
   "shadows": "mlflow.pyfunc"
  },
  "type": "import"
 },
 "mlflow.pytorch.pyfunc_utils": {
  "data": {
   "shadows": "mlflow.pyfunc.utils"
  },
  "type": "import"
 },
 "mlflow.pytorch.save_model": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "dict",
    "isinstance",
    "mlflow.models.Model",
    "mlflow.pyfunc.add_to_model",
    "mlflow.pytorch.FLAVOR_NAME",
    "mlflow.pytorch._PICKLE_MODULE_INFO_FILE_NAME",
    "mlflow.pytorch._SERIALIZED_TORCH_MODEL_FILE_NAME",
    "mlflow.pytorch.get_default_conda_env",
    "mlflow.pytorch.os",
    "mlflow.pytorch.pickle_module",
    "mlflow.pytorch.pickle_module.__name__",
    "mlflow.pytorch.torch",
    "mlflow.pytorch.yaml",
    "mlflow.utils.file_utils._copy_file_or_tree",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "mlflow.pytorch.torchvision": {
  "data": {
   "shadows": "torchvision"
  },
  "type": "import"
 },
 "mlflow.pytorch.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "mlflow.rfunc": {
  "data": {},
  "type": "module"
 },
 "mlflow.run": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "mlflow.runs": {
  "data": {
   "symbols_in_volume": [
    "mlflow.runs.click"
   ]
  },
  "type": "module"
 },
 "mlflow.runs.MLFLOW_RUN_NAME": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_RUN_NAME"
  },
  "type": "import"
 },
 "mlflow.runs.RUN_ID": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mlflow.runs.ViewType": {
  "data": {
   "shadows": "mlflow.entities.ViewType"
  },
  "type": "import"
 },
 "mlflow.runs._get_store": {
  "data": {
   "shadows": "mlflow.tracking._get_store"
  },
  "type": "import"
 },
 "mlflow.runs.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "mlflow.runs.commands": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "mlflow.runs.click"
   ]
  },
  "type": "function"
 },
 "mlflow.runs.conv_longdate_to_str": {
  "data": {
   "shadows": "mlflow.utils.time_utils.conv_longdate_to_str"
  },
  "type": "import"
 },
 "mlflow.runs.delete_run": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "mlflow.runs.RUN_ID",
    "mlflow.runs.commands",
    "mlflow.tracking._get_store",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.runs.describe_run": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "mlflow.runs.RUN_ID",
    "mlflow.runs.commands",
    "mlflow.runs.json",
    "mlflow.tracking._get_store",
    "print"
   ]
  },
  "type": "function"
 },
 "mlflow.runs.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mlflow.runs.list_run": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "mlflow.entities.ViewType.ACTIVE_ONLY",
    "mlflow.entities.ViewType.from_string",
    "mlflow.runs.click",
    "mlflow.runs.commands",
    "mlflow.tracking._get_store",
    "mlflow.utils.mlflow_tags.MLFLOW_RUN_NAME",
    "mlflow.utils.time_utils.conv_longdate_to_str",
    "print",
    "sorted",
    "tabulate.tabulate"
   ]
  },
  "type": "function"
 },
 "mlflow.runs.mlflow.tracking": {
  "data": {
   "shadows": "mlflow.tracking"
  },
  "type": "import"
 },
 "mlflow.runs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mlflow.runs.restore_run": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "mlflow.runs.RUN_ID",
    "mlflow.runs.commands",
    "mlflow.tracking._get_store",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.runs.tabulate": {
  "data": {
   "shadows": "tabulate.tabulate"
  },
  "type": "import"
 },
 "mlflow.sagemaker.cli": {
  "data": {},
  "type": "module"
 },
 "mlflow.sagemaker.cli.IMAGE": {
  "data": {
   "shadows": "mlflow.sagemaker.DEFAULT_IMAGE_NAME"
  },
  "type": "import"
 },
 "mlflow.sagemaker.cli.build_and_push_container": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "mlflow.sagemaker.DEFAULT_IMAGE_NAME",
    "mlflow.sagemaker.cli.click",
    "mlflow.sagemaker.cli.commands",
    "mlflow.sagemaker.cli.mlflow",
    "mlflow.sagemaker.cli.os",
    "mlflow.utils.cli_args.MLFLOW_HOME",
    "print"
   ]
  },
  "type": "function"
 },
 "mlflow.sagemaker.cli.build_and_push_container.setup_container": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "mlflow.sagemaker.cli.cli_args": {
  "data": {
   "shadows": "mlflow.utils.cli_args"
  },
  "type": "import"
 },
 "mlflow.sagemaker.cli.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "mlflow.sagemaker.cli.commands": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "mlflow.sagemaker.cli.click"
   ]
  },
  "type": "function"
 },
 "mlflow.sagemaker.cli.delete": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "mlflow.sagemaker.cli.click",
    "mlflow.sagemaker.cli.commands",
    "mlflow.sagemaker.cli.mlflow"
   ]
  },
  "type": "function"
 },
 "mlflow.sagemaker.cli.deploy": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "mlflow.sagemaker.cli.click",
    "mlflow.sagemaker.cli.commands",
    "mlflow.sagemaker.cli.json",
    "mlflow.sagemaker.cli.mlflow",
    "mlflow.utils.cli_args.MODEL_URI",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.sagemaker.cli.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mlflow.sagemaker.cli.mlflow": {
  "data": {
   "shadows": "mlflow"
  },
  "type": "import"
 },
 "mlflow.sagemaker.cli.mlflow.models.docker_utils": {
  "data": {
   "shadows": "mlflow.models.docker_utils"
  },
  "type": "import"
 },
 "mlflow.sagemaker.cli.mlflow.sagemaker": {
  "data": {
   "shadows": "mlflow.sagemaker"
  },
  "type": "import"
 },
 "mlflow.sagemaker.cli.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.sagemaker.cli.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mlflow.sagemaker.cli.run_local": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "mlflow.sagemaker.DEFAULT_IMAGE_NAME",
    "mlflow.sagemaker.cli.click",
    "mlflow.sagemaker.cli.commands",
    "mlflow.sagemaker.cli.mlflow",
    "mlflow.utils.cli_args.MODEL_URI"
   ]
  },
  "type": "function"
 },
 "mlflow.server": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "flask.Flask",
    "mlflow.server.REL_STATIC_DIR",
    "mlflow.server.app",
    "mlflow.server.handlers.get_endpoints",
    "mlflow.server.os"
   ]
  },
  "type": "module"
 },
 "mlflow.server.ARTIFACT_ROOT_ENV_VAR": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mlflow.server.BACKEND_STORE_URI_ENV_VAR": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mlflow.server.Flask": {
  "data": {
   "shadows": "flask.Flask"
  },
  "type": "import"
 },
 "mlflow.server.REL_STATIC_DIR": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mlflow.server.STATIC_DIR": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mlflow.server.STATIC_PREFIX_ENV_VAR": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mlflow.server._add_static_prefix": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "mlflow.server.STATIC_PREFIX_ENV_VAR",
    "mlflow.server.os"
   ]
  },
  "type": "function"
 },
 "mlflow.server._run_server": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "mlflow.server.ARTIFACT_ROOT_ENV_VAR",
    "mlflow.server.BACKEND_STORE_URI_ENV_VAR",
    "mlflow.server.STATIC_PREFIX_ENV_VAR",
    "mlflow.server.shlex",
    "mlflow.utils.process.exec_cmd"
   ]
  },
  "type": "function"
 },
 "mlflow.server.app": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mlflow.server.exec_cmd": {
  "data": {
   "shadows": "mlflow.utils.process.exec_cmd"
  },
  "type": "import"
 },
 "mlflow.server.get_artifact_handler": {
  "data": {
   "shadows": "mlflow.server.handlers.get_artifact_handler"
  },
  "type": "import"
 },
 "mlflow.server.handlers": {
  "data": {
   "shadows": "mlflow.server.handlers"
  },
  "type": "import"
 },
 "mlflow.server.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.server.send_from_directory": {
  "data": {
   "shadows": "flask.send_from_directory"
  },
  "type": "import"
 },
 "mlflow.server.serve": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "flask.send_from_directory",
    "mlflow.server.STATIC_DIR",
    "mlflow.server._add_static_prefix",
    "mlflow.server.app"
   ]
  },
  "type": "function"
 },
 "mlflow.server.serve_artifacts": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "mlflow.server._add_static_prefix",
    "mlflow.server.app",
    "mlflow.server.handlers.get_artifact_handler"
   ]
  },
  "type": "function"
 },
 "mlflow.server.serve_static_file": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "flask.send_from_directory",
    "mlflow.server.STATIC_DIR",
    "mlflow.server._add_static_prefix",
    "mlflow.server.app"
   ]
  },
  "type": "function"
 },
 "mlflow.server.shlex": {
  "data": {
   "shadows": "shlex"
  },
  "type": "import"
 },
 "mlflow.set_experiment": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "mlflow.set_tag": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mlflow.set_tags": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "mlflow.set_tracking_uri": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "mlflow.sklearn": {
  "data": {
   "symbols_in_volume": [
    "mlflow.sklearn.SERIALIZATION_FORMAT_CLOUDPICKLE",
    "mlflow.sklearn.SERIALIZATION_FORMAT_PICKLE"
   ]
  },
  "type": "module"
 },
 "mlflow.sklearn.FLAVOR_NAME": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mlflow.sklearn.INTERNAL_ERROR": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INTERNAL_ERROR"
  },
  "type": "import"
 },
 "mlflow.sklearn.INVALID_PARAMETER_VALUE": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  },
  "type": "import"
 },
 "mlflow.sklearn.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.sklearn.Model": {
  "data": {
   "shadows": "mlflow.models.Model"
  },
  "type": "import"
 },
 "mlflow.sklearn.RESOURCE_ALREADY_EXISTS": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS"
  },
  "type": "import"
 },
 "mlflow.sklearn.SERIALIZATION_FORMAT_CLOUDPICKLE": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mlflow.sklearn.SERIALIZATION_FORMAT_PICKLE": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mlflow.sklearn.SUPPORTED_SERIALIZATION_FORMATS": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mlflow.sklearn._download_artifact_from_uri": {
  "data": {
   "shadows": "mlflow.tracking.artifact_utils._download_artifact_from_uri"
  },
  "type": "import"
 },
 "mlflow.sklearn._get_flavor_configuration": {
  "data": {
   "shadows": "mlflow.utils.model_utils._get_flavor_configuration"
  },
  "type": "import"
 },
 "mlflow.sklearn._load_model_from_local_file": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "mlflow.sklearn.pickle",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.sklearn._load_pyfunc": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "mlflow.sklearn._load_model_from_local_file"
   ]
  },
  "type": "function"
 },
 "mlflow.sklearn._mlflow_conda_env": {
  "data": {
   "shadows": "mlflow.utils.environment._mlflow_conda_env"
  },
  "type": "import"
 },
 "mlflow.sklearn._save_model": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INTERNAL_ERROR",
    "mlflow.sklearn.SERIALIZATION_FORMAT_CLOUDPICKLE",
    "mlflow.sklearn.SERIALIZATION_FORMAT_PICKLE",
    "mlflow.sklearn.cloudpickle",
    "mlflow.sklearn.pickle",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.sklearn.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "mlflow.sklearn.cloudpickle": {
  "data": {
   "shadows": "cloudpickle"
  },
  "type": "import"
 },
 "mlflow.sklearn.get_default_conda_env": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "mlflow.sklearn.cloudpickle",
    "mlflow.sklearn.sklearn",
    "mlflow.utils.environment._mlflow_conda_env"
   ]
  },
  "type": "function"
 },
 "mlflow.sklearn.load_model": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "mlflow.sklearn.FLAVOR_NAME",
    "mlflow.sklearn._load_model_from_local_file",
    "mlflow.sklearn.os",
    "mlflow.tracking.artifact_utils._download_artifact_from_uri",
    "mlflow.utils.model_utils._get_flavor_configuration"
   ]
  },
  "type": "function"
 },
 "mlflow.sklearn.log_model": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "mlflow.models.Model.log",
    "mlflow.sklearn.SERIALIZATION_FORMAT_CLOUDPICKLE",
    "mlflow.sklearn.mlflow"
   ]
  },
  "type": "function"
 },
 "mlflow.sklearn.mlflow": {
  "data": {
   "shadows": "mlflow"
  },
  "type": "import"
 },
 "mlflow.sklearn.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.sklearn.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "mlflow.sklearn.pyfunc": {
  "data": {
   "shadows": "mlflow.pyfunc"
  },
  "type": "import"
 },
 "mlflow.sklearn.save_model": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "mlflow.exceptions.MlflowException",
    "mlflow.models.Model",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS",
    "mlflow.pyfunc.add_to_model",
    "mlflow.sklearn.FLAVOR_NAME",
    "mlflow.sklearn.SERIALIZATION_FORMAT_CLOUDPICKLE",
    "mlflow.sklearn.SUPPORTED_SERIALIZATION_FORMATS",
    "mlflow.sklearn._save_model",
    "mlflow.sklearn.get_default_conda_env",
    "mlflow.sklearn.os",
    "mlflow.sklearn.sklearn",
    "mlflow.sklearn.yaml",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.sklearn.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "mlflow.sklearn.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "mlflow.spark": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.spark.logging"
   ]
  },
  "type": "module"
 },
 "mlflow.spark.DFS_TMP": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mlflow.spark.FLAVOR_NAME": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mlflow.spark.INVALID_PARAMETER_VALUE": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  },
  "type": "import"
 },
 "mlflow.spark.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.spark.Model": {
  "data": {
   "shadows": "mlflow.models.Model"
  },
  "type": "import"
 },
 "mlflow.spark.PipelineModel": {
  "data": {
   "shadows": "pyspark.ml.pipeline.PipelineModel"
  },
  "type": "import"
 },
 "mlflow.spark.Py4JJavaError": {
  "data": {
   "shadows": "py4j.protocol.Py4JJavaError"
  },
  "type": "import"
 },
 "mlflow.spark.SparkContext": {
  "data": {
   "shadows": "pyspark.SparkContext"
  },
  "type": "import"
 },
 "mlflow.spark.TempDir": {
  "data": {
   "shadows": "mlflow.utils.file_utils.TempDir"
  },
  "type": "import"
 },
 "mlflow.spark._HadoopFileSystem": {
  "data": {
   "lineno": 149
  },
  "type": "class"
 },
 "mlflow.spark._HadoopFileSystem.__init__": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "mlflow.spark._HadoopFileSystem._conf": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "classmethod",
    "pyspark.SparkContext.getOrCreate"
   ]
  },
  "type": "function"
 },
 "mlflow.spark._HadoopFileSystem._fs": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.spark._HadoopFileSystem._jvm": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "classmethod",
    "pyspark.SparkContext._gateway.jvm"
   ]
  },
  "type": "function"
 },
 "mlflow.spark._HadoopFileSystem._local_path": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "classmethod",
    "mlflow.spark.os"
   ]
  },
  "type": "function"
 },
 "mlflow.spark._HadoopFileSystem._remote_path": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.spark._HadoopFileSystem.copy_from_local_file": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.spark._HadoopFileSystem.copy_to_local_file": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.spark._HadoopFileSystem.delete": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.spark._HadoopFileSystem.maybe_copy_from_local_file": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "classmethod",
    "mlflow.spark._logger"
   ]
  },
  "type": "function"
 },
 "mlflow.spark._HadoopFileSystem.qualified_local_path": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.spark._PyFuncModelWrapper": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.spark._PyFuncModelWrapper.__init__": {
  "data": {
   "lineno": 392
  },
  "type": "function"
 },
 "mlflow.spark._PyFuncModelWrapper.predict": {
  "data": {
   "lineno": 396
  },
  "type": "function"
 },
 "mlflow.spark._SPARK_MODEL_PATH_SUB": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mlflow.spark._download_artifact_from_uri": {
  "data": {
   "shadows": "mlflow.tracking.artifact_utils._download_artifact_from_uri"
  },
  "type": "import"
 },
 "mlflow.spark._get_flavor_configuration": {
  "data": {
   "shadows": "mlflow.utils.model_utils._get_flavor_configuration"
  },
  "type": "import"
 },
 "mlflow.spark._load_model": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "mlflow.spark.DFS_TMP",
    "mlflow.spark._HadoopFileSystem",
    "mlflow.spark._tmp_path",
    "pyspark.ml.pipeline.PipelineModel.load"
   ]
  },
  "type": "function"
 },
 "mlflow.spark._load_pyfunc": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "mlflow.spark._PyFuncModelWrapper",
    "mlflow.spark._load_model",
    "mlflow.spark.pyspark"
   ]
  },
  "type": "function"
 },
 "mlflow.spark._logger": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mlflow.spark._mlflow_conda_env": {
  "data": {
   "shadows": "mlflow.utils.environment._mlflow_conda_env"
  },
  "type": "import"
 },
 "mlflow.spark._save_model_metadata": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "mlflow.mleap.add_to_model",
    "mlflow.pyfunc.add_to_model",
    "mlflow.spark.FLAVOR_NAME",
    "mlflow.spark._SPARK_MODEL_PATH_SUB",
    "mlflow.spark.get_default_conda_env",
    "mlflow.spark.os",
    "mlflow.spark.pyspark",
    "mlflow.spark.yaml",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.spark._tmp_path": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "mlflow.spark.os",
    "mlflow.spark.uuid",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.spark._validate_model": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "isinstance",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "pyspark.ml.pipeline.PipelineModel"
   ]
  },
  "type": "function"
 },
 "mlflow.spark.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "mlflow.spark.get_default_conda_env": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "mlflow.spark.pyspark",
    "mlflow.utils.environment._mlflow_conda_env"
   ]
  },
  "type": "function"
 },
 "mlflow.spark.load_model": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "mlflow.spark.FLAVOR_NAME",
    "mlflow.spark._load_model",
    "mlflow.spark.os",
    "mlflow.tracking.artifact_utils._download_artifact_from_uri",
    "mlflow.utils.model_utils._get_flavor_configuration"
   ]
  },
  "type": "function"
 },
 "mlflow.spark.log_model": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "mlflow.models.Model",
    "mlflow.models.Model.log",
    "mlflow.spark._SPARK_MODEL_PATH_SUB",
    "mlflow.spark._save_model_metadata",
    "mlflow.spark._validate_model",
    "mlflow.spark.mlflow",
    "mlflow.spark.os",
    "mlflow.utils.file_utils.TempDir",
    "py4j.protocol.Py4JJavaError"
   ]
  },
  "type": "function"
 },
 "mlflow.spark.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.spark.mleap": {
  "data": {
   "shadows": "mlflow.mleap"
  },
  "type": "import"
 },
 "mlflow.spark.mlflow": {
  "data": {
   "shadows": "mlflow"
  },
  "type": "import"
 },
 "mlflow.spark.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.spark.pyfunc": {
  "data": {
   "shadows": "mlflow.pyfunc"
  },
  "type": "import"
 },
 "mlflow.spark.pyspark": {
  "data": {
   "shadows": "pyspark"
  },
  "type": "import"
 },
 "mlflow.spark.save_model": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "mlflow.models.Model",
    "mlflow.spark.DFS_TMP",
    "mlflow.spark._HadoopFileSystem",
    "mlflow.spark._SPARK_MODEL_PATH_SUB",
    "mlflow.spark._save_model_metadata",
    "mlflow.spark._tmp_path",
    "mlflow.spark._validate_model",
    "mlflow.spark.os"
   ]
  },
  "type": "function"
 },
 "mlflow.spark.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "mlflow.spark.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "mlflow.start_run": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "mlflow.store": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.DEFAULT_LOCAL_FILE_AND_ARTIFACT_PATH": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mlflow.store.SEARCH_MAX_RESULTS_DEFAULT": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mlflow.store.SEARCH_MAX_RESULTS_THRESHOLD": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mlflow.store.abstract_store": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.abstract_store.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "mlflow.store.abstract_store.AbstractStore": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "mlflow.store.abstract_store.AbstractStore.__init__": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "mlflow.store.abstract_store.AbstractStore.create_experiment": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.abstract_store.AbstractStore.create_run": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.abstract_store.AbstractStore.delete_experiment": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.abstract_store.AbstractStore.delete_run": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.abstract_store.AbstractStore.get_experiment": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.abstract_store.AbstractStore.get_experiment_by_name": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "mlflow.entities.ViewType.ALL"
   ]
  },
  "type": "function"
 },
 "mlflow.store.abstract_store.AbstractStore.get_metric_history": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.abstract_store.AbstractStore.get_run": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.abstract_store.AbstractStore.list_experiments": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mlflow.entities.ViewType.ACTIVE_ONLY"
   ]
  },
  "type": "function"
 },
 "mlflow.store.abstract_store.AbstractStore.list_run_infos": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "mlflow.store.abstract_store.AbstractStore.log_batch": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.abstract_store.AbstractStore.log_metric": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "mlflow.store.abstract_store.AbstractStore.log_param": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "mlflow.store.abstract_store.AbstractStore.rename_experiment": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.abstract_store.AbstractStore.restore_experiment": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.abstract_store.AbstractStore.restore_run": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.abstract_store.AbstractStore.search_runs": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "mlflow.store.SEARCH_MAX_RESULTS_DEFAULT"
   ]
  },
  "type": "function"
 },
 "mlflow.store.abstract_store.AbstractStore.set_tag": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "mlflow.store.abstract_store.AbstractStore.update_run_info": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.abstract_store.SEARCH_MAX_RESULTS_DEFAULT": {
  "data": {
   "shadows": "mlflow.store.SEARCH_MAX_RESULTS_DEFAULT"
  },
  "type": "import"
 },
 "mlflow.store.abstract_store.ViewType": {
  "data": {
   "shadows": "mlflow.entities.ViewType"
  },
  "type": "import"
 },
 "mlflow.store.abstract_store.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "mlflow.store.artifact_repo": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.artifact_repo.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "mlflow.store.artifact_repo.ArtifactRepository": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "mlflow.store.artifact_repo.ArtifactRepository.__init__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "mlflow.store.artifact_repo.ArtifactRepository._download_file": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact_repo.ArtifactRepository.download_artifacts": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "download_artifacts_into",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.store.artifact_repo.os",
    "mlflow.store.artifact_repo.tempfile"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact_repo.ArtifactRepository.download_artifacts.download_artifacts_into": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "download_artifacts_into",
    "len",
    "mlflow.store.artifact_repo.os",
    "mlflow.store.artifact_repo.posixpath"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact_repo.ArtifactRepository.list_artifacts": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact_repo.ArtifactRepository.log_artifact": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact_repo.ArtifactRepository.log_artifacts": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact_repo.INVALID_PARAMETER_VALUE": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  },
  "type": "import"
 },
 "mlflow.store.artifact_repo.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.store.artifact_repo.RESOURCE_DOES_NOT_EXIST": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST"
  },
  "type": "import"
 },
 "mlflow.store.artifact_repo.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "mlflow.store.artifact_repo.bad_path_message": {
  "data": {
   "shadows": "mlflow.utils.validation.bad_path_message"
  },
  "type": "import"
 },
 "mlflow.store.artifact_repo.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.store.artifact_repo.path_not_unique": {
  "data": {
   "shadows": "mlflow.utils.validation.path_not_unique"
  },
  "type": "import"
 },
 "mlflow.store.artifact_repo.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "mlflow.store.artifact_repo.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "mlflow.store.artifact_repo.verify_artifact_path": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.utils.validation.bad_path_message",
    "mlflow.utils.validation.path_not_unique"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact_repository_registry": {
  "data": {
   "symbols_in_volume": [
    "mlflow.store.artifact_repository_registry.ArtifactRepositoryRegistry",
    "mlflow.store.artifact_repository_registry._artifact_repository_registry",
    "mlflow.store.azure_blob_artifact_repo.AzureBlobArtifactRepository",
    "mlflow.store.dbfs_artifact_repo.DbfsArtifactRepository",
    "mlflow.store.ftp_artifact_repo.FTPArtifactRepository",
    "mlflow.store.gcs_artifact_repo.GCSArtifactRepository",
    "mlflow.store.hdfs_artifact_repo.HdfsArtifactRepository",
    "mlflow.store.local_artifact_repo.LocalArtifactRepository",
    "mlflow.store.runs_artifact_repo.RunsArtifactRepository",
    "mlflow.store.s3_artifact_repo.S3ArtifactRepository",
    "mlflow.store.sftp_artifact_repo.SFTPArtifactRepository"
   ]
  },
  "type": "module"
 },
 "mlflow.store.artifact_repository_registry.ArtifactRepositoryRegistry": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "mlflow.store.artifact_repository_registry.ArtifactRepositoryRegistry.__init__": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "mlflow.store.artifact_repository_registry.ArtifactRepositoryRegistry.get_artifact_repository": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "list",
    "mlflow.exceptions.MlflowException",
    "mlflow.utils.get_uri_scheme",
    "repository"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact_repository_registry.ArtifactRepositoryRegistry.register": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "mlflow.store.artifact_repository_registry.ArtifactRepositoryRegistry.register_entrypoints": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "mlflow.store.artifact_repository_registry.entrypoints",
    "mlflow.store.artifact_repository_registry.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact_repository_registry.AzureBlobArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.azure_blob_artifact_repo.AzureBlobArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.artifact_repository_registry.DbfsArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.dbfs_artifact_repo.DbfsArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.artifact_repository_registry.FTPArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.ftp_artifact_repo.FTPArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.artifact_repository_registry.GCSArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.gcs_artifact_repo.GCSArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.artifact_repository_registry.HdfsArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.hdfs_artifact_repo.HdfsArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.artifact_repository_registry.LocalArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.local_artifact_repo.LocalArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.artifact_repository_registry.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.store.artifact_repository_registry.RunsArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.runs_artifact_repo.RunsArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.artifact_repository_registry.S3ArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.s3_artifact_repo.S3ArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.artifact_repository_registry.SFTPArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.sftp_artifact_repo.SFTPArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.artifact_repository_registry._artifact_repository_registry": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "mlflow.store.artifact_repository_registry.entrypoints": {
  "data": {
   "shadows": "entrypoints"
  },
  "type": "import"
 },
 "mlflow.store.artifact_repository_registry.get_artifact_repository": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "mlflow.store.artifact_repository_registry._artifact_repository_registry"
   ]
  },
  "type": "function"
 },
 "mlflow.store.artifact_repository_registry.get_uri_scheme": {
  "data": {
   "shadows": "mlflow.utils.get_uri_scheme"
  },
  "type": "import"
 },
 "mlflow.store.artifact_repository_registry.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mlflow.store.azure_blob_artifact_repo": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.azure_blob_artifact_repo.ArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.artifact_repo.ArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.azure_blob_artifact_repo.AzureBlobArtifactRepository": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "mlflow.store.artifact_repo.ArtifactRepository"
   ]
  },
  "type": "class"
 },
 "mlflow.store.azure_blob_artifact_repo.AzureBlobArtifactRepository.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "Exception",
    "azure.storage.blob.BlockBlobService",
    "mlflow.store.azure_blob_artifact_repo.AzureBlobArtifactRepository",
    "mlflow.store.azure_blob_artifact_repo.os",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.store.azure_blob_artifact_repo.AzureBlobArtifactRepository._download_file": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "mlflow.store.azure_blob_artifact_repo.posixpath"
   ]
  },
  "type": "function"
 },
 "mlflow.store.azure_blob_artifact_repo.AzureBlobArtifactRepository.list_artifacts": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "azure.storage.blob.models.BlobPrefix",
    "isinstance",
    "mlflow.entities.FileInfo",
    "mlflow.exceptions.MlflowException",
    "mlflow.store.azure_blob_artifact_repo.posixpath",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mlflow.store.azure_blob_artifact_repo.AzureBlobArtifactRepository.log_artifact": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "mlflow.store.azure_blob_artifact_repo.os",
    "mlflow.store.azure_blob_artifact_repo.posixpath"
   ]
  },
  "type": "function"
 },
 "mlflow.store.azure_blob_artifact_repo.AzureBlobArtifactRepository.log_artifacts": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "mlflow.store.azure_blob_artifact_repo.os",
    "mlflow.store.azure_blob_artifact_repo.posixpath"
   ]
  },
  "type": "function"
 },
 "mlflow.store.azure_blob_artifact_repo.AzureBlobArtifactRepository.parse_wasbs_uri": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "Exception",
    "mlflow.store.azure_blob_artifact_repo.re",
    "six.moves.urllib.parse.urlparse",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.azure_blob_artifact_repo.BlobPrefix": {
  "data": {
   "shadows": "azure.storage.blob.models.BlobPrefix"
  },
  "type": "import"
 },
 "mlflow.store.azure_blob_artifact_repo.BlockBlobService": {
  "data": {
   "shadows": "azure.storage.blob.BlockBlobService"
  },
  "type": "import"
 },
 "mlflow.store.azure_blob_artifact_repo.FileInfo": {
  "data": {
   "shadows": "mlflow.entities.FileInfo"
  },
  "type": "import"
 },
 "mlflow.store.azure_blob_artifact_repo.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.store.azure_blob_artifact_repo.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.store.azure_blob_artifact_repo.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "mlflow.store.azure_blob_artifact_repo.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mlflow.store.azure_blob_artifact_repo.urllib": {
  "data": {
   "shadows": "six.moves.urllib"
  },
  "type": "import"
 },
 "mlflow.store.cli": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.store.cli.logging"
   ]
  },
  "type": "module"
 },
 "mlflow.store.cli._download_artifact_from_uri": {
  "data": {
   "shadows": "mlflow.tracking.artifact_utils._download_artifact_from_uri"
  },
  "type": "import"
 },
 "mlflow.store.cli._file_infos_to_json": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.cli._get_store": {
  "data": {
   "shadows": "mlflow.tracking._get_store"
  },
  "type": "import"
 },
 "mlflow.store.cli._logger": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mlflow.store.cli.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "mlflow.store.cli.commands": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "mlflow.store.cli.click"
   ]
  },
  "type": "function"
 },
 "mlflow.store.cli.download_artifacts": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "mlflow.store.artifact_repository_registry.get_artifact_repository",
    "mlflow.store.cli._logger",
    "mlflow.store.cli.click",
    "mlflow.store.cli.commands",
    "mlflow.store.cli.sys",
    "mlflow.tracking._get_store",
    "mlflow.tracking.artifact_utils._download_artifact_from_uri",
    "print"
   ]
  },
  "type": "function"
 },
 "mlflow.store.cli.get_artifact_repository": {
  "data": {
   "shadows": "mlflow.store.artifact_repository_registry.get_artifact_repository"
  },
  "type": "import"
 },
 "mlflow.store.cli.list_artifacts": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "mlflow.store.artifact_repository_registry.get_artifact_repository",
    "mlflow.store.cli._file_infos_to_json",
    "mlflow.store.cli.click",
    "mlflow.store.cli.commands",
    "mlflow.tracking._get_store",
    "print"
   ]
  },
  "type": "function"
 },
 "mlflow.store.cli.log_artifact": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "mlflow.store.artifact_repository_registry.get_artifact_repository",
    "mlflow.store.cli._logger",
    "mlflow.store.cli.click",
    "mlflow.store.cli.commands",
    "mlflow.tracking._get_store"
   ]
  },
  "type": "function"
 },
 "mlflow.store.cli.log_artifacts": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "mlflow.store.artifact_repository_registry.get_artifact_repository",
    "mlflow.store.cli._logger",
    "mlflow.store.cli.click",
    "mlflow.store.cli.commands",
    "mlflow.tracking._get_store"
   ]
  },
  "type": "function"
 },
 "mlflow.store.cli.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.store.cli.message_to_json": {
  "data": {
   "shadows": "mlflow.utils.proto_json_utils.message_to_json"
  },
  "type": "import"
 },
 "mlflow.store.cli.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlflow.store.db": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.db.utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.store.db.utils.logging"
   ]
  },
  "type": "module"
 },
 "mlflow.store.db.utils.Config": {
  "data": {
   "shadows": "alembic.config.Config"
  },
  "type": "import"
 },
 "mlflow.store.db.utils.MigrationContext": {
  "data": {
   "shadows": "alembic.migration.MigrationContext"
  },
  "type": "import"
 },
 "mlflow.store.db.utils._get_alembic_config": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "alembic.config.Config",
    "mlflow.store.db.utils._get_package_dir",
    "mlflow.store.db.utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.store.db.utils._get_package_dir": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "mlflow.store.db.utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.store.db.utils._get_schema_version": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "alembic.migration.MigrationContext.configure"
   ]
  },
  "type": "function"
 },
 "mlflow.store.db.utils._is_initialized_before_mlflow_1": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "mlflow.store.db.utils._get_schema_version",
    "mlflow.store.db.utils.sqlalchemy"
   ]
  },
  "type": "function"
 },
 "mlflow.store.db.utils._logger": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "mlflow.store.db.utils._upgrade_db": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "alembic.command.upgrade",
    "mlflow.store.db.utils._get_alembic_config",
    "mlflow.store.db.utils._logger"
   ]
  },
  "type": "function"
 },
 "mlflow.store.db.utils._upgrade_db_initialized_before_mlflow_1": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "alembic.command.stamp",
    "alembic.command.upgrade",
    "mlflow.store.db.utils._get_alembic_config",
    "mlflow.store.db.utils._get_package_dir",
    "mlflow.store.db.utils._logger",
    "mlflow.store.db.utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.store.db.utils.command": {
  "data": {
   "shadows": "alembic.command"
  },
  "type": "import"
 },
 "mlflow.store.db.utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.store.db.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.store.db.utils.sqlalchemy": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "mlflow.store.dbfs_artifact_repo": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.dbfs_artifact_repo.ArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.artifact_repo.ArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.dbfs_artifact_repo.DOWNLOAD_CHUNK_SIZE": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mlflow.store.dbfs_artifact_repo.DbfsArtifactRepository": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "mlflow.store.artifact_repo.ArtifactRepository"
   ]
  },
  "type": "class"
 },
 "mlflow.store.dbfs_artifact_repo.DbfsArtifactRepository.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.store.dbfs_artifact_repo.DbfsArtifactRepository",
    "mlflow.store.dbfs_artifact_repo._get_host_creds_from_default_store",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.store.dbfs_artifact_repo.DbfsArtifactRepository._databricks_api_request": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "mlflow.utils.rest_utils.http_request_safe"
   ]
  },
  "type": "function"
 },
 "mlflow.store.dbfs_artifact_repo.DbfsArtifactRepository._dbfs_download": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "mlflow.store.dbfs_artifact_repo.DOWNLOAD_CHUNK_SIZE",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.store.dbfs_artifact_repo.DbfsArtifactRepository._dbfs_is_dir": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "KeyError",
    "mlflow.exceptions.MlflowException",
    "mlflow.store.dbfs_artifact_repo.GET_STATUS_ENDPOINT",
    "mlflow.store.dbfs_artifact_repo.json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.dbfs_artifact_repo.DbfsArtifactRepository._dbfs_list_api": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "mlflow.store.dbfs_artifact_repo.LIST_API_ENDPOINT",
    "mlflow.store.dbfs_artifact_repo.json",
    "mlflow.utils.rest_utils.http_request"
   ]
  },
  "type": "function"
 },
 "mlflow.store.dbfs_artifact_repo.DbfsArtifactRepository._download_file": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "mlflow.store.dbfs_artifact_repo.DbfsArtifactRepository._get_dbfs_endpoint": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "mlflow.store.dbfs_artifact_repo.DbfsArtifactRepository._get_dbfs_path": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "mlflow.utils.string_utils.strip_prefix"
   ]
  },
  "type": "function"
 },
 "mlflow.store.dbfs_artifact_repo.DbfsArtifactRepository.list_artifacts": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "mlflow.entities.FileInfo",
    "mlflow.exceptions.MlflowException",
    "mlflow.store.dbfs_artifact_repo.json",
    "mlflow.utils.rest_utils.RESOURCE_DOES_NOT_EXIST",
    "mlflow.utils.string_utils.strip_prefix",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mlflow.store.dbfs_artifact_repo.DbfsArtifactRepository.log_artifact": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "mlflow.store.dbfs_artifact_repo.os",
    "mlflow.store.dbfs_artifact_repo.posixpath",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.store.dbfs_artifact_repo.DbfsArtifactRepository.log_artifacts": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "mlflow.store.dbfs_artifact_repo.os",
    "mlflow.store.dbfs_artifact_repo.posixpath",
    "mlflow.utils.file_utils.relative_path_to_artifact_path"
   ]
  },
  "type": "function"
 },
 "mlflow.store.dbfs_artifact_repo.FileInfo": {
  "data": {
   "shadows": "mlflow.entities.FileInfo"
  },
  "type": "import"
 },
 "mlflow.store.dbfs_artifact_repo.GET_STATUS_ENDPOINT": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mlflow.store.dbfs_artifact_repo.LIST_API_ENDPOINT": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mlflow.store.dbfs_artifact_repo.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.store.dbfs_artifact_repo.RESOURCE_DOES_NOT_EXIST": {
  "data": {
   "shadows": "mlflow.utils.rest_utils.RESOURCE_DOES_NOT_EXIST"
  },
  "type": "import"
 },
 "mlflow.store.dbfs_artifact_repo.RestStore": {
  "data": {
   "shadows": "mlflow.store.rest_store.RestStore"
  },
  "type": "import"
 },
 "mlflow.store.dbfs_artifact_repo._get_host_creds_from_default_store": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "isinstance",
    "mlflow.exceptions.MlflowException",
    "mlflow.store.rest_store.RestStore",
    "mlflow.tracking.utils._get_store"
   ]
  },
  "type": "function"
 },
 "mlflow.store.dbfs_artifact_repo.http_request": {
  "data": {
   "shadows": "mlflow.utils.rest_utils.http_request"
  },
  "type": "import"
 },
 "mlflow.store.dbfs_artifact_repo.http_request_safe": {
  "data": {
   "shadows": "mlflow.utils.rest_utils.http_request_safe"
  },
  "type": "import"
 },
 "mlflow.store.dbfs_artifact_repo.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mlflow.store.dbfs_artifact_repo.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.store.dbfs_artifact_repo.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "mlflow.store.dbfs_artifact_repo.relative_path_to_artifact_path": {
  "data": {
   "shadows": "mlflow.utils.file_utils.relative_path_to_artifact_path"
  },
  "type": "import"
 },
 "mlflow.store.dbfs_artifact_repo.strip_prefix": {
  "data": {
   "shadows": "mlflow.utils.string_utils.strip_prefix"
  },
  "type": "import"
 },
 "mlflow.store.dbfs_artifact_repo.utils": {
  "data": {
   "shadows": "mlflow.tracking.utils"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.dbmodels.db_types": {
  "data": {
   "symbols_in_volume": [
    "mlflow.store.dbmodels.db_types.MSSQL",
    "mlflow.store.dbmodels.db_types.MYSQL",
    "mlflow.store.dbmodels.db_types.POSTGRES",
    "mlflow.store.dbmodels.db_types.SQLITE"
   ]
  },
  "type": "module"
 },
 "mlflow.store.dbmodels.db_types.DATABASE_ENGINES": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "mlflow.store.dbmodels.db_types.MSSQL": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "mlflow.store.dbmodels.db_types.MYSQL": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "mlflow.store.dbmodels.db_types.POSTGRES": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "mlflow.store.dbmodels.db_types.SQLITE": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "mlflow.store.dbmodels.initial_models": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "mlflow.store.dbmodels.initial_models.Base": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mlflow.store.dbmodels.initial_models.BigInteger": {
  "data": {
   "shadows": "sqlalchemy.BigInteger"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels.initial_models.CheckConstraint": {
  "data": {
   "shadows": "sqlalchemy.CheckConstraint"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels.initial_models.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels.initial_models.Float": {
  "data": {
   "shadows": "sqlalchemy.Float"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels.initial_models.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels.initial_models.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels.initial_models.PrimaryKeyConstraint": {
  "data": {
   "shadows": "sqlalchemy.PrimaryKeyConstraint"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels.initial_models.RunStatusTypes": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mlflow.store.dbmodels.initial_models.SourceTypes": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mlflow.store.dbmodels.initial_models.SqlExperiment": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "mlflow.store.dbmodels.initial_models.Base",
    "sqlalchemy.CheckConstraint",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String"
   ]
  },
  "type": "class"
 },
 "mlflow.store.dbmodels.initial_models.SqlExperiment.__repr__": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "mlflow.store.dbmodels.initial_models.SqlMetric": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "int",
    "mlflow.store.dbmodels.initial_models.Base",
    "mlflow.store.dbmodels.initial_models.time",
    "sqlalchemy.BigInteger",
    "sqlalchemy.Column",
    "sqlalchemy.Float",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "mlflow.store.dbmodels.initial_models.SqlMetric.__repr__": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "mlflow.store.dbmodels.initial_models.SqlParam": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "mlflow.store.dbmodels.initial_models.Base",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "mlflow.store.dbmodels.initial_models.SqlParam.__repr__": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "mlflow.store.dbmodels.initial_models.SqlRun": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "int",
    "mlflow.store.dbmodels.initial_models.Base",
    "mlflow.store.dbmodels.initial_models.RunStatusTypes",
    "mlflow.store.dbmodels.initial_models.SourceTypes",
    "mlflow.store.dbmodels.initial_models.time",
    "sqlalchemy.BigInteger",
    "sqlalchemy.CheckConstraint",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "mlflow.store.dbmodels.initial_models.SqlTag": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "mlflow.store.dbmodels.initial_models.Base",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "mlflow.store.dbmodels.initial_models.SqlTag.__repr__": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "mlflow.store.dbmodels.initial_models.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels.initial_models.backref": {
  "data": {
   "shadows": "sqlalchemy.orm.backref"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels.initial_models.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels.initial_models.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels.initial_models.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels.models": {
  "data": {
   "symbols_in_volume": [
    "mlflow.entities.RunStatus.FAILED",
    "mlflow.entities.RunStatus.FINISHED",
    "mlflow.entities.RunStatus.RUNNING",
    "mlflow.entities.RunStatus.SCHEDULED",
    "mlflow.entities.RunStatus.to_string",
    "mlflow.entities.SourceType.JOB",
    "mlflow.entities.SourceType.LOCAL",
    "mlflow.entities.SourceType.NOTEBOOK",
    "mlflow.entities.SourceType.PROJECT",
    "mlflow.entities.SourceType.UNKNOWN",
    "mlflow.entities.SourceType.to_string",
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "mlflow.store.dbmodels.models.Base": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mlflow.store.dbmodels.models.BigInteger": {
  "data": {
   "shadows": "sqlalchemy.BigInteger"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels.models.CheckConstraint": {
  "data": {
   "shadows": "sqlalchemy.CheckConstraint"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels.models.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels.models.Experiment": {
  "data": {
   "shadows": "mlflow.entities.Experiment"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels.models.Float": {
  "data": {
   "shadows": "sqlalchemy.Float"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels.models.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels.models.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels.models.LifecycleStage": {
  "data": {
   "shadows": "mlflow.entities.lifecycle_stage.LifecycleStage"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels.models.Metric": {
  "data": {
   "shadows": "mlflow.entities.Metric"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels.models.Param": {
  "data": {
   "shadows": "mlflow.entities.Param"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels.models.PrimaryKeyConstraint": {
  "data": {
   "shadows": "sqlalchemy.PrimaryKeyConstraint"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels.models.Run": {
  "data": {
   "shadows": "mlflow.entities.Run"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels.models.RunData": {
  "data": {
   "shadows": "mlflow.entities.RunData"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels.models.RunInfo": {
  "data": {
   "shadows": "mlflow.entities.RunInfo"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels.models.RunStatus": {
  "data": {
   "shadows": "mlflow.entities.RunStatus"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels.models.RunStatusTypes": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mlflow.store.dbmodels.models.RunTag": {
  "data": {
   "shadows": "mlflow.entities.RunTag"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels.models.SourceType": {
  "data": {
   "shadows": "mlflow.entities.SourceType"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels.models.SourceTypes": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mlflow.store.dbmodels.models.SqlExperiment": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "mlflow.entities.ViewType.ALL",
    "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
    "mlflow.entities.lifecycle_stage.LifecycleStage.view_type_to_stages",
    "mlflow.store.dbmodels.models.Base",
    "sqlalchemy.CheckConstraint",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String"
   ]
  },
  "type": "class"
 },
 "mlflow.store.dbmodels.models.SqlExperiment.__repr__": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "mlflow.store.dbmodels.models.SqlExperiment.to_mlflow_entity": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "mlflow.entities.Experiment",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.dbmodels.models.SqlMetric": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "int",
    "mlflow.store.dbmodels.models.Base",
    "mlflow.store.dbmodels.models.time",
    "sqlalchemy.BigInteger",
    "sqlalchemy.Column",
    "sqlalchemy.Float",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "mlflow.store.dbmodels.models.SqlMetric.__repr__": {
  "data": {
   "lineno": 265
  },
  "type": "function"
 },
 "mlflow.store.dbmodels.models.SqlMetric.to_mlflow_entity": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "mlflow.entities.Metric"
   ]
  },
  "type": "function"
 },
 "mlflow.store.dbmodels.models.SqlParam": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "mlflow.store.dbmodels.models.Base",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "mlflow.store.dbmodels.models.SqlParam.__repr__": {
  "data": {
   "lineno": 306
  },
  "type": "function"
 },
 "mlflow.store.dbmodels.models.SqlParam.to_mlflow_entity": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "mlflow.entities.Param"
   ]
  },
  "type": "function"
 },
 "mlflow.store.dbmodels.models.SqlRun": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "int",
    "mlflow.entities.RunStatus.SCHEDULED",
    "mlflow.entities.RunStatus.to_string",
    "mlflow.entities.SourceType.LOCAL",
    "mlflow.entities.SourceType.to_string",
    "mlflow.entities.ViewType.ALL",
    "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
    "mlflow.entities.lifecycle_stage.LifecycleStage.view_type_to_stages",
    "mlflow.store.dbmodels.models.Base",
    "mlflow.store.dbmodels.models.RunStatusTypes",
    "mlflow.store.dbmodels.models.SourceTypes",
    "mlflow.store.dbmodels.models.time",
    "sqlalchemy.BigInteger",
    "sqlalchemy.CheckConstraint",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "mlflow.store.dbmodels.models.SqlRun.to_mlflow_entity": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "list",
    "mlflow.entities.Run",
    "mlflow.entities.RunData",
    "mlflow.entities.RunInfo",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.dbmodels.models.SqlTag": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "mlflow.store.dbmodels.models.Base",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "mlflow.store.dbmodels.models.SqlTag.__repr__": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "mlflow.store.dbmodels.models.SqlTag.to_mlflow_entity": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "mlflow.entities.RunTag"
   ]
  },
  "type": "function"
 },
 "mlflow.store.dbmodels.models.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels.models.ViewType": {
  "data": {
   "shadows": "mlflow.entities.ViewType"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels.models.backref": {
  "data": {
   "shadows": "sqlalchemy.orm.backref"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels.models.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels.models.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "mlflow.store.dbmodels.models.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mlflow.store.file_store": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.file_store.AbstractStore": {
  "data": {
   "shadows": "mlflow.store.abstract_store.AbstractStore"
  },
  "type": "import"
 },
 "mlflow.store.file_store.DEFAULT_LOCAL_FILE_AND_ARTIFACT_PATH": {
  "data": {
   "shadows": "mlflow.store.DEFAULT_LOCAL_FILE_AND_ARTIFACT_PATH"
  },
  "type": "import"
 },
 "mlflow.store.file_store.Experiment": {
  "data": {
   "shadows": "mlflow.entities.Experiment"
  },
  "type": "import"
 },
 "mlflow.store.file_store.FileStore": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "mlflow.store.abstract_store.AbstractStore"
   ]
  },
  "type": "class"
 },
 "mlflow.store.file_store.FileStore.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "mlflow.entities.Experiment.DEFAULT_EXPERIMENT_NAME",
    "mlflow.store.file_store.FileStore",
    "mlflow.store.file_store._default_root_dir",
    "mlflow.store.file_store.os",
    "mlflow.utils.file_utils.exists",
    "mlflow.utils.file_utils.local_file_uri_to_path",
    "mlflow.utils.file_utils.mkdir",
    "mlflow.utils.file_utils.path_to_local_file_uri",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore._check_root_dir": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "Exception",
    "mlflow.utils.file_utils.exists",
    "mlflow.utils.file_utils.is_directory"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore._create_experiment_with_id": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "dict",
    "mlflow.entities.Experiment",
    "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
    "mlflow.store.file_store.FileStore",
    "mlflow.store.file_store.posixpath",
    "mlflow.utils.file_utils.mkdir",
    "mlflow.utils.file_utils.write_yaml",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore._find_experiment_folder": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "mlflow.store.file_store.FileStore",
    "mlflow.store.file_store.os",
    "mlflow.utils.file_utils.get_parent_dir"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore._find_run_root": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "len",
    "mlflow.store.file_store.os",
    "mlflow.utils.file_utils.find",
    "mlflow.utils.validation._validate_run_id"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore._get_active_experiments": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "mlflow.store.file_store.FileStore",
    "mlflow.utils.file_utils.list_subdirs"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore._get_artifact_dir": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "mlflow.store.file_store.FileStore",
    "mlflow.store.file_store.posixpath",
    "mlflow.utils.validation._validate_run_id"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore._get_deleted_experiments": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.list_subdirs"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore._get_experiment": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "mlflow.entities.ViewType.ALL",
    "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
    "mlflow.entities.lifecycle_stage.LifecycleStage.DELETED",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.store.file_store.FileStore",
    "mlflow.store.file_store._read_persisted_experiment_dict",
    "mlflow.store.file_store.logging",
    "mlflow.utils.file_utils.read_yaml",
    "mlflow.utils.validation._validate_experiment_id"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore._get_experiment_path": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "len",
    "mlflow.entities.ViewType.ACTIVE_ONLY",
    "mlflow.entities.ViewType.ALL",
    "mlflow.entities.ViewType.DELETED_ONLY",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.utils.file_utils.find"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore._get_metric_from_file": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "max",
    "mlflow.store.file_store.FileStore",
    "mlflow.utils.file_utils.read_file_lines",
    "mlflow.utils.validation._validate_metric_name",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore._get_metric_from_line": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "mlflow.entities.Metric",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INTERNAL_ERROR",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore._get_metric_path": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "mlflow.store.file_store.FileStore",
    "mlflow.store.file_store.os",
    "mlflow.utils.validation._validate_metric_name",
    "mlflow.utils.validation._validate_run_id"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore._get_param_from_file": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "Exception",
    "len",
    "mlflow.entities.Param",
    "mlflow.utils.file_utils.read_file_lines",
    "mlflow.utils.validation._validate_param_name",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore._get_param_path": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "mlflow.store.file_store.FileStore",
    "mlflow.store.file_store.os",
    "mlflow.utils.validation._validate_param_name",
    "mlflow.utils.validation._validate_run_id"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore._get_run_dir": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "mlflow.store.file_store.os",
    "mlflow.utils.validation._validate_run_id"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore._get_run_files": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "Exception",
    "len",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_STATE",
    "mlflow.store.file_store.FileStore",
    "mlflow.store.file_store.os",
    "mlflow.store.file_store.sys",
    "mlflow.utils.file_utils.find",
    "mlflow.utils.file_utils.relative_path_to_artifact_path",
    "mlflow.utils.validation._validate_run_id"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore._get_run_info": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.store.file_store.FileStore",
    "mlflow.store.file_store._read_persisted_run_info_dict",
    "mlflow.store.file_store.logging",
    "mlflow.utils.file_utils.read_yaml",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore._get_tag_from_file": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "mlflow.entities.RunTag",
    "mlflow.utils.file_utils.read_file",
    "mlflow.utils.validation._validate_tag_name",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore._get_tag_path": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "mlflow.store.file_store.FileStore",
    "mlflow.store.file_store.os",
    "mlflow.utils.validation._validate_run_id",
    "mlflow.utils.validation._validate_tag_name"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore._has_experiment": {
  "data": {
   "lineno": 223
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore._list_run_infos": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "mlflow.entities.lifecycle_stage.LifecycleStage.matches_view_type",
    "mlflow.exceptions.MissingConfigException",
    "mlflow.store.file_store.logging",
    "mlflow.store.file_store.os",
    "mlflow.utils.file_utils.list_all",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore._overwrite_run_info": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "mlflow.store.file_store.FileStore",
    "mlflow.store.file_store._make_persisted_run_info_dict",
    "mlflow.utils.file_utils.write_yaml"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore._writeable_value": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "isinstance",
    "mlflow.store.file_store.six"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore.create_experiment": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "int",
    "max",
    "mlflow.entities.ViewType.ALL",
    "mlflow.entities.lifecycle_stage.LifecycleStage.DELETED",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore.create_run": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "mlflow.entities.RunInfo",
    "mlflow.entities.RunStatus.RUNNING",
    "mlflow.entities.RunStatus.to_string",
    "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_STATE",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.store.file_store.FileStore",
    "mlflow.store.file_store._make_persisted_run_info_dict",
    "mlflow.store.file_store.uuid",
    "mlflow.utils.file_utils.mkdir",
    "mlflow.utils.file_utils.write_yaml"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore.delete_experiment": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "mlflow.entities.ViewType.ACTIVE_ONLY",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.utils.file_utils.mv"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore.delete_run": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "mlflow.entities.lifecycle_stage.LifecycleStage.DELETED",
    "mlflow.entities.run_info.check_run_is_active",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_STATE"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore.get_all_metrics": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "mlflow.utils.validation._validate_run_id"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore.get_all_params": {
  "data": {
   "lineno": 501
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore.get_all_tags": {
  "data": {
   "lineno": 508
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore.get_experiment": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.store.file_store.FileStore"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore.get_metric_history": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.store.file_store.FileStore",
    "mlflow.utils.file_utils.read_file_lines",
    "mlflow.utils.validation._validate_metric_name",
    "mlflow.utils.validation._validate_run_id"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore.get_run": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "mlflow.entities.Run",
    "mlflow.entities.RunData",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_STATE",
    "mlflow.utils.validation._validate_run_id"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore.list_experiments": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "mlflow.entities.ViewType.ACTIVE_ONLY",
    "mlflow.entities.ViewType.ALL",
    "mlflow.entities.ViewType.DELETED_ONLY",
    "mlflow.exceptions.MissingConfigException",
    "mlflow.store.file_store.logging",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore.log_batch": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "Exception",
    "mlflow.entities.run_info.check_run_is_active",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INTERNAL_ERROR",
    "mlflow.utils.validation._validate_batch_log_data",
    "mlflow.utils.validation._validate_batch_log_limits",
    "mlflow.utils.validation._validate_run_id"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore.log_metric": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "mlflow.entities.run_info.check_run_is_active",
    "mlflow.utils.file_utils.append_to",
    "mlflow.utils.file_utils.make_containing_dirs",
    "mlflow.utils.validation._validate_metric_name",
    "mlflow.utils.validation._validate_run_id"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore.log_param": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "mlflow.entities.run_info.check_run_is_active",
    "mlflow.utils.file_utils.make_containing_dirs",
    "mlflow.utils.file_utils.write_to",
    "mlflow.utils.validation._validate_param_name",
    "mlflow.utils.validation._validate_run_id"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore.rename_experiment": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.store.file_store.FileStore",
    "mlflow.store.file_store.os",
    "mlflow.utils.file_utils.write_yaml"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore.restore_experiment": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "mlflow.entities.ViewType.ACTIVE_ONLY",
    "mlflow.entities.ViewType.DELETED_ONLY",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.utils.file_utils.mv"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore.restore_run": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
    "mlflow.entities.run_info.check_run_is_deleted",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_STATE"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore.search_runs": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.store.SEARCH_MAX_RESULTS_THRESHOLD",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore.set_tag": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "mlflow.entities.run_info.check_run_is_active",
    "mlflow.utils.file_utils.make_containing_dirs",
    "mlflow.utils.file_utils.write_to",
    "mlflow.utils.validation._validate_run_id",
    "mlflow.utils.validation._validate_tag_name"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.FileStore.update_run_info": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "mlflow.entities.run_info.check_run_is_active",
    "mlflow.utils.validation._validate_run_id"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store.INTERNAL_ERROR": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INTERNAL_ERROR"
  },
  "type": "import"
 },
 "mlflow.store.file_store.LifecycleStage": {
  "data": {
   "shadows": "mlflow.entities.lifecycle_stage.LifecycleStage"
  },
  "type": "import"
 },
 "mlflow.store.file_store.Metric": {
  "data": {
   "shadows": "mlflow.entities.Metric"
  },
  "type": "import"
 },
 "mlflow.store.file_store.MissingConfigException": {
  "data": {
   "shadows": "mlflow.exceptions.MissingConfigException"
  },
  "type": "import"
 },
 "mlflow.store.file_store.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.store.file_store.Param": {
  "data": {
   "shadows": "mlflow.entities.Param"
  },
  "type": "import"
 },
 "mlflow.store.file_store.Run": {
  "data": {
   "shadows": "mlflow.entities.Run"
  },
  "type": "import"
 },
 "mlflow.store.file_store.RunData": {
  "data": {
   "shadows": "mlflow.entities.RunData"
  },
  "type": "import"
 },
 "mlflow.store.file_store.RunInfo": {
  "data": {
   "shadows": "mlflow.entities.RunInfo"
  },
  "type": "import"
 },
 "mlflow.store.file_store.RunStatus": {
  "data": {
   "shadows": "mlflow.entities.RunStatus"
  },
  "type": "import"
 },
 "mlflow.store.file_store.RunTag": {
  "data": {
   "shadows": "mlflow.entities.RunTag"
  },
  "type": "import"
 },
 "mlflow.store.file_store.SEARCH_MAX_RESULTS_THRESHOLD": {
  "data": {
   "shadows": "mlflow.store.SEARCH_MAX_RESULTS_THRESHOLD"
  },
  "type": "import"
 },
 "mlflow.store.file_store.SourceType": {
  "data": {
   "shadows": "mlflow.entities.SourceType"
  },
  "type": "import"
 },
 "mlflow.store.file_store.ViewType": {
  "data": {
   "shadows": "mlflow.entities.ViewType"
  },
  "type": "import"
 },
 "mlflow.store.file_store._TRACKING_DIR_ENV_VAR": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mlflow.store.file_store._default_root_dir": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "mlflow.store.DEFAULT_LOCAL_FILE_AND_ARTIFACT_PATH",
    "mlflow.store.file_store._TRACKING_DIR_ENV_VAR",
    "mlflow.store.file_store.os",
    "mlflow.utils.env.get_env"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store._make_persisted_run_info_dict": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "dict",
    "mlflow.entities.RunStatus.RUNNING",
    "mlflow.entities.RunStatus.from_string",
    "mlflow.entities.SourceType.LOCAL"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store._read_persisted_experiment_dict": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "mlflow.entities.Experiment.from_dictionary",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store._read_persisted_run_info_dict": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "mlflow.entities.RunInfo.from_dictionary",
    "mlflow.entities.RunStatus.RUNNING",
    "mlflow.entities.RunStatus.to_string",
    "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.file_store._validate_batch_log_data": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_batch_log_data"
  },
  "type": "import"
 },
 "mlflow.store.file_store._validate_batch_log_limits": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_batch_log_limits"
  },
  "type": "import"
 },
 "mlflow.store.file_store._validate_experiment_id": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_experiment_id"
  },
  "type": "import"
 },
 "mlflow.store.file_store._validate_metric_name": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_metric_name"
  },
  "type": "import"
 },
 "mlflow.store.file_store._validate_param_name": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_param_name"
  },
  "type": "import"
 },
 "mlflow.store.file_store._validate_run_id": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_run_id"
  },
  "type": "import"
 },
 "mlflow.store.file_store._validate_tag_name": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_tag_name"
  },
  "type": "import"
 },
 "mlflow.store.file_store.append_to": {
  "data": {
   "shadows": "mlflow.utils.file_utils.append_to"
  },
  "type": "import"
 },
 "mlflow.store.file_store.check_run_is_active": {
  "data": {
   "shadows": "mlflow.entities.run_info.check_run_is_active"
  },
  "type": "import"
 },
 "mlflow.store.file_store.check_run_is_deleted": {
  "data": {
   "shadows": "mlflow.entities.run_info.check_run_is_deleted"
  },
  "type": "import"
 },
 "mlflow.store.file_store.databricks_pb2": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2"
  },
  "type": "import"
 },
 "mlflow.store.file_store.exists": {
  "data": {
   "shadows": "mlflow.utils.file_utils.exists"
  },
  "type": "import"
 },
 "mlflow.store.file_store.find": {
  "data": {
   "shadows": "mlflow.utils.file_utils.find"
  },
  "type": "import"
 },
 "mlflow.store.file_store.get_env": {
  "data": {
   "shadows": "mlflow.utils.env.get_env"
  },
  "type": "import"
 },
 "mlflow.store.file_store.get_parent_dir": {
  "data": {
   "shadows": "mlflow.utils.file_utils.get_parent_dir"
  },
  "type": "import"
 },
 "mlflow.store.file_store.is_directory": {
  "data": {
   "shadows": "mlflow.utils.file_utils.is_directory"
  },
  "type": "import"
 },
 "mlflow.store.file_store.list_all": {
  "data": {
   "shadows": "mlflow.utils.file_utils.list_all"
  },
  "type": "import"
 },
 "mlflow.store.file_store.list_subdirs": {
  "data": {
   "shadows": "mlflow.utils.file_utils.list_subdirs"
  },
  "type": "import"
 },
 "mlflow.store.file_store.local_file_uri_to_path": {
  "data": {
   "shadows": "mlflow.utils.file_utils.local_file_uri_to_path"
  },
  "type": "import"
 },
 "mlflow.store.file_store.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.store.file_store.make_containing_dirs": {
  "data": {
   "shadows": "mlflow.utils.file_utils.make_containing_dirs"
  },
  "type": "import"
 },
 "mlflow.store.file_store.mkdir": {
  "data": {
   "shadows": "mlflow.utils.file_utils.mkdir"
  },
  "type": "import"
 },
 "mlflow.store.file_store.mv": {
  "data": {
   "shadows": "mlflow.utils.file_utils.mv"
  },
  "type": "import"
 },
 "mlflow.store.file_store.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.store.file_store.path_to_local_file_uri": {
  "data": {
   "shadows": "mlflow.utils.file_utils.path_to_local_file_uri"
  },
  "type": "import"
 },
 "mlflow.store.file_store.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "mlflow.store.file_store.read_file": {
  "data": {
   "shadows": "mlflow.utils.file_utils.read_file"
  },
  "type": "import"
 },
 "mlflow.store.file_store.read_file_lines": {
  "data": {
   "shadows": "mlflow.utils.file_utils.read_file_lines"
  },
  "type": "import"
 },
 "mlflow.store.file_store.read_yaml": {
  "data": {
   "shadows": "mlflow.utils.file_utils.read_yaml"
  },
  "type": "import"
 },
 "mlflow.store.file_store.relative_path_to_artifact_path": {
  "data": {
   "shadows": "mlflow.utils.file_utils.relative_path_to_artifact_path"
  },
  "type": "import"
 },
 "mlflow.store.file_store.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "mlflow.store.file_store.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlflow.store.file_store.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "mlflow.store.file_store.write_to": {
  "data": {
   "shadows": "mlflow.utils.file_utils.write_to"
  },
  "type": "import"
 },
 "mlflow.store.file_store.write_yaml": {
  "data": {
   "shadows": "mlflow.utils.file_utils.write_yaml"
  },
  "type": "import"
 },
 "mlflow.store.ftp_artifact_repo": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.ftp_artifact_repo.ArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.artifact_repo.ArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.ftp_artifact_repo.FTP": {
  "data": {
   "shadows": "ftplib.FTP"
  },
  "type": "import"
 },
 "mlflow.store.ftp_artifact_repo.FTPArtifactRepository": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "mlflow.store.artifact_repo.ArtifactRepository"
   ]
  },
  "type": "class"
 },
 "mlflow.store.ftp_artifact_repo.FTPArtifactRepository.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "mlflow.store.ftp_artifact_repo.FTPArtifactRepository",
    "six.moves.urllib.parse.urlparse",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.store.ftp_artifact_repo.FTPArtifactRepository._download_file": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "mlflow.store.ftp_artifact_repo.posixpath",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.store.ftp_artifact_repo.FTPArtifactRepository._is_dir": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "mlflow.store.ftp_artifact_repo.ftplib"
   ]
  },
  "type": "function"
 },
 "mlflow.store.ftp_artifact_repo.FTPArtifactRepository._mkdir": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "mlflow.store.ftp_artifact_repo.ftplib",
    "mlflow.store.ftp_artifact_repo.posixpath"
   ]
  },
  "type": "function"
 },
 "mlflow.store.ftp_artifact_repo.FTPArtifactRepository._size": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "mlflow.store.ftp_artifact_repo.FTPArtifactRepository.get_ftp_client": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "ftplib.FTP"
   ]
  },
  "type": "function"
 },
 "mlflow.store.ftp_artifact_repo.FTPArtifactRepository.list_artifacts": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "mlflow.entities.file_info.FileInfo",
    "mlflow.store.ftp_artifact_repo.posixpath"
   ]
  },
  "type": "function"
 },
 "mlflow.store.ftp_artifact_repo.FTPArtifactRepository.log_artifact": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "mlflow.store.ftp_artifact_repo.os",
    "mlflow.store.ftp_artifact_repo.posixpath",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.store.ftp_artifact_repo.FTPArtifactRepository.log_artifacts": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "mlflow.store.ftp_artifact_repo.os",
    "mlflow.store.ftp_artifact_repo.posixpath",
    "mlflow.utils.file_utils.relative_path_to_artifact_path"
   ]
  },
  "type": "function"
 },
 "mlflow.store.ftp_artifact_repo.FileInfo": {
  "data": {
   "shadows": "mlflow.entities.file_info.FileInfo"
  },
  "type": "import"
 },
 "mlflow.store.ftp_artifact_repo.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "mlflow.store.ftp_artifact_repo.ftplib": {
  "data": {
   "shadows": "ftplib"
  },
  "type": "import"
 },
 "mlflow.store.ftp_artifact_repo.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.store.ftp_artifact_repo.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "mlflow.store.ftp_artifact_repo.relative_path_to_artifact_path": {
  "data": {
   "shadows": "mlflow.utils.file_utils.relative_path_to_artifact_path"
  },
  "type": "import"
 },
 "mlflow.store.ftp_artifact_repo.urllib": {
  "data": {
   "shadows": "six.moves.urllib"
  },
  "type": "import"
 },
 "mlflow.store.gcs_artifact_repo": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.gcs_artifact_repo.ArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.artifact_repo.ArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.gcs_artifact_repo.FileInfo": {
  "data": {
   "shadows": "mlflow.entities.FileInfo"
  },
  "type": "import"
 },
 "mlflow.store.gcs_artifact_repo.GCSArtifactRepository": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "mlflow.store.artifact_repo.ArtifactRepository"
   ]
  },
  "type": "class"
 },
 "mlflow.store.gcs_artifact_repo.GCSArtifactRepository.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "google.cloud.storage",
    "mlflow.store.gcs_artifact_repo.GCSArtifactRepository",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.store.gcs_artifact_repo.GCSArtifactRepository._download_file": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "mlflow.store.gcs_artifact_repo.posixpath"
   ]
  },
  "type": "function"
 },
 "mlflow.store.gcs_artifact_repo.GCSArtifactRepository._list_folders": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "len",
    "mlflow.entities.FileInfo",
    "set"
   ]
  },
  "type": "function"
 },
 "mlflow.store.gcs_artifact_repo.GCSArtifactRepository.list_artifacts": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "len",
    "mlflow.entities.FileInfo",
    "mlflow.store.gcs_artifact_repo.posixpath",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mlflow.store.gcs_artifact_repo.GCSArtifactRepository.log_artifact": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "mlflow.store.gcs_artifact_repo.os",
    "mlflow.store.gcs_artifact_repo.posixpath"
   ]
  },
  "type": "function"
 },
 "mlflow.store.gcs_artifact_repo.GCSArtifactRepository.log_artifacts": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "mlflow.store.gcs_artifact_repo.os",
    "mlflow.store.gcs_artifact_repo.posixpath",
    "mlflow.utils.file_utils.relative_path_to_artifact_path"
   ]
  },
  "type": "function"
 },
 "mlflow.store.gcs_artifact_repo.GCSArtifactRepository.parse_gcs_uri": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "Exception",
    "six.moves.urllib.parse.urlparse",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.gcs_artifact_repo.gcs_storage": {
  "data": {
   "shadows": "google.cloud.storage"
  },
  "type": "import"
 },
 "mlflow.store.gcs_artifact_repo.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.store.gcs_artifact_repo.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "mlflow.store.gcs_artifact_repo.relative_path_to_artifact_path": {
  "data": {
   "shadows": "mlflow.utils.file_utils.relative_path_to_artifact_path"
  },
  "type": "import"
 },
 "mlflow.store.gcs_artifact_repo.urllib": {
  "data": {
   "shadows": "six.moves.urllib"
  },
  "type": "import"
 },
 "mlflow.store.local_artifact_repo": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.local_artifact_repo.ArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.artifact_repo.ArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.local_artifact_repo.LocalArtifactRepository": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "mlflow.store.artifact_repo.ArtifactRepository"
   ]
  },
  "type": "class"
 },
 "mlflow.store.local_artifact_repo.LocalArtifactRepository.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "mlflow.store.local_artifact_repo.LocalArtifactRepository",
    "mlflow.utils.file_utils.local_file_uri_to_path",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.store.local_artifact_repo.LocalArtifactRepository._download_file": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "mlflow.store.local_artifact_repo.os",
    "mlflow.store.local_artifact_repo.shutil"
   ]
  },
  "type": "function"
 },
 "mlflow.store.local_artifact_repo.LocalArtifactRepository.download_artifacts": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "IOError",
    "mlflow.store.local_artifact_repo.LocalArtifactRepository",
    "mlflow.store.local_artifact_repo.os",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.store.local_artifact_repo.LocalArtifactRepository.list_artifacts": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "mlflow.store.local_artifact_repo.os",
    "mlflow.utils.file_utils.get_file_info",
    "mlflow.utils.file_utils.list_all",
    "mlflow.utils.file_utils.relative_path_to_artifact_path",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mlflow.store.local_artifact_repo.LocalArtifactRepository.log_artifact": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "mlflow.store.artifact_repo.verify_artifact_path",
    "mlflow.store.local_artifact_repo.os",
    "mlflow.store.local_artifact_repo.shutil",
    "mlflow.utils.file_utils.mkdir"
   ]
  },
  "type": "function"
 },
 "mlflow.store.local_artifact_repo.LocalArtifactRepository.log_artifacts": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "distutils.dir_util.copy_tree",
    "mlflow.store.artifact_repo.verify_artifact_path",
    "mlflow.store.local_artifact_repo.os",
    "mlflow.utils.file_utils.mkdir"
   ]
  },
  "type": "function"
 },
 "mlflow.store.local_artifact_repo.dir_util": {
  "data": {
   "shadows": "distutils.dir_util"
  },
  "type": "import"
 },
 "mlflow.store.local_artifact_repo.get_file_info": {
  "data": {
   "shadows": "mlflow.utils.file_utils.get_file_info"
  },
  "type": "import"
 },
 "mlflow.store.local_artifact_repo.list_all": {
  "data": {
   "shadows": "mlflow.utils.file_utils.list_all"
  },
  "type": "import"
 },
 "mlflow.store.local_artifact_repo.local_file_uri_to_path": {
  "data": {
   "shadows": "mlflow.utils.file_utils.local_file_uri_to_path"
  },
  "type": "import"
 },
 "mlflow.store.local_artifact_repo.mkdir": {
  "data": {
   "shadows": "mlflow.utils.file_utils.mkdir"
  },
  "type": "import"
 },
 "mlflow.store.local_artifact_repo.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.store.local_artifact_repo.relative_path_to_artifact_path": {
  "data": {
   "shadows": "mlflow.utils.file_utils.relative_path_to_artifact_path"
  },
  "type": "import"
 },
 "mlflow.store.local_artifact_repo.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mlflow.store.local_artifact_repo.verify_artifact_path": {
  "data": {
   "shadows": "mlflow.store.artifact_repo.verify_artifact_path"
  },
  "type": "import"
 },
 "mlflow.store.rest_store": {
  "data": {
   "symbols_in_volume": [
    "mlflow.store.rest_store._api_method_to_info"
   ]
  },
  "type": "module"
 },
 "mlflow.store.rest_store.AbstractStore": {
  "data": {
   "shadows": "mlflow.store.abstract_store.AbstractStore"
  },
  "type": "import"
 },
 "mlflow.store.rest_store.CreateExperiment": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.CreateExperiment"
  },
  "type": "import"
 },
 "mlflow.store.rest_store.CreateRun": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.CreateRun"
  },
  "type": "import"
 },
 "mlflow.store.rest_store.DeleteExperiment": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.DeleteExperiment"
  },
  "type": "import"
 },
 "mlflow.store.rest_store.DeleteRun": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.DeleteRun"
  },
  "type": "import"
 },
 "mlflow.store.rest_store.Experiment": {
  "data": {
   "shadows": "mlflow.entities.Experiment"
  },
  "type": "import"
 },
 "mlflow.store.rest_store.GetExperiment": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.GetExperiment"
  },
  "type": "import"
 },
 "mlflow.store.rest_store.GetMetricHistory": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.GetMetricHistory"
  },
  "type": "import"
 },
 "mlflow.store.rest_store.GetRun": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.GetRun"
  },
  "type": "import"
 },
 "mlflow.store.rest_store.ListExperiments": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.ListExperiments"
  },
  "type": "import"
 },
 "mlflow.store.rest_store.LogBatch": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.LogBatch"
  },
  "type": "import"
 },
 "mlflow.store.rest_store.LogMetric": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.LogMetric"
  },
  "type": "import"
 },
 "mlflow.store.rest_store.LogParam": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.LogParam"
  },
  "type": "import"
 },
 "mlflow.store.rest_store.Metric": {
  "data": {
   "shadows": "mlflow.entities.Metric"
  },
  "type": "import"
 },
 "mlflow.store.rest_store.MlflowService": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.MlflowService"
  },
  "type": "import"
 },
 "mlflow.store.rest_store.RestStore": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "mlflow.store.abstract_store.AbstractStore"
   ]
  },
  "type": "class"
 },
 "mlflow.store.rest_store.RestStore.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "mlflow.store.rest_store.RestStore",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.store.rest_store.RestStore._call_endpoint": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "mlflow.store.rest_store._METHOD_TO_INFO",
    "mlflow.store.rest_store.json",
    "mlflow.utils.proto_json_utils.parse_dict",
    "mlflow.utils.rest_utils.http_request"
   ]
  },
  "type": "function"
 },
 "mlflow.store.rest_store.RestStore._verify_rest_response": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "mlflow.utils.rest_utils.verify_rest_response"
   ]
  },
  "type": "function"
 },
 "mlflow.store.rest_store.RestStore.create_experiment": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.CreateExperiment",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.rest_store.RestStore.create_run": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "mlflow.entities.Run.from_proto",
    "mlflow.protos.service_pb2.CreateRun",
    "mlflow.utils.proto_json_utils.message_to_json",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.rest_store.RestStore.delete_experiment": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.DeleteExperiment",
    "mlflow.utils.proto_json_utils.message_to_json",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.rest_store.RestStore.delete_run": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.DeleteRun",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.rest_store.RestStore.get_experiment": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "mlflow.entities.Experiment.from_proto",
    "mlflow.protos.service_pb2.GetExperiment",
    "mlflow.utils.proto_json_utils.message_to_json",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.rest_store.RestStore.get_metric_history": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "mlflow.entities.Metric.from_proto",
    "mlflow.protos.service_pb2.GetMetricHistory",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.rest_store.RestStore.get_run": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "mlflow.entities.Run.from_proto",
    "mlflow.protos.service_pb2.GetRun",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.rest_store.RestStore.list_experiments": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "mlflow.entities.Experiment.from_proto",
    "mlflow.entities.ViewType.ACTIVE_ONLY",
    "mlflow.protos.service_pb2.ListExperiments",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.rest_store.RestStore.log_batch": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.LogBatch",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.rest_store.RestStore.log_metric": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.LogMetric",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.rest_store.RestStore.log_param": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.LogParam",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.rest_store.RestStore.rename_experiment": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.UpdateExperiment",
    "mlflow.utils.proto_json_utils.message_to_json",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.rest_store.RestStore.restore_experiment": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.RestoreExperiment",
    "mlflow.utils.proto_json_utils.message_to_json",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.rest_store.RestStore.restore_run": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.RestoreRun",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.rest_store.RestStore.search_runs": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "mlflow.entities.Run.from_proto",
    "mlflow.entities.ViewType.to_proto",
    "mlflow.protos.service_pb2.SearchRuns",
    "mlflow.store.SEARCH_MAX_RESULTS_THRESHOLD",
    "mlflow.utils.proto_json_utils.message_to_json",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.rest_store.RestStore.set_tag": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "mlflow.protos.service_pb2.SetTag",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.rest_store.RestStore.update_run_info": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "mlflow.entities.RunInfo.from_proto",
    "mlflow.protos.service_pb2.UpdateRun",
    "mlflow.utils.proto_json_utils.message_to_json"
   ]
  },
  "type": "function"
 },
 "mlflow.store.rest_store.RestoreExperiment": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.RestoreExperiment"
  },
  "type": "import"
 },
 "mlflow.store.rest_store.RestoreRun": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.RestoreRun"
  },
  "type": "import"
 },
 "mlflow.store.rest_store.Run": {
  "data": {
   "shadows": "mlflow.entities.Run"
  },
  "type": "import"
 },
 "mlflow.store.rest_store.RunInfo": {
  "data": {
   "shadows": "mlflow.entities.RunInfo"
  },
  "type": "import"
 },
 "mlflow.store.rest_store.SEARCH_MAX_RESULTS_THRESHOLD": {
  "data": {
   "shadows": "mlflow.store.SEARCH_MAX_RESULTS_THRESHOLD"
  },
  "type": "import"
 },
 "mlflow.store.rest_store.SearchRuns": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.SearchRuns"
  },
  "type": "import"
 },
 "mlflow.store.rest_store.SetTag": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.SetTag"
  },
  "type": "import"
 },
 "mlflow.store.rest_store.UpdateExperiment": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.UpdateExperiment"
  },
  "type": "import"
 },
 "mlflow.store.rest_store.UpdateRun": {
  "data": {
   "shadows": "mlflow.protos.service_pb2.UpdateRun"
  },
  "type": "import"
 },
 "mlflow.store.rest_store.ViewType": {
  "data": {
   "shadows": "mlflow.entities.ViewType"
  },
  "type": "import"
 },
 "mlflow.store.rest_store._METHOD_TO_INFO": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mlflow.store.rest_store._api_method_to_info": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "mlflow.protos.databricks_pb2.rpc.endpoints",
    "mlflow.protos.service_pb2.MlflowService",
    "mlflow.protos.service_pb2.MlflowService.DESCRIPTOR.methods",
    "mlflow.store.rest_store._get_path"
   ]
  },
  "type": "function"
 },
 "mlflow.store.rest_store._get_path": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "mlflow.store.rest_store.databricks_pb2": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2"
  },
  "type": "import"
 },
 "mlflow.store.rest_store.http_request": {
  "data": {
   "shadows": "mlflow.utils.rest_utils.http_request"
  },
  "type": "import"
 },
 "mlflow.store.rest_store.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mlflow.store.rest_store.message_to_json": {
  "data": {
   "shadows": "mlflow.utils.proto_json_utils.message_to_json"
  },
  "type": "import"
 },
 "mlflow.store.rest_store.parse_dict": {
  "data": {
   "shadows": "mlflow.utils.proto_json_utils.parse_dict"
  },
  "type": "import"
 },
 "mlflow.store.rest_store.verify_rest_response": {
  "data": {
   "shadows": "mlflow.utils.rest_utils.verify_rest_response"
  },
  "type": "import"
 },
 "mlflow.store.runs_artifact_repo": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.runs_artifact_repo.ArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.artifact_repo.ArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.runs_artifact_repo.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.store.runs_artifact_repo.RunsArtifactRepository": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "mlflow.store.artifact_repo.ArtifactRepository"
   ]
  },
  "type": "class"
 },
 "mlflow.store.runs_artifact_repo.RunsArtifactRepository.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "mlflow.store.artifact_repository_registry.get_artifact_repository",
    "mlflow.store.runs_artifact_repo.RunsArtifactRepository",
    "mlflow.tracking.artifact_utils.get_artifact_uri",
    "six.moves.urllib.parse.urlparse",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.store.runs_artifact_repo.RunsArtifactRepository._download_file": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "mlflow.store.runs_artifact_repo.RunsArtifactRepository.download_artifacts": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "mlflow.store.runs_artifact_repo.RunsArtifactRepository.list_artifacts": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "mlflow.store.runs_artifact_repo.RunsArtifactRepository.log_artifact": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "mlflow.store.runs_artifact_repo.RunsArtifactRepository.log_artifacts": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "mlflow.store.runs_artifact_repo.RunsArtifactRepository.parse_runs_uri": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "len",
    "mlflow.exceptions.MlflowException",
    "six.moves.urllib.parse.urlparse",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.runs_artifact_repo.get_artifact_repository": {
  "data": {
   "shadows": "mlflow.store.artifact_repository_registry.get_artifact_repository"
  },
  "type": "import"
 },
 "mlflow.store.runs_artifact_repo.get_artifact_uri": {
  "data": {
   "shadows": "mlflow.tracking.artifact_utils.get_artifact_uri"
  },
  "type": "import"
 },
 "mlflow.store.runs_artifact_repo.urllib": {
  "data": {
   "shadows": "six.moves.urllib"
  },
  "type": "import"
 },
 "mlflow.store.s3_artifact_repo": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.s3_artifact_repo.ArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.artifact_repo.ArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.s3_artifact_repo.FileInfo": {
  "data": {
   "shadows": "mlflow.entities.FileInfo"
  },
  "type": "import"
 },
 "mlflow.store.s3_artifact_repo.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.store.s3_artifact_repo.S3ArtifactRepository": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "mlflow.store.artifact_repo.ArtifactRepository"
   ]
  },
  "type": "class"
 },
 "mlflow.store.s3_artifact_repo.S3ArtifactRepository._download_file": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "mlflow.data.parse_s3_uri",
    "mlflow.store.s3_artifact_repo.posixpath"
   ]
  },
  "type": "function"
 },
 "mlflow.store.s3_artifact_repo.S3ArtifactRepository._get_s3_client": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "mlflow.store.s3_artifact_repo.boto3",
    "mlflow.store.s3_artifact_repo.os"
   ]
  },
  "type": "function"
 },
 "mlflow.store.s3_artifact_repo.S3ArtifactRepository._verify_listed_object_contains_artifact_path_prefix": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.s3_artifact_repo.S3ArtifactRepository.list_artifacts": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "int",
    "mlflow.data.parse_s3_uri",
    "mlflow.entities.FileInfo",
    "mlflow.store.s3_artifact_repo.posixpath",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mlflow.store.s3_artifact_repo.S3ArtifactRepository.log_artifact": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "mlflow.data.parse_s3_uri",
    "mlflow.store.s3_artifact_repo.os",
    "mlflow.store.s3_artifact_repo.posixpath"
   ]
  },
  "type": "function"
 },
 "mlflow.store.s3_artifact_repo.S3ArtifactRepository.log_artifacts": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "mlflow.data.parse_s3_uri",
    "mlflow.store.s3_artifact_repo.os",
    "mlflow.store.s3_artifact_repo.posixpath",
    "mlflow.utils.file_utils.relative_path_to_artifact_path"
   ]
  },
  "type": "function"
 },
 "mlflow.store.s3_artifact_repo.S3ArtifactRepository.parse_s3_uri": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "Exception",
    "six.moves.urllib.parse.urlparse",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.s3_artifact_repo.boto3": {
  "data": {
   "shadows": "boto3"
  },
  "type": "import"
 },
 "mlflow.store.s3_artifact_repo.data": {
  "data": {
   "shadows": "mlflow.data"
  },
  "type": "import"
 },
 "mlflow.store.s3_artifact_repo.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.store.s3_artifact_repo.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "mlflow.store.s3_artifact_repo.relative_path_to_artifact_path": {
  "data": {
   "shadows": "mlflow.utils.file_utils.relative_path_to_artifact_path"
  },
  "type": "import"
 },
 "mlflow.store.s3_artifact_repo.urllib": {
  "data": {
   "shadows": "six.moves.urllib"
  },
  "type": "import"
 },
 "mlflow.store.sftp_artifact_repo": {
  "data": {},
  "type": "module"
 },
 "mlflow.store.sftp_artifact_repo.ArtifactRepository": {
  "data": {
   "shadows": "mlflow.store.artifact_repo.ArtifactRepository"
  },
  "type": "import"
 },
 "mlflow.store.sftp_artifact_repo.FileInfo": {
  "data": {
   "shadows": "mlflow.entities.FileInfo"
  },
  "type": "import"
 },
 "mlflow.store.sftp_artifact_repo.SFTPArtifactRepository": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "mlflow.store.artifact_repo.ArtifactRepository"
   ]
  },
  "type": "class"
 },
 "mlflow.store.sftp_artifact_repo.SFTPArtifactRepository.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "mlflow.store.sftp_artifact_repo.SFTPArtifactRepository",
    "mlflow.store.sftp_artifact_repo.os",
    "mlflow.store.sftp_artifact_repo.paramiko",
    "mlflow.store.sftp_artifact_repo.pysftp",
    "open",
    "six.moves.urllib.parse.urlparse",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sftp_artifact_repo.SFTPArtifactRepository._download_file": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "mlflow.store.sftp_artifact_repo.posixpath"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sftp_artifact_repo.SFTPArtifactRepository.list_artifacts": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "mlflow.entities.FileInfo",
    "mlflow.store.sftp_artifact_repo.posixpath"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sftp_artifact_repo.SFTPArtifactRepository.log_artifact": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "mlflow.store.sftp_artifact_repo.os",
    "mlflow.store.sftp_artifact_repo.posixpath"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sftp_artifact_repo.SFTPArtifactRepository.log_artifacts": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "mlflow.store.sftp_artifact_repo.posixpath"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sftp_artifact_repo.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.store.sftp_artifact_repo.paramiko": {
  "data": {
   "shadows": "paramiko"
  },
  "type": "import"
 },
 "mlflow.store.sftp_artifact_repo.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "mlflow.store.sftp_artifact_repo.pysftp": {
  "data": {
   "shadows": "pysftp"
  },
  "type": "import"
 },
 "mlflow.store.sftp_artifact_repo.urllib": {
  "data": {
   "shadows": "six.moves.urllib"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.store.sqlalchemy_store.logging"
   ]
  },
  "type": "module"
 },
 "mlflow.store.sqlalchemy_store.AbstractStore": {
  "data": {
   "shadows": "mlflow.store.abstract_store.AbstractStore"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store.Base": {
  "data": {
   "shadows": "mlflow.store.dbmodels.models.Base"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store.Experiment": {
  "data": {
   "shadows": "mlflow.entities.Experiment"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store.INTERNAL_ERROR": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INTERNAL_ERROR"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store.INVALID_PARAMETER_VALUE": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store.INVALID_STATE": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INVALID_STATE"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store.InitialBase": {
  "data": {
   "shadows": "mlflow.store.dbmodels.initial_models.Base"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store.LifecycleStage": {
  "data": {
   "shadows": "mlflow.entities.lifecycle_stage.LifecycleStage"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store.MYSQL": {
  "data": {
   "shadows": "mlflow.store.dbmodels.db_types.MYSQL"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store.RESOURCE_ALREADY_EXISTS": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store.RESOURCE_DOES_NOT_EXIST": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store.RunStatus": {
  "data": {
   "shadows": "mlflow.entities.RunStatus"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store.SEARCH_MAX_RESULTS_THRESHOLD": {
  "data": {
   "shadows": "mlflow.store.SEARCH_MAX_RESULTS_THRESHOLD"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store.ScriptDirectory": {
  "data": {
   "shadows": "alembic.script.ScriptDirectory"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store.SourceType": {
  "data": {
   "shadows": "mlflow.entities.SourceType"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "mlflow.store.abstract_store.AbstractStore"
   ]
  },
  "type": "class"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "len",
    "mlflow.store.dbmodels.initial_models.Base.metadata.bind",
    "mlflow.store.dbmodels.models.SqlExperiment.__tablename__",
    "mlflow.store.dbmodels.models.SqlMetric.__tablename__",
    "mlflow.store.dbmodels.models.SqlParam.__tablename__",
    "mlflow.store.dbmodels.models.SqlRun.__tablename__",
    "mlflow.store.dbmodels.models.SqlTag.__tablename__",
    "mlflow.store.sqlalchemy_store.SqlAlchemyStore",
    "mlflow.store.sqlalchemy_store.sqlalchemy",
    "mlflow.tracking.utils._is_local_uri",
    "mlflow.utils.extract_db_type_from_uri",
    "mlflow.utils.file_utils.local_file_uri_to_path",
    "mlflow.utils.file_utils.mkdir",
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore._check_run_is_active": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore._check_run_is_deleted": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "mlflow.entities.lifecycle_stage.LifecycleStage.DELETED",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore._create_default_experiment": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "decorate",
    "int",
    "list",
    "mlflow.entities.Experiment.DEFAULT_EXPERIMENT_NAME",
    "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
    "mlflow.store.dbmodels.models.SqlExperiment.__tablename__",
    "mlflow.store.dbmodels.models.SqlExperiment.artifact_location.name",
    "mlflow.store.dbmodels.models.SqlExperiment.experiment_id.name",
    "mlflow.store.dbmodels.models.SqlExperiment.lifecycle_stage.name",
    "mlflow.store.dbmodels.models.SqlExperiment.name.name",
    "mlflow.store.sqlalchemy_store.SqlAlchemyStore"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore._create_default_experiment.decorate": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore._get_artifact_location": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "mlflow.store.sqlalchemy_store.posixpath",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore._get_experiment": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "len",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_STATE",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.store.sqlalchemy_store.SqlAlchemyStore"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore._get_latest_schema_revision": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "alembic.script.ScriptDirectory.from_config",
    "len",
    "mlflow.exceptions.MlflowException",
    "mlflow.store.db.utils._get_alembic_config",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore._get_managed_session_maker": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore._get_managed_session_maker.make_managed_session": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "Exception",
    "SessionMaker",
    "contextlib.contextmanager",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INTERNAL_ERROR"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore._get_or_create": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "model"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore._get_run": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "len",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_STATE",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.store.dbmodels.models.SqlRun",
    "mlflow.store.dbmodels.models.SqlRun.run_uuid"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore._initialize_tables": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "mlflow.store.db.utils._upgrade_db",
    "mlflow.store.dbmodels.initial_models.Base.metadata.create_all",
    "mlflow.store.sqlalchemy_store._logger",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore._list_experiments": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "int",
    "len",
    "mlflow.entities.ViewType.ACTIVE_ONLY",
    "mlflow.entities.lifecycle_stage.LifecycleStage.view_type_to_stages",
    "mlflow.store.dbmodels.models.SqlExperiment",
    "mlflow.store.dbmodels.models.SqlExperiment.experiment_id.in_",
    "mlflow.store.dbmodels.models.SqlExperiment.lifecycle_stage.in_",
    "mlflow.store.dbmodels.models.SqlExperiment.name.in_"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore._list_runs": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "mlflow.entities.ViewType.ALL",
    "mlflow.entities.lifecycle_stage.LifecycleStage.view_type_to_stages",
    "set"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore._save_to_db": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "list",
    "type"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore._set_no_auto_for_zero_values": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "mlflow.store.dbmodels.db_types.MYSQL"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore._unset_no_auto_for_zero_values": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "mlflow.store.dbmodels.db_types.MYSQL"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore._verify_schema": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.store.db.utils._get_schema_version",
    "mlflow.store.sqlalchemy_store.SqlAlchemyStore",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore.create_experiment": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.protos.databricks_pb2.RESOURCE_ALREADY_EXISTS",
    "mlflow.store.dbmodels.models.SqlExperiment",
    "mlflow.store.sqlalchemy_store.sqlalchemy",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore.create_run": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "mlflow.entities.RunStatus.RUNNING",
    "mlflow.entities.RunStatus.to_string",
    "mlflow.entities.SourceType.UNKNOWN",
    "mlflow.entities.SourceType.to_string",
    "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_STATE",
    "mlflow.store.dbmodels.models.SqlRun",
    "mlflow.store.dbmodels.models.SqlTag",
    "mlflow.store.sqlalchemy_store.SqlAlchemyStore",
    "mlflow.store.sqlalchemy_store.posixpath",
    "mlflow.store.sqlalchemy_store.uuid"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore.delete_experiment": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "mlflow.entities.ViewType.ACTIVE_ONLY",
    "mlflow.entities.lifecycle_stage.LifecycleStage.DELETED"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore.delete_run": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "mlflow.entities.lifecycle_stage.LifecycleStage.DELETED"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore.get_experiment": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "mlflow.entities.ViewType.ALL"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore.get_experiment_by_name": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "len",
    "mlflow.entities.ViewType.ALL",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_STATE"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore.get_metric_history": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "mlflow.store.dbmodels.models.SqlMetric"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore.get_run": {
  "data": {
   "lineno": 385
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore.list_experiments": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "mlflow.entities.ViewType.ACTIVE_ONLY"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore.log_batch": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "Exception",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INTERNAL_ERROR",
    "mlflow.utils.validation._validate_batch_log_data",
    "mlflow.utils.validation._validate_batch_log_limits",
    "mlflow.utils.validation._validate_run_id"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore.log_metric": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "mlflow.store.dbmodels.models.SqlMetric",
    "mlflow.utils.validation._validate_metric"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore.log_param": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "len",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.store.dbmodels.models.SqlParam",
    "mlflow.store.sqlalchemy_store.sqlalchemy"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore.rename_experiment": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "mlflow.entities.ViewType.ALL",
    "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_STATE"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore.restore_experiment": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "mlflow.entities.ViewType.DELETED_ONLY",
    "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore.restore_run": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "mlflow.entities.lifecycle_stage.LifecycleStage.ACTIVE"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore.search_runs": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.store.SEARCH_MAX_RESULTS_THRESHOLD",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore.set_tag": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "mlflow.store.dbmodels.models.SqlTag"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlAlchemyStore.update_run_info": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "mlflow.entities.RunStatus.to_string"
   ]
  },
  "type": "function"
 },
 "mlflow.store.sqlalchemy_store.SqlExperiment": {
  "data": {
   "shadows": "mlflow.store.dbmodels.models.SqlExperiment"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store.SqlMetric": {
  "data": {
   "shadows": "mlflow.store.dbmodels.models.SqlMetric"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store.SqlParam": {
  "data": {
   "shadows": "mlflow.store.dbmodels.models.SqlParam"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store.SqlRun": {
  "data": {
   "shadows": "mlflow.store.dbmodels.models.SqlRun"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store.SqlTag": {
  "data": {
   "shadows": "mlflow.store.dbmodels.models.SqlTag"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store.ViewType": {
  "data": {
   "shadows": "mlflow.entities.ViewType"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store._get_alembic_config": {
  "data": {
   "shadows": "mlflow.store.db.utils._get_alembic_config"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store._get_schema_version": {
  "data": {
   "shadows": "mlflow.store.db.utils._get_schema_version"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store._is_local_uri": {
  "data": {
   "shadows": "mlflow.tracking.utils._is_local_uri"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store._logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mlflow.store.sqlalchemy_store._upgrade_db": {
  "data": {
   "shadows": "mlflow.store.db.utils._upgrade_db"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store._validate_batch_log_data": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_batch_log_data"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store._validate_batch_log_limits": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_batch_log_limits"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store._validate_metric": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_metric"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store._validate_run_id": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_run_id"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store.extract_db_type_from_uri": {
  "data": {
   "shadows": "mlflow.utils.extract_db_type_from_uri"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store.local_file_uri_to_path": {
  "data": {
   "shadows": "mlflow.utils.file_utils.local_file_uri_to_path"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store.mkdir": {
  "data": {
   "shadows": "mlflow.utils.file_utils.mkdir"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store.sqlalchemy": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "mlflow.store.sqlalchemy_store.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users": {
  "data": {},
  "type": "module"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.env": {
  "data": {
   "symbols_in_volume": [
    "alembic.context.config",
    "alembic.context.is_offline_mode",
    "logging.config.fileConfig",
    "mlflow.store.dbmodels.models.Base.metadata",
    "mlflow.temporary_db_migrations_for_pre_1_users.env.config",
    "mlflow.temporary_db_migrations_for_pre_1_users.env.run_migrations_offline",
    "mlflow.temporary_db_migrations_for_pre_1_users.env.run_migrations_online"
   ]
  },
  "type": "module"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.env.Base": {
  "data": {
   "shadows": "mlflow.store.dbmodels.models.Base"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.env.config": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.env.context": {
  "data": {
   "shadows": "alembic.context"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.env.engine_from_config": {
  "data": {
   "shadows": "sqlalchemy.engine_from_config"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.env.fileConfig": {
  "data": {
   "shadows": "logging.config.fileConfig"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.env.pool": {
  "data": {
   "shadows": "sqlalchemy.pool"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.env.run_migrations_offline": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "alembic.context.begin_transaction",
    "alembic.context.configure",
    "alembic.context.run_migrations",
    "mlflow.temporary_db_migrations_for_pre_1_users.env.config",
    "mlflow.temporary_db_migrations_for_pre_1_users.env.target_metadata"
   ]
  },
  "type": "function"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.env.run_migrations_online": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "alembic.context.begin_transaction",
    "alembic.context.configure",
    "alembic.context.run_migrations",
    "mlflow.temporary_db_migrations_for_pre_1_users.env.config",
    "mlflow.temporary_db_migrations_for_pre_1_users.env.target_metadata",
    "sqlalchemy.engine_from_config",
    "sqlalchemy.pool.NullPool"
   ]
  },
  "type": "function"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.env.target_metadata": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions": {
  "data": {},
  "type": "module"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.Base": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.BigInteger": {
  "data": {
   "shadows": "sqlalchemy.BigInteger"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.CheckConstraint": {
  "data": {
   "shadows": "sqlalchemy.CheckConstraint"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.Float": {
  "data": {
   "shadows": "sqlalchemy.Float"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.PrimaryKeyConstraint": {
  "data": {
   "shadows": "sqlalchemy.PrimaryKeyConstraint"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.RunStatusTypes": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.SourceTypes": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.SqlExperiment": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.Base",
    "sqlalchemy.CheckConstraint",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String"
   ]
  },
  "type": "class"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.SqlExperiment.__repr__": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.SqlRun": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "int",
    "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.Base",
    "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.RunStatusTypes",
    "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.SourceTypes",
    "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.time",
    "sqlalchemy.BigInteger",
    "sqlalchemy.CheckConstraint",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.backref": {
  "data": {
   "shadows": "sqlalchemy.orm.backref"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.branch_labels": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.column": {
  "data": {
   "shadows": "sqlalchemy.column"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.depends_on": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.down_revision": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.downgrade": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.revision": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.upgrade": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.SqlExperiment",
    "mlflow.temporary_db_migrations_for_pre_1_users.versions.ff01da956556_ensure_unique_constraint_names.SqlRun",
    "sqlalchemy.column"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking": {
  "data": {},
  "type": "module"
 },
 "mlflow.tracking.MlflowClient": {
  "data": {
   "shadows": "mlflow.tracking.client.MlflowClient"
  },
  "type": "import"
 },
 "mlflow.tracking._EXPERIMENT_ID_ENV_VAR": {
  "data": {
   "shadows": "mlflow.tracking.fluent._EXPERIMENT_ID_ENV_VAR"
  },
  "type": "import"
 },
 "mlflow.tracking._EXPERIMENT_NAME_ENV_VAR": {
  "data": {
   "shadows": "mlflow.tracking.fluent._EXPERIMENT_NAME_ENV_VAR"
  },
  "type": "import"
 },
 "mlflow.tracking._RUN_ID_ENV_VAR": {
  "data": {
   "shadows": "mlflow.tracking.fluent._RUN_ID_ENV_VAR"
  },
  "type": "import"
 },
 "mlflow.tracking._TRACKING_URI_ENV_VAR": {
  "data": {
   "shadows": "mlflow.tracking.utils._TRACKING_URI_ENV_VAR"
  },
  "type": "import"
 },
 "mlflow.tracking.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mlflow.tracking._get_store": {
  "data": {
   "shadows": "mlflow.tracking.utils._get_store"
  },
  "type": "import"
 },
 "mlflow.tracking.artifact_utils": {
  "data": {},
  "type": "module"
 },
 "mlflow.tracking.artifact_utils.INVALID_PARAMETER_VALUE": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  },
  "type": "import"
 },
 "mlflow.tracking.artifact_utils.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.tracking.artifact_utils._download_artifact_from_uri": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "mlflow.store.artifact_repository_registry.get_artifact_repository",
    "mlflow.tracking.artifact_utils.posixpath",
    "six.moves.urllib.parse.urlparse",
    "six.moves.urllib.parse.urlunparse"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.artifact_utils._get_store": {
  "data": {
   "shadows": "mlflow.tracking.utils._get_store"
  },
  "type": "import"
 },
 "mlflow.tracking.artifact_utils.get_artifact_repository": {
  "data": {
   "shadows": "mlflow.store.artifact_repository_registry.get_artifact_repository"
  },
  "type": "import"
 },
 "mlflow.tracking.artifact_utils.get_artifact_uri": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.tracking.artifact_utils.posixpath",
    "mlflow.tracking.utils._get_store",
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.artifact_utils.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "mlflow.tracking.artifact_utils.urllib": {
  "data": {
   "shadows": "six.moves.urllib"
  },
  "type": "import"
 },
 "mlflow.tracking.client": {
  "data": {},
  "type": "module"
 },
 "mlflow.tracking.client.MLFLOW_USER": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_USER"
  },
  "type": "import"
 },
 "mlflow.tracking.client.Metric": {
  "data": {
   "shadows": "mlflow.entities.Metric"
  },
  "type": "import"
 },
 "mlflow.tracking.client.MlflowClient": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.tracking.client.MlflowClient.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "mlflow.tracking.utils._get_store",
    "mlflow.tracking.utils.get_tracking_uri"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.create_experiment": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "mlflow.utils.validation._validate_experiment_artifact_location",
    "mlflow.utils.validation._validate_experiment_name"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.create_run": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "int",
    "mlflow.entities.RunTag",
    "mlflow.tracking.client.time",
    "mlflow.utils.mlflow_tags.MLFLOW_USER",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.delete_experiment": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.delete_run": {
  "data": {
   "lineno": 262
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.download_artifacts": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "mlflow.store.artifact_repository_registry.get_artifact_repository"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.get_experiment": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.get_experiment_by_name": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.get_metric_history": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.get_run": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "mlflow.utils.validation._validate_run_id"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.list_artifacts": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "mlflow.store.artifact_repository_registry.get_artifact_repository"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.list_experiments": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "mlflow.entities.ViewType.ACTIVE_ONLY"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.list_run_infos": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "mlflow.entities.ViewType.ACTIVE_ONLY"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.log_artifact": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "mlflow.store.artifact_repository_registry.get_artifact_repository"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.log_artifacts": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "mlflow.store.artifact_repository_registry.get_artifact_repository"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.log_batch": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "mlflow.utils.validation._validate_metric",
    "mlflow.utils.validation._validate_param_name",
    "mlflow.utils.validation._validate_tag_name"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.log_metric": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "int",
    "mlflow.entities.Metric",
    "mlflow.tracking.client.time",
    "mlflow.utils.validation._validate_metric"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.log_param": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "mlflow.entities.Param",
    "mlflow.utils.validation._validate_param_name",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.rename_experiment": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.restore_experiment": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.restore_run": {
  "data": {
   "lineno": 268
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.search_runs": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "mlflow.entities.ViewType.ACTIVE_ONLY",
    "mlflow.store.SEARCH_MAX_RESULTS_DEFAULT",
    "mlflow.utils.search_utils.SearchFilter",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.set_tag": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "mlflow.entities.RunTag",
    "mlflow.utils.validation._validate_tag_name",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.MlflowClient.set_terminated": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "int",
    "mlflow.entities.RunStatus.FINISHED",
    "mlflow.entities.RunStatus.from_string",
    "mlflow.entities.RunStatus.to_string",
    "mlflow.tracking.client.time"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.client.Param": {
  "data": {
   "shadows": "mlflow.entities.Param"
  },
  "type": "import"
 },
 "mlflow.tracking.client.RunStatus": {
  "data": {
   "shadows": "mlflow.entities.RunStatus"
  },
  "type": "import"
 },
 "mlflow.tracking.client.RunTag": {
  "data": {
   "shadows": "mlflow.entities.RunTag"
  },
  "type": "import"
 },
 "mlflow.tracking.client.SEARCH_MAX_RESULTS_DEFAULT": {
  "data": {
   "shadows": "mlflow.store.SEARCH_MAX_RESULTS_DEFAULT"
  },
  "type": "import"
 },
 "mlflow.tracking.client.SearchFilter": {
  "data": {
   "shadows": "mlflow.utils.search_utils.SearchFilter"
  },
  "type": "import"
 },
 "mlflow.tracking.client.ViewType": {
  "data": {
   "shadows": "mlflow.entities.ViewType"
  },
  "type": "import"
 },
 "mlflow.tracking.client._validate_experiment_artifact_location": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_experiment_artifact_location"
  },
  "type": "import"
 },
 "mlflow.tracking.client._validate_experiment_name": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_experiment_name"
  },
  "type": "import"
 },
 "mlflow.tracking.client._validate_metric": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_metric"
  },
  "type": "import"
 },
 "mlflow.tracking.client._validate_param_name": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_param_name"
  },
  "type": "import"
 },
 "mlflow.tracking.client._validate_run_id": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_run_id"
  },
  "type": "import"
 },
 "mlflow.tracking.client._validate_tag_name": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_tag_name"
  },
  "type": "import"
 },
 "mlflow.tracking.client.get_artifact_repository": {
  "data": {
   "shadows": "mlflow.store.artifact_repository_registry.get_artifact_repository"
  },
  "type": "import"
 },
 "mlflow.tracking.client.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "mlflow.tracking.client.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mlflow.tracking.client.utils": {
  "data": {
   "shadows": "mlflow.tracking.utils"
  },
  "type": "import"
 },
 "mlflow.tracking.context": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.tracking.context.DatabricksNotebookRunContext",
    "mlflow.tracking.context.DefaultRunContext",
    "mlflow.tracking.context.GitRunContext",
    "mlflow.tracking.context.RunContextProviderRegistry",
    "mlflow.tracking.context._run_context_provider_registry",
    "mlflow.tracking.context.logging"
   ]
  },
  "type": "module"
 },
 "mlflow.tracking.context.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "mlflow.tracking.context.DatabricksNotebookRunContext": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "mlflow.tracking.context.RunContextProvider"
   ]
  },
  "type": "class"
 },
 "mlflow.tracking.context.DatabricksNotebookRunContext.in_context": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "mlflow.utils.databricks_utils.is_in_databricks_notebook"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context.DatabricksNotebookRunContext.tags": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "mlflow.entities.SourceType.NOTEBOOK",
    "mlflow.entities.SourceType.to_string",
    "mlflow.utils.databricks_utils.get_notebook_id",
    "mlflow.utils.databricks_utils.get_notebook_path",
    "mlflow.utils.databricks_utils.get_webapp_url",
    "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_NOTEBOOK_ID",
    "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_NOTEBOOK_PATH",
    "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_WEBAPP_URL",
    "mlflow.utils.mlflow_tags.MLFLOW_SOURCE_NAME",
    "mlflow.utils.mlflow_tags.MLFLOW_SOURCE_TYPE"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context.DefaultRunContext": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "mlflow.tracking.context.RunContextProvider"
   ]
  },
  "type": "class"
 },
 "mlflow.tracking.context.DefaultRunContext.in_context": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "mlflow.tracking.context.DefaultRunContext.tags": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "mlflow.entities.SourceType.to_string",
    "mlflow.tracking.context._get_source_name",
    "mlflow.tracking.context._get_source_type",
    "mlflow.tracking.context._get_user",
    "mlflow.utils.mlflow_tags.MLFLOW_SOURCE_NAME",
    "mlflow.utils.mlflow_tags.MLFLOW_SOURCE_TYPE",
    "mlflow.utils.mlflow_tags.MLFLOW_USER"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context.GitRunContext": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "mlflow.tracking.context.RunContextProvider"
   ]
  },
  "type": "class"
 },
 "mlflow.tracking.context.GitRunContext.__init__": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "mlflow.tracking.context.GitRunContext._source_version": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "mlflow.tracking.context._get_source_version",
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context.GitRunContext.in_context": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "mlflow.tracking.context.GitRunContext.tags": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "mlflow.utils.mlflow_tags.MLFLOW_GIT_COMMIT"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context.MLFLOW_DATABRICKS_NOTEBOOK_ID": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_NOTEBOOK_ID"
  },
  "type": "import"
 },
 "mlflow.tracking.context.MLFLOW_DATABRICKS_NOTEBOOK_PATH": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_NOTEBOOK_PATH"
  },
  "type": "import"
 },
 "mlflow.tracking.context.MLFLOW_DATABRICKS_WEBAPP_URL": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_WEBAPP_URL"
  },
  "type": "import"
 },
 "mlflow.tracking.context.MLFLOW_GIT_COMMIT": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_GIT_COMMIT"
  },
  "type": "import"
 },
 "mlflow.tracking.context.MLFLOW_SOURCE_NAME": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_SOURCE_NAME"
  },
  "type": "import"
 },
 "mlflow.tracking.context.MLFLOW_SOURCE_TYPE": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_SOURCE_TYPE"
  },
  "type": "import"
 },
 "mlflow.tracking.context.MLFLOW_USER": {
  "data": {
   "shadows": "mlflow.utils.mlflow_tags.MLFLOW_USER"
  },
  "type": "import"
 },
 "mlflow.tracking.context.RunContextProvider": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.tracking.context.RunContextProvider.in_context": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context.RunContextProvider.tags": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context.RunContextProviderRegistry": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.tracking.context.RunContextProviderRegistry.__init__": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "mlflow.tracking.context.RunContextProviderRegistry.__iter__": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context.RunContextProviderRegistry.register": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "run_context_provider_cls"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context.RunContextProviderRegistry.register_entrypoints": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "mlflow.tracking.context.entrypoints",
    "mlflow.tracking.context.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context.SourceType": {
  "data": {
   "shadows": "mlflow.entities.SourceType"
  },
  "type": "import"
 },
 "mlflow.tracking.context._DEFAULT_USER": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mlflow.tracking.context._get_git_commit": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "mlflow.tracking.context._logger",
    "mlflow.tracking.context.git",
    "mlflow.tracking.context.os"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context._get_main_file": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "len",
    "mlflow.tracking.context.sys"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context._get_source_name": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "mlflow.tracking.context._get_main_file"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context._get_source_type": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "mlflow.entities.SourceType.LOCAL"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context._get_source_version": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "mlflow.tracking.context._get_git_commit",
    "mlflow.tracking.context._get_main_file"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context._get_user": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ImportError",
    "mlflow.tracking.context._DEFAULT_USER",
    "mlflow.tracking.context.getpass"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context._logger": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mlflow.tracking.context._run_context_provider_registry": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "mlflow.tracking.context.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "mlflow.tracking.context.databricks_utils": {
  "data": {
   "shadows": "mlflow.utils.databricks_utils"
  },
  "type": "import"
 },
 "mlflow.tracking.context.entrypoints": {
  "data": {
   "shadows": "entrypoints"
  },
  "type": "import"
 },
 "mlflow.tracking.context.getpass": {
  "data": {
   "shadows": "getpass"
  },
  "type": "import"
 },
 "mlflow.tracking.context.git": {
  "data": {
   "shadows": "git"
  },
  "type": "import"
 },
 "mlflow.tracking.context.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.tracking.context.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.tracking.context.resolve_tags": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "mlflow.tracking.context._run_context_provider_registry"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.context.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlflow.tracking.context.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mlflow.tracking.get_tracking_uri": {
  "data": {
   "shadows": "mlflow.tracking.utils.get_tracking_uri"
  },
  "type": "import"
 },
 "mlflow.tracking.set_tracking_uri": {
  "data": {
   "shadows": "mlflow.tracking.utils.set_tracking_uri"
  },
  "type": "import"
 },
 "mlflow.tracking.utils": {
  "data": {
   "symbols_in_volume": [
    "mlflow.store.dbmodels.db_types.DATABASE_ENGINES",
    "mlflow.tracking.utils.TrackingStoreRegistry",
    "mlflow.tracking.utils._get_databricks_rest_store",
    "mlflow.tracking.utils._get_file_store",
    "mlflow.tracking.utils._get_rest_store",
    "mlflow.tracking.utils._get_sqlalchemy_store",
    "mlflow.tracking.utils._tracking_store_registry"
   ]
  },
  "type": "module"
 },
 "mlflow.tracking.utils.DATABASE_ENGINES": {
  "data": {
   "shadows": "mlflow.store.dbmodels.db_types.DATABASE_ENGINES"
  },
  "type": "import"
 },
 "mlflow.tracking.utils.DEFAULT_LOCAL_FILE_AND_ARTIFACT_PATH": {
  "data": {
   "shadows": "mlflow.store.DEFAULT_LOCAL_FILE_AND_ARTIFACT_PATH"
  },
  "type": "import"
 },
 "mlflow.tracking.utils.FileStore": {
  "data": {
   "shadows": "mlflow.store.file_store.FileStore"
  },
  "type": "import"
 },
 "mlflow.tracking.utils.GitCommandNotFound": {
  "data": {
   "shadows": "git.GitCommandNotFound"
  },
  "type": "import"
 },
 "mlflow.tracking.utils.InvalidGitRepositoryError": {
  "data": {
   "shadows": "git.InvalidGitRepositoryError"
  },
  "type": "import"
 },
 "mlflow.tracking.utils.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.tracking.utils.NoSuchPathError": {
  "data": {
   "shadows": "git.NoSuchPathError"
  },
  "type": "import"
 },
 "mlflow.tracking.utils.Repo": {
  "data": {
   "shadows": "git.Repo"
  },
  "type": "import"
 },
 "mlflow.tracking.utils.RestStore": {
  "data": {
   "shadows": "mlflow.store.rest_store.RestStore"
  },
  "type": "import"
 },
 "mlflow.tracking.utils.SqlAlchemyStore": {
  "data": {
   "shadows": "mlflow.store.sqlalchemy_store.SqlAlchemyStore"
  },
  "type": "import"
 },
 "mlflow.tracking.utils.TrackingStoreRegistry": {
  "data": {
   "lineno": 138
  },
  "type": "class"
 },
 "mlflow.tracking.utils.TrackingStoreRegistry.__init__": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "mlflow.tracking.utils.TrackingStoreRegistry.get_store": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "KeyError",
    "list",
    "mlflow.exceptions.MlflowException",
    "mlflow.tracking.utils.get_tracking_uri",
    "mlflow.utils.get_uri_scheme",
    "store_builder"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.utils.TrackingStoreRegistry.register": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "mlflow.tracking.utils.TrackingStoreRegistry.register_entrypoints": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "mlflow.tracking.utils.entrypoints",
    "mlflow.tracking.utils.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.utils._LOCAL_FS_URI_PREFIX": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mlflow.tracking.utils._REMOTE_URI_PREFIX": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mlflow.tracking.utils._TRACKING_INSECURE_TLS_ENV_VAR": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mlflow.tracking.utils._TRACKING_PASSWORD_ENV_VAR": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mlflow.tracking.utils._TRACKING_TOKEN_ENV_VAR": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mlflow.tracking.utils._TRACKING_URI_ENV_VAR": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mlflow.tracking.utils._TRACKING_USERNAME_ENV_VAR": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mlflow.tracking.utils._get_databricks_rest_store": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "mlflow.store.rest_store.RestStore",
    "mlflow.tracking.utils.get_db_profile_from_uri",
    "mlflow.utils.databricks_utils.get_databricks_host_creds"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.utils._get_file_store": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "mlflow.store.file_store.FileStore",
    "mlflow.utils.file_utils.local_file_uri_to_path"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.utils._get_git_url_if_present": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "git.GitCommandNotFound",
    "git.InvalidGitRepositoryError",
    "git.NoSuchPathError",
    "git.Repo",
    "mlflow.tracking.utils.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.utils._get_rest_store": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "mlflow.store.rest_store.RestStore"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.utils._get_rest_store.get_default_host_creds": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "mlflow.tracking.utils._TRACKING_INSECURE_TLS_ENV_VAR",
    "mlflow.tracking.utils._TRACKING_PASSWORD_ENV_VAR",
    "mlflow.tracking.utils._TRACKING_TOKEN_ENV_VAR",
    "mlflow.tracking.utils._TRACKING_USERNAME_ENV_VAR",
    "mlflow.tracking.utils.os",
    "mlflow.utils.rest_utils.MlflowHostCreds"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.utils._get_sqlalchemy_store": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "mlflow.store.DEFAULT_LOCAL_FILE_AND_ARTIFACT_PATH",
    "mlflow.store.sqlalchemy_store.SqlAlchemyStore"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.utils._get_store": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "mlflow.tracking.utils._tracking_store_registry"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.utils._is_database_uri": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "mlflow.store.dbmodels.db_types.DATABASE_ENGINES",
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.utils._is_databricks_uri": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.utils._is_http_uri": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.utils._is_local_uri": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.utils._tracking_store_registry": {
  "data": {
   "lineno": 199
  },
  "type": "constant"
 },
 "mlflow.tracking.utils._tracking_uri": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mlflow.tracking.utils.entrypoints": {
  "data": {
   "shadows": "entrypoints"
  },
  "type": "import"
 },
 "mlflow.tracking.utils.env": {
  "data": {
   "shadows": "mlflow.utils.env"
  },
  "type": "import"
 },
 "mlflow.tracking.utils.file_utils": {
  "data": {
   "shadows": "mlflow.utils.file_utils"
  },
  "type": "import"
 },
 "mlflow.tracking.utils.get_databricks_host_creds": {
  "data": {
   "shadows": "mlflow.utils.databricks_utils.get_databricks_host_creds"
  },
  "type": "import"
 },
 "mlflow.tracking.utils.get_db_profile_from_uri": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.utils.get_tracking_uri": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "mlflow.store.DEFAULT_LOCAL_FILE_AND_ARTIFACT_PATH",
    "mlflow.tracking.utils._TRACKING_URI_ENV_VAR",
    "mlflow.tracking.utils._tracking_uri",
    "mlflow.tracking.utils.os",
    "mlflow.utils.env.get_env",
    "mlflow.utils.file_utils.path_to_local_file_uri"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.utils.get_uri_scheme": {
  "data": {
   "shadows": "mlflow.utils.get_uri_scheme"
  },
  "type": "import"
 },
 "mlflow.tracking.utils.is_tracking_uri_set": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "mlflow.tracking.utils._TRACKING_URI_ENV_VAR",
    "mlflow.tracking.utils._tracking_uri",
    "mlflow.utils.env.get_env"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.tracking.utils.path_to_local_file_uri": {
  "data": {
   "shadows": "mlflow.utils.file_utils.path_to_local_file_uri"
  },
  "type": "import"
 },
 "mlflow.tracking.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mlflow.tracking.utils.rest_utils": {
  "data": {
   "shadows": "mlflow.utils.rest_utils"
  },
  "type": "import"
 },
 "mlflow.tracking.utils.set_tracking_uri": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "mlflow.tracking.utils._tracking_uri"
   ]
  },
  "type": "function"
 },
 "mlflow.tracking.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlflow.tracking.utils.urllib": {
  "data": {
   "shadows": "six.moves.urllib"
  },
  "type": "import"
 },
 "mlflow.tracking.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mlflow.utils": {
  "data": {
   "symbols_in_volume": [
    "sys.version_info.major",
    "sys.version_info.micro",
    "sys.version_info.minor"
   ]
  },
  "type": "module"
 },
 "mlflow.utils.DATABASE_ENGINES": {
  "data": {
   "shadows": "mlflow.store.dbmodels.db_types.DATABASE_ENGINES"
  },
  "type": "import"
 },
 "mlflow.utils.INVALID_PARAMETER_VALUE": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  },
  "type": "import"
 },
 "mlflow.utils.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.utils.PYTHON_VERSION": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mlflow.utils._INVALID_DB_URI_MSG": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mlflow.utils._validate_db_type_string": {
  "data": {
   "shadows": "mlflow.utils.validation._validate_db_type_string"
  },
  "type": "import"
 },
 "mlflow.utils.annotations": {
  "data": {},
  "type": "module"
 },
 "mlflow.utils.annotations.deprecated": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "mlflow.utils.annotations.deprecated.deprecated_func": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "mlflow.utils.annotations.experimental": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "mlflow.utils.annotations.keyword_only": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "mlflow.utils.annotations.keyword_only.wrapper": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "TypeError",
    "func",
    "functools.wraps",
    "len"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.annotations.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "mlflow.utils.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "mlflow.utils.cli_args": {
  "data": {
   "symbols_in_volume": [
    "mlflow.utils.cli_args.click"
   ]
  },
  "type": "module"
 },
 "mlflow.utils.cli_args.HOST": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mlflow.utils.cli_args.INSTALL_MLFLOW": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mlflow.utils.cli_args.MLFLOW_HOME": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mlflow.utils.cli_args.MODEL_PATH": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "mlflow.utils.cli_args.MODEL_URI": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "mlflow.utils.cli_args.NO_CONDA": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mlflow.utils.cli_args.PORT": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mlflow.utils.cli_args.RUN_ID": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mlflow.utils.cli_args.WORKERS": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mlflow.utils.cli_args.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "mlflow.utils.databricks_utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.utils.databricks_utils.logging"
   ]
  },
  "type": "module"
 },
 "mlflow.utils.databricks_utils.IPython": {
  "data": {
   "shadows": "IPython"
  },
  "type": "import"
 },
 "mlflow.utils.databricks_utils.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.utils.databricks_utils.MlflowHostCreds": {
  "data": {
   "shadows": "mlflow.utils.rest_utils.MlflowHostCreds"
  },
  "type": "import"
 },
 "mlflow.utils.databricks_utils._NoDbutilsError": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "mlflow.utils.databricks_utils._fail_malformed_databricks_auth": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.databricks_utils._get_dbutils": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ImportError",
    "KeyError",
    "mlflow.utils.databricks_utils.IPython"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.databricks_utils._get_extra_context": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "mlflow.utils.databricks_utils._get_dbutils"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.databricks_utils._logger": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "mlflow.utils.databricks_utils.get_databricks_host_creds": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "databricks_cli.configure.provider",
    "databricks_cli.configure.provider.ProfileConfigProvider",
    "databricks_cli.configure.provider.get_config",
    "databricks_cli.configure.provider.get_config_for_profile",
    "hasattr",
    "mlflow.utils.databricks_utils._fail_malformed_databricks_auth",
    "mlflow.utils.databricks_utils._logger",
    "mlflow.utils.rest_utils.MlflowHostCreds"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.databricks_utils.get_notebook_id": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "mlflow.utils.databricks_utils._get_extra_context"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.databricks_utils.get_notebook_path": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "mlflow.utils.databricks_utils._get_extra_context"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.databricks_utils.get_webapp_url": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "mlflow.utils.databricks_utils._get_extra_context"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.databricks_utils.is_in_databricks_notebook": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "Exception",
    "mlflow.utils.databricks_utils._get_extra_context"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.databricks_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.utils.databricks_utils.provider": {
  "data": {
   "shadows": "databricks_cli.configure.provider"
  },
  "type": "import"
 },
 "mlflow.utils.deprecated": {
  "data": {
   "shadows": "mlflow.utils.annotations.deprecated"
  },
  "type": "import"
 },
 "mlflow.utils.env": {
  "data": {},
  "type": "module"
 },
 "mlflow.utils.env.get_env": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "mlflow.utils.env.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.env.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.utils.env.unset_variable": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "mlflow.utils.env.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.environment": {
  "data": {},
  "type": "module"
 },
 "mlflow.utils.environment.PYTHON_VERSION": {
  "data": {
   "shadows": "mlflow.utils.PYTHON_VERSION"
  },
  "type": "import"
 },
 "mlflow.utils.environment._conda_header": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "mlflow.utils.environment._mlflow_conda_env": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "mlflow.utils.PYTHON_VERSION",
    "mlflow.utils.environment._conda_header",
    "mlflow.utils.environment.yaml",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.environment.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "mlflow.utils.experimental": {
  "data": {
   "shadows": "mlflow.utils.annotations.experimental"
  },
  "type": "import"
 },
 "mlflow.utils.extract_db_type_from_uri": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.utils._INVALID_DB_URI_MSG",
    "mlflow.utils.validation._validate_db_type_string",
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils": {
  "data": {},
  "type": "module"
 },
 "mlflow.utils.file_utils.ENCODING": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mlflow.utils.file_utils.FileInfo": {
  "data": {
   "shadows": "mlflow.entities.FileInfo"
  },
  "type": "import"
 },
 "mlflow.utils.file_utils.MissingConfigException": {
  "data": {
   "shadows": "mlflow.exceptions.MissingConfigException"
  },
  "type": "import"
 },
 "mlflow.utils.file_utils.TempDir": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.utils.file_utils.TempDir.__enter__": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.os",
    "mlflow.utils.file_utils.tempfile"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.TempDir.__exit__": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.os",
    "mlflow.utils.file_utils.shutil"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.TempDir.__init__": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.TempDir.path": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils._copy_file_or_tree": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.os",
    "mlflow.utils.file_utils.shutil"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils._copy_project": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "_docker_ignore",
    "mlflow.utils.file_utils.os",
    "mlflow.utils.file_utils.shutil",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils._copy_project._docker_ignore": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.os",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils._copy_project._docker_ignore.ignore": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "list",
    "mlflow.utils.file_utils.fnmatch",
    "set"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.append_to": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "mlflow.utils.file_utils.exists": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.find": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.list_all",
    "mlflow.utils.file_utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "mlflow.utils.file_utils.get_file_info": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "mlflow.entities.FileInfo",
    "mlflow.utils.file_utils.is_directory",
    "mlflow.utils.file_utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.get_local_path_or_none": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "len",
    "mlflow.utils.file_utils.local_file_uri_to_path",
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.get_parent_dir": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.get_relative_path": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "Exception",
    "len",
    "mlflow.utils.file_utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "mlflow.utils.file_utils.is_directory": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.is_file": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.list_all": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "Exception",
    "filter_func",
    "mlflow.utils.file_utils.is_directory",
    "mlflow.utils.file_utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.list_files": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.list_all",
    "mlflow.utils.file_utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.list_subdirs": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.list_all",
    "mlflow.utils.file_utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.local_file_uri_to_path": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "six.moves.urllib.parse.urlparse",
    "six.moves.urllib.request.url2pathname"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.make_containing_dirs": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.make_tarfile": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.gzip",
    "mlflow.utils.file_utils.os",
    "mlflow.utils.file_utils.tarfile",
    "mlflow.utils.file_utils.tempfile",
    "open"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.make_tarfile._filter_timestamps": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "custom_filter"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.mkdir": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "OSError",
    "mlflow.utils.file_utils.exists",
    "mlflow.utils.file_utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.mv": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.shutil"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.utils.file_utils.path_to_local_file_uri": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.posixpath",
    "six.moves.urllib.request.pathname2url"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.path_to_local_sqlite_uri": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.os",
    "mlflow.utils.file_utils.posixpath",
    "mlflow.utils.file_utils.sys",
    "six.moves.urllib.request.pathname2url"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.pathname2url": {
  "data": {
   "shadows": "six.moves.urllib.request.pathname2url"
  },
  "type": "import"
 },
 "mlflow.utils.file_utils.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "mlflow.utils.file_utils.read_file": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.ENCODING",
    "mlflow.utils.file_utils.codecs",
    "mlflow.utils.file_utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.read_file_lines": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.ENCODING",
    "mlflow.utils.file_utils.codecs",
    "mlflow.utils.file_utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.read_yaml": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "Exception",
    "mlflow.exceptions.MissingConfigException",
    "mlflow.utils.file_utils.ENCODING",
    "mlflow.utils.file_utils.codecs",
    "mlflow.utils.file_utils.exists",
    "mlflow.utils.file_utils.os",
    "mlflow.utils.file_utils.yaml"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.relative_path_to_artifact_path": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "Exception",
    "mlflow.utils.file_utils.os",
    "mlflow.utils.file_utils.posixpath",
    "six.moves.urllib.parse.unquote",
    "six.moves.urllib.request.pathname2url"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mlflow.utils.file_utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlflow.utils.file_utils.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "mlflow.utils.file_utils.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "mlflow.utils.file_utils.unquote": {
  "data": {
   "shadows": "six.moves.urllib.parse.unquote"
  },
  "type": "import"
 },
 "mlflow.utils.file_utils.urllib": {
  "data": {
   "shadows": "six.moves.urllib"
  },
  "type": "import"
 },
 "mlflow.utils.file_utils.write_to": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "mlflow.utils.file_utils.ENCODING",
    "mlflow.utils.file_utils.codecs"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.write_yaml": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "Exception",
    "mlflow.exceptions.MissingConfigException",
    "mlflow.utils.file_utils.ENCODING",
    "mlflow.utils.file_utils.codecs",
    "mlflow.utils.file_utils.exists",
    "mlflow.utils.file_utils.os",
    "mlflow.utils.file_utils.yaml"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.file_utils.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "mlflow.utils.get_major_minor_py_version": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "mlflow.utils.get_unique_resource_id": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "mlflow.utils.base64",
    "mlflow.utils.uuid",
    "sys.version_info"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.get_uri_scheme": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "any",
    "mlflow.store.dbmodels.db_types.DATABASE_ENGINES",
    "mlflow.utils.extract_db_type_from_uri",
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.keyword_only": {
  "data": {
   "shadows": "mlflow.utils.annotations.keyword_only"
  },
  "type": "import"
 },
 "mlflow.utils.logging_utils": {
  "data": {},
  "type": "module"
 },
 "mlflow.utils.logging_utils.LOGGING_DATETIME_FORMAT": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mlflow.utils.logging_utils.LOGGING_LINE_FORMAT": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "mlflow.utils.logging_utils._configure_mlflow_loggers": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "mlflow.utils.logging_utils.LOGGING_DATETIME_FORMAT",
    "mlflow.utils.logging_utils.LOGGING_LINE_FORMAT",
    "mlflow.utils.logging_utils.logging",
    "mlflow.utils.logging_utils.sys"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.logging_utils.eprint": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "mlflow.utils.logging_utils.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.logging_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.utils.logging_utils.logging.config": {
  "data": {
   "shadows": "logging.config"
  },
  "type": "import"
 },
 "mlflow.utils.logging_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mlflow.utils.logging_utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mlflow.utils.mlflow_tags": {
  "data": {},
  "type": "module"
 },
 "mlflow.utils.mlflow_tags.LEGACY_MLFLOW_GIT_BRANCH_NAME": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.LEGACY_MLFLOW_GIT_REPO_URL": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_NOTEBOOK_ID": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_NOTEBOOK_PATH": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_RUN_URL": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_SHELL_JOB_ID": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_SHELL_JOB_RUN_ID": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_DATABRICKS_WEBAPP_URL": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_DOCKER_IMAGE_ID": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_DOCKER_IMAGE_NAME": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_GIT_BRANCH": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_GIT_COMMIT": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_GIT_REPO_URL": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_PARENT_RUN_ID": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_PROJECT_ENTRY_POINT": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_PROJECT_ENV": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_RUN_NAME": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_SOURCE_NAME": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_SOURCE_TYPE": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "mlflow.utils.mlflow_tags.MLFLOW_USER": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "mlflow.utils.model_utils": {
  "data": {},
  "type": "module"
 },
 "mlflow.utils.model_utils.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.utils.model_utils.Model": {
  "data": {
   "shadows": "mlflow.models.Model"
  },
  "type": "import"
 },
 "mlflow.utils.model_utils.RESOURCE_DOES_NOT_EXIST": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST"
  },
  "type": "import"
 },
 "mlflow.utils.model_utils._get_flavor_configuration": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.models.Model.load",
    "mlflow.protos.databricks_pb2.RESOURCE_DOES_NOT_EXIST",
    "mlflow.utils.model_utils.os"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.model_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlflow.utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "mlflow.utils.process": {
  "data": {},
  "type": "module"
 },
 "mlflow.utils.process.ShellCommandException": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "mlflow.utils.process.exec_cmd": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "mlflow.utils.process.ShellCommandException",
    "mlflow.utils.process.os",
    "mlflow.utils.process.subprocess"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.process.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mlflow.utils.process.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "mlflow.utils.proto_json_utils": {
  "data": {},
  "type": "module"
 },
 "mlflow.utils.proto_json_utils.MessageToJson": {
  "data": {
   "shadows": "google.protobuf.json_format.MessageToJson"
  },
  "type": "import"
 },
 "mlflow.utils.proto_json_utils.ParseDict": {
  "data": {
   "shadows": "google.protobuf.json_format.ParseDict"
  },
  "type": "import"
 },
 "mlflow.utils.proto_json_utils._stringify_all_experiment_ids": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.proto_json_utils.message_to_json": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "google.protobuf.json_format.MessageToJson"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.proto_json_utils.parse_dict": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "google.protobuf.json_format.ParseDict",
    "mlflow.utils.proto_json_utils._stringify_all_experiment_ids"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.rest_utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlflow.__version__",
    "mlflow.utils.rest_utils.logging"
   ]
  },
  "type": "module"
 },
 "mlflow.utils.rest_utils.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.utils.rest_utils.MlflowHostCreds": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlflow.utils.rest_utils.MlflowHostCreds.__init__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.rest_utils.RESOURCE_DOES_NOT_EXIST": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mlflow.utils.rest_utils.RestException": {
  "data": {
   "shadows": "mlflow.exceptions.RestException"
  },
  "type": "import"
 },
 "mlflow.utils.rest_utils._DEFAULT_HEADERS": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mlflow.utils.rest_utils.__version__": {
  "data": {
   "shadows": "mlflow.__version__"
  },
  "type": "import"
 },
 "mlflow.utils.rest_utils._can_parse_as_json": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ValueError",
    "mlflow.utils.rest_utils.json"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.rest_utils._logger": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mlflow.utils.rest_utils.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "mlflow.utils.rest_utils.http_request": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "dict",
    "mlflow.exceptions.MlflowException",
    "mlflow.utils.rest_utils._DEFAULT_HEADERS",
    "mlflow.utils.rest_utils._logger",
    "mlflow.utils.rest_utils.base64",
    "mlflow.utils.rest_utils.requests",
    "mlflow.utils.rest_utils.time",
    "mlflow.utils.string_utils.strip_suffix",
    "range"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.rest_utils.http_request_safe": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "mlflow.utils.rest_utils.http_request",
    "mlflow.utils.rest_utils.verify_rest_response"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.rest_utils.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mlflow.utils.rest_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mlflow.utils.rest_utils.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "mlflow.utils.rest_utils.strip_suffix": {
  "data": {
   "shadows": "mlflow.utils.string_utils.strip_suffix"
  },
  "type": "import"
 },
 "mlflow.utils.rest_utils.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mlflow.utils.rest_utils.verify_rest_response": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.exceptions.RestException",
    "mlflow.utils.rest_utils._can_parse_as_json",
    "mlflow.utils.rest_utils.json"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils": {
  "data": {},
  "type": "module"
 },
 "mlflow.utils.search_utils.Comparison": {
  "data": {
   "shadows": "sqlparse.sql.Comparison"
  },
  "type": "import"
 },
 "mlflow.utils.search_utils.INVALID_PARAMETER_VALUE": {
  "data": {
   "shadows": "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
  },
  "type": "import"
 },
 "mlflow.utils.search_utils.Identifier": {
  "data": {
   "shadows": "sqlparse.sql.Identifier"
  },
  "type": "import"
 },
 "mlflow.utils.search_utils.MlflowException": {
  "data": {
   "shadows": "mlflow.exceptions.MlflowException"
  },
  "type": "import"
 },
 "mlflow.utils.search_utils.RunInfo": {
  "data": {
   "shadows": "mlflow.entities.RunInfo"
  },
  "type": "import"
 },
 "mlflow.utils.search_utils.SearchFilter": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "list",
    "mlflow.entities.RunInfo.get_searchable_attributes",
    "object",
    "set",
    "sqlparse.tokens.Token.Literal.Number.Float",
    "sqlparse.tokens.Token.Literal.Number.Integer",
    "sqlparse.tokens.Token.Literal.String.Single"
   ]
  },
  "type": "class"
 },
 "mlflow.utils.search_utils.SearchFilter.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchFilter._get_comparison": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchFilter._get_identifier": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchFilter._get_value": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "classmethod",
    "isinstance",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "sqlparse.sql.Identifier"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchFilter._invalid_statement_token": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "classmethod",
    "isinstance",
    "sqlparse.sql.Comparison",
    "sqlparse.tokens.Token.Keyword"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchFilter._is_quoted": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "classmethod",
    "len"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchFilter._parse": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "len",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "mlflow.utils.search_utils.sqlparse",
    "sqlparse.sql.Statement"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchFilter._process_statement": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "classmethod",
    "filter",
    "isinstance",
    "len",
    "list",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "sqlparse.sql.Comparison"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchFilter._strip_quotes": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "classmethod",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchFilter._trim_backticks": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchFilter._trim_ends": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchFilter._valid_entity_type": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "classmethod",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchFilter._validate_comparison": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "classmethod",
    "isinstance",
    "len",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE",
    "sqlparse.sql.Identifier",
    "sqlparse.tokens.Token",
    "sqlparse.tokens.Token.Operator.Comparison",
    "str"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchFilter.does_run_match_clause": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "classmethod",
    "float",
    "getattr",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchFilter.filter": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "all"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchFilter.filter_string": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchFilter.search_expression_to_dict": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "classmethod",
    "mlflow.exceptions.MlflowException",
    "mlflow.protos.databricks_pb2.INVALID_PARAMETER_VALUE"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.SearchFilter.search_expressions": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.search_utils.Statement": {
  "data": {
   "shadows": "sqlparse.sql.Statement"
  },
  "type": "import"
 },
 "mlflow.utils.search_utils.Token": {
  "data": {
   "shadows": "sqlparse.sql.Token"
  },
  "type": "import"
 },
 "mlflow.utils.search_utils.TokenType": {
  "data": {
   "shadows": "sqlparse.tokens.Token"
  },
  "type": "import"
 },
 "mlflow.utils.search_utils.sqlparse": {
  "data": {
   "shadows": "sqlparse"
  },
  "type": "import"
 },
 "mlflow.utils.string_utils": {
  "data": {},
  "type": "module"
 },
 "mlflow.utils.string_utils.strip_prefix": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.string_utils.strip_suffix": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.time_utils": {
  "data": {},
  "type": "module"
 },
 "mlflow.utils.time_utils.conv_longdate_to_str": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "mlflow.utils.time_utils.datetime",
    "pytz.reference.LocalTimezone"
   ]
  },
  "type": "function"
 },
 "mlflow.utils.time_utils.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mlflow.utils.time_utils.reference": {
  "data": {
   "shadows": "pytz.reference"
  },
  "type": "import"
 },
 "mlflow.utils.urllib": {
  "data": {
   "shadows": "six.moves.urllib"
  },
  "type": "import"
 },
 "mlflow.utils.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "mlflow.utils.version_info": {
  "data": {
   "shadows": "sys.version_info"
  },
  "type": "import"
 },
 "mlflow.version": {
  "data": {},
  "type": "module"
 },
 "mlflow.version.VERSION": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "mlflow.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 }
}