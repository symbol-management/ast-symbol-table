{
 "dagstermill": {
  "data": {
   "symbols_in_volume": [
    "dagster.core.utils.check_dagster_package_version"
   ]
  },
  "type": "module"
 },
 "dagstermill._MANAGER_FOR_NOTEBOOK_INSTANCE": {
  "data": {
   "shadows": "MANAGER_FOR_NOTEBOOK_INSTANCE"
  },
  "type": "import"
 },
 "dagstermill.__main__": {
  "data": {
   "symbols_in_volume": [
    "main"
   ]
  },
  "type": "module"
 },
 "dagstermill._load_parameter": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "dagstermill._reconstitute_pipeline_context": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "dagstermill._teardown": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "dagstermill.check_dagster_package_version": {
  "data": {
   "shadows": "dagster.core.utils.check_dagster_package_version"
  },
  "type": "import"
 },
 "dagstermill.cli": {
  "data": {},
  "type": "module"
 },
 "dagstermill.cli.check": {
  "data": {
   "shadows": "dagster.check"
  },
  "type": "import"
 },
 "dagstermill.cli.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "dagstermill.cli.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "dagstermill.cli.create_dagstermill_cli": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "dagstermill.cli.click",
    "dagstermill.cli.create_notebook",
    "dagstermill.cli.retroactively_scaffold_notebook"
   ]
  },
  "type": "function"
 },
 "dagstermill.cli.create_notebook": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "dagstermill.cli.click",
    "dagstermill.cli.execute_create_notebook"
   ]
  },
  "type": "function"
 },
 "dagstermill.cli.execute_create_notebook": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "dagster.utils.mkdir_p",
    "dagster.utils.safe_isfile",
    "dagstermill.cli.click",
    "dagstermill.cli.get_kernelspec",
    "dagstermill.cli.get_notebook_scaffolding",
    "dagstermill.cli.os",
    "open"
   ]
  },
  "type": "function"
 },
 "dagstermill.cli.execute_retroactive_scaffold": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "dagstermill.cli.copy",
    "dagstermill.cli.get_import_cell",
    "dagstermill.cli.get_parameters_cell",
    "papermill.iorw.load_notebook_node",
    "papermill.iorw.write_ipynb"
   ]
  },
  "type": "function"
 },
 "dagstermill.cli.get_import_cell": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "dagstermill.cli.nbformat"
   ]
  },
  "type": "function"
 },
 "dagstermill.cli.get_kernelspec": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "dagster.check.invariant",
    "dagster.seven.json.loads",
    "dagstermill.cli.subprocess",
    "len",
    "list",
    "print"
   ]
  },
  "type": "function"
 },
 "dagstermill.cli.get_notebook_scaffolding": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "dagster.check.dict_param",
    "dagstermill.cli.get_import_cell",
    "dagstermill.cli.get_parameters_cell",
    "dagstermill.cli.nbformat",
    "str"
   ]
  },
  "type": "function"
 },
 "dagstermill.cli.get_parameters_cell": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "dagstermill.cli.nbformat"
   ]
  },
  "type": "function"
 },
 "dagstermill.cli.load_notebook_node": {
  "data": {
   "shadows": "papermill.iorw.load_notebook_node"
  },
  "type": "import"
 },
 "dagstermill.cli.loads": {
  "data": {
   "shadows": "dagster.seven.json.loads"
  },
  "type": "import"
 },
 "dagstermill.cli.main": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "cli",
    "dagstermill.cli.create_dagstermill_cli"
   ]
  },
  "type": "function"
 },
 "dagstermill.cli.mkdir_p": {
  "data": {
   "shadows": "dagster.utils.mkdir_p"
  },
  "type": "import"
 },
 "dagstermill.cli.nbformat": {
  "data": {
   "shadows": "nbformat"
  },
  "type": "import"
 },
 "dagstermill.cli.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "dagstermill.cli.retroactively_scaffold_notebook": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "dagstermill.cli.click",
    "dagstermill.cli.execute_retroactive_scaffold"
   ]
  },
  "type": "function"
 },
 "dagstermill.cli.safe_isfile": {
  "data": {
   "shadows": "dagster.utils.safe_isfile"
  },
  "type": "import"
 },
 "dagstermill.cli.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "dagstermill.cli.write_ipynb": {
  "data": {
   "shadows": "papermill.iorw.write_ipynb"
  },
  "type": "import"
 },
 "dagstermill.context": {
  "data": {},
  "type": "module"
 },
 "dagstermill.context.AbstractComputeExecutionContext": {
  "data": {
   "shadows": "dagster.core.execution.context.compute.AbstractComputeExecutionContext"
  },
  "type": "import"
 },
 "dagstermill.context.DagstermillExecutionContext": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "dagster.core.execution.context.compute.AbstractComputeExecutionContext"
   ]
  },
  "type": "class"
 },
 "dagstermill.context.DagstermillExecutionContext.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "dagster.check.inst_param",
    "dagster.check.set_param",
    "dagster.core.execution.context.system.SystemPipelineExecutionContext",
    "str"
   ]
  },
  "type": "function"
 },
 "dagstermill.context.DagstermillExecutionContext.environment_config": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "dagstermill.context.DagstermillExecutionContext.environment_dict": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "dagstermill.context.DagstermillExecutionContext.get_tag": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "dagstermill.context.DagstermillExecutionContext.has_tag": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "dagstermill.context.DagstermillExecutionContext.log": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "dagstermill.context.DagstermillExecutionContext.logging_tags": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "dagstermill.context.DagstermillExecutionContext.pipeline_def": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "dagstermill.context.DagstermillExecutionContext.pipeline_run": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "dagstermill.context.DagstermillExecutionContext.resources": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "dagstermill.context.DagstermillExecutionContext.run_id": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "dagstermill.context.DagstermillExecutionContext.solid": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "dagstermill.context.DagstermillExecutionContext.solid_config": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "dagstermill.context.DagstermillExecutionContext.solid_def": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "dagstermill.context.DagstermillRuntimeExecutionContext": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "dagstermill.context.DagstermillExecutionContext"
   ]
  },
  "type": "class"
 },
 "dagstermill.context.SystemPipelineExecutionContext": {
  "data": {
   "shadows": "dagster.core.execution.context.system.SystemPipelineExecutionContext"
  },
  "type": "import"
 },
 "dagstermill.context.check": {
  "data": {
   "shadows": "dagster.check"
  },
  "type": "import"
 },
 "dagstermill.engine": {
  "data": {},
  "type": "module"
 },
 "dagstermill.engine.CellExecutionError": {
  "data": {
   "shadows": "nbconvert.preprocessors.execute.CellExecutionError"
  },
  "type": "import"
 },
 "dagstermill.engine.DagstermillExecutePreprocessor": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "papermill.preprocess.PapermillExecutePreprocessor"
   ]
  },
  "type": "class"
 },
 "dagstermill.engine.DagstermillExecutePreprocessor.papermill_process": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "dagstermill.engine.DagstermillExecutePreprocessor",
    "dagstermill.engine.nbformat",
    "len",
    "nbconvert.preprocessors.execute.CellExecutionError",
    "super"
   ]
  },
  "type": "function"
 },
 "dagstermill.engine.DagstermillNBConvertEngine": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "papermill.engines.NBConvertEngine"
   ]
  },
  "type": "class"
 },
 "dagstermill.engine.DagstermillNBConvertEngine.execute_managed_notebook": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "classmethod",
    "dagstermill.engine.DagstermillExecutePreprocessor",
    "papermill.log.logger"
   ]
  },
  "type": "function"
 },
 "dagstermill.engine.NBConvertEngine": {
  "data": {
   "shadows": "papermill.engines.NBConvertEngine"
  },
  "type": "import"
 },
 "dagstermill.engine.PapermillExecutePreprocessor": {
  "data": {
   "shadows": "papermill.preprocess.PapermillExecutePreprocessor"
  },
  "type": "import"
 },
 "dagstermill.engine.logger": {
  "data": {
   "shadows": "papermill.log.logger"
  },
  "type": "import"
 },
 "dagstermill.engine.nbformat": {
  "data": {
   "shadows": "nbformat"
  },
  "type": "import"
 },
 "dagstermill.errors": {
  "data": {},
  "type": "module"
 },
 "dagstermill.errors.DagsterUserCodeExecutionError": {
  "data": {
   "shadows": "dagster.core.errors.DagsterUserCodeExecutionError"
  },
  "type": "import"
 },
 "dagstermill.errors.DagstermillError": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "dagstermill.errors.DagstermillExecutionError": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "dagster.core.errors.DagsterUserCodeExecutionError",
    "dagstermill.errors.DagstermillError"
   ]
  },
  "type": "class"
 },
 "dagstermill.examples": {
  "data": {},
  "type": "module"
 },
 "dagstermill.examples.repository": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "dagster.InputDefinition",
    "dagster.List",
    "dagster.OutputDefinition",
    "dagstermill.examples.repository.DAGSTER_PANDAS_PRESENT",
    "dagstermill.examples.repository.MATPLOTLIB_PRESENT",
    "dagstermill.examples.repository.SKLEARN_PRESENT",
    "dagstermill.examples.repository.dagstermill",
    "dagstermill.examples.repository.nb_test_path",
    "int"
   ]
  },
  "type": "module"
 },
 "dagstermill.examples.repository.DAGSTER_PANDAS_PRESENT": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "dagstermill.examples.repository.DataFrame": {
  "data": {
   "shadows": "dagster_pandas.DataFrame"
  },
  "type": "import"
 },
 "dagstermill.examples.repository.DependencyDefinition": {
  "data": {
   "shadows": "dagster.DependencyDefinition"
  },
  "type": "import"
 },
 "dagstermill.examples.repository.Field": {
  "data": {
   "shadows": "dagster.Field"
  },
  "type": "import"
 },
 "dagstermill.examples.repository.FileHandle": {
  "data": {
   "shadows": "dagster.FileHandle"
  },
  "type": "import"
 },
 "dagstermill.examples.repository.FilePickleList": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dagstermill.examples.repository.FilePickleList.__init__": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "dagstermill.examples.repository.os",
    "dagstermill.examples.repository.uuid",
    "str"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.FilePickleList.append": {
  "data": {
   "lineno": 301
  },
  "type": "function"
 },
 "dagstermill.examples.repository.FilePickleList.close": {
  "data": {
   "lineno": 315
  },
  "type": "function"
 },
 "dagstermill.examples.repository.FilePickleList.open": {
  "data": {
   "lineno": 297
  },
  "type": "function"
 },
 "dagstermill.examples.repository.FilePickleList.read": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "dagstermill.examples.repository.pickle",
    "open"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.FilePickleList.write": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "dagster.utils.PICKLE_PROTOCOL",
    "dagstermill.examples.repository.pickle",
    "open"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.InputDefinition": {
  "data": {
   "shadows": "dagster.InputDefinition"
  },
  "type": "import"
 },
 "dagstermill.examples.repository.Int": {
  "data": {
   "shadows": "dagster.Int"
  },
  "type": "import"
 },
 "dagstermill.examples.repository.LR_solid": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "dagster.InputDefinition",
    "dagster_pandas.DataFrame",
    "dagstermill.examples.repository.dagstermill",
    "dagstermill.examples.repository.nb_test_path",
    "dagstermill.examples.repository.solid_definition"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.List": {
  "data": {
   "shadows": "dagster.List"
  },
  "type": "import"
 },
 "dagstermill.examples.repository.MATPLOTLIB_PRESENT": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "dagstermill.examples.repository.ModeDefinition": {
  "data": {
   "shadows": "dagster.ModeDefinition"
  },
  "type": "import"
 },
 "dagstermill.examples.repository.OutputDefinition": {
  "data": {
   "shadows": "dagster.OutputDefinition"
  },
  "type": "import"
 },
 "dagstermill.examples.repository.PICKLE_PROTOCOL": {
  "data": {
   "shadows": "dagster.utils.PICKLE_PROTOCOL"
  },
  "type": "import"
 },
 "dagstermill.examples.repository.PipelineDefinition": {
  "data": {
   "shadows": "dagster.PipelineDefinition"
  },
  "type": "import"
 },
 "dagstermill.examples.repository.RF_solid": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "dagster.InputDefinition",
    "dagster_pandas.DataFrame",
    "dagstermill.examples.repository.dagstermill",
    "dagstermill.examples.repository.nb_test_path",
    "dagstermill.examples.repository.solid_definition"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.RepositoryDefinition": {
  "data": {
   "shadows": "dagster.RepositoryDefinition"
  },
  "type": "import"
 },
 "dagstermill.examples.repository.ResourceDefinition": {
  "data": {
   "shadows": "dagster.ResourceDefinition"
  },
  "type": "import"
 },
 "dagstermill.examples.repository.SKLEARN_PRESENT": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "dagstermill.examples.repository.SolidDefinition": {
  "data": {
   "shadows": "dagster.SolidDefinition"
  },
  "type": "import"
 },
 "dagstermill.examples.repository.SolidInvocation": {
  "data": {
   "shadows": "dagster.SolidInvocation"
  },
  "type": "import"
 },
 "dagstermill.examples.repository.String": {
  "data": {
   "shadows": "dagster.String"
  },
  "type": "import"
 },
 "dagstermill.examples.repository._": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "dagstermill.examples.repository.add_two_numbers_pm_solid": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "dagster.InputDefinition",
    "dagster.Int",
    "dagster.OutputDefinition",
    "dagstermill.examples.repository.dagstermill",
    "dagstermill.examples.repository.nb_test_path",
    "dagstermill.examples.repository.solid_definition"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.bad_kernel_solid": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "dagstermill.examples.repository.dagstermill",
    "dagstermill.examples.repository.nb_test_path",
    "dagstermill.examples.repository.solid_definition"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.check": {
  "data": {
   "shadows": "dagster.check"
  },
  "type": "import"
 },
 "dagstermill.examples.repository.clean_data_solid": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "dagster.OutputDefinition",
    "dagster_pandas.DataFrame",
    "dagstermill.examples.repository.dagstermill",
    "dagstermill.examples.repository.nb_test_path",
    "dagstermill.examples.repository.solid_definition"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.dagstermill": {
  "data": {
   "shadows": "dagstermill"
  },
  "type": "import"
 },
 "dagstermill.examples.repository.define_add_pipeline": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "dagster.DependencyDefinition",
    "dagster.PipelineDefinition",
    "dagstermill.examples.repository.add_two_numbers_pm_solid",
    "dagstermill.examples.repository.return_one",
    "dagstermill.examples.repository.return_two"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.define_bad_kernel_pipeline": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "dagster.PipelineDefinition",
    "dagstermill.examples.repository.bad_kernel_solid"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.define_error_pipeline": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "dagster.PipelineDefinition",
    "dagstermill.examples.repository.dagstermill",
    "dagstermill.examples.repository.nb_test_path"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.define_example_repository": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "dagster.RepositoryDefinition",
    "dagstermill.examples.repository.DAGSTER_PANDAS_PRESENT",
    "dagstermill.examples.repository.MATPLOTLIB_PRESENT",
    "dagstermill.examples.repository.SKLEARN_PRESENT",
    "dagstermill.examples.repository.define_add_pipeline",
    "dagstermill.examples.repository.define_bad_kernel_pipeline",
    "dagstermill.examples.repository.define_error_pipeline",
    "dagstermill.examples.repository.define_hello_logging_pipeline",
    "dagstermill.examples.repository.define_hello_world_config_pipeline",
    "dagstermill.examples.repository.define_hello_world_explicit_yield_pipeline",
    "dagstermill.examples.repository.define_hello_world_pipeline",
    "dagstermill.examples.repository.define_hello_world_with_output_pipeline",
    "dagstermill.examples.repository.define_resource_pipeline",
    "dagstermill.examples.repository.define_resource_with_exception_pipeline",
    "dagstermill.examples.repository.define_test_notebook_dag_pipeline",
    "dagstermill.examples.repository.define_tutorial_pipeline",
    "dagstermill.examples.repository.reimport_pipeline"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.define_hello_logging_pipeline": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "dagster.PipelineDefinition",
    "dagstermill.examples.repository.define_hello_logging_solid"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.define_hello_logging_solid": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "dagstermill.examples.repository.dagstermill",
    "dagstermill.examples.repository.nb_test_path"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.define_hello_world_config_pipeline": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "dagster.PipelineDefinition",
    "dagstermill.examples.repository.define_hello_world_config_solid"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.define_hello_world_config_solid": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "dagster.Field",
    "dagster.String",
    "dagstermill.examples.repository.dagstermill",
    "dagstermill.examples.repository.nb_test_path"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.define_hello_world_explicit_yield": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "dagster.OutputDefinition",
    "dagstermill.examples.repository.dagstermill",
    "dagstermill.examples.repository.nb_test_path"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.define_hello_world_explicit_yield_pipeline": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "dagster.PipelineDefinition",
    "dagstermill.examples.repository.define_hello_world_explicit_yield"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.define_hello_world_pipeline": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "dagster.PipelineDefinition",
    "dagstermill.examples.repository.define_hello_world_solid"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.define_hello_world_solid": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "dagstermill.examples.repository.dagstermill",
    "dagstermill.examples.repository.nb_test_path"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.define_hello_world_with_output": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "dagster.OutputDefinition",
    "dagstermill.examples.repository.dagstermill",
    "dagstermill.examples.repository.nb_test_path"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.define_hello_world_with_output_notebook_pipeline": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "dagster.DependencyDefinition",
    "dagster.PipelineDefinition",
    "dagstermill.examples.repository.define_hello_world_with_output_notebook_solid"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.define_hello_world_with_output_notebook_pipeline.load_notebook_solid": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "dagster.FileHandle",
    "dagster.InputDefinition",
    "dagster.solid",
    "dagstermill.examples.repository.os"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.define_hello_world_with_output_notebook_solid": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "dagstermill.examples.repository.dagstermill",
    "dagstermill.examples.repository.nb_test_path"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.define_hello_world_with_output_pipeline": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "dagster.PipelineDefinition",
    "dagstermill.examples.repository.define_hello_world_with_output"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.define_resource_pipeline": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "dagster.DependencyDefinition",
    "dagster.ModeDefinition",
    "dagster.PipelineDefinition",
    "dagster.ResourceDefinition",
    "dagstermill.examples.repository.filepicklelist_resource",
    "dagstermill.examples.repository.hello_world_resource_solid",
    "dagstermill.examples.repository.resource_solid"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.define_resource_with_exception_pipeline": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "dagster.DependencyDefinition",
    "dagster.ModeDefinition",
    "dagster.PipelineDefinition",
    "dagstermill.examples.repository.filepicklelist_resource",
    "dagstermill.examples.repository.hello_world_resource_with_exception_solid",
    "dagstermill.examples.repository.resource_solid"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.define_test_notebook_dag_pipeline": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "dagster.DependencyDefinition",
    "dagster.PipelineDefinition",
    "dagster.SolidInvocation",
    "dagstermill.examples.repository.add_two_numbers_pm_solid",
    "dagstermill.examples.repository.load_constant",
    "dagstermill.examples.repository.mult_two_numbers_pm_solid"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.define_tutorial_pipeline": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "dagster.DependencyDefinition",
    "dagster.PipelineDefinition",
    "dagster.SolidInvocation",
    "dagstermill.examples.repository.LR_solid",
    "dagstermill.examples.repository.RF_solid",
    "dagstermill.examples.repository.clean_data_solid"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.filepicklelist_resource": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "dagster.Field",
    "dagster.String",
    "dagster.resource",
    "dagstermill.examples.repository.FilePickleList"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.hello_world_resource_solid": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "dagster.InputDefinition",
    "dagstermill.examples.repository.dagstermill",
    "dagstermill.examples.repository.nb_test_path",
    "dagstermill.examples.repository.solid_definition"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.hello_world_resource_with_exception_solid": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "dagster.InputDefinition",
    "dagstermill.examples.repository.dagstermill",
    "dagstermill.examples.repository.nb_test_path",
    "dagstermill.examples.repository.solid_definition"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.lambda_solid": {
  "data": {
   "shadows": "dagster.lambda_solid"
  },
  "type": "import"
 },
 "dagstermill.examples.repository.lister": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "dagster.solid"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.load_constant": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "dagster.Int",
    "dagster.solid"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.mult_two_numbers_pm_solid": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "dagster.InputDefinition",
    "dagster.Int",
    "dagster.OutputDefinition",
    "dagstermill.examples.repository.dagstermill",
    "dagstermill.examples.repository.nb_test_path",
    "dagstermill.examples.repository.solid_definition"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.nb_test_path": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "dagstermill.examples.repository.os"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "dagstermill.examples.repository.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "dagstermill.examples.repository.pipeline": {
  "data": {
   "shadows": "dagster.pipeline"
  },
  "type": "import"
 },
 "dagstermill.examples.repository.reimport_pipeline": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "dagster.pipeline",
    "dagstermill.examples.repository.lister",
    "dagstermill.examples.repository.reimport_solid"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.reimport_solid": {
  "data": {
   "lineno": 361
  },
  "type": "constant"
 },
 "dagstermill.examples.repository.resource": {
  "data": {
   "shadows": "dagster.resource"
  },
  "type": "import"
 },
 "dagstermill.examples.repository.resource_solid": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "dagster.solid"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.return_one": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "dagster.lambda_solid"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.return_two": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "dagster.lambda_solid"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.solid": {
  "data": {
   "shadows": "dagster.solid"
  },
  "type": "import"
 },
 "dagstermill.examples.repository.solid_definition": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "dagster.SolidDefinition",
    "dagster.check.inst",
    "fn"
   ]
  },
  "type": "function"
 },
 "dagstermill.examples.repository.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "dagstermill.get_context": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "dagstermill.manager": {
  "data": {
   "symbols_in_volume": [
    "dagstermill.manager.Manager"
   ]
  },
  "type": "module"
 },
 "dagstermill.manager.DagsterInstance": {
  "data": {
   "shadows": "dagster.core.instance.DagsterInstance"
  },
  "type": "import"
 },
 "dagstermill.manager.DagstermillResourceEventGenerationManager": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "dagster.utils.EventGenerationManager"
   ]
  },
  "type": "class"
 },
 "dagstermill.manager.DagstermillResourceEventGenerationManager.generate_teardown_events": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "dagstermill.manager.DagstermillResourceEventGenerationManager.teardown": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "dagstermill.manager.DagstermillResourceEventGenerationManager",
    "super"
   ]
  },
  "type": "function"
 },
 "dagstermill.manager.EventGenerationManager": {
  "data": {
   "shadows": "dagster.utils.EventGenerationManager"
  },
  "type": "import"
 },
 "dagstermill.manager.ExpectationResult": {
  "data": {
   "shadows": "dagster.ExpectationResult"
  },
  "type": "import"
 },
 "dagstermill.manager.Failure": {
  "data": {
   "shadows": "dagster.Failure"
  },
  "type": "import"
 },
 "dagstermill.manager.MANAGER_FOR_NOTEBOOK_INSTANCE": {
  "data": {
   "lineno": 322
  },
  "type": "constant"
 },
 "dagstermill.manager.Manager": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "dagstermill.manager.Manager.__init__": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "dagstermill.manager.Manager._setup_resources": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "dagster.core.definitions.resource.ScopedResourcesBuilder",
    "dagster.core.execution.resources_init.resource_initialization_event_generator",
    "dagstermill.manager.DagstermillResourceEventGenerationManager"
   ]
  },
  "type": "function"
 },
 "dagstermill.manager.Manager.get_context": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "DagstermillExecutionContext",
    "DagstermillRuntimeExecutionContext",
    "dagster.ModeDefinition",
    "dagster.PipelineDefinition",
    "dagster.SolidDefinition",
    "dagster.check.opt_dict_param",
    "dagster.check.opt_inst_param",
    "dagster.core.execution.api.create_execution_plan",
    "dagster.core.execution.api.scoped_pipeline_context",
    "dagster.core.execution.resources_init.get_required_resource_keys_to_init",
    "dagster.core.instance.DagsterInstance.ephemeral",
    "dagster.core.storage.pipeline_run.PipelineRun",
    "dagster.core.storage.pipeline_run.PipelineRunStatus.NOT_STARTED",
    "dagster.core.utils.make_new_run_id",
    "dagster.loggers.colored_console_logger",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "dagstermill.manager.Manager.load_parameter": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "dagster.seven.json.loads",
    "read_value"
   ]
  },
  "type": "function"
 },
 "dagstermill.manager.Manager.reconstitute_pipeline_context": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "DagstermillError",
    "DagstermillRuntimeExecutionContext",
    "Exception",
    "dagster.PipelineDefinition",
    "dagster.check.CheckError",
    "dagster.check.dict_param",
    "dagster.check.inst_param",
    "dagster.check.opt_dict_param",
    "dagster.check.opt_list_param",
    "dagster.check.opt_str_param",
    "dagster.cli.load_handle.UsageError",
    "dagster.cli.load_handle.handle_for_pipeline_cli_args",
    "dagster.core.definitions.dependency.SolidHandle.from_dict",
    "dagster.core.execution.api.create_execution_plan",
    "dagster.core.execution.api.scoped_pipeline_context",
    "dagster.core.execution.resources_init.get_required_resource_keys_to_init",
    "dagster.core.instance.DagsterInstance.from_ref",
    "dagster.serdes.unpack_value",
    "dagstermill.manager.six",
    "str"
   ]
  },
  "type": "function"
 },
 "dagstermill.manager.Manager.teardown_resources": {
  "data": {
   "lineno": 313
  },
  "type": "function"
 },
 "dagstermill.manager.Manager.yield_event": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "dagster.ExpectationResult",
    "dagster.Failure",
    "dagster.Materialization",
    "dagster.TypeCheck",
    "dagster.check.inst_param",
    "dagstermill.manager.os",
    "dagstermill.manager.pickle",
    "dagstermill.manager.scrapbook",
    "dagstermill.manager.uuid",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "dagstermill.manager.Manager.yield_result": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "DagstermillError",
    "dagstermill.manager.os",
    "dagstermill.manager.scrapbook",
    "write_value"
   ]
  },
  "type": "function"
 },
 "dagstermill.manager.Materialization": {
  "data": {
   "shadows": "dagster.Materialization"
  },
  "type": "import"
 },
 "dagstermill.manager.ModeDefinition": {
  "data": {
   "shadows": "dagster.ModeDefinition"
  },
  "type": "import"
 },
 "dagstermill.manager.PipelineDefinition": {
  "data": {
   "shadows": "dagster.PipelineDefinition"
  },
  "type": "import"
 },
 "dagstermill.manager.PipelineRun": {
  "data": {
   "shadows": "dagster.core.storage.pipeline_run.PipelineRun"
  },
  "type": "import"
 },
 "dagstermill.manager.PipelineRunStatus": {
  "data": {
   "shadows": "dagster.core.storage.pipeline_run.PipelineRunStatus"
  },
  "type": "import"
 },
 "dagstermill.manager.ScopedResourcesBuilder": {
  "data": {
   "shadows": "dagster.core.definitions.resource.ScopedResourcesBuilder"
  },
  "type": "import"
 },
 "dagstermill.manager.SolidDefinition": {
  "data": {
   "shadows": "dagster.SolidDefinition"
  },
  "type": "import"
 },
 "dagstermill.manager.SolidHandle": {
  "data": {
   "shadows": "dagster.core.definitions.dependency.SolidHandle"
  },
  "type": "import"
 },
 "dagstermill.manager.TypeCheck": {
  "data": {
   "shadows": "dagster.TypeCheck"
  },
  "type": "import"
 },
 "dagstermill.manager.check": {
  "data": {
   "shadows": "dagster.check"
  },
  "type": "import"
 },
 "dagstermill.manager.colored_console_logger": {
  "data": {
   "shadows": "dagster.loggers.colored_console_logger"
  },
  "type": "import"
 },
 "dagstermill.manager.create_execution_plan": {
  "data": {
   "shadows": "dagster.core.execution.api.create_execution_plan"
  },
  "type": "import"
 },
 "dagstermill.manager.get_required_resource_keys_to_init": {
  "data": {
   "shadows": "dagster.core.execution.resources_init.get_required_resource_keys_to_init"
  },
  "type": "import"
 },
 "dagstermill.manager.load_handle": {
  "data": {
   "shadows": "dagster.cli.load_handle"
  },
  "type": "import"
 },
 "dagstermill.manager.make_new_run_id": {
  "data": {
   "shadows": "dagster.core.utils.make_new_run_id"
  },
  "type": "import"
 },
 "dagstermill.manager.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "dagstermill.manager.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "dagstermill.manager.resource_initialization_event_generator": {
  "data": {
   "shadows": "dagster.core.execution.resources_init.resource_initialization_event_generator"
  },
  "type": "import"
 },
 "dagstermill.manager.scoped_pipeline_context": {
  "data": {
   "shadows": "dagster.core.execution.api.scoped_pipeline_context"
  },
  "type": "import"
 },
 "dagstermill.manager.scrapbook": {
  "data": {
   "shadows": "scrapbook"
  },
  "type": "import"
 },
 "dagstermill.manager.seven": {
  "data": {
   "shadows": "dagster.seven"
  },
  "type": "import"
 },
 "dagstermill.manager.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "dagstermill.manager.unpack_value": {
  "data": {
   "shadows": "dagster.serdes.unpack_value"
  },
  "type": "import"
 },
 "dagstermill.manager.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "dagstermill.serialize": {
  "data": {},
  "type": "module"
 },
 "dagstermill.serialize.DagsterType": {
  "data": {
   "shadows": "dagster.core.types.dagster_type.DagsterType"
  },
  "type": "import"
 },
 "dagstermill.serialize.DagsterTypeKind": {
  "data": {
   "shadows": "dagster.core.types.dagster_type.DagsterTypeKind"
  },
  "type": "import"
 },
 "dagstermill.serialize.PICKLE_PROTOCOL": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "dagstermill.serialize.check": {
  "data": {
   "shadows": "dagster.check"
  },
  "type": "import"
 },
 "dagstermill.serialize.is_json_serializable": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "TypeError",
    "dagster.seven.json.dumps"
   ]
  },
  "type": "function"
 },
 "dagstermill.serialize.read_value": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "dagster.check.inst_param",
    "dagster.core.types.dagster_type.DagsterType",
    "dagster.core.types.dagster_type.DagsterTypeKind.ANY",
    "dagster.core.types.dagster_type.DagsterTypeKind.SCALAR",
    "dagstermill.serialize.is_json_serializable"
   ]
  },
  "type": "function"
 },
 "dagstermill.serialize.seven": {
  "data": {
   "shadows": "dagster.seven"
  },
  "type": "import"
 },
 "dagstermill.serialize.write_value": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "dagster.check.inst_param",
    "dagster.core.types.dagster_type.DagsterType",
    "dagster.core.types.dagster_type.DagsterTypeKind.ANY",
    "dagster.core.types.dagster_type.DagsterTypeKind.SCALAR",
    "dagstermill.serialize.is_json_serializable"
   ]
  },
  "type": "function"
 },
 "dagstermill.solids": {
  "data": {},
  "type": "module"
 },
 "dagstermill.solids.EventMetadataEntry": {
  "data": {
   "shadows": "dagster.EventMetadataEntry"
  },
  "type": "import"
 },
 "dagstermill.solids.ExecutionTargetHandle": {
  "data": {
   "shadows": "dagster.ExecutionTargetHandle"
  },
  "type": "import"
 },
 "dagstermill.solids.FileHandle": {
  "data": {
   "shadows": "dagster.core.storage.file_manager.FileHandle"
  },
  "type": "import"
 },
 "dagstermill.solids.InputDefinition": {
  "data": {
   "shadows": "dagster.InputDefinition"
  },
  "type": "import"
 },
 "dagstermill.solids.Materialization": {
  "data": {
   "shadows": "dagster.Materialization"
  },
  "type": "import"
 },
 "dagstermill.solids.Output": {
  "data": {
   "shadows": "dagster.Output"
  },
  "type": "import"
 },
 "dagstermill.solids.OutputDefinition": {
  "data": {
   "shadows": "dagster.OutputDefinition"
  },
  "type": "import"
 },
 "dagstermill.solids.SolidDefinition": {
  "data": {
   "shadows": "dagster.SolidDefinition"
  },
  "type": "import"
 },
 "dagstermill.solids.SolidExecutionContext": {
  "data": {
   "shadows": "dagster.core.execution.context.compute.SolidExecutionContext"
  },
  "type": "import"
 },
 "dagstermill.solids.SystemComputeExecutionContext": {
  "data": {
   "shadows": "dagster.core.execution.context.system.SystemComputeExecutionContext"
  },
  "type": "import"
 },
 "dagstermill.solids._dm_solid_compute": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "dagster.check.opt_str_param",
    "dagster.check.str_param"
   ]
  },
  "type": "function"
 },
 "dagstermill.solids._dm_solid_compute._t_fn": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "Exception",
    "dagster.EventMetadataEntry.fspath",
    "dagster.Materialization",
    "dagster.Output",
    "dagster.check.inst_param",
    "dagster.check.param_invariant",
    "dagster.core.errors.user_code_error_boundary",
    "dagster.core.execution.context.compute.SolidExecutionContext",
    "dagster.seven.TemporaryDirectory",
    "dagster.utils.safe_tempfile_path",
    "dagstermill.solids.get_papermill_parameters",
    "dagstermill.solids.os",
    "dagstermill.solids.papermill",
    "dagstermill.solids.pickle",
    "dagstermill.solids.replace_parameters",
    "dagstermill.solids.scrapbook",
    "dagstermill.solids.uuid",
    "dict",
    "isinstance",
    "open",
    "papermill.engines.papermill_engines.register",
    "papermill.iorw.load_notebook_node",
    "papermill.iorw.write_ipynb",
    "read_value",
    "str"
   ]
  },
  "type": "function"
 },
 "dagstermill.solids._find_first_tagged_cell_index": {
  "data": {
   "shadows": "papermill.parameterize._find_first_tagged_cell_index"
  },
  "type": "import"
 },
 "dagstermill.solids.check": {
  "data": {
   "shadows": "dagster.check"
  },
  "type": "import"
 },
 "dagstermill.solids.check_user_facing_opt_config_param": {
  "data": {
   "shadows": "dagster.config.field_utils.check_user_facing_opt_config_param"
  },
  "type": "import"
 },
 "dagstermill.solids.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "dagstermill.solids.define_dagstermill_solid": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "dagster.InputDefinition",
    "dagster.OutputDefinition",
    "dagster.SolidDefinition",
    "dagster.check.opt_list_param",
    "dagster.check.opt_set_param",
    "dagster.check.str_param",
    "dagster.config.field_utils.check_user_facing_opt_config_param",
    "dagster.core.storage.file_manager.FileHandle",
    "dagstermill.solids._dm_solid_compute",
    "str"
   ]
  },
  "type": "function"
 },
 "dagstermill.solids.get_papermill_parameters": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "DagstermillError",
    "dagster.ExecutionTargetHandle.get_handle",
    "dagster.check.dict_param",
    "dagster.check.inst_param",
    "dagster.check.param_invariant",
    "dagster.core.execution.context.system.SystemComputeExecutionContext",
    "dagster.serdes.pack_value",
    "dagster.utils.mkdir_p",
    "dagstermill.solids.os",
    "dagstermill.solids.six",
    "dict",
    "isinstance",
    "write_value"
   ]
  },
  "type": "function"
 },
 "dagstermill.solids.load_notebook_node": {
  "data": {
   "shadows": "papermill.iorw.load_notebook_node"
  },
  "type": "import"
 },
 "dagstermill.solids.mkdir_p": {
  "data": {
   "shadows": "dagster.utils.mkdir_p"
  },
  "type": "import"
 },
 "dagstermill.solids.nbformat": {
  "data": {
   "shadows": "nbformat"
  },
  "type": "import"
 },
 "dagstermill.solids.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "dagstermill.solids.pack_value": {
  "data": {
   "shadows": "dagster.serdes.pack_value"
  },
  "type": "import"
 },
 "dagstermill.solids.papermill": {
  "data": {
   "shadows": "papermill"
  },
  "type": "import"
 },
 "dagstermill.solids.papermill_engines": {
  "data": {
   "shadows": "papermill.engines.papermill_engines"
  },
  "type": "import"
 },
 "dagstermill.solids.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "dagstermill.solids.replace_parameters": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "dagster.check.dict_param",
    "dagster.check.int_value_param",
    "dagster.seven.json.dumps",
    "dagstermill.solids.copy",
    "dagstermill.solids.nbformat",
    "papermill.parameterize._find_first_tagged_cell_index"
   ]
  },
  "type": "function"
 },
 "dagstermill.solids.safe_tempfile_path": {
  "data": {
   "shadows": "dagster.utils.safe_tempfile_path"
  },
  "type": "import"
 },
 "dagstermill.solids.scrapbook": {
  "data": {
   "shadows": "scrapbook"
  },
  "type": "import"
 },
 "dagstermill.solids.seven": {
  "data": {
   "shadows": "dagster.seven"
  },
  "type": "import"
 },
 "dagstermill.solids.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "dagstermill.solids.user_code_error_boundary": {
  "data": {
   "shadows": "dagster.core.errors.user_code_error_boundary"
  },
  "type": "import"
 },
 "dagstermill.solids.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "dagstermill.solids.write_ipynb": {
  "data": {
   "shadows": "papermill.iorw.write_ipynb"
  },
  "type": "import"
 },
 "dagstermill.translator": {
  "data": {
   "symbols_in_volume": [
    "dagstermill.translator.DagsterTranslator",
    "dagstermill.translator.papermill"
   ]
  },
  "type": "module"
 },
 "dagstermill.translator.DagsterTranslator": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "dagstermill.translator.papermill"
   ]
  },
  "type": "class"
 },
 "dagstermill.translator.DagsterTranslator.codify": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "classmethod",
    "dagster.seven.json.dumps",
    "dagstermill.translator.INJECTED_BOILERPLATE",
    "dagstermill.translator.RESERVED_INPUT_NAMES",
    "dict"
   ]
  },
  "type": "function"
 },
 "dagstermill.translator.INJECTED_BOILERPLATE": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "dagstermill.translator.RESERVED_INPUT_NAMES": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "dagstermill.translator.papermill": {
  "data": {
   "shadows": "papermill"
  },
  "type": "import"
 },
 "dagstermill.translator.seven": {
  "data": {
   "shadows": "dagster.seven"
  },
  "type": "import"
 },
 "dagstermill.version": {
  "data": {},
  "type": "module"
 },
 "dagstermill.version.__nightly__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "dagstermill.version.__version__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "dagstermill.yield_event": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "dagstermill.yield_result": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 }
}