{
 "xbout": {
  "lineno": null,
  "symbols_in_volume": [
   "importlib_metadata.PackageNotFoundError",
   "importlib_metadata.version",
   "setuptools_scm.get_version"
  ],
  "type": "module"
 },
 "xbout._version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xbout.boutdataarray": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xbout.boutdataarray.BoutDataArrayAccessor": {
  "lineno": 20,
  "symbols_in_volume": [
   "xarray.register_dataarray_accessor"
  ],
  "type": "class"
 },
 "xbout.boutdataarray.BoutDataArrayAccessor.__init__": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.boutdataarray.BoutDataArrayAccessor.__str__": {
  "lineno": 35,
  "symbols_in_volume": [
   "functools.partial",
   "pprint.pformat"
  ],
  "type": "function"
 },
 "xbout.boutdataarray.BoutDataArrayAccessor._shift_z": {
  "lineno": 72,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.arange",
   "numpy.exp",
   "numpy.fft",
   "numpy.pi",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "xbout.boutdataarray.BoutDataArrayAccessor.animate1D": {
  "lineno": 582,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.boutdataarray.BoutDataArrayAccessor.animate2D": {
  "lineno": 475,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.boutdataarray.BoutDataArrayAccessor.contour": {
  "lineno": 791,
  "symbols_in_volume": [
   "xarray.plot.contour"
  ],
  "type": "function"
 },
 "xbout.boutdataarray.BoutDataArrayAccessor.contourf": {
  "lineno": 794,
  "symbols_in_volume": [
   "xarray.plot.contourf"
  ],
  "type": "function"
 },
 "xbout.boutdataarray.BoutDataArrayAccessor.fine_interpolation_factor": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.boutdataarray.BoutDataArrayAccessor.from_field_aligned": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.boutdataarray.BoutDataArrayAccessor.from_region": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.boutdataarray.BoutDataArrayAccessor.get_bounding_surfaces": {
  "lineno": 453,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.boutdataarray.BoutDataArrayAccessor.interpolate_from_unstructured": {
  "lineno": 639,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.meshgrid",
   "numpy.nan",
   "numpy.stack",
   "numpy.where",
   "scipy.interpolate.griddata",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "xbout.boutdataarray.BoutDataArrayAccessor.interpolate_parallel": {
  "lineno": 228,
  "symbols_in_volume": [
   "numpy.full",
   "numpy.linspace",
   "xarray.DataArray",
   "xarray.combine_by_coords"
  ],
  "type": "function"
 },
 "xbout.boutdataarray.BoutDataArrayAccessor.pcolormesh": {
  "lineno": 797,
  "symbols_in_volume": [
   "xarray.plot.pcolormesh"
  ],
  "type": "function"
 },
 "xbout.boutdataarray.BoutDataArrayAccessor.regions": {
  "lineno": 800,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.boutdataarray.BoutDataArrayAccessor.remove_yboundaries": {
  "lineno": 384,
  "symbols_in_volume": [
   "copy.copy",
   "copy.deepcopy",
   "xarray.combine_by_coords"
  ],
  "type": "function"
 },
 "xbout.boutdataarray.BoutDataArrayAccessor.to_dataset": {
  "lineno": 52,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "xbout.boutdataarray.BoutDataArrayAccessor.to_dataset.dropIfExists": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.boutdataarray.BoutDataArrayAccessor.to_field_aligned": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.boutdataset": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xbout.boutdataset.BoutDatasetAccessor": {
  "lineno": 27,
  "symbols_in_volume": [
   "xarray.register_dataset_accessor"
  ],
  "type": "class"
 },
 "xbout.boutdataset.BoutDatasetAccessor.__init__": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.boutdataset.BoutDatasetAccessor.__str__": {
  "lineno": 42,
  "symbols_in_volume": [
   "functools.partial",
   "pprint.pformat"
  ],
  "type": "function"
 },
 "xbout.boutdataset.BoutDatasetAccessor.animate_list": {
  "lineno": 611,
  "symbols_in_volume": [
   "animatplot.Animation",
   "animatplot.Timeline",
   "matplotlib.animation.PillowWriter",
   "matplotlib.pyplot.show",
   "matplotlib.pyplot.subplots",
   "mpl_toolkits.axes_grid1.make_axes_locatable",
   "numpy.arange",
   "numpy.ceil",
   "numpy.sqrt",
   "warnings.warn"
  ],
  "type": "function"
 },
 "xbout.boutdataset.BoutDatasetAccessor.animate_list._expand_list_arg": {
  "lineno": 711,
  "symbols_in_volume": [
   "collections.abc.Sequence"
  ],
  "type": "function"
 },
 "xbout.boutdataset.BoutDatasetAccessor.animate_list.is_list": {
  "lineno": 732,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.boutdataset.BoutDatasetAccessor.fine_interpolation_factor": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.boutdataset.BoutDatasetAccessor.from_region": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.boutdataset.BoutDatasetAccessor.get_bounding_surfaces": {
  "lineno": 368,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.boutdataset.BoutDatasetAccessor.get_field_aligned": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.boutdataset.BoutDatasetAccessor.interpolate_from_unstructured": {
  "lineno": 242,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.nan",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "xbout.boutdataset.BoutDatasetAccessor.interpolate_parallel": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.boutdataset.BoutDatasetAccessor.interpolate_parallel.find_with_dims": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.boutdataset.BoutDatasetAccessor.regions": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.boutdataset.BoutDatasetAccessor.remove_yboundaries": {
  "lineno": 320,
  "symbols_in_volume": [
   "copy.copy",
   "xarray.merge"
  ],
  "type": "function"
 },
 "xbout.boutdataset.BoutDatasetAccessor.save": {
  "lineno": 390,
  "symbols_in_volume": [
   "dask.diagnostics.ProgressBar",
   "gc.collect",
   "itertools.chain",
   "pathlib.Path",
   "warnings.warn",
   "xarray.merge"
  ],
  "type": "function"
 },
 "xbout.boutdataset.BoutDatasetAccessor.save.dict_to_attrs": {
  "lineno": 461,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.boutdataset.BoutDatasetAccessor.to_restart": {
  "lineno": 546,
  "symbols_in_volume": [
   "dask.diagnostics.ProgressBar",
   "xarray.save_mfdataset"
  ],
  "type": "function"
 },
 "xbout.boutdataset._find_major_vars": {
  "lineno": 892,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.calc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xbout.calc.tests.test_turbulence": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xbout.calc.tests.test_turbulence.TestRootMeanSquare": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "xbout.calc.tests.test_turbulence.TestRootMeanSquare.test_1d": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.sqrt",
   "numpy.sum",
   "numpy.testing.assert_equal",
   "xarray.DataArray",
   "xbout.calc.turbulence.rms"
  ],
  "type": "function"
 },
 "xbout.calc.tests.test_turbulence.TestRootMeanSquare.test_no_dim": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "xarray.DataArray",
   "xbout.calc.turbulence.rms"
  ],
  "type": "function"
 },
 "xbout.calc.tests.test_turbulence.TestRootMeanSquare.test_reduce_2d": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.sqrt",
   "numpy.sum",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize",
   "xarray.DataArray",
   "xbout.calc.turbulence.rms"
  ],
  "type": "function"
 },
 "xbout.calc.tests.test_turbulence.TestRootMeanSquare.test_reduce_2d_dask": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.sqrt",
   "numpy.sum",
   "numpy.testing.assert_equal",
   "xarray.DataArray",
   "xbout.calc.turbulence.rms"
  ],
  "type": "function"
 },
 "xbout.calc.turbulence": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xbout.calc.turbulence._rms_gufunc": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.sqrt",
   "numpy.square"
  ],
  "type": "function"
 },
 "xbout.calc.turbulence.rms": {
  "lineno": 14,
  "symbols_in_volume": [
   "xarray.apply_ufunc"
  ],
  "type": "function"
 },
 "xbout.conftest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xbout.conftest.pytest_addoption": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.conftest.pytest_collection_modifyitems": {
  "lineno": 63,
  "symbols_in_volume": [
   "pytest.mark.skip"
  ],
  "type": "function"
 },
 "xbout.conftest.pytest_configure": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.geometries": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xbout.geometries.UnregisteredGeometryError": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "xbout.geometries._set_default_toroidal_coordinates": {
  "lineno": 207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.geometries.add_s_alpha_geometry_coords": {
  "lineno": 318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.geometries.add_toroidal_geometry_coords": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.geometries.apply_geometry": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.isclose",
   "numpy.linspace",
   "numpy.pi",
   "textwrap.dedent",
   "warnings.warn",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "xbout.geometries.register_geometry": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.geometries.register_geometry.wrapper": {
  "lineno": 193,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "xbout.load": {
  "lineno": null,
  "symbols_in_volume": [
   "xarray.set_options"
  ],
  "type": "module"
 },
 "xbout.load._add_options": {
  "lineno": 270,
  "symbols_in_volume": [
   "boutdata.data.BoutOptionsFile"
  ],
  "type": "function"
 },
 "xbout.load._arrange_for_concatenation": {
  "lineno": 625,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.load._auto_open_mfboutdataset": {
  "lineno": 439,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.unique",
   "xarray.Dataset",
   "xarray.combine_nested",
   "xarray.open_mfdataset"
  ],
  "type": "function"
 },
 "xbout.load._check_dataset_type": {
  "lineno": 388,
  "symbols_in_volume": [
   "xarray.Dataset",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "xbout.load._expand_filepaths": {
  "lineno": 513,
  "symbols_in_volume": [
   "pathlib.Path",
   "warnings.warn",
   "xarray.set_options"
  ],
  "type": "function"
 },
 "xbout.load._expand_wildcards": {
  "lineno": 538,
  "symbols_in_volume": [
   "natsort.natsorted",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "xbout.load._get_limit": {
  "lineno": 758,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.load._infer_contains_boundaries": {
  "lineno": 712,
  "symbols_in_volume": [
   "pathlib.Path"
  ],
  "type": "function"
 },
 "xbout.load._open_grid": {
  "lineno": 777,
  "symbols_in_volume": [
   "copy.copy",
   "pathlib.Path",
   "warnings.warn",
   "xarray.concat",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "xbout.load._read_splitting": {
  "lineno": 556,
  "symbols_in_volume": [
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "xbout.load._read_splitting.get_nonnegative_scalar": {
  "lineno": 560,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.load._trim": {
  "lineno": 667,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.load.collect": {
  "lineno": 280,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "xbout.load.open_boutdataset": {
  "lineno": 60,
  "symbols_in_volume": [
   "itertools.chain",
   "pathlib.Path",
   "warnings.warn",
   "xarray.combine_by_coords",
   "xarray.open_mfdataset"
  ],
  "type": "function"
 },
 "xbout.load.open_boutdataset.attrs_remove_section": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.load.open_boutdataset.attrs_to_dict": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.plotting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xbout.plotting.animate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xbout.plotting.animate.animate_line": {
  "lineno": 352,
  "symbols_in_volume": [
   "animatplot.Animation",
   "animatplot.Timeline",
   "animatplot.blocks.Line",
   "matplotlib.animation.PillowWriter",
   "matplotlib.pyplot.subplots",
   "numpy.arange",
   "numpy.max",
   "numpy.min"
  ],
  "type": "function"
 },
 "xbout.plotting.animate.animate_pcolormesh": {
  "lineno": 186,
  "symbols_in_volume": [
   "animatplot.Animation",
   "animatplot.Timeline",
   "animatplot.blocks.Pcolormesh",
   "matplotlib.animation.PillowWriter",
   "matplotlib.pyplot.colorbar",
   "matplotlib.pyplot.subplots",
   "numpy.abs",
   "numpy.arange",
   "numpy.max",
   "numpy.min",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "xbout.plotting.animate.animate_poloidal": {
  "lineno": 12,
  "symbols_in_volume": [
   "animatplot.Animation",
   "animatplot.Timeline",
   "animatplot.blocks.Pcolormesh",
   "matplotlib.animation.PillowWriter",
   "matplotlib.colors.Normalize",
   "matplotlib.pyplot.cm.ScalarMappable",
   "matplotlib.pyplot.subplots",
   "numpy.arange",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "xbout.plotting.plotfuncs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xbout.plotting.plotfuncs.plot2d_wrapper": {
  "lineno": 69,
  "symbols_in_volume": [
   "matplotlib.colors.LinearSegmentedColormap.from_list",
   "matplotlib.colors.ListedColormap",
   "matplotlib.colors.Normalize",
   "matplotlib.pyplot.cm.ScalarMappable",
   "matplotlib.pyplot.plot",
   "matplotlib.pyplot.subplots",
   "numpy.array",
   "numpy.int",
   "numpy.linspace",
   "numpy.max",
   "numpy.min",
   "warnings.catch_warnings",
   "warnings.filterwarnings",
   "xarray.plot.contour",
   "xarray.plot.contourf",
   "xarray.plot.pcolormesh"
  ],
  "type": "function"
 },
 "xbout.plotting.plotfuncs.regions": {
  "lineno": 17,
  "symbols_in_volume": [
   "matplotlib.pyplot.subplots",
   "warnings.catch_warnings",
   "warnings.filterwarnings",
   "xarray.full_like"
  ],
  "type": "function"
 },
 "xbout.plotting.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xbout.plotting.utils._add_hatching": {
  "lineno": 140,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.cos",
   "numpy.flip",
   "numpy.linalg.norm",
   "numpy.pi",
   "numpy.sin"
  ],
  "type": "function"
 },
 "xbout.plotting.utils._create_norm": {
  "lineno": 8,
  "symbols_in_volume": [
   "matplotlib.colors.LogNorm",
   "matplotlib.colors.Normalize",
   "matplotlib.colors.SymLogNorm"
  ],
  "type": "function"
 },
 "xbout.plotting.utils._decompose_regions": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.plotting.utils._get_perp_vec": {
  "lineno": 178,
  "symbols_in_volume": [
   "numpy.linalg.norm"
  ],
  "type": "function"
 },
 "xbout.plotting.utils._is_core_only": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.plotting.utils.plot_separatrices": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.plotting.utils.plot_separatrix": {
  "lineno": 31,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "xbout.plotting.utils.plot_targets": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.region": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xbout.region.Region": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "xbout.region.Region.__eq__": {
  "lineno": 255,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.region.Region.__init__": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.region.Region.__repr__": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.region.Region.get_inner_guards_slices": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.region.Region.get_lower_guards_slices": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.region.Region.get_outer_guards_slices": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.region.Region.get_slices": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.region.Region.get_upper_guards_slices": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.region._check_connections": {
  "lineno": 315,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.region._concat_inner_guards": {
  "lineno": 988,
  "symbols_in_volume": [
   "xarray.concat"
  ],
  "type": "function"
 },
 "xbout.region._concat_lower_guards": {
  "lineno": 1209,
  "symbols_in_volume": [
   "xarray.concat"
  ],
  "type": "function"
 },
 "xbout.region._concat_outer_guards": {
  "lineno": 1099,
  "symbols_in_volume": [
   "xarray.concat"
  ],
  "type": "function"
 },
 "xbout.region._concat_upper_guards": {
  "lineno": 1272,
  "symbols_in_volume": [
   "xarray.concat"
  ],
  "type": "function"
 },
 "xbout.region._create_regions_toroidal": {
  "lineno": 915,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.region._from_region": {
  "lineno": 1333,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "xbout.region._get_topology": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.region._in_range": {
  "lineno": 261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.region._order_vars": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.region.topology_connected_double_null": {
  "lineno": 556,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.region.topology_core": {
  "lineno": 792,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.region.topology_disconnected_double_null": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.region.topology_limiter": {
  "lineno": 762,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.region.topology_single_null": {
  "lineno": 690,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.region.topology_sol": {
  "lineno": 812,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.region.topology_xpoint": {
  "lineno": 825,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xbout.tests.test_against_collect": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "module"
 },
 "xbout.tests.test_against_collect.TestAccuracyAgainstOldCollect": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "xbout.tests.test_against_collect.TestAccuracyAgainstOldCollect.test_metadata": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "pytest.warns",
   "xbout.collect",
   "xbout.open_boutdataset"
  ],
  "type": "function"
 },
 "xbout.tests.test_against_collect.TestAccuracyAgainstOldCollect.test_multiple_files_along_x": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "pytest.warns",
   "xbout.collect",
   "xbout.open_boutdataset"
  ],
  "type": "function"
 },
 "xbout.tests.test_against_collect.TestAccuracyAgainstOldCollect.test_multiple_files_along_xy": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "pytest.warns",
   "xbout.collect",
   "xbout.open_boutdataset"
  ],
  "type": "function"
 },
 "xbout.tests.test_against_collect.TestAccuracyAgainstOldCollect.test_multiple_files_along_y": {
  "lineno": 68,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "pytest.warns",
   "xbout.collect",
   "xbout.open_boutdataset"
  ],
  "type": "function"
 },
 "xbout.tests.test_against_collect.TestAccuracyAgainstOldCollect.test_new_collect_indexing_int": {
  "lineno": 147,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "xbout.collect"
  ],
  "type": "function"
 },
 "xbout.tests.test_against_collect.TestAccuracyAgainstOldCollect.test_new_collect_indexing_list": {
  "lineno": 173,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "xbout.collect"
  ],
  "type": "function"
 },
 "xbout.tests.test_against_collect.TestAccuracyAgainstOldCollect.test_new_collect_indexing_slice": {
  "lineno": 198,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "xbout.collect"
  ],
  "type": "function"
 },
 "xbout.tests.test_against_collect.TestAccuracyAgainstOldCollect.test_single_file": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "pytest.warns",
   "xbout.collect",
   "xbout.open_boutdataset"
  ],
  "type": "function"
 },
 "xbout.tests.test_against_collect.test_speed_against_old_collect": {
  "lineno": 226,
  "symbols_in_volume": [
   "pytest.mark.skip"
  ],
  "type": "class"
 },
 "xbout.tests.test_animate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xbout.tests.test_animate.TestAnimate": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "class"
 },
 "xbout.tests.test_animate.TestAnimate.test_animate1D": {
  "lineno": 68,
  "symbols_in_volume": [
   "animatplot.blocks.Line",
   "matplotlib.pyplot.close"
  ],
  "type": "function"
 },
 "xbout.tests.test_animate.TestAnimate.test_animate2D": {
  "lineno": 39,
  "symbols_in_volume": [
   "animatplot.blocks.Pcolormesh",
   "matplotlib.pyplot.close"
  ],
  "type": "function"
 },
 "xbout.tests.test_animate.TestAnimate.test_animate_list": {
  "lineno": 77,
  "symbols_in_volume": [
   "animatplot.blocks.Line",
   "animatplot.blocks.Pcolormesh",
   "matplotlib.pyplot.close"
  ],
  "type": "function"
 },
 "xbout.tests.test_animate.TestAnimate.test_animate_list_1d_default": {
  "lineno": 91,
  "symbols_in_volume": [
   "animatplot.blocks.Line",
   "animatplot.blocks.Pcolormesh",
   "matplotlib.pyplot.close"
  ],
  "type": "function"
 },
 "xbout.tests.test_animate.TestAnimate.test_animate_list_1d_multiline": {
  "lineno": 105,
  "symbols_in_volume": [
   "animatplot.blocks.Line",
   "animatplot.blocks.Pcolormesh",
   "matplotlib.axes.Subplot",
   "matplotlib.pyplot.close",
   "matplotlib.pyplot.gcf"
  ],
  "type": "function"
 },
 "xbout.tests.test_animate.TestAnimate.test_animate_list_animate_over": {
  "lineno": 132,
  "symbols_in_volume": [
   "animatplot.blocks.Line",
   "animatplot.blocks.Pcolormesh",
   "matplotlib.pyplot.close"
  ],
  "type": "function"
 },
 "xbout.tests.test_animate.TestAnimate.test_animate_list_fps": {
  "lineno": 161,
  "symbols_in_volume": [
   "animatplot.blocks.Line",
   "animatplot.blocks.Pcolormesh",
   "matplotlib.pyplot.close"
  ],
  "type": "function"
 },
 "xbout.tests.test_animate.TestAnimate.test_animate_list_logscale": {
  "lineno": 328,
  "symbols_in_volume": [
   "animatplot.blocks.Line",
   "animatplot.blocks.Pcolormesh",
   "matplotlib.pyplot.close"
  ],
  "type": "function"
 },
 "xbout.tests.test_animate.TestAnimate.test_animate_list_logscale_float": {
  "lineno": 342,
  "symbols_in_volume": [
   "animatplot.blocks.Line",
   "animatplot.blocks.Pcolormesh",
   "matplotlib.pyplot.close"
  ],
  "type": "function"
 },
 "xbout.tests.test_animate.TestAnimate.test_animate_list_logscale_list": {
  "lineno": 356,
  "symbols_in_volume": [
   "animatplot.blocks.Line",
   "animatplot.blocks.Pcolormesh",
   "matplotlib.pyplot.close"
  ],
  "type": "function"
 },
 "xbout.tests.test_animate.TestAnimate.test_animate_list_ncols": {
  "lineno": 190,
  "symbols_in_volume": [
   "animatplot.blocks.Line",
   "animatplot.blocks.Pcolormesh",
   "matplotlib.pyplot.close"
  ],
  "type": "function"
 },
 "xbout.tests.test_animate.TestAnimate.test_animate_list_not_enough_nrowsncols": {
  "lineno": 204,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "xbout.tests.test_animate.TestAnimate.test_animate_list_nrows": {
  "lineno": 176,
  "symbols_in_volume": [
   "animatplot.blocks.Line",
   "animatplot.blocks.Pcolormesh",
   "matplotlib.pyplot.close"
  ],
  "type": "function"
 },
 "xbout.tests.test_animate.TestAnimate.test_animate_list_poloidal_plot": {
  "lineno": 213,
  "symbols_in_volume": [
   "animatplot.blocks.Line",
   "animatplot.blocks.Pcolormesh",
   "matplotlib.pyplot.close",
   "numpy.linspace",
   "numpy.newaxis",
   "numpy.ones",
   "pytest.mark.skip",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "xbout.tests.test_animate.TestAnimate.test_animate_list_save_as": {
  "lineno": 146,
  "symbols_in_volume": [
   "animatplot.blocks.Line",
   "animatplot.blocks.Pcolormesh",
   "matplotlib.pyplot.close"
  ],
  "type": "function"
 },
 "xbout.tests.test_animate.TestAnimate.test_animate_list_subplots_adjust": {
  "lineno": 256,
  "symbols_in_volume": [
   "animatplot.blocks.Line",
   "animatplot.blocks.Pcolormesh",
   "matplotlib.pyplot.close",
   "pytest.warns"
  ],
  "type": "function"
 },
 "xbout.tests.test_animate.TestAnimate.test_animate_list_titles_list": {
  "lineno": 371,
  "symbols_in_volume": [
   "animatplot.blocks.Line",
   "animatplot.blocks.Pcolormesh",
   "matplotlib.pyplot.close"
  ],
  "type": "function"
 },
 "xbout.tests.test_animate.TestAnimate.test_animate_list_vmax": {
  "lineno": 300,
  "symbols_in_volume": [
   "animatplot.blocks.Line",
   "animatplot.blocks.Pcolormesh",
   "matplotlib.pyplot.close"
  ],
  "type": "function"
 },
 "xbout.tests.test_animate.TestAnimate.test_animate_list_vmax_list": {
  "lineno": 314,
  "symbols_in_volume": [
   "animatplot.blocks.Line",
   "animatplot.blocks.Pcolormesh",
   "matplotlib.pyplot.close"
  ],
  "type": "function"
 },
 "xbout.tests.test_animate.TestAnimate.test_animate_list_vmin": {
  "lineno": 272,
  "symbols_in_volume": [
   "animatplot.blocks.Line",
   "animatplot.blocks.Pcolormesh",
   "matplotlib.pyplot.close"
  ],
  "type": "function"
 },
 "xbout.tests.test_animate.TestAnimate.test_animate_list_vmin_list": {
  "lineno": 286,
  "symbols_in_volume": [
   "animatplot.blocks.Line",
   "animatplot.blocks.Pcolormesh",
   "matplotlib.pyplot.close"
  ],
  "type": "function"
 },
 "xbout.tests.test_animate.create_test_file": {
  "lineno": 14,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.warns",
   "xbout.open_boutdataset"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataarray": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xbout.tests.test_boutdataarray.TestBoutDataArrayMethods": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "xbout.tests.test_boutdataarray.TestBoutDataArrayMethods.test_from_field_aligned": {
  "lineno": 296,
  "symbols_in_volume": [
   "numpy.pi",
   "numpy.testing.assert_allclose",
   "pytest.mark.long",
   "pytest.mark.parametrize",
   "pytest.param",
   "pytest.warns",
   "xbout.geometries.apply_geometry",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataarray.TestBoutDataArrayMethods.test_from_field_aligned_staggered": {
  "lineno": 449,
  "symbols_in_volume": [
   "numpy.pi",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize",
   "pytest.raises",
   "pytest.warns",
   "xbout.geometries.apply_geometry",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataarray.TestBoutDataArrayMethods.test_interpolate_parallel": {
  "lineno": 731,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.linspace",
   "numpy.pi",
   "numpy.testing.assert_allclose",
   "xarray.DataArray",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataarray.TestBoutDataArrayMethods.test_interpolate_parallel.f_y": {
  "lineno": 769,
  "symbols_in_volume": [
   "numpy.sin"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataarray.TestBoutDataArrayMethods.test_interpolate_parallel_region_core": {
  "lineno": 501,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.pi",
   "numpy.testing.assert_allclose",
   "pytest.mark.long",
   "xarray.DataArray",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataarray.TestBoutDataArrayMethods.test_interpolate_parallel_region_core.f": {
  "lineno": 537,
  "symbols_in_volume": [
   "numpy.sin"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataarray.TestBoutDataArrayMethods.test_interpolate_parallel_region_core_change_n": {
  "lineno": 549,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.pi",
   "numpy.testing.assert_allclose",
   "pytest.mark.long",
   "pytest.mark.parametrize",
   "pytest.param",
   "xarray.DataArray",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataarray.TestBoutDataArrayMethods.test_interpolate_parallel_region_core_change_n.f": {
  "lineno": 599,
  "symbols_in_volume": [
   "numpy.sin"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataarray.TestBoutDataArrayMethods.test_interpolate_parallel_region_singlenull": {
  "lineno": 659,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.pi",
   "numpy.testing.assert_allclose",
   "xarray.DataArray",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataarray.TestBoutDataArrayMethods.test_interpolate_parallel_region_singlenull.f": {
  "lineno": 696,
  "symbols_in_volume": [
   "numpy.sin"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataarray.TestBoutDataArrayMethods.test_interpolate_parallel_region_sol": {
  "lineno": 611,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.pi",
   "numpy.testing.assert_allclose",
   "pytest.mark.long",
   "xarray.DataArray",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataarray.TestBoutDataArrayMethods.test_interpolate_parallel_region_sol.f": {
  "lineno": 647,
  "symbols_in_volume": [
   "numpy.sin"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataarray.TestBoutDataArrayMethods.test_interpolate_parallel_sol": {
  "lineno": 785,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.linspace",
   "numpy.pi",
   "numpy.testing.assert_allclose",
   "xarray.DataArray",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataarray.TestBoutDataArrayMethods.test_interpolate_parallel_sol.f_y": {
  "lineno": 821,
  "symbols_in_volume": [
   "numpy.sin"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataarray.TestBoutDataArrayMethods.test_interpolate_parallel_toroidal_points": {
  "lineno": 837,
  "symbols_in_volume": [
   "xarray.testing.assert_identical",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataarray.TestBoutDataArrayMethods.test_interpolate_parallel_toroidal_points_list": {
  "lineno": 862,
  "symbols_in_volume": [
   "xarray.testing.assert_identical",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataarray.TestBoutDataArrayMethods.test_remove_yboundaries": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "pytest.mark.long",
   "pytest.mark.parametrize",
   "pytest.param",
   "xarray.concat",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataarray.TestBoutDataArrayMethods.test_to_dataset": {
  "lineno": 18,
  "symbols_in_volume": [
   "pytest.warns",
   "xarray.core.utils.dict_equiv",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataarray.TestBoutDataArrayMethods.test_to_field_aligned": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.pi",
   "numpy.testing.assert_allclose",
   "pytest.mark.long",
   "pytest.mark.parametrize",
   "pytest.param",
   "pytest.warns",
   "xbout.geometries.apply_geometry",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataarray.TestBoutDataArrayMethods.test_to_field_aligned_dask": {
  "lineno": 194,
  "symbols_in_volume": [
   "numpy.pi",
   "numpy.testing.assert_allclose",
   "pytest.warns",
   "xbout.geometries.apply_geometry",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataarray.TestBoutDataArrayMethods.test_to_field_aligned_staggered": {
  "lineno": 399,
  "symbols_in_volume": [
   "numpy.pi",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize",
   "pytest.raises",
   "pytest.warns",
   "xbout.geometries.apply_geometry",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataset": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xbout.tests.test_boutdataset.TestBoutDatasetIsXarrayDataset": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "xbout.tests.test_boutdataset.TestBoutDatasetIsXarrayDataset.test_concat": {
  "lineno": 30,
  "symbols_in_volume": [
   "pytest.warns",
   "xarray.concat",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataset.TestBoutDatasetIsXarrayDataset.test_isel": {
  "lineno": 44,
  "symbols_in_volume": [
   "pytest.warns",
   "xarray.testing.assert_equal",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataset.TestBoutDatasetMethods": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "class"
 },
 "xbout.tests.test_boutdataset.TestBoutDatasetMethods.test_get_field_aligned": {
  "lineno": 73,
  "symbols_in_volume": [
   "pytest.warns",
   "xarray.testing.assert_allclose",
   "xbout.geometries.apply_geometry",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataset.TestBoutDatasetMethods.test_interpolate_from_unstructured": {
  "lineno": 702,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.isnan",
   "numpy.linspace",
   "numpy.newaxis",
   "numpy.pi",
   "numpy.sin",
   "numpy.testing.assert_allclose",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataset.TestBoutDatasetMethods.test_interpolate_from_unstructured_unstructured_output": {
  "lineno": 751,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.cos",
   "numpy.linspace",
   "numpy.pi",
   "numpy.sin",
   "numpy.testing.assert_allclose",
   "pytest.raises",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataset.TestBoutDatasetMethods.test_interpolate_parallel": {
  "lineno": 178,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "pytest.mark.long",
   "pytest.mark.parametrize",
   "pytest.param",
   "xarray.testing.assert_identical",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files",
   "xbout.tests.test_region.params_boundaries",
   "xbout.tests.test_region.params_boundaries_values",
   "xbout.tests.test_region.params_guards",
   "xbout.tests.test_region.params_guards_values"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataset.TestBoutDatasetMethods.test_interpolate_parallel_all_variables_arg": {
  "lineno": 654,
  "symbols_in_volume": [
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataset.TestBoutDatasetMethods.test_remove_yboundaries": {
  "lineno": 102,
  "symbols_in_volume": [
   "pytest.mark.long",
   "pytest.mark.parametrize",
   "pytest.param",
   "xarray.testing.assert_equal",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataset.TestBoutDatasetMethods.test_set_parallel_interpolation_factor": {
  "lineno": 163,
  "symbols_in_volume": [
   "pytest.raises",
   "xarray.DataArray",
   "xarray.Dataset",
   "xbout.utils._set_attrs_on_all_vars"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataset.TestBoutDatasetMethods.test_test_method": {
  "lineno": 56,
  "symbols_in_volume": [
   "pytest.mark.skip",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataset.TestLoadInputFile": {
  "lineno": 818,
  "symbols_in_volume": [],
  "type": "class"
 },
 "xbout.tests.test_boutdataset.TestLoadInputFile.test_load_options": {
  "lineno": 819,
  "symbols_in_volume": [
   "boutdata.data.BoutOptions",
   "boutdata.data.BoutOptionsFile",
   "pytest.mark.skip"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataset.TestLoadInputFile.test_load_options_in_dataset": {
  "lineno": 827,
  "symbols_in_volume": [
   "boutdata.data.BoutOptions",
   "pytest.mark.skip",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataset.TestLoadLogFile": {
  "lineno": 836,
  "symbols_in_volume": [
   "pytest.mark.skip"
  ],
  "type": "class"
 },
 "xbout.tests.test_boutdataset.TestSave": {
  "lineno": 841,
  "symbols_in_volume": [],
  "type": "class"
 },
 "xbout.tests.test_boutdataset.TestSave.test_reload_all": {
  "lineno": 862,
  "symbols_in_volume": [
   "pathlib.Path",
   "pytest.mark.parametrize",
   "pytest.warns",
   "xarray.testing.assert_identical",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataset.TestSave.test_reload_separate_variables": {
  "lineno": 966,
  "symbols_in_volume": [
   "pathlib.Path",
   "pytest.mark.parametrize",
   "pytest.warns",
   "xarray.testing.assert_identical",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataset.TestSave.test_reload_separate_variables_time_split": {
  "lineno": 1012,
  "symbols_in_volume": [
   "pathlib.Path",
   "pytest.mark.parametrize",
   "pytest.warns",
   "xarray.testing.assert_identical",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataset.TestSave.test_save_all": {
  "lineno": 842,
  "symbols_in_volume": [
   "pathlib.Path",
   "pytest.warns",
   "xarray.open_dataset",
   "xarray.testing.assert_equal",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataset.TestSave.test_save_dtype": {
  "lineno": 905,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.float32",
   "numpy.float64",
   "pathlib.Path",
   "pytest.mark.long",
   "pytest.mark.parametrize",
   "pytest.param",
   "pytest.warns",
   "xarray.open_dataset",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataset.TestSave.test_save_separate_variables": {
  "lineno": 940,
  "symbols_in_volume": [
   "pathlib.Path",
   "pytest.warns",
   "xarray.open_dataset",
   "xarray.testing.assert_equal",
   "xarray.testing.assert_identical",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataset.TestSaveRestart": {
  "lineno": 1066,
  "symbols_in_volume": [],
  "type": "class"
 },
 "xbout.tests.test_boutdataset.TestSaveRestart.test_to_restart": {
  "lineno": 1067,
  "symbols_in_volume": [
   "pathlib.Path",
   "pytest.mark.long",
   "pytest.mark.parametrize",
   "pytest.param",
   "pytest.warns",
   "xarray.open_dataset",
   "xarray.testing.assert_equal",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataset.TestSaveRestart.test_to_restart_change_npe": {
  "lineno": 1132,
  "symbols_in_volume": [
   "pathlib.Path",
   "pytest.warns",
   "xarray.open_dataset",
   "xarray.testing.assert_equal",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataset.TestSaveRestart.test_to_restart_change_npe_doublenull": {
  "lineno": 1193,
  "symbols_in_volume": [
   "pathlib.Path",
   "pytest.mark.long",
   "pytest.warns",
   "xarray.open_dataset",
   "xarray.testing.assert_equal",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_boutdataset.TestSaveRestart.test_to_restart_change_npe_doublenull_expect_fail": {
  "lineno": 1258,
  "symbols_in_volume": [
   "pathlib.Path",
   "pytest.mark.long",
   "pytest.mark.parametrize",
   "pytest.raises",
   "pytest.warns",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_geometries": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xbout.tests.test_geometries.TestGeometryRegistration": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "xbout.tests.test_geometries.TestGeometryRegistration.test_register_new_geometry": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.ones",
   "xarray.DataArray",
   "xarray.Dataset",
   "xarray.testing.assert_equal",
   "xbout.geometries.REGISTERED_GEOMETRIES",
   "xbout.geometries.REGISTERED_GEOMETRIES.keys",
   "xbout.geometries.apply_geometry"
  ],
  "type": "function"
 },
 "xbout.tests.test_geometries.TestGeometryRegistration.test_register_new_geometry.add_schwarzschild_coords": {
  "lineno": 23,
  "symbols_in_volume": [
   "xbout.geometries.register_geometry"
  ],
  "type": "function"
 },
 "xbout.tests.test_geometries.TestGeometryRegistration.test_unregistered_geometry": {
  "lineno": 16,
  "symbols_in_volume": [
   "pytest.raises",
   "xarray.Dataset",
   "xbout.geometries.UnregisteredGeometryError",
   "xbout.geometries.apply_geometry"
  ],
  "type": "function"
 },
 "xbout.tests.test_grid": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xbout.tests.test_grid.TestOpenGrid": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "class"
 },
 "xbout.tests.test_grid.TestOpenGrid.test_open_grid": {
  "lineno": 37,
  "symbols_in_volume": [
   "pytest.warns",
   "xarray.open_dataset",
   "xarray.testing.assert_equal",
   "xbout.load.open_boutdataset"
  ],
  "type": "function"
 },
 "xbout.tests.test_grid.TestOpenGrid.test_open_grid_apply_geometry": {
  "lineno": 62,
  "symbols_in_volume": [
   "xarray.DataArray",
   "xarray.testing.assert_equal",
   "xbout.geometries.REGISTERED_GEOMETRIES",
   "xbout.load.open_boutdataset"
  ],
  "type": "function"
 },
 "xbout.tests.test_grid.TestOpenGrid.test_open_grid_apply_geometry.add_schwarzschild_coords": {
  "lineno": 63,
  "symbols_in_volume": [
   "xbout.geometries.register_geometry"
  ],
  "type": "function"
 },
 "xbout.tests.test_grid.TestOpenGrid.test_open_grid_chunks": {
  "lineno": 80,
  "symbols_in_volume": [
   "pytest.warns",
   "xarray.open_dataset",
   "xarray.testing.assert_equal",
   "xbout.load.open_boutdataset"
  ],
  "type": "function"
 },
 "xbout.tests.test_grid.TestOpenGrid.test_open_grid_chunks_not_in_grid": {
  "lineno": 88,
  "symbols_in_volume": [
   "pytest.warns",
   "xarray.open_dataset",
   "xarray.testing.assert_equal",
   "xbout.load.open_boutdataset"
  ],
  "type": "function"
 },
 "xbout.tests.test_grid.TestOpenGrid.test_open_grid_extra_dims": {
  "lineno": 45,
  "symbols_in_volume": [
   "pytest.warns",
   "xarray.DataArray",
   "xarray.merge",
   "xarray.open_dataset",
   "xarray.testing.assert_equal",
   "xbout.load.open_boutdataset"
  ],
  "type": "function"
 },
 "xbout.tests.test_grid.create_example_grid_file": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ones",
   "pathlib.Path",
   "pytest.fixture",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "xbout.tests.test_init": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xbout.tests.test_init.test_version": {
  "lineno": 1,
  "symbols_in_volume": [
   "xbout.__version__"
  ],
  "type": "function"
 },
 "xbout.tests.test_load": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xbout.tests.test_load.TestArrange": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "class"
 },
 "xbout.tests.test_load.TestArrange.test_arrange_along_t": {
  "lineno": 163,
  "symbols_in_volume": [
   "xbout.load._arrange_for_concatenation"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.TestArrange.test_arrange_along_x": {
  "lineno": 137,
  "symbols_in_volume": [
   "xbout.load._arrange_for_concatenation"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.TestArrange.test_arrange_along_xt": {
  "lineno": 198,
  "symbols_in_volume": [
   "xbout.load._arrange_for_concatenation"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.TestArrange.test_arrange_along_xy": {
  "lineno": 176,
  "symbols_in_volume": [
   "xbout.load._arrange_for_concatenation"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.TestArrange.test_arrange_along_xyt": {
  "lineno": 210,
  "symbols_in_volume": [
   "xbout.load._arrange_for_concatenation"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.TestArrange.test_arrange_along_y": {
  "lineno": 148,
  "symbols_in_volume": [
   "xbout.load._arrange_for_concatenation"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.TestArrange.test_arrange_single": {
  "lineno": 128,
  "symbols_in_volume": [
   "xbout.load._arrange_for_concatenation"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.TestOpen": {
  "lineno": 688,
  "symbols_in_volume": [],
  "type": "class"
 },
 "xbout.tests.test_load.TestOpen.test_combine_along_t": {
  "lineno": 803,
  "symbols_in_volume": [
   "pytest.mark.skip"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.TestOpen.test_combine_along_tx": {
  "lineno": 933,
  "symbols_in_volume": [
   "pytest.mark.skip"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.TestOpen.test_combine_along_x": {
  "lineno": 737,
  "symbols_in_volume": [
   "pytest.warns",
   "xarray.concat",
   "xarray.testing.assert_equal",
   "xarray.testing.assert_identical",
   "xbout.load._BOUT_PER_PROC_VARIABLES",
   "xbout.load.open_boutdataset"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.TestOpen.test_combine_along_xy": {
  "lineno": 807,
  "symbols_in_volume": [
   "pytest.warns",
   "xarray.concat",
   "xarray.testing.assert_equal",
   "xarray.testing.assert_identical",
   "xbout.load._BOUT_PER_PROC_VARIABLES",
   "xbout.load.open_boutdataset"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.TestOpen.test_combine_along_y": {
  "lineno": 771,
  "symbols_in_volume": [
   "pytest.warns",
   "xarray.concat",
   "xarray.testing.assert_equal",
   "xarray.testing.assert_identical",
   "xbout.load._BOUT_PER_PROC_VARIABLES",
   "xbout.load.open_boutdataset"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.TestOpen.test_drop_vars": {
  "lineno": 916,
  "symbols_in_volume": [
   "pytest.warns",
   "xbout.load.open_boutdataset"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.TestOpen.test_salpha": {
  "lineno": 887,
  "symbols_in_volume": [
   "pathlib.Path",
   "xarray.testing.assert_identical",
   "xbout.load.open_boutdataset"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.TestOpen.test_single_file": {
  "lineno": 689,
  "symbols_in_volume": [
   "pytest.warns",
   "xarray.testing.assert_equal",
   "xarray.testing.assert_identical",
   "xbout.load._BOUT_PER_PROC_VARIABLES",
   "xbout.load._BOUT_TIME_DEPENDENT_META_VARS",
   "xbout.load.open_boutdataset"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.TestOpen.test_squashed_file": {
  "lineno": 713,
  "symbols_in_volume": [
   "pytest.warns",
   "xarray.testing.assert_equal",
   "xarray.testing.assert_identical",
   "xbout.load._BOUT_PER_PROC_VARIABLES",
   "xbout.load._BOUT_TIME_DEPENDENT_META_VARS",
   "xbout.load.open_boutdataset"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.TestOpen.test_toroidal": {
  "lineno": 852,
  "symbols_in_volume": [
   "pathlib.Path",
   "xarray.testing.assert_identical",
   "xbout.load.open_boutdataset"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.TestPathHandling": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "class"
 },
 "xbout.tests.test_load.TestPathHandling.test_glob_expansion_both": {
  "lineno": 62,
  "symbols_in_volume": [
   "natsort.natsorted",
   "pathlib.Path",
   "pytest.mark.parametrize",
   "xbout.load._expand_wildcards"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.TestPathHandling.test_glob_expansion_brackets": {
  "lineno": 81,
  "symbols_in_volume": [
   "natsort.natsorted",
   "pathlib.Path",
   "pytest.mark.parametrize",
   "xbout.load._expand_wildcards"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.TestPathHandling.test_glob_expansion_single": {
  "lineno": 49,
  "symbols_in_volume": [
   "pathlib.Path",
   "xbout.load._expand_wildcards"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.TestPathHandling.test_no_files": {
  "lineno": 100,
  "symbols_in_volume": [
   "pathlib.Path",
   "pytest.raises",
   "xbout.load._expand_filepaths"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.TestStripMetadata": {
  "lineno": 672,
  "symbols_in_volume": [],
  "type": "class"
 },
 "xbout.tests.test_load.TestStripMetadata.test_strip_metadata": {
  "lineno": 673,
  "symbols_in_volume": [
   "xbout.load._BOUT_PER_PROC_VARIABLES",
   "xbout.load._BOUT_TIME_DEPENDENT_META_VARS",
   "xbout.utils._separate_metadata"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.TestTrim": {
  "lineno": 1006,
  "symbols_in_volume": [],
  "type": "class"
 },
 "xbout.tests.test_load.TestTrim.test_infer_boundaries_2d_parallelization": {
  "lineno": 1023,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "xarray.tests.test_dataset.create_test_data",
   "xbout.load._infer_contains_boundaries"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.TestTrim.test_infer_boundaries_2d_parallelization_by_filenum": {
  "lineno": 1083,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "xarray.tests.test_dataset.create_test_data",
   "xbout.load._infer_contains_boundaries"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.TestTrim.test_infer_boundaries_2d_parallelization_doublenull": {
  "lineno": 1052,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "xarray.tests.test_dataset.create_test_data",
   "xbout.load._infer_contains_boundaries"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.TestTrim.test_infer_boundaries_2d_parallelization_doublenull_by_filenum": {
  "lineno": 1113,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "xarray.tests.test_dataset.create_test_data",
   "xbout.load._infer_contains_boundaries"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.TestTrim.test_keep_xboundaries": {
  "lineno": 1145,
  "symbols_in_volume": [
   "xarray.testing.assert_equal",
   "xarray.tests.test_dataset.create_test_data",
   "xbout.load._trim"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.TestTrim.test_keep_yboundaries": {
  "lineno": 1159,
  "symbols_in_volume": [
   "xarray.testing.assert_equal",
   "xarray.tests.test_dataset.create_test_data",
   "xbout.load._trim"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.TestTrim.test_keep_yboundaries_doublenull_by_filenum": {
  "lineno": 1173,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "xarray.testing.assert_equal",
   "xarray.tests.test_dataset.create_test_data",
   "xbout.load._trim"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.TestTrim.test_no_trim": {
  "lineno": 1007,
  "symbols_in_volume": [
   "xarray.testing.assert_equal",
   "xarray.tests.test_dataset.create_test_data",
   "xbout.load._trim"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.TestTrim.test_trim_guards": {
  "lineno": 1014,
  "symbols_in_volume": [
   "xarray.testing.assert_equal",
   "xarray.tests.test_dataset.create_test_data",
   "xbout.load._trim"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.TestTrim.test_trim_timing_info": {
  "lineno": 1197,
  "symbols_in_volume": [
   "xarray.testing.assert_equal",
   "xarray.tests.test_dataset.create_test_data",
   "xbout.load._BOUT_PER_PROC_VARIABLES",
   "xbout.load._trim"
  ],
  "type": "function"
 },
 "xbout.tests.test_load._bout_xyt_example_files": {
  "lineno": 250,
  "symbols_in_volume": [
   "re.sub"
  ],
  "type": "function"
 },
 "xbout.tests.test_load._create_filepaths": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.tests.test_load.bout_xyt_example_files": {
  "lineno": 245,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.create_bout_ds": {
  "lineno": 391,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ones",
   "numpy.pi",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.zeros",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.create_bout_ds_list": {
  "lineno": 341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.tests.test_load.create_bout_grid_ds": {
  "lineno": 600,
  "symbols_in_volume": [
   "numpy.ones",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.create_filepaths": {
  "lineno": 108,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "xbout.tests.test_load.test_check_extensions": {
  "lineno": 28,
  "symbols_in_volume": [
   "pathlib.Path",
   "pytest.raises",
   "xbout.load._check_filetype"
  ],
  "type": "function"
 },
 "xbout.tests.test_plot": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xbout.tests.test_plot.TestPlot": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "xbout.tests.test_plot.TestPlot.test_region_disconnecteddoublenull": {
  "lineno": 18,
  "symbols_in_volume": [
   "matplotlib.pyplot.close",
   "matplotlib.pyplot.figure",
   "numpy.linspace",
   "numpy.newaxis",
   "pytest.mark.long",
   "pytest.mark.parametrize",
   "pytest.param",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files",
   "xbout.tests.test_region.params_boundaries",
   "xbout.tests.test_region.params_boundaries_values",
   "xbout.tests.test_region.params_guards",
   "xbout.tests.test_region.params_guards_values"
  ],
  "type": "function"
 },
 "xbout.tests.test_region": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.long",
   "pytest.param"
  ],
  "type": "module"
 },
 "xbout.tests.test_region.TestRegion": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "class"
 },
 "xbout.tests.test_region.TestRegion.test_region_connecteddoublenull": {
  "lineno": 579,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "pytest.mark.long",
   "pytest.mark.parametrize",
   "xarray.testing.assert_identical",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_region.TestRegion.test_region_core": {
  "lineno": 29,
  "symbols_in_volume": [
   "pytest.mark.long",
   "pytest.mark.parametrize",
   "pytest.raises",
   "xarray.testing.assert_identical",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_region.TestRegion.test_region_disconnecteddoublenull": {
  "lineno": 880,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize",
   "xarray.testing.assert_identical",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_region.TestRegion.test_region_disconnecteddoublenull_get_one_guard": {
  "lineno": 1323,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize",
   "xarray.testing.assert_identical",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_region.TestRegion.test_region_limiter": {
  "lineno": 115,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "xarray.testing.assert_identical",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_region.TestRegion.test_region_singlenull": {
  "lineno": 409,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "pytest.mark.long",
   "pytest.mark.parametrize",
   "xarray.testing.assert_identical",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_region.TestRegion.test_region_sol": {
  "lineno": 79,
  "symbols_in_volume": [
   "pytest.mark.long",
   "pytest.mark.parametrize",
   "xarray.testing.assert_identical",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_region.TestRegion.test_region_xpoint": {
  "lineno": 214,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "pytest.mark.long",
   "pytest.mark.parametrize",
   "xarray.testing.assert_identical",
   "xbout.open_boutdataset",
   "xbout.tests.test_load.bout_xyt_example_files"
  ],
  "type": "function"
 },
 "xbout.tests.test_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xbout.tests.test_utils.TestUtils": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "xbout.tests.test_utils.TestUtils.test__1d_coord_from_spacing_da": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.ones",
   "pytest.mark.parametrize",
   "pytest.raises",
   "xarray.DataArray",
   "xarray.Variable",
   "xarray.testing.assert_allclose",
   "xbout.utils._1d_coord_from_spacing"
  ],
  "type": "function"
 },
 "xbout.tests.test_utils.TestUtils.test__1d_coord_from_spacing_scalar": {
  "lineno": 68,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.linspace",
   "pytest.mark.parametrize",
   "pytest.raises",
   "xarray.Dataset",
   "xarray.Variable",
   "xarray.testing.assert_allclose",
   "xbout.utils._1d_coord_from_spacing"
  ],
  "type": "function"
 },
 "xbout.tests.test_utils.TestUtils.test__set_attrs_on_all_vars": {
  "lineno": 15,
  "symbols_in_volume": [
   "xarray.DataArray",
   "xarray.Dataset",
   "xbout.utils._set_attrs_on_all_vars"
  ],
  "type": "function"
 },
 "xbout.tests.test_utils.TestUtils.test__set_attrs_on_all_vars_copy": {
  "lineno": 32,
  "symbols_in_volume": [
   "xarray.DataArray",
   "xarray.Dataset",
   "xbout.utils._set_attrs_on_all_vars"
  ],
  "type": "function"
 },
 "xbout.tests.test_utils.TestUtils.test__update_metadata_increased_resolution": {
  "lineno": 45,
  "symbols_in_volume": [
   "xarray.DataArray",
   "xbout.utils._update_metadata_increased_resolution"
  ],
  "type": "function"
 },
 "xbout.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xbout.utils._1d_coord_from_spacing": {
  "lineno": 112,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.arange",
   "xarray.DataArray",
   "xarray.Variable"
  ],
  "type": "function"
 },
 "xbout.utils._add_attrs_to_var": {
  "lineno": 20,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "xbout.utils._check_filetype": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.utils._check_inner_x": {
  "lineno": 468,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.stack"
  ],
  "type": "function"
 },
 "xbout.utils._check_lower_y": {
  "lineno": 501,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.stack"
  ],
  "type": "function"
 },
 "xbout.utils._check_new_nxpe": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.utils._check_new_nype": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.utils._check_outer_x": {
  "lineno": 529,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.stack"
  ],
  "type": "function"
 },
 "xbout.utils._check_upper_y": {
  "lineno": 435,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.stack"
  ],
  "type": "function"
 },
 "xbout.utils._follow_boundary": {
  "lineno": 557,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "xbout.utils._get_bounding_surfaces": {
  "lineno": 606,
  "symbols_in_volume": [
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "xbout.utils._is_path": {
  "lineno": 41,
  "symbols_in_volume": [
   "pathlib.Path"
  ],
  "type": "function"
 },
 "xbout.utils._pad_x_boundaries": {
  "lineno": 241,
  "symbols_in_volume": [
   "numpy.nan",
   "xarray.concat"
  ],
  "type": "function"
 },
 "xbout.utils._pad_y_boundaries": {
  "lineno": 259,
  "symbols_in_volume": [
   "numpy.nan",
   "xarray.concat"
  ],
  "type": "function"
 },
 "xbout.utils._separate_metadata": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.utils._set_attrs_on_all_vars": {
  "lineno": 9,
  "symbols_in_volume": [
   "copy.deepcopy",
   "itertools.chain"
  ],
  "type": "function"
 },
 "xbout.utils._split_into_restarts": {
  "lineno": 294,
  "symbols_in_volume": [
   "pathlib.Path",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "xbout.utils._update_metadata_increased_resolution": {
  "lineno": 71,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "xbout.utils._update_metadata_increased_resolution.update_jyseps": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xbout.utils._update_metadata_increased_resolution.update_ny": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 }
}