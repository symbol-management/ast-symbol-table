{
 "graphene_sqlalchemy": {
  "data": {},
  "type": "module"
 },
 "graphene_sqlalchemy.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "graphene_sqlalchemy.__version__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "graphene_sqlalchemy.batching": {
  "data": {},
  "type": "module"
 },
 "graphene_sqlalchemy.batching.QueryContext": {
  "data": {
   "shadows": "sqlalchemy.orm.query.QueryContext"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.batching.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.batching.dataloader": {
  "data": {
   "shadows": "promise.dataloader"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.batching.get_batch_resolver": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "RelationshipLoader",
    "sqlalchemy.orm.strategies.SelectInLoader"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.batching.get_batch_resolver.RelationshipLoader": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "promise.dataloader.DataLoader"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.batching.get_batch_resolver.RelationshipLoader.batch_load_fn": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "getattr",
    "graphene_sqlalchemy.batching.sqlalchemy",
    "promise.promise.Promise.resolve",
    "sqlalchemy.orm.Session.object_session",
    "sqlalchemy.orm.query.QueryContext"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.batching.get_batch_resolver.resolve": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "graphene_sqlalchemy.batching.promise": {
  "data": {
   "shadows": "promise.promise"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.batching.sqlalchemy": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.batching.strategies": {
  "data": {
   "shadows": "sqlalchemy.orm.strategies"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.converter": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "getattr",
    "graphene_sqlalchemy.converter._register_composite_class",
    "graphene_sqlalchemy.converter.convert_sqlalchemy_composite",
    "object",
    "sqlalchemy.orm.strategies",
    "sqlalchemy_utils.ChoiceType",
    "sqlalchemy_utils.JSONType",
    "sqlalchemy_utils.ScalarListType",
    "sqlalchemy_utils.TSVectorType"
   ]
  },
  "type": "module"
 },
 "graphene_sqlalchemy.converter.Boolean": {
  "data": {
   "shadows": "graphene.Boolean"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.converter.ChoiceType": {
  "data": {
   "shadows": "sqlalchemy_utils.ChoiceType"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.converter.DateTime": {
  "data": {
   "shadows": "graphene.types.datetime.DateTime"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.converter.Dynamic": {
  "data": {
   "shadows": "graphene.Dynamic"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.converter.Enum": {
  "data": {
   "shadows": "graphene.Enum"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.converter.EnumMeta": {
  "data": {
   "shadows": "enum.EnumMeta"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.converter.Field": {
  "data": {
   "shadows": "graphene.Field"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.converter.Float": {
  "data": {
   "shadows": "graphene.Float"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.converter.ID": {
  "data": {
   "shadows": "graphene.ID"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.converter.Int": {
  "data": {
   "shadows": "graphene.Int"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.converter.JSONString": {
  "data": {
   "shadows": "graphene.types.json.JSONString"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.converter.JSONType": {
  "data": {
   "shadows": "sqlalchemy_utils.JSONType"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.converter.List": {
  "data": {
   "shadows": "graphene.List"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.converter.ScalarListType": {
  "data": {
   "shadows": "sqlalchemy_utils.ScalarListType"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.converter.String": {
  "data": {
   "shadows": "graphene.String"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.converter.TSVectorType": {
  "data": {
   "shadows": "sqlalchemy_utils.TSVectorType"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.converter._convert_o2m_or_m2m_relationship": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "connection_field_factory",
    "graphene.Field",
    "graphene.List"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.converter._convert_o2o_or_m2o_relationship": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "get_attr_resolver",
    "get_batch_resolver",
    "get_custom_resolver",
    "graphene.Field"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.converter._register_composite_class": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "get_global_registry"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.converter._register_composite_class.inner": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "graphene_sqlalchemy.converter.convert_array_to_list": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "graphene.List",
    "graphene_sqlalchemy.converter.convert_sqlalchemy_type",
    "sqlalchemy.dialects.postgresql.ARRAY",
    "sqlalchemy.types.ARRAY"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.converter.convert_choice_to_enum": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "enum.EnumMeta",
    "graphene.Enum",
    "graphene_sqlalchemy.converter.convert_sqlalchemy_type",
    "isinstance",
    "list",
    "sqlalchemy_utils.ChoiceType",
    "type.choices"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.converter.convert_column_to_boolean": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "graphene.Boolean",
    "graphene_sqlalchemy.converter.convert_sqlalchemy_type",
    "sqlalchemy.types.Boolean"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.converter.convert_column_to_datetime": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "graphene.types.datetime.DateTime",
    "graphene_sqlalchemy.converter.convert_sqlalchemy_type",
    "sqlalchemy.types.DateTime"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.converter.convert_column_to_float": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "graphene.Float",
    "graphene_sqlalchemy.converter.convert_sqlalchemy_type",
    "sqlalchemy.types.BigInteger",
    "sqlalchemy.types.Float",
    "sqlalchemy.types.Numeric"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.converter.convert_column_to_int_or_id": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "graphene.ID",
    "graphene.Int",
    "graphene_sqlalchemy.converter.convert_sqlalchemy_type",
    "sqlalchemy.types.Integer",
    "sqlalchemy.types.SmallInteger"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.converter.convert_column_to_string": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "graphene.String",
    "graphene_sqlalchemy.converter.convert_sqlalchemy_type",
    "sqlalchemy.dialects.postgresql.CIDR",
    "sqlalchemy.dialects.postgresql.INET",
    "sqlalchemy.dialects.postgresql.UUID",
    "sqlalchemy.types.Date",
    "sqlalchemy.types.String",
    "sqlalchemy.types.Text",
    "sqlalchemy.types.Time",
    "sqlalchemy.types.Unicode",
    "sqlalchemy.types.UnicodeText",
    "sqlalchemy_utils.TSVectorType"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.converter.convert_enum_to_enum": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "enum_for_sa_enum",
    "get_global_registry",
    "graphene_sqlalchemy.converter.convert_sqlalchemy_type",
    "sqlalchemy.types.Enum",
    "type"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.converter.convert_json_to_string": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "graphene.types.json.JSONString",
    "graphene_sqlalchemy.converter.convert_sqlalchemy_type",
    "sqlalchemy.dialects.postgresql.HSTORE",
    "sqlalchemy.dialects.postgresql.JSON",
    "sqlalchemy.dialects.postgresql.JSONB"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.converter.convert_json_type_to_string": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "graphene.types.json.JSONString",
    "graphene_sqlalchemy.converter.convert_sqlalchemy_type",
    "sqlalchemy_utils.JSONType"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.converter.convert_scalar_list_to_list": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "graphene.List",
    "graphene.String",
    "graphene_sqlalchemy.converter.convert_sqlalchemy_type",
    "sqlalchemy_utils.ScalarListType"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.converter.convert_sqlalchemy_column": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "getattr",
    "graphene.Field",
    "graphene_sqlalchemy.converter.convert_sqlalchemy_type",
    "graphene_sqlalchemy.converter.get_column_doc",
    "graphene_sqlalchemy.converter.is_column_nullable"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.converter.convert_sqlalchemy_composite": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "AttributeError",
    "Exception",
    "converter"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.converter.convert_sqlalchemy_hybrid_method": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "graphene.Field",
    "graphene.String"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.converter.convert_sqlalchemy_relationship": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "graphene.Dynamic"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.converter.convert_sqlalchemy_relationship.dynamic_type": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "graphene_sqlalchemy.converter._convert_o2m_or_m2m_relationship",
    "graphene_sqlalchemy.converter._convert_o2o_or_m2o_relationship",
    "graphene_sqlalchemy.converter.is_selectin_available",
    "sqlalchemy.orm.interfaces.MANYTOMANY",
    "sqlalchemy.orm.interfaces.MANYTOONE",
    "sqlalchemy.orm.interfaces.ONETOMANY"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.converter.convert_sqlalchemy_type": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "Exception",
    "singledispatch.singledispatch"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.converter.get_column_doc": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.converter.interfaces": {
  "data": {
   "shadows": "sqlalchemy.orm.interfaces"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.converter.is_column_nullable": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "bool",
    "getattr"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.converter.is_selectin_available": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "graphene_sqlalchemy.converter.postgresql": {
  "data": {
   "shadows": "sqlalchemy.dialects.postgresql"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.converter.singledispatch": {
  "data": {
   "shadows": "singledispatch.singledispatch"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.converter.strategies": {
  "data": {
   "shadows": "sqlalchemy.orm.strategies"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.converter.types": {
  "data": {
   "shadows": "sqlalchemy.types"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.enums": {
  "data": {},
  "type": "module"
 },
 "graphene_sqlalchemy.enums.Argument": {
  "data": {
   "shadows": "graphene.Argument"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.enums.ColumnProperty": {
  "data": {
   "shadows": "sqlalchemy.orm.ColumnProperty"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.enums.Enum": {
  "data": {
   "shadows": "graphene.Enum"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.enums.List": {
  "data": {
   "shadows": "graphene.List"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.enums.SQLAlchemyEnumType": {
  "data": {
   "shadows": "sqlalchemy.types.Enum"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.enums._convert_sa_to_graphene_enum": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "TypeError",
    "all",
    "graphene.Enum",
    "graphene.Enum.from_enum",
    "isinstance",
    "sqlalchemy.types.Enum",
    "to_enum_value_name",
    "to_type_name"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.enums._default_sort_enum_symbol_name": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "to_enum_value_name"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.enums.enum_for_field": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "TypeError",
    "graphene_sqlalchemy.enums._convert_sa_to_graphene_enum",
    "graphene_sqlalchemy.enums.six",
    "isinstance",
    "issubclass",
    "sqlalchemy.orm.ColumnProperty",
    "sqlalchemy.types.Enum",
    "to_type_name",
    "type"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.enums.enum_for_sa_enum": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "TypeError",
    "graphene_sqlalchemy.enums._convert_sa_to_graphene_enum",
    "isinstance",
    "sqlalchemy.types.Enum"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.enums.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.enums.sort_argument_for_object_type": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "graphene.Argument",
    "graphene.List",
    "graphene_sqlalchemy.enums.sort_enum_for_object_type"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.enums.sort_enum_for_object_type": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "EnumValue",
    "ValueError",
    "dict",
    "get_name",
    "graphene.Enum",
    "graphene_sqlalchemy.enums._default_sort_enum_symbol_name",
    "isinstance",
    "sqlalchemy.orm.ColumnProperty"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.registry": {
  "data": {},
  "type": "module"
 },
 "graphene_sqlalchemy.registry.Enum": {
  "data": {
   "shadows": "graphene.Enum"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.registry.Registry": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.registry.Registry.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dict"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.registry.Registry.get_converter_for_composite": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "graphene_sqlalchemy.registry.Registry.get_graphene_enum_for_sa_enum": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "graphene_sqlalchemy.registry.Registry.get_orm_field_for_graphene_field": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "graphene_sqlalchemy.registry.Registry.get_sort_enum_for_object_type": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "graphene_sqlalchemy.registry.Registry.get_type_for_model": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "graphene_sqlalchemy.registry.Registry.register": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "issubclass",
    "type"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.registry.Registry.register_composite_converter": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "graphene_sqlalchemy.registry.Registry.register_enum": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "TypeError",
    "graphene.Enum",
    "isinstance",
    "sqlalchemy.types.Enum",
    "type"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.registry.Registry.register_orm_field": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "TypeError",
    "graphene_sqlalchemy.registry.six",
    "isinstance",
    "issubclass",
    "type"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.registry.Registry.register_sort_enum": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "TypeError",
    "graphene.Enum",
    "isinstance",
    "issubclass",
    "type"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.registry.SQLAlchemyEnumType": {
  "data": {
   "shadows": "sqlalchemy.types.Enum"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.registry.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.registry.get_global_registry": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "graphene_sqlalchemy.registry.Registry",
    "graphene_sqlalchemy.registry.registry"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.registry.registry": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "graphene_sqlalchemy.registry.reset_global_registry": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "graphene_sqlalchemy.registry.registry"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.registry.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.resolvers": {
  "data": {},
  "type": "module"
 },
 "graphene_sqlalchemy.resolvers.get_attr_resolver": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.resolvers.get_custom_resolver": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "getattr",
    "graphene.utils.get_unbound_function.get_unbound_function"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.resolvers.get_unbound_function": {
  "data": {
   "shadows": "graphene.utils.get_unbound_function.get_unbound_function"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests": {
  "data": {},
  "type": "module"
 },
 "graphene_sqlalchemy.tests.conftest": {
  "data": {},
  "type": "module"
 },
 "graphene_sqlalchemy.tests.conftest.create_engine": {
  "data": {
   "shadows": "sqlalchemy.create_engine"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.conftest.graphene": {
  "data": {
   "shadows": "graphene"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.conftest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.conftest.reset_registry": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.conftest.pytest",
    "reset_global_registry"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.conftest.reset_registry.convert_composite_class": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.conftest.graphene"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.conftest.session": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.conftest.pytest",
    "graphene_sqlalchemy.tests.conftest.session_factory"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.conftest.session_factory": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.conftest.pytest",
    "graphene_sqlalchemy.tests.conftest.test_db_url",
    "sqlalchemy.create_engine",
    "sqlalchemy.orm.sessionmaker"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.conftest.sessionmaker": {
  "data": {
   "shadows": "sqlalchemy.orm.sessionmaker"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.conftest.test_db_url": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "graphene_sqlalchemy.tests.models": {
  "data": {
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.models.Base",
    "graphene_sqlalchemy.tests.models.ReflectedEditor",
    "graphene_sqlalchemy.tests.models.editor_table",
    "sqlalchemy.Column",
    "sqlalchemy.Enum",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.Table",
    "sqlalchemy.ext.declarative.declarative_base",
    "sqlalchemy.orm.mapper"
   ]
  },
  "type": "module"
 },
 "graphene_sqlalchemy.tests.models.Article": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.models.Base",
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Date",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.String"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.models.Base": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "graphene_sqlalchemy.tests.models.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.models.CompositeFullName": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.models.CompositeFullName.__composite_values__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.models.CompositeFullName.__init__": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.models.CompositeFullName.__repr__": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.models.Date": {
  "data": {
   "shadows": "sqlalchemy.Date"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.models.Editor": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.models.Base",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.models.Enum": {
  "data": {
   "shadows": "sqlalchemy.Enum"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.models.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.models.HairKind": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.models.enum"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.models.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.models.Pet": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.models.Base",
    "graphene_sqlalchemy.tests.models.HairKind",
    "graphene_sqlalchemy.tests.models.PetKind",
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Enum",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.String"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.models.PetKind": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "graphene_sqlalchemy.tests.models.ReflectedEditor": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.models.ReflectedEditor.__subclasses__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.models.Reporter": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.models.Base",
    "graphene_sqlalchemy.tests.models.CompositeFullName",
    "graphene_sqlalchemy.tests.models.PetKind",
    "graphene_sqlalchemy.tests.models.association_table",
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.func.cast",
    "sqlalchemy.func.count",
    "sqlalchemy.orm.column_property",
    "sqlalchemy.orm.composite",
    "sqlalchemy.orm.relationship",
    "sqlalchemy.select"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.models.Reporter.hybrid_prop": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "sqlalchemy.ext.hybrid.hybrid_property"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.models.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.models.Table": {
  "data": {
   "shadows": "sqlalchemy.Table"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.models.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.models.association_table": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "graphene_sqlalchemy.tests.models.column_property": {
  "data": {
   "shadows": "sqlalchemy.orm.column_property"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.models.composite": {
  "data": {
   "shadows": "sqlalchemy.orm.composite"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.models.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.models.editor_table": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "graphene_sqlalchemy.tests.models.enum": {
  "data": {
   "shadows": "enum"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.models.func": {
  "data": {
   "shadows": "sqlalchemy.func"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.models.hybrid_property": {
  "data": {
   "shadows": "sqlalchemy.ext.hybrid.hybrid_property"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.models.mapper": {
  "data": {
   "shadows": "sqlalchemy.orm.mapper"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.models.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.models.select": {
  "data": {
   "shadows": "sqlalchemy.select"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_batching": {
  "data": {
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_batching.pytest",
    "is_sqlalchemy_version_less_than"
   ]
  },
  "type": "module"
 },
 "graphene_sqlalchemy.tests.test_batching.MockLoggingHandler": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_batching.logging"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_batching.MockLoggingHandler.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_batching.logging"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_batching.MockLoggingHandler.emit": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_batching.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_batching.get_schema": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_batching.graphene"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_batching.get_schema.ArticleType": {
  "data": {
   "lineno": 49
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_batching.get_schema.ArticleType.Meta": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "graphene.relay.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_batching.get_schema.PetType": {
  "data": {
   "lineno": 55
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_batching.get_schema.PetType.Meta": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "graphene.relay.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_batching.get_schema.Query": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_batching.graphene"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_batching.get_schema.Query.resolve_articles": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_batching.get_schema.Query.resolve_reporters": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_batching.get_schema.ReporterType": {
  "data": {
   "lineno": 43
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_batching.get_schema.ReporterType.Meta": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "graphene.relay.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_batching.graphene": {
  "data": {
   "shadows": "graphene"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_batching.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_batching.mock_sqlalchemy_logging_handler": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_batching.MockLoggingHandler",
    "graphene_sqlalchemy.tests.test_batching.contextlib",
    "graphene_sqlalchemy.tests.test_batching.logging"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_batching.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_batching.relay": {
  "data": {
   "shadows": "graphene.relay"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_batching.test_connection_factory_field_overrides_batching_is_false": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "Reporter",
    "graphene_sqlalchemy.tests.test_batching.graphene",
    "graphene_sqlalchemy.tests.test_batching.mock_sqlalchemy_logging_handler",
    "is_sqlalchemy_version_less_than",
    "len",
    "session_factory"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_batching.test_connection_factory_field_overrides_batching_is_false.ArticleType": {
  "data": {
   "lineno": 607
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_batching.test_connection_factory_field_overrides_batching_is_false.ArticleType.Meta": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "Article",
    "graphene.relay.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_batching.test_connection_factory_field_overrides_batching_is_false.Query": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_batching.graphene"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_batching.test_connection_factory_field_overrides_batching_is_false.Query.resolve_reporters": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "Reporter"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_batching.test_connection_factory_field_overrides_batching_is_false.ReporterType": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "ORMField"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_batching.test_connection_factory_field_overrides_batching_is_false.ReporterType.Meta": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "Reporter",
    "graphene.relay.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_batching.test_connection_factory_field_overrides_batching_is_true": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "Reporter",
    "graphene_sqlalchemy.tests.test_batching.graphene",
    "graphene_sqlalchemy.tests.test_batching.mock_sqlalchemy_logging_handler",
    "len",
    "session_factory"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_batching.test_connection_factory_field_overrides_batching_is_true.ArticleType": {
  "data": {
   "lineno": 666
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_batching.test_connection_factory_field_overrides_batching_is_true.ArticleType.Meta": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "Article",
    "graphene.relay.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_batching.test_connection_factory_field_overrides_batching_is_true.Query": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_batching.graphene"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_batching.test_connection_factory_field_overrides_batching_is_true.Query.resolve_reporters": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "Reporter"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_batching.test_connection_factory_field_overrides_batching_is_true.ReporterType": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "ORMField"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_batching.test_connection_factory_field_overrides_batching_is_true.ReporterType.Meta": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "Reporter",
    "graphene.relay.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_batching.test_disable_batching_via_ormfield": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "Reporter",
    "graphene_sqlalchemy.tests.test_batching.graphene",
    "graphene_sqlalchemy.tests.test_batching.mock_sqlalchemy_logging_handler",
    "len",
    "session_factory"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_batching.test_disable_batching_via_ormfield.ArticleType": {
  "data": {
   "lineno": 535
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_batching.test_disable_batching_via_ormfield.ArticleType.Meta": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "Article",
    "graphene.relay.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_batching.test_disable_batching_via_ormfield.Query": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_batching.graphene"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_batching.test_disable_batching_via_ormfield.Query.resolve_reporters": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "Reporter"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_batching.test_disable_batching_via_ormfield.ReporterType": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "ORMField"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_batching.test_disable_batching_via_ormfield.ReporterType.Meta": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "Reporter",
    "graphene.relay.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_batching.test_many_to_many": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "Pet",
    "Reporter",
    "graphene_sqlalchemy.tests.test_batching.get_schema",
    "graphene_sqlalchemy.tests.test_batching.mock_sqlalchemy_logging_handler",
    "is_sqlalchemy_version_less_than",
    "len",
    "session_factory",
    "to_std_dicts"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_batching.test_many_to_one": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "Article",
    "Reporter",
    "graphene_sqlalchemy.tests.test_batching.get_schema",
    "graphene_sqlalchemy.tests.test_batching.mock_sqlalchemy_logging_handler",
    "is_sqlalchemy_version_less_than",
    "len",
    "session_factory",
    "to_std_dicts"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_batching.test_one_to_many": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "Article",
    "Reporter",
    "graphene_sqlalchemy.tests.test_batching.get_schema",
    "graphene_sqlalchemy.tests.test_batching.mock_sqlalchemy_logging_handler",
    "is_sqlalchemy_version_less_than",
    "len",
    "session_factory",
    "to_std_dicts"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_batching.test_one_to_one": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "Article",
    "Reporter",
    "graphene_sqlalchemy.tests.test_batching.get_schema",
    "graphene_sqlalchemy.tests.test_batching.mock_sqlalchemy_logging_handler",
    "is_sqlalchemy_version_less_than",
    "len",
    "session_factory",
    "to_std_dicts"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_benchmark": {
  "data": {
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_benchmark.pytest",
    "is_sqlalchemy_version_less_than"
   ]
  },
  "type": "module"
 },
 "graphene_sqlalchemy.tests.test_benchmark.GraphQLCachedBackend": {
  "data": {
   "shadows": "graphql.backend.GraphQLCachedBackend"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_benchmark.GraphQLCoreBackend": {
  "data": {
   "shadows": "graphql.backend.GraphQLCoreBackend"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_benchmark.benchmark_query": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_benchmark.get_schema",
    "graphql.backend.GraphQLCachedBackend",
    "graphql.backend.GraphQLCoreBackend"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_benchmark.benchmark_query.execute_query": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "session_factory"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_benchmark.get_schema": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_benchmark.graphene"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_benchmark.get_schema.ArticleType": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_benchmark.get_schema.ArticleType.Meta": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "graphene.relay.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_benchmark.get_schema.PetType": {
  "data": {
   "lineno": 29
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_benchmark.get_schema.PetType.Meta": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "graphene.relay.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_benchmark.get_schema.Query": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_benchmark.graphene"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_benchmark.get_schema.Query.resolve_articles": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_benchmark.get_schema.Query.resolve_reporters": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_benchmark.get_schema.ReporterType": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_benchmark.get_schema.ReporterType.Meta": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "graphene.relay.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_benchmark.graphene": {
  "data": {
   "shadows": "graphene"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_benchmark.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_benchmark.relay": {
  "data": {
   "shadows": "graphene.relay"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_benchmark.test_many_to_many": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "Pet",
    "Reporter",
    "graphene_sqlalchemy.tests.test_benchmark.benchmark_query",
    "session_factory"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_benchmark.test_many_to_one": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "Article",
    "Reporter",
    "graphene_sqlalchemy.tests.test_benchmark.benchmark_query",
    "session_factory"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_benchmark.test_one_to_many": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "Article",
    "Reporter",
    "graphene_sqlalchemy.tests.test_benchmark.benchmark_query",
    "session_factory"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_benchmark.test_one_to_one": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "Article",
    "Reporter",
    "graphene_sqlalchemy.tests.test_benchmark.benchmark_query",
    "session_factory"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter": {
  "data": {},
  "type": "module"
 },
 "graphene_sqlalchemy.tests.test_converter.ChoiceType": {
  "data": {
   "shadows": "sqlalchemy_utils.ChoiceType"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_converter.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_converter.DateTime": {
  "data": {
   "shadows": "graphene.types.datetime.DateTime"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_converter.JSONString": {
  "data": {
   "shadows": "graphene.types.json.JSONString"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_converter.JSONType": {
  "data": {
   "shadows": "sqlalchemy_utils.JSONType"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_converter.Node": {
  "data": {
   "shadows": "graphene.relay.Node"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_converter.ScalarListType": {
  "data": {
   "shadows": "sqlalchemy_utils.ScalarListType"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_converter.column_property": {
  "data": {
   "shadows": "sqlalchemy.orm.column_property"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_converter.composite": {
  "data": {
   "shadows": "sqlalchemy.orm.composite"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_converter.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_converter.enum": {
  "data": {
   "shadows": "enum"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_converter.func": {
  "data": {
   "shadows": "sqlalchemy.func"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_converter.get_field": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "convert_sqlalchemy_column",
    "get_global_registry",
    "graphene_sqlalchemy.tests.test_converter.mock_resolver",
    "sqlalchemy.inspection.inspect"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.get_field.Model": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.ext.declarative.declarative_base",
    "sqlalchemy.types.Integer"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_converter.get_field_from_column": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "convert_sqlalchemy_column",
    "get_global_registry",
    "graphene_sqlalchemy.tests.test_converter.mock_resolver",
    "sqlalchemy.inspection.inspect"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.get_field_from_column.Model": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.ext.declarative.declarative_base",
    "sqlalchemy.types.Integer"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_converter.graphene": {
  "data": {
   "shadows": "graphene"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_converter.inspect": {
  "data": {
   "shadows": "sqlalchemy.inspection.inspect"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_converter.mock_resolver": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.postgresql": {
  "data": {
   "shadows": "sqlalchemy.dialects.postgresql"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_converter.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_converter.select": {
  "data": {
   "shadows": "sqlalchemy.select"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_array_convert": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_converter.get_field",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "isinstance",
    "sqlalchemy.types.ARRAY",
    "sqlalchemy.types.Integer"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_big_integer_convert_int": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_converter.get_field",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "sqlalchemy.types.BigInteger"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_boolean_convert_boolean": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_converter.get_field",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "sqlalchemy.types.Boolean"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_choice_convert_enum": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_converter.get_field",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "issubclass",
    "sqlalchemy_utils.ChoiceType"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_columproperty_convert": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_converter.get_field_from_column",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "id",
    "sqlalchemy.func.cast",
    "sqlalchemy.func.sum",
    "sqlalchemy.orm.column_property",
    "sqlalchemy.select",
    "sqlalchemy.types.Integer"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_composite_convert": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "Registry",
    "convert_sqlalchemy_composite",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "graphene_sqlalchemy.tests.test_converter.mock_resolver",
    "isinstance",
    "sqlalchemy.Column",
    "sqlalchemy.orm.composite",
    "sqlalchemy.types.Unicode"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_composite_convert.CompositeClass": {
  "data": {
   "lineno": 342
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_composite_convert.CompositeClass.__init__": {
  "data": {
   "lineno": 343
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_composite_convert.convert_composite_class": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "sqlalchemy.orm.composite.doc"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_date_convert_string": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_converter.get_field",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "sqlalchemy.types.Date"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_datetime_convert_datetime": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "graphene.types.datetime.DateTime",
    "graphene_sqlalchemy.tests.test_converter.get_field",
    "sqlalchemy.types.DateTime"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_enum_choice_convert_enum": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_converter.get_field",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "issubclass",
    "sqlalchemy.types.String",
    "sqlalchemy_utils.ChoiceType"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_enum_choice_convert_enum.TestEnum": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_converter.enum"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_enum_convert_enum": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_converter.enum",
    "graphene_sqlalchemy.tests.test_converter.get_field",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "hasattr",
    "isinstance",
    "sqlalchemy.types.Enum"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_float_convert_float": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_converter.get_field",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "sqlalchemy.types.Float"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_integer_convert_int": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_converter.get_field",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "sqlalchemy.types.Integer"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_intenum_choice_convert_enum": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_converter.get_field",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "issubclass",
    "sqlalchemy.types.String",
    "sqlalchemy_utils.ChoiceType"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_intenum_choice_convert_enum.TestEnum": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_converter.enum"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_jsontype_convert_jsonstring": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "graphene.types.json.JSONString",
    "graphene_sqlalchemy.tests.test_converter.get_field",
    "sqlalchemy_utils.JSONType"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_manytomany_convert_connectionorlist": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "convert_sqlalchemy_relationship",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_manytomany_convert_connectionorlist.A": {
  "data": {
   "lineno": 194
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_manytomany_convert_connectionorlist.A.Meta": {
  "data": {
   "lineno": 195
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_manytomany_convert_connectionorlist_connection": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "convert_sqlalchemy_relationship",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_manytomany_convert_connectionorlist_connection.A": {
  "data": {
   "lineno": 221
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_manytomany_convert_connectionorlist_connection.A.Meta": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "graphene.relay.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_manytomany_convert_connectionorlist_list": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "convert_sqlalchemy_relationship",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_manytomany_convert_connectionorlist_list.A": {
  "data": {
   "lineno": 206
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_manytomany_convert_connectionorlist_list.A.Meta": {
  "data": {
   "lineno": 207
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_manytoone_convert_connectionorlist": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "convert_sqlalchemy_relationship",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_manytoone_convert_connectionorlist.A": {
  "data": {
   "lineno": 234
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_manytoone_convert_connectionorlist.A.Meta": {
  "data": {
   "lineno": 235
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_manytoone_convert_connectionorlist_connection": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "convert_sqlalchemy_relationship",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_manytoone_convert_connectionorlist_connection.A": {
  "data": {
   "lineno": 260
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_manytoone_convert_connectionorlist_connection.A.Meta": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "graphene.relay.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_manytoone_convert_connectionorlist_list": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "convert_sqlalchemy_relationship",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_manytoone_convert_connectionorlist_list.A": {
  "data": {
   "lineno": 246
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_manytoone_convert_connectionorlist_list.A.Meta": {
  "data": {
   "lineno": 247
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_not_enum_convert_enum_without_name": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "TypeError",
    "graphene_sqlalchemy.tests.test_converter.get_field",
    "graphene_sqlalchemy.tests.test_converter.pytest",
    "sqlalchemy.types.Enum"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_numeric_convert_float": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_converter.get_field",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "sqlalchemy.types.Numeric"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_onetoone_convert_field": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "convert_sqlalchemy_relationship",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_onetoone_convert_field.A": {
  "data": {
   "lineno": 275
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_onetoone_convert_field.A.Meta": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "graphene.relay.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_postgresql_array_convert": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_converter.get_field",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "isinstance",
    "sqlalchemy.dialects.postgresql.ARRAY",
    "sqlalchemy.types.Integer"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_postgresql_enum_convert": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_converter.get_field",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "hasattr",
    "isinstance",
    "sqlalchemy.dialects.postgresql.ENUM"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_postgresql_hstore_convert": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_converter.get_field",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "sqlalchemy.dialects.postgresql.HSTORE"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_postgresql_json_convert": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_converter.get_field",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "sqlalchemy.dialects.postgresql.JSON"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_postgresql_jsonb_convert": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_converter.get_field",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "sqlalchemy.dialects.postgresql.JSONB"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_postgresql_py_enum_convert": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_converter.enum",
    "graphene_sqlalchemy.tests.test_converter.get_field",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "hasattr",
    "isinstance",
    "sqlalchemy.dialects.postgresql.ENUM"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_postgresql_uuid_convert": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_converter.get_field",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "sqlalchemy.dialects.postgresql.UUID"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_primary_integer_convert_id": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_converter.get_field",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "sqlalchemy.types.Integer"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_scalar_list_convert_list": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_converter.get_field",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "isinstance",
    "sqlalchemy_utils.ScalarListType"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_small_integer_convert_int": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_converter.get_field",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "sqlalchemy.types.SmallInteger"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_string_convert_string": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_converter.get_field",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "sqlalchemy.types.String"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_text_convert_string": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_converter.get_field",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "sqlalchemy.types.Text"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_time_convert_string": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_converter.get_field",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "sqlalchemy.types.Time"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_unicode_convert_string": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_converter.get_field",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "sqlalchemy.types.Unicode"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_unicodetext_convert_string": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_converter.get_field",
    "graphene_sqlalchemy.tests.test_converter.graphene",
    "sqlalchemy.types.UnicodeText"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_unknown_sqlalchemy_composite_raise_exception": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "Exception",
    "Registry",
    "convert_sqlalchemy_composite",
    "graphene_sqlalchemy.tests.test_converter.mock_resolver",
    "graphene_sqlalchemy.tests.test_converter.pytest",
    "sqlalchemy.Column",
    "sqlalchemy.orm.composite",
    "sqlalchemy.types.Unicode"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_unknown_sqlalchemy_composite_raise_exception.CompositeClass": {
  "data": {
   "lineno": 360
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_unknown_sqlalchemy_composite_raise_exception.CompositeClass.__init__": {
  "data": {
   "lineno": 361
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.test_should_unknown_sqlalchemy_field_raise_exception": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "Exception",
    "getattr",
    "graphene_sqlalchemy.tests.test_converter.get_field",
    "graphene_sqlalchemy.tests.test_converter.pytest",
    "sqlalchemy.types",
    "sqlalchemy.types.Binary"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_converter.types": {
  "data": {
   "shadows": "sqlalchemy.types"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_enums": {
  "data": {},
  "type": "module"
 },
 "graphene_sqlalchemy.tests.test_enums.Enum": {
  "data": {
   "shadows": "graphene.Enum"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_enums.PyEnum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_enums.SQLAlchemyEnumType": {
  "data": {
   "shadows": "sqlalchemy.types.Enum"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_enums.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_enums.test_convert_sa_enum_to_graphene_enum_based_on_list_named": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "_convert_sa_to_graphene_enum",
    "graphene.Enum",
    "isinstance",
    "sqlalchemy.types.Enum",
    "type"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_enums.test_convert_sa_enum_to_graphene_enum_based_on_list_unnamed": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "_convert_sa_to_graphene_enum",
    "graphene.Enum",
    "isinstance",
    "sqlalchemy.types.Enum",
    "type"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_enums.test_convert_sa_enum_to_graphene_enum_based_on_list_without_name": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "TypeError",
    "_convert_sa_to_graphene_enum",
    "graphene_sqlalchemy.tests.test_enums.pytest",
    "sqlalchemy.types.Enum"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_enums.test_convert_sa_to_graphene_enum_bad_type": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "TypeError",
    "_convert_sa_to_graphene_enum",
    "graphene_sqlalchemy.tests.test_enums.pytest"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_enums.test_convert_sa_to_graphene_enum_based_on_py_enum": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "_convert_sa_to_graphene_enum",
    "graphene.Enum",
    "isinstance",
    "sqlalchemy.types.Enum",
    "type"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_enums.test_convert_sa_to_graphene_enum_based_on_py_enum.Color": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_enums.test_convert_sa_to_graphene_enum_based_on_py_enum_with_bad_names": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "_convert_sa_to_graphene_enum",
    "graphene.Enum",
    "isinstance",
    "sqlalchemy.types.Enum",
    "type"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_enums.test_convert_sa_to_graphene_enum_based_on_py_enum_with_bad_names.Color": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_enums.test_enum_for_field": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "TypeError",
    "enum_for_field",
    "graphene.Enum",
    "graphene_sqlalchemy.tests.test_enums.pytest",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_enums.test_enum_for_field.PetType": {
  "data": {
   "lineno": 79
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_enums.test_enum_for_field.PetType.Meta": {
  "data": {
   "lineno": 80
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_fields": {
  "data": {},
  "type": "module"
 },
 "graphene_sqlalchemy.tests.test_fields.Connection": {
  "data": {
   "shadows": "graphene.relay.Connection"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_fields.Editor": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_fields.Editor.Meta": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_fields.Editor"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_fields.EditorModel": {
  "data": {
   "shadows": "Editor"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_fields.Node": {
  "data": {
   "shadows": "graphene.relay.Node"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_fields.NonNull": {
  "data": {
   "shadows": "graphene.NonNull"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_fields.ObjectType": {
  "data": {
   "shadows": "graphene.ObjectType"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_fields.Pet": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_fields.Pet.Meta": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "graphene.relay.Node",
    "graphene_sqlalchemy.tests.test_fields.Pet"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_fields.PetModel": {
  "data": {
   "shadows": "Pet"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_fields.Promise": {
  "data": {
   "shadows": "promise.Promise"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_fields.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_fields.test_custom_sort": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "SQLAlchemyConnectionField",
    "graphene_sqlalchemy.tests.test_fields.Editor",
    "graphene_sqlalchemy.tests.test_fields.Pet"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_fields.test_nonnull_sqlalachemy_connection": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "SQLAlchemyConnectionField",
    "graphene.NonNull",
    "graphene.relay.Connection",
    "graphene_sqlalchemy.tests.test_fields.Pet",
    "isinstance",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_fields.test_promise_connection_resolver": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_fields.Pet",
    "isinstance",
    "promise.Promise"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_fields.test_promise_connection_resolver.resolver": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "promise.Promise.resolve"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_fields.test_required_sqlalachemy_connection": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "SQLAlchemyConnectionField",
    "graphene.NonNull",
    "graphene.relay.Connection",
    "graphene_sqlalchemy.tests.test_fields.Pet",
    "isinstance",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_fields.test_sort_added_by_default": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "SQLAlchemyConnectionField",
    "graphene_sqlalchemy.tests.test_fields.Pet"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_fields.test_sort_can_be_removed": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "SQLAlchemyConnectionField",
    "graphene_sqlalchemy.tests.test_fields.Pet"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_fields.test_sort_init_raises": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "SQLAlchemyConnectionField",
    "TypeError",
    "graphene.relay.Connection",
    "graphene_sqlalchemy.tests.test_fields.pytest"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_fields.test_type_assert_object_has_connection": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "AssertionError",
    "SQLAlchemyConnectionField",
    "graphene_sqlalchemy.tests.test_fields.Editor",
    "graphene_sqlalchemy.tests.test_fields.pytest"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_fields.test_type_assert_sqlalchemy_object_type": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "AssertionError",
    "SQLAlchemyConnectionField",
    "graphene.ObjectType",
    "graphene_sqlalchemy.tests.test_fields.pytest"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_query": {
  "data": {},
  "type": "module"
 },
 "graphene_sqlalchemy.tests.test_query.Node": {
  "data": {
   "shadows": "graphene.relay.Node"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_query.add_test_data": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "Article",
    "Editor",
    "Pet",
    "Reporter"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_query.graphene": {
  "data": {
   "shadows": "graphene"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_query.test_custom_identifier": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_query.add_test_data",
    "graphene_sqlalchemy.tests.test_query.graphene",
    "to_std_dicts"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_query.test_custom_identifier.EditorNode": {
  "data": {
   "lineno": 224
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query.test_custom_identifier.EditorNode.Meta": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "Editor",
    "graphene.relay.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query.test_custom_identifier.Query": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "SQLAlchemyConnectionField",
    "graphene.relay.Node.Field",
    "graphene_sqlalchemy.tests.test_query.graphene"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query.test_mutation": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_query.add_test_data",
    "graphene_sqlalchemy.tests.test_query.graphene",
    "to_std_dicts"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_query.test_mutation.ArticleNode": {
  "data": {
   "lineno": 279
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query.test_mutation.ArticleNode.Meta": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "Article",
    "graphene.relay.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query.test_mutation.CreateArticle": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_query.graphene"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query.test_mutation.CreateArticle.Arguments": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_query.graphene"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query.test_mutation.CreateArticle.mutate": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "Article",
    "CreateArticle"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_query.test_mutation.EditorNode": {
  "data": {
   "lineno": 265
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query.test_mutation.EditorNode.Meta": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "Editor",
    "graphene.relay.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query.test_mutation.Mutation": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "CreateArticle.Field",
    "graphene_sqlalchemy.tests.test_query.graphene"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query.test_mutation.Query": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "graphene.relay.Node.Field",
    "graphene_sqlalchemy.tests.test_query.graphene"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query.test_mutation.ReporterNode": {
  "data": {
   "lineno": 270
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query.test_mutation.ReporterNode.Meta": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "Reporter",
    "graphene.relay.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query.test_mutation.ReporterNode.get_node": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "Reporter",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_query.test_orm_field": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_query.add_test_data",
    "graphene_sqlalchemy.tests.test_query.graphene",
    "to_std_dicts"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_query.test_orm_field.ArticleType": {
  "data": {
   "lineno": 173
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query.test_orm_field.ArticleType.Meta": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "Article",
    "graphene.relay.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query.test_orm_field.Query": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_query.graphene"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query.test_orm_field.Query.resolve_reporter": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "Reporter"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_query.test_orm_field.ReporterType": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "ORMField"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query.test_orm_field.ReporterType.Meta": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "Reporter",
    "graphene.relay.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query.test_orm_field.convert_composite_class": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_query.graphene"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_query.test_query_fields": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_query.add_test_data",
    "graphene_sqlalchemy.tests.test_query.graphene",
    "to_std_dicts"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_query.test_query_fields.Query": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_query.graphene"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query.test_query_fields.Query.resolve_reporter": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "Reporter"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_query.test_query_fields.Query.resolve_reporters": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "Reporter"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_query.test_query_fields.ReporterType": {
  "data": {
   "lineno": 39
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query.test_query_fields.ReporterType.Meta": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "Reporter"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query.test_query_fields.convert_composite_class": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_query.graphene"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_query.test_query_node": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_query.add_test_data",
    "graphene_sqlalchemy.tests.test_query.graphene",
    "to_std_dicts"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_query.test_query_node.ArticleNode": {
  "data": {
   "lineno": 94
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query.test_query_node.ArticleNode.Meta": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "Article",
    "graphene.relay.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query.test_query_node.Query": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "SQLAlchemyConnectionField",
    "graphene.relay.Node.Field",
    "graphene_sqlalchemy.tests.test_query.graphene"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query.test_query_node.Query.resolve_reporter": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "Reporter"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_query.test_query_node.ReporterNode": {
  "data": {
   "lineno": 85
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query.test_query_node.ReporterNode.Meta": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "Reporter",
    "graphene.relay.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query.test_query_node.ReporterNode.get_node": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "Reporter",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_query_enums": {
  "data": {},
  "type": "module"
 },
 "graphene_sqlalchemy.tests.test_query_enums.graphene": {
  "data": {
   "shadows": "graphene"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_query_enums.test_enum_as_argument": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "add_test_data",
    "graphene_sqlalchemy.tests.test_query_enums.graphene",
    "to_std_dicts"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_query_enums.test_enum_as_argument.PetType": {
  "data": {
   "lineno": 122
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query_enums.test_enum_as_argument.PetType.Meta": {
  "data": {
   "lineno": 123
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query_enums.test_enum_as_argument.Query": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_query_enums.graphene"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query_enums.test_enum_as_argument.Query.resolve_pet": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_query_enums.test_py_enum_as_argument": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "add_test_data",
    "graphene_sqlalchemy.tests.test_query_enums.graphene",
    "to_std_dicts"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_query_enums.test_py_enum_as_argument.PetType": {
  "data": {
   "lineno": 162
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query_enums.test_py_enum_as_argument.PetType.Meta": {
  "data": {
   "lineno": 163
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query_enums.test_py_enum_as_argument.Query": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_query_enums.graphene"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query_enums.test_py_enum_as_argument.Query.resolve_pet": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "HairKind"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_query_enums.test_query_more_enums": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "add_test_data",
    "graphene_sqlalchemy.tests.test_query_enums.graphene",
    "to_std_dicts"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_query_enums.test_query_more_enums.PetType": {
  "data": {
   "lineno": 92
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query_enums.test_query_more_enums.PetType.Meta": {
  "data": {
   "lineno": 93
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query_enums.test_query_more_enums.Query": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_query_enums.graphene"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query_enums.test_query_more_enums.Query.resolve_pet": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_query_enums.test_query_pet_kinds": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "add_test_data",
    "graphene_sqlalchemy.tests.test_query_enums.graphene"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_query_enums.test_query_pet_kinds.PetType": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query_enums.test_query_pet_kinds.PetType.Meta": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query_enums.test_query_pet_kinds.Query": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_query_enums.graphene"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query_enums.test_query_pet_kinds.Query.resolve_pets": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_query_enums.test_query_pet_kinds.Query.resolve_reporter": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_query_enums.test_query_pet_kinds.Query.resolve_reporters": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_query_enums.test_query_pet_kinds.ReporterType": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_query_enums.test_query_pet_kinds.ReporterType.Meta": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_reflected": {
  "data": {
   "symbols_in_volume": [
    "Registry"
   ]
  },
  "type": "module"
 },
 "graphene_sqlalchemy.tests.test_reflected.ObjectType": {
  "data": {
   "shadows": "graphene.ObjectType"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_reflected.Reflected": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_reflected.Reflected.Meta": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_reflected.registry"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_reflected.registry": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "graphene_sqlalchemy.tests.test_reflected.test_objecttype_registered": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "graphene.ObjectType",
    "graphene_sqlalchemy.tests.test_reflected.Reflected",
    "issubclass",
    "list"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_registry": {
  "data": {},
  "type": "module"
 },
 "graphene_sqlalchemy.tests.test_registry.GrapheneEnum": {
  "data": {
   "shadows": "graphene.Enum"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_registry.SQLAlchemyEnum": {
  "data": {
   "shadows": "sqlalchemy.types.Enum"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_registry.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_registry.test_register_enum": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "Registry",
    "graphene.Enum",
    "sqlalchemy.types.Enum"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_registry.test_register_enum_incorrect_types": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "Registry",
    "TypeError",
    "graphene.Enum",
    "graphene_sqlalchemy.tests.test_registry.pytest",
    "sqlalchemy.types.Enum"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_registry.test_register_incorrect_object_type": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "Registry",
    "TypeError",
    "graphene_sqlalchemy.tests.test_registry.pytest"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_registry.test_register_incorrect_object_type.Spam": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_registry.test_register_object_type": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "Registry"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_registry.test_register_object_type.PetType": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_registry.test_register_object_type.PetType.Meta": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_registry.test_register_orm_field": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "Registry"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_registry.test_register_orm_field.PetType": {
  "data": {
   "lineno": 38
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_registry.test_register_orm_field.PetType.Meta": {
  "data": {
   "lineno": 39
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_registry.test_register_orm_field_incorrect_types": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "Registry",
    "TypeError",
    "graphene_sqlalchemy.tests.test_registry.pytest"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_registry.test_register_orm_field_incorrect_types.PetType": {
  "data": {
   "lineno": 57
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_registry.test_register_orm_field_incorrect_types.PetType.Meta": {
  "data": {
   "lineno": 58
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_registry.test_register_orm_field_incorrect_types.Spam": {
  "data": {
   "lineno": 50
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_registry.test_register_sort_enum": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "EnumValue",
    "Registry",
    "graphene.Enum"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_registry.test_register_sort_enum.PetType": {
  "data": {
   "lineno": 95
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_registry.test_register_sort_enum.PetType.Meta": {
  "data": {
   "lineno": 96
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_registry.test_register_sort_enum_incorrect_types": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "EnumValue",
    "Registry",
    "TypeError",
    "graphene.Enum",
    "graphene_sqlalchemy.tests.test_registry.pytest"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_registry.test_register_sort_enum_incorrect_types.PetType": {
  "data": {
   "lineno": 112
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_registry.test_register_sort_enum_incorrect_types.PetType.Meta": {
  "data": {
   "lineno": 113
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_sort_enums": {
  "data": {},
  "type": "module"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.Argument": {
  "data": {
   "shadows": "graphene.Argument"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.Enum": {
  "data": {
   "shadows": "graphene.Enum"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.List": {
  "data": {
   "shadows": "graphene.List"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.Node": {
  "data": {
   "shadows": "graphene.relay.Node"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.ObjectType": {
  "data": {
   "shadows": "graphene.ObjectType"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.Schema": {
  "data": {
   "shadows": "graphene.Schema"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.add_pets": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "Pet"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_argument": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "graphene.Argument",
    "graphene.Enum",
    "graphene.List",
    "isinstance",
    "list",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_argument.PetType": {
  "data": {
   "lineno": 115
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_argument.PetType.Meta": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "Pet"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_argument_for_multi_column_pk": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_argument_for_multi_column_pk.MultiPkTestModel": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_argument_for_multi_column_pk.MultiPkTestType": {
  "data": {
   "lineno": 189
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_argument_for_multi_column_pk.MultiPkTestType.Meta": {
  "data": {
   "lineno": 190
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_argument_only_fields": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_argument_only_fields.PetType": {
  "data": {
   "lineno": 167
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_argument_only_fields.PetType.Meta": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "Pet"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_argument_only_indexed": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_argument_only_indexed.IndexedTestModel": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_argument_only_indexed.IndexedTestType": {
  "data": {
   "lineno": 204
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_argument_only_indexed.IndexedTestType.Meta": {
  "data": {
   "lineno": 205
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_argument_with_custom_symbol_names": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_argument_with_custom_symbol_names.PetType": {
  "data": {
   "lineno": 220
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_argument_with_custom_symbol_names.PetType.Meta": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "Pet"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_argument_with_custom_symbol_names.get_symbol_name": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "to_type_name"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_argument_with_excluded_fields_in_object_type": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_argument_with_excluded_fields_in_object_type.PetType": {
  "data": {
   "lineno": 148
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_argument_with_excluded_fields_in_object_type.PetType.Meta": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "Pet"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_enum": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "graphene.Enum",
    "isinstance",
    "list",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_enum.PetType": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_enum.PetType.Meta": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "Pet"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_enum_cache": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError",
    "graphene_sqlalchemy.tests.test_sort_enums.pytest"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_enum_cache.PetType": {
  "data": {
   "lineno": 61
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_enum_cache.PetType.Meta": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "Pet"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_enum_only_fields": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_enum_only_fields.PetType": {
  "data": {
   "lineno": 101
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_enum_only_fields.PetType.Meta": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "Pet"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_enum_with_custom_name": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "graphene.Enum",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_enum_with_custom_name.PetType": {
  "data": {
   "lineno": 51
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_enum_with_custom_name.PetType.Meta": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "Pet"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_enum_with_excluded_field_in_object_type": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_enum_with_excluded_field_in_object_type.PetType": {
  "data": {
   "lineno": 82
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_enum_with_excluded_field_in_object_type.PetType.Meta": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "Pet"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_query": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "graphene.Schema",
    "graphene_sqlalchemy.tests.test_sort_enums.add_pets",
    "makeNodes",
    "to_std_dicts"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_query.PetNode": {
  "data": {
   "lineno": 247
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_query.PetNode.Meta": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "Pet",
    "graphene.relay.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_query.Query": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "SQLAlchemyConnectionField",
    "graphene.Argument",
    "graphene.ObjectType"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_sort_enums.test_sort_query.makeNodes": {
  "data": {
   "lineno": 313
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_types": {
  "data": {},
  "type": "module"
 },
 "graphene_sqlalchemy.tests.test_types.Connection": {
  "data": {
   "shadows": "graphene.relay.Connection"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_types.Dynamic": {
  "data": {
   "shadows": "graphene.Dynamic"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_types.Field": {
  "data": {
   "shadows": "graphene.Field"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_types.GlobalID": {
  "data": {
   "shadows": "graphene.GlobalID"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_types.Int": {
  "data": {
   "shadows": "graphene.Int"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_types.List": {
  "data": {
   "shadows": "graphene.List"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_types.Node": {
  "data": {
   "shadows": "graphene.Node"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_types.NonNull": {
  "data": {
   "shadows": "graphene.NonNull"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_types.ObjectType": {
  "data": {
   "shadows": "graphene.ObjectType"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_types.Schema": {
  "data": {
   "shadows": "graphene.Schema"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_types.String": {
  "data": {
   "shadows": "graphene.String"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_types._TestSQLAlchemyConnectionField": {
  "data": {
   "lineno": 419
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_types.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_types.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_types.test_connection": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "graphene.relay.Connection",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_types.test_connection.ReporterType": {
  "data": {
   "lineno": 51
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_connection.ReporterType.Meta": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "Reporter",
    "graphene.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_custom_connection_field_factory": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_types._TestSQLAlchemyConnectionField",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_types.test_custom_connection_field_factory.ArticleType": {
  "data": {
   "lineno": 449
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_custom_connection_field_factory.ArticleType.Meta": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "graphene.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_custom_connection_field_factory.ReporterType": {
  "data": {
   "lineno": 443
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_custom_connection_field_factory.ReporterType.Meta": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "Reporter",
    "graphene.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_custom_connection_field_factory.test_connection_field_factory": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.test_types._TestSQLAlchemyConnectionField"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_types.test_custom_objecttype_registered": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "Reporter",
    "graphene.ObjectType",
    "issubclass",
    "len"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_types.test_custom_objecttype_registered.CustomReporterType": {
  "data": {
   "lineno": 381
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_custom_objecttype_registered.CustomReporterType.Meta": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "Reporter"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_custom_objecttype_registered.CustomSQLAlchemyObjectType": {
  "data": {
   "lineno": 377
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_custom_objecttype_registered.CustomSQLAlchemyObjectType.Meta": {
  "data": {
   "lineno": 378
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_default_connection_field_factory": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_types.test_default_connection_field_factory.ArticleType": {
  "data": {
   "lineno": 429
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_default_connection_field_factory.ArticleType.Meta": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "graphene.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_default_connection_field_factory.ReporterType": {
  "data": {
   "lineno": 424
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_default_connection_field_factory.ReporterType.Meta": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "Reporter",
    "graphene.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_deprecated_createConnectionField": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "DeprecationWarning",
    "createConnectionField",
    "graphene_sqlalchemy.tests.test_types.pytest"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_types.test_deprecated_registerConnectionFieldFactory": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "DeprecationWarning",
    "graphene_sqlalchemy.tests.test_types._TestSQLAlchemyConnectionField",
    "graphene_sqlalchemy.tests.test_types.pytest",
    "isinstance",
    "registerConnectionFieldFactory"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_types.test_deprecated_registerConnectionFieldFactory.ArticleType": {
  "data": {
   "lineno": 466
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_deprecated_registerConnectionFieldFactory.ArticleType.Meta": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "graphene.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_deprecated_registerConnectionFieldFactory.ReporterType": {
  "data": {
   "lineno": 461
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_deprecated_registerConnectionFieldFactory.ReporterType.Meta": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "Reporter",
    "graphene.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_deprecated_unregisterConnectionFieldFactory": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "DeprecationWarning",
    "graphene_sqlalchemy.tests.test_types._TestSQLAlchemyConnectionField",
    "graphene_sqlalchemy.tests.test_types.pytest",
    "isinstance",
    "registerConnectionFieldFactory",
    "unregisterConnectionFieldFactory"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_types.test_deprecated_unregisterConnectionFieldFactory.ArticleType": {
  "data": {
   "lineno": 484
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_deprecated_unregisterConnectionFieldFactory.ArticleType.Meta": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "graphene.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_deprecated_unregisterConnectionFieldFactory.ReporterType": {
  "data": {
   "lineno": 479
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_deprecated_unregisterConnectionFieldFactory.ReporterType.Meta": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "Reporter",
    "graphene.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_exclude_fields": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_types.test_exclude_fields.ReporterType": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "ORMField"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_exclude_fields.ReporterType.Meta": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "Reporter"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_invalid_model_attr": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "ValueError",
    "graphene_sqlalchemy.tests.test_types.pytest"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_types.test_invalid_model_attr.ReporterType": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "ORMField"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_invalid_model_attr.ReporterType.Meta": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "Reporter"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_objecttype_with_custom_options": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "Reporter",
    "graphene.ObjectType",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_types.test_objecttype_with_custom_options.CustomOptions": {
  "data": {
   "lineno": 392
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_objecttype_with_custom_options.ReporterWithCustomOptions": {
  "data": {
   "lineno": 407
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_objecttype_with_custom_options.ReporterWithCustomOptions.Meta": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "Reporter"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_objecttype_with_custom_options.SQLAlchemyObjectTypeWithCustomOptions": {
  "data": {
   "lineno": 395
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_objecttype_with_custom_options.SQLAlchemyObjectTypeWithCustomOptions.Meta": {
  "data": {
   "lineno": 396
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_objecttype_with_custom_options.SQLAlchemyObjectTypeWithCustomOptions.__init_subclass_with_meta__": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "CustomOptions",
    "classmethod",
    "super"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_types.test_only_and_exclude_fields": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "Exception",
    "graphene_sqlalchemy.tests.test_types.pytest"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_types.test_only_and_exclude_fields.ReporterType": {
  "data": {
   "lineno": 288
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_only_and_exclude_fields.ReporterType.Meta": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "Reporter"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_only_fields": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_types.test_only_fields.ReporterType": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "ORMField"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_only_fields.ReporterType.Meta": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "Reporter"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_resolvers": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "Reporter",
    "graphene.Schema"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_types.test_resolvers.Query": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "graphene.Field",
    "graphene.ObjectType"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_resolvers.Query.resolve_reporter": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "Reporter"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_types.test_resolvers.ReporterMixin": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_resolvers.ReporterMixin.resolve_id": {
  "data": {
   "lineno": 311
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_types.test_resolvers.ReporterType": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "ORMField",
    "graphene.Field",
    "graphene.String"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_resolvers.ReporterType.Meta": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "Reporter"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_resolvers.ReporterType.resolve_email_v2": {
  "data": {
   "lineno": 326
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_types.test_resolvers.ReporterType.resolve_favorite_pet_kind_v2": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_types.test_resolvers.ReporterType.resolve_last_name": {
  "data": {
   "lineno": 323
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_types.test_should_raise_if_model_is_invalid": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "Exception",
    "graphene_sqlalchemy.tests.test_types.pytest"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_types.test_should_raise_if_model_is_invalid.Character": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_should_raise_if_model_is_invalid.Character.Meta": {
  "data": {
   "lineno": 29
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_should_raise_if_no_model": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "Exception",
    "graphene_sqlalchemy.tests.test_types.pytest"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_types.test_should_raise_if_no_model.Character1": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_sqlalchemy_default_fields": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "graphene.Dynamic",
    "graphene.Int",
    "graphene.String",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_types.test_sqlalchemy_default_fields.ArticleType": {
  "data": {
   "lineno": 69
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_sqlalchemy_default_fields.ArticleType.Meta": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "graphene.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_sqlalchemy_default_fields.ReporterType": {
  "data": {
   "lineno": 64
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_sqlalchemy_default_fields.ReporterType.Meta": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "Reporter",
    "graphene.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_sqlalchemy_default_fields.convert_composite_class": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "graphene.String"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_types.test_sqlalchemy_node": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "Reporter",
    "graphene.GlobalID",
    "graphene_sqlalchemy.tests.test_types.mock",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_types.test_sqlalchemy_node.ReporterType": {
  "data": {
   "lineno": 34
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_sqlalchemy_node.ReporterType.Meta": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "graphene.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_sqlalchemy_override_fields": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "graphene.Dynamic",
    "graphene.Int",
    "graphene.List",
    "graphene.NonNull",
    "graphene.String",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_types.test_sqlalchemy_override_fields.ArticleType": {
  "data": {
   "lineno": 155
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_sqlalchemy_override_fields.ArticleType.Meta": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "graphene.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_sqlalchemy_override_fields.PetType": {
  "data": {
   "lineno": 160
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_sqlalchemy_override_fields.PetType.Meta": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "graphene.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_sqlalchemy_override_fields.ReporterMixin": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ORMField",
    "object"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_sqlalchemy_override_fields.ReporterType": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ORMField",
    "graphene.Int",
    "graphene.String"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_sqlalchemy_override_fields.ReporterType.Meta": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "Reporter",
    "graphene.Node"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_sqlalchemy_override_fields.convert_composite_class": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "graphene.String"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_types.test_sqlalchemy_redefine_field": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "graphene.Field",
    "graphene.Int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_types.test_sqlalchemy_redefine_field.ReporterType": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "graphene.Int"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_types.test_sqlalchemy_redefine_field.ReporterType.Meta": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "Reporter"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "graphene_sqlalchemy.tests.test_utils.Enum": {
  "data": {
   "shadows": "graphene.Enum"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_utils.List": {
  "data": {
   "shadows": "graphene.List"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_utils.ObjectType": {
  "data": {
   "shadows": "graphene.ObjectType"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_utils.Schema": {
  "data": {
   "shadows": "graphene.Schema"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_utils.String": {
  "data": {
   "shadows": "graphene.String"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_utils.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.test_utils.test_enum_cache": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "DeprecationWarning",
    "graphene_sqlalchemy.tests.test_utils.pytest",
    "sort_enum_for_model"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_utils.test_get_session": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "graphene.Schema"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_utils.test_get_session.Query": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "graphene.ObjectType",
    "graphene.String"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_utils.test_get_session.Query.resolve_x": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "get_session"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_utils.test_sort_argument_for_model": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "DeprecationWarning",
    "graphene.List",
    "graphene_sqlalchemy.tests.test_utils.pytest",
    "isinstance",
    "sort_argument_for_model",
    "sort_enum_for_model"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_utils.test_sort_argument_for_model_multiple_pk": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "DeprecationWarning",
    "graphene_sqlalchemy.tests.test_utils.pytest",
    "set",
    "sort_argument_for_model"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_utils.test_sort_argument_for_model_multiple_pk.MultiplePK": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.tests.test_utils.test_sort_argument_for_model_no_default": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "DeprecationWarning",
    "graphene_sqlalchemy.tests.test_utils.pytest",
    "sort_argument_for_model"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_utils.test_sort_enum_for_model": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "DeprecationWarning",
    "graphene.Enum",
    "graphene_sqlalchemy.tests.test_utils.pytest",
    "hasattr",
    "isinstance",
    "sort_enum_for_model",
    "sqlalchemy.inspect",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_utils.test_sort_enum_for_model_custom_naming": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "DeprecationWarning",
    "graphene_sqlalchemy.tests.test_utils.pytest",
    "hasattr",
    "sort_enum_for_model",
    "sqlalchemy.inspect",
    "str"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_utils.test_to_enum_value_name": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "to_enum_value_name"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.test_utils.test_to_type_name": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "to_type_name"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.utils": {
  "data": {},
  "type": "module"
 },
 "graphene_sqlalchemy.tests.utils.is_sqlalchemy_version_less_than": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "graphene_sqlalchemy.tests.utils.pkg_resources"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.tests.utils.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.tests.utils.to_std_dicts": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.types": {
  "data": {},
  "type": "module"
 },
 "graphene_sqlalchemy.types.ColumnProperty": {
  "data": {
   "shadows": "sqlalchemy.orm.ColumnProperty"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.types.CompositeProperty": {
  "data": {
   "shadows": "sqlalchemy.orm.CompositeProperty"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.types.Connection": {
  "data": {
   "shadows": "graphene.relay.Connection"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.types.Field": {
  "data": {
   "shadows": "graphene.Field"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.types.NoResultFound": {
  "data": {
   "shadows": "sqlalchemy.orm.exc.NoResultFound"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.types.Node": {
  "data": {
   "shadows": "graphene.relay.Node"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.types.ORMField": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "graphene.utils.orderedtype.OrderedType"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.types.ORMField.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "graphene_sqlalchemy.types.ORMField",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.types.ObjectType": {
  "data": {
   "shadows": "graphene.types.objecttype.ObjectType"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.types.ObjectTypeOptions": {
  "data": {
   "shadows": "graphene.types.objecttype.ObjectTypeOptions"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.types.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.types.OrderedType": {
  "data": {
   "shadows": "graphene.utils.orderedtype.OrderedType"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.types.RelationshipProperty": {
  "data": {
   "shadows": "sqlalchemy.orm.RelationshipProperty"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.types.SQLAlchemyObjectType": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "classmethod",
    "graphene.types.objecttype.ObjectType"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.types.SQLAlchemyObjectType.__init_subclass_with_meta__": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "classmethod",
    "get_global_registry",
    "graphene.Field",
    "graphene.relay.Connection",
    "graphene.relay.Node",
    "graphene.types.utils.yank_fields_from_attrs",
    "graphene_sqlalchemy.types.SQLAlchemyObjectType",
    "graphene_sqlalchemy.types.SQLAlchemyObjectTypeOptions",
    "graphene_sqlalchemy.types.construct_fields",
    "id",
    "is_mapped_class",
    "isinstance",
    "issubclass",
    "super"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.types.SQLAlchemyObjectType.enum_for_field": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "classmethod",
    "enum_for_field"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.types.SQLAlchemyObjectType.get_node": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "classmethod",
    "id",
    "sqlalchemy.orm.exc.NoResultFound"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.types.SQLAlchemyObjectType.get_query": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "classmethod",
    "get_query"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.types.SQLAlchemyObjectType.is_type_of": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "Exception",
    "classmethod",
    "is_mapped_instance",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.types.SQLAlchemyObjectType.resolve_id": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.types.SQLAlchemyObjectTypeOptions": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "graphene.types.objecttype.ObjectTypeOptions",
    "id"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.types.construct_fields": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "collections.OrderedDict",
    "convert_sqlalchemy_column",
    "convert_sqlalchemy_composite",
    "convert_sqlalchemy_hybrid_method",
    "convert_sqlalchemy_relationship",
    "get_attr_resolver",
    "get_custom_resolver",
    "graphene_sqlalchemy.types.ORMField",
    "graphene_sqlalchemy.types.sqlalchemy",
    "isinstance",
    "reversed",
    "sorted",
    "sqlalchemy.ext.hybrid.hybrid_property",
    "sqlalchemy.orm.ColumnProperty",
    "sqlalchemy.orm.CompositeProperty",
    "sqlalchemy.orm.RelationshipProperty"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.types.hybrid_property": {
  "data": {
   "shadows": "sqlalchemy.ext.hybrid.hybrid_property"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.types.sqlalchemy": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.types.yank_fields_from_attrs": {
  "data": {
   "shadows": "graphene.types.utils.yank_fields_from_attrs"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.utils": {
  "data": {
   "symbols_in_volume": [
    "graphene_sqlalchemy.utils.re"
   ]
  },
  "type": "module"
 },
 "graphene_sqlalchemy.utils.Argument": {
  "data": {
   "shadows": "graphene.Argument"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.utils.ArgumentError": {
  "data": {
   "shadows": "sqlalchemy.exc.ArgumentError"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.utils.EnumValue": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "class"
 },
 "graphene_sqlalchemy.utils.EnumValue.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "graphene_sqlalchemy.utils.EnumValue",
    "super"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.utils.EnumValue.__new__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "graphene_sqlalchemy.utils.EnumValue",
    "super"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.utils.List": {
  "data": {
   "shadows": "graphene.List"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.utils.UnmappedClassError": {
  "data": {
   "shadows": "sqlalchemy.orm.exc.UnmappedClassError"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.utils.UnmappedInstanceError": {
  "data": {
   "shadows": "sqlalchemy.orm.exc.UnmappedInstanceError"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.utils._deprecated_default_symbol_name": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "graphene_sqlalchemy.utils._deprecated_object_type_cache": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "graphene_sqlalchemy.utils._deprecated_object_type_for_model": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "KeyError",
    "graphene_sqlalchemy.utils._deprecated_object_type_cache"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.utils._deprecated_object_type_for_model.ObjType": {
  "data": {
   "lineno": 91
  },
  "type": "class"
 },
 "graphene_sqlalchemy.utils._deprecated_object_type_for_model.ObjType.Meta": {
  "data": {
   "lineno": 92
  },
  "type": "class"
 },
 "graphene_sqlalchemy.utils._re_enum_value_name_1": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "graphene_sqlalchemy.utils._re_enum_value_name_2": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "graphene_sqlalchemy.utils.class_mapper": {
  "data": {
   "shadows": "sqlalchemy.orm.class_mapper"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.utils.get_query": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "Exception",
    "getattr",
    "graphene_sqlalchemy.utils.get_session"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.utils.get_session": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "graphene_sqlalchemy.utils.is_mapped_class": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "sqlalchemy.exc.ArgumentError",
    "sqlalchemy.orm.class_mapper",
    "sqlalchemy.orm.exc.UnmappedClassError"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.utils.is_mapped_instance": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "sqlalchemy.exc.ArgumentError",
    "sqlalchemy.orm.exc.UnmappedInstanceError",
    "sqlalchemy.orm.object_mapper"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.utils.object_mapper": {
  "data": {
   "shadows": "sqlalchemy.orm.object_mapper"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "graphene_sqlalchemy.utils.sort_argument_for_model": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "DeprecationWarning",
    "graphene.Argument",
    "graphene.List",
    "graphene_sqlalchemy.utils._deprecated_default_symbol_name",
    "graphene_sqlalchemy.utils._deprecated_object_type_for_model",
    "graphene_sqlalchemy.utils.warnings",
    "sort_enum_for_object_type"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.utils.sort_enum_for_model": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "DeprecationWarning",
    "graphene_sqlalchemy.utils._deprecated_default_symbol_name",
    "graphene_sqlalchemy.utils._deprecated_object_type_for_model",
    "graphene_sqlalchemy.utils.warnings",
    "sort_enum_for_object_type"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.utils.to_enum_value_name": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "graphene_sqlalchemy.utils._re_enum_value_name_1",
    "graphene_sqlalchemy.utils._re_enum_value_name_2"
   ]
  },
  "type": "function"
 },
 "graphene_sqlalchemy.utils.to_type_name": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "graphene_sqlalchemy.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 }
}