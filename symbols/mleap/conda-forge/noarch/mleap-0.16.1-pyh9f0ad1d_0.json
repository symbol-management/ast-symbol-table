{
 "mleap": {
  "lineno": null,
  "symbols_in_volume": [
   "mleap.version.version"
  ],
  "type": "module"
 },
 "mleap.bundle": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mleap.bundle.serialize": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "module"
 },
 "mleap.bundle.serialize.MLeapDeserializer": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mleap.bundle.serialize.MLeapDeserializer._node_features_format": {
  "lineno": 182,
  "symbols_in_volume": [
   "six.string_types"
  ],
  "type": "function"
 },
 "mleap.bundle.serialize.MLeapDeserializer.deserialize_from_bundle": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.bundle.serialize.MLeapDeserializer.deserialize_single_input_output": {
  "lineno": 188,
  "symbols_in_volume": [
   "json.load"
  ],
  "type": "function"
 },
 "mleap.bundle.serialize.MLeapSerializer": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mleap.bundle.serialize.MLeapSerializer.__init__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.bundle.serialize.MLeapSerializer.get_mleap_model": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "mleap.bundle.serialize.MLeapSerializer.get_mleap_node": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.bundle.serialize.MLeapSerializer.serialize": {
  "lineno": 142,
  "symbols_in_volume": [
   "json.dump",
   "os.mkdir",
   "os.path.exists",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "mleap.bundle.serialize.Vector": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mleap.bundle.serialize.Vector.__init__": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.gensim": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mleap.gensim.word2vec": {
  "lineno": null,
  "symbols_in_volume": [
   "gensim.models.Word2Vec"
  ],
  "type": "module"
 },
 "mleap.gensim.word2vec.SimpleSparkSerializer": {
  "lineno": 46,
  "symbols_in_volume": [
   "mleap.bundle.serialize.MLeapSerializer"
  ],
  "type": "class"
 },
 "mleap.gensim.word2vec.SimpleSparkSerializer.__init__": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.gensim.word2vec.SimpleSparkSerializer.sent2vec": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.sqrt",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "mleap.gensim.word2vec.SimpleSparkSerializer.serialize_to_bundle": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "mleap.gensim.word2vec.SimpleSparkSerializer.set_input_features": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.gensim.word2vec.SimpleSparkSerializer.set_prediction_column": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.gensim.word2vec.mleap_init": {
  "lineno": 34,
  "symbols_in_volume": [
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "mleap.gensim.word2vec.sent2vec": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.gensim.word2vec.serialize_to_bundle": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.pyspark": {
  "lineno": null,
  "symbols_in_volume": [
   "mleap.pyspark.feature.math_binary.MathBinary",
   "mleap.pyspark.feature.math_unary.MathUnary",
   "mleap.pyspark.feature.string_map.StringMap",
   "sys.modules",
   "sys.modules.mleap",
   "sys.modules.mleap.feature",
   "sys.modules.mleap.feature.MathBinary",
   "sys.modules.mleap.feature.MathUnary",
   "sys.modules.mleap.feature.StringMap"
  ],
  "type": "module"
 },
 "mleap.pyspark.feature": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mleap.pyspark.feature.math_binary": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mleap.pyspark.feature.math_binary.BinaryOperation": {
  "lineno": 19,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "mleap.pyspark.feature.math_binary.MathBinary": {
  "lineno": 29,
  "symbols_in_volume": [
   "pyspark.ml.param.shared.HasOutputCol",
   "pyspark.ml.param.shared.Param",
   "pyspark.ml.param.shared.Params._dummy",
   "pyspark.ml.param.shared.TypeConverters.toString",
   "pyspark.ml.util.JavaMLReadable",
   "pyspark.ml.util.JavaMLWritable",
   "pyspark.ml.wrapper.JavaTransformer"
  ],
  "type": "class"
 },
 "mleap.pyspark.feature.math_binary.MathBinary.__init__": {
  "lineno": 45,
  "symbols_in_volume": [
   "mleap.pyspark.py2scala.ScalaNone",
   "mleap.pyspark.py2scala.Some",
   "mleap.pyspark.py2scala.jvm_scala_object",
   "pyspark.keyword_only",
   "pyspark.ml.util._jvm"
  ],
  "type": "function"
 },
 "mleap.pyspark.feature.math_binary.MathBinary.setInputA": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.pyspark.feature.math_binary.MathBinary.setInputB": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.pyspark.feature.math_binary.MathBinary.setOutputCol": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.pyspark.feature.math_binary.MathBinary.setParams": {
  "lineno": 109,
  "symbols_in_volume": [
   "pyspark.keyword_only"
  ],
  "type": "function"
 },
 "mleap.pyspark.feature.math_unary": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mleap.pyspark.feature.math_unary.MathUnary": {
  "lineno": 23,
  "symbols_in_volume": [
   "pyspark.ml.param.shared.HasInputCol",
   "pyspark.ml.param.shared.HasOutputCol",
   "pyspark.ml.util.JavaMLReadable",
   "pyspark.ml.util.JavaMLWritable",
   "pyspark.ml.wrapper.JavaTransformer"
  ],
  "type": "class"
 },
 "mleap.pyspark.feature.math_unary.MathUnary.__init__": {
  "lineno": 25,
  "symbols_in_volume": [
   "mleap.pyspark.py2scala.jvm_scala_object",
   "pyspark.keyword_only",
   "pyspark.ml.util._jvm"
  ],
  "type": "function"
 },
 "mleap.pyspark.feature.math_unary.MathUnary.setInputCol": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.pyspark.feature.math_unary.MathUnary.setOutputCol": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.pyspark.feature.math_unary.MathUnary.setParams": {
  "lineno": 63,
  "symbols_in_volume": [
   "pyspark.keyword_only"
  ],
  "type": "function"
 },
 "mleap.pyspark.feature.math_unary.UnaryOperation": {
  "lineno": 13,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "mleap.pyspark.feature.string_map": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mleap.pyspark.feature.string_map.StringMap": {
  "lineno": 11,
  "symbols_in_volume": [
   "pyspark.ml.param.shared.HasInputCol",
   "pyspark.ml.param.shared.HasOutputCol",
   "pyspark.ml.util.JavaMLReadable",
   "pyspark.ml.util.JavaMLWritable",
   "pyspark.ml.wrapper.JavaTransformer"
  ],
  "type": "class"
 },
 "mleap.pyspark.feature.string_map.StringMap.__init__": {
  "lineno": 13,
  "symbols_in_volume": [
   "mleap.pyspark.py2scala.jvm_scala_object",
   "pyspark.keyword_only",
   "pyspark.ml.util._jvm"
  ],
  "type": "function"
 },
 "mleap.pyspark.feature.string_map.StringMap.__init__.validate_args": {
  "lineno": 26,
  "symbols_in_volume": [
   "six.string_types"
  ],
  "type": "function"
 },
 "mleap.pyspark.feature.string_map.StringMap.from_dataframe": {
  "lineno": 88,
  "symbols_in_volume": [
   "pyspark.sql.DataFrame"
  ],
  "type": "function"
 },
 "mleap.pyspark.feature.string_map.StringMap.setInputCol": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.pyspark.feature.string_map.StringMap.setOutputCol": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.pyspark.feature.string_map.StringMap.setParams": {
  "lineno": 67,
  "symbols_in_volume": [
   "pyspark.keyword_only"
  ],
  "type": "function"
 },
 "mleap.pyspark.py2scala": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mleap.pyspark.py2scala.ScalaNone": {
  "lineno": 27,
  "symbols_in_volume": [
   "pyspark.ml.util._jvm"
  ],
  "type": "function"
 },
 "mleap.pyspark.py2scala.Some": {
  "lineno": 20,
  "symbols_in_volume": [
   "pyspark.ml.util._jvm"
  ],
  "type": "function"
 },
 "mleap.pyspark.py2scala.jvm_scala_object": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.pyspark.spark_support": {
  "lineno": null,
  "symbols_in_volume": [
   "pyspark.ml.base.Transformer"
  ],
  "type": "module"
 },
 "mleap.pyspark.spark_support.SimpleSparkSerializer": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mleap.pyspark.spark_support.SimpleSparkSerializer.__init__": {
  "lineno": 37,
  "symbols_in_volume": [
   "pyspark.ml.util._jvm"
  ],
  "type": "function"
 },
 "mleap.pyspark.spark_support.SimpleSparkSerializer.deserializeFromBundle": {
  "lineno": 44,
  "symbols_in_volume": [
   "pyspark.ml.wrapper.JavaTransformer._from_java"
  ],
  "type": "function"
 },
 "mleap.pyspark.spark_support.SimpleSparkSerializer.serializeToBundle": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.pyspark.spark_support.deserializeFromBundle": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.pyspark.spark_support.serializeToBundle": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mleap.sklearn.base": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.linear_model.LinearRegression"
  ],
  "type": "module"
 },
 "mleap.sklearn.base.SimpleSerializer": {
  "lineno": 48,
  "symbols_in_volume": [
   "mleap.bundle.serialize.MLeapDeserializer",
   "mleap.bundle.serialize.MLeapSerializer"
  ],
  "type": "class"
 },
 "mleap.sklearn.base.SimpleSerializer.__init__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.base.SimpleSerializer.deserialize_from_bundle": {
  "lineno": 80,
  "symbols_in_volume": [
   "numpy.array",
   "os.path.join"
  ],
  "type": "function"
 },
 "mleap.sklearn.base.SimpleSerializer.serialize_to_bundle": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.base.SimpleSerializer.set_input_features": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.base.SimpleSerializer.set_prediction_column": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.base.deserialize_from_bundle": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.base.mleap_init": {
  "lineno": 35,
  "symbols_in_volume": [
   "uuid.uuid1"
  ],
  "type": "function"
 },
 "mleap.sklearn.base.serialize_to_bundle": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.decomposition": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mleap.sklearn.decomposition.pca": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.decomposition.pca.PCA"
  ],
  "type": "module"
 },
 "mleap.sklearn.decomposition.pca.SimpleSparkSerializer": {
  "lineno": 40,
  "symbols_in_volume": [
   "mleap.bundle.serialize.MLeapSerializer"
  ],
  "type": "class"
 },
 "mleap.sklearn.decomposition.pca.SimpleSparkSerializer.__init__": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.decomposition.pca.SimpleSparkSerializer.serialize_to_bundle": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.decomposition.pca.SimpleSparkSerializer.set_input_features": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.decomposition.pca.SimpleSparkSerializer.set_prediction_column": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.decomposition.pca.mleap_init": {
  "lineno": 28,
  "symbols_in_volume": [
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "mleap.sklearn.decomposition.pca.serialize_to_bundle": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.ensemble": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mleap.sklearn.ensemble.forest": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.ensemble.forest.RandomForestClassifier",
   "sklearn.ensemble.forest.RandomForestRegressor"
  ],
  "type": "module"
 },
 "mleap.sklearn.ensemble.forest.SimpleSerializer": {
  "lineno": 49,
  "symbols_in_volume": [
   "mleap.bundle.serialize.MLeapSerializer"
  ],
  "type": "class"
 },
 "mleap.sklearn.ensemble.forest.SimpleSerializer.__init__": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.ensemble.forest.SimpleSerializer.serialize_to_bundle": {
  "lineno": 53,
  "symbols_in_volume": [
   "mleap.bundle.serialize.Vector",
   "sklearn.ensemble.forest.RandomForestClassifier"
  ],
  "type": "function"
 },
 "mleap.sklearn.ensemble.forest.mleap_init": {
  "lineno": 26,
  "symbols_in_volume": [
   "uuid.uuid1"
  ],
  "type": "function"
 },
 "mleap.sklearn.ensemble.forest.serialize_to_bundle": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.extensions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mleap.sklearn.extensions.data": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mleap.sklearn.extensions.data.DefineEstimator": {
  "lineno": 25,
  "symbols_in_volume": [
   "sklearn.preprocessing.data.BaseEstimator",
   "sklearn.preprocessing.data.TransformerMixin"
  ],
  "type": "class"
 },
 "mleap.sklearn.extensions.data.DefineEstimator.__init__": {
  "lineno": 26,
  "symbols_in_volume": [
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "mleap.sklearn.extensions.data.DefineEstimator.fit": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.extensions.data.DefineEstimator.fit_transform": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.extensions.data.DefineEstimator.predict": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.extensions.data.DefineEstimator.transform": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.extensions.data.Imputer": {
  "lineno": 64,
  "symbols_in_volume": [
   "sklearn.preprocessing.Imputer"
  ],
  "type": "class"
 },
 "mleap.sklearn.extensions.data.Imputer.__init__": {
  "lineno": 66,
  "symbols_in_volume": [
   "mleap.sklearn.preprocessing.data.FeatureExtractor",
   "sklearn.preprocessing.Imputer.__init__",
   "uuid.uuid1"
  ],
  "type": "function"
 },
 "mleap.sklearn.extensions.data.Imputer.fit": {
  "lineno": 77,
  "symbols_in_volume": [
   "sklearn.preprocessing.Imputer"
  ],
  "type": "function"
 },
 "mleap.sklearn.extensions.data.Imputer.serialize_to_bundle": {
  "lineno": 84,
  "symbols_in_volume": [
   "mleap.sklearn.preprocessing.data.ImputerSerializer"
  ],
  "type": "function"
 },
 "mleap.sklearn.extensions.data.Imputer.transform": {
  "lineno": 81,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "sklearn.preprocessing.Imputer"
  ],
  "type": "function"
 },
 "mleap.sklearn.feature_extraction": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mleap.sklearn.feature_extraction.text": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.feature_extraction.text.TfidfVectorizer"
  ],
  "type": "module"
 },
 "mleap.sklearn.feature_extraction.text.CountVectorizerSerializer": {
  "lineno": 88,
  "symbols_in_volume": [
   "mleap.bundle.serialize.MLeapSerializer"
  ],
  "type": "class"
 },
 "mleap.sklearn.feature_extraction.text.CountVectorizerSerializer.__init__": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.feature_extraction.text.CountVectorizerSerializer.serialize_to_bundle": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.feature_extraction.text.SimpleSerializer": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mleap.sklearn.feature_extraction.text.SimpleSerializer.__init__": {
  "lineno": 61,
  "symbols_in_volume": [
   "mleap.sklearn.pipeline.SimpleSerializer"
  ],
  "type": "function"
 },
 "mleap.sklearn.feature_extraction.text.SimpleSerializer._choose_serializer": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.feature_extraction.text.SimpleSerializer.serialize_to_bundle": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.feature_extraction.text.SimpleSerializer.set_input_features": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.feature_extraction.text.SimpleSerializer.set_prediction_column": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.feature_extraction.text.TfidfStep": {
  "lineno": 166,
  "symbols_in_volume": [
   "mleap.bundle.serialize.MLeapSerializer"
  ],
  "type": "class"
 },
 "mleap.sklearn.feature_extraction.text.TfidfStep.__init__": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.feature_extraction.text.TfidfStep.serialize_to_bundle": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.feature_extraction.text.TfidfVectorizerSerializer": {
  "lineno": 111,
  "symbols_in_volume": [
   "mleap.bundle.serialize.MLeapSerializer",
   "mleap.sklearn.pipeline.SimpleSerializer"
  ],
  "type": "class"
 },
 "mleap.sklearn.feature_extraction.text.TfidfVectorizerSerializer.__init__": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.feature_extraction.text.TfidfVectorizerSerializer.serialize_to_bundle": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.feature_extraction.text.TfidfVectorizerSerializer.set_input_features": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.feature_extraction.text.TfidfVectorizerSerializer.set_prediction_column": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.feature_extraction.text.mleap_init": {
  "lineno": 38,
  "symbols_in_volume": [
   "sklearn.feature_extraction.text.TfidfVectorizer",
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "mleap.sklearn.feature_extraction.text.ops": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mleap.sklearn.feature_extraction.text.ops.__init__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.feature_extraction.text.serialize_to_bundle": {
  "lineno": 33,
  "symbols_in_volume": [
   "mleap.sklearn.pipeline.SimpleSerializer"
  ],
  "type": "function"
 },
 "mleap.sklearn.feature_union": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.pipeline.FeatureUnion"
  ],
  "type": "module"
 },
 "mleap.sklearn.feature_union.SimplekSerializer": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mleap.sklearn.feature_union.SimplekSerializer.__init__": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.feature_union.SimplekSerializer.deserialize_from_bundle": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.feature_union.SimplekSerializer.serialize_to_bundle": {
  "lineno": 48,
  "symbols_in_volume": [
   "os.mkdir",
   "os.path.exists",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "mleap.sklearn.feature_union.deserialize_from_bundle": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.feature_union.mleap_init": {
  "lineno": 34,
  "symbols_in_volume": [
   "uuid.uuid1"
  ],
  "type": "function"
 },
 "mleap.sklearn.feature_union.serialize_to_bundle": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.logistic": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.linear_model.LogisticRegression",
   "sklearn.linear_model.LogisticRegressionCV"
  ],
  "type": "module"
 },
 "mleap.sklearn.logistic.SimpleSerializer": {
  "lineno": 54,
  "symbols_in_volume": [
   "mleap.bundle.serialize.MLeapDeserializer",
   "mleap.bundle.serialize.MLeapSerializer"
  ],
  "type": "class"
 },
 "mleap.sklearn.logistic.SimpleSerializer.__init__": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.logistic.SimpleSerializer.deserialize_from_bundle": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.reshape",
   "os.path.join"
  ],
  "type": "function"
 },
 "mleap.sklearn.logistic.SimpleSerializer.serialize_to_bundle": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.logistic.SimpleSerializer.set_input_features": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.logistic.SimpleSerializer.set_prediction_column": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.logistic.deserialize_from_bundle": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.logistic.mleap_init": {
  "lineno": 26,
  "symbols_in_volume": [
   "uuid.uuid1"
  ],
  "type": "function"
 },
 "mleap.sklearn.logistic.serialize_to_bundle": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.pipeline": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.pipeline.Pipeline"
  ],
  "type": "module"
 },
 "mleap.sklearn.pipeline.SimpleSerializer": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mleap.sklearn.pipeline.SimpleSerializer.__init__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.pipeline.SimpleSerializer._extract_nodes": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.pipeline.SimpleSerializer.deserialize_from_bundle": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.pipeline.SimpleSerializer.get_bundle": {
  "lineno": 123,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "mleap.__version__",
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "mleap.sklearn.pipeline.SimpleSerializer.get_model": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.pipeline.SimpleSerializer.get_node": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.pipeline.SimpleSerializer.serialize_to_bundle": {
  "lineno": 52,
  "symbols_in_volume": [
   "json.dump",
   "os.mkdir",
   "os.path.exists",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "mleap.sklearn.pipeline.deserialize_from_bundle": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.pipeline.mleap_init": {
  "lineno": 37,
  "symbols_in_volume": [
   "uuid.uuid1"
  ],
  "type": "function"
 },
 "mleap.sklearn.pipeline.serialize_to_bundle": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.pipeline.zip_pipeline": {
  "lineno": 169,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.join",
   "os.walk",
   "zipfile.ZIP_DEFLATED",
   "zipfile.ZipFile"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mleap.sklearn.preprocessing.data": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.preprocessing.Binarizer",
   "sklearn.preprocessing.Imputer",
   "sklearn.preprocessing.MinMaxScaler",
   "sklearn.preprocessing.PolynomialFeatures",
   "sklearn.preprocessing.StandardScaler",
   "sklearn.preprocessing.data.OneHotEncoder"
  ],
  "type": "module"
 },
 "mleap.sklearn.preprocessing.data.BinarizerSerializer": {
  "lineno": 672,
  "symbols_in_volume": [
   "mleap.bundle.serialize.MLeapDeserializer",
   "mleap.bundle.serialize.MLeapSerializer"
  ],
  "type": "class"
 },
 "mleap.sklearn.preprocessing.data.BinarizerSerializer.__init__": {
  "lineno": 673,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.BinarizerSerializer.deserialize_from_bundle": {
  "lineno": 698,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.BinarizerSerializer.serialize_to_bundle": {
  "lineno": 678,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.FeatureExtractor": {
  "lineno": 196,
  "symbols_in_volume": [
   "mleap.bundle.serialize.MLeapSerializer",
   "sklearn.preprocessing.data.BaseEstimator",
   "sklearn.preprocessing.data.TransformerMixin"
  ],
  "type": "class"
 },
 "mleap.sklearn.preprocessing.data.FeatureExtractor.__init__": {
  "lineno": 197,
  "symbols_in_volume": [
   "uuid.uuid1"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.FeatureExtractor.assign_input_shapes": {
  "lineno": 249,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.FeatureExtractor.fit": {
  "lineno": 265,
  "symbols_in_volume": [
   "numpy.object_"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.FeatureExtractor.fit_transform": {
  "lineno": 273,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.FeatureExtractor.get_input_features": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.FeatureExtractor.serialize_to_bundle": {
  "lineno": 282,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.FeatureExtractor.transform": {
  "lineno": 244,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.ImputerSerializer": {
  "lineno": 528,
  "symbols_in_volume": [
   "mleap.bundle.serialize.MLeapSerializer"
  ],
  "type": "class"
 },
 "mleap.sklearn.preprocessing.data.ImputerSerializer.__init__": {
  "lineno": 529,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.ImputerSerializer.serialize_to_bundle": {
  "lineno": 533,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.LabelEncoder": {
  "lineno": 299,
  "symbols_in_volume": [
   "mleap.bundle.serialize.MLeapDeserializer",
   "mleap.bundle.serialize.MLeapSerializer",
   "sklearn.preprocessing.data.BaseEstimator",
   "sklearn.preprocessing.data.TransformerMixin"
  ],
  "type": "class"
 },
 "mleap.sklearn.preprocessing.data.LabelEncoder.__init__": {
  "lineno": 354,
  "symbols_in_volume": [
   "uuid.uuid1"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.LabelEncoder.deserialize_from_bundle": {
  "lineno": 458,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.LabelEncoder.fit": {
  "lineno": 362,
  "symbols_in_volume": [
   "numpy.unique",
   "sklearn.utils.column_or_1d"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.LabelEncoder.fit_transform": {
  "lineno": 379,
  "symbols_in_volume": [
   "numpy.unique",
   "sklearn.utils.column_or_1d"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.LabelEncoder.inverse_transform": {
  "lineno": 418,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.setdiff1d",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.LabelEncoder.serialize_to_bundle": {
  "lineno": 438,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.LabelEncoder.transform": {
  "lineno": 396,
  "symbols_in_volume": [
   "numpy.intersect1d",
   "numpy.searchsorted",
   "numpy.setdiff1d",
   "numpy.unique",
   "sklearn.utils.column_or_1d",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.MathBinary": {
  "lineno": 972,
  "symbols_in_volume": [
   "mleap.bundle.serialize.MLeapDeserializer",
   "mleap.bundle.serialize.MLeapSerializer",
   "sklearn.preprocessing.data.BaseEstimator",
   "sklearn.preprocessing.data.TransformerMixin"
  ],
  "type": "class"
 },
 "mleap.sklearn.preprocessing.data.MathBinary.__init__": {
  "lineno": 985,
  "symbols_in_volume": [
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.MathBinary._return": {
  "lineno": 994,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.MathBinary.deserialize_from_bundle": {
  "lineno": 1068,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.MathBinary.fit": {
  "lineno": 998,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.MathBinary.fit_transform": {
  "lineno": 1033,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.MathBinary.serialize_to_bundle": {
  "lineno": 1045,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.MathBinary.transform": {
  "lineno": 1008,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.divide",
   "numpy.multiply",
   "numpy.remainder",
   "numpy.subtract",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.MathUnary": {
  "lineno": 879,
  "symbols_in_volume": [
   "mleap.bundle.serialize.MLeapDeserializer",
   "mleap.bundle.serialize.MLeapSerializer",
   "sklearn.preprocessing.data.BaseEstimator",
   "sklearn.preprocessing.data.TransformerMixin"
  ],
  "type": "class"
 },
 "mleap.sklearn.preprocessing.data.MathUnary.__init__": {
  "lineno": 891,
  "symbols_in_volume": [
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.MathUnary.deserialize_from_bundle": {
  "lineno": 963,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.MathUnary.fit": {
  "lineno": 900,
  "symbols_in_volume": [
   "sklearn.utils.column_or_1d",
   "warnings.warn"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.MathUnary.fit_transform": {
  "lineno": 932,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.MathUnary.serialize_to_bundle": {
  "lineno": 944,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.MathUnary.transform": {
  "lineno": 911,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.cos",
   "numpy.exp",
   "numpy.log",
   "numpy.sin",
   "numpy.sqrt",
   "numpy.tan"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.MinMaxScalerSerializer": {
  "lineno": 470,
  "symbols_in_volume": [
   "mleap.bundle.serialize.MLeapDeserializer",
   "mleap.bundle.serialize.MLeapSerializer"
  ],
  "type": "class"
 },
 "mleap.sklearn.preprocessing.data.MinMaxScalerSerializer.__init__": {
  "lineno": 484,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.MinMaxScalerSerializer.deserialize_from_bundle": {
  "lineno": 507,
  "symbols_in_volume": [
   "numpy.array",
   "os.path.join"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.MinMaxScalerSerializer.serialize_to_bundle": {
  "lineno": 487,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.NDArrayToDataFrame": {
  "lineno": 772,
  "symbols_in_volume": [
   "sklearn.preprocessing.data.BaseEstimator",
   "sklearn.preprocessing.data.TransformerMixin"
  ],
  "type": "class"
 },
 "mleap.sklearn.preprocessing.data.NDArrayToDataFrame.__init__": {
  "lineno": 773,
  "symbols_in_volume": [
   "uuid.uuid1"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.NDArrayToDataFrame._serialize_to_bundle": {
  "lineno": 809,
  "symbols_in_volume": [
   "json.dump",
   "os.mkdir",
   "os.path.exists",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.NDArrayToDataFrame.fit": {
  "lineno": 784,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.NDArrayToDataFrame.fit_transform": {
  "lineno": 787,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.NDArrayToDataFrame.get_mleap_model": {
  "lineno": 790,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.NDArrayToDataFrame.get_mleap_node": {
  "lineno": 796,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.NDArrayToDataFrame.transform": {
  "lineno": 779,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.OneHotEncoderSerializer": {
  "lineno": 618,
  "symbols_in_volume": [
   "mleap.bundle.serialize.MLeapDeserializer",
   "mleap.bundle.serialize.MLeapSerializer"
  ],
  "type": "class"
 },
 "mleap.sklearn.preprocessing.data.OneHotEncoderSerializer.__init__": {
  "lineno": 623,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.OneHotEncoderSerializer.deserialize_from_bundle": {
  "lineno": 651,
  "symbols_in_volume": [
   "numpy.cumsum",
   "numpy.hstack",
   "os.path.join"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.OneHotEncoderSerializer.serialize_to_bundle": {
  "lineno": 626,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.PolynomialExpansionSerializer": {
  "lineno": 706,
  "symbols_in_volume": [
   "mleap.bundle.serialize.MLeapDeserializer",
   "mleap.bundle.serialize.MLeapSerializer"
  ],
  "type": "class"
 },
 "mleap.sklearn.preprocessing.data.PolynomialExpansionSerializer.__init__": {
  "lineno": 707,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.PolynomialExpansionSerializer.deserialize_from_bundle": {
  "lineno": 729,
  "symbols_in_volume": [
   "json.load",
   "os.path.join"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.PolynomialExpansionSerializer.serialize_to_bundle": {
  "lineno": 710,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.ReshapeArrayToN1": {
  "lineno": 750,
  "symbols_in_volume": [
   "sklearn.preprocessing.data.BaseEstimator",
   "sklearn.preprocessing.data.TransformerMixin"
  ],
  "type": "class"
 },
 "mleap.sklearn.preprocessing.data.ReshapeArrayToN1.__init__": {
  "lineno": 751,
  "symbols_in_volume": [
   "uuid.uuid1"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.ReshapeArrayToN1.fit": {
  "lineno": 765,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.ReshapeArrayToN1.fit_transform": {
  "lineno": 768,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.ReshapeArrayToN1.transform": {
  "lineno": 756,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.SimpleSerializer": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mleap.sklearn.preprocessing.data.SimpleSerializer.__init__": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.SimpleSerializer._choose_serializer": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.SimpleSerializer.deserialize_from_bundle": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.SimpleSerializer.serialize_to_bundle": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.SimpleSerializer.set_input_features": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.SimpleSerializer.set_output_features": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.StandardScalerSerializer": {
  "lineno": 556,
  "symbols_in_volume": [
   "mleap.bundle.serialize.MLeapDeserializer",
   "mleap.bundle.serialize.MLeapSerializer"
  ],
  "type": "class"
 },
 "mleap.sklearn.preprocessing.data.StandardScalerSerializer.__init__": {
  "lineno": 569,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.StandardScalerSerializer.deserialize_from_bundle": {
  "lineno": 592,
  "symbols_in_volume": [
   "numpy.square",
   "os.path.join"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.StandardScalerSerializer.serialize_to_bundle": {
  "lineno": 572,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.StringMap": {
  "lineno": 1076,
  "symbols_in_volume": [
   "mleap.bundle.serialize.MLeapDeserializer",
   "mleap.bundle.serialize.MLeapSerializer",
   "sklearn.preprocessing.data.BaseEstimator",
   "sklearn.preprocessing.data.TransformerMixin"
  ],
  "type": "class"
 },
 "mleap.sklearn.preprocessing.data.StringMap.__init__": {
  "lineno": 1078,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.StringMap.deserialize_from_bundle": {
  "lineno": 1124,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.StringMap.fit": {
  "lineno": 1093,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.StringMap.fit_transform": {
  "lineno": 1101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.StringMap.serialize_to_bundle": {
  "lineno": 1105,
  "symbols_in_volume": [
   "mleap.bundle.serialize.Vector"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.StringMap.transform": {
  "lineno": 1098,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.ToDense": {
  "lineno": 827,
  "symbols_in_volume": [
   "sklearn.preprocessing.data.BaseEstimator",
   "sklearn.preprocessing.data.TransformerMixin"
  ],
  "type": "class"
 },
 "mleap.sklearn.preprocessing.data.ToDense.__init__": {
  "lineno": 828,
  "symbols_in_volume": [
   "uuid.uuid1"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.ToDense._serialize_to_bundle": {
  "lineno": 862,
  "symbols_in_volume": [
   "json.dump",
   "os.mkdir",
   "os.path.exists",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.ToDense.fit": {
  "lineno": 837,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.ToDense.fit_transform": {
  "lineno": 840,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.ToDense.get_mleap_model": {
  "lineno": 843,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.ToDense.get_mleap_node": {
  "lineno": 849,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.ToDense.transform": {
  "lineno": 834,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data._check_numpy_unicode_bug": {
  "lineno": 51,
  "symbols_in_volume": [
   "sklearn.utils.fixes.np_version"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data._to_list": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.deserialize_from_bundle": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.mleap_init": {
  "lineno": 75,
  "symbols_in_volume": [
   "uuid.uuid1"
  ],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.ops": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mleap.sklearn.preprocessing.data.ops.__init__": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.preprocessing.data.serialize_to_bundle": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.svm": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.svm.LinearSVC",
   "sklearn.svm.SVC"
  ],
  "type": "module"
 },
 "mleap.sklearn.svm.SimpleSerializer": {
  "lineno": 54,
  "symbols_in_volume": [
   "mleap.bundle.serialize.MLeapDeserializer",
   "mleap.bundle.serialize.MLeapSerializer"
  ],
  "type": "class"
 },
 "mleap.sklearn.svm.SimpleSerializer.__init__": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.svm.SimpleSerializer.deserialize_from_bundle": {
  "lineno": 87,
  "symbols_in_volume": [
   "numpy.array",
   "os.path.join"
  ],
  "type": "function"
 },
 "mleap.sklearn.svm.SimpleSerializer.serialize_to_bundle": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.svm.SimpleSerializer.set_input_features": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.svm.SimpleSerializer.set_prediction_column": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.svm.deserialize_from_bundle": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.svm.mleap_init": {
  "lineno": 26,
  "symbols_in_volume": [
   "uuid.uuid1"
  ],
  "type": "function"
 },
 "mleap.sklearn.svm.serialize_to_bundle": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.tree": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mleap.sklearn.tree.tree": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.tree.DecisionTreeRegressor"
  ],
  "type": "module"
 },
 "mleap.sklearn.tree.tree.SimpleSerializer": {
  "lineno": 49,
  "symbols_in_volume": [
   "mleap.bundle.serialize.MLeapSerializer"
  ],
  "type": "class"
 },
 "mleap.sklearn.tree.tree.SimpleSerializer.__init__": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.sklearn.tree.tree.SimpleSerializer.serialize_to_bundle": {
  "lineno": 102,
  "symbols_in_volume": [
   "sklearn.tree.DecisionTreeClassifier"
  ],
  "type": "function"
 },
 "mleap.sklearn.tree.tree.SimpleSerializer.serialize_tree": {
  "lineno": 53,
  "symbols_in_volume": [
   "sklearn.tree._tree.TREE_UNDEFINED"
  ],
  "type": "function"
 },
 "mleap.sklearn.tree.tree.SimpleSerializer.serialize_tree.traverse": {
  "lineno": 66,
  "symbols_in_volume": [
   "json.dump",
   "sklearn.tree._tree.TREE_UNDEFINED"
  ],
  "type": "function"
 },
 "mleap.sklearn.tree.tree.mleap_init": {
  "lineno": 26,
  "symbols_in_volume": [
   "uuid.uuid1"
  ],
  "type": "function"
 },
 "mleap.sklearn.tree.tree.serialize_to_bundle": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.tensorflow": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mleap.tensorflow.test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mleap.tensorflow.test.NodeLookup": {
  "lineno": 1,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mleap.tensorflow.test.NodeLookup.__init__": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.tensorflow.test.NodeLookup.id_to_string": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.tensorflow.test.NodeLookup.load": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mleap.version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.gensim_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.gensim_test.TransformerTests": {
  "lineno": 28,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.gensim_test.TransformerTests.setUp": {
  "lineno": 30,
  "symbols_in_volume": [
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "tests.gensim_test.TransformerTests.tearDown": {
  "lineno": 33,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "tests.gensim_test.TransformerTests.test_word2vec": {
  "lineno": 36,
  "symbols_in_volume": [
   "json.load",
   "mleap.gensim.word2vec.Word2Vec"
  ],
  "type": "function"
 },
 "tests.pyspark": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.ERROR",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "tests.pyspark.feature": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.pyspark.feature.math_binary_test": {
  "lineno": null,
  "symbols_in_volume": [
   "pyspark.sql.types.FloatType",
   "pyspark.sql.types.StructField",
   "pyspark.sql.types.StructType"
  ],
  "type": "module"
 },
 "tests.pyspark.feature.math_binary_test.MathBinaryTest": {
  "lineno": 28,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.pyspark.feature.math_binary_test.MathBinaryTest._new_add_math_binary": {
  "lineno": 60,
  "symbols_in_volume": [
   "mleap.pyspark.feature.math_binary.BinaryOperation.Add",
   "mleap.pyspark.feature.math_binary.MathBinary"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.math_binary_test.MathBinaryTest.setUp": {
  "lineno": 38,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.math_binary_test.MathBinaryTest.setUpClass": {
  "lineno": 30,
  "symbols_in_volume": [
   "tests.pyspark.lib.spark_session.spark_session"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.math_binary_test.MathBinaryTest.tearDown": {
  "lineno": 57,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.math_binary_test.MathBinaryTest.tearDownClass": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.pyspark.feature.math_binary_test.MathBinaryTest.test_add_math_binary": {
  "lineno": 68,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.math_binary_test.MathBinaryTest.test_add_math_binary_defaults_none": {
  "lineno": 150,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.math_binary_test.MathBinaryTest.test_can_instantiate_all_math_binary": {
  "lineno": 99,
  "symbols_in_volume": [
   "mleap.pyspark.feature.math_binary.BinaryOperation",
   "mleap.pyspark.feature.math_binary.MathBinary"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.math_binary_test.MathBinaryTest.test_math_binary_pipeline": {
  "lineno": 73,
  "symbols_in_volume": [
   "mleap.pyspark.feature.math_binary.BinaryOperation.Multiply",
   "mleap.pyspark.feature.math_binary.MathBinary",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyspark.ml.Pipeline"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.math_binary_test.MathBinaryTest.test_mult_math_binary_default_both": {
  "lineno": 205,
  "symbols_in_volume": [
   "mleap.pyspark.feature.math_binary.BinaryOperation.Multiply",
   "mleap.pyspark.feature.math_binary.MathBinary",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.math_binary_test.MathBinaryTest.test_mult_math_binary_default_inputA": {
  "lineno": 167,
  "symbols_in_volume": [
   "mleap.pyspark.feature.math_binary.BinaryOperation.Multiply",
   "mleap.pyspark.feature.math_binary.MathBinary",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.math_binary_test.MathBinaryTest.test_mult_math_binary_default_inputB": {
  "lineno": 186,
  "symbols_in_volume": [
   "mleap.pyspark.feature.math_binary.BinaryOperation.Multiply",
   "mleap.pyspark.feature.math_binary.MathBinary",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.math_binary_test.MathBinaryTest.test_serialize_deserialize_math_binary": {
  "lineno": 108,
  "symbols_in_volume": [
   "mleap.pyspark.spark_support.SimpleSparkSerializer",
   "os.path.join",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.math_binary_test.MathBinaryTest.test_serialize_deserialize_pipeline": {
  "lineno": 118,
  "symbols_in_volume": [
   "mleap.pyspark.feature.math_binary.BinaryOperation.Multiply",
   "mleap.pyspark.feature.math_binary.MathBinary",
   "mleap.pyspark.spark_support.SimpleSparkSerializer",
   "os.path.join",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyspark.ml.Pipeline"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.math_unary_test": {
  "lineno": null,
  "symbols_in_volume": [
   "pyspark.sql.types.FloatType",
   "pyspark.sql.types.StructField",
   "pyspark.sql.types.StructType"
  ],
  "type": "module"
 },
 "tests.pyspark.feature.math_unary_test.MathUnaryTest": {
  "lineno": 27,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.pyspark.feature.math_unary_test.MathUnaryTest.setUp": {
  "lineno": 37,
  "symbols_in_volume": [
   "math.sin",
   "pandas.DataFrame",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.math_unary_test.MathUnaryTest.setUpClass": {
  "lineno": 29,
  "symbols_in_volume": [
   "tests.pyspark.lib.spark_session.spark_session"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.math_unary_test.MathUnaryTest.tearDown": {
  "lineno": 54,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.math_unary_test.MathUnaryTest.tearDownClass": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.pyspark.feature.math_unary_test.MathUnaryTest.test_can_instantiate_all_math_unary": {
  "lineno": 96,
  "symbols_in_volume": [
   "mleap.pyspark.feature.math_unary.MathUnary",
   "mleap.pyspark.feature.math_unary.UnaryOperation"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.math_unary_test.MathUnaryTest.test_math_unary_pipeline": {
  "lineno": 67,
  "symbols_in_volume": [
   "math.exp",
   "math.sin",
   "mleap.pyspark.feature.math_unary.MathUnary",
   "mleap.pyspark.feature.math_unary.UnaryOperation.Exp",
   "mleap.pyspark.feature.math_unary.UnaryOperation.Sin",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyspark.ml.Pipeline"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.math_unary_test.MathUnaryTest.test_serialize_deserialize_math_unary": {
  "lineno": 104,
  "symbols_in_volume": [
   "mleap.pyspark.feature.math_unary.MathUnary",
   "mleap.pyspark.feature.math_unary.UnaryOperation.Sin",
   "mleap.pyspark.spark_support.SimpleSparkSerializer",
   "os.path.join",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.math_unary_test.MathUnaryTest.test_serialize_deserialize_pipeline": {
  "lineno": 119,
  "symbols_in_volume": [
   "math.exp",
   "math.sin",
   "mleap.pyspark.feature.math_unary.MathUnary",
   "mleap.pyspark.feature.math_unary.UnaryOperation.Exp",
   "mleap.pyspark.feature.math_unary.UnaryOperation.Sin",
   "mleap.pyspark.spark_support.SimpleSparkSerializer",
   "os.path.join",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyspark.ml.Pipeline"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.math_unary_test.MathUnaryTest.test_sin_math_unary": {
  "lineno": 57,
  "symbols_in_volume": [
   "mleap.pyspark.feature.math_unary.MathUnary",
   "mleap.pyspark.feature.math_unary.UnaryOperation.Sin",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.string_map_test": {
  "lineno": null,
  "symbols_in_volume": [
   "pyspark.sql.types.DoubleType",
   "pyspark.sql.types.StringType",
   "pyspark.sql.types.StructField",
   "pyspark.sql.types.StructType"
  ],
  "type": "module"
 },
 "tests.pyspark.feature.string_map_test.StringMapTest": {
  "lineno": 23,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.pyspark.feature.string_map_test.StringMapTest.setUp": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.pyspark.feature.string_map_test.StringMapTest.setUpClass": {
  "lineno": 25,
  "symbols_in_volume": [
   "tests.pyspark.lib.spark_session.spark_session"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.string_map_test.StringMapTest.tearDownClass": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.pyspark.feature.string_map_test.StringMapTest.test_map": {
  "lineno": 36,
  "symbols_in_volume": [
   "mleap.pyspark.feature.string_map.StringMap",
   "tests.pyspark.lib.assertions.assert_df"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.string_map_test.StringMapTest.test_map_custom_default_value": {
  "lineno": 55,
  "symbols_in_volume": [
   "mleap.pyspark.feature.string_map.StringMap",
   "tests.pyspark.lib.assertions.assert_df"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.string_map_test.StringMapTest.test_map_default_value": {
  "lineno": 45,
  "symbols_in_volume": [
   "mleap.pyspark.feature.string_map.StringMap",
   "tests.pyspark.lib.assertions.assert_df"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.string_map_test.StringMapTest.test_map_from_dataframe": {
  "lineno": 75,
  "symbols_in_volume": [
   "mleap.pyspark.feature.string_map.StringMap.from_dataframe",
   "tests.pyspark.lib.assertions.assert_df"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.string_map_test.StringMapTest.test_map_missing_value_error": {
  "lineno": 66,
  "symbols_in_volume": [
   "mleap.pyspark.feature.string_map.StringMap",
   "py4j.protocol.Py4JJavaError"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.string_map_test.StringMapTest.test_serialize_to_bundle": {
  "lineno": 85,
  "symbols_in_volume": [
   "mleap.pyspark.feature.string_map.StringMap",
   "pyspark.ml.Pipeline",
   "tests.pyspark.lib.assertions.assert_df"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.string_map_test.StringMapTest.test_validate_handleInvalid_bad": {
  "lineno": 105,
  "symbols_in_volume": [
   "mleap.pyspark.feature.string_map.StringMap"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.string_map_test.StringMapTest.test_validate_handleInvalid_ok": {
  "lineno": 101,
  "symbols_in_volume": [
   "mleap.pyspark.feature.string_map.StringMap"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.string_map_test.StringMapTest.test_validate_labels_key_fails": {
  "lineno": 113,
  "symbols_in_volume": [
   "mleap.pyspark.feature.string_map.StringMap"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.string_map_test.StringMapTest.test_validate_labels_type_fails": {
  "lineno": 109,
  "symbols_in_volume": [
   "mleap.pyspark.feature.string_map.StringMap"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.string_map_test.StringMapTest.test_validate_labels_value_fails": {
  "lineno": 117,
  "symbols_in_volume": [
   "mleap.pyspark.feature.string_map.StringMap"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.string_map_test._deserialize_from_file": {
  "lineno": 133,
  "symbols_in_volume": [
   "mleap.pyspark.spark_support.SimpleSparkSerializer"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.string_map_test._serialize_to_file": {
  "lineno": 122,
  "symbols_in_volume": [
   "mleap.pyspark.spark_support.SimpleSparkSerializer",
   "os.path.join",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "tests.pyspark.feature.string_map_test._to_jar_file_path": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.pyspark.lib": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.pyspark.lib.assertions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.pyspark.lib.assertions._print_dfs": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.pyspark.lib.assertions.assert_df": {
  "lineno": 12,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "re.search"
  ],
  "type": "function"
 },
 "tests.pyspark.lib.spark_session": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.pyspark.lib.spark_session.spark_session": {
  "lineno": 5,
  "symbols_in_volume": [
   "os.environ",
   "pyspark.sql.SparkSession.builder.config"
  ],
  "type": "function"
 },
 "tests.sklearn": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.sklearn.base_tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.sklearn.base_tests.TransformerTests": {
  "lineno": 54,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.sklearn.base_tests.TransformerTests.setUp": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "tests.sklearn.base_tests.TransformerTests.tearDown": {
  "lineno": 59,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "tests.sklearn.base_tests.TransformerTests.test_linear_regression_deserializer": {
  "lineno": 80,
  "symbols_in_volume": [
   "json.load",
   "mleap.sklearn.base.LinearRegression"
  ],
  "type": "function"
 },
 "tests.sklearn.base_tests.TransformerTests.test_linear_regression_serializer": {
  "lineno": 62,
  "symbols_in_volume": [
   "json.load",
   "mleap.sklearn.base.LinearRegression"
  ],
  "type": "function"
 },
 "tests.sklearn.base_tests.TransformerTests.test_logistic_regression_cv_deserializer": {
  "lineno": 255,
  "symbols_in_volume": [
   "json.load",
   "mleap.sklearn.logistic.LogisticRegressionCV",
   "mleap.sklearn.preprocessing.data.Binarizer",
   "mleap.sklearn.preprocessing.data.FeatureExtractor"
  ],
  "type": "function"
 },
 "tests.sklearn.base_tests.TransformerTests.test_logistic_regression_cv_serializer": {
  "lineno": 226,
  "symbols_in_volume": [
   "json.load",
   "mleap.sklearn.logistic.LogisticRegressionCV",
   "mleap.sklearn.preprocessing.data.Binarizer",
   "mleap.sklearn.preprocessing.data.FeatureExtractor"
  ],
  "type": "function"
 },
 "tests.sklearn.base_tests.TransformerTests.test_logistic_regression_deserializer": {
  "lineno": 135,
  "symbols_in_volume": [
   "json.load",
   "mleap.sklearn.logistic.LogisticRegression",
   "mleap.sklearn.preprocessing.data.Binarizer",
   "mleap.sklearn.preprocessing.data.FeatureExtractor"
  ],
  "type": "function"
 },
 "tests.sklearn.base_tests.TransformerTests.test_logistic_regression_serializer": {
  "lineno": 106,
  "symbols_in_volume": [
   "json.load",
   "mleap.sklearn.logistic.LogisticRegression",
   "mleap.sklearn.preprocessing.data.Binarizer",
   "mleap.sklearn.preprocessing.data.FeatureExtractor"
  ],
  "type": "function"
 },
 "tests.sklearn.base_tests.TransformerTests.test_multinomial_logistic_regression_deserializer": {
  "lineno": 203,
  "symbols_in_volume": [
   "mleap.sklearn.logistic.LogisticRegression",
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.sklearn.base_tests.TransformerTests.test_multinomial_logistic_regression_serializer": {
  "lineno": 172,
  "symbols_in_volume": [
   "json.load",
   "mleap.sklearn.logistic.LogisticRegression",
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.sklearn.base_tests.to_standard_normal_quartile": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.sklearn.extensions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.sklearn.extensions.data_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.sklearn.extensions.data_test.ExtensionsTests": {
  "lineno": 10,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.sklearn.extensions.data_test.ExtensionsTests.imputer_ext_test": {
  "lineno": 18,
  "symbols_in_volume": [
   "json.load",
   "mleap.sklearn.extensions.data.Imputer"
  ],
  "type": "function"
 },
 "tests.sklearn.extensions.data_test.ExtensionsTests.imputer_ext_test._set_nulls": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.NaN"
  ],
  "type": "function"
 },
 "tests.sklearn.extensions.data_test.ExtensionsTests.setUp": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "tests.sklearn.extensions.data_test.ExtensionsTests.tearDown": {
  "lineno": 15,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "tests.sklearn.feature_extraction": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.sklearn.feature_extraction.text_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.sklearn.feature_extraction.text_test.TransformerTests": {
  "lineno": 11,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.sklearn.feature_extraction.text_test.TransformerTests.load_pipeline_model": {
  "lineno": 94,
  "symbols_in_volume": [
   "json.load"
  ],
  "type": "function"
 },
 "tests.sklearn.feature_extraction.text_test.TransformerTests.setUp": {
  "lineno": 12,
  "symbols_in_volume": [
   "mleap.sklearn.feature_extraction.text.TfidfVectorizer",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "tests.sklearn.feature_extraction.text_test.TransformerTests.tearDown": {
  "lineno": 27,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "tests.sklearn.feature_extraction.text_test.TransformerTests.test_countvectorizer_serializer": {
  "lineno": 30,
  "symbols_in_volume": [
   "json.load",
   "mleap.sklearn.feature_extraction.text.CountVectorizer"
  ],
  "type": "function"
 },
 "tests.sklearn.feature_extraction.text_test.TransformerTests.test_tfidf_vectorizer_serializer_idf_part": {
  "lineno": 66,
  "symbols_in_volume": [
   "json.load"
  ],
  "type": "function"
 },
 "tests.sklearn.feature_extraction.text_test.TransformerTests.test_tfidf_vectorizer_serializer_pipeline_part": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.sklearn.feature_extraction.text_test.TransformerTests.test_tfidf_vectorizer_serializer_tf_part": {
  "lineno": 49,
  "symbols_in_volume": [
   "json.load"
  ],
  "type": "function"
 },
 "tests.sklearn.preprocessing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.sklearn.preprocessing.data_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.sklearn.preprocessing.data_test.TransformerTests": {
  "lineno": 34,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.sklearn.preprocessing.data_test.TransformerTests.binarizer_deserializer_test": {
  "lineno": 586,
  "symbols_in_volume": [
   "mleap.sklearn.preprocessing.data.Binarizer",
   "mleap.sklearn.preprocessing.data.FeatureExtractor"
  ],
  "type": "function"
 },
 "tests.sklearn.preprocessing.data_test.TransformerTests.binarizer_test": {
  "lineno": 543,
  "symbols_in_volume": [
   "json.load",
   "mleap.sklearn.preprocessing.data.Binarizer",
   "mleap.sklearn.preprocessing.data.FeatureExtractor"
  ],
  "type": "function"
 },
 "tests.sklearn.preprocessing.data_test.TransformerTests.feature_extractor_test": {
  "lineno": 434,
  "symbols_in_volume": [
   "json.load",
   "mleap.sklearn.preprocessing.data.FeatureExtractor"
  ],
  "type": "function"
 },
 "tests.sklearn.preprocessing.data_test.TransformerTests.imputer_test": {
  "lineno": 489,
  "symbols_in_volume": [
   "json.load",
   "mleap.sklearn.preprocessing.data.FeatureExtractor",
   "mleap.sklearn.preprocessing.data.Imputer"
  ],
  "type": "function"
 },
 "tests.sklearn.preprocessing.data_test.TransformerTests.imputer_test._set_nulls": {
  "lineno": 491,
  "symbols_in_volume": [
   "numpy.NaN"
  ],
  "type": "function"
 },
 "tests.sklearn.preprocessing.data_test.TransformerTests.label_encoder_deserializer_test": {
  "lineno": 340,
  "symbols_in_volume": [
   "json.load",
   "mleap.sklearn.preprocessing.data.LabelEncoder"
  ],
  "type": "function"
 },
 "tests.sklearn.preprocessing.data_test.TransformerTests.label_encoder_test": {
  "lineno": 311,
  "symbols_in_volume": [
   "json.load",
   "mleap.sklearn.preprocessing.data.LabelEncoder"
  ],
  "type": "function"
 },
 "tests.sklearn.preprocessing.data_test.TransformerTests.math_binary_deserialize_add_test": {
  "lineno": 781,
  "symbols_in_volume": [
   "mleap.sklearn.preprocessing.data.MathBinary",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.sklearn.preprocessing.data_test.TransformerTests.math_binary_divide_test": {
  "lineno": 867,
  "symbols_in_volume": [
   "json.load",
   "mleap.sklearn.preprocessing.data.MathBinary",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.sklearn.preprocessing.data_test.TransformerTests.math_binary_multiply_test": {
  "lineno": 833,
  "symbols_in_volume": [
   "json.load",
   "mleap.sklearn.preprocessing.data.MathBinary",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.sklearn.preprocessing.data_test.TransformerTests.math_binary_subtract_test": {
  "lineno": 799,
  "symbols_in_volume": [
   "json.load",
   "mleap.sklearn.preprocessing.data.MathBinary",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.sklearn.preprocessing.data_test.TransformerTests.math_binary_test": {
  "lineno": 747,
  "symbols_in_volume": [
   "json.load",
   "mleap.sklearn.preprocessing.data.MathBinary",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.sklearn.preprocessing.data_test.TransformerTests.math_unary_deserialize_exp_test": {
  "lineno": 692,
  "symbols_in_volume": [
   "json.load",
   "mleap.sklearn.preprocessing.data.MathUnary",
   "numpy.exp"
  ],
  "type": "function"
 },
 "tests.sklearn.preprocessing.data_test.TransformerTests.math_unary_exp_test": {
  "lineno": 659,
  "symbols_in_volume": [
   "json.load",
   "mleap.sklearn.preprocessing.data.MathUnary",
   "numpy.exp"
  ],
  "type": "function"
 },
 "tests.sklearn.preprocessing.data_test.TransformerTests.math_unary_sin_test": {
  "lineno": 714,
  "symbols_in_volume": [
   "json.load",
   "mleap.sklearn.preprocessing.data.MathUnary",
   "numpy.sin"
  ],
  "type": "function"
 },
 "tests.sklearn.preprocessing.data_test.TransformerTests.one_hot_encoder_deserializer_test": {
  "lineno": 397,
  "symbols_in_volume": [
   "json.load",
   "mleap.sklearn.preprocessing.data.LabelEncoder",
   "mleap.sklearn.preprocessing.data.OneHotEncoder"
  ],
  "type": "function"
 },
 "tests.sklearn.preprocessing.data_test.TransformerTests.one_hot_encoder_serializer_test": {
  "lineno": 372,
  "symbols_in_volume": [
   "json.load",
   "mleap.sklearn.preprocessing.data.LabelEncoder",
   "mleap.sklearn.preprocessing.data.OneHotEncoder"
  ],
  "type": "function"
 },
 "tests.sklearn.preprocessing.data_test.TransformerTests.polynomial_expansion_test": {
  "lineno": 618,
  "symbols_in_volume": [
   "json.load",
   "mleap.sklearn.preprocessing.data.FeatureExtractor",
   "mleap.sklearn.preprocessing.data.PolynomialFeatures"
  ],
  "type": "function"
 },
 "tests.sklearn.preprocessing.data_test.TransformerTests.setUp": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "tests.sklearn.preprocessing.data_test.TransformerTests.string_map_deserializer_test": {
  "lineno": 944,
  "symbols_in_volume": [
   "mleap.sklearn.preprocessing.data.StringMap",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "tests.sklearn.preprocessing.data_test.TransformerTests.string_map_test": {
  "lineno": 901,
  "symbols_in_volume": [
   "json.load",
   "mleap.sklearn.preprocessing.data.StringMap",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "tests.sklearn.preprocessing.data_test.TransformerTests.tearDown": {
  "lineno": 39,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "tests.sklearn.preprocessing.data_test.TransformerTests.test_min_max_scaler_deserializer": {
  "lineno": 252,
  "symbols_in_volume": [
   "mleap.sklearn.preprocessing.data.FeatureExtractor",
   "mleap.sklearn.preprocessing.data.MinMaxScaler"
  ],
  "type": "function"
 },
 "tests.sklearn.preprocessing.data_test.TransformerTests.test_min_max_scaler_multi_deserializer": {
  "lineno": 281,
  "symbols_in_volume": [
   "mleap.sklearn.preprocessing.data.FeatureExtractor",
   "mleap.sklearn.preprocessing.data.MinMaxScaler"
  ],
  "type": "function"
 },
 "tests.sklearn.preprocessing.data_test.TransformerTests.test_min_max_scaler_serializer": {
  "lineno": 187,
  "symbols_in_volume": [
   "json.load",
   "mleap.sklearn.preprocessing.data.FeatureExtractor",
   "mleap.sklearn.preprocessing.data.MinMaxScaler"
  ],
  "type": "function"
 },
 "tests.sklearn.preprocessing.data_test.TransformerTests.test_standard_scaler_deserializer": {
  "lineno": 110,
  "symbols_in_volume": [
   "mleap.sklearn.preprocessing.data.FeatureExtractor",
   "mleap.sklearn.preprocessing.data.StandardScaler"
  ],
  "type": "function"
 },
 "tests.sklearn.preprocessing.data_test.TransformerTests.test_standard_scaler_multi_deserializer": {
  "lineno": 147,
  "symbols_in_volume": [
   "mleap.sklearn.preprocessing.data.FeatureExtractor",
   "mleap.sklearn.preprocessing.data.StandardScaler"
  ],
  "type": "function"
 },
 "tests.sklearn.preprocessing.data_test.TransformerTests.test_standard_scaler_serializer": {
  "lineno": 42,
  "symbols_in_volume": [
   "json.load",
   "mleap.sklearn.preprocessing.data.FeatureExtractor",
   "mleap.sklearn.preprocessing.data.StandardScaler",
   "numpy.sqrt",
   "numpy.var"
  ],
  "type": "function"
 },
 "tests.sklearn.tree": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.sklearn.tree.tree_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.sklearn.tree.tree_test.TransformerTests": {
  "lineno": 11,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.sklearn.tree.tree_test.TransformerTests.setUp": {
  "lineno": 12,
  "symbols_in_volume": [
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "tests.sklearn.tree.tree_test.TransformerTests.tearDown": {
  "lineno": 15,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "tests.sklearn.tree.tree_test.TransformerTests.test_decision_tree_classifier": {
  "lineno": 18,
  "symbols_in_volume": [
   "json.load",
   "mleap.sklearn.tree.tree.DecisionTreeClassifier"
  ],
  "type": "function"
 },
 "tests.sklearn.tree.tree_test.TransformerTests.test_decision_tree_classifier_with_iris_dataset": {
  "lineno": 55,
  "symbols_in_volume": [
   "json.load",
   "mleap.sklearn.tree.tree.DecisionTreeClassifier",
   "sklearn.datasets.load_iris"
  ],
  "type": "function"
 }
}