{
 "fishersapi": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fishersapi.catcorr": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fishersapi.catcorr.catcorr": {
  "lineno": 14,
  "symbols_in_volume": [
   "itertools.combinations",
   "itertools.product",
   "numpy.ones",
   "numpy.sum",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "fishersapi.fishersapi": {
  "lineno": null,
  "symbols_in_volume": [
   "__future__.print_function"
  ],
  "type": "module"
 },
 "fishersapi.fishersapi._add_docstring": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fishersapi.fishersapi._add_docstring.dec": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fishersapi.fishersapi._count_2_by_2": {
  "lineno": 234,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.sum"
  ],
  "type": "function"
 },
 "fishersapi.fishersapi._scipy_fishers_vec": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.zeros",
   "scipy.stats.fisher_exact"
  ],
  "type": "function"
 },
 "fishersapi.fishersapi.adjustnonnan": {
  "lineno": 288,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.copy",
   "numpy.isnan",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.frame.DataFrame",
   "pandas.core.series.Series",
   "statsmodels.api.stats.multipletests"
  ],
  "type": "function"
 },
 "fishersapi.fishersapi.fishers_frame": {
  "lineno": 143,
  "symbols_in_volume": [
   "itertools.combinations",
   "itertools.product",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "fishersapi.fishersapi.fishers_vec": {
  "lineno": 112,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.isscalar",
   "numpy.nan",
   "numpy.ones",
   "scipy.stats.fisher_exact",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "fishersapi.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fishersapi.tests.test_catcorr": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "unittest.main"
  ],
  "type": "module"
 },
 "fishersapi.tests.test_catcorr.test_catcorr": {
  "lineno": 10,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "fishersapi.tests.test_catcorr.test_catcorr.test_example": {
  "lineno": 11,
  "symbols_in_volume": [
   "fishersapi.catcorr"
  ],
  "type": "function"
 },
 "fishersapi.tests.test_fishersapi": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fishersapi.tests.test_fishersapi._gen_rand_abcd": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "fishersapi.tests.test_fishersapi.test_benchmark": {
  "lineno": 49,
  "symbols_in_volume": [
   "fishersapi._scipy_fishers_vec",
   "fishersapi.fishers_vec",
   "numpy.mean",
   "numpy.zeros",
   "time.time"
  ],
  "type": "function"
 },
 "fishersapi.tests.test_fishersapi.test_fishers_frame": {
  "lineno": 78,
  "symbols_in_volume": [
   "fishersapi.fishers_frame",
   "numpy.random.choice",
   "numpy.random.seed",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "fishersapi.tests.test_fishersapi.test_fishers_frame2": {
  "lineno": 93,
  "symbols_in_volume": [
   "fishersapi.fishers_frame",
   "numpy.array",
   "numpy.testing.assert_almost_equal",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "fishersapi.tests.test_fishersapi.test_fishers_vec": {
  "lineno": 20,
  "symbols_in_volume": [
   "fishersapi.fishers_vec",
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "scipy.stats.fisher_exact"
  ],
  "type": "function"
 },
 "fishersapi.tests.test_fishersapi.test_fishers_vec_minn": {
  "lineno": 33,
  "symbols_in_volume": [
   "fishersapi.fishers_vec",
   "numpy.isnan",
   "numpy.median",
   "numpy.sum",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "fishersapi.tests.test_fishersapi.test_integers": {
  "lineno": 44,
  "symbols_in_volume": [
   "fishersapi.fishers_vec",
   "numpy.isscalar"
  ],
  "type": "function"
 },
 "fishersapi.tests.test_fishersapi.test_options": {
  "lineno": 68,
  "symbols_in_volume": [
   "fishersapi.fishers_frame",
   "numpy.random.choice",
   "numpy.random.seed",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "fishersapi.version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 }
}