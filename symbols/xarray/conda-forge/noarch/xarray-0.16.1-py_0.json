{
 "xarray": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "xarray.pkg_resources"
   ]
  },
  "type": "module"
 },
 "xarray.__all__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "xarray.__version__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "xarray.backends": {
  "data": {},
  "type": "module"
 },
 "xarray.backends.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "xarray.backends.api": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "dask.delayed.Delayed",
    "str",
    "typing.Callable",
    "typing.Dict",
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "xarray.backends.api.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "xarray.backends.api.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "xarray.backends.api.DATAARRAY_NAME": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "xarray.backends.api.DATAARRAY_VARIABLE": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "xarray.backends.api.Delayed": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "xarray.backends.api.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "xarray.backends.api.Hashable": {
  "data": {
   "shadows": "typing.Hashable"
  },
  "type": "import"
 },
 "xarray.backends.api.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "xarray.backends.api.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "xarray.backends.api.Nio": {
  "data": {
   "shadows": "Nio"
  },
  "type": "import"
 },
 "xarray.backends.api.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "xarray.backends.api.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "xarray.backends.api.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "xarray.backends.api.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "xarray.backends.api.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "xarray.backends.api._MultiFileCloser": {
  "data": {
   "lineno": 713
  },
  "type": "class"
 },
 "xarray.backends.api._MultiFileCloser.__init__": {
  "data": {
   "lineno": 716
  },
  "type": "function"
 },
 "xarray.backends.api._MultiFileCloser.close": {
  "data": {
   "lineno": 719
  },
  "type": "function"
 },
 "xarray.backends.api._finalize_store": {
  "data": {
   "lineno": 230
  },
  "type": "function"
 },
 "xarray.backends.api._get_default_engine": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "is_grib_path",
    "is_remote_uri",
    "xarray.backends.api._get_default_engine_grib",
    "xarray.backends.api._get_default_engine_gz",
    "xarray.backends.api._get_default_engine_netcdf",
    "xarray.backends.api._get_default_engine_remote_uri"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api._get_default_engine_grib": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ImportError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api._get_default_engine_gz": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ImportError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api._get_default_engine_netcdf": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ImportError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api._get_default_engine_remote_uri": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ImportError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api._get_engine_from_magic_number": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ValueError",
    "bytes",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api._normalize_path": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "is_remote_uri"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api._protect_dataset_variables_inplace": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "xarray.backends.api._validate_append_dim_and_encoding": {
  "data": {
   "lineno": 1277,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api._validate_attrs": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "check_attr"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api._validate_attrs.check_attr": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "list",
    "numbers.Number",
    "numpy.ndarray",
    "numpy.number",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api._validate_dataset_names": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "check_name"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api._validate_dataset_names.check_name": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api._validate_datatypes_for_zarr_append": {
  "data": {
   "lineno": 1253,
   "symbols_in_volume": [
    "check_dtype"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api._validate_datatypes_for_zarr_append.check_dtype": {
  "data": {
   "lineno": 1256,
   "symbols_in_volume": [
    "ValueError",
    "numpy.bool_",
    "numpy.datetime64",
    "numpy.issubdtype",
    "numpy.number",
    "object"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api.cfgrib": {
  "data": {
   "shadows": "cfgrib"
  },
  "type": "import"
 },
 "xarray.backends.api.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "xarray.backends.api.dump_to_store": {
  "data": {
   "lineno": 1106,
   "symbols_in_volume": [
    "ArrayWriter",
    "encoder",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "xarray.backends.api.load_dataarray": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "TypeError",
    "xarray.backends.api.open_dataarray"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api.load_dataset": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "TypeError",
    "xarray.backends.api.open_dataset"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api.netCDF4": {
  "data": {
   "shadows": "netCDF4"
  },
  "type": "import"
 },
 "xarray.backends.api.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.api.open_dataarray": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "xarray.backends.api.DATAARRAY_NAME",
    "xarray.backends.api.DATAARRAY_VARIABLE",
    "xarray.backends.api.open_dataset"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api.open_dataset": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "close_on_error",
    "isinstance",
    "maybe_decode_store",
    "pathlib.Path",
    "str",
    "xarray.backends.api._get_default_engine",
    "xarray.backends.api._get_engine_from_magic_number",
    "xarray.backends.api._normalize_path",
    "xarray.backends.api.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api.open_dataset.maybe_decode_store": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "dask.base.tokenize",
    "is_remote_uri",
    "isinstance",
    "str",
    "xarray.backends.api._protect_dataset_variables_inplace"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api.open_mfdataset": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "OSError",
    "ValueError",
    "_infer_concat_order_from_positions",
    "_nested_combine",
    "combine_by_coords",
    "dict",
    "getattr",
    "getattr_",
    "glob.glob",
    "is_remote_uri",
    "isinstance",
    "list",
    "open_",
    "pathlib.Path",
    "preprocess",
    "sorted",
    "str",
    "xarray.backends.api._MultiFileCloser",
    "xarray.backends.api.dask",
    "xarray.backends.api.open_dataset"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "xarray.backends.api.pydap": {
  "data": {
   "shadows": "pydap"
  },
  "type": "import"
 },
 "xarray.backends.api.save_mfdataset": {
  "data": {
   "lineno": 1131,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "format",
    "isinstance",
    "len",
    "set",
    "type",
    "xarray.backends.api._finalize_store",
    "xarray.backends.api.dask",
    "xarray.backends.api.to_netcdf",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "xarray.backends.api.scipy.io.netcdf": {
  "data": {
   "shadows": "scipy.io.netcdf"
  },
  "type": "import"
 },
 "xarray.backends.api.to_netcdf": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "ArrayWriter",
    "KeyError",
    "NotImplementedError",
    "ValueError",
    "_get_scheduler",
    "any",
    "bool",
    "bytes",
    "dict",
    "format",
    "format.upper",
    "io.BytesIO",
    "isinstance",
    "list",
    "pathlib.Path",
    "store_open",
    "str",
    "typing.Hashable",
    "typing.Iterable",
    "typing.Mapping",
    "typing.Tuple",
    "typing.Union",
    "xarray.backends.api._finalize_store",
    "xarray.backends.api._get_default_engine",
    "xarray.backends.api._normalize_path",
    "xarray.backends.api._validate_attrs",
    "xarray.backends.api._validate_dataset_names",
    "xarray.backends.api.dask",
    "xarray.backends.api.dump_to_store"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api.to_zarr": {
  "data": {
   "lineno": 1318,
   "symbols_in_volume": [
    "ArrayWriter",
    "isinstance",
    "pathlib.Path",
    "str",
    "xarray.backends.api._finalize_store",
    "xarray.backends.api._validate_append_dim_and_encoding",
    "xarray.backends.api._validate_attrs",
    "xarray.backends.api._validate_dataset_names",
    "xarray.backends.api._validate_datatypes_for_zarr_append",
    "xarray.backends.api.dask",
    "xarray.backends.api.dump_to_store"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api.tokenize": {
  "data": {
   "shadows": "dask.base.tokenize"
  },
  "type": "import"
 },
 "xarray.backends.api.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.backends.cfgrib_": {
  "data": {
   "symbols_in_volume": [
    "SerializableLock"
   ]
  },
  "type": "module"
 },
 "xarray.backends.cfgrib_.CfGribArrayWrapper": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "xarray.backends.cfgrib_.CfGribArrayWrapper.__getitem__": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "xarray.backends.cfgrib_.CfGribArrayWrapper.__init__": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "xarray.backends.cfgrib_.CfGribArrayWrapper._getitem": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "xarray.backends.cfgrib_.CfGribDataStore": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "xarray.backends.cfgrib_.CfGribDataStore.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ensure_lock",
    "xarray.backends.cfgrib_.ECCODES_LOCK",
    "xarray.backends.cfgrib_.cfgrib"
   ]
  },
  "type": "function"
 },
 "xarray.backends.cfgrib_.CfGribDataStore.get_attrs": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "Frozen"
   ]
  },
  "type": "function"
 },
 "xarray.backends.cfgrib_.CfGribDataStore.get_dimensions": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "Frozen"
   ]
  },
  "type": "function"
 },
 "xarray.backends.cfgrib_.CfGribDataStore.get_encoding": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "xarray.backends.cfgrib_.CfGribDataStore.get_variables": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "FrozenDict"
   ]
  },
  "type": "function"
 },
 "xarray.backends.cfgrib_.CfGribDataStore.open_store_variable": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "Variable",
    "isinstance",
    "numpy.ndarray",
    "xarray.backends.cfgrib_.CfGribArrayWrapper"
   ]
  },
  "type": "function"
 },
 "xarray.backends.cfgrib_.ECCODES_LOCK": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "xarray.backends.cfgrib_.cfgrib": {
  "data": {
   "shadows": "cfgrib"
  },
  "type": "import"
 },
 "xarray.backends.cfgrib_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.common": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "xarray.backends.common.logging"
   ]
  },
  "type": "module"
 },
 "xarray.backends.common.AbstractDataStore": {
  "data": {
   "lineno": 75
  },
  "type": "class"
 },
 "xarray.backends.common.AbstractDataStore.__enter__": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractDataStore.__exit__": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractDataStore.close": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractDataStore.get_attrs": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractDataStore.get_dimensions": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractDataStore.get_encoding": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractDataStore.get_variables": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractDataStore.load": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "FrozenDict",
    "xarray.backends.common._decode_variable_name"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "xarray.backends.common.AbstractDataStore"
   ]
  },
  "type": "class"
 },
 "xarray.backends.common.AbstractWritableDataStore.encode": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore.encode_attribute": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore.encode_variable": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore.set_attribute": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore.set_attributes": {
  "data": {
   "lineno": 258
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore.set_dimension": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore.set_dimensions": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore.set_variable": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore.set_variables": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "xarray.backends.common._encode_variable_name"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore.store": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "frozenset",
    "xarray.backends.common.ArrayWriter"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore.store_dataset": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "xarray.backends.common.ArrayWriter": {
  "data": {
   "lineno": 127
  },
  "type": "class"
 },
 "xarray.backends.common.ArrayWriter.__init__": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "xarray.backends.common.ArrayWriter.add": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "is_duck_dask_array"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.ArrayWriter.sync": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "dask.array.store"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.BackendArray": {
  "data": {
   "lineno": 67
  },
  "type": "class"
 },
 "xarray.backends.common.BackendArray.__array__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.asarray",
    "slice"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.NONE_VAR_NAME": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "xarray.backends.common.WritableCFDataStore": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "xarray.backends.common.AbstractWritableDataStore"
   ]
  },
  "type": "class"
 },
 "xarray.backends.common.WritableCFDataStore.encode": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "cf_encoder"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common._decode_variable_name": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "xarray.backends.common.NONE_VAR_NAME"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common._encode_variable_name": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "xarray.backends.common.NONE_VAR_NAME"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.backends.common.find_root_and_group": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "xarray.backends.common.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "xarray.backends.common.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "xarray.backends.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.common.robust_getitem": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "Exception",
    "numpy.random.randint",
    "range",
    "xarray.backends.common.logger",
    "xarray.backends.common.time",
    "xarray.backends.common.traceback"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "xarray.backends.common.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "xarray.backends.file_manager": {
  "data": {
   "symbols_in_volume": [
    "LRUCache",
    "int",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.cast",
    "xarray.backends.file_manager.io"
   ]
  },
  "type": "module"
 },
 "xarray.backends.file_manager.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "xarray.backends.file_manager.CachingFileManager": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "xarray.backends.file_manager.FileManager"
   ]
  },
  "type": "class"
 },
 "xarray.backends.file_manager.CachingFileManager.__del__": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "RuntimeWarning",
    "acquire",
    "xarray.backends.file_manager.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.backends.file_manager.CachingFileManager.__getstate__": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "xarray.backends.file_manager.CachingFileManager.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "dict",
    "xarray.backends.file_manager._DEFAULT_MODE",
    "xarray.backends.file_manager._RefCounter",
    "xarray.backends.file_manager.threading"
   ]
  },
  "type": "function"
 },
 "xarray.backends.file_manager.CachingFileManager.__repr__": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "map",
    "repr",
    "type",
    "xarray.backends.file_manager._DEFAULT_MODE"
   ]
  },
  "type": "function"
 },
 "xarray.backends.file_manager.CachingFileManager.__setstate__": {
  "data": {
   "lineno": 263
  },
  "type": "function"
 },
 "xarray.backends.file_manager.CachingFileManager._acquire_with_cache_info": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "KeyError",
    "xarray.backends.file_manager._DEFAULT_MODE"
   ]
  },
  "type": "function"
 },
 "xarray.backends.file_manager.CachingFileManager._make_key": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "sorted",
    "tuple",
    "xarray.backends.file_manager._HashedSequence"
   ]
  },
  "type": "function"
 },
 "xarray.backends.file_manager.CachingFileManager._optional_lock": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "xarray.backends.file_manager.contextlib"
   ]
  },
  "type": "function"
 },
 "xarray.backends.file_manager.CachingFileManager.acquire": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "xarray.backends.file_manager.CachingFileManager.acquire_context": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "Exception",
    "xarray.backends.file_manager.contextlib"
   ]
  },
  "type": "function"
 },
 "xarray.backends.file_manager.CachingFileManager.close": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "xarray.backends.file_manager.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "xarray.backends.file_manager.DummyFileManager": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "xarray.backends.file_manager.FileManager"
   ]
  },
  "type": "class"
 },
 "xarray.backends.file_manager.DummyFileManager.__init__": {
  "data": {
   "lineno": 319
  },
  "type": "function"
 },
 "xarray.backends.file_manager.DummyFileManager.acquire": {
  "data": {
   "lineno": 322
  },
  "type": "function"
 },
 "xarray.backends.file_manager.DummyFileManager.acquire_context": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "xarray.backends.file_manager.contextlib"
   ]
  },
  "type": "function"
 },
 "xarray.backends.file_manager.DummyFileManager.close": {
  "data": {
   "lineno": 331
  },
  "type": "function"
 },
 "xarray.backends.file_manager.FileManager": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "xarray.backends.file_manager.FileManager.acquire": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "xarray.backends.file_manager.FileManager.acquire_context": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "xarray.backends.file_manager.FileManager.close": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "xarray.backends.file_manager._DEFAULT_MODE": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "xarray.backends.file_manager._HashedSequence": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "class"
 },
 "xarray.backends.file_manager._HashedSequence.__hash__": {
  "data": {
   "lineno": 312
  },
  "type": "function"
 },
 "xarray.backends.file_manager._HashedSequence.__init__": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "xarray.backends.file_manager._RefCounter": {
  "data": {
   "lineno": 277
  },
  "type": "class"
 },
 "xarray.backends.file_manager._RefCounter.__init__": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "xarray.backends.file_manager.threading"
   ]
  },
  "type": "function"
 },
 "xarray.backends.file_manager._RefCounter.decrement": {
  "data": {
   "lineno": 289
  },
  "type": "function"
 },
 "xarray.backends.file_manager._RefCounter.increment": {
  "data": {
   "lineno": 284
  },
  "type": "function"
 },
 "xarray.backends.file_manager.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "xarray.backends.file_manager.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "xarray.backends.file_manager.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "xarray.backends.file_manager.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "xarray.backends.file_manager.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.backends.h5netcdf_": {
  "data": {
   "symbols_in_volume": [
    "xarray.backends.h5netcdf_.functools"
   ]
  },
  "type": "module"
 },
 "xarray.backends.h5netcdf_.H5NetCDFArrayWrapper": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "xarray.backends.h5netcdf_.H5NetCDFArrayWrapper.__getitem__": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFArrayWrapper._getitem": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.ndarray",
    "tuple"
   ]
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFArrayWrapper.get_array": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore": {
  "data": {
   "lineno": 69
  },
  "type": "class"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.__init__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "DummyFileManager",
    "ValueError",
    "ensure_lock",
    "find_root_and_group",
    "is_remote_uri",
    "isinstance",
    "type",
    "xarray.backends.h5netcdf_.h5netcdf"
   ]
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore._acquire": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "_nc4_require_group",
    "xarray.backends.h5netcdf_._h5netcdf_create_group"
   ]
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.close": {
  "data": {
   "lineno": 303
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.ds": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.encode_variable": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "_encode_nc4_variable"
   ]
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.get_attrs": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "FrozenDict",
    "xarray.backends.h5netcdf_._read_attributes"
   ]
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.get_dimensions": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.get_encoding": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.get_variables": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "FrozenDict"
   ]
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.open": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "CachingFileManager",
    "ValueError",
    "classmethod",
    "cls",
    "combine_locks",
    "distutils.version.LooseVersion",
    "format",
    "get_write_lock",
    "xarray.backends.h5netcdf_.h5netcdf"
   ]
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.open_store_variable": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "Variable",
    "str",
    "xarray.backends.h5netcdf_.H5NetCDFArrayWrapper",
    "xarray.backends.h5netcdf_._read_attributes",
    "xarray.backends.h5netcdf_.h5py"
   ]
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.prepare_variable": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "_get_datatype",
    "str",
    "xarray.backends.h5netcdf_.H5NetCDFArrayWrapper",
    "xarray.backends.h5netcdf_._extract_h5nc_encoding",
    "xarray.backends.h5netcdf_.h5py"
   ]
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.set_attribute": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.set_dimension": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.sync": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.backends.h5netcdf_._extract_h5nc_encoding": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "xarray.backends.h5netcdf_._h5netcdf_create_group": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_._read_attributes": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "xarray.backends.h5netcdf_.maybe_decode_bytes"
   ]
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.backends.h5netcdf_.h5netcdf": {
  "data": {
   "shadows": "h5netcdf"
  },
  "type": "import"
 },
 "xarray.backends.h5netcdf_.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "xarray.backends.h5netcdf_.maybe_decode_bytes": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "bytes",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.locks": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "dask.distributed.Lock",
    "dask.utils.SerializableLock",
    "typing.Any",
    "typing.MutableMapping",
    "xarray.backends.locks._get_multiprocessing_lock",
    "xarray.backends.locks._get_threaded_lock",
    "xarray.backends.locks.threading",
    "xarray.backends.locks.weakref"
   ]
  },
  "type": "module"
 },
 "xarray.backends.locks.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "xarray.backends.locks.Client": {
  "data": {
   "shadows": "dask.distributed.Client"
  },
  "type": "import"
 },
 "xarray.backends.locks.CombinedLock": {
  "data": {
   "lineno": 141
  },
  "type": "class"
 },
 "xarray.backends.locks.CombinedLock.__enter__": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "xarray.backends.locks.CombinedLock.__exit__": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "xarray.backends.locks.CombinedLock.__init__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "xarray.backends.locks.CombinedLock.__repr__": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "xarray.backends.locks.CombinedLock.acquire": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "all",
    "xarray.backends.locks.acquire"
   ]
  },
  "type": "function"
 },
 "xarray.backends.locks.CombinedLock.locked": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "xarray.backends.locks.CombinedLock.release": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "xarray.backends.locks.DistributedLock": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "xarray.backends.locks.DummyLock": {
  "data": {
   "lineno": 173
  },
  "type": "class"
 },
 "xarray.backends.locks.DummyLock.__enter__": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "xarray.backends.locks.DummyLock.__exit__": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "xarray.backends.locks.DummyLock.acquire": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "xarray.backends.locks.DummyLock.locked": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "xarray.backends.locks.DummyLock.release": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "xarray.backends.locks.HDF5_LOCK": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "xarray.backends.locks.MutableMapping": {
  "data": {
   "shadows": "typing.MutableMapping"
  },
  "type": "import"
 },
 "xarray.backends.locks.NETCDFC_LOCK": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "xarray.backends.locks.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "xarray.backends.locks.SerializableLock": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "xarray.backends.locks._LOCK_MAKERS": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "xarray.backends.locks._get_lock_maker": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "xarray.backends.locks._LOCK_MAKERS"
   ]
  },
  "type": "function"
 },
 "xarray.backends.locks._get_multiprocessing_lock": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "xarray.backends.locks.multiprocessing"
   ]
  },
  "type": "function"
 },
 "xarray.backends.locks._get_scheduler": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "dask.base.get_scheduler",
    "dask.distributed.Client",
    "isinstance",
    "str",
    "typing.Optional",
    "xarray.backends.locks.dask"
   ]
  },
  "type": "function"
 },
 "xarray.backends.locks._get_threaded_lock": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "KeyError",
    "xarray.backends.locks.threading"
   ]
  },
  "type": "function"
 },
 "xarray.backends.locks.acquire": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "dask.distributed.Lock",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.backends.locks.combine_locks": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "xarray.backends.locks.CombinedLock",
    "xarray.backends.locks.DummyLock"
   ]
  },
  "type": "function"
 },
 "xarray.backends.locks.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "xarray.backends.locks.ensure_lock": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "xarray.backends.locks.DummyLock"
   ]
  },
  "type": "function"
 },
 "xarray.backends.locks.get_scheduler": {
  "data": {
   "shadows": "dask.base.get_scheduler"
  },
  "type": "import"
 },
 "xarray.backends.locks.get_write_lock": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "lock_maker",
    "xarray.backends.locks._get_lock_maker",
    "xarray.backends.locks._get_scheduler"
   ]
  },
  "type": "function"
 },
 "xarray.backends.locks.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "xarray.backends.locks.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "xarray.backends.locks.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "xarray.backends.lru_cache": {
  "data": {
   "symbols_in_volume": [
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "xarray.backends.lru_cache.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "xarray.backends.lru_cache.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "xarray.backends.lru_cache.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "xarray.backends.lru_cache.K": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "xarray.backends.lru_cache.LRUCache": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "int",
    "typing.Any",
    "typing.Callable",
    "typing.MutableMapping",
    "typing.Optional",
    "xarray.backends.lru_cache.K",
    "xarray.backends.lru_cache.V",
    "xarray.backends.lru_cache.threading"
   ]
  },
  "type": "class"
 },
 "xarray.backends.lru_cache.LRUCache.__delitem__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "xarray.backends.lru_cache.K"
   ]
  },
  "type": "function"
 },
 "xarray.backends.lru_cache.LRUCache.__getitem__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "xarray.backends.lru_cache.K",
    "xarray.backends.lru_cache.V"
   ]
  },
  "type": "function"
 },
 "xarray.backends.lru_cache.LRUCache.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "collections.OrderedDict",
    "int",
    "isinstance",
    "typing.Any",
    "typing.Callable",
    "xarray.backends.lru_cache.K",
    "xarray.backends.lru_cache.V",
    "xarray.backends.lru_cache.threading"
   ]
  },
  "type": "function"
 },
 "xarray.backends.lru_cache.LRUCache.__iter__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "iter",
    "list",
    "typing.Iterator",
    "xarray.backends.lru_cache.K"
   ]
  },
  "type": "function"
 },
 "xarray.backends.lru_cache.LRUCache.__len__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.backends.lru_cache.LRUCache.__setitem__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "xarray.backends.lru_cache.K",
    "xarray.backends.lru_cache.V"
   ]
  },
  "type": "function"
 },
 "xarray.backends.lru_cache.LRUCache._enforce_size_limit": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.backends.lru_cache.LRUCache.maxsize": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ValueError",
    "int"
   ]
  },
  "type": "function"
 },
 "xarray.backends.lru_cache.MutableMapping": {
  "data": {
   "shadows": "typing.MutableMapping"
  },
  "type": "import"
 },
 "xarray.backends.lru_cache.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "xarray.backends.lru_cache.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "xarray.backends.lru_cache.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "xarray.backends.lru_cache.V": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "xarray.backends.lru_cache.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "xarray.backends.memory": {
  "data": {},
  "type": "module"
 },
 "xarray.backends.memory.InMemoryDataStore": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "xarray.backends.memory.InMemoryDataStore.__init__": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "xarray.backends.memory.InMemoryDataStore.get_attrs": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "xarray.backends.memory.InMemoryDataStore.get_dimensions": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "xarray.backends.memory.InMemoryDataStore.get_variables": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "xarray.backends.memory.InMemoryDataStore.prepare_variable": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "Variable",
    "numpy.empty_like"
   ]
  },
  "type": "function"
 },
 "xarray.backends.memory.InMemoryDataStore.set_attribute": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "xarray.backends.memory.copy"
   ]
  },
  "type": "function"
 },
 "xarray.backends.memory.InMemoryDataStore.set_dimension": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "xarray.backends.memory.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "xarray.backends.memory.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.netCDF4_": {
  "data": {
   "symbols_in_volume": [
    "combine_locks"
   ]
  },
  "type": "module"
 },
 "xarray.backends.netCDF4_.BaseNetCDF4Array": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "xarray.backends.netCDF4_.BaseNetCDF4Array.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.dtype",
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.BaseNetCDF4Array.__setitem__": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.BaseNetCDF4Array.get_array": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NETCDF4_PYTHON_LOCK": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "xarray.backends.netCDF4_.NetCDF4ArrayWrapper": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "xarray.backends.netCDF4_.BaseNetCDF4Array"
   ]
  },
  "type": "class"
 },
 "xarray.backends.netCDF4_.NetCDF4ArrayWrapper.__getitem__": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4ArrayWrapper._getitem": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "IndexError",
    "RuntimeError",
    "getitem",
    "xarray.backends.netCDF4_.functools",
    "xarray.backends.netCDF4_.operator"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4ArrayWrapper.get_array": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "AttributeError",
    "contextlib.suppress"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore": {
  "data": {
   "lineno": 277
  },
  "type": "class"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.__init__": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "DummyFileManager",
    "ValueError",
    "ensure_lock",
    "find_root_and_group",
    "is_remote_uri",
    "isinstance",
    "type",
    "xarray.backends.netCDF4_.NETCDF4_PYTHON_LOCK",
    "xarray.backends.netCDF4_.netCDF4"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore._acquire": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "xarray.backends.netCDF4_._nc4_require_group"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.close": {
  "data": {
   "lineno": 491
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.ds": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.encode_variable": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "encode_nc3_variable",
    "xarray.backends.netCDF4_._encode_nc4_variable",
    "xarray.backends.netCDF4_._force_native_endianness"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.get_attrs": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "FrozenDict"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.get_dimensions": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "FrozenDict",
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.get_encoding": {
  "data": {
   "lineno": 412
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.get_variables": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "FrozenDict"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.open": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "CachingFileManager",
    "classmethod",
    "cls",
    "combine_locks",
    "dict",
    "format",
    "format.startswith",
    "get_write_lock",
    "is_remote_uri",
    "xarray.backends.netCDF4_.NETCDF4_PYTHON_LOCK",
    "xarray.backends.netCDF4_.netCDF4"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.open_store_variable": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "Variable",
    "pop_to",
    "tuple",
    "xarray.backends.netCDF4_.NetCDF4ArrayWrapper",
    "xarray.backends.netCDF4_._ensure_fill_value_valid"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.prepare_variable": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "NotImplementedError",
    "str",
    "xarray.backends.netCDF4_.NetCDF4ArrayWrapper",
    "xarray.backends.netCDF4_._extract_nc4_variable_encoding",
    "xarray.backends.netCDF4_._get_datatype"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.set_attribute": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "encode_nc3_attr_value",
    "xarray.backends.netCDF4_._is_list_of_strings"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.set_dimension": {
  "data": {
   "lineno": 419
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.sync": {
  "data": {
   "lineno": 488
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_._check_encoding_dtype_is_vlen_string": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "AssertionError",
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_._encode_nc4_variable": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_._endian_lookup": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "xarray.backends.netCDF4_._ensure_fill_value_valid": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "numpy.string_"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_._extract_nc4_variable_encoding": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_._force_native_endianness": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "NotImplementedError",
    "Variable"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_._get_datatype": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ValueError",
    "xarray.backends.netCDF4_._check_encoding_dtype_is_vlen_string",
    "xarray.backends.netCDF4_._nc4_dtype"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_._is_list_of_strings": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_._nc4_dtype": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ValueError",
    "str",
    "xarray.backends.netCDF4_._check_encoding_dtype_is_vlen_string"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_._nc4_require_group": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "KeyError",
    "OSError",
    "ValueError",
    "create_group",
    "isinstance",
    "str",
    "xarray.backends.netCDF4_._netcdf4_create_group"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_._netcdf4_create_group": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.backends.netCDF4_.netCDF4": {
  "data": {
   "shadows": "netCDF4"
  },
  "type": "import"
 },
 "xarray.backends.netCDF4_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.netCDF4_.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "xarray.backends.netCDF4_.suppress": {
  "data": {
   "shadows": "contextlib.suppress"
  },
  "type": "import"
 },
 "xarray.backends.netcdf3": {
  "data": {},
  "type": "module"
 },
 "xarray.backends.netcdf3.STRING_ENCODING": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "xarray.backends.netcdf3._isalnumMUTF8": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netcdf3._nc3_dtype_coercions": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "xarray.backends.netcdf3._reserved_names": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "xarray.backends.netcdf3._specialchars": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "xarray.backends.netcdf3.coerce_nc3_dtype": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "str",
    "xarray.backends.netcdf3._nc3_dtype_coercions"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netcdf3.encode_nc3_attr_value": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ValueError",
    "bytes",
    "isinstance",
    "numpy.atleast_1d",
    "str",
    "xarray.backends.netcdf3.STRING_ENCODING",
    "xarray.backends.netcdf3.coerce_nc3_dtype"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netcdf3.encode_nc3_attrs": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "xarray.backends.netcdf3.encode_nc3_attr_value"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netcdf3.encode_nc3_variable": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "Variable",
    "xarray.backends.netcdf3.coerce_nc3_dtype",
    "xarray.backends.netcdf3.encode_nc3_attrs"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netcdf3.is_valid_nc3_name": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "len",
    "str",
    "xarray.backends.netcdf3._isalnumMUTF8",
    "xarray.backends.netcdf3._reserved_names",
    "xarray.backends.netcdf3._specialchars",
    "xarray.backends.netcdf3.unicodedata"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netcdf3.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.netcdf3.unicodedata": {
  "data": {
   "shadows": "unicodedata"
  },
  "type": "import"
 },
 "xarray.backends.pseudonetcdf_": {
  "data": {
   "symbols_in_volume": [
    "combine_locks"
   ]
  },
  "type": "module"
 },
 "xarray.backends.pseudonetcdf_.PNETCDF_LOCK": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "xarray.backends.pseudonetcdf_.PncArrayWrapper": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "xarray.backends.pseudonetcdf_.PncArrayWrapper.__getitem__": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "xarray.backends.pseudonetcdf_.PncArrayWrapper.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pseudonetcdf_.PncArrayWrapper._getitem": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "xarray.backends.pseudonetcdf_.PncArrayWrapper.get_array": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "xarray.backends.pseudonetcdf_.PseudoNetCDFDataStore": {
  "data": {
   "lineno": 37
  },
  "type": "class"
 },
 "xarray.backends.pseudonetcdf_.PseudoNetCDFDataStore.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ensure_lock"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pseudonetcdf_.PseudoNetCDFDataStore.close": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "xarray.backends.pseudonetcdf_.PseudoNetCDFDataStore.ds": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pseudonetcdf_.PseudoNetCDFDataStore.get_attrs": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "Frozen",
    "getattr"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pseudonetcdf_.PseudoNetCDFDataStore.get_dimensions": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "Frozen"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pseudonetcdf_.PseudoNetCDFDataStore.get_encoding": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "xarray.backends.pseudonetcdf_.PseudoNetCDFDataStore.get_variables": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "FrozenDict"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pseudonetcdf_.PseudoNetCDFDataStore.open": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "CachingFileManager",
    "PseudoNetCDF.pncopen",
    "classmethod",
    "cls",
    "xarray.backends.pseudonetcdf_.PNETCDF_LOCK"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pseudonetcdf_.PseudoNetCDFDataStore.open_store_variable": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "Variable",
    "getattr",
    "xarray.backends.pseudonetcdf_.PncArrayWrapper"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pseudonetcdf_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.pseudonetcdf_.pncopen": {
  "data": {
   "shadows": "PseudoNetCDF.pncopen"
  },
  "type": "import"
 },
 "xarray.backends.pydap_": {
  "data": {},
  "type": "module"
 },
 "xarray.backends.pydap_.PydapArrayWrapper": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "xarray.backends.pydap_.PydapArrayWrapper.__getitem__": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "xarray.backends.pydap_.PydapArrayWrapper.__init__": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "xarray.backends.pydap_.PydapArrayWrapper._getitem": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "getattr",
    "isinstance",
    "len",
    "numpy.squeeze",
    "robust_getitem",
    "tuple"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pydap_.PydapArrayWrapper.dtype": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pydap_.PydapArrayWrapper.shape": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pydap_.PydapDataStore": {
  "data": {
   "lineno": 59
  },
  "type": "class"
 },
 "xarray.backends.pydap_.PydapDataStore.__init__": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "xarray.backends.pydap_.PydapDataStore.get_attrs": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "Frozen",
    "xarray.backends.pydap_._fix_attributes"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pydap_.PydapDataStore.get_dimensions": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "Frozen"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pydap_.PydapDataStore.get_variables": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "FrozenDict"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pydap_.PydapDataStore.open": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pydap_.PydapDataStore.open_store_variable": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "Variable",
    "xarray.backends.pydap_.PydapArrayWrapper",
    "xarray.backends.pydap_._fix_attributes"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pydap_._fix_attributes": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "dict",
    "is_dict_like",
    "list"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pydap_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.pydap_.pydap.client": {
  "data": {
   "shadows": "pydap.client"
  },
  "type": "import"
 },
 "xarray.backends.pynio_": {
  "data": {
   "symbols_in_volume": [
    "SerializableLock",
    "combine_locks",
    "xarray.backends.pynio_.NCL_LOCK"
   ]
  },
  "type": "module"
 },
 "xarray.backends.pynio_.NCL_LOCK": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "xarray.backends.pynio_.Nio": {
  "data": {
   "shadows": "Nio"
  },
  "type": "import"
 },
 "xarray.backends.pynio_.NioArrayWrapper": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "xarray.backends.pynio_.NioArrayWrapper.__getitem__": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "xarray.backends.pynio_.NioArrayWrapper.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pynio_.NioArrayWrapper._getitem": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "xarray.backends.pynio_.NioArrayWrapper.get_array": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "xarray.backends.pynio_.NioDataStore": {
  "data": {
   "lineno": 43
  },
  "type": "class"
 },
 "xarray.backends.pynio_.NioDataStore.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "CachingFileManager",
    "ensure_lock",
    "xarray.backends.pynio_.Nio",
    "xarray.backends.pynio_.PYNIO_LOCK"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pynio_.NioDataStore.close": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "xarray.backends.pynio_.NioDataStore.ds": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pynio_.NioDataStore.get_attrs": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "Frozen"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pynio_.NioDataStore.get_dimensions": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "Frozen"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pynio_.NioDataStore.get_encoding": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "xarray.backends.pynio_.NioDataStore.get_variables": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "FrozenDict"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pynio_.NioDataStore.open_store_variable": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "Variable",
    "xarray.backends.pynio_.NioArrayWrapper"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pynio_.PYNIO_LOCK": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "xarray.backends.pynio_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.rasterio_": {
  "data": {
   "symbols_in_volume": [
    "SerializableLock"
   ]
  },
  "type": "module"
 },
 "xarray.backends.rasterio_.RASTERIO_LOCK": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "xarray.backends.rasterio_.RasterioArrayWrapper": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "xarray.backends.rasterio_.RasterioArrayWrapper.__getitem__": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "xarray.backends.rasterio_.RasterioArrayWrapper.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "numpy.asarray",
    "numpy.dtype",
    "rasterio.vrt.WarpedVRT"
   ]
  },
  "type": "function"
 },
 "xarray.backends.rasterio_.RasterioArrayWrapper._get_indexer": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "enumerate",
    "is_scalar",
    "isinstance",
    "len",
    "list",
    "numpy.arange",
    "numpy.asarray",
    "numpy.ix_",
    "numpy.max",
    "numpy.min",
    "numpy.ndarray",
    "slice",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.backends.rasterio_.RasterioArrayWrapper._getitem": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "any",
    "len",
    "numpy.squeeze",
    "numpy.zeros",
    "rasterio.vrt.WarpedVRT",
    "tuple"
   ]
  },
  "type": "function"
 },
 "xarray.backends.rasterio_.RasterioArrayWrapper.dtype": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.backends.rasterio_.RasterioArrayWrapper.shape": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.backends.rasterio_.WarpedVRT": {
  "data": {
   "shadows": "rasterio.vrt.WarpedVRT"
  },
  "type": "import"
 },
 "xarray.backends.rasterio_._ERROR_MSG": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "xarray.backends.rasterio_._parse_envi": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "xarray.backends.rasterio_._parse_envi.default": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "xarray.backends.rasterio_._parse_envi.parsevec": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "numpy.fromstring"
   ]
  },
  "type": "function"
 },
 "xarray.backends.rasterio_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.rasterio_.open_rasterio": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "AttributeError",
    "CachingFileManager",
    "DataArray",
    "OSError",
    "RuntimeWarning",
    "ValueError",
    "any",
    "dask.base.tokenize",
    "dict",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "numpy.arange",
    "numpy.asarray",
    "numpy.nan",
    "numpy.ndarray",
    "numpy.uint8",
    "numpy.zeros",
    "rasterio.vrt.WarpedVRT",
    "tuple",
    "xarray.backends.rasterio_.RASTERIO_LOCK",
    "xarray.backends.rasterio_.RasterioArrayWrapper",
    "xarray.backends.rasterio_._parse_envi",
    "xarray.backends.rasterio_.os",
    "xarray.backends.rasterio_.rasterio",
    "xarray.backends.rasterio_.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.backends.rasterio_.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "xarray.backends.rasterio_.rasterio": {
  "data": {
   "shadows": "rasterio"
  },
  "type": "import"
 },
 "xarray.backends.rasterio_.tokenize": {
  "data": {
   "shadows": "dask.base.tokenize"
  },
  "type": "import"
 },
 "xarray.backends.rasterio_.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.backends.scipy_": {
  "data": {},
  "type": "module"
 },
 "xarray.backends.scipy_.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "xarray.backends.scipy_.ScipyArrayWrapper": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "xarray.backends.scipy_.ScipyArrayWrapper.__getitem__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "NumpyIndexingAdapter",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyArrayWrapper.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.dtype",
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyArrayWrapper.__setitem__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "Ellipsis",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyArrayWrapper.get_variable": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore": {
  "data": {
   "lineno": 100
  },
  "type": "class"
 },
 "xarray.backends.scipy_.ScipyDataStore.__init__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "CachingFileManager",
    "DummyFileManager",
    "ValueError",
    "dict",
    "ensure_lock",
    "format",
    "get_write_lock",
    "isinstance",
    "str",
    "xarray.backends.scipy_._open_scipy_netcdf"
   ]
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore._validate_attr_key": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "ValueError",
    "is_valid_nc3_name"
   ]
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.close": {
  "data": {
   "lineno": 223
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.ds": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.encode_variable": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "encode_nc3_variable"
   ]
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.get_attrs": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "Frozen",
    "xarray.backends.scipy_._decode_attrs"
   ]
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.get_dimensions": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "Frozen"
   ]
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.get_encoding": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.get_variables": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "FrozenDict"
   ]
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.open_store_variable": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "Variable",
    "xarray.backends.scipy_.ScipyArrayWrapper",
    "xarray.backends.scipy_._decode_attrs"
   ]
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.prepare_variable": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "setattr",
    "xarray.backends.scipy_.ScipyArrayWrapper"
   ]
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.set_attribute": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "encode_nc3_attr_value",
    "setattr"
   ]
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.set_dimension": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "ValueError",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.sync": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "xarray.backends.scipy_._decode_attrs": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "xarray.backends.scipy_._decode_string"
   ]
  },
  "type": "function"
 },
 "xarray.backends.scipy_._decode_string": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "bytes",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.backends.scipy_._open_scipy_netcdf": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bytes",
    "io.BytesIO",
    "isinstance",
    "str",
    "xarray.backends.scipy_.gzip"
   ]
  },
  "type": "function"
 },
 "xarray.backends.scipy_.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "xarray.backends.scipy_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.scipy_.scipy.io": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "xarray.backends.zarr": {
  "data": {},
  "type": "module"
 },
 "xarray.backends.zarr.DIMENSION_KEY": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "xarray.backends.zarr.ZarrArrayWrapper": {
  "data": {
   "lineno": 37
  },
  "type": "class"
 },
 "xarray.backends.zarr.ZarrArrayWrapper.__getitem__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrArrayWrapper.__init__": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrArrayWrapper.get_array": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore": {
  "data": {
   "lineno": 259
  },
  "type": "class"
 },
 "xarray.backends.zarr.ZarrStore.__init__": {
  "data": {
   "lineno": 295
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.close": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "xarray.backends.zarr.zarr"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.encode_attribute": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "xarray.backends.zarr.encode_zarr_attr_value"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.encode_variable": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "xarray.backends.zarr.encode_zarr_variable"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.get_attrs": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.get_dimensions": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "xarray.backends.zarr.DIMENSION_KEY",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.get_variables": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "FrozenDict"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.open_group": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "dict",
    "xarray.backends.zarr.zarr"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.open_store_variable": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "Variable",
    "dict",
    "getattr",
    "xarray.backends.zarr.DIMENSION_KEY",
    "xarray.backends.zarr.ZarrArrayWrapper",
    "xarray.backends.zarr._get_zarr_dims_and_attrs"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.set_attributes": {
  "data": {
   "lineno": 354
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.set_dimensions": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.set_variables": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "_encode_variable_name",
    "len",
    "list",
    "slice",
    "str",
    "tuple",
    "xarray.backends.zarr.DIMENSION_KEY",
    "xarray.backends.zarr.extract_zarr_variable_encoding"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.store": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "_encode_variable_name",
    "frozenset",
    "len",
    "set",
    "xarray.backends.zarr.open_zarr"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.sync": {
  "data": {
   "lineno": 421
  },
  "type": "function"
 },
 "xarray.backends.zarr._determine_zarr_chunks": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "AssertionError",
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "any",
    "int",
    "isinstance",
    "len",
    "set",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr._get_zarr_dims_and_attrs": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "HiddenKeyDict",
    "KeyError"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr.dask.array": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.backends.zarr.encode_zarr_attr_value": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "isinstance",
    "numpy.generic",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr.encode_zarr_variable": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "xarray.backends.zarr.extract_zarr_variable_encoding": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "xarray.backends.zarr._determine_zarr_chunks"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.zarr.open_zarr": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "FutureWarning",
    "ImportError",
    "TypeError",
    "ValueError",
    "dict",
    "dict.fromkeys",
    "int",
    "isinstance",
    "len",
    "maybe_chunk",
    "maybe_decode_store",
    "tuple",
    "xarray.backends.zarr.ZarrStore",
    "xarray.backends.zarr.warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr.open_zarr.get_chunk": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "any",
    "dict",
    "int",
    "isinstance",
    "list",
    "tuple",
    "xarray.backends.zarr.warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr.open_zarr.maybe_chunk": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "dask.base.tokenize",
    "get_chunk",
    "tuple"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr.open_zarr.maybe_decode_store": {
  "data": {
   "lineno": 642
  },
  "type": "function"
 },
 "xarray.backends.zarr.tokenize": {
  "data": {
   "shadows": "dask.base.tokenize"
  },
  "type": "import"
 },
 "xarray.backends.zarr.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.backends.zarr.zarr": {
  "data": {
   "shadows": "zarr"
  },
  "type": "import"
 },
 "xarray.coding": {
  "data": {},
  "type": "module"
 },
 "xarray.coding.cftime_offsets": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "xarray.coding.cftime_offsets.Day",
    "xarray.coding.cftime_offsets.Hour",
    "xarray.coding.cftime_offsets.Minute",
    "xarray.coding.cftime_offsets.MonthBegin",
    "xarray.coding.cftime_offsets.MonthEnd",
    "xarray.coding.cftime_offsets.QuarterBegin",
    "xarray.coding.cftime_offsets.QuarterEnd",
    "xarray.coding.cftime_offsets.Second",
    "xarray.coding.cftime_offsets.YearBegin",
    "xarray.coding.cftime_offsets.YearEnd",
    "xarray.coding.cftime_offsets._FREQUENCIES",
    "xarray.coding.cftime_offsets._FREQUENCY_CONDITION"
   ]
  },
  "type": "module"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "str",
    "typing.ClassVar",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset.__add__": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset.__apply__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "NotImplemented"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset.__eq__": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset.__init__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset.__mul__": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset.__ne__": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset.__neg__": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset.__radd__": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset.__repr__": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset.__rmul__": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset.__rsub__": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "type",
    "xarray.coding.cftime_offsets.BaseCFTimeOffset"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset.__str__": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset.__sub__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "NotImplemented",
    "TypeError",
    "isinstance",
    "type",
    "xarray.coding.cftime_offsets.cftime"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset._get_offset_day": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets._get_day_of_month"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset.onOffset": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset.rollback": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset.rollforward": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset.rule_code": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.CFTIME_TICKS": {
  "data": {
   "lineno": 650
  },
  "type": "constant"
 },
 "xarray.coding.cftime_offsets.ClassVar": {
  "data": {
   "shadows": "typing.ClassVar"
  },
  "type": "import"
 },
 "xarray.coding.cftime_offsets.Day": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.BaseCFTimeOffset"
   ]
  },
  "type": "class"
 },
 "xarray.coding.cftime_offsets.Day.__apply__": {
  "data": {
   "lineno": 545
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.Day.as_timedelta": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.Hour": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.BaseCFTimeOffset"
   ]
  },
  "type": "class"
 },
 "xarray.coding.cftime_offsets.Hour.__apply__": {
  "data": {
   "lineno": 555
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.Hour.as_timedelta": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.coding.cftime_offsets.Minute": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.BaseCFTimeOffset"
   ]
  },
  "type": "class"
 },
 "xarray.coding.cftime_offsets.Minute.__apply__": {
  "data": {
   "lineno": 565
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.Minute.as_timedelta": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.MonthBegin": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.BaseCFTimeOffset"
   ]
  },
  "type": "class"
 },
 "xarray.coding.cftime_offsets.MonthBegin.__apply__": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets._adjust_n_months",
    "xarray.coding.cftime_offsets._shift_month"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.MonthBegin.onOffset": {
  "data": {
   "lineno": 320
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.MonthEnd": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.BaseCFTimeOffset"
   ]
  },
  "type": "class"
 },
 "xarray.coding.cftime_offsets.MonthEnd.__apply__": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets._adjust_n_months",
    "xarray.coding.cftime_offsets._days_in_month",
    "xarray.coding.cftime_offsets._shift_month"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.MonthEnd.onOffset": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets._days_in_month"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "xarray.coding.cftime_offsets.QuarterBegin": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.QuarterOffset"
   ]
  },
  "type": "class"
 },
 "xarray.coding.cftime_offsets.QuarterBegin.rollback": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.QuarterBegin"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.QuarterBegin.rollforward": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.QuarterBegin"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.QuarterEnd": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.QuarterOffset"
   ]
  },
  "type": "class"
 },
 "xarray.coding.cftime_offsets.QuarterEnd.rollback": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.QuarterEnd"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.QuarterEnd.rollforward": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.QuarterEnd"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.QuarterOffset": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.ClassVar",
    "xarray.coding.cftime_offsets.BaseCFTimeOffset"
   ]
  },
  "type": "class"
 },
 "xarray.coding.cftime_offsets.QuarterOffset.__apply__": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets._shift_month",
    "xarray.coding.cftime_offsets.roll_qtrday"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.QuarterOffset.__init__": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.BaseCFTimeOffset",
    "xarray.coding.cftime_offsets._validate_month"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.QuarterOffset.__mul__": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.QuarterOffset.__str__": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.QuarterOffset.__sub__": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "NotImplemented",
    "TypeError",
    "isinstance",
    "type",
    "xarray.coding.cftime_offsets.cftime"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.QuarterOffset.onOffset": {
  "data": {
   "lineno": 378
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.QuarterOffset.rule_code": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets._MONTH_ABBREVIATIONS"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.Second": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.BaseCFTimeOffset"
   ]
  },
  "type": "class"
 },
 "xarray.coding.cftime_offsets.Second.__apply__": {
  "data": {
   "lineno": 575
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.Second.as_timedelta": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.YearBegin": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.YearOffset"
   ]
  },
  "type": "class"
 },
 "xarray.coding.cftime_offsets.YearBegin.onOffset": {
  "data": {
   "lineno": 494
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.YearBegin.rollback": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.YearBegin"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.YearBegin.rollforward": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.YearBegin"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.YearEnd": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.YearOffset"
   ]
  },
  "type": "class"
 },
 "xarray.coding.cftime_offsets.YearEnd.onOffset": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets._days_in_month"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.YearEnd.rollback": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.YearEnd"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.YearEnd.rollforward": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.YearEnd"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.YearOffset": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.ClassVar",
    "xarray.coding.cftime_offsets.BaseCFTimeOffset"
   ]
  },
  "type": "class"
 },
 "xarray.coding.cftime_offsets.YearOffset.__apply__": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets._adjust_n_years",
    "xarray.coding.cftime_offsets._get_day_of_month",
    "xarray.coding.cftime_offsets._shift_month"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.YearOffset.__init__": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.BaseCFTimeOffset",
    "xarray.coding.cftime_offsets._validate_month"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.YearOffset.__mul__": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.YearOffset.__str__": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.YearOffset.__sub__": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "NotImplemented",
    "TypeError",
    "isinstance",
    "type",
    "xarray.coding.cftime_offsets.cftime"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.YearOffset.rule_code": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets._MONTH_ABBREVIATIONS"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets._FREQUENCIES": {
  "data": {
   "lineno": 579
  },
  "type": "constant"
 },
 "xarray.coding.cftime_offsets._FREQUENCY_CONDITION": {
  "data": {
   "lineno": 644
  },
  "type": "constant"
 },
 "xarray.coding.cftime_offsets._MONTH_ABBREVIATIONS": {
  "data": {
   "lineno": 339
  },
  "type": "constant"
 },
 "xarray.coding.cftime_offsets._PATTERN": {
  "data": {
   "lineno": 645
  },
  "type": "constant"
 },
 "xarray.coding.cftime_offsets._adjust_n_months": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets._adjust_n_years": {
  "data": {
   "lineno": 211
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets._days_in_month": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "datetime.timedelta",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets._generate_linear_range": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "format_cftime_datetime",
    "numpy.linspace",
    "xarray.coding.cftime_offsets.cftime"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets._generate_range": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets._get_day_of_month": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "xarray.coding.cftime_offsets._days_in_month"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets._maybe_normalize_date": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.normalize_date"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets._shift_month": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "ValueError",
    "distutils.version.LooseVersion",
    "type",
    "xarray.coding.cftime_offsets._days_in_month",
    "xarray.coding.cftime_offsets.cftime"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets._validate_month": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.cftime": {
  "data": {
   "shadows": "cftime"
  },
  "type": "import"
 },
 "xarray.coding.cftime_offsets.cftime_range": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "CFTimeIndex",
    "ValueError",
    "count_not_none",
    "len",
    "list",
    "numpy.array",
    "xarray.coding.cftime_offsets._generate_linear_range",
    "xarray.coding.cftime_offsets._generate_range",
    "xarray.coding.cftime_offsets._maybe_normalize_date",
    "xarray.coding.cftime_offsets.to_cftime_datetime",
    "xarray.coding.cftime_offsets.to_offset"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.get_date_type": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ImportError",
    "xarray.coding.cftime_offsets.cftime"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.normalize_date": {
  "data": {
   "lineno": 695
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.coding.cftime_offsets.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "xarray.coding.cftime_offsets.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "xarray.coding.cftime_offsets.roll_qtrday": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets._get_day_of_month"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "xarray.coding.cftime_offsets.to_cftime_datetime": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_parse_iso8601_with_reso",
    "isinstance",
    "str",
    "xarray.coding.cftime_offsets.cftime",
    "xarray.coding.cftime_offsets.get_date_type"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.to_offset": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "int",
    "isinstance",
    "xarray.coding.cftime_offsets.BaseCFTimeOffset",
    "xarray.coding.cftime_offsets._FREQUENCIES",
    "xarray.coding.cftime_offsets._PATTERN",
    "xarray.coding.cftime_offsets.re"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings": {
  "data": {},
  "type": "module"
 },
 "xarray.coding.strings.CharacterArrayCoder": {
  "data": {
   "lineno": 102
  },
  "type": "class"
 },
 "xarray.coding.strings.CharacterArrayCoder.decode": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "Variable",
    "unpack_for_decoding",
    "xarray.coding.strings.char_to_bytes"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings.CharacterArrayCoder.encode": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "Variable",
    "str",
    "unpack_for_encoding",
    "xarray.coding.strings.bytes_to_char",
    "xarray.coding.strings.ensure_fixed_length_bytes"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings.EncodedStringCoder": {
  "data": {
   "lineno": 39
  },
  "type": "class"
 },
 "xarray.coding.strings.EncodedStringCoder.__init__": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "xarray.coding.strings.EncodedStringCoder.decode": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "Variable",
    "functools.partial",
    "lazy_elemwise_func",
    "numpy.dtype",
    "object",
    "pop_to",
    "unpack_for_decoding"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings.EncodedStringCoder.encode": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "NotImplementedError",
    "Variable",
    "safe_setitem",
    "unpack_for_encoding",
    "xarray.coding.strings.encode_string_array",
    "xarray.coding.strings.is_unicode_dtype"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings.StackedBytesArray": {
  "data": {
   "lineno": 198
  },
  "type": "class"
 },
 "xarray.coding.strings.StackedBytesArray.__getitem__": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "IndexError",
    "slice",
    "type",
    "xarray.coding.strings._numpy_char_to_bytes"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings.StackedBytesArray.__init__": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings.StackedBytesArray.__repr__": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings.StackedBytesArray.dtype": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "numpy.dtype",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings.StackedBytesArray.shape": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings._numpy_bytes_to_char": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.string_"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings._numpy_char_to_bytes": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings.bytes_to_char": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "ValueError",
    "dask.array.map_blocks",
    "is_duck_dask_array",
    "xarray.coding.strings._numpy_bytes_to_char"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings.char_to_bytes": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "ValueError",
    "dask.array.map_blocks",
    "is_duck_dask_array",
    "len",
    "numpy.dtype",
    "numpy.string_",
    "numpy.zeros",
    "str",
    "xarray.coding.strings.StackedBytesArray"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings.check_vlen_dtype": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "xarray.coding.strings.create_vlen_dtype": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.coding.strings.decode_bytes_array": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "object"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings.encode_string_array": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "bytes",
    "numpy.array",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings.ensure_fixed_length_bytes": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "Variable",
    "bytes",
    "numpy.asarray",
    "numpy.string_",
    "unpack_for_encoding",
    "xarray.coding.strings.check_vlen_dtype"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings.is_bytes_dtype": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "bytes",
    "xarray.coding.strings.check_vlen_dtype"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings.is_unicode_dtype": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "str",
    "xarray.coding.strings.check_vlen_dtype"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.coding.strings.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "xarray.coding.times": {
  "data": {
   "symbols_in_volume": [
    "frozenset",
    "int"
   ]
  },
  "type": "module"
 },
 "xarray.coding.times.CFDatetimeCoder": {
  "data": {
   "lineno": 404
  },
  "type": "class"
 },
 "xarray.coding.times.CFDatetimeCoder.__init__": {
  "data": {
   "lineno": 405
  },
  "type": "function"
 },
 "xarray.coding.times.CFDatetimeCoder.decode": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "Variable",
    "functools.partial",
    "lazy_elemwise_func",
    "pop_to",
    "unpack_for_decoding",
    "xarray.coding.times._decode_cf_datetime_dtype",
    "xarray.coding.times.decode_cf_datetime"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times.CFDatetimeCoder.encode": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "Variable",
    "contains_cftime_datetimes",
    "numpy.datetime64",
    "numpy.issubdtype",
    "safe_setitem",
    "unpack_for_encoding",
    "xarray.coding.times.encode_cf_datetime"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times.CFTimedeltaCoder": {
  "data": {
   "lineno": 439
  },
  "type": "class"
 },
 "xarray.coding.times.CFTimedeltaCoder.decode": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "Variable",
    "functools.partial",
    "lazy_elemwise_func",
    "numpy.dtype",
    "pop_to",
    "unpack_for_decoding",
    "xarray.coding.times.TIME_UNITS",
    "xarray.coding.times.decode_cf_timedelta"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times.CFTimedeltaCoder.encode": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "Variable",
    "numpy.issubdtype",
    "numpy.timedelta64",
    "safe_setitem",
    "unpack_for_encoding",
    "xarray.coding.times.encode_cf_timedelta"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.coding.times.OutOfBoundsDatetime": {
  "data": {
   "shadows": "pandas.errors.OutOfBoundsDatetime"
  },
  "type": "import"
 },
 "xarray.coding.times.TIME_UNITS": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "xarray.coding.times._NS_PER_TIME_DELTA": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "xarray.coding.times._STANDARD_CALENDARS": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "xarray.coding.times._cleanup_netcdf_time_units": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "format_timestamp",
    "pandas.errors.OutOfBoundsDatetime",
    "xarray.coding.times._unpack_netcdf_time_units"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times._decode_cf_datetime_dtype": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "first_n_items",
    "getattr",
    "last_item",
    "numpy.concatenate",
    "numpy.dtype",
    "xarray.coding.times.decode_cf_datetime"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times._decode_datetime_with_cftime": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.asarray",
    "xarray.coding.times.cftime"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times._decode_datetime_with_pandas": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "numpy.float64",
    "numpy.int64",
    "pandas.Timestamp",
    "pandas.errors.OutOfBoundsDatetime",
    "pandas.to_timedelta",
    "xarray.coding.times._NS_PER_TIME_DELTA",
    "xarray.coding.times._STANDARD_CALENDARS",
    "xarray.coding.times._netcdf_to_numpy_timeunit",
    "xarray.coding.times._unpack_netcdf_time_units",
    "xarray.coding.times.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times._encode_datetime_with_cftime": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.datetime64",
    "numpy.issubdtype",
    "numpy.vectorize"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times._encode_datetime_with_cftime.encode_datetime": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.coding.times.cftime"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times._infer_time_units_from_diff": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "int",
    "numpy.all",
    "numpy.timedelta64",
    "xarray.coding.times._NS_PER_TIME_DELTA",
    "xarray.coding.times._netcdf_to_numpy_timeunit"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times._netcdf_to_numpy_timeunit": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "xarray.coding.times._unpack_netcdf_time_units": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "xarray.coding.times.re"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times.cast_to_int_if_safe": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times.cftime": {
  "data": {
   "shadows": "cftime"
  },
  "type": "import"
 },
 "xarray.coding.times.cftime_to_nptime": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.datetime64",
    "numpy.empty",
    "numpy.ndenumerate",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "xarray.coding.times.decode_cf_datetime": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "KeyError",
    "OverflowError",
    "float",
    "numpy.asarray",
    "numpy.nanargmax",
    "numpy.nanargmin",
    "pandas.errors.OutOfBoundsDatetime",
    "xarray.coding.times._STANDARD_CALENDARS",
    "xarray.coding.times._decode_datetime_with_cftime",
    "xarray.coding.times._decode_datetime_with_pandas",
    "xarray.coding.times.cftime_to_nptime",
    "xarray.coding.times.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times.decode_cf_timedelta": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "numpy.asarray",
    "xarray.coding.times._netcdf_to_numpy_timeunit",
    "xarray.coding.times.to_timedelta_unboxed"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times.encode_cf_datetime": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "OverflowError",
    "numpy.asarray",
    "numpy.timedelta64",
    "pandas.DatetimeIndex",
    "pandas.Timestamp",
    "pandas.errors.OutOfBoundsDatetime",
    "xarray.coding.times._STANDARD_CALENDARS",
    "xarray.coding.times._cleanup_netcdf_time_units",
    "xarray.coding.times._encode_datetime_with_cftime",
    "xarray.coding.times._netcdf_to_numpy_timeunit",
    "xarray.coding.times._unpack_netcdf_time_units",
    "xarray.coding.times.cast_to_int_if_safe",
    "xarray.coding.times.infer_calendar_name",
    "xarray.coding.times.infer_datetime_units"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times.encode_cf_timedelta": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.timedelta64",
    "numpy.where",
    "pandas.isnull",
    "xarray.coding.times._netcdf_to_numpy_timeunit",
    "xarray.coding.times.cast_to_int_if_safe",
    "xarray.coding.times.infer_timedelta_units"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times.format_cftime_datetime": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "xarray.coding.times.infer_calendar_name": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times.infer_datetime_units": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.diff",
    "numpy.dtype",
    "numpy.unique",
    "pandas.Timestamp",
    "pandas.notnull",
    "xarray.coding.times._infer_time_units_from_diff",
    "xarray.coding.times.format_cftime_datetime",
    "xarray.coding.times.to_datetime_unboxed",
    "xarray.coding.times.to_timedelta_unboxed"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times.infer_timedelta_units": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.unique",
    "pandas.notnull",
    "xarray.coding.times._infer_time_units_from_diff",
    "xarray.coding.times.to_timedelta_unboxed"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.coding.times.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "xarray.coding.times.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.coding.times.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "xarray.coding.times.to_datetime_unboxed": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "pandas.__version__",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times.to_timedelta_unboxed": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "pandas.__version__",
    "pandas.to_timedelta"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.coding.variables": {
  "data": {},
  "type": "module"
 },
 "xarray.coding.variables.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "xarray.coding.variables.CFMaskCoder": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "xarray.coding.variables.VariableCoder"
   ]
  },
  "type": "class"
 },
 "xarray.coding.variables.CFMaskCoder.decode": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "Variable",
    "functools.partial",
    "len",
    "numpy.ravel",
    "pandas.isnull",
    "xarray.coding.variables.SerializationWarning",
    "xarray.coding.variables._apply_mask",
    "xarray.coding.variables.lazy_elemwise_func",
    "xarray.coding.variables.pop_to",
    "xarray.coding.variables.unpack_for_decoding",
    "xarray.coding.variables.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables.CFMaskCoder.encode": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "ValueError",
    "Variable",
    "numpy.dtype",
    "pandas.isnull",
    "xarray.coding.variables.pop_to",
    "xarray.coding.variables.unpack_for_encoding"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables.CFScaleOffsetCoder": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "xarray.coding.variables.VariableCoder"
   ]
  },
  "type": "class"
 },
 "xarray.coding.variables.CFScaleOffsetCoder.decode": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "Variable",
    "functools.partial",
    "xarray.coding.variables._choose_float_dtype",
    "xarray.coding.variables._scale_offset_decoding",
    "xarray.coding.variables.lazy_elemwise_func",
    "xarray.coding.variables.pop_to",
    "xarray.coding.variables.unpack_for_decoding"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables.CFScaleOffsetCoder.encode": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "Variable",
    "xarray.coding.variables._choose_float_dtype",
    "xarray.coding.variables.pop_to",
    "xarray.coding.variables.unpack_for_encoding"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables.Hashable": {
  "data": {
   "shadows": "typing.Hashable"
  },
  "type": "import"
 },
 "xarray.coding.variables.SerializationWarning": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "RuntimeWarning"
   ]
  },
  "type": "class"
 },
 "xarray.coding.variables.UnsignedIntegerCoder": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "xarray.coding.variables.VariableCoder"
   ]
  },
  "type": "class"
 },
 "xarray.coding.variables.UnsignedIntegerCoder.decode": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "Variable",
    "functools.partial",
    "numpy.asarray",
    "numpy.dtype",
    "xarray.coding.variables.SerializationWarning",
    "xarray.coding.variables.lazy_elemwise_func",
    "xarray.coding.variables.pop_to",
    "xarray.coding.variables.unpack_for_decoding",
    "xarray.coding.variables.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables.UnsignedIntegerCoder.encode": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "Variable",
    "numpy.dtype",
    "xarray.coding.variables.pop_to",
    "xarray.coding.variables.unpack_for_encoding"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables.VariableCoder": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "xarray.coding.variables.VariableCoder.decode": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "NotImplementedError",
    "typing.Hashable"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables.VariableCoder.encode": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "NotImplementedError",
    "typing.Hashable"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables._ElementwiseFunctionArray": {
  "data": {
   "lineno": 48
  },
  "type": "class"
 },
 "xarray.coding.variables._ElementwiseFunctionArray.__array__": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "xarray.coding.variables._ElementwiseFunctionArray.__getitem__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables._ElementwiseFunctionArray.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "is_duck_dask_array"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables._ElementwiseFunctionArray.__repr__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables._ElementwiseFunctionArray.dtype": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.dtype",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables._apply_mask": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "list",
    "numpy.asarray",
    "numpy.ndarray",
    "numpy.where",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables._choose_float_dtype": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.floating",
    "numpy.integer",
    "numpy.issubdtype"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables._scale_offset_decoding": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.coding.variables.lazy_elemwise_func": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "dask.array.map_blocks",
    "is_duck_dask_array",
    "xarray.coding.variables._ElementwiseFunctionArray"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.coding.variables.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "xarray.coding.variables.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.coding.variables.pop_to": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "xarray.coding.variables.safe_setitem"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables.safe_setitem": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables.unpack_for_decoding": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "xarray.coding.variables.unpack_for_encoding": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "xarray.coding.variables.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.conventions": {
  "data": {},
  "type": "module"
 },
 "xarray.conventions.BoolTypeArray": {
  "data": {
   "lineno": 48
  },
  "type": "class"
 },
 "xarray.conventions.BoolTypeArray.__getitem__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "xarray.conventions.BoolTypeArray.__init__": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "xarray.conventions.BoolTypeArray.dtype": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.dtype",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.conventions.NativeEndiannessArray": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "xarray.conventions.NativeEndiannessArray.__getitem__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "xarray.conventions.NativeEndiannessArray.__init__": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "xarray.conventions.NativeEndiannessArray.dtype": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.dtype",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.conventions._copy_with_dtype": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "xarray.conventions._encode_coordinates": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "ValueError",
    "collections.defaultdict",
    "dict",
    "isinstance",
    "list",
    "map",
    "pop_to",
    "set",
    "str",
    "xarray.conventions.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.conventions._infer_dtype": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bytes",
    "float",
    "isinstance",
    "numpy.array",
    "numpy.dtype",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.conventions._update_bounds_attributes": {
  "data": {
   "lineno": 362
  },
  "type": "function"
 },
 "xarray.conventions._update_bounds_encoding": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "UserWarning",
    "contains_cftime_datetimes",
    "numpy.datetime64",
    "numpy.issubdtype",
    "xarray.conventions.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.conventions._var_as_tuple": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "xarray.conventions.cf_decoder": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "xarray.conventions.decode_cf_variables"
   ]
  },
  "type": "function"
 },
 "xarray.conventions.cf_encoder": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "xarray.conventions._update_bounds_encoding",
    "xarray.conventions.encode_cf_variable"
   ]
  },
  "type": "function"
 },
 "xarray.conventions.decode_cf": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "Dataset",
    "TypeError",
    "isinstance",
    "set",
    "vars",
    "xarray.conventions.decode_cf_variables"
   ]
  },
  "type": "function"
 },
 "xarray.conventions.decode_cf_variable": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "Variable",
    "as_variable",
    "is_duck_dask_array",
    "xarray.conventions.BoolTypeArray",
    "xarray.conventions.NativeEndiannessArray"
   ]
  },
  "type": "function"
 },
 "xarray.conventions.decode_cf_variables": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "all",
    "collections.defaultdict",
    "dict",
    "isinstance",
    "list",
    "set",
    "stackable",
    "str",
    "xarray.conventions._update_bounds_attributes",
    "xarray.conventions.decode_cf_variable"
   ]
  },
  "type": "function"
 },
 "xarray.conventions.decode_cf_variables.stackable": {
  "data": {
   "lineno": 461
  },
  "type": "function"
 },
 "xarray.conventions.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "xarray.conventions.encode_cf_variable": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "xarray.conventions.ensure_dtype_not_object",
    "xarray.conventions.ensure_not_multiindex",
    "xarray.conventions.maybe_default_fill_value",
    "xarray.conventions.maybe_encode_bools",
    "xarray.conventions.maybe_encode_nonstring_dtype"
   ]
  },
  "type": "function"
 },
 "xarray.conventions.encode_dataset_coordinates": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "set",
    "xarray.conventions._encode_coordinates"
   ]
  },
  "type": "function"
 },
 "xarray.conventions.ensure_dtype_not_object": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "Variable",
    "float",
    "is_duck_dask_array",
    "numpy.dtype",
    "numpy.floating",
    "numpy.issubdtype",
    "numpy.nan",
    "pandas.isnull",
    "xarray.conventions._copy_with_dtype",
    "xarray.conventions._infer_dtype",
    "xarray.conventions._var_as_tuple",
    "xarray.conventions.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.conventions.ensure_not_multiindex": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "NotImplementedError",
    "isinstance",
    "pandas.MultiIndex"
   ]
  },
  "type": "function"
 },
 "xarray.conventions.maybe_default_fill_value": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "numpy.floating",
    "numpy.issubdtype",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "xarray.conventions.maybe_encode_bools": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "Variable",
    "bool",
    "xarray.conventions._var_as_tuple"
   ]
  },
  "type": "function"
 },
 "xarray.conventions.maybe_encode_nonstring_dtype": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "Variable",
    "numpy.dtype",
    "numpy.floating",
    "numpy.integer",
    "numpy.issubdtype",
    "str",
    "xarray.conventions._var_as_tuple",
    "xarray.conventions.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.conventions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.conventions.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.conventions.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.convert": {
  "data": {},
  "type": "module"
 },
 "xarray.convert.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "xarray.convert._filter_attrs": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "xarray.convert._get_iris_args": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "xarray.convert._filter_attrs",
    "xarray.convert._pick_attrs",
    "xarray.convert.cf_units",
    "xarray.convert.iris_forbidden_keys"
   ]
  },
  "type": "function"
 },
 "xarray.convert._iris_cell_methods_to_str": {
  "data": {
   "lineno": 221
  },
  "type": "function"
 },
 "xarray.convert._iris_obj_to_attrs": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "xarray.convert._name": {
  "data": {
   "lineno": 237
  },
  "type": "function"
 },
 "xarray.convert._pick_attrs": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "xarray.convert.cdms2": {
  "data": {
   "shadows": "cdms2"
  },
  "type": "import"
 },
 "xarray.convert.cdms2_ignored_attrs": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "xarray.convert.cell_methods_strings": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "xarray.convert.cf_units": {
  "data": {
   "shadows": "cf_units"
  },
  "type": "import"
 },
 "xarray.convert.dask_ma": {
  "data": {
   "shadows": "dask.array.ma"
  },
  "type": "import"
 },
 "xarray.convert.encode": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "CFDatetimeCoder",
    "CFTimedeltaCoder"
   ]
  },
  "type": "function"
 },
 "xarray.convert.from_cdms2": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "DataArray",
    "decode_cf",
    "numpy.asarray",
    "xarray.convert._filter_attrs",
    "xarray.convert.cdms2_ignored_attrs"
   ]
  },
  "type": "function"
 },
 "xarray.convert.from_iris": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "DataArray",
    "ValueError",
    "collections.Counter",
    "dask.array.ma.filled",
    "decode_cf",
    "get_fill_value",
    "hasattr",
    "isinstance",
    "len",
    "numpy.ma.MaskedArray",
    "numpy.ma.filled",
    "range",
    "set",
    "xarray.convert._iris_cell_methods_to_str",
    "xarray.convert._iris_obj_to_attrs",
    "xarray.convert._name",
    "xarray.convert.iris"
   ]
  },
  "type": "function"
 },
 "xarray.convert.iris": {
  "data": {
   "shadows": "iris"
  },
  "type": "import"
 },
 "xarray.convert.iris.exceptions": {
  "data": {
   "shadows": "iris.exceptions"
  },
  "type": "import"
 },
 "xarray.convert.iris_forbidden_keys": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "xarray.convert.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.convert.parse_cell_methods": {
  "data": {
   "shadows": "iris.fileformats.netcdf.parse_cell_methods"
  },
  "type": "import"
 },
 "xarray.convert.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.convert.to_cdms2": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "cdms2_axis_cls",
    "len",
    "pandas.isnull",
    "set",
    "set_cdms2_attrs",
    "xarray.convert.cdms2",
    "xarray.convert.encode"
   ]
  },
  "type": "function"
 },
 "xarray.convert.to_cdms2.set_cdms2_attrs": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "xarray.convert.to_iris": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "ValueError",
    "iris.fileformats.netcdf.parse_cell_methods",
    "xarray.convert._get_iris_args",
    "xarray.convert.encode",
    "xarray.convert.iris"
   ]
  },
  "type": "function"
 },
 "xarray.core": {
  "data": {},
  "type": "module"
 },
 "xarray.core.accessor_dt": {
  "data": {},
  "type": "module"
 },
 "xarray.core.accessor_dt.CombinedDatetimelikeAccessor": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "xarray.core.accessor_dt.DatetimeAccessor",
    "xarray.core.accessor_dt.TimedeltaAccessor"
   ]
  },
  "type": "class"
 },
 "xarray.core.accessor_dt.CombinedDatetimelikeAccessor.__new__": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "TypeError",
    "_contains_datetime_like_objects",
    "is_np_timedelta_like",
    "xarray.core.accessor_dt.DatetimeAccessor",
    "xarray.core.accessor_dt.TimedeltaAccessor"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_dt.DatetimeAccessor": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "bool",
    "numpy.int64",
    "object",
    "xarray.core.accessor_dt.Properties"
   ]
  },
  "type": "class"
 },
 "xarray.core.accessor_dt.DatetimeAccessor.strftime": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "obj_type",
    "type",
    "xarray.core.accessor_dt._strftime"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_dt.Properties": {
  "data": {
   "lineno": 162
  },
  "type": "class"
 },
 "xarray.core.accessor_dt.Properties.__init__": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "xarray.core.accessor_dt.Properties._tslib_field_accessor": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "numpy.dtype",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_dt.Properties._tslib_field_accessor.f": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "obj_type",
    "type",
    "xarray.core.accessor_dt._get_date_field"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_dt.Properties._tslib_round_accessor": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "obj_type",
    "type",
    "xarray.core.accessor_dt._round_field"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_dt.Properties.ceil": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "xarray.core.accessor_dt.Properties.floor": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "xarray.core.accessor_dt.Properties.round": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "xarray.core.accessor_dt.TimedeltaAccessor": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "numpy.int64",
    "xarray.core.accessor_dt.Properties"
   ]
  },
  "type": "class"
 },
 "xarray.core.accessor_dt._access_through_cftimeindex": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "CFTimeIndex",
    "getattr",
    "xarray.core.accessor_dt._season_from_months"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_dt._access_through_series": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "getattr",
    "pandas.Series",
    "xarray.core.accessor_dt._season_from_months"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_dt._get_date_field": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "access_method",
    "dask.array.map_blocks",
    "is_duck_dask_array",
    "is_np_datetime_like",
    "xarray.core.accessor_dt._access_through_cftimeindex",
    "xarray.core.accessor_dt._access_through_series"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_dt._round_field": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "dask.array.map_blocks",
    "is_duck_dask_array",
    "is_np_datetime_like",
    "numpy.datetime64",
    "numpy.dtype",
    "xarray.core.accessor_dt._round_through_series_or_index"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_dt._round_through_series_or_index": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "CFTimeIndex",
    "getattr",
    "is_np_datetime_like",
    "method",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_dt._season_from_months": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_dt._strftime": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "access_method",
    "dask.array.map_blocks",
    "is_duck_dask_array",
    "is_np_datetime_like",
    "xarray.core.accessor_dt._strftime_through_cftimeindex",
    "xarray.core.accessor_dt._strftime_through_series"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_dt._strftime_through_cftimeindex": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "CFTimeIndex"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_dt._strftime_through_series": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_dt.map_blocks": {
  "data": {
   "shadows": "dask.array.map_blocks"
  },
  "type": "import"
 },
 "xarray.core.accessor_dt.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.accessor_dt.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.accessor_str": {
  "data": {
   "symbols_in_volume": [
    "xarray.core.accessor_str._cpython_optimized_encoders"
   ]
  },
  "type": "module"
 },
 "xarray.core.accessor_str.StringAccessor": {
  "data": {
   "lineno": 64
  },
  "type": "class"
 },
 "xarray.core.accessor_str.StringAccessor.__getitem__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "isinstance",
    "slice"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.__init__": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor._apply": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "apply_ufunc",
    "numpy.vectorize"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.capitalize": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.center": {
  "data": {
   "lineno": 439
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.contains": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "xarray.core.accessor_str.re"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.count": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "int",
    "len",
    "xarray.core.accessor_str.re"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.decode": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "decoder",
    "numpy.str_",
    "xarray.core.accessor_str._cpython_optimized_decoders",
    "xarray.core.accessor_str.codecs"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.encode": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "encoder",
    "numpy.bytes_",
    "xarray.core.accessor_str._cpython_optimized_encoders",
    "xarray.core.accessor_str.codecs"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.endswith": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.find": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "int"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.get": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "slice"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.get.f": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.index": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "int"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.isalnum": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.isalpha": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.isdecimal": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.isdigit": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.islower": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.isnumeric": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.isspace": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.istitle": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.isupper": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.len": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.ljust": {
  "data": {
   "lineno": 457
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.lower": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.lstrip": {
  "data": {
   "lineno": 619
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.match": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "bool",
    "xarray.core.accessor_str.re"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.pad": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.repeat": {
  "data": {
   "lineno": 700
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.replace": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "callable",
    "isinstance",
    "len",
    "type",
    "xarray.core.accessor_str._is_str_like",
    "xarray.core.accessor_str.re"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.rfind": {
  "data": {
   "lineno": 754
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.rindex": {
  "data": {
   "lineno": 813
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.rjust": {
  "data": {
   "lineno": 475
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.rstrip": {
  "data": {
   "lineno": 639
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.slice": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "slice"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.slice_replace": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.slice_replace.f": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.startswith": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.strip": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.swapcase": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.title": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.translate": {
  "data": {
   "lineno": 681
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.upper": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.wrap": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "xarray.core.accessor_str.textwrap"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_str.StringAccessor.zfill": {
  "data": {
   "lineno": 493
  },
  "type": "function"
 },
 "xarray.core.accessor_str._cpython_optimized_decoders": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "xarray.core.accessor_str._cpython_optimized_encoders": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "xarray.core.accessor_str._is_str_like": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessor_str.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "xarray.core.accessor_str.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.accessor_str.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "xarray.core.accessor_str.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "xarray.core.alignment": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "xarray.core.alignment.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "xarray.core.alignment.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "xarray.core.alignment.Hashable": {
  "data": {
   "shadows": "typing.Hashable"
  },
  "type": "import"
 },
 "xarray.core.alignment.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "xarray.core.alignment.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "xarray.core.alignment.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "xarray.core.alignment.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "xarray.core.alignment.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "xarray.core.alignment._broadcast_helper": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "DataArray",
    "Dataset",
    "ValueError",
    "_broadcast_array",
    "_broadcast_dataset",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.core.alignment._broadcast_helper._broadcast_array": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "DataArray",
    "_set_dims",
    "dict"
   ]
  },
  "type": "function"
 },
 "xarray.core.alignment._broadcast_helper._broadcast_dataset": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "Dataset",
    "_set_dims",
    "dict"
   ]
  },
  "type": "function"
 },
 "xarray.core.alignment._broadcast_helper._set_dims": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "ValueError",
    "contextlib.suppress"
   ]
  },
  "type": "function"
 },
 "xarray.core.alignment._get_broadcast_dims_map_common_coords": {
  "data": {
   "lineno": 614
  },
  "type": "function"
 },
 "xarray.core.alignment._get_joiner": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError",
    "xarray.core.alignment.functools",
    "xarray.core.alignment.operator"
   ]
  },
  "type": "function"
 },
 "xarray.core.alignment._override_indexes": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "xarray.core.alignment.align": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "any",
    "collections.defaultdict",
    "frozenset",
    "joiner",
    "len",
    "list",
    "set",
    "tuple",
    "xarray.core.alignment._get_joiner",
    "xarray.core.alignment._override_indexes"
   ]
  },
  "type": "function"
 },
 "xarray.core.alignment.broadcast": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "set",
    "tuple",
    "xarray.core.alignment._broadcast_helper",
    "xarray.core.alignment._get_broadcast_dims_map_common_coords",
    "xarray.core.alignment.align"
   ]
  },
  "type": "function"
 },
 "xarray.core.alignment.deep_align": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "enumerate",
    "frozenset",
    "is_alignable",
    "is_dict_like",
    "object",
    "xarray.core.alignment.align",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.alignment.deep_align.is_alignable": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.core.alignment.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "xarray.core.alignment.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.core.alignment.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.alignment.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "xarray.core.alignment.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.alignment.reindex_like_indexers": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Index",
    "typing.Dict",
    "typing.Hashable"
   ]
  },
  "type": "function"
 },
 "xarray.core.alignment.reindex_variables": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "IndexVariable",
    "ValueError",
    "all",
    "any",
    "bool",
    "dict",
    "get_indexer_nd",
    "int",
    "is_full_slice",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.array_equal",
    "pandas.Index",
    "set",
    "slice",
    "str",
    "tuple",
    "typing.Any",
    "typing.Dict",
    "typing.Hashable",
    "typing.Mapping",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "xarray.core.alignment.suppress": {
  "data": {
   "shadows": "contextlib.suppress"
  },
  "type": "import"
 },
 "xarray.core.arithmetic": {
  "data": {},
  "type": "module"
 },
 "xarray.core.arithmetic.SupportsArithmetic": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "bytes",
    "numpy.generic",
    "numpy.ndarray",
    "str",
    "xarray.core.arithmetic.numbers"
   ]
  },
  "type": "class"
 },
 "xarray.core.arithmetic.SupportsArithmetic.__array_ufunc__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "NotImplemented",
    "NotImplementedError",
    "any",
    "apply_ufunc",
    "isinstance",
    "numpy.nan",
    "xarray.core.arithmetic.SupportsArithmetic"
   ]
  },
  "type": "function"
 },
 "xarray.core.arithmetic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.arithmetic.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "xarray.core.combine": {
  "data": {},
  "type": "module"
 },
 "xarray.core.combine.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "xarray.core.combine._check_dimension_depth_tile_ids": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.combine._check_shape_tile_ids": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ValueError",
    "collections.Counter",
    "len",
    "range",
    "set",
    "str",
    "xarray.core.combine._check_dimension_depth_tile_ids"
   ]
  },
  "type": "function"
 },
 "xarray.core.combine._combine_1d": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "ValueError",
    "concat",
    "merge",
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.core.combine._combine_all_along_first_dim": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "dict",
    "sorted",
    "xarray.core.combine._combine_1d",
    "xarray.core.combine.itertools"
   ]
  },
  "type": "function"
 },
 "xarray.core.combine._combine_nd": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "ValueError",
    "iter",
    "len",
    "next",
    "xarray.core.combine._combine_all_along_first_dim"
   ]
  },
  "type": "function"
 },
 "xarray.core.combine._infer_concat_order_from_coords": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "any",
    "dict",
    "int",
    "len",
    "pandas.Index",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.combine._infer_concat_order_from_positions": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "dict",
    "xarray.core.combine._infer_tile_ids_from_nested_list"
   ]
  },
  "type": "function"
 },
 "xarray.core.combine._infer_tile_ids_from_nested_list": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "xarray.core.combine._nested_combine": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "Dataset",
    "dict",
    "len",
    "xarray.core.combine._check_shape_tile_ids",
    "xarray.core.combine._combine_nd",
    "xarray.core.combine._infer_concat_order_from_positions",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.combine._new_tile_id": {
  "data": {
   "lineno": 288
  },
  "type": "function"
 },
 "xarray.core.combine.combine_by_coords": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "merge",
    "sorted",
    "vars",
    "xarray.core.combine._check_dimension_depth_tile_ids",
    "xarray.core.combine._check_shape_tile_ids",
    "xarray.core.combine._combine_nd",
    "xarray.core.combine._infer_concat_order_from_coords",
    "xarray.core.combine.itertools",
    "xarray.core.combine.vars_as_keys"
   ]
  },
  "type": "function"
 },
 "xarray.core.combine.combine_nested": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "xarray.core.combine._nested_combine"
   ]
  },
  "type": "function"
 },
 "xarray.core.combine.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "xarray.core.combine.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.combine.vars_as_keys": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "xarray.core.common": {
  "data": {
   "symbols_in_volume": [
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "xarray.core.common.ALL_DIMS": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "xarray.core.common.AbstractArray": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "xarray.core.common.ImplementsArrayReduce"
   ]
  },
  "type": "class"
 },
 "xarray.core.common.AbstractArray.__array__": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.ndarray",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray.__bool__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "bool",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray.__complex__": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "complex",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray.__float__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "float",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray.__int__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "int",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray.__iter__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "TypeError",
    "typing.Any",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray.__repr__": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray._get_axis_num": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "typing.Any",
    "typing.Hashable"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray._iter": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "len",
    "range",
    "typing.Any",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray._repr_html_": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "html.escape",
    "repr"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray.get_axis_num": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "str",
    "tuple",
    "typing.Hashable",
    "typing.Iterable",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray.sizes": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "Frozen",
    "dict",
    "int",
    "property",
    "typing.Any",
    "typing.Hashable",
    "typing.Mapping",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "xarray.core.common.AttrAccessMixin": {
  "data": {
   "lineno": 189
  },
  "type": "class"
 },
 "xarray.core.common.AttrAccessMixin.__dir__": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "dir",
    "isinstance",
    "set",
    "sorted",
    "str",
    "type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AttrAccessMixin.__getattr__": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "contextlib.suppress",
    "str",
    "type",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AttrAccessMixin.__init_subclass__": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "AttributeError",
    "FutureWarning",
    "hasattr",
    "object.__new__",
    "xarray.core.common.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AttrAccessMixin.__setattr__": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "AttributeError",
    "object.__setattr__",
    "str",
    "type",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AttrAccessMixin._attr_sources": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "property",
    "typing.Any",
    "typing.Hashable",
    "typing.List",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AttrAccessMixin._ipython_key_completions_": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "set",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AttrAccessMixin._item_sources": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "property",
    "typing.Any",
    "typing.Hashable",
    "typing.List",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AttrAccessMixin._setattr_dict": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "FutureWarning",
    "object.__setattr__",
    "str",
    "type",
    "typing.Any",
    "xarray.core.common.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.C": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "xarray.core.common.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "xarray.core.common.DataWithCoords": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "xarray.core.common.AttrAccessMixin"
   ]
  },
  "type": "class"
 },
 "xarray.core.common.DataWithCoords.__enter__": {
  "data": {
   "lineno": 1374,
   "symbols_in_volume": [
    "xarray.core.common.T"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.__exit__": {
  "data": {
   "lineno": 1377
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.__getitem__": {
  "data": {
   "lineno": 1380,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords._calc_assign_results": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "callable",
    "typing.Callable",
    "typing.Dict",
    "typing.Hashable",
    "typing.Mapping",
    "typing.Union",
    "v",
    "xarray.core.common.C",
    "xarray.core.common.T"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.assign_attrs": {
  "data": {
   "lineno": 475
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.assign_coords": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "either_dict_or_kwargs"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.astype": {
  "data": {
   "lineno": 1327,
   "symbols_in_volume": [
    "apply_ufunc",
    "dict"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.close": {
  "data": {
   "lineno": 1270,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.coarsen": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "_get_keep_attrs",
    "bool",
    "either_dict_or_kwargs",
    "int",
    "str",
    "typing.Hashable",
    "typing.Mapping",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.get_index": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "KeyError",
    "numpy.int64",
    "pandas.Index",
    "range",
    "typing.Hashable"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.groupby": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.groupby_bins": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "bool",
    "int"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.isin": {
  "data": {
   "lineno": 1276,
   "symbols_in_volume": [
    "DataArray",
    "TypeError",
    "apply_ufunc",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.pipe": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "ValueError",
    "func",
    "isinstance",
    "str",
    "tuple",
    "typing.Callable",
    "typing.Tuple",
    "typing.Union",
    "xarray.core.common.T"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.resample": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "CFTimeGrouper",
    "DataArray",
    "FutureWarning",
    "TypeError",
    "ValueError",
    "_get_keep_attrs",
    "bool",
    "either_dict_or_kwargs",
    "int",
    "isinstance",
    "iter",
    "len",
    "next",
    "pandas.Grouper",
    "str",
    "typing.Hashable",
    "typing.Mapping",
    "xarray.core.common.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.rolling": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "_get_keep_attrs",
    "bool",
    "either_dict_or_kwargs",
    "int",
    "typing.Hashable",
    "typing.Mapping",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.rolling_exp": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "either_dict_or_kwargs",
    "int",
    "str",
    "typing.Hashable",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.squeeze": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "bool",
    "int",
    "typing.Hashable",
    "typing.Iterable",
    "typing.Union",
    "xarray.core.common.get_squeeze_dims"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.weighted": {
  "data": {
   "lineno": 773
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.where": {
  "data": {
   "lineno": 1159,
   "symbols_in_volume": [
    "DataArray",
    "TypeError",
    "ValueError",
    "align",
    "bool",
    "callable",
    "cond",
    "cond.isel",
    "cond.to_array",
    "isinstance",
    "numpy.nonzero",
    "numpy.unique",
    "v",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "xarray.core.common.Hashable": {
  "data": {
   "shadows": "typing.Hashable"
  },
  "type": "import"
 },
 "xarray.core.common.ImplementsArrayReduce": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "textwrap.dedent"
   ]
  },
  "type": "class"
 },
 "xarray.core.common.ImplementsArrayReduce._reduce_method": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.ImplementsArrayReduce._reduce_method.wrapped_func": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "xarray.core.common.ImplementsDatasetReduce": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "textwrap.dedent"
   ]
  },
  "type": "class"
 },
 "xarray.core.common.ImplementsDatasetReduce._reduce_method": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.ImplementsDatasetReduce._reduce_method.wrapped_func": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "xarray.core.common.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "xarray.core.common.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "xarray.core.common.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "xarray.core.common.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "xarray.core.common.T": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "xarray.core.common.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "xarray.core.common.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "xarray.core.common.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "xarray.core.common._contains_cftime_datetimes": {
  "data": {
   "lineno": 1673,
   "symbols_in_volume": [
    "ImportError",
    "bool",
    "cftime.datetime",
    "is_duck_dask_array",
    "isinstance",
    "numpy.dtype",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "xarray.core.common._contains_datetime_like_objects": {
  "data": {
   "lineno": 1696,
   "symbols_in_volume": [
    "bool",
    "xarray.core.common.contains_cftime_datetimes",
    "xarray.core.common.is_np_datetime_like"
   ]
  },
  "type": "function"
 },
 "xarray.core.common._full_like_variable": {
  "data": {
   "lineno": 1530,
   "symbols_in_volume": [
    "Variable",
    "is_duck_dask_array",
    "numpy.full_like"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.cftime_datetime": {
  "data": {
   "shadows": "cftime.datetime"
  },
  "type": "import"
 },
 "xarray.core.common.contains_cftime_datetimes": {
  "data": {
   "lineno": 1691,
   "symbols_in_volume": [
    "bool",
    "xarray.core.common._contains_cftime_datetimes"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.dask.array": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.core.common.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "xarray.core.common.escape": {
  "data": {
   "shadows": "html.escape"
  },
  "type": "import"
 },
 "xarray.core.common.full_like": {
  "data": {
   "lineno": 1385,
   "symbols_in_volume": [
    "DataArray",
    "Dataset",
    "TypeError",
    "ValueError",
    "dict",
    "is_scalar",
    "isinstance",
    "v",
    "xarray.core.common._full_like_variable"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.get_squeeze_dims": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "int",
    "isinstance",
    "list",
    "str",
    "typing.Hashable",
    "typing.Iterable",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.is_np_datetime_like": {
  "data": {
   "lineno": 1663,
   "symbols_in_volume": [
    "bool",
    "numpy.datetime64",
    "numpy.issubdtype",
    "numpy.timedelta64"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.is_np_timedelta_like": {
  "data": {
   "lineno": 1668,
   "symbols_in_volume": [
    "bool",
    "numpy.issubdtype",
    "numpy.timedelta64"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.common.ones_like": {
  "data": {
   "lineno": 1611,
   "symbols_in_volume": [
    "xarray.core.common.full_like"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.common.suppress": {
  "data": {
   "shadows": "contextlib.suppress"
  },
  "type": "import"
 },
 "xarray.core.common.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.core.common.zeros_like": {
  "data": {
   "lineno": 1551,
   "symbols_in_volume": [
    "xarray.core.common.full_like"
   ]
  },
  "type": "function"
 },
 "xarray.core.concat": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "xarray.core.concat.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "xarray.core.concat.Hashable": {
  "data": {
   "shadows": "typing.Hashable"
  },
  "type": "import"
 },
 "xarray.core.concat.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "xarray.core.concat.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "xarray.core.concat.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "xarray.core.concat.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "xarray.core.concat.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "xarray.core.concat.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "xarray.core.concat.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "xarray.core.concat._calc_concat_dim_coord": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "IndexVariable",
    "as_variable",
    "getattr",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.core.concat._calc_concat_over": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "process_subset_opt",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.concat._calc_concat_over.process_subset_opt": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "isinstance",
    "len",
    "set",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.concat._dataarray_concat": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "int",
    "list",
    "merge_attrs",
    "object",
    "pandas.Index",
    "str",
    "typing.Iterable",
    "typing.List",
    "typing.Optional",
    "typing.Union",
    "xarray.core.concat._dataset_concat"
   ]
  },
  "type": "function"
 },
 "xarray.core.concat._dataset_concat": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "Dataset",
    "KeyError",
    "ValueError",
    "align",
    "ensure_common_dims",
    "int",
    "isinstance",
    "merge_attrs",
    "object",
    "pandas.Index",
    "set",
    "str",
    "typing.Dict",
    "typing.Hashable",
    "typing.Iterable",
    "typing.List",
    "typing.Optional",
    "typing.Union",
    "unique_variable",
    "vars",
    "xarray.core.concat._calc_concat_dim_coord",
    "xarray.core.concat._calc_concat_over",
    "xarray.core.concat._parse_datasets",
    "xarray.core.concat.concat"
   ]
  },
  "type": "function"
 },
 "xarray.core.concat._dataset_concat.ensure_common_dims": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "pandas.unique",
    "tuple",
    "vars",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.concat._parse_datasets": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "int",
    "set",
    "typing.Dict",
    "typing.Hashable",
    "typing.Iterable",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "xarray.core.concat.concat": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "StopIteration",
    "TypeError",
    "ValueError",
    "f",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.core.concat.concat_vars": {
  "data": {
   "shadows": "concat"
  },
  "type": "import"
 },
 "xarray.core.concat.overload": {
  "data": {
   "shadows": "typing.overload"
  },
  "type": "import"
 },
 "xarray.core.concat.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.coordinates": {
  "data": {
   "symbols_in_volume": [
    "ReprObject",
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "xarray.core.coordinates.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "xarray.core.coordinates.Coordinates": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "typing.Hashable",
    "typing.Mapping"
   ]
  },
  "type": "class"
 },
 "xarray.core.coordinates.Coordinates.__contains__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "bool",
    "typing.Hashable"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.Coordinates.__getitem__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "NotImplementedError",
    "typing.Hashable"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.Coordinates.__iter__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.Coordinates.__len__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.Coordinates.__repr__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.Coordinates.__setitem__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "typing.Any",
    "typing.Hashable"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.Coordinates._merge_inplace": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "merge_coordinates_without_align"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.Coordinates._merge_raw": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "dict",
    "merge_coordinates_without_align"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.Coordinates._names": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "NotImplementedError",
    "property",
    "typing.Hashable",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.Coordinates._update_coords": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.Coordinates.dims": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "NotImplementedError",
    "int",
    "property",
    "typing.Hashable",
    "typing.Mapping",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.Coordinates.indexes": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.Coordinates.merge": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "Dataset",
    "Dataset._construct_direct",
    "isinstance",
    "merge_coordinates_without_align",
    "set",
    "xarray.core.coordinates.Coordinates"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.Coordinates.to_dataset": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.Coordinates.to_index": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "pandas.Index",
    "pandas.MultiIndex.from_product",
    "set",
    "typing.Hashable",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.Coordinates.update": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "getattr",
    "merge_coords",
    "typing.Any",
    "typing.Hashable",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.Coordinates.variables": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "NotImplementedError",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.DataArrayCoordinates": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "xarray.core.coordinates.Coordinates"
   ]
  },
  "type": "class"
 },
 "xarray.core.coordinates.DataArrayCoordinates.__delitem__": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "KeyError",
    "typing.Hashable"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.DataArrayCoordinates.__getitem__": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "typing.Hashable"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.DataArrayCoordinates.__init__": {
  "data": {
   "lineno": 271
  },
  "type": "function"
 },
 "xarray.core.coordinates.DataArrayCoordinates._ipython_key_completions_": {
  "data": {
   "lineno": 323
  },
  "type": "function"
 },
 "xarray.core.coordinates.DataArrayCoordinates._names": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "property",
    "set",
    "typing.Hashable",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.DataArrayCoordinates._update_coords": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "ValueError",
    "calculate_dimensions",
    "dict",
    "pandas.Index",
    "set",
    "typing.Dict",
    "typing.Hashable",
    "typing.Mapping",
    "xarray.core.coordinates._THIS_ARRAY"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.DataArrayCoordinates.dims": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "property",
    "typing.Hashable",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.DataArrayCoordinates.to_dataset": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "Dataset._construct_direct",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.DataArrayCoordinates.variables": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "Frozen",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.DatasetCoordinates": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "xarray.core.coordinates.Coordinates"
   ]
  },
  "type": "class"
 },
 "xarray.core.coordinates.DatasetCoordinates.__delitem__": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "KeyError",
    "typing.Hashable"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.DatasetCoordinates.__getitem__": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "KeyError",
    "typing.Hashable",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.DatasetCoordinates.__init__": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "xarray.core.coordinates.DatasetCoordinates._ipython_key_completions_": {
  "data": {
   "lineno": 253
  },
  "type": "function"
 },
 "xarray.core.coordinates.DatasetCoordinates._names": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "property",
    "typing.Hashable",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.DatasetCoordinates._update_coords": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "calculate_dimensions",
    "dict",
    "pandas.Index",
    "set",
    "typing.Dict",
    "typing.Hashable",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.DatasetCoordinates.dims": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "int",
    "property",
    "typing.Hashable",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.DatasetCoordinates.to_dataset": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "xarray.core.coordinates.DatasetCoordinates.variables": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "Frozen",
    "property",
    "typing.Hashable",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "xarray.core.coordinates.Hashable": {
  "data": {
   "shadows": "typing.Hashable"
  },
  "type": "import"
 },
 "xarray.core.coordinates.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "xarray.core.coordinates.LevelCoordinatesSource": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "typing.Any",
    "typing.Hashable",
    "typing.Mapping"
   ]
  },
  "type": "class"
 },
 "xarray.core.coordinates.LevelCoordinatesSource.__getitem__": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.LevelCoordinatesSource.__init__": {
  "data": {
   "lineno": 337
  },
  "type": "function"
 },
 "xarray.core.coordinates.LevelCoordinatesSource.__iter__": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "iter",
    "typing.Hashable",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.LevelCoordinatesSource.__len__": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "xarray.core.coordinates.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "xarray.core.coordinates.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "xarray.core.coordinates.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "xarray.core.coordinates.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "xarray.core.coordinates.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "xarray.core.coordinates._THIS_ARRAY": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "xarray.core.coordinates.assert_coordinate_consistent": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "IndexError",
    "typing.Hashable",
    "typing.Mapping",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "xarray.core.coordinates.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "xarray.core.coordinates.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.coordinates.remap_label_indexers": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "DataArray",
    "Variable",
    "dict",
    "either_dict_or_kwargs",
    "isinstance",
    "str",
    "typing.Any",
    "typing.Hashable",
    "typing.Mapping",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.dask_array_compat": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "dask.__version__",
    "dask.array",
    "dask.array.nanmedian",
    "distutils.version.LooseVersion"
   ]
  },
  "type": "module"
 },
 "xarray.core.dask_array_compat.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "xarray.core.dask_array_compat.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.core.dask_array_compat._validate_pad_output_shape": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "all",
    "int",
    "isinstance",
    "isint",
    "len",
    "map",
    "numpy.array",
    "numpy.array_equal",
    "numpy.sum",
    "sum"
   ]
  },
  "type": "function"
 },
 "xarray.core.dask_array_compat.da": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "xarray.core.dask_array_compat.dask_version": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "xarray.core.dask_array_compat.nanmedian": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "NotImplementedError",
    "dask.array.map_blocks",
    "enumerate",
    "isinstance",
    "numpy.nanmedian",
    "range",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "xarray.core.dask_array_compat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.dask_array_compat.pad": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "UserWarning",
    "dask.array.pad",
    "dask.array.round",
    "issubclass",
    "numpy.integer",
    "xarray.core.dask_array_compat._validate_pad_output_shape",
    "xarray.core.dask_array_compat.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.dask_array_compat.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.core.dask_array_ops": {
  "data": {},
  "type": "module"
 },
 "xarray.core.dask_array_ops.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.core.dask_array_ops.dask_rolling_wrapper": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "dask.array.map_blocks",
    "dask.array.overlap.overlap",
    "dask.array.overlap.trim_internal",
    "range"
   ]
  },
  "type": "function"
 },
 "xarray.core.dask_array_ops.least_squares": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "dask.array.apply_along_axis",
    "dask.array.from_array",
    "dask.array.linalg.lstsq",
    "float"
   ]
  },
  "type": "function"
 },
 "xarray.core.dask_array_ops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.dask_array_ops.rolling_window": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ValueError",
    "dask.array.map_blocks",
    "dask.array.overlap.overlap",
    "dask.array.pad",
    "hasattr",
    "int",
    "len",
    "list",
    "max",
    "min",
    "range",
    "slice",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.dask_array_ops.rolling_window.func": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.asarray",
    "slice",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "ReprObject",
    "cdms2.Variable",
    "dask.delayed.Delayed",
    "iris.cube.Cube",
    "typing.TYPE_CHECKING",
    "typing.TypeVar",
    "xarray.core.dataarray.DataArray"
   ]
  },
  "type": "module"
 },
 "xarray.core.dataarray.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "xarray.core.dataarray.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "xarray.core.dataarray.DataArray": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "cdms2.Variable",
    "pandas.Index",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Hashable",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "xarray.core.dataarray.DataArray.T": {
  "data": {
   "lineno": 2047,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__array_wrap__": {
  "data": {
   "lineno": 2721
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__contains__": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "bool",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__copy__": {
  "data": {
   "lineno": 932
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__dask_graph__": {
  "data": {
   "lineno": 758
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__dask_keys__": {
  "data": {
   "lineno": 761
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__dask_layers__": {
  "data": {
   "lineno": 764
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__dask_optimize__": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__dask_postcompute__": {
  "data": {
   "lineno": 775
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__dask_postpersist__": {
  "data": {
   "lineno": 779
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__dask_scheduler__": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__dask_tokenize__": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "dask.base.normalize_token",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__deepcopy__": {
  "data": {
   "lineno": 935
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__delitem__": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__getitem__": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__init__": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "_extract_indexes_from_coords",
    "as_compatible_data",
    "bool",
    "cdms2.Variable",
    "dict",
    "getattr",
    "isinstance",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "typing.Any",
    "typing.Dict",
    "typing.Hashable",
    "typing.Mapping",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union",
    "xarray.core.dataarray.DataArray",
    "xarray.core.dataarray._check_data_shape",
    "xarray.core.dataarray._infer_coords_and_dims"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__len__": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__matmul__": {
  "data": {
   "lineno": 2725
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__rmatmul__": {
  "data": {
   "lineno": 2728
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__setitem__": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "assert_coordinate_consistent",
    "isinstance",
    "str",
    "typing.Any",
    "xarray.core.dataarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._all_compat": {
  "data": {
   "lineno": 2653,
   "symbols_in_volume": [
    "bool",
    "compat",
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._all_compat.compat": {
  "data": {
   "lineno": 2656,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._attr_sources": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "property",
    "typing.Any",
    "typing.Hashable",
    "typing.List",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._binary_op": {
  "data": {
   "lineno": 2747,
   "symbols_in_volume": [
    "bool",
    "func",
    "staticmethod",
    "str",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._binary_op.func": {
  "data": {
   "lineno": 2754,
   "symbols_in_volume": [
    "Dataset",
    "NotImplemented",
    "align",
    "f",
    "getattr",
    "isinstance",
    "xarray.core.dataarray.DataArray",
    "xarray.core.dataarray.functools"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._copy_attrs_from": {
  "data": {
   "lineno": 2804,
   "symbols_in_volume": [
    "Dataset",
    "cdms2.Variable",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._dask_finalize": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "func",
    "staticmethod",
    "xarray.core.dataarray.DataArray",
    "xarray.core.dataarray._THIS_ARRAY"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._from_temp_dataset": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "typing.Hashable",
    "typing.Union",
    "xarray.core.dataarray._THIS_ARRAY"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._getitem_coord": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "KeyError",
    "_get_virtual_variable",
    "dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._in_memory": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._inplace_binary_op": {
  "data": {
   "lineno": 2776,
   "symbols_in_volume": [
    "func",
    "staticmethod",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._inplace_binary_op.func": {
  "data": {
   "lineno": 2778,
   "symbols_in_volume": [
    "MergeError",
    "TypeError",
    "f",
    "getattr",
    "isinstance",
    "xarray.core.dataarray.functools"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._item_key_to_dict": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "dict",
    "typing.Any",
    "typing.Hashable",
    "typing.Mapping",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._item_sources": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "LevelCoordinatesSource",
    "property",
    "typing.Any",
    "typing.Hashable",
    "typing.List",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._level_coords": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "IndexVariable",
    "isinstance",
    "property",
    "typing.Dict",
    "typing.Hashable"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._overwrite_indexes": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "IndexVariable",
    "isinstance",
    "len",
    "pandas.MultiIndex",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Hashable",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._replace": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "cdms2.Variable",
    "type",
    "typing.Hashable",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._replace_maybe_drop_dims": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "cdms2.Variable",
    "dict",
    "propagate_indexes",
    "set",
    "tuple",
    "typing.Hashable",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._result_name": {
  "data": {
   "lineno": 2712,
   "symbols_in_volume": [
    "getattr",
    "typing.Any",
    "typing.Hashable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._title_for_slice": {
  "data": {
   "lineno": 2809,
   "symbols_in_volume": [
    "format_item",
    "int",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._to_dataset_split": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "propagate_indexes",
    "set",
    "subset",
    "typing.Hashable"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._to_dataset_split.subset": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "as_variable"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._to_dataset_whole": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "set",
    "typing.Hashable"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._to_temp_dataset": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "xarray.core.dataarray._THIS_ARRAY"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._unary_op": {
  "data": {
   "lineno": 2733,
   "symbols_in_volume": [
    "func",
    "staticmethod",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._unary_op.func": {
  "data": {
   "lineno": 2735,
   "symbols_in_volume": [
    "RuntimeWarning",
    "f",
    "numpy.errstate",
    "xarray.core.dataarray.functools",
    "xarray.core.dataarray.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.argmax": {
  "data": {
   "lineno": 3997,
   "symbols_in_volume": [
    "bool",
    "dict",
    "int",
    "isinstance",
    "typing.Dict",
    "typing.Hashable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.argmin": {
  "data": {
   "lineno": 3894,
   "symbols_in_volume": [
    "bool",
    "dict",
    "int",
    "isinstance",
    "typing.Dict",
    "typing.Hashable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.attrs": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "typing.Any",
    "typing.Hashable",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.bfill": {
  "data": {
   "lineno": 2293,
   "symbols_in_volume": [
    "bfill",
    "int",
    "typing.Hashable"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.broadcast_equals": {
  "data": {
   "lineno": 2663,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "bool"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.broadcast_like": {
  "data": {
   "lineno": 1203,
   "symbols_in_volume": [
    "_broadcast_helper",
    "_get_broadcast_dims_map_common_coords",
    "align",
    "set",
    "typing.Hashable",
    "typing.Iterable",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.chunk": {
  "data": {
   "lineno": 951,
   "symbols_in_volume": [
    "bool",
    "dict",
    "isinstance",
    "list",
    "numbers.Number",
    "str",
    "tuple",
    "typing.Hashable",
    "typing.Mapping",
    "typing.Tuple",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.chunks": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "int",
    "property",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.combine_first": {
  "data": {
   "lineno": 2317
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.compute": {
  "data": {
   "lineno": 814
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.coords": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "DataArrayCoordinates",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.copy": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "bool",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.data": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.diff": {
  "data": {
   "lineno": 2838,
   "symbols_in_volume": [
    "int",
    "typing.Hashable"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.differentiate": {
  "data": {
   "lineno": 3237,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Hashable"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.dims": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.dot": {
  "data": {
   "lineno": 2991,
   "symbols_in_volume": [
    "Dataset",
    "NotImplementedError",
    "TypeError",
    "isinstance",
    "typing.Hashable",
    "typing.Sequence",
    "typing.Union",
    "xarray.core.dataarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.drop": {
  "data": {
   "lineno": 2073,
   "symbols_in_volume": [
    "str",
    "typing.Hashable",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.drop_sel": {
  "data": {
   "lineno": 2093,
   "symbols_in_volume": [
    "dict",
    "either_dict_or_kwargs",
    "isinstance",
    "str",
    "typing.Any",
    "typing.Hashable",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.drop_vars": {
  "data": {
   "lineno": 2051,
   "symbols_in_volume": [
    "str",
    "typing.Hashable",
    "typing.Iterable",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.dropna": {
  "data": {
   "lineno": 2124,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Hashable"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.dtype": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "numpy.dtype",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.encoding": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "typing.Any",
    "typing.Hashable",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.equals": {
  "data": {
   "lineno": 2678,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "bool"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.expand_dims": {
  "data": {
   "lineno": 1632,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict.fromkeys",
    "either_dict_or_kwargs",
    "int",
    "isinstance",
    "len",
    "set",
    "str",
    "typing.Any",
    "typing.Hashable",
    "typing.Mapping",
    "typing.Sequence",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.ffill": {
  "data": {
   "lineno": 2269,
   "symbols_in_volume": [
    "ffill",
    "int",
    "typing.Hashable"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.fillna": {
  "data": {
   "lineno": 2148,
   "symbols_in_volume": [
    "TypeError",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.from_cdms2": {
  "data": {
   "lineno": 2633,
   "symbols_in_volume": [
    "classmethod",
    "from_cdms2"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.from_dict": {
  "data": {
   "lineno": 2548,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "classmethod",
    "cls",
    "dict",
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.from_iris": {
  "data": {
   "lineno": 2646,
   "symbols_in_volume": [
    "classmethod",
    "from_iris"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.from_series": {
  "data": {
   "lineno": 2604,
   "symbols_in_volume": [
    "Dataset.from_dataframe",
    "bool",
    "classmethod",
    "pandas.DataFrame",
    "pandas.Series",
    "typing.cast",
    "xarray.core.dataarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.head": {
  "data": {
   "lineno": 1152,
   "symbols_in_volume": [
    "int",
    "typing.Any",
    "typing.Hashable",
    "typing.Mapping",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.identical": {
  "data": {
   "lineno": 2698,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "bool"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.idxmax": {
  "data": {
   "lineno": 3797,
   "symbols_in_volume": [
    "bool",
    "typing.Any",
    "typing.Hashable"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.idxmin": {
  "data": {
   "lineno": 3700,
   "symbols_in_volume": [
    "bool",
    "typing.Any",
    "typing.Hashable"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.imag": {
  "data": {
   "lineno": 2987,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.indexes": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "Indexes",
    "default_indexes",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.integrate": {
  "data": {
   "lineno": 3296,
   "symbols_in_volume": [
    "str",
    "typing.Hashable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.interp": {
  "data": {
   "lineno": 1413,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "str",
    "typing.Any",
    "typing.Hashable",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.interp_like": {
  "data": {
   "lineno": 1484,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "str",
    "typing.Any",
    "typing.Mapping",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.interpolate_na": {
  "data": {
   "lineno": 2175,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "interp_na",
    "numpy.timedelta64",
    "pandas.Timedelta",
    "str",
    "typing.Any",
    "typing.Hashable",
    "typing.Union",
    "xarray.core.dataarray.datetime"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.isel": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "any",
    "bool",
    "either_dict_or_kwargs",
    "is_fancy_indexer",
    "str",
    "typing.Any",
    "typing.Hashable",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.load": {
  "data": {
   "lineno": 790
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.loc": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "property",
    "xarray.core.dataarray._LocIndexer"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.map_blocks": {
  "data": {
   "lineno": 3363,
   "symbols_in_volume": [
    "func",
    "map_blocks",
    "str",
    "typing.Any",
    "typing.Mapping",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.name": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "typing.Hashable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.nbytes": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.ndim": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.pad": {
  "data": {
   "lineno": 3530,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Any",
    "typing.Hashable",
    "typing.Mapping",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.persist": {
  "data": {
   "lineno": 836
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.polyfit": {
  "data": {
   "lineno": 3467,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "typing.Any",
    "typing.Hashable",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.quantile": {
  "data": {
   "lineno": 3102,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Any",
    "typing.Hashable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.rank": {
  "data": {
   "lineno": 3195,
   "symbols_in_volume": [
    "bool",
    "typing.Hashable"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.real": {
  "data": {
   "lineno": 2983,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.reduce": {
  "data": {
   "lineno": 2335,
   "symbols_in_volume": [
    "bool",
    "func",
    "int",
    "typing.Any",
    "typing.Callable",
    "typing.Hashable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.reindex": {
  "data": {
   "lineno": 1340,
   "symbols_in_volume": [
    "bool",
    "dict",
    "either_dict_or_kwargs",
    "isinstance",
    "object",
    "str",
    "typing.Any",
    "typing.Hashable",
    "typing.Mapping",
    "xarray.core.dataarray._THIS_ARRAY"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.reindex_like": {
  "data": {
   "lineno": 1278,
   "symbols_in_volume": [
    "bool",
    "reindex_like_indexers",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.rename": {
  "data": {
   "lineno": 1540,
   "symbols_in_volume": [
    "either_dict_or_kwargs",
    "typing.Hashable",
    "typing.Mapping",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.reorder_levels": {
  "data": {
   "lineno": 1778,
   "symbols_in_volume": [
    "IndexVariable",
    "ValueError",
    "_check_inplace",
    "bool",
    "either_dict_or_kwargs",
    "int",
    "isinstance",
    "pandas.MultiIndex",
    "typing.Hashable",
    "typing.Mapping",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.reset_coords": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "ValueError",
    "_check_inplace",
    "bool",
    "set",
    "typing.Hashable",
    "typing.Iterable",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.reset_index": {
  "data": {
   "lineno": 1745,
   "symbols_in_volume": [
    "_check_inplace",
    "bool",
    "set",
    "split_indexes",
    "typing.Hashable",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.roll": {
  "data": {
   "lineno": 2933,
   "symbols_in_volume": [
    "bool",
    "int",
    "typing.Hashable",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.sel": {
  "data": {
   "lineno": 1062,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Any",
    "typing.Hashable",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.set_index": {
  "data": {
   "lineno": 1685,
   "symbols_in_volume": [
    "bool",
    "typing.Hashable",
    "typing.Mapping",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.shape": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "int",
    "property",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.shift": {
  "data": {
   "lineno": 2885,
   "symbols_in_volume": [
    "int",
    "typing.Any",
    "typing.Hashable",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.size": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.sortby": {
  "data": {
   "lineno": 3044,
   "symbols_in_volume": [
    "bool",
    "typing.Hashable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.stack": {
  "data": {
   "lineno": 1815,
   "symbols_in_volume": [
    "typing.Hashable",
    "typing.Mapping",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.swap_dims": {
  "data": {
   "lineno": 1579,
   "symbols_in_volume": [
    "typing.Hashable",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.tail": {
  "data": {
   "lineno": 1169,
   "symbols_in_volume": [
    "int",
    "typing.Any",
    "typing.Hashable",
    "typing.Mapping",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.thin": {
  "data": {
   "lineno": 1186,
   "symbols_in_volume": [
    "int",
    "typing.Any",
    "typing.Hashable",
    "typing.Mapping",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.to_cdms2": {
  "data": {
   "lineno": 2627,
   "symbols_in_volume": [
    "to_cdms2"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.to_dataframe": {
  "data": {
   "lineno": 2407,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "pandas.DataFrame",
    "typing.Hashable",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.to_dataset": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "dict",
    "typing.Hashable"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.to_dict": {
  "data": {
   "lineno": 2523,
   "symbols_in_volume": [
    "bool",
    "dict"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.to_index": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.to_iris": {
  "data": {
   "lineno": 2640,
   "symbols_in_volume": [
    "to_iris"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.to_masked_array": {
  "data": {
   "lineno": 2472,
   "symbols_in_volume": [
    "bool",
    "numpy.ma.MaskedArray",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.to_netcdf": {
  "data": {
   "lineno": 2490,
   "symbols_in_volume": [
    "bytes",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.to_pandas": {
  "data": {
   "lineno": 2380,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "constructor",
    "pandas.DataFrame",
    "pandas.Series",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.to_series": {
  "data": {
   "lineno": 2463,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.to_unstacked_dataset": {
  "data": {
   "lineno": 1938,
   "symbols_in_volume": [
    "Dataset",
    "ValueError",
    "isinstance",
    "pandas.MultiIndex"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.transpose": {
  "data": {
   "lineno": 2008,
   "symbols_in_volume": [
    "bool",
    "cdms2.Variable",
    "tuple",
    "typing.Dict",
    "typing.Hashable"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.unify_chunks": {
  "data": {
   "lineno": 3347
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.unstack": {
  "data": {
   "lineno": 1874,
   "symbols_in_volume": [
    "bool",
    "typing.Any",
    "typing.Hashable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.values": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.variable": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "cdms2.Variable",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.Delayed": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "xarray.core.dataarray.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "xarray.core.dataarray.Hashable": {
  "data": {
   "shadows": "typing.Hashable"
  },
  "type": "import"
 },
 "xarray.core.dataarray.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "xarray.core.dataarray.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "xarray.core.dataarray.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "xarray.core.dataarray.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "xarray.core.dataarray.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "xarray.core.dataarray.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "xarray.core.dataarray.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "xarray.core.dataarray.T_DSorDA": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "xarray.core.dataarray.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "xarray.core.dataarray.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "xarray.core.dataarray.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "xarray.core.dataarray._LocIndexer": {
  "data": {
   "lineno": 188
  },
  "type": "class"
 },
 "xarray.core.dataarray._LocIndexer.__getitem__": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray._LocIndexer.__init__": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "xarray.core.dataarray._LocIndexer.__setitem__": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "dict",
    "remap_label_indexers",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray._THIS_ARRAY": {
  "data": {
   "lineno": 213
  },
  "type": "constant"
 },
 "xarray.core.dataarray._check_data_shape": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "as_variable",
    "numpy.full",
    "numpy.nan",
    "tuple"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray._infer_coords_and_dims": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "as_variable",
    "assert_unique_multiindex_level_names",
    "cdms2.Variable",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "range",
    "str",
    "tuple",
    "typing.Any",
    "typing.Dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "xarray.core.dataarray.cdms2_Variable": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "xarray.core.dataarray.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "xarray.core.dataarray.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.core.dataarray.iris_Cube": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "xarray.core.dataarray.normalize_token": {
  "data": {
   "shadows": "dask.base.normalize_token"
  },
  "type": "import"
 },
 "xarray.core.dataarray.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.dataarray.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.dataarray.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.core.dtypes": {
  "data": {
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.bytes_",
    "numpy.character",
    "numpy.datetime64",
    "numpy.number",
    "numpy.timedelta64",
    "numpy.unicode_",
    "xarray.core.dtypes.AlwaysGreaterThan",
    "xarray.core.dtypes.AlwaysLessThan"
   ]
  },
  "type": "module"
 },
 "xarray.core.dtypes.AlwaysGreaterThan": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "xarray.core.dtypes.functools"
   ]
  },
  "type": "class"
 },
 "xarray.core.dtypes.AlwaysGreaterThan.__eq__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.core.dtypes.AlwaysGreaterThan.__gt__": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "xarray.core.dtypes.AlwaysLessThan": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "xarray.core.dtypes.functools"
   ]
  },
  "type": "class"
 },
 "xarray.core.dtypes.AlwaysLessThan.__eq__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.core.dtypes.AlwaysLessThan.__lt__": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "xarray.core.dtypes.INF": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "xarray.core.dtypes.NA": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "xarray.core.dtypes.NAT_TYPES": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "xarray.core.dtypes.NINF": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "xarray.core.dtypes.PROMOTE_TO_OBJECT": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "xarray.core.dtypes.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.core.dtypes.get_fill_value": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "xarray.core.dtypes.maybe_promote"
   ]
  },
  "type": "function"
 },
 "xarray.core.dtypes.get_neg_infinity": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "issubclass",
    "numpy.complexfloating",
    "numpy.floating",
    "numpy.inf",
    "numpy.integer",
    "xarray.core.dtypes.NINF"
   ]
  },
  "type": "function"
 },
 "xarray.core.dtypes.get_pos_infinity": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "issubclass",
    "numpy.complexfloating",
    "numpy.floating",
    "numpy.inf",
    "numpy.integer",
    "xarray.core.dtypes.INF"
   ]
  },
  "type": "function"
 },
 "xarray.core.dtypes.is_datetime_like": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "numpy.datetime64",
    "numpy.issubdtype",
    "numpy.timedelta64"
   ]
  },
  "type": "function"
 },
 "xarray.core.dtypes.maybe_promote": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.complexfloating",
    "numpy.datetime64",
    "numpy.dtype",
    "numpy.float32",
    "numpy.float64",
    "numpy.floating",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.nan",
    "numpy.timedelta64",
    "object"
   ]
  },
  "type": "function"
 },
 "xarray.core.dtypes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.dtypes.result_type": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "any",
    "issubclass",
    "numpy.dtype",
    "numpy.result_type",
    "object",
    "xarray.core.dtypes.PROMOTE_TO_OBJECT"
   ]
  },
  "type": "function"
 },
 "xarray.core.extensions": {
  "data": {},
  "type": "module"
 },
 "xarray.core.extensions.AccessorRegistrationWarning": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "xarray.core.extensions._CachedAccessor": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "xarray.core.extensions._CachedAccessor.__get__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "xarray.core.extensions._CachedAccessor.__init__": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "xarray.core.extensions._register_accessor": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "xarray.core.extensions._register_accessor.decorator": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "hasattr",
    "setattr",
    "xarray.core.extensions.AccessorRegistrationWarning",
    "xarray.core.extensions._CachedAccessor",
    "xarray.core.extensions.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.extensions.register_dataarray_accessor": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "xarray.core.extensions._register_accessor"
   ]
  },
  "type": "function"
 },
 "xarray.core.extensions.register_dataset_accessor": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "xarray.core.extensions._register_accessor"
   ]
  },
  "type": "function"
 },
 "xarray.core.extensions.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.core.formatting": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "numpy.ndarray",
    "xarray.core.formatting._KNOWN_TYPE_REPRS",
    "xarray.core.formatting._diff_mapping_repr",
    "xarray.core.formatting._mapping_repr",
    "xarray.core.formatting.contextlib",
    "xarray.core.formatting.functools",
    "xarray.core.formatting.sparse",
    "xarray.core.formatting.summarize_attr",
    "xarray.core.formatting.summarize_coord",
    "xarray.core.formatting.summarize_datavar"
   ]
  },
  "type": "module"
 },
 "xarray.core.formatting.EMPTY_REPR": {
  "data": {
   "lineno": 342
  },
  "type": "constant"
 },
 "xarray.core.formatting.Hashable": {
  "data": {
   "shadows": "typing.Hashable"
  },
  "type": "import"
 },
 "xarray.core.formatting.OutOfBoundsDatetime": {
  "data": {
   "shadows": "pandas.errors.OutOfBoundsDatetime"
  },
  "type": "import"
 },
 "xarray.core.formatting._KNOWN_TYPE_REPRS": {
  "data": {
   "lineno": 220
  },
  "type": "constant"
 },
 "xarray.core.formatting._calculate_col_width": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "len",
    "max",
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting._compat_to_str": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "callable",
    "compat",
    "compat.__name__"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting._diff_mapping_repr": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "AttributeError",
    "array_equiv",
    "callable",
    "compat",
    "extra_items_repr",
    "getattr",
    "is_duck_array",
    "set",
    "summarizer",
    "vars",
    "xarray.core.formatting.summarize_attr",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting._diff_mapping_repr.extra_items_repr": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "summarizer"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting._get_col_items": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting._get_indexer_at_least_n_items": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "numpy.argmax",
    "numpy.ceil",
    "numpy.cumprod",
    "numpy.prod",
    "numpy.r_",
    "slice"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting._mapping_repr": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "summarizer",
    "xarray.core.formatting.EMPTY_REPR",
    "xarray.core.formatting._calculate_col_width"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting._summarize_coord_levels": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "xarray.core.formatting.summarize_variable"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting._summarize_coord_multiindex": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "str",
    "xarray.core.formatting.pretty_print"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.array_repr": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "hasattr",
    "repr",
    "type",
    "xarray.core.formatting.attrs_repr",
    "xarray.core.formatting.dim_summary",
    "xarray.core.formatting.short_data_repr",
    "xarray.core.formatting.unindexed_dims_repr"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.attrs_repr": {
  "data": {
   "lineno": 384
  },
  "type": "constant"
 },
 "xarray.core.formatting.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "xarray.core.formatting.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "xarray.core.formatting.coords_repr": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "xarray.core.formatting._calculate_col_width",
    "xarray.core.formatting._get_col_items",
    "xarray.core.formatting._mapping_repr",
    "xarray.core.formatting.summarize_coord"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.data_vars_repr": {
  "data": {
   "lineno": 379
  },
  "type": "constant"
 },
 "xarray.core.formatting.dataset_repr": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "type",
    "xarray.core.formatting._calculate_col_width",
    "xarray.core.formatting._get_col_items",
    "xarray.core.formatting.attrs_repr",
    "xarray.core.formatting.coords_repr",
    "xarray.core.formatting.data_vars_repr",
    "xarray.core.formatting.dim_summary",
    "xarray.core.formatting.pretty_print",
    "xarray.core.formatting.unindexed_dims_repr"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "xarray.core.formatting.diff_array_repr": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "array_equiv",
    "callable",
    "compat",
    "equiv",
    "hasattr",
    "set",
    "type",
    "xarray.core.formatting._calculate_col_width",
    "xarray.core.formatting._compat_to_str",
    "xarray.core.formatting.diff_attrs_repr",
    "xarray.core.formatting.diff_coords_repr",
    "xarray.core.formatting.diff_dim_summary",
    "xarray.core.formatting.short_numpy_repr",
    "xarray.core.formatting.wrap_indent",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.diff_attrs_repr": {
  "data": {
   "lineno": 601
  },
  "type": "constant"
 },
 "xarray.core.formatting.diff_coords_repr": {
  "data": {
   "lineno": 591
  },
  "type": "constant"
 },
 "xarray.core.formatting.diff_data_vars_repr": {
  "data": {
   "lineno": 596
  },
  "type": "constant"
 },
 "xarray.core.formatting.diff_dataset_repr": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "compat",
    "set",
    "type",
    "xarray.core.formatting._calculate_col_width",
    "xarray.core.formatting._compat_to_str",
    "xarray.core.formatting._get_col_items",
    "xarray.core.formatting.diff_attrs_repr",
    "xarray.core.formatting.diff_coords_repr",
    "xarray.core.formatting.diff_data_vars_repr",
    "xarray.core.formatting.diff_dim_summary"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.diff_dim_summary": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "xarray.core.formatting.dim_summary"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.dim_summary": {
  "data": {
   "lineno": 404
  },
  "type": "function"
 },
 "xarray.core.formatting.first_n_items": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "xarray.core.formatting._get_indexer_at_least_n_items"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.format_array_flat": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "int",
    "itertools.zip_longest",
    "len",
    "max",
    "min",
    "numpy.argmax",
    "numpy.ceil",
    "numpy.cumsum",
    "reversed",
    "sum",
    "xarray.core.formatting.first_n_items",
    "xarray.core.formatting.format_items",
    "xarray.core.formatting.last_n_items"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.format_item": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "bytes",
    "datetime.datetime",
    "datetime.timedelta",
    "float",
    "isinstance",
    "numpy.datetime64",
    "numpy.float_",
    "numpy.timedelta64",
    "repr",
    "str",
    "xarray.core.formatting.format_timedelta",
    "xarray.core.formatting.format_timestamp"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.format_items": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.issubdtype",
    "numpy.logical_not",
    "numpy.timedelta64",
    "pandas.isnull",
    "xarray.core.formatting.format_item"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.format_timedelta": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Timedelta",
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.format_timestamp": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Timestamp",
    "pandas.errors.OutOfBoundsDatetime",
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.core.formatting.indexes_repr": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "repr",
    "xarray.core.formatting.wrap_indent"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.inline_dask_repr": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "tuple",
    "type",
    "xarray.core.formatting._KNOWN_TYPE_REPRS"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.inline_sparse_repr": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.inline_variable_array_repr": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "repr",
    "xarray.core.formatting.format_array_flat",
    "xarray.core.formatting.inline_dask_repr",
    "xarray.core.formatting.inline_sparse_repr",
    "xarray.core.formatting.maybe_truncate"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.last_item": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.ravel",
    "slice"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.last_n_items": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.asarray",
    "xarray.core.formatting._get_indexer_at_least_n_items"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.limit_lines": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "int",
    "itertools.chain",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.maybe_truncate": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.formatting.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.formatting.pretty_print": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "int",
    "len",
    "max",
    "xarray.core.formatting.maybe_truncate"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.set_numpy_options": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "numpy.get_printoptions",
    "numpy.set_printoptions",
    "xarray.core.formatting.contextlib"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.short_data_repr": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "getattr",
    "is_duck_array",
    "isinstance",
    "numpy.ndarray",
    "repr",
    "xarray.core.formatting.limit_lines",
    "xarray.core.formatting.short_numpy_repr"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.short_numpy_repr": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "numpy.asarray",
    "repr",
    "xarray.core.formatting.set_numpy_options"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.sparse": {
  "data": {
   "shadows": "sparse"
  },
  "type": "import"
 },
 "xarray.core.formatting.summarize_attr": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "str",
    "xarray.core.formatting.maybe_truncate",
    "xarray.core.formatting.pretty_print"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.summarize_coord": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "int",
    "typing.Hashable",
    "xarray.core.formatting._summarize_coord_levels",
    "xarray.core.formatting._summarize_coord_multiindex",
    "xarray.core.formatting.summarize_variable"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.summarize_datavar": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "xarray.core.formatting.summarize_variable"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.summarize_variable": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "isinstance",
    "len",
    "map",
    "str",
    "typing.Hashable",
    "xarray.core.formatting.inline_variable_array_repr",
    "xarray.core.formatting.pretty_print"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "xarray.core.formatting.unindexed_dims_repr": {
  "data": {
   "lineno": 409
  },
  "type": "function"
 },
 "xarray.core.formatting.wrap_indent": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.zip_longest": {
  "data": {
   "shadows": "itertools.zip_longest"
  },
  "type": "import"
 },
 "xarray.core.groupby": {
  "data": {
   "symbols_in_volume": [
    "xarray.core.groupby.DataArrayGroupBy",
    "xarray.core.groupby.DatasetGroupBy"
   ]
  },
  "type": "module"
 },
 "xarray.core.groupby.DataArrayGroupBy": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "xarray.core.groupby.GroupBy"
   ]
  },
  "type": "class"
 },
 "xarray.core.groupby.DataArrayGroupBy._combine": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "as_variable",
    "concat",
    "isinstance",
    "peek_at",
    "type",
    "xarray.core.groupby._maybe_reorder"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.DataArrayGroupBy._concat_shortcut": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "xarray.core.groupby._maybe_reorder"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.DataArrayGroupBy._iter_grouped_shortcut": {
  "data": {
   "lineno": 722
  },
  "type": "function"
 },
 "xarray.core.groupby.DataArrayGroupBy._restore_dim_order": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.DataArrayGroupBy._restore_dim_order.lookup_order": {
  "data": {
   "lineno": 741
  },
  "type": "function"
 },
 "xarray.core.groupby.DataArrayGroupBy.apply": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "PendingDeprecationWarning",
    "func",
    "xarray.core.groupby.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.DataArrayGroupBy.map": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "func",
    "maybe_wrap_array"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.DataArrayGroupBy.reduce": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "_get_keep_attrs",
    "xarray.core.groupby.check_reduce_dims"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.DataArrayGroupBy.reduce.reduce_array": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.DatasetGroupBy": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "xarray.core.groupby.GroupBy"
   ]
  },
  "type": "class"
 },
 "xarray.core.groupby.DatasetGroupBy._combine": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "concat",
    "peek_at",
    "xarray.core.groupby._maybe_reorder"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.DatasetGroupBy.apply": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "PendingDeprecationWarning",
    "func",
    "xarray.core.groupby.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.DatasetGroupBy.assign": {
  "data": {
   "lineno": 996
  },
  "type": "function"
 },
 "xarray.core.groupby.DatasetGroupBy.map": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.DatasetGroupBy.reduce": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "_get_keep_attrs",
    "xarray.core.groupby.check_reduce_dims"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.DatasetGroupBy.reduce.reduce_dataset": {
  "data": {
   "lineno": 989,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy": {
  "data": {
   "lineno": 236
  },
  "type": "class"
 },
 "xarray.core.groupby.GroupBy.__init__": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "DataArray",
    "IndexVariable",
    "TypeError",
    "ValueError",
    "getattr",
    "hashable",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.int64",
    "pandas.MultiIndex",
    "pandas.cut",
    "safe_cast_to_index",
    "slice",
    "xarray.core.groupby._DummyGroup",
    "xarray.core.groupby._ensure_1d",
    "xarray.core.groupby._unique_and_monotonic",
    "xarray.core.groupby.unique_value_groups",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy.__iter__": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy.__len__": {
  "data": {
   "lineno": 423
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy.__repr__": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "format_array_flat"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy._binary_op": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy._binary_op.func": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "f",
    "xarray.core.groupby.functools"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy._first_or_last": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "_get_keep_attrs",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy._get_index_and_items": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange",
    "pandas.Series",
    "xarray.core.groupby._apply_loffset"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy._infer_concat_args": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "isinstance",
    "xarray.core.groupby._DummyGroup"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy._iter_grouped": {
  "data": {
   "lineno": 451
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy._maybe_restore_empty_groups": {
  "data": {
   "lineno": 505
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy._maybe_unstack": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "propagate_indexes"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy._yield_binary_applied": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "TypeError",
    "ValueError",
    "func",
    "xarray.core.groupby._dummy_copy"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy.assign_coords": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "either_dict_or_kwargs"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy.dims": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy.fillna": {
  "data": {
   "lineno": 525
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy.first": {
  "data": {
   "lineno": 690
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy.groups": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "dict",
    "property",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy.last": {
  "data": {
   "lineno": 694
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy.quantile": {
  "data": {
   "lineno": 552
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy.where": {
  "data": {
   "lineno": 660
  },
  "type": "function"
 },
 "xarray.core.groupby._DummyGroup": {
  "data": {
   "lineno": 150
  },
  "type": "class"
 },
 "xarray.core.groupby._DummyGroup.__getitem__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby._DummyGroup.__init__": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "xarray.core.groupby._DummyGroup.dims": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby._DummyGroup.ndim": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby._DummyGroup.shape": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby._DummyGroup.values": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "property",
    "range"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby._apply_loffset": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pandas.DateOffset",
    "pandas.DatetimeIndex",
    "xarray.core.groupby.datetime"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby._consolidate_slices": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "slice",
    "xarray.core.groupby._is_one_or_none"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby._dummy_copy": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "AssertionError",
    "DataArray",
    "Dataset",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby._ensure_1d": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "xarray.core.groupby._inverse_permutation_indices": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange",
    "numpy.concatenate",
    "slice",
    "xarray.core.groupby._consolidate_slices"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby._is_one_or_none": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "xarray.core.groupby._maybe_reorder": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "len",
    "xarray.core.groupby._inverse_permutation_indices"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby._unique_and_monotonic": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "isinstance",
    "safe_cast_to_index",
    "xarray.core.groupby._DummyGroup"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.check_reduce_dims": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "is_scalar"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "xarray.core.groupby.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.core.groupby.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.groupby.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.groupby.unique_value_groups": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "pandas.factorize",
    "range"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.core.indexes": {
  "data": {},
  "type": "module"
 },
 "xarray.core.indexes.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "xarray.core.indexes.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "xarray.core.indexes.Hashable": {
  "data": {
   "shadows": "typing.Hashable"
  },
  "type": "import"
 },
 "xarray.core.indexes.Indexes": {
  "data": {
   "lineno": 39
  },
  "type": "class"
 },
 "xarray.core.indexes.Indexes.__contains__": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "xarray.core.indexes.Indexes.__getitem__": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "xarray.core.indexes.Indexes.__init__": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "xarray.core.indexes.Indexes.__iter__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "xarray.core.indexes.Indexes.__len__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.core.indexes.Indexes.__repr__": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "xarray.core.indexes.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "xarray.core.indexes.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "xarray.core.indexes.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "xarray.core.indexes.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "xarray.core.indexes.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "xarray.core.indexes.collections.abc": {
  "data": {
   "shadows": "collections.abc"
  },
  "type": "import"
 },
 "xarray.core.indexes.default_indexes": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "pandas.Index",
    "typing.Any",
    "typing.Dict",
    "typing.Hashable",
    "typing.Iterable",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "xarray.core.indexes.isel_variable_and_index": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "NotImplementedError",
    "int",
    "isinstance",
    "len",
    "numpy.ndarray",
    "pandas.Index",
    "slice",
    "typing.Hashable",
    "typing.Mapping",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.indexes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.indexes.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.indexes.propagate_indexes": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "is_scalar",
    "pandas.Index",
    "typing.Any",
    "typing.Dict",
    "typing.Hashable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "xarray.core.indexes.remove_unused_levels_categories": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "any",
    "enumerate",
    "isinstance",
    "pandas.CategoricalIndex",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.MultiIndex.from_arrays"
   ]
  },
  "type": "function"
 },
 "xarray.core.indexes.roll_index": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "int",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge": {
  "data": {
   "symbols_in_volume": [
    "Frozen",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "typing.Any",
    "typing.Hashable",
    "typing.Mapping",
    "typing.Optional",
    "typing.Sequence",
    "typing.TYPE_CHECKING",
    "typing.Tuple",
    "typing.Union",
    "xarray.core.merge.ArrayLike",
    "xarray.core.merge.CoercibleValue",
    "xarray.core.merge.DimsLike",
    "xarray.core.merge.VariableLike",
    "xarray.core.merge.XarrayValue"
   ]
  },
  "type": "module"
 },
 "xarray.core.merge.AbstractSet": {
  "data": {
   "shadows": "typing.AbstractSet"
  },
  "type": "import"
 },
 "xarray.core.merge.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "xarray.core.merge.ArrayLike": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "xarray.core.merge.CoercibleMapping": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "xarray.core.merge.CoercibleValue": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "xarray.core.merge.DatasetLike": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "xarray.core.merge.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "xarray.core.merge.DimsLike": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "xarray.core.merge.Hashable": {
  "data": {
   "shadows": "typing.Hashable"
  },
  "type": "import"
 },
 "xarray.core.merge.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "xarray.core.merge.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "xarray.core.merge.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "xarray.core.merge.MergeElement": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "xarray.core.merge.MergeError": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "xarray.core.merge.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "xarray.core.merge.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "xarray.core.merge.PANDAS_TYPES": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "xarray.core.merge.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "xarray.core.merge.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "xarray.core.merge.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "xarray.core.merge.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "xarray.core.merge.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "xarray.core.merge.VariableLike": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "xarray.core.merge.XarrayValue": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "xarray.core.merge._MergeResult": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "int",
    "pandas.Index",
    "typing.Any",
    "typing.Dict",
    "typing.Hashable",
    "typing.NamedTuple",
    "typing.Set"
   ]
  },
  "type": "class"
 },
 "xarray.core.merge._VALID_COMPAT": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "xarray.core.merge._assert_compat_valid": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ValueError",
    "set",
    "xarray.core.merge._VALID_COMPAT"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge._extract_indexes_from_coords": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "as_variable"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge._get_priority_vars_and_indexes": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Dict",
    "typing.Hashable",
    "typing.List",
    "typing.Optional",
    "xarray.core.merge.MergeElement",
    "xarray.core.merge.collect_variables_and_indexes",
    "xarray.core.merge.merge_collected"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge.assert_valid_explicit_coords": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "xarray.core.merge.MergeError"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge.broadcast_dimension_size": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "typing.Dict",
    "typing.Hashable",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge.coerce_pandas_values": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "DataArray",
    "dict",
    "isinstance",
    "typing.Iterable",
    "typing.List",
    "xarray.core.merge.PANDAS_TYPES"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge.collect_from_coordinates": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "pandas.Index",
    "typing.Dict",
    "typing.Hashable",
    "typing.List",
    "typing.Tuple",
    "xarray.core.merge.MergeElement"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge.collect_variables_and_indexes": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "append",
    "append_all",
    "as_variable",
    "dict",
    "isinstance",
    "pandas.Index",
    "typing.Dict",
    "typing.Hashable",
    "typing.List",
    "typing.Tuple",
    "xarray.core.merge.MergeElement"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge.collect_variables_and_indexes.append": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "xarray.core.merge.collect_variables_and_indexes.append_all": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "append"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge.dataset_merge_method": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "isinstance",
    "set",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Hashable",
    "typing.Iterable",
    "typing.Union",
    "xarray.core.merge.CoercibleValue",
    "xarray.core.merge._MergeResult",
    "xarray.core.merge.merge_core"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge.dataset_update_method": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": [
    "DataArray",
    "dict",
    "isinstance",
    "xarray.core.merge._MergeResult",
    "xarray.core.merge.merge_core"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge.determine_coords": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "isinstance",
    "set",
    "typing.Hashable",
    "typing.Iterable",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge.merge": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "DataArray",
    "TypeError",
    "dict",
    "isinstance",
    "object",
    "str",
    "typing.Iterable",
    "typing.Union",
    "xarray.core.merge.merge_core"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge.merge_attrs": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "ValueError",
    "compat_dict_union",
    "dict",
    "dict_equiv",
    "str",
    "xarray.core.merge.MergeError"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge.merge_collected": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "dict_equiv",
    "pandas.Index",
    "str",
    "typing.Dict",
    "typing.Hashable",
    "typing.List",
    "typing.Mapping",
    "typing.Tuple",
    "xarray.core.merge.MergeElement",
    "xarray.core.merge.MergeError",
    "xarray.core.merge._assert_compat_valid",
    "xarray.core.merge.unique_variable"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge.merge_coordinates_without_align": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "frozenset",
    "pandas.Index",
    "typing.AbstractSet",
    "typing.Dict",
    "typing.Hashable",
    "typing.List",
    "typing.Mapping",
    "typing.Tuple",
    "xarray.core.merge.MergeElement",
    "xarray.core.merge.collect_from_coordinates",
    "xarray.core.merge.merge_collected"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge.merge_coords": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "assert_unique_multiindex_level_names",
    "deep_align",
    "int",
    "object",
    "pandas.Index",
    "str",
    "typing.Dict",
    "typing.Hashable",
    "typing.Iterable",
    "typing.Mapping",
    "typing.Optional",
    "typing.Tuple",
    "xarray.core.merge._assert_compat_valid",
    "xarray.core.merge._get_priority_vars_and_indexes",
    "xarray.core.merge.coerce_pandas_values",
    "xarray.core.merge.collect_variables_and_indexes",
    "xarray.core.merge.merge_collected"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge.merge_core": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "DataArray",
    "assert_unique_multiindex_level_names",
    "calculate_dimensions",
    "deep_align",
    "int",
    "isinstance",
    "object",
    "pandas.Index",
    "str",
    "typing.Hashable",
    "typing.Iterable",
    "typing.Mapping",
    "typing.Optional",
    "typing.Sequence",
    "xarray.core.merge.MergeError",
    "xarray.core.merge._MergeResult",
    "xarray.core.merge._assert_compat_valid",
    "xarray.core.merge._get_priority_vars_and_indexes",
    "xarray.core.merge.assert_valid_explicit_coords",
    "xarray.core.merge.coerce_pandas_values",
    "xarray.core.merge.collect_variables_and_indexes",
    "xarray.core.merge.determine_coords",
    "xarray.core.merge.merge_attrs",
    "xarray.core.merge.merge_collected"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge.merge_data_and_coords": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "dict",
    "xarray.core.merge._extract_indexes_from_coords",
    "xarray.core.merge.merge_core"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.merge.unique_variable": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "bool",
    "getattr",
    "len",
    "str",
    "typing.Hashable",
    "typing.List",
    "xarray.core.merge.MergeError",
    "xarray.core.merge.broadcast_dimension_size"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing": {
  "data": {},
  "type": "module"
 },
 "xarray.core.missing.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "xarray.core.missing.BaseInterpolator": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Dict"
   ]
  },
  "type": "class"
 },
 "xarray.core.missing.BaseInterpolator.__call__": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "xarray.core.missing.BaseInterpolator.__repr__": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "xarray.core.missing.CFTimeIndex": {
  "data": {
   "shadows": "xarray.coding.cftimeindex.CFTimeIndex"
  },
  "type": "import"
 },
 "xarray.core.missing.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "xarray.core.missing.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "xarray.core.missing.Hashable": {
  "data": {
   "shadows": "typing.Hashable"
  },
  "type": "import"
 },
 "xarray.core.missing.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.core.missing.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "xarray.core.missing.NumpyInterpolator": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "xarray.core.missing.BaseInterpolator"
   ]
  },
  "type": "class"
 },
 "xarray.core.missing.NumpyInterpolator.__call__": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "xarray.core.missing.NumpyInterpolator.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError",
    "is_scalar",
    "isinstance",
    "len",
    "numpy.interp",
    "numpy.nan",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing.ScipyInterpolator": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "xarray.core.missing.BaseInterpolator"
   ]
  },
  "type": "class"
 },
 "xarray.core.missing.ScipyInterpolator.__init__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "scipy.interpolate.interp1d"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "xarray.core.missing.SplineInterpolator": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "xarray.core.missing.BaseInterpolator"
   ]
  },
  "type": "class"
 },
 "xarray.core.missing.SplineInterpolator.__init__": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "ValueError",
    "scipy.interpolate.UnivariateSpline"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "xarray.core.missing.UnivariateSpline": {
  "data": {
   "shadows": "scipy.interpolate.UnivariateSpline"
  },
  "type": "import"
 },
 "xarray.core.missing._apply_over_vars_with_dim": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "func",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing._bfill": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "bottleneck.push",
    "numpy.flip"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing._dask_aware_interpnd": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "Variable",
    "enumerate",
    "len",
    "range",
    "xarray.core.missing._interpnd",
    "xarray.core.missing._localize",
    "xarray.core.missing.interp_func",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing._floatize_x": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "_contains_datetime_like_objects",
    "len",
    "list",
    "numpy.float64",
    "range"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing._get_interpolator": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "scipy.interpolate.Akima1DInterpolator",
    "scipy.interpolate.BarycentricInterpolator",
    "scipy.interpolate.KroghInterpolator",
    "scipy.interpolate.PchipInterpolator",
    "xarray.core.missing.NumpyInterpolator",
    "xarray.core.missing.ScipyInterpolator",
    "xarray.core.missing.SplineInterpolator"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing._get_interpolator_nd": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "scipy.interpolate.interpn"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing._get_nan_block_lengths": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "Variable",
    "ones_like",
    "typing.Hashable"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing._get_valid_fill_mask": {
  "data": {
   "lineno": 532
  },
  "type": "function"
 },
 "xarray.core.missing._interp1d": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "func",
    "numpy.ravel"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing._interpnd": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "func",
    "len",
    "numpy.stack",
    "range",
    "xarray.core.missing._floatize_x",
    "xarray.core.missing._interp1d"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing._localize": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "max",
    "numpy.__version__",
    "numpy.datetime64",
    "numpy.issubdtype",
    "numpy.max",
    "numpy.min",
    "numpy.nanmax",
    "numpy.nanmin",
    "slice"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing.bfill": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "apply_ufunc",
    "dict",
    "xarray.core.missing._bfill"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing.bn": {
  "data": {
   "shadows": "bottleneck"
  },
  "type": "import"
 },
 "xarray.core.missing.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.core.missing.decompose_interp": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing.dt": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "xarray.core.missing.ffill": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "apply_ufunc",
    "bottleneck.push",
    "dict"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing.func_interpolate_na": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "f",
    "interpolator",
    "len",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing.get_clean_interp_index": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "Variable",
    "bool",
    "datetime_to_numeric",
    "isinstance",
    "numpy.arange",
    "numpy.float64",
    "pandas.DatetimeIndex",
    "pandas.MultiIndex",
    "str",
    "type",
    "typing.Hashable",
    "typing.Union",
    "xarray.coding.cftimeindex.CFTimeIndex"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing.interp": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "OrderedSet",
    "Variable",
    "broadcast_variables",
    "list",
    "tuple",
    "xarray.core.missing._localize",
    "xarray.core.missing.decompose_interp",
    "xarray.core.missing.interp_func",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "xarray.core.missing.interp_func": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "dask.array.blockwise",
    "dask.array.unify_chunks",
    "enumerate",
    "func",
    "is_duck_dask_array",
    "len",
    "list",
    "range",
    "tuple",
    "xarray.core.missing._get_interpolator",
    "xarray.core.missing._get_interpolator_nd",
    "xarray.core.missing._interpnd",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing.interp_na": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeWarning",
    "TypeError",
    "ValueError",
    "_get_keep_attrs",
    "apply_ufunc",
    "bool",
    "datetime.timedelta",
    "float",
    "functools.partial",
    "int",
    "is_scalar",
    "isinstance",
    "numbers.Number",
    "numpy.number",
    "numpy.timedelta64",
    "pandas.DatetimeIndex",
    "pandas.Timedelta",
    "str",
    "timedelta_to_numeric",
    "type",
    "typing.Hashable",
    "typing.Union",
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.core.missing._get_interpolator",
    "xarray.core.missing._get_nan_block_lengths",
    "xarray.core.missing._get_valid_fill_mask",
    "xarray.core.missing.get_clean_interp_index",
    "xarray.core.missing.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "xarray.core.missing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.missing.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "xarray.core.missing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.missing.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.core.nanops": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "dask.array"
   ]
  },
  "type": "module"
 },
 "xarray.core.nanops._maybe_null_out": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "getattr",
    "numpy.nan",
    "numpy.take"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops._nan_argminmax_object": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ValueError",
    "_dask_or_eager_func",
    "count",
    "fillna"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops._nan_minmax_object": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "count",
    "fillna",
    "getattr",
    "hasattr",
    "numpy",
    "where_method"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops._nanmean_ddof_object": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "_dask_or_eager_func",
    "count",
    "fillna",
    "float",
    "where_method"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops._nanvar_object": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "xarray.core.nanops._nanmean_ddof_object"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops._replace_nan": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "isnull",
    "where_method"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops.dask_array": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "xarray.core.nanops.dask_array_compat": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "xarray.core.nanops.nanargmax": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "dask.array",
    "isinstance",
    "xarray.core.nanops._nan_argminmax_object"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops.nanargmin": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "dask.array",
    "isinstance",
    "xarray.core.nanops._nan_argminmax_object"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops.nancumprod": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "_dask_or_eager_func"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops.nancumsum": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "_dask_or_eager_func"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops.nanmax": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "dask.array",
    "isinstance",
    "xarray.core.nanops._nan_minmax_object"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops.nanmean": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "RuntimeWarning",
    "dask.array.nanmean",
    "isinstance",
    "numpy.nanmean",
    "xarray.core.nanops._nanmean_ddof_object",
    "xarray.core.nanops.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops.nanmedian": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "_dask_or_eager_func",
    "len",
    "numpy.atleast_1d",
    "xarray.core.nanops.dask_array_compat"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops.nanmin": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "dask.array",
    "isinstance",
    "xarray.core.nanops._nan_minmax_object"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops.nanprod": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "_dask_or_eager_func",
    "xarray.core.nanops._maybe_null_out",
    "xarray.core.nanops._replace_nan"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops.nanstd": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "_dask_or_eager_func"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops.nansum": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "_dask_or_eager_func",
    "xarray.core.nanops._maybe_null_out",
    "xarray.core.nanops._replace_nan"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops.nanvar": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "_dask_or_eager_func",
    "xarray.core.nanops._nanvar_object"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.nanops.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.core.npcompat": {
  "data": {
   "symbols_in_volume": [
    "numpy.dtype",
    "str",
    "typing.Union",
    "xarray.core.npcompat._is_nep18_active"
   ]
  },
  "type": "module"
 },
 "xarray.core.npcompat.DTypeLike": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "xarray.core.npcompat.IS_NEP18_ACTIVE": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "xarray.core.npcompat.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "xarray.core.npcompat._is_nep18_active": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "A",
    "ValueError",
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "xarray.core.npcompat._is_nep18_active.A": {
  "data": {
   "lineno": 86
  },
  "type": "class"
 },
 "xarray.core.npcompat._is_nep18_active.A.__array_function__": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "xarray.core.npcompat._validate_axis": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "len",
    "list",
    "set",
    "xarray.core.npcompat.builtins",
    "xarray.core.npcompat.operator"
   ]
  },
  "type": "function"
 },
 "xarray.core.npcompat.builtins": {
  "data": {
   "shadows": "builtins"
  },
  "type": "import"
 },
 "xarray.core.npcompat.moveaxis": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "len",
    "numpy.asarray",
    "range",
    "sorted",
    "transpose",
    "xarray.core.npcompat._validate_axis",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.npcompat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.npcompat.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "xarray.core.nputils": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "bottleneck",
    "numpy",
    "xarray.core.nputils._create_bottleneck_method"
   ]
  },
  "type": "module"
 },
 "xarray.core.nputils.NumpyVIndexAdapter": {
  "data": {
   "lineno": 114
  },
  "type": "class"
 },
 "xarray.core.nputils.NumpyVIndexAdapter.__getitem__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "numpy.moveaxis",
    "xarray.core.nputils._advanced_indexer_subspaces"
   ]
  },
  "type": "function"
 },
 "xarray.core.nputils.NumpyVIndexAdapter.__init__": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "xarray.core.nputils.NumpyVIndexAdapter.__setitem__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "numpy.moveaxis",
    "xarray.core.nputils._advanced_indexer_subspaces"
   ]
  },
  "type": "function"
 },
 "xarray.core.nputils._USE_BOTTLENECK": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "xarray.core.nputils._advanced_indexer_subspaces": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.broadcast",
    "slice",
    "tuple",
    "xarray.core.nputils._is_contiguous"
   ]
  },
  "type": "function"
 },
 "xarray.core.nputils._create_bottleneck_method": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "numpy"
   ]
  },
  "type": "function"
 },
 "xarray.core.nputils._create_bottleneck_method.f": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "bn_func",
    "bottleneck",
    "getattr",
    "isinstance",
    "numpy.dtype",
    "numpy.ndarray",
    "tuple",
    "xarray.core.nputils._USE_BOTTLENECK"
   ]
  },
  "type": "function"
 },
 "xarray.core.nputils._ensure_bool_is_ndarray": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "bool",
    "constructor",
    "isinstance",
    "numpy.broadcast",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "xarray.core.nputils._is_contiguous": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "xarray.core.nputils._nanpolyfit_1d": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.full",
    "numpy.isnan",
    "numpy.linalg.lstsq",
    "numpy.nan",
    "xarray.core.nputils.warn_on_deficient_rank"
   ]
  },
  "type": "function"
 },
 "xarray.core.nputils._rolling_window": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "ValueError",
    "numpy.core.multiarray.normalize_axis_index",
    "numpy.lib.stride_tricks.as_strided",
    "numpy.swapaxes"
   ]
  },
  "type": "function"
 },
 "xarray.core.nputils._select_along_axis": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ix_"
   ]
  },
  "type": "function"
 },
 "xarray.core.nputils.array_eq": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "xarray.core.nputils._ensure_bool_is_ndarray",
    "xarray.core.nputils.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.nputils.array_ne": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "xarray.core.nputils._ensure_bool_is_ndarray",
    "xarray.core.nputils.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.nputils.bn": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "xarray.core.nputils.inverse_permutation": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.empty",
    "numpy.intp"
   ]
  },
  "type": "function"
 },
 "xarray.core.nputils.least_squares": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.apply_along_axis",
    "numpy.empty",
    "numpy.isnan",
    "numpy.linalg.lstsq",
    "numpy.nan",
    "xarray.core.nputils._nanpolyfit_1d",
    "xarray.core.nputils.warn_on_deficient_rank"
   ]
  },
  "type": "function"
 },
 "xarray.core.nputils.nanargmax": {
  "data": {
   "lineno": 290
  },
  "type": "constant"
 },
 "xarray.core.nputils.nanargmin": {
  "data": {
   "lineno": 289
  },
  "type": "constant"
 },
 "xarray.core.nputils.nancumprod": {
  "data": {
   "lineno": 288
  },
  "type": "constant"
 },
 "xarray.core.nputils.nancumsum": {
  "data": {
   "lineno": 287
  },
  "type": "constant"
 },
 "xarray.core.nputils.nanfirst": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.core.multiarray.normalize_axis_index",
    "pandas.isnull",
    "xarray.core.nputils._select_along_axis"
   ]
  },
  "type": "function"
 },
 "xarray.core.nputils.nanlast": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.core.multiarray.normalize_axis_index",
    "pandas.isnull",
    "slice",
    "xarray.core.nputils._select_along_axis"
   ]
  },
  "type": "function"
 },
 "xarray.core.nputils.nanmax": {
  "data": {
   "lineno": 281
  },
  "type": "constant"
 },
 "xarray.core.nputils.nanmean": {
  "data": {
   "lineno": 282
  },
  "type": "constant"
 },
 "xarray.core.nputils.nanmedian": {
  "data": {
   "lineno": 283
  },
  "type": "constant"
 },
 "xarray.core.nputils.nanmin": {
  "data": {
   "lineno": 280
  },
  "type": "constant"
 },
 "xarray.core.nputils.nanprod": {
  "data": {
   "lineno": 286
  },
  "type": "constant"
 },
 "xarray.core.nputils.nanstd": {
  "data": {
   "lineno": 285
  },
  "type": "constant"
 },
 "xarray.core.nputils.nanvar": {
  "data": {
   "lineno": 284
  },
  "type": "constant"
 },
 "xarray.core.nputils.normalize_axis_index": {
  "data": {
   "shadows": "numpy.core.multiarray.normalize_axis_index"
  },
  "type": "import"
 },
 "xarray.core.nputils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.nputils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.nputils.rolling_window": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "hasattr",
    "int",
    "numpy.pad",
    "xarray.core.nputils._rolling_window",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.nputils.warn_on_deficient_rank": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "numpy.RankWarning",
    "xarray.core.nputils.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.nputils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.core.ops": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "bottleneck",
    "numpy",
    "xarray.core.ops.NUM_BINARY_OPS",
    "xarray.core.ops.get_op"
   ]
  },
  "type": "module"
 },
 "xarray.core.ops.CMP_BINARY_OPS": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "xarray.core.ops.NAN_CUM_METHODS": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "xarray.core.ops.NAN_REDUCE_METHODS": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "xarray.core.ops.NON_INPLACE_OP": {
  "data": {
   "lineno": 302
  },
  "type": "constant"
 },
 "xarray.core.ops.NUMPY_SAME_METHODS": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "xarray.core.ops.NUMPY_UNARY_METHODS": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "xarray.core.ops.NUM_BINARY_OPS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "xarray.core.ops.PANDAS_UNARY_FUNCTIONS": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "xarray.core.ops.REDUCE_METHODS": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "xarray.core.ops.UNARY_OPS": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "xarray.core.ops._COARSEN_REDUCE_DOCSTRING_TEMPLATE": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "xarray.core.ops._CUM_DOCSTRING_TEMPLATE": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "xarray.core.ops._MINCOUNT_DOCSTRING": {
  "data": {
   "lineno": 116
  },
  "type": "constant"
 },
 "xarray.core.ops._REDUCE_DOCSTRING_TEMPLATE": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "xarray.core.ops._SKIPNA_DOCSTRING": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "xarray.core.ops._call_possibly_missing_method": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "hasattr",
    "method"
   ]
  },
  "type": "function"
 },
 "xarray.core.ops._func_slash_method_wrapper": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "f.__doc__"
   ]
  },
  "type": "function"
 },
 "xarray.core.ops._func_slash_method_wrapper.func": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "AttributeError",
    "f",
    "getattr"
   ]
  },
  "type": "function"
 },
 "xarray.core.ops._method_wrapper": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "getattr",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "xarray.core.ops._method_wrapper.func": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "xarray.core.ops._call_possibly_missing_method"
   ]
  },
  "type": "function"
 },
 "xarray.core.ops._values_method_wrapper": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "getattr",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "xarray.core.ops._values_method_wrapper.func": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "xarray.core.ops._call_possibly_missing_method"
   ]
  },
  "type": "function"
 },
 "xarray.core.ops.bn": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "xarray.core.ops.fillna": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "apply_ufunc",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "xarray.core.ops.get_op": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "getattr",
    "xarray.core.ops.op_str",
    "xarray.core.ops.operator"
   ]
  },
  "type": "function"
 },
 "xarray.core.ops.has_bottleneck": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "xarray.core.ops.inject_all_ops_and_reduce_methods": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "f",
    "getattr",
    "setattr",
    "xarray.core.ops.NUMPY_SAME_METHODS",
    "xarray.core.ops.NUMPY_UNARY_METHODS",
    "xarray.core.ops.PANDAS_UNARY_FUNCTIONS",
    "xarray.core.ops.UNARY_OPS",
    "xarray.core.ops._func_slash_method_wrapper",
    "xarray.core.ops._method_wrapper",
    "xarray.core.ops._values_method_wrapper",
    "xarray.core.ops.get_op",
    "xarray.core.ops.inject_binary_ops",
    "xarray.core.ops.inject_cum_methods",
    "xarray.core.ops.inject_reduce_methods",
    "xarray.core.ops.op_str"
   ]
  },
  "type": "function"
 },
 "xarray.core.ops.inject_binary_ops": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "f",
    "setattr",
    "xarray.core.ops.CMP_BINARY_OPS",
    "xarray.core.ops.NUM_BINARY_OPS",
    "xarray.core.ops.get_op",
    "xarray.core.ops.op_str"
   ]
  },
  "type": "function"
 },
 "xarray.core.ops.inject_cum_methods": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "f",
    "getattr",
    "setattr",
    "xarray.core.ops.NAN_CUM_METHODS",
    "xarray.core.ops._CUM_DOCSTRING_TEMPLATE"
   ]
  },
  "type": "function"
 },
 "xarray.core.ops.inject_reduce_methods": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "f",
    "getattr",
    "setattr",
    "xarray.core.ops.NAN_REDUCE_METHODS",
    "xarray.core.ops.REDUCE_METHODS",
    "xarray.core.ops._MINCOUNT_DOCSTRING",
    "xarray.core.ops._REDUCE_DOCSTRING_TEMPLATE",
    "xarray.core.ops._SKIPNA_DOCSTRING"
   ]
  },
  "type": "function"
 },
 "xarray.core.ops.inplace_to_noninplace_op": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "f",
    "xarray.core.ops.NON_INPLACE_OP"
   ]
  },
  "type": "function"
 },
 "xarray.core.ops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.ops.op_str": {
  "data": {
   "lineno": 294
  },
  "type": "function"
 },
 "xarray.core.ops.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "xarray.core.ops.where_method": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "apply_ufunc"
   ]
  },
  "type": "function"
 },
 "xarray.core.options": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "frozenset",
    "isinstance",
    "xarray.core.options.ARITHMETIC_JOIN",
    "xarray.core.options.CMAP_DIVERGENT",
    "xarray.core.options.CMAP_SEQUENTIAL",
    "xarray.core.options.DISPLAY_STYLE",
    "xarray.core.options.DISPLAY_WIDTH",
    "xarray.core.options.ENABLE_CFTIMEINDEX",
    "xarray.core.options.FILE_CACHE_MAXSIZE",
    "xarray.core.options.KEEP_ATTRS",
    "xarray.core.options.WARN_FOR_UNCLOSED_FILES",
    "xarray.core.options._DISPLAY_OPTIONS",
    "xarray.core.options._JOIN_OPTIONS",
    "xarray.core.options._positive_integer",
    "xarray.core.options._set_file_cache_maxsize",
    "xarray.core.options._warn_on_setting_enable_cftimeindex"
   ]
  },
  "type": "module"
 },
 "xarray.core.options.ARITHMETIC_JOIN": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "xarray.core.options.CMAP_DIVERGENT": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "xarray.core.options.CMAP_SEQUENTIAL": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "xarray.core.options.DISPLAY_STYLE": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "xarray.core.options.DISPLAY_WIDTH": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "xarray.core.options.ENABLE_CFTIMEINDEX": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "xarray.core.options.FILE_CACHE_MAXSIZE": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "xarray.core.options.KEEP_ATTRS": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "xarray.core.options.OPTIONS": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "xarray.core.options.WARN_FOR_UNCLOSED_FILES": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "xarray.core.options._DISPLAY_OPTIONS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "xarray.core.options._JOIN_OPTIONS": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "xarray.core.options._SETTERS": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "xarray.core.options._VALIDATORS": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "xarray.core.options._get_keep_attrs": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ValueError",
    "xarray.core.options.OPTIONS"
   ]
  },
  "type": "function"
 },
 "xarray.core.options._positive_integer": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.core.options._set_file_cache_maxsize": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "xarray.core.options._warn_on_setting_enable_cftimeindex": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "FutureWarning",
    "xarray.core.options.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.options.set_options": {
  "data": {
   "lineno": 78
  },
  "type": "class"
 },
 "xarray.core.options.set_options.__enter__": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "xarray.core.options.set_options.__exit__": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "xarray.core.options.set_options.__init__": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ValueError",
    "set",
    "xarray.core.options.ARITHMETIC_JOIN",
    "xarray.core.options.DISPLAY_STYLE",
    "xarray.core.options.OPTIONS",
    "xarray.core.options._DISPLAY_OPTIONS",
    "xarray.core.options._JOIN_OPTIONS",
    "xarray.core.options._VALIDATORS"
   ]
  },
  "type": "function"
 },
 "xarray.core.options.set_options._apply_update": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "xarray.core.options.OPTIONS",
    "xarray.core.options._SETTERS"
   ]
  },
  "type": "function"
 },
 "xarray.core.options.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.core.parallel": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "xarray.core.parallel.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "xarray.core.parallel.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "xarray.core.parallel.DefaultDict": {
  "data": {
   "shadows": "typing.DefaultDict"
  },
  "type": "import"
 },
 "xarray.core.parallel.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "xarray.core.parallel.Hashable": {
  "data": {
   "shadows": "typing.Hashable"
  },
  "type": "import"
 },
 "xarray.core.parallel.HighLevelGraph": {
  "data": {
   "shadows": "dask.highlevelgraph.HighLevelGraph"
  },
  "type": "import"
 },
 "xarray.core.parallel.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "xarray.core.parallel.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "xarray.core.parallel.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "xarray.core.parallel.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "xarray.core.parallel.T_DSorDA": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "xarray.core.parallel.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "xarray.core.parallel.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "xarray.core.parallel.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "xarray.core.parallel._get_chunk_slicer": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "slice",
    "typing.Hashable",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "xarray.core.parallel.assert_chunks_compatible": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.parallel.check_result_variables": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "set",
    "str",
    "typing.Any",
    "typing.Mapping",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.parallel.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "xarray.core.parallel.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "xarray.core.parallel.dask.array": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.core.parallel.dataarray_to_dataset": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "xarray.core.parallel.dataset_to_dataarray": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "iter",
    "len",
    "next",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.core.parallel.infer_template": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "Dataset",
    "Exception",
    "TypeError",
    "func",
    "isinstance",
    "type",
    "typing.Callable",
    "typing.Union",
    "xarray.core.parallel.T_DSorDA",
    "xarray.core.parallel.make_meta"
   ]
  },
  "type": "function"
 },
 "xarray.core.parallel.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "xarray.core.parallel.make_dict": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "Dataset",
    "isinstance",
    "typing.Any",
    "typing.Dict",
    "typing.Hashable",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.parallel.make_meta": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "Dataset",
    "dask.array.utils.meta_from_array",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.core.parallel.map_blocks": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "Dataset",
    "TypeError",
    "ValueError",
    "align",
    "dask.highlevelgraph.HighLevelGraph.from_collections",
    "dict",
    "enumerate",
    "func",
    "isinstance",
    "len",
    "list",
    "numpy.cumsum",
    "range",
    "set",
    "sorted",
    "str",
    "subset_dataset_to_block",
    "tuple",
    "type",
    "typing.Any",
    "typing.Callable",
    "typing.DefaultDict",
    "typing.Dict",
    "typing.Hashable",
    "typing.Mapping",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union",
    "xarray.core.parallel.T_DSorDA",
    "xarray.core.parallel._get_chunk_slicer",
    "xarray.core.parallel.assert_chunks_compatible",
    "xarray.core.parallel.collections",
    "xarray.core.parallel.dask",
    "xarray.core.parallel.dataarray_to_dataset",
    "xarray.core.parallel.dataset_to_dataarray",
    "xarray.core.parallel.infer_template",
    "xarray.core.parallel.itertools",
    "xarray.core.parallel.operator",
    "xarray.core.parallel.unzip",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.parallel.map_blocks._wrapper": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "Dataset",
    "ValueError",
    "bool",
    "dict",
    "func",
    "isinstance",
    "len",
    "set",
    "typing.Callable",
    "typing.Iterable",
    "typing.List",
    "xarray.core.parallel.check_result_variables",
    "xarray.core.parallel.dataset_to_dataarray",
    "xarray.core.parallel.make_dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.parallel.map_blocks.subset_dataset_to_block": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "Dataset",
    "dict",
    "str",
    "tuple",
    "xarray.core.parallel._get_chunk_slicer",
    "xarray.core.parallel.dask"
   ]
  },
  "type": "function"
 },
 "xarray.core.parallel.meta_from_array": {
  "data": {
   "shadows": "dask.array.utils.meta_from_array"
  },
  "type": "import"
 },
 "xarray.core.parallel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.parallel.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "xarray.core.parallel.unzip": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.pdcompat": {
  "data": {
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "pandas.Panel",
    "pandas.__version__"
   ]
  },
  "type": "module"
 },
 "xarray.core.pdcompat.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.core.pdcompat.Panel": {
  "data": {
   "lineno": 49
  },
  "type": "class"
 },
 "xarray.core.pdcompat.count_not_none": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "int",
    "sum"
   ]
  },
  "type": "function"
 },
 "xarray.core.pdcompat.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.pycompat": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "dask.base.is_dask_collection",
    "int",
    "numpy.integer",
    "xarray.core.pycompat.cupy",
    "xarray.core.pycompat.sparse"
   ]
  },
  "type": "module"
 },
 "xarray.core.pycompat.cupy": {
  "data": {
   "shadows": "cupy"
  },
  "type": "import"
 },
 "xarray.core.pycompat.cupy_array_type": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "xarray.core.pycompat.dask.array": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.core.pycompat.dask_array_type": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "xarray.core.pycompat.integer_types": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "xarray.core.pycompat.is_dask_collection": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "xarray.core.pycompat.is_duck_dask_array": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "xarray.core.pycompat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.pycompat.sparse": {
  "data": {
   "shadows": "sparse"
  },
  "type": "import"
 },
 "xarray.core.pycompat.sparse_array_type": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "xarray.core.resample": {
  "data": {
   "symbols_in_volume": [
    "xarray.core.resample.DataArrayResample",
    "xarray.core.resample.DatasetResample"
   ]
  },
  "type": "module"
 },
 "xarray.core.resample.DataArrayResample": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "xarray.core.resample.Resample"
   ]
  },
  "type": "class"
 },
 "xarray.core.resample.DataArrayResample.__init__": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ValueError",
    "super"
   ]
  },
  "type": "function"
 },
 "xarray.core.resample.DataArrayResample.apply": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "PendingDeprecationWarning",
    "xarray.core.resample.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.resample.DataArrayResample.map": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "xarray.core.resample.DatasetResample": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "xarray.core.resample.Resample"
   ]
  },
  "type": "class"
 },
 "xarray.core.resample.DatasetResample.__init__": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "ValueError",
    "super"
   ]
  },
  "type": "function"
 },
 "xarray.core.resample.DatasetResample.apply": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "PendingDeprecationWarning",
    "func",
    "xarray.core.resample.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.resample.DatasetResample.map": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "xarray.core.resample.DatasetResample.reduce": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "func",
    "super"
   ]
  },
  "type": "function"
 },
 "xarray.core.resample.RESAMPLE_DIM": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "xarray.core.resample.Resample": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "xarray.core.resample.Resample._interpolate": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "xarray.core.resample.Resample._upsample": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "xarray.core.resample.Resample.asfreq": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "xarray.core.resample.Resample.backfill": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "xarray.core.resample.Resample.interpolate": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "xarray.core.resample.Resample.nearest": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "xarray.core.resample.Resample.pad": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "xarray.core.resample.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.core.resample_cftime": {
  "data": {},
  "type": "module"
 },
 "xarray.core.resample_cftime.CFTimeGrouper": {
  "data": {
   "lineno": 57
  },
  "type": "class"
 },
 "xarray.core.resample_cftime.CFTimeGrouper.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "isinstance",
    "to_offset"
   ]
  },
  "type": "function"
 },
 "xarray.core.resample_cftime.CFTimeGrouper.first_items": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.searchsorted",
    "pandas.Series",
    "to_offset",
    "xarray.core.resample_cftime._get_time_bins",
    "xarray.core.resample_cftime.datetime"
   ]
  },
  "type": "function"
 },
 "xarray.core.resample_cftime._adjust_bin_edges": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "isinstance",
    "xarray.core.resample_cftime.datetime"
   ]
  },
  "type": "function"
 },
 "xarray.core.resample_cftime._adjust_dates_anchored": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "normalize_date",
    "type",
    "xarray.core.resample_cftime.exact_cftime_datetime_difference"
   ]
  },
  "type": "function"
 },
 "xarray.core.resample_cftime._get_range_edges": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "isinstance",
    "normalize_date",
    "xarray.core.resample_cftime._adjust_dates_anchored"
   ]
  },
  "type": "function"
 },
 "xarray.core.resample_cftime._get_time_bins": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "CFTimeIndex",
    "TypeError",
    "cftime_range",
    "isinstance",
    "len",
    "type",
    "xarray.core.resample_cftime._adjust_bin_edges",
    "xarray.core.resample_cftime._get_range_edges"
   ]
  },
  "type": "function"
 },
 "xarray.core.resample_cftime.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "xarray.core.resample_cftime.exact_cftime_datetime_difference": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "int",
    "round",
    "xarray.core.resample_cftime.datetime"
   ]
  },
  "type": "function"
 },
 "xarray.core.resample_cftime.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.resample_cftime.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.rolling": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "inject_reduce_methods",
    "xarray.core.rolling.DataArrayCoarsen",
    "xarray.core.rolling.DatasetCoarsen"
   ]
  },
  "type": "module"
 },
 "xarray.core.rolling.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "xarray.core.rolling.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "xarray.core.rolling.Coarsen": {
  "data": {
   "lineno": 622
  },
  "type": "class"
 },
 "xarray.core.rolling.Coarsen.__init__": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.Coarsen.__repr__": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.DataArrayCoarsen": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "xarray.core.rolling.Coarsen"
   ]
  },
  "type": "class"
 },
 "xarray.core.rolling.DataArrayCoarsen._reduce_method": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.DataArrayCoarsen._reduce_method.wrapped_func": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "DataArray",
    "any",
    "func"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.DataArrayRolling": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "xarray.core.rolling.Rolling"
   ]
  },
  "type": "class"
 },
 "xarray.core.rolling.DataArrayRolling.__init__": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "_get_keep_attrs",
    "super"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.DataArrayRolling.__iter__": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "numpy.arange",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.DataArrayRolling._bottleneck_reduce": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "AssertionError",
    "DataArray",
    "dask_rolling_wrapper",
    "func",
    "is_duck_dask_array",
    "slice"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.DataArrayRolling._counts": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "enumerate",
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.DataArrayRolling._numpy_or_bottleneck_reduce": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "DeprecationWarning",
    "is_duck_dask_array",
    "len",
    "xarray.core.rolling.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.DataArrayRolling.construct": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "DataArray",
    "ValueError",
    "len",
    "slice",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.DataArrayRolling.reduce": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.DatasetCoarsen": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "xarray.core.rolling.Coarsen"
   ]
  },
  "type": "class"
 },
 "xarray.core.rolling.DatasetCoarsen._reduce_method": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.DatasetCoarsen._reduce_method.wrapped_func": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "Dataset",
    "any",
    "func"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.DatasetRolling": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "xarray.core.rolling.Rolling"
   ]
  },
  "type": "class"
 },
 "xarray.core.rolling.DatasetRolling.__init__": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "KeyError",
    "any",
    "enumerate",
    "len",
    "super",
    "xarray.core.rolling.DataArrayRolling"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.DatasetRolling._counts": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "xarray.core.rolling.DataArrayRolling"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.DatasetRolling._dataset_implementation": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "Dataset",
    "any",
    "func"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.DatasetRolling._numpy_or_bottleneck_reduce": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "xarray.core.rolling.DataArrayRolling",
    "xarray.core.rolling.functools"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.DatasetRolling.construct": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "Dataset",
    "ValueError",
    "_get_keep_attrs",
    "enumerate",
    "len",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.DatasetRolling.reduce": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "func",
    "xarray.core.rolling.DataArrayRolling",
    "xarray.core.rolling.functools"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "xarray.core.rolling.Rolling": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "_reduce_method",
    "max",
    "min",
    "sum",
    "xarray.core.rolling._ROLLING_REDUCE_DOCSTRING_TEMPLATE"
   ]
  },
  "type": "class"
 },
 "xarray.core.rolling.Rolling.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ValueError",
    "_get_keep_attrs",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.Rolling.__len__": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "xarray.core.rolling.Rolling.__repr__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.Rolling._mapping_to_list": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.Rolling._reduce_method": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "getattr",
    "str",
    "typing.Callable",
    "xarray.core.rolling._ROLLING_REDUCE_DOCSTRING_TEMPLATE",
    "xarray.core.rolling.bottleneck"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.Rolling._reduce_method.method": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "xarray.core.rolling.Rolling.count": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "xarray.core.rolling._ROLLING_REDUCE_DOCSTRING_TEMPLATE": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "xarray.core.rolling.bottleneck": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "xarray.core.rolling.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.core.rolling.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.rolling.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.core.rolling_exp": {
  "data": {},
  "type": "module"
 },
 "xarray.core.rolling_exp.RollingExp": {
  "data": {
   "lineno": 59
  },
  "type": "class"
 },
 "xarray.core.rolling_exp.RollingExp.__init__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "iter",
    "next",
    "xarray.core.rolling_exp._get_alpha"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling_exp.RollingExp.mean": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "xarray.core.rolling_exp.move_exp_nanmean"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling_exp._get_alpha": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "xarray.core.rolling_exp._get_center_of_mass"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling_exp._get_center_of_mass": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "count_not_none",
    "float",
    "numpy.exp",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling_exp.move_exp_nanmean": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "TypeError",
    "is_duck_dask_array",
    "numpy.float64",
    "xarray.core.rolling_exp.numbagg"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling_exp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.rolling_exp.numbagg": {
  "data": {
   "shadows": "numbagg"
  },
  "type": "import"
 },
 "xarray.core.utils": {
  "data": {
   "symbols_in_volume": [
    "typing.TypeVar",
    "xarray.core.utils.Default"
   ]
  },
  "type": "module"
 },
 "xarray.core.utils.AbstractSet": {
  "data": {
   "shadows": "typing.AbstractSet"
  },
  "type": "import"
 },
 "xarray.core.utils.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "xarray.core.utils.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "xarray.core.utils.Collection": {
  "data": {
   "shadows": "typing.Collection"
  },
  "type": "import"
 },
 "xarray.core.utils.Container": {
  "data": {
   "shadows": "typing.Container"
  },
  "type": "import"
 },
 "xarray.core.utils.Default": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "xarray.core.utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "xarray.core.utils.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "xarray.core.utils.Frozen": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "typing.Mapping",
    "xarray.core.utils.K",
    "xarray.core.utils.V"
   ]
  },
  "type": "class"
 },
 "xarray.core.utils.Frozen.__contains__": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "bool",
    "object"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.Frozen.__getitem__": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "xarray.core.utils.K",
    "xarray.core.utils.V"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.Frozen.__init__": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "typing.Mapping",
    "xarray.core.utils.K",
    "xarray.core.utils.V"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.Frozen.__iter__": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "iter",
    "typing.Iterator",
    "xarray.core.utils.K"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.Frozen.__len__": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.Frozen.__repr__": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.FrozenDict": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "dict",
    "xarray.core.utils.Frozen"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.Hashable": {
  "data": {
   "shadows": "typing.Hashable"
  },
  "type": "import"
 },
 "xarray.core.utils.HiddenKeyDict": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "typing.MutableMapping",
    "xarray.core.utils.K",
    "xarray.core.utils.V"
   ]
  },
  "type": "class"
 },
 "xarray.core.utils.HiddenKeyDict.__delitem__": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "xarray.core.utils.K"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.HiddenKeyDict.__getitem__": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "xarray.core.utils.K",
    "xarray.core.utils.V"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.HiddenKeyDict.__init__": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "frozenset",
    "typing.Iterable",
    "typing.MutableMapping",
    "xarray.core.utils.K",
    "xarray.core.utils.V"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.HiddenKeyDict.__iter__": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "typing.Iterator",
    "xarray.core.utils.K"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.HiddenKeyDict.__len__": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.HiddenKeyDict.__setitem__": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "xarray.core.utils.K",
    "xarray.core.utils.V"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.HiddenKeyDict._raise_if_hidden": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "KeyError",
    "xarray.core.utils.K"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "xarray.core.utils.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "xarray.core.utils.K": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "xarray.core.utils.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "xarray.core.utils.MutableMapping": {
  "data": {
   "shadows": "typing.MutableMapping"
  },
  "type": "import"
 },
 "xarray.core.utils.MutableSet": {
  "data": {
   "shadows": "typing.MutableSet"
  },
  "type": "import"
 },
 "xarray.core.utils.NDArrayMixin": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "xarray.core.utils.NdimSizeLenMixin"
   ]
  },
  "type": "class"
 },
 "xarray.core.utils.NDArrayMixin.__getitem__": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.NDArrayMixin.__repr__": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "str",
    "type",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.NDArrayMixin.dtype": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "numpy.dtype",
    "property",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.NDArrayMixin.shape": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "int",
    "property",
    "typing.Any",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.NdimSizeLenMixin": {
  "data": {
   "lineno": 524
  },
  "type": "class"
 },
 "xarray.core.utils.NdimSizeLenMixin.__len__": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "int",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.NdimSizeLenMixin.ndim": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "int",
    "len",
    "property",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.NdimSizeLenMixin.size": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "int",
    "numpy.prod",
    "property",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "xarray.core.utils.OrderedSet": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "typing.Dict",
    "typing.MutableSet",
    "xarray.core.utils.T"
   ]
  },
  "type": "class"
 },
 "xarray.core.utils.OrderedSet.__contains__": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "bool",
    "object"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.OrderedSet.__init__": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "typing.AbstractSet",
    "xarray.core.utils.T"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.OrderedSet.__iter__": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "iter",
    "typing.Iterator",
    "xarray.core.utils.T"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.OrderedSet.__len__": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.OrderedSet.__repr__": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "list",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.OrderedSet.add": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "xarray.core.utils.T"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.OrderedSet.discard": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "xarray.core.utils.T"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.OrderedSet.update": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "typing.AbstractSet",
    "xarray.core.utils.T"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.ReprObject": {
  "data": {
   "lineno": 572
  },
  "type": "class"
 },
 "xarray.core.utils.ReprObject.__dask_tokenize__": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "dask.base.normalize_token",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.ReprObject.__eq__": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "xarray.core.utils.ReprObject"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.ReprObject.__hash__": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "hash",
    "int",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.ReprObject.__init__": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.ReprObject.__repr__": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "xarray.core.utils.SortedKeysDict": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "typing.MutableMapping",
    "xarray.core.utils.K",
    "xarray.core.utils.V"
   ]
  },
  "type": "class"
 },
 "xarray.core.utils.SortedKeysDict.__contains__": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "bool",
    "object"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.SortedKeysDict.__delitem__": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "xarray.core.utils.K"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.SortedKeysDict.__getitem__": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "xarray.core.utils.K",
    "xarray.core.utils.V"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.SortedKeysDict.__init__": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "typing.MutableMapping",
    "xarray.core.utils.K",
    "xarray.core.utils.V"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.SortedKeysDict.__iter__": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "iter",
    "sorted",
    "typing.Iterator",
    "xarray.core.utils.K"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.SortedKeysDict.__len__": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.SortedKeysDict.__repr__": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.SortedKeysDict.__setitem__": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "xarray.core.utils.K",
    "xarray.core.utils.V"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.T": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "xarray.core.utils.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "xarray.core.utils.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "xarray.core.utils.UncachedAccessor": {
  "data": {
   "lineno": 797
  },
  "type": "class"
 },
 "xarray.core.utils.UncachedAccessor.__get__": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "obj"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.UncachedAccessor.__init__": {
  "data": {
   "lineno": 805
  },
  "type": "function"
 },
 "xarray.core.utils.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "xarray.core.utils.V": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "xarray.core.utils._check_inplace": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils._default": {
  "data": {
   "lineno": 820
  },
  "type": "constant"
 },
 "xarray.core.utils._maybe_cast_to_cftimeindex": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "CFTimeIndex",
    "ImportError",
    "TypeError",
    "len",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.alias": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "isinstance",
    "obj.__name__",
    "str",
    "typing.Callable",
    "xarray.core.utils.T",
    "xarray.core.utils.alias_message"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.alias.wrapper": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "obj",
    "xarray.core.utils.alias_warning",
    "xarray.core.utils.functools"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.alias_message": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.alias_warning": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "FutureWarning",
    "int",
    "str",
    "xarray.core.utils.alias_message",
    "xarray.core.utils.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "xarray.core.utils.close_on_error": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "Exception",
    "xarray.core.utils.contextlib"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.compat_dict_intersection": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "bool",
    "compat",
    "dict",
    "typing.Callable",
    "typing.Mapping",
    "typing.MutableMapping",
    "xarray.core.utils.K",
    "xarray.core.utils.V",
    "xarray.core.utils.equivalent",
    "xarray.core.utils.remove_incompatible_items"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.compat_dict_union": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "bool",
    "compat",
    "dict",
    "typing.Callable",
    "typing.Mapping",
    "typing.MutableMapping",
    "xarray.core.utils.K",
    "xarray.core.utils.V",
    "xarray.core.utils.equivalent",
    "xarray.core.utils.update_safety_check"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "xarray.core.utils.decode_numpy_dict_values": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "numpy.generic",
    "numpy.ndarray",
    "typing.Dict",
    "typing.Mapping",
    "xarray.core.utils.K",
    "xarray.core.utils.V"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.dict_equiv": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "bool",
    "compat",
    "typing.Callable",
    "typing.Mapping",
    "xarray.core.utils.K",
    "xarray.core.utils.V",
    "xarray.core.utils.equivalent"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.drop_dims_from_indexers": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "int",
    "list",
    "set",
    "str",
    "typing.Any",
    "typing.Hashable",
    "typing.Mapping",
    "typing.Union",
    "xarray.core.utils.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.either_dict_or_kwargs": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "ValueError",
    "str",
    "typing.Hashable",
    "typing.Mapping",
    "typing.Optional",
    "typing.cast",
    "xarray.core.utils.T",
    "xarray.core.utils.is_dict_like"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.ensure_us_time_resolution": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "numpy.datetime64",
    "numpy.issubdtype",
    "numpy.timedelta64"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.equivalent": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "list",
    "numpy.ndarray",
    "pandas.isnull",
    "xarray.core.utils.T",
    "xarray.core.utils.list_equiv"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.core.utils.get_temp_dimname": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "str",
    "typing.Container",
    "typing.Hashable"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.hashable": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "hash",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.infix_dims": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "set",
    "typing.Collection",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.is_dict_like": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "bool",
    "hasattr",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.is_duck_array": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "bool",
    "hasattr",
    "isinstance",
    "numpy.ndarray",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.is_full_slice": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "slice",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.is_grib_path": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.is_list_like": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "list",
    "tuple",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.is_remote_uri": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "bool",
    "str",
    "xarray.core.utils.re"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.is_scalar": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "getattr",
    "hasattr",
    "isinstance",
    "str",
    "typing.Any",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.is_uniform_spaced": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "bool",
    "float",
    "numpy.array",
    "numpy.diff",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.is_valid_numpy_dtype": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bool",
    "numpy.dtype",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "xarray.core.utils.list_equiv": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "len",
    "xarray.core.utils.equivalent",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.maybe_cast_to_coords_dtype": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "isinstance",
    "numpy.asarray",
    "slice"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.maybe_wrap_array": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.multiindex_from_product_levels": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "TypeError",
    "any",
    "isinstance",
    "numpy.meshgrid",
    "pandas.Index",
    "pandas.MultiIndex",
    "str",
    "typing.Sequence",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.normalize_token": {
  "data": {
   "shadows": "dask.base.normalize_token"
  },
  "type": "import"
 },
 "xarray.core.utils.not_implemented": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "NotImplemented"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.utils.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "xarray.core.utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.utils.peek_at": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "iter",
    "next",
    "typing.Iterable",
    "typing.Iterator",
    "typing.Tuple",
    "xarray.core.utils.T",
    "xarray.core.utils.itertools"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "xarray.core.utils.remove_incompatible_items": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "bool",
    "compat",
    "list",
    "typing.Callable",
    "typing.Mapping",
    "typing.MutableMapping",
    "xarray.core.utils.K",
    "xarray.core.utils.V",
    "xarray.core.utils.equivalent"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.safe_cast_to_index": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "numpy.asarray",
    "object",
    "pandas.Index",
    "typing.Any",
    "xarray.core.utils._maybe_cast_to_cftimeindex"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.to_0d_array": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.isscalar",
    "numpy.ndarray",
    "typing.Any",
    "xarray.core.utils.to_0d_object_array"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.to_0d_object_array": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.ndarray",
    "object",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.update_safety_check": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "compat",
    "typing.Callable",
    "typing.Mapping",
    "xarray.core.utils.K",
    "xarray.core.utils.V",
    "xarray.core.utils.equivalent"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.core.weighted": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING",
    "xarray.core.weighted.DataArrayWeighted",
    "xarray.core.weighted.DatasetWeighted",
    "xarray.core.weighted._inject_docstring"
   ]
  },
  "type": "module"
 },
 "xarray.core.weighted.DataArrayWeighted": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "xarray.core.weighted.Weighted"
   ]
  },
  "type": "class"
 },
 "xarray.core.weighted.DataArrayWeighted._implementation": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "_get_keep_attrs",
    "func"
   ]
  },
  "type": "function"
 },
 "xarray.core.weighted.DatasetWeighted": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "xarray.core.weighted.Weighted"
   ]
  },
  "type": "class"
 },
 "xarray.core.weighted.DatasetWeighted._implementation": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "xarray.core.weighted.Hashable": {
  "data": {
   "shadows": "typing.Hashable"
  },
  "type": "import"
 },
 "xarray.core.weighted.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "xarray.core.weighted.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "xarray.core.weighted.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "xarray.core.weighted.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "xarray.core.weighted.Weighted": {
  "data": {
   "lineno": 57
  },
  "type": "class"
 },
 "xarray.core.weighted.Weighted.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.core.weighted.Weighted.__repr__": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "xarray.core.weighted.Weighted._implementation": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "xarray.core.weighted.Weighted._reduce": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "bool",
    "dot",
    "staticmethod",
    "typing.Hashable",
    "typing.Iterable",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.weighted.Weighted._sum_of_weights": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "bool",
    "int",
    "typing.Hashable",
    "typing.Iterable",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.weighted.Weighted._weighted_mean": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "bool",
    "typing.Hashable",
    "typing.Iterable",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.weighted.Weighted._weighted_sum": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "bool",
    "typing.Hashable",
    "typing.Iterable",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.weighted.Weighted.mean": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "bool",
    "typing.Hashable",
    "typing.Iterable",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.weighted.Weighted.sum": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "bool",
    "typing.Hashable",
    "typing.Iterable",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.weighted.Weighted.sum_of_weights": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "bool",
    "typing.Hashable",
    "typing.Iterable",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "xarray.core.weighted._SUM_OF_WEIGHTS_DOCSTRING": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "xarray.core.weighted._WEIGHTED_REDUCE_DOCSTRING_TEMPLATE": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "xarray.core.weighted._inject_docstring": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "xarray.core.weighted._SUM_OF_WEIGHTS_DOCSTRING",
    "xarray.core.weighted._WEIGHTED_REDUCE_DOCSTRING_TEMPLATE"
   ]
  },
  "type": "function"
 },
 "xarray.core.weighted.overload": {
  "data": {
   "shadows": "typing.overload"
  },
  "type": "import"
 },
 "xarray.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "xarray.plot": {
  "data": {},
  "type": "module"
 },
 "xarray.plot.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "xarray.plot.dataset_plot": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "xarray.plot.dataset_plot._Dataset_PlotMethods": {
  "data": {
   "lineno": 151
  },
  "type": "class"
 },
 "xarray.plot.dataset_plot._Dataset_PlotMethods.__call__": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "xarray.plot.dataset_plot._Dataset_PlotMethods.__init__": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "xarray.plot.dataset_plot._MARKERSIZE_RANGE": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "xarray.plot.dataset_plot._dsplot": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "newplotfunc",
    "setattr",
    "xarray.plot.dataset_plot._Dataset_PlotMethods"
   ]
  },
  "type": "function"
 },
 "xarray.plot.dataset_plot._dsplot.newplotfunc": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "_add_colorbar",
    "_easy_facetgrid",
    "_process_cmap_cbar_kwargs",
    "get_axis",
    "globals",
    "locals",
    "plotfunc",
    "xarray.plot.dataset_plot._infer_meta_data",
    "xarray.plot.dataset_plot.functools"
   ]
  },
  "type": "function"
 },
 "xarray.plot.dataset_plot._dsplot.plotmethod": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "locals",
    "newplotfunc",
    "xarray.plot.dataset_plot.functools"
   ]
  },
  "type": "function"
 },
 "xarray.plot.dataset_plot._infer_meta_data": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError",
    "_is_numeric",
    "label_from_attrs",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.plot.dataset_plot._infer_scatter_data": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "broadcast",
    "dict",
    "numpy.reshape",
    "xarray.plot.dataset_plot._parse_size",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.plot.dataset_plot._parse_size": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ValueError",
    "_is_numeric",
    "dict",
    "isinstance",
    "len",
    "matplotlib.colors.Normalize",
    "norm",
    "numpy.arange",
    "numpy.asarray",
    "numpy.sort",
    "numpy.unique",
    "pandas.Series",
    "tuple",
    "xarray.plot.dataset_plot._MARKERSIZE_RANGE",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.plot.dataset_plot.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.plot.dataset_plot.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "xarray.plot.dataset_plot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.plot.dataset_plot.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.plot.dataset_plot.scatter": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "ValueError",
    "numpy.unique",
    "xarray.plot.dataset_plot._dsplot",
    "xarray.plot.dataset_plot._infer_scatter_data"
   ]
  },
  "type": "function"
 },
 "xarray.plot.facetgrid": {
  "data": {},
  "type": "module"
 },
 "xarray.plot.facetgrid.FacetGrid": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "xarray.plot.facetgrid.FacetGrid.__init__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "import_matplotlib_pyplot",
    "int",
    "len",
    "list",
    "numpy.array",
    "numpy.ceil",
    "range",
    "xarray.plot.facetgrid.itertools",
    "xarray.plot.facetgrid.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid._bottom_axes": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid._finalize_grid": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid._left_axes": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid.add_colorbar": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "hasattr",
    "label_from_attrs",
    "list"
   ]
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid.add_legend": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid.map": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "func",
    "hasattr",
    "import_matplotlib_pyplot",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid.map_dataarray": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "ValueError",
    "_infer_xy_labels",
    "_process_cmap_cbar_kwargs",
    "func",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid.map_dataarray_line": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "_infer_line_data",
    "func",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid.map_dataset": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "_infer_meta_data",
    "_parse_size",
    "_process_cmap_cbar_kwargs",
    "func",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid.set_axis_labels": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "label_from_attrs"
   ]
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid.set_ticks": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "matplotlib.ticker.MaxNLocator",
    "xarray.plot.facetgrid._FONTSIZE",
    "xarray.plot.facetgrid._NTICKS",
    "xarray.plot.facetgrid.itertools"
   ]
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid.set_titles": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "enumerate",
    "list",
    "matplotlib.rcParams",
    "nicetitle",
    "xarray.plot.facetgrid._nicetitle",
    "xarray.plot.facetgrid.functools",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid.set_xlabels": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "label_from_attrs"
   ]
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid.set_ylabels": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "label_from_attrs"
   ]
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.MaxNLocator": {
  "data": {
   "shadows": "matplotlib.ticker.MaxNLocator"
  },
  "type": "import"
 },
 "xarray.plot.facetgrid._FONTSIZE": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "xarray.plot.facetgrid._NTICKS": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "xarray.plot.facetgrid._easy_facetgrid": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "ValueError",
    "xarray.plot.facetgrid.FacetGrid"
   ]
  },
  "type": "function"
 },
 "xarray.plot.facetgrid._nicetitle": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "format_item",
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.plot.facetgrid.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "xarray.plot.facetgrid.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "xarray.plot.facetgrid.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.plot.facetgrid.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.plot.plot": {
  "data": {},
  "type": "module"
 },
 "xarray.plot.plot._PlotMethods": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "__doc__",
    "xarray.plot.plot.plot"
   ]
  },
  "type": "class"
 },
 "xarray.plot.plot._PlotMethods.__call__": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "xarray.plot.plot.plot"
   ]
  },
  "type": "function"
 },
 "xarray.plot.plot._PlotMethods.__init__": {
  "data": {
   "lineno": 442
  },
  "type": "function"
 },
 "xarray.plot.plot._PlotMethods.hist": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "xarray.plot.plot.functools",
    "xarray.plot.plot.hist"
   ]
  },
  "type": "function"
 },
 "xarray.plot.plot._PlotMethods.line": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "xarray.plot.plot.functools",
    "xarray.plot.plot.line"
   ]
  },
  "type": "function"
 },
 "xarray.plot.plot._PlotMethods.step": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "xarray.plot.plot.functools",
    "xarray.plot.plot.step"
   ]
  },
  "type": "function"
 },
 "xarray.plot.plot._infer_line_data": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "_assert_valid_xy",
    "_infer_xy_labels",
    "label_from_attrs",
    "len",
    "repr"
   ]
  },
  "type": "function"
 },
 "xarray.plot.plot._plot2d": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "newplotfunc",
    "plotfunc.__doc__",
    "setattr",
    "xarray.plot.plot._PlotMethods"
   ]
  },
  "type": "function"
 },
 "xarray.plot.plot._plot2d.newplotfunc": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "ValueError",
    "_add_colorbar",
    "_easy_facetgrid",
    "_ensure_plottable",
    "_infer_xy_labels",
    "_process_cmap_cbar_kwargs",
    "_rescale_imshow_rgb",
    "_resolve_intervals_2dplot",
    "_update_axes",
    "dict",
    "get_axis",
    "globals",
    "import_matplotlib_pyplot",
    "isinstance",
    "label_from_attrs",
    "locals",
    "numpy.broadcast_to",
    "numpy.datetime64",
    "numpy.issubdtype",
    "numpy.newaxis",
    "plotfunc",
    "plotfunc.__name__",
    "str",
    "tuple",
    "xarray.plot.plot.functools",
    "xarray.plot.plot.override_signature"
   ]
  },
  "type": "function"
 },
 "xarray.plot.plot._plot2d.plotmethod": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "locals",
    "newplotfunc",
    "xarray.plot.plot.functools"
   ]
  },
  "type": "function"
 },
 "xarray.plot.plot._plot2d.signature": {
  "data": {
   "lineno": 590
  },
  "type": "function"
 },
 "xarray.plot.plot.contour": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "xarray.plot.plot._plot2d"
   ]
  },
  "type": "function"
 },
 "xarray.plot.plot.contourf": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "xarray.plot.plot._plot2d"
   ]
  },
  "type": "function"
 },
 "xarray.plot.plot.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.plot.plot.hist": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "_update_axes",
    "get_axis",
    "label_from_attrs",
    "numpy.ravel",
    "pandas.notnull"
   ]
  },
  "type": "function"
 },
 "xarray.plot.plot.imshow": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "hasattr",
    "numpy.any",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.ma.concatenate",
    "numpy.ma.ones",
    "xarray.plot.plot._plot2d"
   ]
  },
  "type": "function"
 },
 "xarray.plot.plot.line": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "ValueError",
    "_easy_facetgrid",
    "_ensure_plottable",
    "_resolve_intervals_1dplot",
    "_update_axes",
    "get_axis",
    "len",
    "list",
    "locals",
    "numpy.datetime64",
    "numpy.issubdtype",
    "xarray.plot.plot._infer_line_data"
   ]
  },
  "type": "function"
 },
 "xarray.plot.plot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.plot.plot.override_signature": {
  "data": {
   "lineno": 466
  },
  "type": "function"
 },
 "xarray.plot.plot.override_signature.wrapper": {
  "data": {
   "lineno": 467
  },
  "type": "function"
 },
 "xarray.plot.plot.pcolormesh": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "_infer_interval_breaks",
    "hasattr",
    "len",
    "numpy.asarray",
    "numpy.shape",
    "xarray.plot.plot._plot2d"
   ]
  },
  "type": "function"
 },
 "xarray.plot.plot.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.plot.plot.plot": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "plotfunc",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.plot.plot.step": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "xarray.plot.plot.line"
   ]
  },
  "type": "function"
 },
 "xarray.testing": {
  "data": {},
  "type": "module"
 },
 "xarray.testing.DataArray": {
  "data": {
   "shadows": "xarray.core.dataarray.DataArray"
  },
  "type": "import"
 },
 "xarray.testing.Dataset": {
  "data": {
   "shadows": "xarray.core.dataset.Dataset"
  },
  "type": "import"
 },
 "xarray.testing.Hashable": {
  "data": {
   "shadows": "typing.Hashable"
  },
  "type": "import"
 },
 "xarray.testing.IndexVariable": {
  "data": {
   "shadows": "xarray.core.variable.IndexVariable"
  },
  "type": "import"
 },
 "xarray.testing.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "xarray.testing.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "xarray.testing.Variable": {
  "data": {
   "shadows": "xarray.core.variable.Variable"
  },
  "type": "import"
 },
 "xarray.testing.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "xarray.testing._assert_dataarray_invariants": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "all",
    "dict",
    "isinstance",
    "set",
    "type",
    "xarray.core.dataarray.DataArray",
    "xarray.core.variable.IndexVariable",
    "xarray.core.variable.Variable",
    "xarray.testing._assert_indexes_invariants_checks",
    "xarray.testing._assert_variable_invariants"
   ]
  },
  "type": "function"
 },
 "xarray.testing._assert_dataset_invariants": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "all",
    "dict",
    "int",
    "isinstance",
    "set",
    "type",
    "typing.Hashable",
    "typing.Set",
    "xarray.core.dataset.Dataset",
    "xarray.core.variable.IndexVariable",
    "xarray.core.variable.Variable",
    "xarray.testing._assert_indexes_invariants_checks",
    "xarray.testing._assert_variable_invariants"
   ]
  },
  "type": "function"
 },
 "xarray.testing._assert_indexes_invariants_checks": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "all",
    "dict",
    "isinstance",
    "pandas.Index",
    "set",
    "type",
    "xarray.core.indexes.default_indexes",
    "xarray.core.variable.IndexVariable"
   ]
  },
  "type": "function"
 },
 "xarray.testing._assert_internal_invariants": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "type",
    "typing.Union",
    "xarray.core.dataarray.DataArray",
    "xarray.core.dataset.Dataset",
    "xarray.core.variable.Variable",
    "xarray.testing._assert_dataarray_invariants",
    "xarray.testing._assert_dataset_invariants",
    "xarray.testing._assert_variable_invariants"
   ]
  },
  "type": "function"
 },
 "xarray.testing._assert_variable_invariants": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "len",
    "tuple",
    "type",
    "typing.Hashable",
    "xarray.core.variable.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.testing._data_allclose_or_equiv": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "any",
    "xarray.core.duck_array_ops.allclose_or_equiv",
    "xarray.core.duck_array_ops.array_equiv",
    "xarray.testing._decode_string_data"
   ]
  },
  "type": "function"
 },
 "xarray.testing._decode_string_data": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.core.defchararray.decode"
   ]
  },
  "type": "function"
 },
 "xarray.testing._format_message": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "abs",
    "float",
    "int",
    "max",
    "numpy.count_nonzero"
   ]
  },
  "type": "function"
 },
 "xarray.testing.assert_allclose": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "TypeError",
    "compat_variable",
    "equiv",
    "isinstance",
    "type",
    "xarray.core.dataarray.DataArray",
    "xarray.core.dataset.Dataset",
    "xarray.core.formatting.diff_array_repr",
    "xarray.core.formatting.diff_dataset_repr",
    "xarray.core.utils.dict_equiv",
    "xarray.core.variable.Variable",
    "xarray.testing._data_allclose_or_equiv",
    "xarray.testing.functools"
   ]
  },
  "type": "function"
 },
 "xarray.testing.assert_allclose.compat_variable": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "equiv",
    "getattr"
   ]
  },
  "type": "function"
 },
 "xarray.testing.assert_chunks_equal": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "xarray.core.dataarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.testing.assert_duckarray_allclose": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "xarray.core.duck_array_ops.allclose_or_equiv",
    "xarray.testing._format_message"
   ]
  },
  "type": "function"
 },
 "xarray.testing.assert_duckarray_equal": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "equiv",
    "numpy.asarray",
    "xarray.core.duck_array_ops.array_equiv",
    "xarray.core.utils.is_duck_array",
    "xarray.core.utils.is_scalar",
    "xarray.testing._format_message"
   ]
  },
  "type": "function"
 },
 "xarray.testing.assert_equal": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "type",
    "xarray.core.dataarray.DataArray",
    "xarray.core.dataset.Dataset",
    "xarray.core.formatting.diff_array_repr",
    "xarray.core.formatting.diff_dataset_repr",
    "xarray.core.variable.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.testing.assert_identical": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "type",
    "xarray.core.dataarray.DataArray",
    "xarray.core.dataset.Dataset",
    "xarray.core.formatting.diff_array_repr",
    "xarray.core.formatting.diff_dataset_repr",
    "xarray.core.variable.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.testing.default_indexes": {
  "data": {
   "shadows": "xarray.core.indexes.default_indexes"
  },
  "type": "import"
 },
 "xarray.testing.duck_array_ops": {
  "data": {
   "shadows": "xarray.core.duck_array_ops"
  },
  "type": "import"
 },
 "xarray.testing.formatting": {
  "data": {
   "shadows": "xarray.core.formatting"
  },
  "type": "import"
 },
 "xarray.testing.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.testing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.testing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.testing.utils": {
  "data": {
   "shadows": "xarray.core.utils"
  },
  "type": "import"
 },
 "xarray.tests": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "matplotlib.use",
    "xarray.core.options.set_options",
    "xarray.tests._importorskip",
    "xarray.tests.dask",
    "xarray.tests.has_scipy_or_netCDF4",
    "xarray.tests.platform",
    "xarray.tests.pytest"
   ]
  },
  "type": "module"
 },
 "xarray.tests.ExplicitlyIndexed": {
  "data": {
   "shadows": "xarray.core.indexing.ExplicitlyIndexed"
  },
  "type": "import"
 },
 "xarray.tests.InaccessibleArray": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "xarray.core.indexing.ExplicitlyIndexed",
    "xarray.core.utils.NDArrayMixin"
   ]
  },
  "type": "class"
 },
 "xarray.tests.InaccessibleArray.__getitem__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "xarray.tests.UnexpectedDataAccess"
   ]
  },
  "type": "function"
 },
 "xarray.tests.InaccessibleArray.__init__": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "xarray.tests.IndexerMaker": {
  "data": {
   "lineno": 131
  },
  "type": "class"
 },
 "xarray.tests.IndexerMaker.__getitem__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "xarray.tests.IndexerMaker.__init__": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "xarray.tests.LooseVersion": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "distutils.version.LooseVersion"
   ]
  },
  "type": "function"
 },
 "xarray.tests.ReturnItem": {
  "data": {
   "lineno": 126
  },
  "type": "class"
 },
 "xarray.tests.ReturnItem.__getitem__": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "xarray.tests.UnexpectedDataAccess": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "xarray.tests._importorskip": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ImportError",
    "xarray.tests.LooseVersion",
    "xarray.tests.importlib",
    "xarray.tests.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.allclose_or_equiv": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.allclose_or_equiv"
  },
  "type": "import"
 },
 "xarray.tests.arm_xfail": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "xarray.tests.assert_allclose": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "xarray.tests.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "xarray.tests.assert_duckarray_allclose": {
  "data": {
   "shadows": "xarray.testing.assert_duckarray_allclose"
  },
  "type": "import"
 },
 "xarray.tests.assert_duckarray_equal": {
  "data": {
   "shadows": "xarray.testing.assert_duckarray_equal"
  },
  "type": "import"
 },
 "xarray.tests.assert_equal": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "xarray.tests.assert_frame_equal": {
  "data": {
   "shadows": "pandas.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "xarray.tests.assert_identical": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "xarray.tests.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "xarray.tests.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "xarray.tests.flaky": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "xarray.tests.has_scipy_or_netCDF4": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "xarray.tests.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "xarray.tests.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "xarray.tests.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "xarray.tests.network": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "xarray.tests.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "xarray.tests.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.raises_regex": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "AssertionError",
    "contextlib.contextmanager",
    "str",
    "xarray.tests.pytest",
    "xarray.tests.re"
   ]
  },
  "type": "function"
 },
 "xarray.tests.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "xarray.tests.requires_scipy_or_netCDF4": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "xarray.tests.set_options": {
  "data": {
   "shadows": "xarray.core.options.set_options"
  },
  "type": "import"
 },
 "xarray.tests.source_ndarray": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "getattr",
    "numpy.asarray",
    "xarray.tests.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_dt": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_accessor_dt.TestDatetimeAccessor": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "xarray.tests.test_accessor_dt.TestDatetimeAccessor.setup": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.random.choice",
    "numpy.random.rand",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.test_accessor_dt.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_dt.TestDatetimeAccessor.test_accessor_method": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "assert_array_equal",
    "getattr",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.test_accessor_dt.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_dt.TestDatetimeAccessor.test_dask_accessor_method": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "assert_chunks_equal",
    "assert_equal",
    "dask.array.Array",
    "dask.array.from_array",
    "getattr",
    "isinstance",
    "raise_if_dask_computes",
    "xarray.DataArray",
    "xarray.tests.test_accessor_dt.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_dt.TestDatetimeAccessor.test_dask_field_access": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "assert_chunks_equal",
    "assert_equal",
    "dask.array.Array",
    "dask.array.from_array",
    "getattr",
    "isinstance",
    "raise_if_dask_computes",
    "xarray.DataArray",
    "xarray.tests.test_accessor_dt.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_dt.TestDatetimeAccessor.test_field_access": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "assert_equal",
    "getattr",
    "xarray.DataArray",
    "xarray.tests.test_accessor_dt.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_dt.TestDatetimeAccessor.test_not_datetime_type": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "numpy.arange",
    "raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_dt.TestDatetimeAccessor.test_seasons": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "assert_array_equal",
    "pandas.date_range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_dt.TestDatetimeAccessor.test_strftime": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_dt.TestTimedeltaAccessor": {
  "data": {
   "lineno": 189
  },
  "type": "class"
 },
 "xarray.tests.test_accessor_dt.TestTimedeltaAccessor.setup": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.random.choice",
    "numpy.random.rand",
    "pandas.timedelta_range",
    "xarray.DataArray",
    "xarray.tests.test_accessor_dt.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_dt.TestTimedeltaAccessor.test_accessor_methods": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "assert_array_equal",
    "getattr",
    "pandas.timedelta_range",
    "xarray.DataArray",
    "xarray.tests.test_accessor_dt.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_dt.TestTimedeltaAccessor.test_dask_accessor_method": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "assert_chunks_equal",
    "assert_equal",
    "dask.array.Array",
    "dask.array.from_array",
    "getattr",
    "isinstance",
    "raise_if_dask_computes",
    "xarray.DataArray",
    "xarray.tests.test_accessor_dt.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_dt.TestTimedeltaAccessor.test_dask_field_access": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "assert_chunks_equal",
    "assert_equal",
    "dask.array.Array",
    "dask.array.from_array",
    "getattr",
    "isinstance",
    "raise_if_dask_computes",
    "xarray.DataArray",
    "xarray.tests.test_accessor_dt.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_dt.TestTimedeltaAccessor.test_field_access": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "assert_equal",
    "getattr",
    "xarray.DataArray",
    "xarray.tests.test_accessor_dt.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_dt.TestTimedeltaAccessor.test_not_datetime_type": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "numpy.arange",
    "raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_dt._CFTIME_CALENDARS": {
  "data": {
   "lineno": 282
  },
  "type": "constant"
 },
 "xarray.tests.test_accessor_dt._NT": {
  "data": {
   "lineno": 291
  },
  "type": "constant"
 },
 "xarray.tests.test_accessor_dt.calendar": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "xarray.tests.test_accessor_dt._CFTIME_CALENDARS",
    "xarray.tests.test_accessor_dt.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_dt.cftime": {
  "data": {
   "shadows": "cftime"
  },
  "type": "import"
 },
 "xarray.tests.test_accessor_dt.cftime_date_type": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "_all_cftime_date_types",
    "xarray.tests.test_accessor_dt.calendar",
    "xarray.tests.test_accessor_dt.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_dt.cftime_rounding_dataarray": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.test_accessor_dt.cftime_date_type",
    "xarray.tests.test_accessor_dt.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_dt.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.tests.test_accessor_dt.data": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.random.rand",
    "xarray.DataArray",
    "xarray.tests.test_accessor_dt._NT",
    "xarray.tests.test_accessor_dt.pytest",
    "xarray.tests.test_accessor_dt.times"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_dt.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_accessor_dt.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_accessor_dt.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_accessor_dt.test_cftime_ceil_accessor": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "assert_identical",
    "dask.array.Array",
    "isinstance",
    "raise_if_dask_computes",
    "xarray.DataArray",
    "xarray.tests.test_accessor_dt.cftime_date_type",
    "xarray.tests.test_accessor_dt.cftime_rounding_dataarray",
    "xarray.tests.test_accessor_dt.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_dt.test_cftime_floor_accessor": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "assert_identical",
    "dask.array.Array",
    "isinstance",
    "raise_if_dask_computes",
    "xarray.DataArray",
    "xarray.tests.test_accessor_dt.cftime_date_type",
    "xarray.tests.test_accessor_dt.cftime_rounding_dataarray",
    "xarray.tests.test_accessor_dt.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_dt.test_cftime_round_accessor": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "assert_identical",
    "dask.array.Array",
    "isinstance",
    "raise_if_dask_computes",
    "xarray.DataArray",
    "xarray.tests.test_accessor_dt.cftime_date_type",
    "xarray.tests.test_accessor_dt.cftime_rounding_dataarray",
    "xarray.tests.test_accessor_dt.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_dt.test_cftime_strftime_access": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "assert_equal",
    "xarray.DataArray",
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.tests.test_accessor_dt.data",
    "xarray.tests.test_accessor_dt.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_dt.test_dask_field_access": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "assert_equal",
    "dask.array.Array",
    "getattr",
    "isinstance",
    "xarray.DataArray",
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.tests.test_accessor_dt.pytest",
    "xarray.tests.test_accessor_dt.times_3d"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_dt.test_dask_field_access_1d": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "assert_equal",
    "dask.array.Array",
    "getattr",
    "isinstance",
    "xarray.DataArray",
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.tests.test_accessor_dt.data",
    "xarray.tests.test_accessor_dt.pytest",
    "xarray.tests.test_accessor_dt.times"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_dt.test_field_access": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "assert_equal",
    "getattr",
    "xarray.DataArray",
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.tests.test_accessor_dt.data",
    "xarray.tests.test_accessor_dt.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_dt.test_seasons": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "range",
    "xarray.DataArray",
    "xarray.tests.test_accessor_dt.cftime_date_type"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_dt.times": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "numpy.arange",
    "xarray.tests.test_accessor_dt._NT",
    "xarray.tests.test_accessor_dt.calendar",
    "xarray.tests.test_accessor_dt.cftime",
    "xarray.tests.test_accessor_dt.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_dt.times_3d": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.random.choice",
    "xarray.DataArray",
    "xarray.tests.test_accessor_dt._NT",
    "xarray.tests.test_accessor_dt.pytest",
    "xarray.tests.test_accessor_dt.times"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_dt.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_accessor_str": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_accessor_str.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.tests.test_accessor_str.dtype": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.bytes_",
    "numpy.str_",
    "xarray.tests.test_accessor_str.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_accessor_str.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_accessor_str.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "xarray.tests.test_accessor_str.test_case": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "assert_equal",
    "dask.array",
    "dask.array.str.capitalize",
    "dask.array.str.lower",
    "dask.array.str.swapcase",
    "dask.array.str.title",
    "dask.array.str.upper",
    "xarray.DataArray",
    "xarray.tests.test_accessor_str.dtype"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.test_center_ljust_rjust": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "assert_equal",
    "xarray.DataArray",
    "xarray.tests.test_accessor_str.dtype"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.test_center_ljust_rjust_fillchar": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "TypeError",
    "assert_equal",
    "xarray.DataArray",
    "xarray.tests.test_accessor_str.dtype",
    "xarray.tests.test_accessor_str.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.test_contains": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "assert_equal",
    "xarray.DataArray",
    "xarray.tests.test_accessor_str.dtype"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.test_count": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "assert_equal",
    "xarray.DataArray",
    "xarray.tests.test_accessor_str.dtype"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.test_dask": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "assert_equal",
    "dask.array.from_array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.test_empty_str_methods": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "assert_equal",
    "bool",
    "int",
    "numpy.empty",
    "str.maketrans",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.test_encode_decode": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "assert_equal",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.test_encode_decode_errors": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "UnicodeEncodeError",
    "assert_equal",
    "f",
    "xarray.DataArray",
    "xarray.tests.test_accessor_str.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.test_find": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "assert_equal",
    "xarray.DataArray",
    "xarray.tests.test_accessor_str.dtype"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.test_get": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "assert_equal",
    "xarray.DataArray",
    "xarray.tests.test_accessor_str.dtype"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.test_get_default": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "assert_equal",
    "xarray.DataArray",
    "xarray.tests.test_accessor_str.dtype"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.test_index": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "ValueError",
    "assert_equal",
    "xarray.DataArray",
    "xarray.tests.test_accessor_str.dtype",
    "xarray.tests.test_accessor_str.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.test_ismethods": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "assert_equal",
    "xarray.DataArray",
    "xarray.tests.test_accessor_str.dtype"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.test_isnumeric": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "assert_equal",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.test_len": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "assert_equal",
    "len",
    "xarray.DataArray",
    "xarray.tests.test_accessor_str.dtype"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.test_match": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "assert_equal",
    "xarray.DataArray",
    "xarray.tests.test_accessor_str.dtype"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.test_pad": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "assert_equal",
    "xarray.DataArray",
    "xarray.tests.test_accessor_str.dtype"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.test_pad_fillchar": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "TypeError",
    "assert_equal",
    "xarray.DataArray",
    "xarray.tests.test_accessor_str.dtype",
    "xarray.tests.test_accessor_str.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.test_repeat": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "assert_equal",
    "xarray.DataArray",
    "xarray.tests.test_accessor_str.dtype"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.test_replace": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "assert_equal",
    "xarray.DataArray",
    "xarray.tests.test_accessor_str.dtype"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.test_replace_callable": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "assert_equal",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.test_replace_compiled_regex": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "ValueError",
    "assert_equal",
    "xarray.DataArray",
    "xarray.tests.test_accessor_str.dtype",
    "xarray.tests.test_accessor_str.pytest",
    "xarray.tests.test_accessor_str.re"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.test_replace_literal": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "ValueError",
    "assert_equal",
    "xarray.DataArray",
    "xarray.tests.test_accessor_str.dtype",
    "xarray.tests.test_accessor_str.pytest",
    "xarray.tests.test_accessor_str.re"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.test_replace_unicode": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "assert_equal",
    "xarray.DataArray",
    "xarray.tests.test_accessor_str.re"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.test_slice": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "IndexError",
    "assert_equal",
    "print",
    "xarray.DataArray",
    "xarray.tests.test_accessor_str.dtype"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.test_slice_replace": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "assert_equal",
    "dask.array",
    "xarray.DataArray",
    "xarray.tests.test_accessor_str.dtype"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.test_starts_ends_with": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "assert_equal",
    "xarray.DataArray",
    "xarray.tests.test_accessor_str.dtype"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.test_strip_lstrip_rstrip": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "assert_equal",
    "xarray.DataArray",
    "xarray.tests.test_accessor_str.dtype"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.test_strip_lstrip_rstrip_args": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "assert_equal",
    "xarray.DataArray",
    "xarray.tests.test_accessor_str.dtype"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.test_translate": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "assert_equal",
    "str.maketrans",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.test_wrap": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "assert_equal",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.test_wrap_kwargs_passed": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "assert_equal",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.test_zfill": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "assert_equal",
    "xarray.DataArray",
    "xarray.tests.test_accessor_str.dtype"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessor_str.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_backends_api": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_backends_api._get_default_engine": {
  "data": {
   "shadows": "xarray.backends.api._get_default_engine"
  },
  "type": "import"
 },
 "xarray.tests.test_backends_api.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_backends_api.test__get_default_engine": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ValueError",
    "xarray.backends.api._get_default_engine",
    "xarray.tests.test_backends_api.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_common": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_backends_common.DummyArray": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "xarray.tests.test_backends_common.DummyArray.__getitem__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "xarray.tests.test_backends_common.DummyFailure"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_common.DummyArray.__init__": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "xarray.tests.test_backends_common.DummyFailure": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_backends_common.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_backends_common.robust_getitem": {
  "data": {
   "shadows": "xarray.backends.common.robust_getitem"
  },
  "type": "import"
 },
 "xarray.tests.test_backends_common.test_robust_getitem": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "xarray.backends.common.robust_getitem",
    "xarray.tests.test_backends_common.DummyArray",
    "xarray.tests.test_backends_common.DummyFailure",
    "xarray.tests.test_backends_common.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_file_manager": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_backends_file_manager.CachingFileManager": {
  "data": {
   "shadows": "xarray.backends.file_manager.CachingFileManager"
  },
  "type": "import"
 },
 "xarray.tests.test_backends_file_manager.LRUCache": {
  "data": {
   "shadows": "xarray.backends.lru_cache.LRUCache"
  },
  "type": "import"
 },
 "xarray.tests.test_backends_file_manager.file_cache": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "xarray.backends.lru_cache.LRUCache",
    "xarray.tests.test_backends_file_manager.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_file_manager.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "xarray.tests.test_backends_file_manager.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "xarray.tests.test_backends_file_manager.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "xarray.tests.test_backends_file_manager.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_backends_file_manager.set_options": {
  "data": {
   "shadows": "xarray.core.options.set_options"
  },
  "type": "import"
 },
 "xarray.tests.test_backends_file_manager.test_file_manager_acquire_context": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "open",
    "str",
    "xarray.backends.file_manager.CachingFileManager",
    "xarray.tests.test_backends_file_manager.file_cache",
    "xarray.tests.test_backends_file_manager.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_file_manager.test_file_manager_acquire_context.AcquisitionError": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_backends_file_manager.test_file_manager_autoclose": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "RuntimeWarning",
    "unittest.mock.Mock",
    "xarray.backends.file_manager.CachingFileManager",
    "xarray.core.options.set_options",
    "xarray.tests.test_backends_file_manager.gc",
    "xarray.tests.test_backends_file_manager.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_file_manager.test_file_manager_autoclose_while_locked": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "unittest.mock.Mock",
    "xarray.backends.file_manager.CachingFileManager",
    "xarray.core.options.set_options",
    "xarray.tests.test_backends_file_manager.gc",
    "xarray.tests.test_backends_file_manager.threading"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_file_manager.test_file_manager_invalid_kwargs": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "TypeError",
    "open",
    "xarray.backends.file_manager.CachingFileManager",
    "xarray.tests.test_backends_file_manager.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_file_manager.test_file_manager_mock_write": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "open",
    "unittest.mock.MagicMock",
    "unittest.mock.Mock",
    "unittest.mock.call",
    "xarray.backends.file_manager.CachingFileManager",
    "xarray.tests.test_backends_file_manager.file_cache",
    "xarray.tests.test_backends_file_manager.threading"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_file_manager.test_file_manager_read": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "open",
    "str",
    "xarray.backends.file_manager.CachingFileManager",
    "xarray.tests.test_backends_file_manager.file_cache"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_file_manager.test_file_manager_refcounts": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "open",
    "unittest.mock.Mock",
    "xarray.backends.file_manager.CachingFileManager",
    "xarray.core.options.set_options",
    "xarray.tests.test_backends_file_manager.gc"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_file_manager.test_file_manager_replace_object": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "unittest.mock.Mock",
    "xarray.backends.file_manager.CachingFileManager"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_file_manager.test_file_manager_repr": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "repr",
    "unittest.mock.Mock",
    "xarray.backends.file_manager.CachingFileManager"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_file_manager.test_file_manager_write_concurrent": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "open",
    "str",
    "xarray.backends.file_manager.CachingFileManager",
    "xarray.tests.test_backends_file_manager.file_cache"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_file_manager.test_file_manager_write_consecutive": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "float",
    "getattr",
    "open",
    "str",
    "xarray.backends.file_manager.CachingFileManager",
    "xarray.tests.test_backends_file_manager.file_cache"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_file_manager.test_file_manager_write_pickle": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "open",
    "str",
    "xarray.backends.file_manager.CachingFileManager",
    "xarray.tests.test_backends_file_manager.file_cache",
    "xarray.tests.test_backends_file_manager.pickle"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_file_manager.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "xarray.tests.test_backends_locks": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_backends_locks.locks": {
  "data": {
   "shadows": "xarray.backends.locks"
  },
  "type": "import"
 },
 "xarray.tests.test_backends_locks.test_threaded_lock": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "isinstance",
    "type",
    "xarray.backends.locks._get_threaded_lock",
    "xarray.tests.test_backends_locks.threading"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_locks.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "xarray.tests.test_backends_lru_cache": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_backends_lru_cache.LRUCache": {
  "data": {
   "shadows": "xarray.backends.lru_cache.LRUCache"
  },
  "type": "import"
 },
 "xarray.tests.test_backends_lru_cache.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "xarray.tests.test_backends_lru_cache.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_backends_lru_cache.test_del": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "dict",
    "xarray.backends.lru_cache.LRUCache"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_lru_cache.test_invalid": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "xarray.backends.lru_cache.LRUCache",
    "xarray.tests.test_backends_lru_cache.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_lru_cache.test_on_evict": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "unittest.mock.Mock",
    "xarray.backends.lru_cache.LRUCache"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_lru_cache.test_on_evict_trivial": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "unittest.mock.Mock",
    "xarray.backends.lru_cache.LRUCache"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_lru_cache.test_resize": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "xarray.backends.lru_cache.LRUCache",
    "xarray.tests.test_backends_lru_cache.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_lru_cache.test_simple": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "dict",
    "len",
    "list",
    "xarray.backends.lru_cache.LRUCache"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_lru_cache.test_trivial": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "len",
    "xarray.backends.lru_cache.LRUCache"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_lru_cache.test_update_priority": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "list",
    "xarray.backends.lru_cache.LRUCache"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets": {
  "data": {
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.BaseCFTimeOffset",
    "xarray.coding.cftime_offsets.Day",
    "xarray.coding.cftime_offsets.Hour",
    "xarray.coding.cftime_offsets.Minute",
    "xarray.coding.cftime_offsets.MonthBegin",
    "xarray.coding.cftime_offsets.MonthEnd",
    "xarray.coding.cftime_offsets.QuarterBegin",
    "xarray.coding.cftime_offsets.QuarterEnd",
    "xarray.coding.cftime_offsets.Second",
    "xarray.coding.cftime_offsets.YearBegin",
    "xarray.coding.cftime_offsets.YearEnd",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "module"
 },
 "xarray.tests.test_cftime_offsets.BaseCFTimeOffset": {
  "data": {
   "shadows": "xarray.coding.cftime_offsets.BaseCFTimeOffset"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.CFTimeIndex": {
  "data": {
   "shadows": "xarray.CFTimeIndex"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.DatetimeGregorian": {
  "data": {
   "shadows": "cftime.DatetimeGregorian"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.Day": {
  "data": {
   "shadows": "xarray.coding.cftime_offsets.Day"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.Hour": {
  "data": {
   "shadows": "xarray.coding.cftime_offsets.Hour"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.Minute": {
  "data": {
   "shadows": "xarray.coding.cftime_offsets.Minute"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.MonthBegin": {
  "data": {
   "shadows": "xarray.coding.cftime_offsets.MonthBegin"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.MonthEnd": {
  "data": {
   "shadows": "xarray.coding.cftime_offsets.MonthEnd"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.QuarterBegin": {
  "data": {
   "shadows": "xarray.coding.cftime_offsets.QuarterBegin"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.QuarterEnd": {
  "data": {
   "shadows": "xarray.coding.cftime_offsets.QuarterEnd"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.Second": {
  "data": {
   "shadows": "xarray.coding.cftime_offsets.Second"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.YearBegin": {
  "data": {
   "shadows": "xarray.coding.cftime_offsets.YearBegin"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.YearEnd": {
  "data": {
   "shadows": "xarray.coding.cftime_offsets.YearEnd"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets._ADD_TESTS": {
  "data": {
   "lineno": 397
  },
  "type": "constant"
 },
 "xarray.tests.test_cftime_offsets._ANNUAL_OFFSET_TYPES": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "xarray.tests.test_cftime_offsets._CALENDAR_SPECIFIC_MONTH_END_TESTS": {
  "data": {
   "lineno": 1133
  },
  "type": "constant"
 },
 "xarray.tests.test_cftime_offsets._CFTIME_CALENDARS": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "xarray.tests.test_cftime_offsets._CFTIME_RANGE_TESTS": {
  "data": {
   "lineno": 936
  },
  "type": "constant"
 },
 "xarray.tests.test_cftime_offsets._EQ_TESTS_A": {
  "data": {
   "lineno": 286
  },
  "type": "constant"
 },
 "xarray.tests.test_cftime_offsets._EQ_TESTS_B": {
  "data": {
   "lineno": 303
  },
  "type": "constant"
 },
 "xarray.tests.test_cftime_offsets._EQ_TESTS_B_COPY": {
  "data": {
   "lineno": 327
  },
  "type": "constant"
 },
 "xarray.tests.test_cftime_offsets._MONTH_ABBREVIATIONS": {
  "data": {
   "shadows": "xarray.coding.cftime_offsets._MONTH_ABBREVIATIONS"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets._MUL_TESTS": {
  "data": {
   "lineno": 351
  },
  "type": "constant"
 },
 "xarray.tests.test_cftime_offsets._QUARTER_OFFSET_TYPES": {
  "data": {
   "lineno": 219
  },
  "type": "constant"
 },
 "xarray.tests.test_cftime_offsets._days_in_month": {
  "data": {
   "shadows": "xarray.coding.cftime_offsets._days_in_month"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets._id_func": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.calendar": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "xarray.tests.test_cftime_offsets._CFTIME_CALENDARS",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.cftime": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "xarray.tests.test_cftime_offsets.cftime_range": {
  "data": {
   "shadows": "xarray.coding.cftime_offsets.cftime_range"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.get_date_type": {
  "data": {
   "shadows": "xarray.coding.cftime_offsets.get_date_type"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.test_add_month_begin": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "date_type",
    "offset",
    "xarray.coding.cftime_offsets.MonthBegin",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_add_month_end": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "date_type",
    "offset",
    "xarray.coding.cftime_offsets.MonthEnd",
    "xarray.coding.cftime_offsets._days_in_month",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_add_month_end_onOffset": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "date_type",
    "offset",
    "xarray.coding.cftime_offsets.MonthEnd",
    "xarray.coding.cftime_offsets._days_in_month",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_add_quarter_begin": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "date_type",
    "offset",
    "xarray.coding.cftime_offsets.QuarterBegin",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_add_quarter_end": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "date_type",
    "offset",
    "xarray.coding.cftime_offsets.QuarterEnd",
    "xarray.coding.cftime_offsets._days_in_month",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_add_quarter_end_onOffset": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "date_type",
    "offset",
    "xarray.coding.cftime_offsets.QuarterEnd",
    "xarray.coding.cftime_offsets._days_in_month",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_add_sub_monthly": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "date_type",
    "offset",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._ADD_TESTS",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_add_year_begin": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "date_type",
    "offset",
    "xarray.coding.cftime_offsets.YearBegin",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_add_year_end": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "date_type",
    "offset",
    "xarray.coding.cftime_offsets.YearEnd",
    "xarray.coding.cftime_offsets._days_in_month",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_add_year_end_onOffset": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "date_type",
    "offset",
    "xarray.coding.cftime_offsets.YearEnd",
    "xarray.coding.cftime_offsets._days_in_month",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_calendar_specific_month_end": {
  "data": {
   "lineno": 1143,
   "symbols_in_volume": [
    "date_type",
    "numpy.testing.assert_equal",
    "xarray.coding.cftime_offsets.cftime_range",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._CALENDAR_SPECIFIC_MONTH_END_TESTS",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_calendar_year_length": {
  "data": {
   "lineno": 1158,
   "symbols_in_volume": [
    "len",
    "xarray.coding.cftime_offsets.cftime_range",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_cftime_offset_constructor_invalid_n": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "TypeError",
    "offset",
    "xarray.coding.cftime_offsets.BaseCFTimeOffset",
    "xarray.coding.cftime_offsets.QuarterBegin",
    "xarray.coding.cftime_offsets.QuarterEnd",
    "xarray.coding.cftime_offsets.YearBegin",
    "xarray.coding.cftime_offsets.YearEnd",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_cftime_offset_constructor_valid_n": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.BaseCFTimeOffset",
    "xarray.coding.cftime_offsets.QuarterBegin",
    "xarray.coding.cftime_offsets.QuarterEnd",
    "xarray.coding.cftime_offsets.YearBegin",
    "xarray.coding.cftime_offsets.YearEnd",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_cftime_range": {
  "data": {
   "lineno": 1067,
   "symbols_in_volume": [
    "date_type",
    "isinstance",
    "numpy.abs",
    "numpy.array",
    "numpy.max",
    "numpy.testing.assert_equal",
    "tuple",
    "xarray.CFTimeIndex",
    "xarray.coding.cftime_offsets.cftime_range",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._CFTIME_RANGE_TESTS",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_cftime_range_name": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.cftime_range"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_cftime_range_standard_calendar_refers_to_gregorian": {
  "data": {
   "lineno": 1196,
   "symbols_in_volume": [
    "cftime.DatetimeGregorian",
    "isinstance",
    "xarray.coding.cftime_offsets.cftime_range"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_dayofweek_after_cftime_range": {
  "data": {
   "lineno": 1180,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "pandas.date_range",
    "xarray.coding.cftime_offsets.cftime_range",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_dayofyear_after_cftime_range": {
  "data": {
   "lineno": 1188,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "pandas.date_range",
    "xarray.coding.cftime_offsets.cftime_range",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_days_in_month_december": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "date_type",
    "xarray.coding.cftime_offsets._days_in_month",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets.calendar"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_days_in_month_non_december": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "date_type",
    "xarray.coding.cftime_offsets._days_in_month",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets.calendar"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_eq": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "xarray.tests.test_cftime_offsets._EQ_TESTS_B",
    "xarray.tests.test_cftime_offsets._EQ_TESTS_B_COPY",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_invalid_cftime_range_inputs": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "ValueError",
    "xarray.coding.cftime_offsets.cftime_range",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_invalid_to_offset_str": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "ValueError",
    "xarray.coding.cftime_offsets.to_offset",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_minus_offset": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "xarray.tests.test_cftime_offsets._EQ_TESTS_A",
    "xarray.tests.test_cftime_offsets._EQ_TESTS_B",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_minus_offset_error": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "numpy.roll",
    "xarray.coding.cftime_offsets.YearEnd",
    "xarray.tests.test_cftime_offsets._EQ_TESTS_A",
    "xarray.tests.test_cftime_offsets._EQ_TESTS_B",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_mul": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "offset",
    "xarray.tests.test_cftime_offsets._MUL_TESTS",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_neg": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "offset",
    "xarray.coding.cftime_offsets.BaseCFTimeOffset",
    "xarray.coding.cftime_offsets.Day",
    "xarray.coding.cftime_offsets.Hour",
    "xarray.coding.cftime_offsets.Minute",
    "xarray.coding.cftime_offsets.MonthBegin",
    "xarray.coding.cftime_offsets.MonthEnd",
    "xarray.coding.cftime_offsets.QuarterBegin",
    "xarray.coding.cftime_offsets.QuarterEnd",
    "xarray.coding.cftime_offsets.Second",
    "xarray.coding.cftime_offsets.YearBegin",
    "xarray.coding.cftime_offsets.YearEnd",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_neq": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "itertools.product",
    "xarray.tests.test_cftime_offsets._EQ_TESTS_A",
    "xarray.tests.test_cftime_offsets._EQ_TESTS_B",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_onOffset": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "date_type",
    "offset.onOffset",
    "xarray.coding.cftime_offsets.Day",
    "xarray.coding.cftime_offsets.Hour",
    "xarray.coding.cftime_offsets.Minute",
    "xarray.coding.cftime_offsets.MonthBegin",
    "xarray.coding.cftime_offsets.MonthEnd",
    "xarray.coding.cftime_offsets.QuarterBegin",
    "xarray.coding.cftime_offsets.QuarterEnd",
    "xarray.coding.cftime_offsets.Second",
    "xarray.coding.cftime_offsets.YearBegin",
    "xarray.coding.cftime_offsets.YearEnd",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_onOffset_month_or_quarter_or_year_end": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "date_type",
    "offset.onOffset",
    "xarray.coding.cftime_offsets.MonthEnd",
    "xarray.coding.cftime_offsets.QuarterEnd",
    "xarray.coding.cftime_offsets.YearEnd",
    "xarray.coding.cftime_offsets._days_in_month",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_radd_sub_monthly": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "date_type",
    "offset",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._ADD_TESTS",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_rmul": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "offset",
    "xarray.tests.test_cftime_offsets._MUL_TESTS",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_rollback": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "date_type",
    "isinstance",
    "offset",
    "offset.rollback",
    "xarray.coding.cftime_offsets.Day",
    "xarray.coding.cftime_offsets.Hour",
    "xarray.coding.cftime_offsets.Minute",
    "xarray.coding.cftime_offsets.MonthBegin",
    "xarray.coding.cftime_offsets.MonthEnd",
    "xarray.coding.cftime_offsets.QuarterBegin",
    "xarray.coding.cftime_offsets.QuarterEnd",
    "xarray.coding.cftime_offsets.Second",
    "xarray.coding.cftime_offsets.YearBegin",
    "xarray.coding.cftime_offsets.YearEnd",
    "xarray.coding.cftime_offsets._days_in_month",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_rollforward": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "date_type",
    "isinstance",
    "offset",
    "offset.rollforward",
    "xarray.coding.cftime_offsets.Day",
    "xarray.coding.cftime_offsets.Hour",
    "xarray.coding.cftime_offsets.Minute",
    "xarray.coding.cftime_offsets.MonthBegin",
    "xarray.coding.cftime_offsets.MonthEnd",
    "xarray.coding.cftime_offsets.QuarterBegin",
    "xarray.coding.cftime_offsets.QuarterEnd",
    "xarray.coding.cftime_offsets.Second",
    "xarray.coding.cftime_offsets.YearBegin",
    "xarray.coding.cftime_offsets.YearEnd",
    "xarray.coding.cftime_offsets._days_in_month",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_rsub_sub_monthly": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "date_type",
    "offset",
    "xarray.coding.cftime_offsets.Day",
    "xarray.coding.cftime_offsets.Hour",
    "xarray.coding.cftime_offsets.Minute",
    "xarray.coding.cftime_offsets.Second",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_rule_code": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "offset.rule_code",
    "xarray.coding.cftime_offsets.BaseCFTimeOffset",
    "xarray.coding.cftime_offsets.MonthBegin",
    "xarray.coding.cftime_offsets.QuarterBegin",
    "xarray.coding.cftime_offsets.YearBegin",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_str_and_repr": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "offset",
    "repr",
    "str",
    "xarray.coding.cftime_offsets.BaseCFTimeOffset",
    "xarray.coding.cftime_offsets.QuarterBegin",
    "xarray.coding.cftime_offsets.YearBegin",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_sub_error": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "TypeError",
    "date_type",
    "offset",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._EQ_TESTS_A",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_to_cftime_datetime": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "date_type",
    "isinstance",
    "tuple",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.coding.cftime_offsets.to_cftime_datetime",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_to_cftime_datetime_error_no_calendar": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "ValueError",
    "xarray.coding.cftime_offsets.to_cftime_datetime",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_to_cftime_datetime_error_type_error": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "TypeError",
    "xarray.coding.cftime_offsets.to_cftime_datetime",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_to_offset_annual": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "list",
    "offset_type",
    "xarray.coding.cftime_offsets._MONTH_ABBREVIATIONS.items",
    "xarray.coding.cftime_offsets.to_offset",
    "xarray.tests.test_cftime_offsets._ANNUAL_OFFSET_TYPES",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_to_offset_offset_input": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "offset",
    "xarray.coding.cftime_offsets.BaseCFTimeOffset",
    "xarray.coding.cftime_offsets.MonthBegin",
    "xarray.coding.cftime_offsets.QuarterBegin",
    "xarray.coding.cftime_offsets.YearBegin",
    "xarray.coding.cftime_offsets.to_offset",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_to_offset_quarter": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "list",
    "offset_type",
    "xarray.coding.cftime_offsets.QuarterBegin",
    "xarray.coding.cftime_offsets.QuarterEnd",
    "xarray.coding.cftime_offsets._MONTH_ABBREVIATIONS.items",
    "xarray.coding.cftime_offsets.to_offset",
    "xarray.tests.test_cftime_offsets._QUARTER_OFFSET_TYPES",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_to_offset_sub_annual": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.Day",
    "xarray.coding.cftime_offsets.Hour",
    "xarray.coding.cftime_offsets.Minute",
    "xarray.coding.cftime_offsets.MonthBegin",
    "xarray.coding.cftime_offsets.MonthEnd",
    "xarray.coding.cftime_offsets.Second",
    "xarray.coding.cftime_offsets.to_offset",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_year_offset_constructor_invalid_month": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "offset",
    "xarray.coding.cftime_offsets.QuarterBegin",
    "xarray.coding.cftime_offsets.QuarterEnd",
    "xarray.coding.cftime_offsets.YearBegin",
    "xarray.coding.cftime_offsets.YearEnd",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_year_offset_constructor_valid_month": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "offset.month",
    "xarray.coding.cftime_offsets.QuarterBegin",
    "xarray.coding.cftime_offsets.QuarterEnd",
    "xarray.coding.cftime_offsets.YearBegin",
    "xarray.coding.cftime_offsets.YearEnd",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.to_cftime_datetime": {
  "data": {
   "shadows": "xarray.coding.cftime_offsets.to_cftime_datetime"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.to_offset": {
  "data": {
   "shadows": "xarray.coding.cftime_offsets.to_offset"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex": {
  "data": {
   "symbols_in_volume": [
    "slice",
    "xarray.tests.test_cftimeindex.date_dict"
   ]
  },
  "type": "module"
 },
 "xarray.tests.test_cftimeindex.CFTimeIndex": {
  "data": {
   "shadows": "xarray.coding.cftimeindex.CFTimeIndex"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex.DatetimeNoLeap": {
  "data": {
   "shadows": "cftime.DatetimeNoLeap"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex.ISO8601_LIKE_STRING_TESTS": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "xarray.tests.test_cftimeindex.SEL_STRING_OR_LIST_TESTS": {
  "data": {
   "lineno": 439
  },
  "type": "constant"
 },
 "xarray.tests.test_cftimeindex._CFTIME_CALENDARS": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "xarray.tests.test_cftimeindex._parse_array_of_cftime_strings": {
  "data": {
   "shadows": "xarray.coding.cftimeindex._parse_array_of_cftime_strings"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex._parse_iso8601_with_reso": {
  "data": {
   "shadows": "xarray.coding.cftimeindex._parse_iso8601_with_reso"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex._parsed_string_to_bounds": {
  "data": {
   "shadows": "xarray.coding.cftimeindex._parsed_string_to_bounds"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex.assert_all_valid_date_type": {
  "data": {
   "shadows": "xarray.coding.cftimeindex.assert_all_valid_date_type"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex.assert_array_equal": {
  "data": {
   "shadows": "xarray.tests.assert_array_equal"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex.assert_identical": {
  "data": {
   "shadows": "xarray.tests.assert_identical"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex.cftime": {
  "data": {
   "shadows": "cftime"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex.da": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.date_dict": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.date_type": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "_all_cftime_date_types",
    "xarray.tests.test_cftimeindex._CFTIME_CALENDARS",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.dec_days": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "xarray.tests.test_cftimeindex.cftime",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex.df": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.feb_days": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "xarray.tests.test_cftimeindex.cftime",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.index": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.index_with_name": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.length_one_index": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.monotonic_decreasing_index": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex.parse_iso8601_like": {
  "data": {
   "shadows": "xarray.coding.cftimeindex.parse_iso8601_like"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex.range_args": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "slice",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.rounding_index": {
  "data": {
   "lineno": 1110,
   "symbols_in_volume": [
    "xarray.CFTimeIndex",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.scalar_args": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.series": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "pandas.Series",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_asi8": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "xarray.CFTimeIndex",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_asi8_distant_date": {
  "data": {
   "lineno": 1168,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "xarray.CFTimeIndex",
    "xarray.tests.test_cftimeindex.cftime",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_assert_all_valid_date_type": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "xarray.coding.cftimeindex.assert_all_valid_date_type",
    "xarray.tests.test_cftimeindex.cftime",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_ceil": {
  "data": {
   "lineno": 1121,
   "symbols_in_volume": [
    "xarray.CFTimeIndex",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.rounding_index"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftime_datetime_sub_cftimeindex": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "datetime.timedelta",
    "isinstance",
    "pandas.TimedeltaIndex",
    "range",
    "xarray.cftime_range",
    "xarray.tests.test_cftimeindex._CFTIME_CALENDARS",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_add": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "datetime.timedelta",
    "isinstance",
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_add_timedeltaindex": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "datetime.timedelta",
    "isinstance",
    "pandas.TimedeltaIndex",
    "range",
    "xarray.cftime_range",
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.tests.test_cftimeindex._CFTIME_CALENDARS",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_calendar_property": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": [
    "xarray.cftime_range",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_calendar_repr": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": [
    "xarray.cftime_range",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_dayofweek_accessor": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "xarray.tests.assert_array_equal",
    "xarray.tests.test_cftimeindex.index"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_dayofyear_accessor": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "xarray.tests.assert_array_equal",
    "xarray.tests.test_cftimeindex.index"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_days_in_month_accessor": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "xarray.tests.assert_array_equal",
    "xarray.tests.test_cftimeindex.index"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_field_accessors": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "getattr",
    "xarray.tests.assert_array_equal",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_periods_repr": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "xarray.cftime_range",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_radd": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "datetime.timedelta",
    "isinstance",
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_repr_101_shorter": {
  "data": {
   "lineno": 1006,
   "symbols_in_volume": [
    "len",
    "xarray.cftime_range",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_repr_formatting": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "repr",
    "textwrap.dedent",
    "xarray.cftime_range",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_repr_formatting_width": {
  "data": {
   "lineno": 988,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "xarray.cftime_range",
    "xarray.set_options",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_rsub": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": [
    "TypeError",
    "datetime.timedelta",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_shift": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "datetime.timedelta",
    "isinstance",
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_shift_invalid_freq": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "TypeError",
    "xarray.cftime_range",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_shift_invalid_n": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "TypeError",
    "xarray.cftime_range",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_sub_cftime_datetime": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "datetime.timedelta",
    "isinstance",
    "pandas.TimedeltaIndex",
    "range",
    "xarray.cftime_range",
    "xarray.tests.test_cftimeindex._CFTIME_CALENDARS",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_sub_cftimeindex": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "datetime.timedelta",
    "isinstance",
    "pandas.TimedeltaIndex",
    "range",
    "xarray.cftime_range",
    "xarray.tests.test_cftimeindex._CFTIME_CALENDARS",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_sub_index_of_cftime_datetimes": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Index",
    "pandas.TimedeltaIndex",
    "xarray.cftime_range",
    "xarray.tests.test_cftimeindex._CFTIME_CALENDARS",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_sub_not_implemented": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": [
    "TypeError",
    "xarray.cftime_range",
    "xarray.tests.test_cftimeindex._CFTIME_CALENDARS",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_sub_timedelta": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "datetime.timedelta",
    "isinstance",
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_sub_timedelta_array": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "datetime.timedelta",
    "isinstance",
    "numpy.array",
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_sub_timedeltaindex": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "datetime.timedelta",
    "isinstance",
    "pandas.TimedeltaIndex",
    "range",
    "xarray.cftime_range",
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.tests.test_cftimeindex._CFTIME_CALENDARS",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_concat_cftimeindex": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "isinstance",
    "xarray.DataArray",
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.concat",
    "xarray.tests.test_cftimeindex.da",
    "xarray.tests.test_cftimeindex.date_type"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_constructor_with_name": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.tests.test_cftimeindex.index_with_name",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_contains": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_date_type_property": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_distant_cftime_datetime_sub_cftimeindex": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "ValueError",
    "xarray.cftime_range",
    "xarray.tests.test_cftimeindex._CFTIME_CALENDARS",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_empty_cftimeindex": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.tests.test_cftimeindex.index"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_floor": {
  "data": {
   "lineno": 1134,
   "symbols_in_volume": [
    "xarray.CFTimeIndex",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.rounding_index"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_get_loc": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "KeyError",
    "raises_regex",
    "slice",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_get_slice_bound": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_get_slice_bound_decreasing_index": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.monotonic_decreasing_index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_get_slice_bound_length_one_index": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.length_one_index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_groupby": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_cftimeindex.da"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_indexing_in_dataframe_iloc": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "xarray.tests.test_cftimeindex.df",
    "xarray.tests.test_cftimeindex.index"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_indexing_in_dataframe_loc": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "xarray.tests.test_cftimeindex.df",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.range_args",
    "xarray.tests.test_cftimeindex.scalar_args"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_indexing_in_series_getitem": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "pandas.Series",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.range_args",
    "xarray.tests.test_cftimeindex.scalar_args",
    "xarray.tests.test_cftimeindex.series"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_indexing_in_series_iloc": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "pandas.Series",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.series"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_indexing_in_series_loc": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "pandas.Series",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.range_args",
    "xarray.tests.test_cftimeindex.scalar_args",
    "xarray.tests.test_cftimeindex.series"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_infer_freq": {
  "data": {
   "lineno": 1224,
   "symbols_in_volume": [
    "xarray.cftime_range",
    "xarray.infer_freq",
    "xarray.tests.test_cftimeindex._CFTIME_CALENDARS",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_infer_freq_invalid_inputs": {
  "data": {
   "lineno": 1195,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "xarray.DataArray",
    "xarray.cftime_range",
    "xarray.infer_freq",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_infer_freq_valid_types": {
  "data": {
   "lineno": 1180,
   "symbols_in_volume": [
    "pandas.date_range",
    "pandas.timedelta_range",
    "xarray.DataArray",
    "xarray.cftime_range",
    "xarray.infer_freq"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_isel": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_cftimeindex.da",
    "xarray.tests.test_cftimeindex.index"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_multiindex": {
  "data": {
   "lineno": 1083,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_arrays",
    "slice",
    "xarray.cftime_range",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_parse_array_of_cftime_strings": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "cftime.DatetimeNoLeap",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "xarray.coding.cftimeindex._parse_array_of_cftime_strings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_parse_iso8601_like": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "xarray.coding.cftimeindex.parse_iso8601_like",
    "xarray.tests.test_cftimeindex.ISO8601_LIKE_STRING_TESTS",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_parse_iso8601_with_reso": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "xarray.coding.cftimeindex._parse_iso8601_with_reso",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_parse_string_to_bounds_month_dec": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "xarray.coding.cftimeindex._parsed_string_to_bounds",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.dec_days"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_parse_string_to_bounds_month_feb": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "xarray.coding.cftimeindex._parsed_string_to_bounds",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.feb_days"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_parse_string_to_bounds_year": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "xarray.coding.cftimeindex._parsed_string_to_bounds",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.dec_days"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_parsed_string_to_bounds_raises": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "KeyError",
    "xarray.coding.cftimeindex._parsed_string_to_bounds",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_parsed_string_to_bounds_sub_monthly": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "xarray.coding.cftimeindex._parsed_string_to_bounds",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_round": {
  "data": {
   "lineno": 1147,
   "symbols_in_volume": [
    "xarray.CFTimeIndex",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.rounding_index"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_rounding_methods_against_datetimeindex": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": [
    "getattr",
    "pandas.date_range",
    "xarray.cftime_range",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_rounding_methods_invalid_freq": {
  "data": {
   "lineno": 1102,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "xarray.cftime_range",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_sel_date_distant_date": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_cftimeindex.da",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_sel_date_list_backfill": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "datetime.timedelta",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_cftimeindex.da",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_sel_date_list_nearest": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "datetime.timedelta",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_cftimeindex.da",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_sel_date_list_pad": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "datetime.timedelta",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_cftimeindex.da",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_sel_date_list_tolerance_raises": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "KeyError",
    "datetime.timedelta",
    "xarray.tests.test_cftimeindex.da",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_sel_date_scalar": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_cftimeindex.da",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_sel_date_scalar_backfill": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "datetime.timedelta",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_cftimeindex.da",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_sel_date_scalar_nearest": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "datetime.timedelta",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_cftimeindex.da",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_sel_date_scalar_pad": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "datetime.timedelta",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_cftimeindex.da",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_sel_date_scalar_tolerance_raises": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "KeyError",
    "datetime.timedelta",
    "xarray.tests.test_cftimeindex.da",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_sel_date_slice_or_list": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "slice",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_cftimeindex.da",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_sel_string_or_list": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "list",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_cftimeindex.SEL_STRING_OR_LIST_TESTS",
    "xarray.tests.test_cftimeindex.da",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_series_dropna": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.series"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_strftime_of_cftime_array": {
  "data": {
   "lineno": 1038,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.date_range",
    "xarray.cftime_range",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_string_slice_length_one_index": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "slice",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_cftimeindex.da",
    "xarray.tests.test_cftimeindex.length_one_index"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_timedeltaindex_add_cftimeindex": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "datetime.timedelta",
    "isinstance",
    "pandas.TimedeltaIndex",
    "range",
    "xarray.cftime_range",
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.tests.test_cftimeindex._CFTIME_CALENDARS",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_to_datetimeindex": {
  "data": {
   "lineno": 1049,
   "symbols_in_volume": [
    "RuntimeWarning",
    "isinstance",
    "numpy.testing.assert_array_equal",
    "pandas.DatetimeIndex",
    "pandas.date_range",
    "xarray.cftime_range",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_to_datetimeindex_feb_29": {
  "data": {
   "lineno": 1075,
   "symbols_in_volume": [
    "ValueError",
    "xarray.cftime_range",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_to_datetimeindex_out_of_range": {
  "data": {
   "lineno": 1067,
   "symbols_in_volume": [
    "ValueError",
    "xarray.cftime_range",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex_resample": {
  "data": {
   "symbols_in_volume": [
    "xarray.tests.test_cftimeindex_resample.pytest"
   ]
  },
  "type": "module"
 },
 "xarray.tests.test_cftimeindex_resample.CFTimeGrouper": {
  "data": {
   "shadows": "xarray.core.resample_cftime.CFTimeGrouper"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex_resample.FREQS": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "xarray.tests.test_cftimeindex_resample.da": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.arange",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex_resample.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex_resample.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex_resample.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex_resample.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex_resample.test_calendars": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "pandas.date_range",
    "xarray.cftime_range",
    "xarray.testing.assert_identical",
    "xarray.tests.test_cftimeindex_resample.da",
    "xarray.tests.test_cftimeindex_resample.datetime",
    "xarray.tests.test_cftimeindex_resample.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex_resample.test_closed_label_defaults": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "xarray.core.resample_cftime.CFTimeGrouper",
    "xarray.tests.test_cftimeindex_resample.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex_resample.test_resample": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "pandas.date_range",
    "xarray.cftime_range",
    "xarray.testing.assert_identical",
    "xarray.tests.test_cftimeindex_resample.FREQS",
    "xarray.tests.test_cftimeindex_resample.da",
    "xarray.tests.test_cftimeindex_resample.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex_resample.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_coding": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "contextlib.suppress",
    "numpy.dtype",
    "numpy.float32",
    "numpy.float64",
    "pandas.date_range",
    "xarray.tests.test_coding.encoding_with_dtype",
    "xarray.tests.test_coding.encoding_without_dtype"
   ]
  },
  "type": "module"
 },
 "xarray.tests.test_coding.CFMASKCODER_ENCODE_DTYPE_CONFLICT_TESTS": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "xarray.tests.test_coding.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.tests.test_coding.decode_cf_variable": {
  "data": {
   "shadows": "xarray.conventions.decode_cf_variable"
  },
  "type": "import"
 },
 "xarray.tests.test_coding.encode_cf_variable": {
  "data": {
   "shadows": "xarray.conventions.encode_cf_variable"
  },
  "type": "import"
 },
 "xarray.tests.test_coding.encoding_with_dtype": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "xarray.tests.test_coding.encoding_without_dtype": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "xarray.tests.test_coding.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_coding.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_coding.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_coding.suppress": {
  "data": {
   "shadows": "contextlib.suppress"
  },
  "type": "import"
 },
 "xarray.tests.test_coding.test_CFMaskCoder_decode": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "xarray.Variable",
    "xarray.coding.variables.CFMaskCoder"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding.test_CFMaskCoder_decode_dask": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "assert_identical",
    "dask.array.Array",
    "isinstance",
    "numpy.nan",
    "xarray.Variable",
    "xarray.coding.variables.CFMaskCoder"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding.test_CFMaskCoder_encode_missing_fill_values_conflict": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "assert_identical",
    "list",
    "xarray.Variable",
    "xarray.coding.variables.SerializationWarning",
    "xarray.conventions.decode_cf_variable",
    "xarray.conventions.encode_cf_variable",
    "xarray.tests.test_coding.CFMASKCODER_ENCODE_DTYPE_CONFLICT_TESTS",
    "xarray.tests.test_coding.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding.test_CFMaskCoder_missing_value": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError",
    "assert_equal",
    "numpy.array",
    "xarray.DataArray",
    "xarray.conventions.cf_encoder",
    "xarray.decode_cf",
    "xarray.tests.test_coding.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding.test_coder_roundtrip": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "xarray.Variable",
    "xarray.coding.variables.CFMaskCoder"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding.test_scaling_converts_to_float32": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "assert_identical",
    "dict",
    "numpy.arange",
    "numpy.float32",
    "xarray.Variable",
    "xarray.coding.variables.CFScaleOffsetCoder",
    "xarray.tests.test_coding.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding.variables": {
  "data": {
   "shadows": "xarray.coding.variables"
  },
  "type": "import"
 },
 "xarray.tests.test_coding.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_strings": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "contextlib.suppress"
   ]
  },
  "type": "module"
 },
 "xarray.tests.test_coding_strings.Variable": {
  "data": {
   "shadows": "xarray.Variable"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_strings.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_strings.indexing": {
  "data": {
   "shadows": "xarray.core.indexing"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_strings.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_strings.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_strings.strings": {
  "data": {
   "shadows": "xarray.coding.strings"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_strings.suppress": {
  "data": {
   "shadows": "contextlib.suppress"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_strings.test_CharacterArrayCoder_char_dim_name": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "xarray.Variable",
    "xarray.coding.strings.CharacterArrayCoder",
    "xarray.tests.test_coding_strings.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_strings.test_CharacterArrayCoder_encode": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "assert_identical",
    "bytes",
    "numpy.array",
    "xarray.Variable",
    "xarray.coding.strings.CharacterArrayCoder",
    "xarray.coding.strings.create_vlen_dtype",
    "xarray.tests.test_coding_strings.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_strings.test_CharacterArrayCoder_roundtrip": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Variable",
    "xarray.coding.strings.CharacterArrayCoder",
    "xarray.tests.test_coding_strings.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_strings.test_EncodedStringCoder_decode": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.array",
    "object",
    "xarray.Variable",
    "xarray.coding.strings.EncodedStringCoder"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_strings.test_EncodedStringCoder_decode_dask": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "assert_identical",
    "dask.array.Array",
    "isinstance",
    "numpy.array",
    "object",
    "xarray.Variable",
    "xarray.coding.strings.EncodedStringCoder"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_strings.test_EncodedStringCoder_encode": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.array",
    "object",
    "str",
    "xarray.Variable",
    "xarray.coding.strings.EncodedStringCoder",
    "xarray.coding.strings.create_vlen_dtype"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_strings.test_StackedBytesArray": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "IndexError",
    "IndexerMaker",
    "assert_array_equal",
    "len",
    "numpy.array",
    "xarray.coding.strings.StackedBytesArray",
    "xarray.core.indexing.BasicIndexer",
    "xarray.tests.test_coding_strings.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_strings.test_StackedBytesArray_scalar": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "IndexError",
    "IndexerMaker",
    "TypeError",
    "len",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "xarray.coding.strings.StackedBytesArray",
    "xarray.core.indexing.BasicIndexer",
    "xarray.tests.test_coding_strings.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_strings.test_StackedBytesArray_vectorized_indexing": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "IndexerMaker",
    "assert_array_equal",
    "numpy.array",
    "xarray.coding.strings.StackedBytesArray",
    "xarray.core.indexing.VectorizedIndexer"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_strings.test_bytes_to_char": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "xarray.coding.strings.bytes_to_char"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_strings.test_bytes_to_char_dask": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "assert_array_equal",
    "dask.array.Array",
    "dask.array.from_array",
    "isinstance",
    "numpy.array",
    "xarray.coding.strings.bytes_to_char"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_strings.test_char_to_bytes": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "xarray.coding.strings.char_to_bytes"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_strings.test_char_to_bytes_dask": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "ValueError",
    "assert_array_equal",
    "dask.array.Array",
    "dask.array.from_array",
    "isinstance",
    "numpy.array",
    "raises_regex",
    "xarray.coding.strings.char_to_bytes"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_strings.test_char_to_bytes_ndim_zero": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "xarray.coding.strings.char_to_bytes"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_strings.test_char_to_bytes_size_zero": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "numpy.zeros",
    "xarray.coding.strings.char_to_bytes"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_strings.test_vlen_dtype": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "bytes",
    "numpy.dtype",
    "object",
    "str",
    "xarray.coding.strings.check_vlen_dtype",
    "xarray.coding.strings.create_vlen_dtype",
    "xarray.coding.strings.is_bytes_dtype",
    "xarray.coding.strings.is_unicode_dtype"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times": {
  "data": {
   "symbols_in_volume": [
    "itertools.product",
    "numpy.arange",
    "numpy.array",
    "numpy.int32",
    "sorted",
    "xarray.coding.times._STANDARD_CALENDARS",
    "xarray.tests.test_coding_times._CF_DATETIME_NUM_DATES_UNITS",
    "xarray.tests.test_coding_times._NON_STANDARD_CALENDARS_SET",
    "xarray.tests.test_coding_times._STANDARD_CALENDARS"
   ]
  },
  "type": "module"
 },
 "xarray.tests.test_coding_times.DataArray": {
  "data": {
   "shadows": "xarray.DataArray"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.Dataset": {
  "data": {
   "shadows": "xarray.Dataset"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.DatetimeGregorian": {
  "data": {
   "shadows": "cftime.DatetimeGregorian"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.OutOfBoundsDatetime": {
  "data": {
   "shadows": "pandas.errors.OutOfBoundsDatetime"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.SerializationWarning": {
  "data": {
   "shadows": "xarray.coding.variables.SerializationWarning"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.Variable": {
  "data": {
   "shadows": "xarray.Variable"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times._ALL_CALENDARS": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "xarray.tests.test_coding_times._CFTIME_DATETIME_UNITS_TESTS": {
  "data": {
   "lineno": 508
  },
  "type": "constant"
 },
 "xarray.tests.test_coding_times._CF_DATETIME_NUM_DATES_UNITS": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "xarray.tests.test_coding_times._CF_DATETIME_TESTS": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "xarray.tests.test_coding_times._NON_STANDARD_CALENDARS": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "xarray.tests.test_coding_times._NON_STANDARD_CALENDARS_SET": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "xarray.tests.test_coding_times._STANDARD_CALENDARS": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "xarray.tests.test_coding_times._all_cftime_date_types": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "xarray.tests.test_coding_times.cftime"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times._update_bounds_attributes": {
  "data": {
   "shadows": "xarray.conventions._update_bounds_attributes"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.assert_equal": {
  "data": {
   "shadows": "xarray.testing.assert_equal"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.calendar": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "xarray.tests.test_coding_times._ALL_CALENDARS",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.cf_encoder": {
  "data": {
   "shadows": "xarray.conventions.cf_encoder"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.cftime": {
  "data": {
   "shadows": "cftime"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.cftime_to_nptime": {
  "data": {
   "shadows": "xarray.coding.times.cftime_to_nptime"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.coding": {
  "data": {
   "shadows": "xarray.coding"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.contains_cftime_datetimes": {
  "data": {
   "shadows": "xarray.core.common.contains_cftime_datetimes"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.data": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.random.rand",
    "xarray.DataArray",
    "xarray.tests.test_coding_times.pytest",
    "xarray.tests.test_coding_times.times"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.decode_cf": {
  "data": {
   "shadows": "xarray.decode_cf"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.decode_cf_datetime": {
  "data": {
   "shadows": "xarray.coding.times.decode_cf_datetime"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.encode_cf_datetime": {
  "data": {
   "shadows": "xarray.coding.times.encode_cf_datetime"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.num2date": {
  "data": {
   "shadows": "cftime.num2date"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.test_cf_datetime": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "abs",
    "assert_array_equal",
    "hasattr",
    "numpy.around",
    "numpy.asarray",
    "numpy.atleast_1d",
    "numpy.nanargmax",
    "numpy.nanargmin",
    "numpy.ravel",
    "numpy.timedelta64",
    "pandas.Index",
    "pandas.to_timedelta",
    "xarray.coding.times.cftime_to_nptime",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.coding.times.encode_cf_datetime",
    "xarray.tests.test_coding_times._CF_DATETIME_TESTS",
    "xarray.tests.test_coding_times.cftime",
    "xarray.tests.test_coding_times.pytest",
    "xarray.tests.test_coding_times.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_cf_datetime_nan": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.nan",
    "pandas.to_datetime",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.tests.test_coding_times.pytest",
    "xarray.tests.test_coding_times.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_cf_timedelta": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "numpy.int64",
    "numpy.nan",
    "numpy.timedelta64",
    "xarray.coding.times.decode_cf_timedelta",
    "xarray.coding.times.encode_cf_timedelta",
    "xarray.coding.times.to_timedelta_unboxed",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_cf_timedelta_2d": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.atleast_2d",
    "xarray.coding.times.decode_cf_timedelta",
    "xarray.coding.times.to_timedelta_unboxed"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_contains_cftime_datetimes_1d": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "xarray.core.common.contains_cftime_datetimes",
    "xarray.tests.test_coding_times.data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_contains_cftime_datetimes_3d": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "xarray.core.common.contains_cftime_datetimes",
    "xarray.tests.test_coding_times.times_3d"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_contains_cftime_datetimes_dask_1d": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "xarray.core.common.contains_cftime_datetimes",
    "xarray.tests.test_coding_times.data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_contains_cftime_datetimes_dask_3d": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "xarray.core.common.contains_cftime_datetimes",
    "xarray.tests.test_coding_times.times_3d"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_contains_cftime_datetimes_non_cftimes": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.core.common.contains_cftime_datetimes",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_contains_cftime_datetimes_non_cftimes_dask": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.core.common.contains_cftime_datetimes",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decode_360_day_calendar": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "assert_array_equal",
    "len",
    "numpy.arange",
    "numpy.dtype",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.tests.test_coding_times.cftime",
    "xarray.tests.test_coding_times.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decode_abbreviation": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "xarray.coding.times.cftime_to_nptime",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.tests.test_coding_times.cftime"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decode_cf": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dtype",
    "xarray.DataArray",
    "xarray.decode_cf",
    "xarray.tests.test_coding_times._ALL_CALENDARS",
    "xarray.tests.test_coding_times._STANDARD_CALENDARS",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decode_cf_datetime_non_iso_strings": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "abs",
    "numpy.arange",
    "numpy.timedelta64",
    "pandas.date_range",
    "xarray.coding.times.decode_cf_datetime"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decode_cf_datetime_non_standard_units": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.arange",
    "pandas.date_range",
    "xarray.coding.times.decode_cf_datetime"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decode_cf_datetime_overflow": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "cftime.DatetimeGregorian",
    "enumerate",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.tests.test_coding_times.datetime",
    "xarray.tests.test_coding_times.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decode_cf_time_bounds": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.dtype",
    "xarray.DataArray",
    "xarray.conventions._update_bounds_attributes",
    "xarray.decode_cf"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decode_dates_outside_timestamp_range": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "abs",
    "all",
    "datetime.datetime",
    "isinstance",
    "numpy.timedelta64",
    "range",
    "type",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.tests.test_coding_times._ALL_CALENDARS",
    "xarray.tests.test_coding_times.cftime",
    "xarray.tests.test_coding_times.pytest",
    "xarray.tests.test_coding_times.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decode_multidim_time_outside_timestamp_range": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "abs",
    "datetime.datetime",
    "len",
    "numpy.dtype",
    "numpy.empty",
    "numpy.timedelta64",
    "range",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.tests.test_coding_times._ALL_CALENDARS",
    "xarray.tests.test_coding_times.cftime",
    "xarray.tests.test_coding_times.pytest",
    "xarray.tests.test_coding_times.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decode_non_standard_calendar_inside_timestamp_range": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "abs",
    "numpy.dtype",
    "numpy.timedelta64",
    "pandas.date_range",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.tests.test_coding_times._NON_STANDARD_CALENDARS",
    "xarray.tests.test_coding_times.cftime",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decode_non_standard_calendar_single_element": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.dtype",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.tests.test_coding_times.cftime",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decode_non_standard_calendar_single_element_inside_timestamp_range": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "numpy.dtype",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.tests.test_coding_times._NON_STANDARD_CALENDARS",
    "xarray.tests.test_coding_times.pytest",
    "xarray.tests.test_coding_times.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decode_nonstandard_calendar_multidim_time_inside_timestamp_range": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "abs",
    "len",
    "numpy.dtype",
    "numpy.empty",
    "numpy.timedelta64",
    "pandas.date_range",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.tests.test_coding_times._NON_STANDARD_CALENDARS",
    "xarray.tests.test_coding_times.cftime",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decode_single_element_outside_timestamp_range": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "isinstance",
    "type",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.tests.test_coding_times._NON_STANDARD_CALENDARS",
    "xarray.tests.test_coding_times.cftime",
    "xarray.tests.test_coding_times.pytest",
    "xarray.tests.test_coding_times.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decode_standard_calendar_inside_timestamp_range": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "abs",
    "numpy.dtype",
    "numpy.timedelta64",
    "pandas.date_range",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.tests.test_coding_times._STANDARD_CALENDARS",
    "xarray.tests.test_coding_times.cftime",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decode_standard_calendar_multidim_time_inside_timestamp_range": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "abs",
    "len",
    "numpy.dtype",
    "numpy.empty",
    "numpy.timedelta64",
    "pandas.date_range",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.tests.test_coding_times._STANDARD_CALENDARS",
    "xarray.tests.test_coding_times.cftime",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decode_standard_calendar_single_element_inside_timestamp_range": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "numpy.dtype",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.tests.test_coding_times._STANDARD_CALENDARS",
    "xarray.tests.test_coding_times.pytest",
    "xarray.tests.test_coding_times.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decoded_cf_datetime_array_2d": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "numpy.asarray",
    "pandas.date_range",
    "xarray.Variable",
    "xarray.coding.times.CFDatetimeCoder"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_encode_cf_datetime_overflow": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "pandas.date_range",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.coding.times.encode_cf_datetime",
    "xarray.tests.test_coding_times.calendar",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_encode_cf_datetime_pandas_min": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "pandas.date_range",
    "xarray.coding.times.encode_cf_datetime",
    "xarray.tests.test_coding_times.calendar"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_encode_time_bounds": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "AssertionError",
    "UserWarning",
    "dict",
    "numpy.array",
    "pandas.date_range",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.conventions.cf_encoder",
    "xarray.testing.assert_equal",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_format_cftime_datetime": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "date_type",
    "xarray.coding.times.format_cftime_datetime",
    "xarray.tests.test_coding_times._all_cftime_date_types",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_infer_cftime_datetime_units": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "date_type",
    "xarray.coding.times.infer_datetime_units",
    "xarray.tests.test_coding_times._CFTIME_DATETIME_UNITS_TESTS",
    "xarray.tests.test_coding_times._NON_STANDARD_CALENDARS",
    "xarray.tests.test_coding_times._all_cftime_date_types",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_infer_datetime_units": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "pandas.date_range",
    "pandas.to_datetime",
    "xarray.coding.times.infer_datetime_units",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_infer_timedelta_units": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.to_timedelta",
    "xarray.coding.times.infer_timedelta_units",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_time_units_with_timezone_roundtrip": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "xarray.DataArray",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.coding.times.encode_cf_datetime",
    "xarray.testing.assert_equal",
    "xarray.tests.test_coding_times._STANDARD_CALENDARS",
    "xarray.tests.test_coding_times.calendar"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_use_cftime_default_non_standard_calendar": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "cftime.num2date",
    "numpy.testing.assert_array_equal",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.tests.test_coding_times._NON_STANDARD_CALENDARS",
    "xarray.tests.test_coding_times.calendar",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_use_cftime_default_standard_calendar_in_range": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "pandas.date_range",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.tests.test_coding_times._STANDARD_CALENDARS",
    "xarray.tests.test_coding_times.calendar",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_use_cftime_default_standard_calendar_out_of_range": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "cftime.num2date",
    "numpy.testing.assert_array_equal",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.coding.variables.SerializationWarning",
    "xarray.tests.test_coding_times._STANDARD_CALENDARS",
    "xarray.tests.test_coding_times.calendar",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_use_cftime_false_non_standard_calendar": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "pandas.errors.OutOfBoundsDatetime",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.tests.test_coding_times._NON_STANDARD_CALENDARS",
    "xarray.tests.test_coding_times.calendar",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_use_cftime_false_standard_calendar_in_range": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "pandas.date_range",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.tests.test_coding_times._STANDARD_CALENDARS",
    "xarray.tests.test_coding_times.calendar",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_use_cftime_false_standard_calendar_out_of_range": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": [
    "pandas.errors.OutOfBoundsDatetime",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.tests.test_coding_times._STANDARD_CALENDARS",
    "xarray.tests.test_coding_times.calendar",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_use_cftime_true": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "cftime.num2date",
    "numpy.testing.assert_array_equal",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.tests.test_coding_times._ALL_CALENDARS",
    "xarray.tests.test_coding_times.calendar",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.times": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "numpy.arange",
    "xarray.tests.test_coding_times.calendar",
    "xarray.tests.test_coding_times.cftime",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.times_3d": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.random.choice",
    "xarray.DataArray",
    "xarray.tests.test_coding_times.pytest",
    "xarray.tests.test_coding_times.times"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.to_timedelta_unboxed": {
  "data": {
   "shadows": "xarray.coding.times.to_timedelta_unboxed"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.tests.test_combine": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_combine.DataArray": {
  "data": {
   "shadows": "xarray.DataArray"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.Dataset": {
  "data": {
   "shadows": "xarray.Dataset"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.TestCheckShapeTileIDs": {
  "data": {
   "lineno": 318
  },
  "type": "class"
 },
 "xarray.tests.test_combine.TestCheckShapeTileIDs.test_check_depths": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "ValueError",
    "create_test_data",
    "ds",
    "raises_regex",
    "xarray.core.combine._check_shape_tile_ids"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestCheckShapeTileIDs.test_check_lengths": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "ValueError",
    "create_test_data",
    "ds",
    "raises_regex",
    "xarray.core.combine._check_shape_tile_ids"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestCombineAuto": {
  "data": {
   "lineno": 630
  },
  "type": "class"
 },
 "xarray.tests.test_combine.TestCombineAuto.test_check_for_impossible_ordering": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.Dataset",
    "xarray.combine_by_coords"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestCombineAuto.test_combine_by_coords": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "ValueError",
    "assert_equal",
    "assert_identical",
    "raises_regex",
    "xarray.Dataset",
    "xarray.combine_by_coords"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestCombineAuto.test_combine_by_coords.test_empty_input": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset",
    "xarray.combine_by_coords"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestCombineAuto.test_combine_by_coords_incomplete_hypercube": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "numpy.nan",
    "xarray.Dataset",
    "xarray.combine_by_coords",
    "xarray.tests.test_combine.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestCombineAuto.test_combine_by_coords_no_concat": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "xarray.Dataset",
    "xarray.combine_by_coords"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestCombineAuto.test_combine_by_coords_previously_failed": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "xarray.Dataset",
    "xarray.combine_by_coords"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestCombineAuto.test_combine_by_coords_still_fails": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "ValueError",
    "xarray.Dataset",
    "xarray.combine_by_coords",
    "xarray.tests.test_combine.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestCombineAuto.test_combine_coords_combine_attrs": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "raises_regex",
    "xarray.Dataset",
    "xarray.combine_nested",
    "xarray.tests.test_combine.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestCombineAuto.test_combine_coords_combine_attrs_identical": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "raises_regex",
    "xarray.Dataset",
    "xarray.combine_nested"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestCombineAuto.test_combine_coords_join": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset",
    "xarray.combine_nested",
    "xarray.tests.test_combine.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestCombineAuto.test_combine_coords_join_exact": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.Dataset",
    "xarray.combine_nested"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestCombineAuto.test_combine_leaving_bystander_dimensions": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "assert_identical",
    "dict",
    "numpy.random.rand",
    "xarray.Dataset",
    "xarray.combine_by_coords"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestCombineAuto.test_infer_order_from_coords": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "create_test_data",
    "slice",
    "xarray.combine_by_coords"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestCombineND": {
  "data": {
   "lineno": 266
  },
  "type": "class"
 },
 "xarray.tests.test_combine.TestCombineND.test_concat_once": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "create_test_data",
    "ds",
    "xarray.concat",
    "xarray.core.combine._combine_all_along_first_dim",
    "xarray.tests.test_combine.assert_combined_tile_ids_equal",
    "xarray.tests.test_combine.create_combined_ids",
    "xarray.tests.test_combine.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestCombineND.test_concat_only_first_dim": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "create_test_data",
    "ds",
    "enumerate",
    "xarray.concat",
    "xarray.core.combine._combine_all_along_first_dim",
    "xarray.tests.test_combine.assert_combined_tile_ids_equal",
    "xarray.tests.test_combine.create_combined_ids"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestCombineND.test_concat_twice": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "assert_equal",
    "create_test_data",
    "ds",
    "xarray.concat",
    "xarray.core.combine._combine_nd",
    "xarray.tests.test_combine.create_combined_ids",
    "xarray.tests.test_combine.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestNestedCombine": {
  "data": {
   "lineno": 332
  },
  "type": "class"
 },
 "xarray.tests.test_combine.TestNestedCombine.test_auto_combine_2d": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "assert_equal",
    "create_test_data",
    "ds",
    "xarray.combine_nested",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestNestedCombine.test_auto_combine_2d_combine_attrs_kwarg": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "create_test_data",
    "ds",
    "raises_regex",
    "xarray.combine_nested",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestNestedCombine.test_combine_concat_over_redundant_nesting": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset",
    "xarray.combine_nested"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestNestedCombine.test_combine_nested_fill_value": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "assert_identical",
    "dict",
    "isinstance",
    "numpy.nan",
    "xarray.Dataset",
    "xarray.combine_nested",
    "xarray.core.dtypes.NA",
    "xarray.tests.test_combine.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestNestedCombine.test_combine_nested_join": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset",
    "xarray.combine_nested",
    "xarray.tests.test_combine.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestNestedCombine.test_combine_nested_join_exact": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.Dataset",
    "xarray.combine_nested"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestNestedCombine.test_combine_nested_missing_data_new_dim": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "xarray.Dataset",
    "xarray.combine_nested"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestNestedCombine.test_concat_multiple_dims": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset",
    "xarray.combine_nested"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestNestedCombine.test_concat_name_symmetry": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.DataArray",
    "xarray.combine_nested"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestNestedCombine.test_concat_one_dim_merge_another": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "create_test_data",
    "slice",
    "xarray.combine_nested"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestNestedCombine.test_empty_input": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset",
    "xarray.combine_nested"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestNestedCombine.test_invalid_hypercube_input": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "ValueError",
    "create_test_data",
    "ds",
    "raises_regex",
    "xarray.combine_nested"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestNestedCombine.test_merge_one_dim_concat_another": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset",
    "xarray.combine_nested"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestNestedCombine.test_nested_concat": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset",
    "xarray.combine_nested"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestNestedCombine.test_nested_concat_along_new_dim": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.combine_nested"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestNestedCombine.test_nested_concat_too_many_dims_at_once": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "ValueError",
    "xarray.Dataset",
    "xarray.combine_nested",
    "xarray.tests.test_combine.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestNestedCombine.test_nested_merge": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.combine_nested"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestNewTileIDs": {
  "data": {
   "lineno": 248
  },
  "type": "class"
 },
 "xarray.tests.test_combine.TestNewTileIDs.test_get_new_tile_ids": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "sorted",
    "xarray.tests.test_combine._create_tile_ids",
    "xarray.tests.test_combine.create_combined_ids"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestNewTileIDs.test_new_tile_id": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "create_test_data",
    "ds",
    "xarray.core.combine._new_tile_id",
    "xarray.tests.test_combine.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestTileIDsFromCoords": {
  "data": {
   "lineno": 129
  },
  "type": "class"
 },
 "xarray.tests.test_combine.TestTileIDsFromCoords.test_1d": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "xarray.Dataset",
    "xarray.core.combine._infer_concat_order_from_coords",
    "xarray.tests.test_combine.assert_combined_tile_ids_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestTileIDsFromCoords.test_2d": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "xarray.Dataset",
    "xarray.core.combine._infer_concat_order_from_coords",
    "xarray.tests.test_combine.assert_combined_tile_ids_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestTileIDsFromCoords.test_2d_plus_bystander_dim": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "xarray.Dataset",
    "xarray.core.combine._infer_concat_order_from_coords",
    "xarray.tests.test_combine.assert_combined_tile_ids_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestTileIDsFromCoords.test_coord_monotonically_decreasing": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "xarray.Dataset",
    "xarray.core.combine._infer_concat_order_from_coords",
    "xarray.tests.test_combine.assert_combined_tile_ids_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestTileIDsFromCoords.test_coord_not_monotonic": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.Dataset",
    "xarray.core.combine._infer_concat_order_from_coords"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestTileIDsFromCoords.test_datetime_coords": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "datetime.datetime",
    "xarray.Dataset",
    "xarray.core.combine._infer_concat_order_from_coords",
    "xarray.tests.test_combine.assert_combined_tile_ids_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestTileIDsFromCoords.test_lexicographic_sort_string_coords": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "xarray.Dataset",
    "xarray.core.combine._infer_concat_order_from_coords",
    "xarray.tests.test_combine.assert_combined_tile_ids_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestTileIDsFromCoords.test_no_concatenation_needed": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "ds",
    "xarray.Dataset",
    "xarray.core.combine._infer_concat_order_from_coords",
    "xarray.tests.test_combine.assert_combined_tile_ids_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestTileIDsFromCoords.test_no_dimension_coords": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.Dataset",
    "xarray.core.combine._infer_concat_order_from_coords"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestTileIDsFromCoords.test_string_coords": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "xarray.Dataset",
    "xarray.core.combine._infer_concat_order_from_coords",
    "xarray.tests.test_combine.assert_combined_tile_ids_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestTileIDsFromNestedList": {
  "data": {
   "lineno": 29
  },
  "type": "class"
 },
 "xarray.tests.test_combine.TestTileIDsFromNestedList.test_1d": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ds",
    "input",
    "xarray.core.combine._infer_concat_order_from_positions",
    "xarray.tests.test_combine.assert_combined_tile_ids_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestTileIDsFromNestedList.test_2d": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ds",
    "input",
    "xarray.core.combine._infer_concat_order_from_positions",
    "xarray.tests.test_combine.assert_combined_tile_ids_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestTileIDsFromNestedList.test_3d": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ds",
    "input",
    "xarray.core.combine._infer_concat_order_from_positions",
    "xarray.tests.test_combine.assert_combined_tile_ids_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestTileIDsFromNestedList.test_ignore_empty_list": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "create_test_data",
    "ds",
    "input",
    "xarray.core.combine._infer_concat_order_from_positions",
    "xarray.tests.test_combine.assert_combined_tile_ids_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestTileIDsFromNestedList.test_infer_from_datasets": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "create_test_data",
    "ds",
    "input",
    "xarray.core.combine._infer_concat_order_from_positions",
    "xarray.tests.test_combine.assert_combined_tile_ids_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestTileIDsFromNestedList.test_redundant_nesting": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "create_test_data",
    "ds",
    "input",
    "xarray.core.combine._infer_concat_order_from_positions",
    "xarray.tests.test_combine.assert_combined_tile_ids_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestTileIDsFromNestedList.test_single_dataset": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "create_test_data",
    "ds",
    "input",
    "xarray.core.combine._infer_concat_order_from_positions",
    "xarray.tests.test_combine.assert_combined_tile_ids_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestTileIDsFromNestedList.test_uneven_depth_input": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "create_test_data",
    "ds",
    "input",
    "xarray.core.combine._infer_concat_order_from_positions",
    "xarray.tests.test_combine.assert_combined_tile_ids_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestTileIDsFromNestedList.test_uneven_length_input": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "create_test_data",
    "ds",
    "input",
    "xarray.core.combine._infer_concat_order_from_positions",
    "xarray.tests.test_combine.assert_combined_tile_ids_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine._check_shape_tile_ids": {
  "data": {
   "shadows": "xarray.core.combine._check_shape_tile_ids"
  },
  "type": "import"
 },
 "xarray.tests.test_combine._combine_all_along_first_dim": {
  "data": {
   "shadows": "xarray.core.combine._combine_all_along_first_dim"
  },
  "type": "import"
 },
 "xarray.tests.test_combine._combine_nd": {
  "data": {
   "shadows": "xarray.core.combine._combine_nd"
  },
  "type": "import"
 },
 "xarray.tests.test_combine._create_combined_ids": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "create_test_data",
    "len",
    "range",
    "xarray.tests.test_combine._create_tile_ids",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine._create_tile_ids": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "itertools.product",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine._infer_concat_order_from_coords": {
  "data": {
   "shadows": "xarray.core.combine._infer_concat_order_from_coords"
  },
  "type": "import"
 },
 "xarray.tests.test_combine._infer_concat_order_from_positions": {
  "data": {
   "shadows": "xarray.core.combine._infer_concat_order_from_positions"
  },
  "type": "import"
 },
 "xarray.tests.test_combine._new_tile_id": {
  "data": {
   "shadows": "xarray.core.combine._new_tile_id"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.assert_combined_tile_ids_equal": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "assert_equal",
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.cftime": {
  "data": {
   "shadows": "cftime"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.combine_by_coords": {
  "data": {
   "shadows": "xarray.combine_by_coords"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.combine_nested": {
  "data": {
   "shadows": "xarray.combine_nested"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.concat": {
  "data": {
   "shadows": "xarray.concat"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.create_combined_ids": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "xarray.tests.test_combine.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.dtypes": {
  "data": {
   "shadows": "xarray.core.dtypes"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.test_combine_by_coords_distant_cftime_dates": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.concatenate",
    "xarray.DataArray",
    "xarray.combine_by_coords",
    "xarray.tests.test_combine.cftime"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation": {
  "data": {
   "symbols_in_volume": [
    "xarray.tests.test_computation.pytest"
   ]
  },
  "type": "module"
 },
 "xarray.tests.test_computation.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.tests.test_computation._UFuncSignature": {
  "data": {
   "shadows": "xarray.core.computation._UFuncSignature"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.add": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.operator"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.apply_ufunc": {
  "data": {
   "shadows": "xarray.core.computation.apply_ufunc"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.arrays_w_tuples": {
  "data": {
   "lineno": 953,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.isel",
    "numpy.nan",
    "numpy.random.random",
    "pandas.date_range",
    "range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.assert_identical": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "hasattr",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.broadcast": {
  "data": {
   "shadows": "xarray.core.alignment.broadcast"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.broadcast_compat_data": {
  "data": {
   "shadows": "xarray.core.computation.broadcast_compat_data"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.collect_dict_values": {
  "data": {
   "shadows": "xarray.core.computation.collect_dict_values"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.dask": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "xarray.tests.test_computation.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.identity": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "xarray.tests.test_computation.join_dict_keys": {
  "data": {
   "shadows": "xarray.core.computation.join_dict_keys"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.ordered_set_intersection": {
  "data": {
   "shadows": "xarray.core.computation.ordered_set_intersection"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.ordered_set_union": {
  "data": {
   "shadows": "xarray.core.computation.ordered_set_union"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.pandas_median": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.pandas_median_add": {
  "data": {
   "lineno": 906,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.result_name": {
  "data": {
   "shadows": "xarray.core.computation.result_name"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.test_apply_1d_and_0d": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "numpy.array",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.tests.test_computation.add",
    "xarray.tests.test_computation.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "ValueError",
    "dask.array.Array",
    "dask.array.ones",
    "dask_safe_identity",
    "isinstance",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.assert_identical",
    "xarray.tests.test_computation.identity",
    "xarray.tests.test_computation.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask.dask_safe_identity": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.identity"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_multiple_inputs": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "dask.array.Array",
    "dask.array.from_array",
    "float",
    "isinstance",
    "numpy.random.RandomState",
    "xarray.DataArray",
    "xarray.core.computation.apply_ufunc",
    "xarray.testing.assert_allclose",
    "xarray.tests.test_computation.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_multiple_inputs.covariance": {
  "data": {
   "lineno": 731
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_new_output_dimension": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "dask.array.Array",
    "dask.array.ones",
    "isinstance",
    "stack_negative",
    "xarray.DataArray",
    "xarray.tests.test_computation.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_new_output_dimension.stack_negative": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "dict",
    "xarray.core.computation.apply_ufunc"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_new_output_dimension.stack_negative.func": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "numpy.stack"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_parallelized_errors": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "ValueError",
    "dask.array.ones",
    "float",
    "raises_regex",
    "xarray.DataArray",
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.identity"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_parallelized_one_arg": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "dask.array.Array",
    "dask.array.ones",
    "isinstance",
    "parallel_identity",
    "xarray.DataArray",
    "xarray.tests.test_computation.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_parallelized_one_arg.parallel_identity": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.identity"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_parallelized_two_args": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "check",
    "dask.array.ones",
    "numpy.int64",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_parallelized_two_args.check": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "dask.array.Array",
    "isinstance",
    "parallel_add",
    "xarray.tests.test_computation.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_parallelized_two_args.parallel_add": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "numpy.int64",
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.operator"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_parallelized_two_outputs": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "twice",
    "xarray.DataArray",
    "xarray.tests.test_computation.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_parallelized_two_outputs.twice": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "xarray.core.computation.apply_ufunc"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_parallelized_two_outputs.twice.func": {
  "data": {
   "lineno": 259
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_exclude": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "ValueError",
    "concatenate",
    "len",
    "list",
    "numpy.array",
    "range",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.assert_identical",
    "xarray.tests.test_computation.identity",
    "xarray.tests.test_computation.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_exclude.concatenate": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.concatenate",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.core.computation.apply_ufunc"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_exclude.concatenate.func": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_groupby_add": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.tests.test_computation.add",
    "xarray.tests.test_computation.assert_identical",
    "xarray.tests.test_computation.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_identity": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "apply_identity",
    "numpy.arange",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.assert_identical",
    "xarray.tests.test_computation.functools",
    "xarray.tests.test_computation.identity"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_input_core_dimension": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "ValueError",
    "first_element",
    "multiply",
    "numpy.array",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.assert_identical",
    "xarray.tests.test_computation.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_input_core_dimension.first_element": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "xarray.core.computation.apply_ufunc"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_input_core_dimension.first_element.func": {
  "data": {
   "lineno": 271
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_input_core_dimension.multiply": {
  "data": {
   "lineno": 301
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_output_core_dimension": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "numpy.array",
    "original_and_stack_negative",
    "stack_negative",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.tests.test_computation.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_output_core_dimension.original_and_stack_negative": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "isinstance",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.core.computation.apply_ufunc"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_output_core_dimension.original_and_stack_negative.func": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "numpy.stack"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_output_core_dimension.stack_negative": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "isinstance",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.core.computation.apply_ufunc"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_output_core_dimension.stack_negative.func": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "numpy.stack"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_two_inputs": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.zeros_like",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.tests.test_computation.add",
    "xarray.tests.test_computation.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_two_outputs": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "numpy.arange",
    "twice",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.tests.test_computation.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_two_outputs.twice": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "xarray.core.computation.apply_ufunc"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_two_outputs.twice.func": {
  "data": {
   "lineno": 224
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_autocov": {
  "data": {
   "lineno": 1101,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "xarray.cov",
    "xarray.tests.test_computation.arrays_w_tuples",
    "xarray.tests.test_computation.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_broadcast_compat_data_1d": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "xarray.Variable",
    "xarray.core.computation.broadcast_compat_data",
    "xarray.tests.test_computation.assert_identical",
    "xarray.tests.test_computation.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_broadcast_compat_data_2d": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "numpy.arange",
    "xarray.Variable",
    "xarray.core.computation.broadcast_compat_data",
    "xarray.tests.test_computation.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_collect_dict_values": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "xarray.core.computation.collect_dict_values"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_corr": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": [
    "np_corr",
    "np_corr_ind",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "xarray.corr",
    "xarray.tests.test_computation.arrays_w_tuples",
    "xarray.tests.test_computation.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_corr.np_corr": {
  "data": {
   "lineno": 1062,
   "symbols_in_volume": [
    "numpy.ma.corrcoef",
    "numpy.ma.masked_invalid",
    "xarray.core.alignment.broadcast"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_corr.np_corr_ind": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "numpy.ma.corrcoef",
    "numpy.ma.masked_invalid",
    "xarray.core.alignment.broadcast"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_corr_only_dataarray": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "TypeError",
    "xarray.Dataset",
    "xarray.corr",
    "xarray.tests.test_computation.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_cov": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "np_cov",
    "np_cov_ind",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "xarray.cov",
    "xarray.tests.test_computation.arrays_w_tuples",
    "xarray.tests.test_computation.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_cov.np_cov": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "numpy.ma.cov",
    "numpy.ma.masked_invalid",
    "xarray.core.alignment.broadcast"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_cov.np_cov_ind": {
  "data": {
   "lineno": 988,
   "symbols_in_volume": [
    "numpy.ma.cov",
    "numpy.ma.masked_invalid",
    "xarray.core.alignment.broadcast"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_covcorr_consistency": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "xarray.core.alignment.broadcast",
    "xarray.corr",
    "xarray.cov",
    "xarray.tests.test_computation.arrays_w_tuples",
    "xarray.tests.test_computation.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_dataset_join": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.nan",
    "raises_regex",
    "xarray.Dataset",
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.add",
    "xarray.tests.test_computation.assert_identical",
    "xarray.tests.test_computation.operator"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_dataset_join.add": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.operator"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_dot": {
  "data": {
   "lineno": 1254,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "numpy.arange",
    "numpy.einsum",
    "numpy.linspace",
    "numpy.zeros",
    "type",
    "xarray.DataArray",
    "xarray.dot",
    "xarray.tests.test_computation.pickle",
    "xarray.tests.test_computation.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_dot_align_coords": {
  "data": {
   "lineno": 1384,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "raises_regex",
    "xarray.DataArray",
    "xarray.dot",
    "xarray.set_options",
    "xarray.testing.assert_allclose",
    "xarray.tests.test_computation.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_join_dict_keys": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "dict.fromkeys",
    "list",
    "xarray.core.computation.join_dict_keys",
    "xarray.tests.test_computation.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_keep_attrs": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_computation.add",
    "xarray.tests.test_computation.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_keep_attrs.add": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.operator"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_ordered_set_intersection": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "list",
    "xarray.core.computation.ordered_set_intersection"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_ordered_set_union": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "list",
    "xarray.core.computation.ordered_set_union"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_output_wrong_dim_size": {
  "data": {
   "lineno": 1194,
   "symbols_in_volume": [
    "ValueError",
    "apply_truncate_broadcast_invalid",
    "apply_truncate_x_x_invalid",
    "apply_truncate_x_x_valid",
    "apply_truncate_x_z",
    "numpy.arange",
    "raises_regex",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.tests.test_computation.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_output_wrong_dim_size.apply_truncate_broadcast_invalid": {
  "data": {
   "lineno": 1203,
   "symbols_in_volume": [
    "xarray.core.computation.apply_ufunc"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_output_wrong_dim_size.apply_truncate_x_x_invalid": {
  "data": {
   "lineno": 1213,
   "symbols_in_volume": [
    "xarray.core.computation.apply_ufunc"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_output_wrong_dim_size.apply_truncate_x_x_valid": {
  "data": {
   "lineno": 1236,
   "symbols_in_volume": [
    "xarray.core.computation.apply_ufunc"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_output_wrong_dim_size.apply_truncate_x_z": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": [
    "xarray.core.computation.apply_ufunc"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_output_wrong_dim_size.truncate": {
  "data": {
   "lineno": 1200
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_output_wrong_dims": {
  "data": {
   "lineno": 1175,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "raises_regex",
    "xarray.Variable",
    "xarray.core.computation.apply_ufunc"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_output_wrong_dims.add_dim": {
  "data": {
   "lineno": 1178,
   "symbols_in_volume": [
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_output_wrong_dims.remove_dim": {
  "data": {
   "lineno": 1181
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_output_wrong_number": {
  "data": {
   "lineno": 1159,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "raises_regex",
    "xarray.Variable",
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.identity"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_output_wrong_number.identity": {
  "data": {
   "lineno": 1162
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_output_wrong_number.tuple3x": {
  "data": {
   "lineno": 1165
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_polyval": {
  "data": {
   "lineno": 1445,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.x",
    "numpy.arange",
    "numpy.stack",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.core.missing.get_clean_interp_index",
    "xarray.polyval",
    "xarray.testing.assert_allclose",
    "xarray.tests.test_computation.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_result_name": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "Named",
    "xarray.core.computation.result_name"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_result_name.Named": {
  "data": {
   "lineno": 56
  },
  "type": "class"
 },
 "xarray.tests.test_computation.test_result_name.Named.__init__": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_signature_properties": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "frozenset",
    "set",
    "str",
    "xarray.core.computation._UFuncSignature"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_unified_dim_sizes": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "ValueError",
    "xarray.Variable",
    "xarray.core.computation.unified_dim_sizes",
    "xarray.tests.test_computation.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_vectorize": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.assert_identical",
    "xarray.tests.test_computation.pandas_median"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_vectorize_dask": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "float",
    "xarray.DataArray",
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.assert_identical",
    "xarray.tests.test_computation.pandas_median"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_vectorize_dask_dtype": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "complex",
    "int",
    "xarray.DataArray",
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.assert_identical",
    "xarray.tests.test_computation.identity",
    "xarray.tests.test_computation.pandas_median"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_vectorize_dask_dtype_meta": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "dict",
    "distutils.version.LooseVersion",
    "int",
    "numpy.float",
    "numpy.ndarray",
    "xarray.DataArray",
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.assert_identical",
    "xarray.tests.test_computation.dask",
    "xarray.tests.test_computation.pandas_median",
    "xarray.tests.test_computation.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_vectorize_dask_dtype_without_output_dtypes": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.assert_identical",
    "xarray.tests.test_computation.identity",
    "xarray.tests.test_computation.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_vectorize_dask_new_output_dims": {
  "data": {
   "lineno": 1117,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "float",
    "numpy.newaxis",
    "raises_regex",
    "xarray.DataArray",
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_vectorize_exclude_dims": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "set",
    "xarray.DataArray",
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.assert_identical",
    "xarray.tests.test_computation.pandas_median_add"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_vectorize_exclude_dims_dask": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "float",
    "set",
    "xarray.DataArray",
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.assert_identical",
    "xarray.tests.test_computation.pandas_median_add"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_where": {
  "data": {
   "lineno": 1438,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.test_computation.assert_identical",
    "xarray.where"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.unified_dim_sizes": {
  "data": {
   "shadows": "xarray.core.computation.unified_dim_sizes"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_concat": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_concat.DataArray": {
  "data": {
   "shadows": "xarray.DataArray"
  },
  "type": "import"
 },
 "xarray.tests.test_concat.Dataset": {
  "data": {
   "shadows": "xarray.Dataset"
  },
  "type": "import"
 },
 "xarray.tests.test_concat.TestConcatDataArray": {
  "data": {
   "lineno": 380
  },
  "type": "class"
 },
 "xarray.tests.test_concat.TestConcatDataArray.test_concat": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "ValueError",
    "assert_equal",
    "assert_identical",
    "numpy.array",
    "numpy.random.random",
    "pandas.Index",
    "raises_regex",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_concat.TestConcatDataArray.test_concat_combine_attrs_kwarg": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "raises_regex",
    "xarray.DataArray",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_concat.TestConcatDataArray.test_concat_encoding": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "numpy.random.random",
    "xarray.Dataset",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_concat.TestConcatDataArray.test_concat_fill_value": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.concat",
    "xarray.core.dtypes.NA",
    "xarray.tests.test_concat.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_concat.TestConcatDataArray.test_concat_join_kwarg": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "ValueError",
    "assert_equal",
    "numpy.array",
    "numpy.nan",
    "raises_regex",
    "xarray.Dataset",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_concat.TestConcatDataArray.test_concat_lazy": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "InaccessibleArray",
    "dask.array.from_array",
    "numpy.zeros",
    "range",
    "xarray.DataArray",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_concat.TestConcatDataset": {
  "data": {
   "lineno": 50
  },
  "type": "class"
 },
 "xarray.tests.test_concat.TestConcatDataset.data": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "create_test_data",
    "xarray.tests.test_concat.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_concat.TestConcatDataset.rectify_dim_order": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_concat.TestConcatDataset.test_concat": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "assert_identical",
    "slice",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_concat.TestConcatDataset.test_concat_2": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_concat.TestConcatDataset.test_concat_autoalign": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_concat.TestConcatDataset.test_concat_combine_attrs_kwarg": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "raises_regex",
    "xarray.Dataset",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_concat.TestConcatDataset.test_concat_constant_index": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "assert_identical",
    "raises_regex",
    "xarray.Dataset",
    "xarray.concat",
    "xarray.core.merge.MergeError"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_concat.TestConcatDataset.test_concat_coords": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.random.randn",
    "raises_regex",
    "slice",
    "xarray.Dataset",
    "xarray.concat",
    "xarray.core.merge.MergeError"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_concat.TestConcatDataset.test_concat_coords_kwarg": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "assert_array_equal",
    "assert_equal",
    "numpy.arange",
    "numpy.array",
    "range",
    "xarray.concat",
    "xarray.tests.test_concat.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_concat.TestConcatDataset.test_concat_data_vars": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.random.randn",
    "slice",
    "xarray.Dataset",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_concat.TestConcatDataset.test_concat_dim_is_variable": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_concat.TestConcatDataset.test_concat_dim_precedence": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_concat.TestConcatDataset.test_concat_do_not_promote": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "xarray.Dataset",
    "xarray.concat",
    "xarray.tests.test_concat.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_concat.TestConcatDataset.test_concat_errors": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "copy.deepcopy",
    "create_test_data",
    "raises_regex",
    "slice",
    "xarray.Dataset",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_concat.TestConcatDataset.test_concat_fill_value": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "assert_identical",
    "dict",
    "isinstance",
    "numpy.nan",
    "xarray.Dataset",
    "xarray.concat",
    "xarray.core.dtypes.NA",
    "xarray.tests.test_concat.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_concat.TestConcatDataset.test_concat_join_kwarg": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "ValueError",
    "assert_equal",
    "assert_identical",
    "numpy.array",
    "numpy.nan",
    "raises_regex",
    "xarray.Dataset",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_concat.TestConcatDataset.test_concat_merge_variables_present_in_some_datasets": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "assert_identical",
    "copy.deepcopy",
    "numpy.random.randn",
    "slice",
    "xarray.Dataset",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_concat.TestConcatDataset.test_concat_multiindex": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "isinstance",
    "pandas.MultiIndex",
    "pandas.MultiIndex.from_product",
    "slice",
    "xarray.Dataset",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_concat.TestConcatDataset.test_concat_promote_shape": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_concat.TestConcatDataset.test_concat_simple": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.concat",
    "xarray.tests.test_concat.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_concat.TestConcatDataset.test_concat_size0": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "assert_identical",
    "create_test_data",
    "slice",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_concat.Variable": {
  "data": {
   "shadows": "xarray.Variable"
  },
  "type": "import"
 },
 "xarray.tests.test_concat.concat": {
  "data": {
   "shadows": "xarray.concat"
  },
  "type": "import"
 },
 "xarray.tests.test_concat.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.tests.test_concat.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "xarray.tests.test_concat.dtypes": {
  "data": {
   "shadows": "xarray.core.dtypes"
  },
  "type": "import"
 },
 "xarray.tests.test_concat.merge": {
  "data": {
   "shadows": "xarray.core.merge"
  },
  "type": "import"
 },
 "xarray.tests.test_concat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_concat.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_concat.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_concat.test_concat_attrs_first_variable": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.concat",
    "xarray.tests.test_concat.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_concat.test_concat_compat": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "assert_equal",
    "raises_regex",
    "xarray.Dataset",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_concat.test_concat_merge_single_non_dim_coord": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "raises_regex",
    "range",
    "xarray.DataArray",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_concat.test_concat_preserve_coordinate_order": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "assert_identical",
    "bool",
    "numpy.arange",
    "numpy.zeros",
    "xarray.Dataset",
    "xarray.concat",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_conventions.CFEncodedInMemoryStore": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "xarray.backends.common.WritableCFDataStore",
    "xarray.backends.memory.InMemoryDataStore"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_conventions.CFEncodedInMemoryStore.encode_variable": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "xarray.coding.strings.EncodedStringCoder"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.Dataset": {
  "data": {
   "shadows": "xarray.Dataset"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.InMemoryDataStore": {
  "data": {
   "shadows": "xarray.backends.memory.InMemoryDataStore"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.SerializationWarning": {
  "data": {
   "shadows": "xarray.SerializationWarning"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.TestBoolTypeArray": {
  "data": {
   "lineno": 31
  },
  "type": "class"
 },
 "xarray.tests.test_conventions.TestBoolTypeArray.test_booltype_array": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "assert_array_equal",
    "bool",
    "numpy.array",
    "xarray.conventions.BoolTypeArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestCFEncodedDataStore": {
  "data": {
   "lineno": 356
  },
  "type": "class"
 },
 "xarray.tests.test_conventions.TestCFEncodedDataStore.create_store": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "xarray.tests.test_conventions.CFEncodedInMemoryStore",
    "xarray.tests.test_conventions.contextlib"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestCFEncodedDataStore.roundtrip": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "xarray.open_dataset",
    "xarray.tests.test_conventions.CFEncodedInMemoryStore",
    "xarray.tests.test_conventions.contextlib"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestCFEncodedDataStore.test_encoding_kwarg": {
  "data": {
   "lineno": 382
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestCFEncodedDataStore.test_encoding_kwarg_fixed_width_string": {
  "data": {
   "lineno": 387
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestCFEncodedDataStore.test_invalid_dataarray_names_raise": {
  "data": {
   "lineno": 378
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestCFEncodedDataStore.test_roundtrip_coordinates": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "xarray.tests.test_conventions.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestDecodeCF": {
  "data": {
   "lineno": 159
  },
  "type": "class"
 },
 "xarray.tests.test_conventions.TestDecodeCF.test_0d_int32_encoding": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "numpy.int32",
    "numpy.int64",
    "xarray.Variable",
    "xarray.conventions.maybe_encode_nonstring_dtype",
    "xarray.testing.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestDecodeCF.test_dataset": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.date_range",
    "xarray.Dataset",
    "xarray.conventions.decode_cf",
    "xarray.testing.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestDecodeCF.test_dataset_repr_with_netcdf4_datetimes": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "repr",
    "xarray.Dataset",
    "xarray.conventions.decode_cf",
    "xarray.tests.test_conventions.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestDecodeCF.test_decode_cf_datetime_transition_to_invalid": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "assert_array_equal",
    "datetime.datetime",
    "dict",
    "xarray.Dataset",
    "xarray.conventions.decode_cf",
    "xarray.tests.test_conventions.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestDecodeCF.test_decode_cf_time_kwargs": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dtype",
    "numpy.ones",
    "xarray.Dataset.from_dict",
    "xarray.conventions.decode_cf"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestDecodeCF.test_decode_cf_with_dask": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "all",
    "dask.array.Array",
    "isinstance",
    "print",
    "xarray.Dataset",
    "xarray.conventions.decode_cf",
    "xarray.testing.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestDecodeCF.test_decode_cf_with_drop_variables": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.date_range",
    "xarray.Dataset",
    "xarray.conventions.decode_cf",
    "xarray.testing.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestDecodeCF.test_decode_cf_with_multiple_missing_values": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "str",
    "xarray.Variable",
    "xarray.conventions.decode_cf_variable",
    "xarray.testing.assert_identical",
    "xarray.tests.test_conventions.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestDecodeCF.test_decode_coordinates": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "xarray.Dataset",
    "xarray.conventions.decode_cf"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestDecodeCF.test_decode_dask_times": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "xarray.Dataset.from_dict",
    "xarray.conventions.decode_cf",
    "xarray.testing.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestDecodeCF.test_invalid_coordinates": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "xarray.Dataset",
    "xarray.conventions.decode_cf",
    "xarray.testing.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestDecodeCF.test_invalid_time_units_raises_eagerly": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.Dataset",
    "xarray.conventions.decode_cf"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestEncodeCFVariable": {
  "data": {
   "lineno": 82
  },
  "type": "class"
 },
 "xarray.tests.test_conventions.TestEncodeCFVariable.test_do_not_overwrite_user_coordinates": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.Dataset",
    "xarray.conventions.encode_dataset_coordinates"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestEncodeCFVariable.test_incompatible_attributes": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError",
    "pandas.date_range",
    "pandas.to_timedelta",
    "xarray.Variable",
    "xarray.conventions.encode_cf_variable",
    "xarray.tests.test_conventions.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestEncodeCFVariable.test_missing_fillvalue": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "Warning",
    "numpy.array",
    "numpy.nan",
    "xarray.Variable",
    "xarray.conventions.encode_cf_variable",
    "xarray.tests.test_conventions.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestEncodeCFVariable.test_multidimensional_coordinates": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.zeros",
    "set",
    "xarray.Dataset",
    "xarray.conventions.decode_cf",
    "xarray.conventions.encode_dataset_coordinates"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestEncodeCFVariable.test_string_object_warning": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "xarray.SerializationWarning",
    "xarray.Variable",
    "xarray.conventions.encode_cf_variable",
    "xarray.testing.assert_identical",
    "xarray.tests.test_conventions.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestNativeEndiannessArray": {
  "data": {
   "lineno": 39
  },
  "type": "class"
 },
 "xarray.tests.test_conventions.TestNativeEndiannessArray.test": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.arange",
    "xarray.conventions.NativeEndiannessArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.Variable": {
  "data": {
   "shadows": "xarray.Variable"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.WritableCFDataStore": {
  "data": {
   "shadows": "xarray.backends.common.WritableCFDataStore"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.assert_identical": {
  "data": {
   "shadows": "xarray.testing.assert_identical"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.coding": {
  "data": {
   "shadows": "xarray.coding"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.conventions": {
  "data": {
   "shadows": "xarray.conventions"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.decode_cf": {
  "data": {
   "shadows": "xarray.conventions.decode_cf"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.open_dataset": {
  "data": {
   "shadows": "xarray.open_dataset"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.test_decode_cf_with_conflicting_fill_missing_value": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.nan",
    "str",
    "xarray.Variable",
    "xarray.conventions.decode_cf_variable",
    "xarray.testing.assert_identical",
    "xarray.tests.test_conventions.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.tests.test_cupy": {
  "data": {
   "symbols_in_volume": [
    "xarray.tests.test_cupy.pytest"
   ]
  },
  "type": "module"
 },
 "xarray.tests.test_cupy.cp": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "xarray.tests.test_cupy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_cupy.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_cupy.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_cupy.test_check_data_stays_on_gpu": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "isinstance",
    "xarray.tests.test_cupy.cp",
    "xarray.tests.test_cupy.toy_weather_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cupy.test_cupy_import": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "xarray.tests.test_cupy.cp"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cupy.test_where": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "isinstance",
    "xarray.core.duck_array_ops.where",
    "xarray.tests.test_cupy.cp"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cupy.toy_weather_data": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.sin",
    "pandas.date_range",
    "xarray.Dataset",
    "xarray.tests.test_cupy.cp",
    "xarray.tests.test_cupy.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cupy.where": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.where"
  },
  "type": "import"
 },
 "xarray.tests.test_cupy.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_dataarray.AuxCoord": {
  "data": {
   "shadows": "iris.coords.AuxCoord"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.CFDatetimeCoder": {
  "data": {
   "shadows": "xarray.coding.times.CFDatetimeCoder"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.Cube": {
  "data": {
   "shadows": "iris.cube.Cube"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.DataArray": {
  "data": {
   "shadows": "xarray.DataArray"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.Dataset": {
  "data": {
   "shadows": "xarray.Dataset"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.DimCoord": {
  "data": {
   "shadows": "iris.coords.DimCoord"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.IndexVariable": {
  "data": {
   "shadows": "xarray.IndexVariable"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.LooseVersion": {
  "data": {
   "shadows": "xarray.tests.LooseVersion"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.ReturnItem": {
  "data": {
   "shadows": "xarray.tests.ReturnItem"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.TestDataArray": {
  "data": {
   "lineno": 40
  },
  "type": "class"
 },
 "xarray.tests.test_dataarray.TestDataArray.make_groupby_example_array": {
  "data": {
   "lineno": 2537,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.coords",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.make_groupby_multidim_example_array": {
  "data": {
   "lineno": 2811,
   "symbols_in_volume": [
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.setup": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.random.random",
    "pandas.MultiIndex.from_product",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test__title_for_slice": {
  "data": {
   "lineno": 3891,
   "symbols_in_volume": [
    "numpy.ones",
    "range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test__title_for_slice_truncate": {
  "data": {
   "lineno": 3905,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_align": {
  "data": {
   "lineno": 3219,
   "symbols_in_volume": [
    "list",
    "numpy.random.random",
    "xarray.DataArray",
    "xarray.align",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_align_copy": {
  "data": {
   "lineno": 3236,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.align",
    "xarray.tests.assert_identical",
    "xarray.tests.source_ndarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_align_dtype": {
  "data": {
   "lineno": 3227,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.random.random",
    "xarray.DataArray",
    "xarray.align"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_align_exclude": {
  "data": {
   "lineno": 3313,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.align",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_align_indexes": {
  "data": {
   "lineno": 3334,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.align",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_align_mixed_indexes": {
  "data": {
   "lineno": 3354,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.align",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_align_override": {
  "data": {
   "lineno": 3263,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "xarray.DataArray",
    "xarray.align",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_align_override_error": {
  "data": {
   "lineno": 3294,
   "symbols_in_volume": [
    "ValueError",
    "xarray.DataArray",
    "xarray.align",
    "xarray.tests.raises_regex",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_align_without_indexes_errors": {
  "data": {
   "lineno": 3365,
   "symbols_in_volume": [
    "ValueError",
    "xarray.DataArray",
    "xarray.align",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_align_without_indexes_exclude": {
  "data": {
   "lineno": 3348,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.align",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_array_interface": {
  "data": {
   "lineno": 1878,
   "symbols_in_volume": [
    "copy.deepcopy",
    "float",
    "numpy.asarray",
    "numpy.maximum",
    "numpy.sin",
    "numpy.zeros",
    "xarray.Variable",
    "xarray.tests.assert_array_equal",
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_assign_attrs": {
  "data": {
   "lineno": 2475,
   "symbols_in_volume": [
    "dict",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_assign_coords": {
  "data": {
   "lineno": 1405,
   "symbols_in_volume": [
    "ValueError",
    "dask.array",
    "dask.array.coords",
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_astype_attrs": {
  "data": {
   "lineno": 1892,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_astype_dtype": {
  "data": {
   "lineno": 1898,
   "symbols_in_volume": [
    "float",
    "numpy.floating",
    "numpy.integer",
    "numpy.issubdtype",
    "xarray.DataArray",
    "xarray.tests.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_attr_sources_multiindex": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "isinstance",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_binary_op_join_setting": {
  "data": {
   "lineno": 4186,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.align",
    "xarray.set_options",
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_binary_op_propagate_indexes": {
  "data": {
   "lineno": 4175,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_broadcast_arrays": {
  "data": {
   "lineno": 3375,
   "symbols_in_volume": [
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.broadcast",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_broadcast_arrays_exclude": {
  "data": {
   "lineno": 3427,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.broadcast",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_broadcast_arrays_misaligned": {
  "data": {
   "lineno": 3393,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.broadcast",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_broadcast_arrays_nocopy": {
  "data": {
   "lineno": 3409,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.broadcast",
    "xarray.tests.assert_identical",
    "xarray.tests.source_ndarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_broadcast_coordinates": {
  "data": {
   "lineno": 3445,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.meshgrid",
    "numpy.ones",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.broadcast",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_broadcast_equals": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_broadcast_like": {
  "data": {
   "lineno": 1462,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.random.randn",
    "range",
    "xarray.DataArray",
    "xarray.broadcast",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_chunk": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "dask.array.Array",
    "isinstance",
    "numpy.ones",
    "xarray.DataArray",
    "xarray.tests.requires_dask"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_combine_first": {
  "data": {
   "lineno": 4200,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_constructor": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "numpy.random.random",
    "pandas.Index",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_constructor_dask_coords": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "dask.array.arange",
    "dask.array.random.random",
    "numpy.arange",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.requires_dask"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_constructor_from_0d": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_constructor_from_self_described": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Panel",
    "pandas.Series",
    "pandas.__version__",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.IndexVariable",
    "xarray.tests.LooseVersion",
    "xarray.tests.assert_equal",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_constructor_invalid": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.random.rand",
    "numpy.random.randn",
    "range",
    "xarray.DataArray",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_contains": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_coord_coords": {
  "data": {
   "lineno": 1325,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_coordinate_diff": {
  "data": {
   "lineno": 3922,
   "symbols_in_volume": [
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_coords": {
  "data": {
   "lineno": 1258,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "dask.array",
    "dask.array._indexes",
    "dask.array.coords",
    "dask.array.values",
    "len",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.random.randn",
    "repr",
    "textwrap.dedent",
    "xarray.DataArray",
    "xarray.IndexVariable",
    "xarray.core.indexes.propagate_indexes",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_coords_alignment": {
  "data": {
   "lineno": 1427,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_coords_delitem_delete_indexes": {
  "data": {
   "lineno": 1456,
   "symbols_in_volume": [
    "numpy.ones",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_coords_non_string": {
  "data": {
   "lineno": 1450,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_coords_replacement_alignment": {
  "data": {
   "lineno": 1442,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_coords_to_index": {
  "data": {
   "lineno": 1300,
   "symbols_in_volume": [
    "ValueError",
    "dask.array",
    "dask.array.coords.to_index",
    "list",
    "numpy.zeros",
    "pandas.Index",
    "pandas.MultiIndex.from_product",
    "xarray.DataArray",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_copy_coords": {
  "data": {
   "lineno": 3983,
   "symbols_in_volume": [
    "AssertionError",
    "dask.array",
    "dask.array.copy",
    "numpy.array",
    "numpy.ones",
    "xarray.DataArray",
    "xarray.IndexVariable",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_copy_with_data": {
  "data": {
   "lineno": 3969,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.random",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_cumops": {
  "data": {
   "lineno": 2306,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_da_resample_func_args": {
  "data": {
   "lineno": 2908,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.resample",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_da_resample_func_args.func": {
  "data": {
   "lineno": 2909
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_data_property": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.zeros",
    "xarray.DataArray",
    "xarray.tests.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_dataarray_diff_n1": {
  "data": {
   "lineno": 3916,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.diff",
    "dask.array.values",
    "numpy.diff",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_dataset_getitem": {
  "data": {
   "lineno": 1874,
   "symbols_in_volume": [
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_dataset_math": {
  "data": {
   "lineno": 2050,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ones",
    "range",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_dims": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "AttributeError",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_dot": {
  "data": {
   "lineno": 4061,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "dask.array",
    "dask.array.dot",
    "numpy.arange",
    "numpy.linspace",
    "numpy.tensordot",
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_dot_align_coords": {
  "data": {
   "lineno": 4107,
   "symbols_in_volume": [
    "ValueError",
    "dask.array",
    "dask.array.dot",
    "numpy.arange",
    "numpy.linspace",
    "numpy.tensordot",
    "range",
    "xarray.DataArray",
    "xarray.align",
    "xarray.set_options",
    "xarray.tests.assert_equal",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_drop_coordinates": {
  "data": {
   "lineno": 2228,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_drop_index_labels": {
  "data": {
   "lineno": 2254,
   "symbols_in_volume": [
    "DeprecationWarning",
    "KeyError",
    "ValueError",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_dropna": {
  "data": {
   "lineno": 2269,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_empty_dataarrays_return_empty_result": {
  "data": {
   "lineno": 1941,
   "symbols_in_volume": [
    "len",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_encoding": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_equals_and_identical": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_equals_failures": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "numpy.arange",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_expand_dims": {
  "data": {
   "lineno": 1666,
   "symbols_in_volume": [
    "numpy.expand_dims",
    "numpy.linspace",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_expand_dims_error": {
  "data": {
   "lineno": 1620,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "ValueError",
    "numpy.linspace",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.raises_regex",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_expand_dims_with_greater_dim_size": {
  "data": {
   "lineno": 1742,
   "symbols_in_volume": [
    "list",
    "numpy.linspace",
    "numpy.ones",
    "numpy.random.randn",
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_expand_dims_with_scalar_coordinate": {
  "data": {
   "lineno": 1724,
   "symbols_in_volume": [
    "numpy.expand_dims",
    "numpy.linspace",
    "numpy.ones",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_fillna": {
  "data": {
   "lineno": 2489,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.nan",
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_from_multiindex_series_sparse": {
  "data": {
   "lineno": 3572,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.nan",
    "numpy.random.RandomState",
    "numpy.testing.assert_equal",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "xarray.DataArray.from_series",
    "xarray.tests.requires_sparse",
    "xarray.tests.test_dataarray.sparse"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_from_series_multiindex": {
  "data": {
   "lineno": 3551,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_from_series_sparse": {
  "data": {
   "lineno": 3559,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Series",
    "xarray.DataArray.from_series",
    "xarray.tests.assert_identical",
    "xarray.tests.requires_sparse",
    "xarray.tests.test_dataarray.sparse"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_full_like": {
  "data": {
   "lineno": 4040,
   "symbols_in_volume": [
    "bool",
    "dask.array",
    "dask.array.copy",
    "numpy.random.random",
    "xarray.DataArray",
    "xarray.core.common.full_like",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_get_index": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "KeyError",
    "numpy.zeros",
    "pandas.Index",
    "xarray.DataArray",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_get_index_size_zero": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "numpy.int64",
    "numpy.zeros",
    "pandas.Index",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_getitem": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "xarray.tests.ReturnItem",
    "xarray.tests.assert_array_equal",
    "xarray.tests.assert_equal",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_getitem_coords": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_getitem_dataarray": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.values",
    "numpy.arange",
    "xarray.DataArray",
    "xarray.tests.assert_array_equal",
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_getitem_dict": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "slice",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_getitem_empty_index": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.loc",
    "numpy.arange",
    "numpy.zeros",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_bins": {
  "data": {
   "lineno": 2840,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.cut",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_bins_empty": {
  "data": {
   "lineno": 2858,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.nan",
    "pandas.cut",
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_bins_multidim": {
  "data": {
   "lineno": 2870,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.cut",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_bins_sort": {
  "data": {
   "lineno": 2883,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.linspace",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_count": {
  "data": {
   "lineno": 2640,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_first_and_last": {
  "data": {
   "lineno": 2790,
   "symbols_in_volume": [
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_iter": {
  "data": {
   "lineno": 2528,
   "symbols_in_volume": [
    "xarray.tests.assert_identical",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_map_center": {
  "data": {
   "lineno": 2666,
   "symbols_in_volume": [
    "center",
    "numpy.hstack",
    "xarray.tests.assert_allclose"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_map_center.center": {
  "data": {
   "lineno": 2667,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_map_changes_metadata": {
  "data": {
   "lineno": 2688,
   "symbols_in_volume": [
    "change_metadata",
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_map_changes_metadata.change_metadata": {
  "data": {
   "lineno": 2689
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_map_identity": {
  "data": {
   "lineno": 2551,
   "symbols_in_volume": [
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_map_identity.identity": {
  "data": {
   "lineno": 2555
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_map_ndarray": {
  "data": {
   "lineno": 2681,
   "symbols_in_volume": [
    "numpy.asarray",
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_math": {
  "data": {
   "lineno": 2701,
   "symbols_in_volume": [
    "TypeError",
    "numpy.arange",
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_math_not_aligned": {
  "data": {
   "lineno": 2734,
   "symbols_in_volume": [
    "numpy.nan",
    "range",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_multidim": {
  "data": {
   "lineno": 2821,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_multidim_map": {
  "data": {
   "lineno": 2830,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_properties": {
  "data": {
   "lineno": 2543,
   "symbols_in_volume": [
    "len",
    "range",
    "xarray.tests.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_reduce_attrs": {
  "data": {
   "lineno": 2650,
   "symbols_in_volume": [
    "numpy.mean",
    "print",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_restore_coord_dims": {
  "data": {
   "lineno": 2768,
   "symbols_in_volume": [
    "numpy.random.randn",
    "range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_restore_dim_order": {
  "data": {
   "lineno": 2753,
   "symbols_in_volume": [
    "numpy.random.randn",
    "range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_sum": {
  "data": {
   "lineno": 2565,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.sum",
    "slice",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.tests.assert_allclose"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_sum_default": {
  "data": {
   "lineno": 2618,
   "symbols_in_volume": [
    "numpy.array",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.tests.assert_allclose"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_head": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "slice",
    "xarray.tests.assert_equal",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_index_math": {
  "data": {
   "lineno": 2036,
   "symbols_in_volume": [
    "numpy.arange",
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_indexes": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.zeros",
    "pandas.Index",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_init_value": {
  "data": {
   "lineno": 1564,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.array",
    "numpy.full",
    "numpy.nan",
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_inplace_math_automatic_alignment": {
  "data": {
   "lineno": 1958,
   "symbols_in_volume": [
    "range",
    "xarray.DataArray",
    "xarray.MergeError",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_inplace_math_basics": {
  "data": {
   "lineno": 1947,
   "symbols_in_volume": [
    "xarray.tests.assert_array_equal",
    "xarray.tests.source_ndarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_is_null": {
  "data": {
   "lineno": 1905,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "numpy.random.RandomState",
    "pandas.isnull",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_isel": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "slice",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_isel_drop": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_isel_fancy": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "dask.array",
    "dask.array.isel",
    "dask.array.values",
    "dask.array.variable",
    "len",
    "list",
    "numpy.arange",
    "numpy.random.random",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.assert_array_equal",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_isel_types": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.isel",
    "numpy.array",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_loc": {
  "data": {
   "lineno": 1070,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.loc",
    "list",
    "numpy.arange",
    "numpy.array",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_loc_assign": {
  "data": {
   "lineno": 1087,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.loc",
    "dask.array.values",
    "list",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.zeros",
    "slice",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_loc_assign_dataarray": {
  "data": {
   "lineno": 1110,
   "symbols_in_volume": [
    "IndexError",
    "dask.array",
    "dask.array.loc",
    "dask.array.values",
    "dict",
    "get_data",
    "numpy.allclose",
    "numpy.arange",
    "numpy.random.randn",
    "numpy.zeros",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_loc_assign_dataarray.get_data": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ones",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_loc_datetime64_value": {
  "data": {
   "lineno": 1081,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ones",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_loc_single_boolean": {
  "data": {
   "lineno": 1156,
   "symbols_in_volume": [
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_math": {
  "data": {
   "lineno": 1913,
   "symbols_in_volume": [
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_math_automatic_alignment": {
  "data": {
   "lineno": 1929,
   "symbols_in_volume": [
    "numpy.ones",
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_math_name": {
  "data": {
   "lineno": 1966
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_math_with_coords": {
  "data": {
   "lineno": 1981,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.zeros",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_matmul": {
  "data": {
   "lineno": 4144,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.dot",
    "numpy.arange",
    "numpy.linspace",
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_matmul_align_coords": {
  "data": {
   "lineno": 4157,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "xarray.DataArray",
    "xarray.set_options",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_name": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.IndexVariable",
    "xarray.tests.assert_equal",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_non_overlapping_dataarrays_return_empty_result": {
  "data": {
   "lineno": 1935,
   "symbols_in_volume": [
    "len",
    "range",
    "slice",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_pad_constant": {
  "data": {
   "lineno": 4346,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.nan",
    "numpy.pad",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_pad_coords": {
  "data": {
   "lineno": 4360,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.nan",
    "numpy.pad",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_pad_linear_ramp": {
  "data": {
   "lineno": 4409,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "numpy.arange",
    "numpy.pad",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_pad_reflect": {
  "data": {
   "lineno": 4432,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.pad",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_pad_stat_length": {
  "data": {
   "lineno": 4389,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "numpy.arange",
    "numpy.pad",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_pickle": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "numpy.random.random",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pickle"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_polyfit": {
  "data": {
   "lineno": 4286,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.polyfit",
    "numpy.RankWarning",
    "numpy.nan",
    "numpy.stack",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.core.missing.get_clean_interp_index",
    "xarray.tests.assert_allclose",
    "xarray.tests.has_dask",
    "xarray.tests.test_dataarray.pytest",
    "xarray.tests.test_dataarray.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_properties": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "getattr",
    "isinstance",
    "len",
    "pandas.Index",
    "set",
    "xarray.tests.assert_array_equal",
    "xarray.tests.assert_equal",
    "xarray.tests.raises_regex",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_quantile": {
  "data": {
   "lineno": 2447,
   "symbols_in_volume": [
    "_percentile_func",
    "numpy.array",
    "numpy.nanpercentile",
    "numpy.percentile",
    "numpy.testing.assert_allclose",
    "xarray.DataArray",
    "xarray.core.utils.is_scalar",
    "xarray.tests.test_dataarray.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_rank": {
  "data": {
   "lineno": 4267,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.requires_bottleneck"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_real_and_imag": {
  "data": {
   "lineno": 4026,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reduce": {
  "data": {
   "lineno": 2335,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.mean",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reduce_dtype": {
  "data": {
   "lineno": 2423,
   "symbols_in_volume": [
    "float",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reduce_keep_attrs": {
  "data": {
   "lineno": 2464,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reduce_keepdims": {
  "data": {
   "lineno": 2376,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reduce_keepdims_bottleneck": {
  "data": {
   "lineno": 2406,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.requires_bottleneck",
    "xarray.tests.test_dataarray.bottleneck"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reduce_out": {
  "data": {
   "lineno": 2435,
   "symbols_in_volume": [
    "TypeError",
    "numpy.ones",
    "xarray.DataArray",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reindex_fill_value": {
  "data": {
   "lineno": 1530,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.core.dtypes.NA",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reindex_like": {
  "data": {
   "lineno": 1487,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reindex_like_no_index": {
  "data": {
   "lineno": 1497,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reindex_method": {
  "data": {
   "lineno": 1518,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reindex_regressions": {
  "data": {
   "lineno": 1505,
   "symbols_in_volume": [
    "ValueError",
    "complex",
    "dask.array",
    "dask.array.reindex",
    "numpy.arange",
    "numpy.array",
    "numpy.random.randn",
    "range",
    "xarray.DataArray",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_rename": {
  "data": {
   "lineno": 1551,
   "symbols_in_volume": [
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reorder_levels": {
  "data": {
   "lineno": 1855,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_repr": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int64",
    "repr",
    "textwrap.dedent",
    "xarray.DataArray",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_repr_multiindex": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "repr",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_repr_multiindex_long": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "list",
    "numpy.__version__",
    "pandas.MultiIndex.from_product",
    "range",
    "repr",
    "textwrap.dedent",
    "xarray.DataArray",
    "xarray.tests.LooseVersion",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_resample": {
  "data": {
   "lineno": 2890,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.mean",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_resample_bad_resample_dim": {
  "data": {
   "lineno": 2951,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_resample_drop_nondim_coords": {
  "data": {
   "lineno": 2957,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.arange",
    "numpy.meshgrid",
    "numpy.tile",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.requires_scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_resample_first": {
  "data": {
   "lineno": 2918,
   "symbols_in_volume": [
    "float",
    "numpy.arange",
    "numpy.nan",
    "pandas.date_range",
    "pandas.to_datetime",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_resample_keep_attrs": {
  "data": {
   "lineno": 2989,
   "symbols_in_volume": [
    "numpy.ones",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_resample_skipna": {
  "data": {
   "lineno": 2998,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.ones",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reset_coords": {
  "data": {
   "lineno": 1345,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.zeros",
    "range",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reset_index": {
  "data": {
   "lineno": 1815,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reset_index_keep_attrs": {
  "data": {
   "lineno": 1848,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.reset_index",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_roll_coords": {
  "data": {
   "lineno": 3948,
   "symbols_in_volume": [
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_roll_coords_none": {
  "data": {
   "lineno": 3960,
   "symbols_in_volume": [
    "FutureWarning",
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_roll_no_coords": {
  "data": {
   "lineno": 3954,
   "symbols_in_volume": [
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_sel": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.sel",
    "list",
    "numpy.array",
    "slice",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_sel_dataarray": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.isel",
    "dask.array.sel",
    "list",
    "numpy.array",
    "xarray.DataArray",
    "xarray.tests.assert_array_equal",
    "xarray.tests.assert_equal",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_sel_dataarray_datetime_slice": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.date_range",
    "slice",
    "xarray.DataArray",
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_sel_drop": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_sel_float": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.asarray",
    "xarray.DataArray",
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_sel_invalid_slice": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "slice",
    "xarray.DataArray",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_sel_method": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_sel_no_index": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "numpy.arange",
    "slice",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_selection_multiindex": {
  "data": {
   "lineno": 1161,
   "symbols_in_volume": [
    "IndexError",
    "pandas.MultiIndex.from_product",
    "range",
    "slice",
    "test_sel",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_selection_multiindex.test_sel": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.dims",
    "dask.array.equals",
    "dask.array.rename",
    "dask.array.variable",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_selection_multiindex_from_level": {
  "data": {
   "lineno": 1216,
   "symbols_in_volume": [
    "dask.array",
    "xarray.DataArray",
    "xarray.concat",
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_selection_multiindex_remove_unused": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": [
    "KeyError",
    "numpy.arange",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_series_categorical_index": {
  "data": {
   "lineno": 3599,
   "symbols_in_volume": [
    "hasattr",
    "list",
    "numpy.arange",
    "pandas",
    "pandas.CategoricalIndex",
    "pandas.Series",
    "repr",
    "xarray.DataArray",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_set_coords_update_index": {
  "data": {
   "lineno": 1437,
   "symbols_in_volume": [
    "pandas.Index",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_set_index": {
  "data": {
   "lineno": 1783,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.rand",
    "str",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_setattr_raises": {
  "data": {
   "lineno": 4031,
   "symbols_in_volume": [
    "AttributeError",
    "xarray.DataArray",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_setitem": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "numpy.arange",
    "slice",
    "xarray.DataArray",
    "xarray.tests.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_setitem_dataarray": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "IndexError",
    "dask.array",
    "dask.array.values",
    "dict",
    "get_data",
    "numpy.allclose",
    "numpy.arange",
    "numpy.random.randn",
    "numpy.zeros",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_setitem_dataarray.get_data": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ones",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_setitem_fancy": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "dask.array",
    "dict",
    "numpy.ones",
    "xarray.DataArray",
    "xarray.Variable",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_shift": {
  "data": {
   "lineno": 3930,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.core.dtypes.NA",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_sizes": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "TypeError",
    "numpy.zeros",
    "tuple",
    "xarray.DataArray",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_sortby": {
  "data": {
   "lineno": 4225,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.sortby",
    "xarray.DataArray",
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_squeeze": {
  "data": {
   "lineno": 2201,
   "symbols_in_volume": [
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_squeeze_drop": {
  "data": {
   "lineno": 2204,
   "symbols_in_volume": [
    "ValueError",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_stack_groupby_unsorted_coord": {
  "data": {
   "lineno": 1226,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_product",
    "xarray.DataArray",
    "xarray.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_stack_nonunique_consistency": {
  "data": {
   "lineno": 2152,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_stack_unstack": {
  "data": {
   "lineno": 2096,
   "symbols_in_volume": [
    "numpy.random.rand",
    "pandas.Int64Index",
    "pandas.MultiIndex",
    "pandas.__version__",
    "pandas.testing.assert_index_equal",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_stack_unstack_decreasing_coordinate": {
  "data": {
   "lineno": 2134,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.rand",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_struct_array_dims": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_swap_dims": {
  "data": {
   "lineno": 1590,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "pandas.MultiIndex.from_arrays",
    "pandas.testing.assert_index_equal",
    "set",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_tail": {
  "data": {
   "lineno": 1038,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "slice",
    "xarray.tests.assert_equal",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_thin": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "slice",
    "xarray.tests.assert_equal",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_and_from_cdms2_classic": {
  "data": {
   "lineno": 3747,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.date_range",
    "str",
    "tuple",
    "xarray.DataArray",
    "xarray.DataArray.from_cdms2",
    "xarray.IndexVariable",
    "xarray.convert.from_cdms2",
    "xarray.tests.assert_array_equal",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_and_from_cdms2_sgrid": {
  "data": {
   "lineno": 3786,
   "symbols_in_volume": [
    "dict",
    "numpy.arange",
    "numpy.mgrid",
    "set",
    "tuple",
    "xarray.DataArray",
    "xarray.convert.from_cdms2",
    "xarray.tests.assert_array_equal",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_and_from_cdms2_ugrid": {
  "data": {
   "lineno": 3815,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.uniform",
    "set",
    "tuple",
    "xarray.DataArray",
    "xarray.convert.from_cdms2",
    "xarray.tests.assert_array_equal",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_and_from_dict": {
  "data": {
   "lineno": 3608,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.DataArray.from_dict",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex",
    "xarray.tests.test_dataarray.sys"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_and_from_dict_with_nan_nat": {
  "data": {
   "lineno": 3674,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.to_dict",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.DataArray.from_dict",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_and_from_dict_with_time_dim": {
  "data": {
   "lineno": 3666,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.to_dict",
    "numpy.random.randn",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.DataArray.from_dict",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_and_from_empty_series": {
  "data": {
   "lineno": 3590,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.to_series",
    "len",
    "numpy.float64",
    "pandas.Series",
    "xarray.DataArray.from_series"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_and_from_series": {
  "data": {
   "lineno": 3536,
   "symbols_in_volume": [
    "xarray.DataArray.from_series",
    "xarray.tests.assert_array_equal",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_dataframe": {
  "data": {
   "lineno": 3492,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.assert_array_equal",
    "xarray.tests.raises_regex",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_dataset_retains_keys": {
  "data": {
   "lineno": 3877,
   "symbols_in_volume": [
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.test_dataarray.datetime"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_dataset_split": {
  "data": {
   "lineno": 3860,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_dataset_whole": {
  "data": {
   "lineno": 3836,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_dict_with_numpy_attrs": {
  "data": {
   "lineno": 3684,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.to_dict",
    "list",
    "numpy.array",
    "numpy.float64",
    "numpy.random.randn",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_masked_array": {
  "data": {
   "lineno": 3705,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.to_masked_array",
    "dask.array.values",
    "isinstance",
    "len",
    "numpy.ma.MaskedArray",
    "numpy.ma.masked_where",
    "numpy.nan",
    "numpy.random.RandomState",
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_array_equal",
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_pandas": {
  "data": {
   "lineno": 3457,
   "symbols_in_volume": [
    "ValueError",
    "dask.array",
    "dask.array.to_pandas",
    "len",
    "list",
    "numpy.array",
    "numpy.random.randn",
    "pandas.Index",
    "xarray.DataArray",
    "xarray.tests.assert_array_equal",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_pandas_name_matches_coordinate": {
  "data": {
   "lineno": 3523,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_unstacked_dataset_raises_value_error": {
  "data": {
   "lineno": 2160,
   "symbols_in_volume": [
    "ValueError",
    "xarray.DataArray",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_transpose": {
  "data": {
   "lineno": 2165,
   "symbols_in_volume": [
    "ValueError",
    "dask.array",
    "dask.array.coords",
    "dask.array.transpose",
    "dask.array.values.T",
    "dask.array.x.values",
    "dask.array.xy.values.T",
    "dask.array.y.values",
    "dask.array.z.values",
    "numpy.random.randn",
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_unstack_pandas_consistency": {
  "data": {
   "lineno": 2145,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_upsample": {
  "data": {
   "lineno": 3007,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_upsample_interpolate": {
  "data": {
   "lineno": 3117,
   "symbols_in_volume": [
    "f",
    "len",
    "numpy.arange",
    "numpy.linspace",
    "numpy.tile",
    "pandas.date_range",
    "scipy.interpolate.interp1d",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.requires_scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_upsample_interpolate_bug_2197": {
  "data": {
   "lineno": 3154,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.resample",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.datetime64",
    "numpy.nan",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.requires_scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_upsample_interpolate_dask": {
  "data": {
   "lineno": 3176,
   "symbols_in_volume": [
    "f",
    "len",
    "numpy.arange",
    "numpy.linspace",
    "numpy.tile",
    "pandas.date_range",
    "scipy.interpolate.interp1d",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.requires_dask",
    "xarray.tests.requires_scipy",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_upsample_interpolate_regression_1605": {
  "data": {
   "lineno": 3165,
   "symbols_in_volume": [
    "len",
    "numpy.random.random",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.requires_scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_upsample_nd": {
  "data": {
   "lineno": 3038,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.arange",
    "numpy.flipud",
    "numpy.nan",
    "numpy.repeat",
    "numpy.tile",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_upsample_tolerance": {
  "data": {
   "lineno": 3096,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_virtual_default_coords": {
  "data": {
   "lineno": 1245,
   "symbols_in_volume": [
    "numpy.zeros",
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_virtual_time_components": {
  "data": {
   "lineno": 1251,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.coords",
    "dask.array.values",
    "numpy.arange",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_where": {
  "data": {
   "lineno": 2288,
   "symbols_in_volume": [
    "numpy.arange",
    "slice",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_where_lambda": {
  "data": {
   "lineno": 2294,
   "symbols_in_volume": [
    "numpy.arange",
    "slice",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_where_string": {
  "data": {
   "lineno": 2300,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestIrisConversion": {
  "data": {
   "lineno": 6538
  },
  "type": "class"
 },
 "xarray.tests.test_dataarray.TestIrisConversion.test_da_coord_name_from_cube": {
  "data": {
   "lineno": 6724,
   "symbols_in_volume": [
    "iris.coords.DimCoord",
    "iris.cube.Cube",
    "xarray.DataArray",
    "xarray.DataArray.from_iris",
    "xarray.testing.assert_identical",
    "xarray.tests.requires_iris",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestIrisConversion.test_da_name_from_cube": {
  "data": {
   "lineno": 6691,
   "symbols_in_volume": [
    "iris.cube.Cube",
    "xarray.DataArray",
    "xarray.DataArray.from_iris",
    "xarray.testing.assert_identical",
    "xarray.tests.requires_iris",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestIrisConversion.test_fallback_to_iris_AuxCoord": {
  "data": {
   "lineno": 6777,
   "symbols_in_volume": [
    "dask.array",
    "iris.coords.AuxCoord",
    "iris.cube.Cube",
    "xarray.DataArray",
    "xarray.DataArray.to_iris",
    "xarray.tests.requires_iris",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestIrisConversion.test_prevent_duplicate_coord_names": {
  "data": {
   "lineno": 6759,
   "symbols_in_volume": [
    "ValueError",
    "iris.coords.DimCoord",
    "iris.cube.Cube",
    "xarray.DataArray.from_iris",
    "xarray.tests.requires_iris",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestIrisConversion.test_to_and_from_iris": {
  "data": {
   "lineno": 6539,
   "symbols_in_volume": [
    "numpy.NaN",
    "numpy.arange",
    "pandas.date_range",
    "tuple",
    "xarray.DataArray",
    "xarray.DataArray.from_iris",
    "xarray.coding.times.CFDatetimeCoder",
    "xarray.tests.assert_array_equal",
    "xarray.tests.assert_identical",
    "xarray.tests.requires_iris",
    "xarray.tests.test_dataarray.cf_units",
    "xarray.tests.test_dataarray.iris",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestIrisConversion.test_to_and_from_iris_dask": {
  "data": {
   "lineno": 6609,
   "symbols_in_volume": [
    "dask.array.from_array",
    "dask.array.ma.masked_less",
    "dict",
    "hasattr",
    "isinstance",
    "numpy.arange",
    "pandas.date_range",
    "tuple",
    "type",
    "xarray.DataArray",
    "xarray.DataArray.from_iris",
    "xarray.coding.times.CFDatetimeCoder",
    "xarray.tests.assert_array_equal",
    "xarray.tests.assert_identical",
    "xarray.tests.requires_dask",
    "xarray.tests.requires_iris",
    "xarray.tests.test_dataarray.cf_units",
    "xarray.tests.test_dataarray.iris",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestReduce": {
  "data": {
   "lineno": 4454
  },
  "type": "class"
 },
 "xarray.tests.test_dataarray.TestReduce.setup": {
  "data": {
   "lineno": 4455,
   "symbols_in_volume": [
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestReduce1D": {
  "data": {
   "lineno": 4460,
   "symbols_in_volume": [
    "numpy.NaN",
    "numpy.array",
    "xarray.tests.test_dataarray.TestReduce",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_dataarray.TestReduce1D.test_argmax": {
  "data": {
   "lineno": 4569,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.intp",
    "numpy.isnan",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestReduce1D.test_argmax_dim": {
  "data": {
   "lineno": 4849,
   "symbols_in_volume": [
    "ValueError",
    "copy.deepcopy",
    "dask.array",
    "dask.array.attrs",
    "numpy.arange",
    "numpy.intp",
    "numpy.isnan",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestReduce1D.test_argmin": {
  "data": {
   "lineno": 4537,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.intp",
    "numpy.isnan",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestReduce1D.test_argmin_dim": {
  "data": {
   "lineno": 4813,
   "symbols_in_volume": [
    "ValueError",
    "copy.deepcopy",
    "dask.array",
    "dask.array.attrs",
    "numpy.arange",
    "numpy.intp",
    "numpy.isnan",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestReduce1D.test_idxmax": {
  "data": {
   "lineno": 4707,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "numpy.NaN",
    "numpy.arange",
    "numpy.isnan",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.has_dask",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestReduce1D.test_idxmin": {
  "data": {
   "lineno": 4601,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "numpy.NaN",
    "numpy.arange",
    "numpy.isnan",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.has_dask",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestReduce1D.test_max": {
  "data": {
   "lineno": 4511,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.isnan",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestReduce1D.test_min": {
  "data": {
   "lineno": 4485,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.isnan",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestReduce2D": {
  "data": {
   "lineno": 4886,
   "symbols_in_volume": [
    "numpy.NaN",
    "numpy.array",
    "xarray.tests.test_dataarray.TestReduce",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_dataarray.TestReduce2D.test_argmax": {
  "data": {
   "lineno": 5066,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "numpy.arange",
    "numpy.intp",
    "numpy.isnan",
    "numpy.tile",
    "xarray.DataArray",
    "xarray.concat",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestReduce2D.test_argmax_dim": {
  "data": {
   "lineno": 5438,
   "symbols_in_volume": [
    "ValueError",
    "copy.deepcopy",
    "enumerate",
    "numpy.arange",
    "numpy.intp",
    "numpy.isnan",
    "numpy.tile",
    "xarray.DataArray",
    "xarray.concat",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestReduce2D.test_argmin": {
  "data": {
   "lineno": 5019,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "numpy.arange",
    "numpy.intp",
    "numpy.isnan",
    "numpy.tile",
    "xarray.DataArray",
    "xarray.concat",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestReduce2D.test_argmin_dim": {
  "data": {
   "lineno": 5378,
   "symbols_in_volume": [
    "ValueError",
    "copy.deepcopy",
    "enumerate",
    "numpy.arange",
    "numpy.intp",
    "numpy.isnan",
    "numpy.tile",
    "xarray.DataArray",
    "xarray.concat",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestReduce2D.test_idxmax": {
  "data": {
   "lineno": 5245,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "enumerate",
    "numpy.NaN",
    "numpy.arange",
    "numpy.array",
    "numpy.isnan",
    "numpy.tile",
    "raise_if_dask_computes",
    "xarray.DataArray",
    "xarray.concat",
    "xarray.tests.assert_identical",
    "xarray.tests.has_dask",
    "xarray.tests.test_dataarray.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestReduce2D.test_idxmin": {
  "data": {
   "lineno": 5113,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "enumerate",
    "numpy.NaN",
    "numpy.arange",
    "numpy.array",
    "numpy.isnan",
    "numpy.tile",
    "raise_if_dask_computes",
    "xarray.DataArray",
    "xarray.concat",
    "xarray.tests.assert_identical",
    "xarray.tests.has_dask",
    "xarray.tests.test_dataarray.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestReduce2D.test_max": {
  "data": {
   "lineno": 4980,
   "symbols_in_volume": [
    "enumerate",
    "numpy.arange",
    "numpy.isnan",
    "xarray.DataArray",
    "xarray.concat",
    "xarray.tests.assert_identical",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestReduce2D.test_min": {
  "data": {
   "lineno": 4941,
   "symbols_in_volume": [
    "enumerate",
    "numpy.arange",
    "numpy.isnan",
    "xarray.DataArray",
    "xarray.concat",
    "xarray.tests.assert_identical",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestReduce3D": {
  "data": {
   "lineno": 5499,
   "symbols_in_volume": [
    "numpy.NaN",
    "numpy.array",
    "xarray.tests.test_dataarray.TestReduce",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_dataarray.TestReduce3D.test_argmax_dim": {
  "data": {
   "lineno": 5894,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.array",
    "numpy.intp",
    "numpy.isnan",
    "numpy.newaxis",
    "numpy.tile",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pytest",
    "xarray.where"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestReduce3D.test_argmin_dim": {
  "data": {
   "lineno": 5665,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.array",
    "numpy.intp",
    "numpy.isnan",
    "numpy.newaxis",
    "numpy.tile",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pytest",
    "xarray.where"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestReduceND": {
  "data": {
   "lineno": 6124,
   "symbols_in_volume": [
    "xarray.tests.test_dataarray.TestReduce"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_dataarray.TestReduceND.test_idxminmax_dask": {
  "data": {
   "lineno": 6125,
   "symbols_in_volume": [
    "getattr",
    "numpy.arange",
    "numpy.random.random_sample",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.has_dask",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.Variable": {
  "data": {
   "shadows": "xarray.Variable"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.align": {
  "data": {
   "shadows": "xarray.align"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.assert_allclose": {
  "data": {
   "shadows": "xarray.tests.assert_allclose"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.assert_array_equal": {
  "data": {
   "shadows": "xarray.tests.assert_array_equal"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.assert_equal": {
  "data": {
   "shadows": "xarray.tests.assert_equal"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.assert_identical": {
  "data": {
   "shadows": "xarray.tests.assert_identical"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.bottleneck": {
  "data": {
   "shadows": "bottleneck"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.broadcast": {
  "data": {
   "shadows": "xarray.broadcast"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.cf_units": {
  "data": {
   "shadows": "cf_units"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.da_dask": {
  "data": {
   "lineno": 6163,
   "symbols_in_volume": [
    "dask.array",
    "numpy.random.RandomState",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.dtypes": {
  "data": {
   "shadows": "xarray.core.dtypes"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.from_cdms2": {
  "data": {
   "shadows": "xarray.convert.from_cdms2"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.full_like": {
  "data": {
   "shadows": "xarray.core.common.full_like"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.has_dask": {
  "data": {
   "shadows": "xarray.tests.has_dask"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.iris": {
  "data": {
   "shadows": "iris"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.is_scalar": {
  "data": {
   "shadows": "xarray.core.utils.is_scalar"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.propagate_indexes": {
  "data": {
   "shadows": "xarray.core.indexes.propagate_indexes"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.raises_regex": {
  "data": {
   "shadows": "xarray.tests.raises_regex"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.ref": {
  "data": {
   "shadows": "weakref.ref"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.requires_bottleneck": {
  "data": {
   "shadows": "xarray.tests.requires_bottleneck"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.requires_dask": {
  "data": {
   "shadows": "xarray.tests.requires_dask"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.requires_iris": {
  "data": {
   "shadows": "xarray.tests.requires_iris"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.requires_numbagg": {
  "data": {
   "shadows": "xarray.tests.requires_numbagg"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.requires_scipy": {
  "data": {
   "shadows": "xarray.tests.requires_scipy"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.requires_sparse": {
  "data": {
   "shadows": "xarray.tests.requires_sparse"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.source_ndarray": {
  "data": {
   "shadows": "xarray.tests.source_ndarray"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.sparse": {
  "data": {
   "shadows": "sparse"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.test_coarsen_keep_attrs": {
  "data": {
   "lineno": 6195,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.coarsen",
    "dask.array.copy",
    "numpy.linspace",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.set_options",
    "xarray.testing.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_deepcopy_obj_array": {
  "data": {
   "lineno": 6875,
   "symbols_in_volume": [
    "copy.deepcopy",
    "numpy.array",
    "object",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_delete_coords": {
  "data": {
   "lineno": 6850,
   "symbols_in_volume": [
    "numpy.array",
    "set",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_isin": {
  "data": {
   "lineno": 6174,
   "symbols_in_volume": [
    "dask.array.isin",
    "list",
    "numpy.asarray",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_name_in_masking": {
  "data": {
   "lineno": 6529,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.rename",
    "dask.array.where",
    "range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_ndrolling_construct": {
  "data": {
   "lineno": 6496,
   "symbols_in_volume": [
    "center",
    "dask.array",
    "dask.array.rolling",
    "float",
    "isinstance",
    "numpy.arange",
    "numpy.nan",
    "tuple",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_ndrolling_reduce": {
  "data": {
   "lineno": 6477,
   "symbols_in_volume": [
    "center",
    "dask.array.rolling",
    "getattr",
    "xarray.tests.assert_allclose",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_no_dict": {
  "data": {
   "lineno": 6818,
   "symbols_in_volume": [
    "AttributeError",
    "xarray.DataArray",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_no_warning_for_all_nan": {
  "data": {
   "lineno": 6524,
   "symbols_in_volume": [
    "numpy.NaN",
    "xarray.DataArray",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_raise_no_warning_for_nan_in_binary_ops": {
  "data": {
   "lineno": 6518,
   "symbols_in_volume": [
    "len",
    "numpy.NaN",
    "xarray.DataArray",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_rolling_construct": {
  "data": {
   "lineno": 6369,
   "symbols_in_volume": [
    "center",
    "dask.array",
    "dask.array.rolling",
    "numpy.arange",
    "numpy.testing.assert_allclose",
    "pandas.Series",
    "xarray.DataArray.from_series",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_rolling_count_correct": {
  "data": {
   "lineno": 6439,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.rolling",
    "dask.array.to_dataset",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_rolling_doc": {
  "data": {
   "lineno": 6260,
   "symbols_in_volume": [
    "dask.array.rolling"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_rolling_exp": {
  "data": {
   "lineno": 6795,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.dims",
    "dask.array.isel",
    "dask.array.rolling_exp",
    "dask.array.to_pandas",
    "dask.array.where",
    "isinstance",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.requires_numbagg",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_rolling_iter": {
  "data": {
   "lineno": 6224,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.isel",
    "dask.array.rolling",
    "enumerate",
    "len",
    "numpy.allclose",
    "xarray.tests.assert_array_equal",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_rolling_pandas_compat": {
  "data": {
   "lineno": 6347,
   "symbols_in_volume": [
    "center",
    "dask.array",
    "dask.array.rolling",
    "numpy.arange",
    "numpy.nanmean",
    "numpy.testing.assert_allclose",
    "pandas.Series",
    "xarray.DataArray.from_series",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_rolling_properties": {
  "data": {
   "lineno": 6267,
   "symbols_in_volume": [
    "ValueError",
    "dask.array.rolling",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_rolling_reduce": {
  "data": {
   "lineno": 6395,
   "symbols_in_volume": [
    "center",
    "dask.array.isnull",
    "dask.array.rolling",
    "getattr",
    "numpy",
    "xarray.tests.assert_allclose",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_rolling_reduce_nonnumeric": {
  "data": {
   "lineno": 6418,
   "symbols_in_volume": [
    "center",
    "dask.array",
    "dask.array.rolling",
    "getattr",
    "numpy",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_rolling_repr": {
  "data": {
   "lineno": 6250,
   "symbols_in_volume": [
    "dask.array.rolling",
    "repr",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_rolling_wrapped_bottleneck": {
  "data": {
   "lineno": 6279,
   "symbols_in_volume": [
    "DeprecationWarning",
    "center",
    "dask.array",
    "dask.array.rolling",
    "dask.array.values",
    "getattr",
    "xarray.tests.assert_array_equal",
    "xarray.tests.assert_equal",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_rolling_wrapped_dask": {
  "data": {
   "lineno": 6304,
   "symbols_in_volume": [
    "DeprecationWarning",
    "center",
    "getattr",
    "xarray.tests.assert_allclose",
    "xarray.tests.requires_dask",
    "xarray.tests.test_dataarray.da_dask",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_rolling_wrapped_dask_nochunk": {
  "data": {
   "lineno": 6334,
   "symbols_in_volume": [
    "center",
    "numpy.arange",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_subclass_slots": {
  "data": {
   "lineno": 6824,
   "symbols_in_volume": [
    "AttributeError",
    "str",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_subclass_slots.MyArray": {
  "data": {
   "lineno": 6833,
   "symbols_in_volume": [
    "xarray.DataArray"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_dataarray.test_weakref": {
  "data": {
   "lineno": 6839,
   "symbols_in_volume": [
    "r",
    "weakref.ref",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "xarray.tests.test_dataset.CFTimeIndex": {
  "data": {
   "shadows": "xarray.coding.cftimeindex.CFTimeIndex"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.DataArray": {
  "data": {
   "shadows": "xarray.DataArray"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.Dataset": {
  "data": {
   "shadows": "xarray.Dataset"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.DatetimeIndex": {
  "data": {
   "shadows": "pandas.core.indexes.datetimes.DatetimeIndex"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.IS_NEP18_ACTIVE": {
  "data": {
   "shadows": "xarray.core.npcompat.IS_NEP18_ACTIVE"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.InaccessibleVariableDataStore": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "xarray.backends.InMemoryDataStore"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_dataset.InaccessibleVariableDataStore.__init__": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.InaccessibleVariableDataStore.get_variables": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "lazy_inaccessible"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.InaccessibleVariableDataStore.get_variables.lazy_inaccessible": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "InaccessibleArray",
    "xarray.Variable",
    "xarray.core.indexing.LazilyOuterIndexedArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.InaccessibleVariableDataStore.store": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "isinstance",
    "super",
    "xarray.IndexVariable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.IndexVariable": {
  "data": {
   "shadows": "xarray.IndexVariable"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.MergeError": {
  "data": {
   "shadows": "xarray.MergeError"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.TestDataset": {
  "data": {
   "lineno": 191
  },
  "type": "class"
 },
 "xarray.tests.test_dataset.TestDataset.make_example_math_dataset": {
  "data": {
   "lineno": 4981,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_align": {
  "data": {
   "lineno": 1979,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "assert_array_equal",
    "assert_equal",
    "assert_identical",
    "list",
    "numpy.isnan",
    "numpy.random.randn",
    "raises_regex",
    "xarray.align",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_align_exact": {
  "data": {
   "lineno": 2024,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "raises_regex",
    "xarray.Dataset",
    "xarray.align"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_align_exclude": {
  "data": {
   "lineno": 2057,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.align"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_align_fill_value": {
  "data": {
   "lineno": 1947,
   "symbols_in_volume": [
    "assert_identical",
    "dict",
    "isinstance",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.align",
    "xarray.core.dtypes.NA",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_align_indexes": {
  "data": {
   "lineno": 2113,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.align"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_align_nocopy": {
  "data": {
   "lineno": 2095,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "source_ndarray",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.align"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_align_non_unique": {
  "data": {
   "lineno": 2122,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.Dataset",
    "xarray.align"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_align_override": {
  "data": {
   "lineno": 2035,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "raises_regex",
    "xarray.Dataset",
    "xarray.align"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_apply_pending_deprecated_map": {
  "data": {
   "lineno": 4974,
   "symbols_in_volume": [
    "PendingDeprecationWarning",
    "assert_identical",
    "numpy.mean",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_asarray": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "TypeError",
    "numpy.asarray",
    "raises_regex",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_assign": {
  "data": {
   "lineno": 3436,
   "symbols_in_volume": [
    "assert_identical",
    "list",
    "range",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_assign_attrs": {
  "data": {
   "lineno": 3478,
   "symbols_in_volume": [
    "assert_identical",
    "dict",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_assign_coords": {
  "data": {
   "lineno": 3465,
   "symbols_in_volume": [
    "assert_identical",
    "list",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_assign_multiindex_level": {
  "data": {
   "lineno": 3490,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "range",
    "xarray.tests.test_dataset.create_test_multiindex",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_astype_attrs": {
  "data": {
   "lineno": 5721,
   "symbols_in_volume": [
    "float",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_attr_access": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "assert_identical",
    "dir",
    "set",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_attribute_access": {
  "data": {
   "lineno": 5619,
   "symbols_in_volume": [
    "assert_equal",
    "dir",
    "getattr",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_attrs": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_binary_op_join_setting": {
  "data": {
   "lineno": 5425,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.nan",
    "xarray.Dataset",
    "xarray.set_options"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_binary_op_propagate_indexes": {
  "data": {
   "lineno": 5417,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_broadcast": {
  "data": {
   "lineno": 2131,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset",
    "xarray.broadcast"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_broadcast_equals": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_broadcast_exclude": {
  "data": {
   "lineno": 2173,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.broadcast"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_broadcast_like": {
  "data": {
   "lineno": 1751,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.random.randn",
    "range",
    "xarray.DataArray",
    "xarray.broadcast"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_broadcast_misaligned": {
  "data": {
   "lineno": 2215,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.broadcast"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_broadcast_nocopy": {
  "data": {
   "lineno": 2160,
   "symbols_in_volume": [
    "assert_identical",
    "source_ndarray",
    "xarray.Dataset",
    "xarray.broadcast"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_categorical_index": {
  "data": {
   "lineno": 1441,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "numpy.array",
    "pandas.CategoricalIndex",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_categorical_multiindex": {
  "data": {
   "lineno": 1474,
   "symbols_in_volume": [
    "pandas.CategoricalDtype",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_categorical_reindex": {
  "data": {
   "lineno": 1462,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "pandas.CategoricalIndex",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_chunk": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "dask.array.Array",
    "get_dask_names",
    "isinstance",
    "numpy.ndarray",
    "raises_regex",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_chunk.get_dask_names": {
  "data": {
   "lineno": 937
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_combine_first": {
  "data": {
   "lineno": 5498,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.merge"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_constructor": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "assert_identical",
    "numpy.arange",
    "raises_regex",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_constructor_0d": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "Arbitrary",
    "assert_identical",
    "numpy.array",
    "numpy.datetime64",
    "numpy.nan",
    "pandas.Timestamp",
    "print",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_constructor_0d.Arbitrary": {
  "data": {
   "lineno": 418
  },
  "type": "class"
 },
 "xarray.tests.test_dataset.TestDataset.test_constructor_1d": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_constructor_auto_align": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "isinstance",
    "numpy.nan",
    "raises_regex",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.IndexVariable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_constructor_compat": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.ones",
    "numpy.zeros",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.MergeError",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_constructor_deprecated": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_constructor_invalid_dims": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "dict",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.MergeError",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_constructor_pandas_sequence": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "assert_equal",
    "reversed",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_constructor_pandas_single": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.random.rand",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_constructor_with_coords": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "pandas.MultiIndex.from_product",
    "raises_regex",
    "range",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_convert_dataframe_with_many_types_and_multiindex": {
  "data": {
   "lineno": 4159,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.asarray",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.date_range",
    "range",
    "xarray.Dataset.from_dataframe"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_coords_merge": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "range",
    "xarray.Dataset",
    "xarray.MergeError",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_coords_merge_mismatched_shape": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_coords_modify": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "assert_array_equal",
    "assert_identical",
    "numpy.random.randn",
    "raises_regex",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_coords_properties": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "KeyError",
    "assert_identical",
    "len",
    "list",
    "numpy.array",
    "numpy.int64",
    "numpy.random.randn",
    "repr",
    "textwrap.dedent",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_coords_set": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "raises_regex",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_coords_setitem_multiindex": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "range",
    "xarray.tests.test_dataset.create_test_multiindex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_coords_setitem_with_new_dimension": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_coords_to_dataset": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_copy": {
  "data": {
   "lineno": 2422,
   "symbols_in_volume": [
    "assert_identical",
    "copy.copy",
    "copy.deepcopy",
    "numpy.arange",
    "source_ndarray",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_copy_coords": {
  "data": {
   "lineno": 2461,
   "symbols_in_volume": [
    "AssertionError",
    "assert_identical",
    "numpy.array",
    "numpy.ones",
    "xarray.DataArray",
    "xarray.IndexVariable",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_copy_with_data": {
  "data": {
   "lineno": 2451,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.random.randn",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_copy_with_data_errors": {
  "data": {
   "lineno": 2505,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "raises_regex",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_count": {
  "data": {
   "lineno": 4945,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dask_is_lazy": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": [
    "slice",
    "xarray.open_dataset",
    "xarray.tests.test_dataset.InaccessibleVariableDataStore",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_data_vars_properties": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "assert_identical",
    "repr",
    "set",
    "textwrap.dedent",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_array_math": {
  "data": {
   "lineno": 5025,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_dataset_math": {
  "data": {
   "lineno": 5047,
   "symbols_in_volume": [
    "assert_identical",
    "dict",
    "id",
    "slice"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_diff_exception_label_str": {
  "data": {
   "lineno": 5258,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_diff_exception_n_neg": {
  "data": {
   "lineno": 5253,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_diff_n1": {
  "data": {
   "lineno": 5215,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.diff",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_diff_n1_label": {
  "data": {
   "lineno": 5205,
   "symbols_in_volume": [
    "assert_equal",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_diff_n1_simple": {
  "data": {
   "lineno": 5199,
   "symbols_in_volume": [
    "assert_equal",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_diff_n2": {
  "data": {
   "lineno": 5234,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.diff",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_ellipsis_transpose_different_ordered_vars": {
  "data": {
   "lineno": 5178,
   "symbols_in_volume": [
    "dict",
    "list",
    "numpy.ones",
    "numpy.zeros",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_math_auto_align": {
  "data": {
   "lineno": 5072,
   "symbols_in_volume": [
    "assert_equal",
    "assert_identical",
    "slice",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_math_errors": {
  "data": {
   "lineno": 5102,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "assert_identical",
    "numpy.datetime64",
    "raises_regex",
    "xarray.DataArray",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_number_math": {
  "data": {
   "lineno": 4991,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_retains_period_index_on_transpose": {
  "data": {
   "lineno": 5190,
   "symbols_in_volume": [
    "isinstance",
    "pandas.PeriodIndex",
    "pandas.period_range",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_transpose": {
  "data": {
   "lineno": 5121,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "dir",
    "numpy.random.randn",
    "raises_regex",
    "range",
    "tuple",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_delitem": {
  "data": {
   "lineno": 3542,
   "symbols_in_volume": [
    "assert_identical",
    "set",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_drop_dims": {
  "data": {
   "lineno": 2381,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "assert_identical",
    "numpy.pi",
    "numpy.random.randn",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_drop_index_labels": {
  "data": {
   "lineno": 2302,
   "symbols_in_volume": [
    "DeprecationWarning",
    "KeyError",
    "ValueError",
    "assert_identical",
    "numpy.random.randn",
    "raises_regex",
    "slice",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_drop_labels_by_keyword": {
  "data": {
   "lineno": 2345,
   "symbols_in_volume": [
    "DeprecationWarning",
    "FutureWarning",
    "ValueError",
    "assert_array_equal",
    "len",
    "numpy.random.randn",
    "range",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest",
    "xarray.tests.test_dataset.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_drop_variables": {
  "data": {
   "lineno": 2261,
   "symbols_in_volume": [
    "PendingDeprecationWarning",
    "ValueError",
    "assert_identical",
    "raises_regex",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dropna": {
  "data": {
   "lineno": 4334,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "assert_identical",
    "numpy.nan",
    "numpy.random.randn",
    "raises_regex",
    "slice",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_ds_resample_apply_func_args": {
  "data": {
   "lineno": 3940,
   "symbols_in_volume": [
    "assert_identical",
    "pandas.date_range",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_ds_resample_apply_func_args.func": {
  "data": {
   "lineno": 3941
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_equals_and_identical": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_equals_failures": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_expand_dims_coords": {
  "data": {
   "lineno": 2793,
   "symbols_in_volume": [
    "assert_identical",
    "dict",
    "numpy.array",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_expand_dims_error": {
  "data": {
   "lineno": 2703,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.linspace",
    "numpy.random.randn",
    "raises_regex",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_expand_dims_existing_scalar_coord": {
  "data": {
   "lineno": 2802,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_expand_dims_int": {
  "data": {
   "lineno": 2745,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.linspace",
    "numpy.random.randn",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_expand_dims_kwargs_python36plus": {
  "data": {
   "lineno": 2850,
   "symbols_in_volume": [
    "assert_identical",
    "dict",
    "numpy.linspace",
    "numpy.ones",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_expand_dims_mixed_int_and_coords": {
  "data": {
   "lineno": 2813,
   "symbols_in_volume": [
    "assert_identical",
    "dict",
    "numpy.linspace",
    "numpy.ones",
    "numpy.random.randn",
    "range",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_fillna": {
  "data": {
   "lineno": 4394,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "dask.array",
    "dask.array.attrs",
    "dask.array.fillna",
    "numpy.nan",
    "raises_regex",
    "range",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_filter_by_attrs": {
  "data": {
   "lineno": 5350,
   "symbols_in_volume": [
    "assert_equal",
    "bool",
    "dict",
    "len",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_from_dataframe_categorical": {
  "data": {
   "lineno": 4063,
   "symbols_in_volume": [
    "len",
    "pandas.CategoricalDtype",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_from_dataframe_multiindex": {
  "data": {
   "lineno": 4109,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "numpy.arange",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "raises_regex",
    "xarray.Dataset",
    "xarray.Dataset.from_dataframe"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_from_dataframe_non_unique_columns": {
  "data": {
   "lineno": 4152,
   "symbols_in_volume": [
    "ValueError",
    "numpy.zeros",
    "pandas.DataFrame",
    "raises_regex",
    "xarray.Dataset.from_dataframe"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_from_dataframe_sparse": {
  "data": {
   "lineno": 4078,
   "symbols_in_volume": [
    "assert_identical",
    "isinstance",
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "range",
    "xarray.Dataset.from_dataframe",
    "xarray.tests.test_dataset.sparse"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_from_dataframe_unsorted_levels": {
  "data": {
   "lineno": 4136,
   "symbols_in_volume": [
    "assert_identical",
    "pandas.DataFrame",
    "pandas.MultiIndex",
    "xarray.Dataset",
    "xarray.Dataset.from_dataframe"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_full_like": {
  "data": {
   "lineno": 5456,
   "symbols_in_volume": [
    "assert_identical",
    "bool",
    "float",
    "int",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.core.common.full_like"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_get_index": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "KeyError",
    "numpy.zeros",
    "pandas.Index",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_getitem": {
  "data": {
   "lineno": 3180,
   "symbols_in_volume": [
    "KeyError",
    "assert_equal",
    "assert_identical",
    "dict",
    "isinstance",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_getitem_hashable": {
  "data": {
   "lineno": 3206,
   "symbols_in_volume": [
    "KeyError",
    "assert_identical",
    "raises_regex",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_groupby": {
  "data": {
   "lineno": 3596,
   "symbols_in_volume": [
    "assert_equal",
    "len",
    "list",
    "numpy.random.randn",
    "range",
    "xarray.Dataset",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_groupby.identity": {
  "data": {
   "lineno": 3614
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_groupby_errors": {
  "data": {
   "lineno": 3640,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.arange",
    "raises_regex",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_groupby_iter": {
  "data": {
   "lineno": 3632,
   "symbols_in_volume": [
    "assert_equal",
    "enumerate",
    "list",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_groupby_math": {
  "data": {
   "lineno": 3678,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "assert_equal",
    "assert_identical",
    "numpy.arange",
    "numpy.zeros",
    "pandas.date_range",
    "raises_regex",
    "range",
    "reorder_dims",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_groupby_math.reorder_dims": {
  "data": {
   "lineno": 3679
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_groupby_math_virtual": {
  "data": {
   "lineno": 3733,
   "symbols_in_volume": [
    "assert_identical",
    "pandas.date_range",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_groupby_nan": {
  "data": {
   "lineno": 3742,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_groupby_order": {
  "data": {
   "lineno": 3749,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_groupby_reduce": {
  "data": {
   "lineno": 3649,
   "symbols_in_volume": [
    "assert_allclose",
    "numpy.random.randn",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_groupby_returns_new_type": {
  "data": {
   "lineno": 3621,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.random.randn",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_head": {
  "data": {
   "lineno": 1510,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "assert_equal",
    "raises_regex",
    "slice",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_info": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "io.StringIO",
    "textwrap.dedent",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_ipython_key_completion": {
  "data": {
   "lineno": 5632,
   "symbols_in_volume": [
    "sorted",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_isel": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "assert_identical",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.nonzero",
    "numpy.testing.assert_array_equal",
    "raises_regex",
    "set",
    "slice",
    "tuple",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_isel_dataarray": {
  "data": {
   "lineno": 1188,
   "symbols_in_volume": [
    "IndexError",
    "assert_identical",
    "numpy.arange",
    "numpy.random.randn",
    "raises_regex",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_isel_drop": {
  "data": {
   "lineno": 1500,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_isel_expand_dims_roundtrip": {
  "data": {
   "lineno": 2808,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_isel_fancy": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "ValueError",
    "assert_array_equal",
    "assert_equal",
    "assert_identical",
    "len",
    "numpy.random.randn",
    "numpy.testing.assert_array_equal",
    "raises_regex",
    "slice",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_lazy_load": {
  "data": {
   "lineno": 4319,
   "symbols_in_volume": [
    "slice",
    "xarray.open_dataset",
    "xarray.tests.test_dataset.InaccessibleVariableDataStore",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_loc": {
  "data": {
   "lineno": 1704,
   "symbols_in_volume": [
    "TypeError",
    "assert_identical",
    "dict",
    "raises_regex",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_map": {
  "data": {
   "lineno": 4951,
   "symbols_in_volume": [
    "assert_equal",
    "assert_identical",
    "numpy.asarray",
    "numpy.mean",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_map.scale": {
  "data": {
   "lineno": 4963
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_mean_uint_dtype": {
  "data": {
   "lineno": 4678,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "numpy.array",
    "numpy.nan",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_merge_multiindex_level": {
  "data": {
   "lineno": 3499,
   "symbols_in_volume": [
    "ValueError",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_multiindex",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_modify_inplace": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.random.random",
    "pandas.Index",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_pad": {
  "data": {
   "lineno": 5708,
   "symbols_in_volume": [
    "dict",
    "numpy.nan",
    "numpy.testing.assert_equal",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_pickle": {
  "data": {
   "lineno": 4312,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.pickle"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_polyfit_output": {
  "data": {
   "lineno": 5685,
   "symbols_in_volume": [
    "len",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_polyfit_warnings": {
  "data": {
   "lineno": 5698,
   "symbols_in_volume": [
    "len",
    "numpy.RankWarning",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_properties": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "bool",
    "dict",
    "isinstance",
    "len",
    "list",
    "numpy.float32",
    "numpy.int64",
    "repr",
    "set",
    "sorted",
    "type",
    "xarray.Dataset",
    "xarray.core.utils.Frozen",
    "xarray.core.utils.SortedKeysDict",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_quantile": {
  "data": {
   "lineno": 4893,
   "symbols_in_volume": [
    "all",
    "assert_identical",
    "xarray.core.utils.is_scalar",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_quantile_skipna": {
  "data": {
   "lineno": 4915,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "numpy.nan",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_rank": {
  "data": {
   "lineno": 4928,
   "symbols_in_volume": [
    "ValueError",
    "assert_equal",
    "list",
    "raises_regex",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_real_and_imag": {
  "data": {
   "lineno": 5331,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce": {
  "data": {
   "lineno": 4645,
   "symbols_in_volume": [
    "assert_equal",
    "len",
    "list",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_argmin": {
  "data": {
   "lineno": 4810,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_bad_dim": {
  "data": {
   "lineno": 4691,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_coords": {
  "data": {
   "lineno": 4667,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_cumsum": {
  "data": {
   "lineno": 4696,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_cumsum_test_dims": {
  "data": {
   "lineno": 4707,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "list",
    "raises_regex",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_dtypes": {
  "data": {
   "lineno": 4776,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.array",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_keep_attrs": {
  "data": {
   "lineno": 4791,
   "symbols_in_volume": [
    "dict",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_keepdims": {
  "data": {
   "lineno": 4867,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.mean",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_no_axis": {
  "data": {
   "lineno": 4852,
   "symbols_in_volume": [
    "TypeError",
    "assert_identical",
    "raises_regex",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_no_axis.total_sum": {
  "data": {
   "lineno": 4853,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_non_numeric": {
  "data": {
   "lineno": 4723,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.random.randint",
    "numpy.str_",
    "sorted",
    "tuple",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_only_one_axis": {
  "data": {
   "lineno": 4833,
   "symbols_in_volume": [
    "TypeError",
    "assert_identical",
    "raises_regex",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_only_one_axis.mean_only_one_axis": {
  "data": {
   "lineno": 4834,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "xarray.core.pycompat.integer_types"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_scalars": {
  "data": {
   "lineno": 4823,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_strings": {
  "data": {
   "lineno": 4736,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.array",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reindex": {
  "data": {
   "lineno": 1786,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "len",
    "numpy.arange",
    "numpy.nan",
    "numpy.random.randn",
    "numpy.zeros",
    "raises_regex",
    "range",
    "slice",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reindex_fill_value": {
  "data": {
   "lineno": 1900,
   "symbols_in_volume": [
    "assert_identical",
    "dict",
    "isinstance",
    "numpy.nan",
    "xarray.Dataset",
    "xarray.core.dtypes.NA",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reindex_like": {
  "data": {
   "lineno": 1766,
   "symbols_in_volume": [
    "assert_identical",
    "float",
    "list",
    "numpy.nan",
    "object",
    "slice",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reindex_like_fill_value": {
  "data": {
   "lineno": 1923,
   "symbols_in_volume": [
    "assert_identical",
    "dict",
    "isinstance",
    "numpy.nan",
    "xarray.Dataset",
    "xarray.core.dtypes.NA",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reindex_method": {
  "data": {
   "lineno": 1881,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reindex_variables_copied": {
  "data": {
   "lineno": 1875,
   "symbols_in_volume": [
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reindex_warning": {
  "data": {
   "lineno": 1861,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "xarray.DataArray",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_rename": {
  "data": {
   "lineno": 2515,
   "symbols_in_volume": [
    "InaccessibleArray",
    "ValueError",
    "assert_equal",
    "assert_identical",
    "dict",
    "list",
    "raises_regex",
    "type",
    "xarray.Variable",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_rename_dims": {
  "data": {
   "lineno": 2578,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_rename_does_not_change_CFTimeIndex_type": {
  "data": {
   "lineno": 2623,
   "symbols_in_volume": [
    "isinstance",
    "xarray.Dataset",
    "xarray.cftime_range",
    "xarray.coding.cftimeindex.CFTimeIndex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_rename_does_not_change_DatetimeIndex_type": {
  "data": {
   "lineno": 2647,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.indexes.datetimes.DatetimeIndex",
    "pandas.date_range",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_rename_inplace": {
  "data": {
   "lineno": 2572,
   "symbols_in_volume": [
    "TypeError",
    "pandas.date_range",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_rename_multiindex": {
  "data": {
   "lineno": 2615,
   "symbols_in_volume": [
    "ValueError",
    "pandas.MultiIndex.from_tuples",
    "raises_regex",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_rename_old_name": {
  "data": {
   "lineno": 2556,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_rename_same_name": {
  "data": {
   "lineno": 2566,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_rename_vars": {
  "data": {
   "lineno": 2598,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reorder_levels": {
  "data": {
   "lineno": 2928,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "assert_identical",
    "raises_regex",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_multiindex",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_repr": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "len",
    "map",
    "max",
    "numpy.ones",
    "print",
    "repr",
    "textwrap.dedent",
    "xarray.Dataset",
    "xarray.set_options",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_repr_multiindex": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_product",
    "print",
    "repr",
    "textwrap.dedent",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_multiindex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_repr_nep18": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "Array",
    "repr",
    "textwrap.dedent",
    "xarray.Dataset",
    "xarray.core.npcompat.IS_NEP18_ACTIVE",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_repr_nep18.Array": {
  "data": {
   "lineno": 317
  },
  "type": "class"
 },
 "xarray.tests.test_dataset.TestDataset.test_repr_nep18.Array.__array_function__": {
  "data": {
   "lineno": 322
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_repr_nep18.Array.__init__": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_repr_nep18.Array.__repr__": {
  "data": {
   "lineno": 325
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_repr_period_index": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "pandas.period_range",
    "repr",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_resample_and_first": {
  "data": {
   "lineno": 3763,
   "symbols_in_volume": [
    "assert_equal",
    "assert_identical",
    "getattr",
    "method",
    "numpy.mean",
    "numpy.random.randn",
    "pandas.date_range",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_resample_by_last_discarding_attrs": {
  "data": {
   "lineno": 3864,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.date_range",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_resample_by_mean_discarding_attrs": {
  "data": {
   "lineno": 3848,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.date_range",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_resample_by_mean_with_keep_attrs": {
  "data": {
   "lineno": 3811,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.date_range",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_resample_drop_nondim_coords": {
  "data": {
   "lineno": 3880,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.arange",
    "numpy.meshgrid",
    "numpy.tile",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_resample_ds_da_are_the_same": {
  "data": {
   "lineno": 3927,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "numpy.random.randn",
    "pandas.date_range",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_resample_loffset": {
  "data": {
   "lineno": 3831,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.random.randn",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_resample_min_count": {
  "data": {
   "lineno": 3789,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.date_range",
    "range",
    "slice",
    "xarray.Dataset",
    "xarray.concat",
    "xarray.where"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_resample_old_api": {
  "data": {
   "lineno": 3907,
   "symbols_in_volume": [
    "TypeError",
    "numpy.random.randn",
    "pandas.date_range",
    "raises_regex",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reset_index": {
  "data": {
   "lineno": 2908,
   "symbols_in_volume": [
    "TypeError",
    "assert_identical",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_multiindex",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reset_index_keep_attrs": {
  "data": {
   "lineno": 2921,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_roll_coords": {
  "data": {
   "lineno": 5281,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "list",
    "raises_regex",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_roll_coords_none": {
  "data": {
   "lineno": 5306,
   "symbols_in_volume": [
    "FutureWarning",
    "assert_identical",
    "list",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_roll_multidim": {
  "data": {
   "lineno": 5318,
   "symbols_in_volume": [
    "assert_identical",
    "range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_roll_no_coords": {
  "data": {
   "lineno": 5294,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "list",
    "raises_regex",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_sel": {
  "data": {
   "lineno": 1278,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.arange",
    "pandas.Timedelta",
    "pandas.date_range",
    "pandas.to_timedelta",
    "slice",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_sel_categorical": {
  "data": {
   "lineno": 1424,
   "symbols_in_volume": [
    "assert_identical",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_sel_categorical_error": {
  "data": {
   "lineno": 1432,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.Series",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_sel_dataarray": {
  "data": {
   "lineno": 1307,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.allclose",
    "xarray.DataArray",
    "xarray.Variable",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_sel_dataarray_mindex": {
  "data": {
   "lineno": 1380,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.random.rand",
    "pandas.MultiIndex.from_product",
    "raises_regex",
    "range",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_sel_drop": {
  "data": {
   "lineno": 1485,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_sel_fancy": {
  "data": {
   "lineno": 1582,
   "symbols_in_volume": [
    "KeyError",
    "assert_array_equal",
    "assert_identical",
    "numpy.arange",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_sel_method": {
  "data": {
   "lineno": 1676,
   "symbols_in_volume": [
    "KeyError",
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "assert_identical",
    "numpy.pi",
    "raises_regex",
    "slice",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_selection_multiindex": {
  "data": {
   "lineno": 1714,
   "symbols_in_volume": [
    "assert_identical",
    "pandas.MultiIndex.from_product",
    "range",
    "slice",
    "test_sel",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_selection_multiindex.test_sel": {
  "data": {
   "lineno": 1720,
   "symbols_in_volume": [
    "assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_set_index": {
  "data": {
   "lineno": 2883,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "assert_identical",
    "str",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_multiindex",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_setattr_raises": {
  "data": {
   "lineno": 5341,
   "symbols_in_volume": [
    "AttributeError",
    "raises_regex",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_setitem": {
  "data": {
   "lineno": 3296,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "assert_equal",
    "assert_identical",
    "numpy.random.randn",
    "raises_regex",
    "xarray.Variable",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_setitem_align_new_indexes": {
  "data": {
   "lineno": 3428,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_setitem_auto_align": {
  "data": {
   "lineno": 3342,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "numpy.nan",
    "range",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_setitem_both_non_unique_index": {
  "data": {
   "lineno": 3525,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.random.randint",
    "range",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_setitem_dimension_override": {
  "data": {
   "lineno": 3365,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.array",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_setitem_multiindex_level": {
  "data": {
   "lineno": 3537,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "range",
    "xarray.tests.test_dataset.create_test_multiindex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_setitem_original_non_unique_index": {
  "data": {
   "lineno": 3508,
   "symbols_in_volume": [
    "assert_identical",
    "list",
    "numpy.arange",
    "range",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_setitem_pandas": {
  "data": {
   "lineno": 3333,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_setitem_with_coords": {
  "data": {
   "lineno": 3380,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.allclose",
    "numpy.arange",
    "slice",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_shift": {
  "data": {
   "lineno": 5263,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "dict",
    "isinstance",
    "list",
    "numpy.nan",
    "raises_regex",
    "xarray.Dataset",
    "xarray.core.dtypes.NA",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_slice_virtual_variable": {
  "data": {
   "lineno": 3289,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.arange",
    "xarray.Variable",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_sortby": {
  "data": {
   "lineno": 5516,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "assert_equal",
    "pandas.MultiIndex.from_tuples",
    "reversed",
    "str",
    "tuple",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_squeeze": {
  "data": {
   "lineno": 3557,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "get_args",
    "raises_regex",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_squeeze.get_args": {
  "data": {
   "lineno": 3561,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_squeeze_drop": {
  "data": {
   "lineno": 3573,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_stack": {
  "data": {
   "lineno": 2944,
   "symbols_in_volume": [
    "assert_identical",
    "pandas.MultiIndex.from_product",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_stack_unstack_fast": {
  "data": {
   "lineno": 3031,
   "symbols_in_volume": [
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_stack_unstack_slow": {
  "data": {
   "lineno": 3046,
   "symbols_in_volume": [
    "slice",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_swap_dims": {
  "data": {
   "lineno": 2670,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "isinstance",
    "list",
    "pandas.MultiIndex.from_arrays",
    "pandas.testing.assert_index_equal",
    "raises_regex",
    "xarray.Dataset",
    "xarray.IndexVariable",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_tail": {
  "data": {
   "lineno": 1536,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "assert_equal",
    "raises_regex",
    "slice",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_thin": {
  "data": {
   "lineno": 1562,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "assert_equal",
    "raises_regex",
    "slice",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_time_season": {
  "data": {
   "lineno": 3284,
   "symbols_in_volume": [
    "assert_array_equal",
    "pandas.date_range",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_to_and_from_dataframe": {
  "data": {
   "lineno": 3967,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "list",
    "numpy.array",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_arrays",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Dataset.from_dataframe",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_to_and_from_dict": {
  "data": {
   "lineno": 4180,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "list",
    "numpy.random.randn",
    "raises_regex",
    "xarray.Dataset",
    "xarray.Dataset.from_dict",
    "xarray.tests.test_dataset.sys"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_to_and_from_dict_with_nan_nat": {
  "data": {
   "lineno": 4272,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.date_range",
    "xarray.Dataset",
    "xarray.Dataset.from_dict"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_to_and_from_dict_with_time_dim": {
  "data": {
   "lineno": 4256,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.random.randn",
    "pandas.date_range",
    "xarray.Dataset",
    "xarray.Dataset.from_dict"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_to_and_from_empty_dataframe": {
  "data": {
   "lineno": 4100,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "xarray.Dataset.from_dataframe"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_to_array": {
  "data": {
   "lineno": 3950,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_to_dict_with_numpy_attrs": {
  "data": {
   "lineno": 4291,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.float64",
    "numpy.random.randn",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_to_stacked_array_dtype_dims": {
  "data": {
   "lineno": 3082,
   "symbols_in_volume": [
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_stacked_array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_to_stacked_array_invalid_sample_dims": {
  "data": {
   "lineno": 3063,
   "symbols_in_volume": [
    "ValueError",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_to_stacked_array_name": {
  "data": {
   "lineno": 3071,
   "symbols_in_volume": [
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_stacked_array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_to_stacked_array_to_unstacked_dataset": {
  "data": {
   "lineno": 3091,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_stacked_array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_to_stacked_array_to_unstacked_dataset_different_dimension": {
  "data": {
   "lineno": 3114,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_stacked_array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_unary_ops": {
  "data": {
   "lineno": 5004,
   "symbols_in_volume": [
    "AttributeError",
    "abs",
    "assert_identical",
    "func",
    "int",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_unicode_data": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "repr",
    "str",
    "textwrap.dedent",
    "xarray.Dataset",
    "xarray.tests.test_dataset.sys"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_unstack": {
  "data": {
   "lineno": 2974,
   "symbols_in_volume": [
    "assert_identical",
    "pandas.MultiIndex.from_product",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_unstack_errors": {
  "data": {
   "lineno": 2984,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_unstack_fill_value": {
  "data": {
   "lineno": 2991,
   "symbols_in_volume": [
    "assert_equal",
    "int",
    "numpy.arange",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_unstack_sparse": {
  "data": {
   "lineno": 3012,
   "symbols_in_volume": [
    "numpy.arange",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_update": {
  "data": {
   "lineno": 3124,
   "symbols_in_volume": [
    "TypeError",
    "assert_identical",
    "numpy.arange",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_update_auto_align": {
  "data": {
   "lineno": 3161,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "numpy.nan",
    "raises_regex",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_update_index": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "pandas.Index",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_update_overwrite_coords": {
  "data": {
   "lineno": 3145,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_variable": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "ValueError",
    "assert_array_equal",
    "list",
    "numpy.random.random",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_variable_indexing": {
  "data": {
   "lineno": 2248,
   "symbols_in_volume": [
    "assert_equal",
    "range",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_virtual_variable_multiindex": {
  "data": {
   "lineno": 3256,
   "symbols_in_volume": [
    "assert_identical",
    "pandas.MultiIndex.from_arrays",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_multiindex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_virtual_variable_same_name": {
  "data": {
   "lineno": 3248,
   "symbols_in_volume": [
    "assert_identical",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_virtual_variables_default_coords": {
  "data": {
   "lineno": 3215,
   "symbols_in_volume": [
    "assert_identical",
    "isinstance",
    "range",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.IndexVariable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_virtual_variables_time": {
  "data": {
   "lineno": 3226,
   "symbols_in_volume": [
    "assert_array_equal",
    "assert_equal",
    "numpy.arange",
    "numpy.sin",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_where": {
  "data": {
   "lineno": 4476,
   "symbols_in_volume": [
    "assert_identical",
    "dask.array",
    "dask.array.attrs",
    "dask.array.values",
    "dask.array.where",
    "numpy.nan",
    "range",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_where_drop": {
  "data": {
   "lineno": 4555,
   "symbols_in_volume": [
    "TypeError",
    "assert_identical",
    "numpy.arange",
    "numpy.array",
    "numpy.e",
    "numpy.nan",
    "numpy.pi",
    "raises_regex",
    "range",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_where_drop_empty": {
  "data": {
   "lineno": 4631,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.random.rand",
    "numpy.zeros",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_where_drop_no_indexes": {
  "data": {
   "lineno": 4639,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_where_other": {
  "data": {
   "lineno": 4536,
   "symbols_in_volume": [
    "ValueError",
    "assert_equal",
    "int",
    "raises_regex",
    "range",
    "slice",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.Variable": {
  "data": {
   "shadows": "xarray.Variable"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.align": {
  "data": {
   "shadows": "xarray.align"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.backends": {
  "data": {
   "shadows": "xarray.backends"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.broadcast": {
  "data": {
   "shadows": "xarray.broadcast"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.create_append_test_data": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "all",
    "bool",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.unicode_",
    "object",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.create_test_data": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "all",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.random.RandomState",
    "pandas.date_range",
    "sorted",
    "tuple",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.create_test_multiindex": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_product",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.create_test_stacked_array": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "numpy.r_",
    "pandas.Index",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.data_set": {
  "data": {
   "lineno": 5734,
   "symbols_in_volume": [
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.ds": {
  "data": {
   "lineno": 5859,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.random.randn",
    "range",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.dtypes": {
  "data": {
   "shadows": "xarray.core.dtypes"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.duck_array_ops": {
  "data": {
   "shadows": "xarray.core.common.duck_array_ops"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.full_like": {
  "data": {
   "shadows": "xarray.core.common.full_like"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.indexing": {
  "data": {
   "shadows": "xarray.core.indexing"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.integer_types": {
  "data": {
   "shadows": "xarray.core.pycompat.integer_types"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.is_scalar": {
  "data": {
   "shadows": "xarray.core.utils.is_scalar"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.open_dataset": {
  "data": {
   "shadows": "xarray.open_dataset"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.ref": {
  "data": {
   "shadows": "weakref.ref"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.set_options": {
  "data": {
   "shadows": "xarray.set_options"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.sparse": {
  "data": {
   "shadows": "sparse"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.test_coarsen": {
  "data": {
   "lineno": 5896,
   "symbols_in_volume": [
    "assert_equal",
    "xarray.tests.test_dataset.ds",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_coarsen_absent_dims_error": {
  "data": {
   "lineno": 5891,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.tests.test_dataset.ds"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_coarsen_coords": {
  "data": {
   "lineno": 5912,
   "symbols_in_volume": [
    "ValueError",
    "assert_equal",
    "dask.array",
    "dask.array.coarsen",
    "len",
    "numpy.linspace",
    "pandas.date_range",
    "slice",
    "xarray.DataArray",
    "xarray.tests.test_dataset.ds",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_coarsen_coords_cftime": {
  "data": {
   "lineno": 5937,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.coarsen",
    "numpy.testing.assert_array_equal",
    "range",
    "xarray.DataArray",
    "xarray.cftime_range"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_coarsen_keep_attrs": {
  "data": {
   "lineno": 5946,
   "symbols_in_volume": [
    "numpy.linspace",
    "xarray.Dataset",
    "xarray.set_options",
    "xarray.testing.assert_identical",
    "xarray.tests.test_dataset.ds"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_constructor_raises_with_invalid_coords": {
  "data": {
   "lineno": 5826,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "xarray.DataArray",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_dataset_constructor_aligns_to_explicit_coords": {
  "data": {
   "lineno": 5793,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.asarray",
    "pandas.Index",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.IndexVariable",
    "xarray.Variable",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_deepcopy_obj_array": {
  "data": {
   "lineno": 6492,
   "symbols_in_volume": [
    "copy.deepcopy",
    "dict",
    "numpy.array",
    "object",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_differentiate": {
  "data": {
   "lineno": 6227,
   "symbols_in_volume": [
    "ValueError",
    "assert_equal",
    "dask.array",
    "dask.array.chunk",
    "dask.array.coords",
    "dask.array.differentiate",
    "dask.array.dims",
    "numpy.gradient",
    "numpy.random.RandomState",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_dataset.ds",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_differentiate_cftime": {
  "data": {
   "lineno": 6325,
   "symbols_in_volume": [
    "assert_allclose",
    "assert_equal",
    "dask.array",
    "dask.array.chunk",
    "dask.array.coords",
    "dask.array.differentiate",
    "dask.array.dims",
    "dask.array.variable._to_numeric",
    "float",
    "numpy.gradient",
    "numpy.random.RandomState",
    "xarray.DataArray",
    "xarray.cftime_range",
    "xarray.ones_like",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_differentiate_datetime": {
  "data": {
   "lineno": 6276,
   "symbols_in_volume": [
    "assert_equal",
    "dask.array",
    "dask.array.chunk",
    "dask.array.coords",
    "dask.array.differentiate",
    "dask.array.dims",
    "dask.array.variable._to_numeric",
    "numpy.allclose",
    "numpy.array",
    "numpy.gradient",
    "numpy.random.RandomState",
    "xarray.DataArray",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_dir_expected_attrs": {
  "data": {
   "lineno": 5833,
   "symbols_in_volume": [
    "dir",
    "set",
    "xarray.tests.test_dataset.data_set"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_dir_non_string": {
  "data": {
   "lineno": 5840,
   "symbols_in_volume": [
    "dir",
    "numpy.random.uniform",
    "xarray.Dataset",
    "xarray.tests.test_dataset.data_set"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_dir_unicode": {
  "data": {
   "lineno": 5853,
   "symbols_in_volume": [
    "dir",
    "xarray.tests.test_dataset.data_set"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_error_message_on_set_supplied": {
  "data": {
   "lineno": 5821,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_integrate": {
  "data": {
   "lineno": 6355,
   "symbols_in_volume": [
    "ValueError",
    "assert_allclose",
    "assert_equal",
    "dask.array",
    "dask.array.chunk",
    "dask.array.compute",
    "dask.array.coords.items",
    "dask.array.data",
    "dask.array.integrate",
    "isinstance",
    "numpy.random.RandomState",
    "numpy.trapz",
    "type",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_dataset.ds",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_isin": {
  "data": {
   "lineno": 5739,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.array",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_isin_dask": {
  "data": {
   "lineno": 5760,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.array",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_isin_dataset": {
  "data": {
   "lineno": 5787,
   "symbols_in_volume": [
    "TypeError",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_ndrolling_construct": {
  "data": {
   "lineno": 6168,
   "symbols_in_volume": [
    "assert_allclose",
    "dask.array",
    "float",
    "isinstance",
    "numpy.arange",
    "numpy.nan",
    "tuple",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_dataset.ds",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_ndrolling_reduce": {
  "data": {
   "lineno": 6135,
   "symbols_in_volume": [
    "assert_allclose",
    "getattr",
    "xarray.tests.test_dataset.ds",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_no_dict": {
  "data": {
   "lineno": 6460,
   "symbols_in_volume": [
    "AttributeError",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_raise_no_warning_assert_close": {
  "data": {
   "lineno": 6201,
   "symbols_in_volume": [
    "assert_allclose",
    "xarray.tests.test_dataset.ds",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_raise_no_warning_dask_rolling_assert_close": {
  "data": {
   "lineno": 6207,
   "symbols_in_volume": [
    "assert_allclose",
    "getattr",
    "xarray.tests.test_dataset.ds",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_raise_no_warning_for_nan_in_binary_ops": {
  "data": {
   "lineno": 6195,
   "symbols_in_volume": [
    "len",
    "numpy.NaN",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_rolling_construct": {
  "data": {
   "lineno": 6075,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.random.randn",
    "numpy.testing.assert_allclose",
    "pandas.DataFrame",
    "xarray.Dataset.from_dataframe",
    "xarray.tests.test_dataset.ds",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_rolling_exp": {
  "data": {
   "lineno": 6045,
   "symbols_in_volume": [
    "isinstance",
    "xarray.Dataset",
    "xarray.tests.test_dataset.ds"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_rolling_keep_attrs": {
  "data": {
   "lineno": 5978,
   "symbols_in_volume": [
    "numpy.linspace",
    "xarray.Dataset",
    "xarray.set_options",
    "xarray.tests.test_dataset.ds"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_rolling_pandas_compat": {
  "data": {
   "lineno": 6052,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.random.randn",
    "numpy.testing.assert_allclose",
    "pandas.DataFrame",
    "xarray.Dataset.from_dataframe",
    "xarray.tests.test_dataset.ds",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_rolling_properties": {
  "data": {
   "lineno": 6007,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "xarray.tests.test_dataset.ds",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_rolling_reduce": {
  "data": {
   "lineno": 6106,
   "symbols_in_volume": [
    "assert_allclose",
    "getattr",
    "list",
    "numpy",
    "xarray.tests.test_dataset.ds",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_rolling_wrapped_bottleneck": {
  "data": {
   "lineno": 6017,
   "symbols_in_volume": [
    "ValueError",
    "assert_array_equal",
    "assert_equal",
    "getattr",
    "xarray.tests.test_dataset.ds",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_subclass_slots": {
  "data": {
   "lineno": 6466,
   "symbols_in_volume": [
    "AttributeError",
    "str",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_subclass_slots.MyDS": {
  "data": {
   "lineno": 6475,
   "symbols_in_volume": [
    "xarray.Dataset"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_dataset.test_trapz_datetime": {
  "data": {
   "lineno": 6408,
   "symbols_in_volume": [
    "assert_allclose",
    "dask.array",
    "dask.array.chunk",
    "dask.array.coords.items",
    "dask.array.data",
    "dask.array.integrate",
    "isinstance",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.trapz",
    "type",
    "xarray.DataArray",
    "xarray.cftime_range",
    "xarray.core.common.duck_array_ops.datetime_to_numeric",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_weakref": {
  "data": {
   "lineno": 6481,
   "symbols_in_volume": [
    "r",
    "weakref.ref",
    "xarray.Dataset",
    "xarray.tests.test_dataset.ds"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.utils": {
  "data": {
   "shadows": "xarray.core.utils"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed": {
  "data": {
   "symbols_in_volume": [
    "assert_allclose",
    "dask.distributed.Lock",
    "distributed.client.futures_of",
    "distributed.utils_test.gen_cluster",
    "distributed.utils_test.loop",
    "len",
    "list",
    "range",
    "str",
    "type",
    "xarray.backends.locks.CombinedLock",
    "xarray.backends.locks.HDF5_LOCK",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_distributed.ENGINES",
    "xarray.tests.test_distributed.dask",
    "xarray.tests.test_distributed.distributed",
    "xarray.tests.test_distributed.f",
    "xarray.tests.test_distributed.future",
    "xarray.tests.test_distributed.futures",
    "xarray.tests.test_distributed.lock2",
    "xarray.tests.test_distributed.pickle",
    "xarray.tests.test_distributed.pytest",
    "xarray.tests.test_distributed.w",
    "xarray.tests.test_distributed.x",
    "xarray.tests.test_distributed.y",
    "xarray.tests.test_distributed.z"
   ]
  },
  "type": "module"
 },
 "xarray.tests.test_distributed.Client": {
  "data": {
   "shadows": "dask.distributed.Client"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.CombinedLock": {
  "data": {
   "shadows": "xarray.backends.locks.CombinedLock"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.ENGINES": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "xarray.tests.test_distributed.ENGINES_AND_FORMATS": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "xarray.tests.test_distributed.HDF5_LOCK": {
  "data": {
   "shadows": "xarray.backends.locks.HDF5_LOCK"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.Lock": {
  "data": {
   "shadows": "dask.distributed.Lock"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.NC_FORMATS": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "xarray.tests.test_distributed.ON_WINDOWS": {
  "data": {
   "shadows": "xarray.tests.test_backends.ON_WINDOWS"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.cluster": {
  "data": {
   "shadows": "distributed.utils_test.cluster"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.create_test_data": {
  "data": {
   "shadows": "xarray.tests.test_dataset.create_test_data"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.create_tmp_file": {
  "data": {
   "shadows": "xarray.tests.test_backends.create_tmp_file"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.create_tmp_geotiff": {
  "data": {
   "shadows": "xarray.tests.test_backends.create_tmp_geotiff"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.da": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "xarray.tests.test_distributed.dask": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "xarray.tests.test_distributed.distributed": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "xarray.tests.test_distributed.f": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "xarray.tests.test_distributed.x"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_distributed.future": {
  "data": {
   "lineno": 208
  },
  "type": "constant"
 },
 "xarray.tests.test_distributed.futures": {
  "data": {
   "lineno": 235
  },
  "type": "constant"
 },
 "xarray.tests.test_distributed.futures_of": {
  "data": {
   "shadows": "distributed.client.futures_of"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.gen_cluster": {
  "data": {
   "shadows": "distributed.utils_test.gen_cluster"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.lock2": {
  "data": {
   "lineno": 238
  },
  "type": "constant"
 },
 "xarray.tests.test_distributed.loop": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "xarray.tests.test_distributed.open_example_dataset": {
  "data": {
   "shadows": "xarray.tests.test_backends.open_example_dataset"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.test_dask_distributed_cfgrib_integration_test": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "assert_allclose",
    "dask.distributed.Client",
    "distributed.utils_test.cluster",
    "distributed.utils_test.loop",
    "isinstance",
    "xarray.tests.test_backends.open_example_dataset",
    "xarray.tests.test_distributed.da"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_distributed.test_dask_distributed_netcdf_roundtrip": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "NotImplementedError",
    "assert_allclose",
    "dask.distributed.Client",
    "distributed.utils_test.cluster",
    "distributed.utils_test.loop",
    "isinstance",
    "xarray.open_dataset",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_distributed.ENGINES",
    "xarray.tests.test_distributed.ENGINES_AND_FORMATS",
    "xarray.tests.test_distributed.da",
    "xarray.tests.test_distributed.pytest",
    "xarray.tests.test_distributed.tmp_netcdf_filename"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_distributed.test_dask_distributed_rasterio_integration_test": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "assert_allclose",
    "dask.distributed.Client",
    "distributed.utils_test.cluster",
    "distributed.utils_test.loop",
    "isinstance",
    "xarray.open_rasterio",
    "xarray.tests.test_backends.create_tmp_geotiff",
    "xarray.tests.test_distributed.da"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_distributed.test_dask_distributed_read_netcdf_integration_test": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "assert_allclose",
    "dask.distributed.Client",
    "distributed.utils_test.cluster",
    "distributed.utils_test.loop",
    "isinstance",
    "xarray.open_dataset",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_distributed.ENGINES",
    "xarray.tests.test_distributed.ENGINES_AND_FORMATS",
    "xarray.tests.test_distributed.da",
    "xarray.tests.test_distributed.pytest",
    "xarray.tests.test_distributed.tmp_netcdf_filename"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_distributed.test_dask_distributed_zarr_integration_test": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "assert_allclose",
    "dask.distributed.Client",
    "dict",
    "distributed.utils_test.cluster",
    "distributed.utils_test.loop",
    "isinstance",
    "xarray.open_zarr",
    "xarray.tests.test_backends.ON_WINDOWS",
    "xarray.tests.test_backends.create_tmp_file",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_distributed.da",
    "xarray.tests.test_distributed.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_distributed.test_hdf5_lock": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "isinstance",
    "xarray.backends.locks.HDF5_LOCK",
    "xarray.tests.test_distributed.dask"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_distributed.tmp_netcdf_filename": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "str",
    "xarray.tests.test_distributed.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_distributed.w": {
  "data": {
   "lineno": 209
  },
  "type": "constant"
 },
 "xarray.tests.test_distributed.x": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "xarray.tests.test_distributed.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.y": {
  "data": {
   "lineno": 192
  },
  "type": "constant"
 },
 "xarray.tests.test_distributed.z": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "xarray.tests.test_dtypes": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_dtypes.dtypes": {
  "data": {
   "shadows": "xarray.core.dtypes"
  },
  "type": "import"
 },
 "xarray.tests.test_dtypes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_dtypes.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_dtypes.test_inf": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.inf",
    "xarray.core.dtypes.INF",
    "xarray.core.dtypes.NINF",
    "xarray.tests.test_dtypes.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dtypes.test_maybe_promote": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.complex128",
    "numpy.complex64",
    "numpy.datetime64",
    "numpy.dtype",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.timedelta64",
    "str",
    "xarray.core.dtypes.maybe_promote",
    "xarray.tests.test_dtypes.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dtypes.test_result_type": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "bool",
    "numpy.bytes_",
    "numpy.float32",
    "numpy.float64",
    "numpy.int64",
    "numpy.object_",
    "numpy.string_",
    "numpy.unicode_",
    "xarray.core.dtypes.result_type",
    "xarray.tests.test_dtypes.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dtypes.test_result_type_dask_array": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "RuntimeError",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "xarray.core.dtypes.result_type",
    "xarray.tests.test_dtypes.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dtypes.test_result_type_dask_array.error": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dtypes.test_result_type_scalar": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.nan",
    "xarray.core.dtypes.result_type"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_duck_array_ops.DataArray": {
  "data": {
   "shadows": "xarray.DataArray"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.Dataset": {
  "data": {
   "shadows": "xarray.Dataset"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.TestArrayNotNullEquiv": {
  "data": {
   "lineno": 175
  },
  "type": "class"
 },
 "xarray.tests.test_duck_array_ops.TestArrayNotNullEquiv.test_equal": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "xarray.core.duck_array_ops.array_notnull_equiv",
    "xarray.tests.test_duck_array_ops.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.TestArrayNotNullEquiv.test_some_not_equal": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "xarray.core.duck_array_ops.array_notnull_equiv"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.TestArrayNotNullEquiv.test_types": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.datetime64",
    "numpy.nan",
    "object",
    "str",
    "xarray.core.duck_array_ops.array_notnull_equiv",
    "xarray.tests.test_duck_array_ops.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.TestArrayNotNullEquiv.test_wrong_shape": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "xarray.core.duck_array_ops.array_notnull_equiv"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.TestOps": {
  "data": {
   "lineno": 43
  },
  "type": "class"
 },
 "xarray.tests.test_duck_array_ops.TestOps.setUp": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "xarray.tests.test_duck_array_ops.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.TestOps.test_all_nan_arrays": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.nan",
    "xarray.core.duck_array_ops.mean",
    "xarray.tests.test_duck_array_ops.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.TestOps.test_concatenate_type_promotion": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "object",
    "xarray.core.duck_array_ops.concatenate"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.TestOps.test_count": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "numpy.datetime64",
    "xarray.core.duck_array_ops.count"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.TestOps.test_first": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "IndexError",
    "assert_array_equal",
    "numpy.array",
    "numpy.nan",
    "raises_regex",
    "xarray.core.duck_array_ops.first",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.TestOps.test_last": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "IndexError",
    "assert_array_equal",
    "numpy.array",
    "numpy.nan",
    "raises_regex",
    "xarray.core.duck_array_ops.last",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.TestOps.test_stack_type_promotion": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "object",
    "xarray.core.duck_array_ops.stack"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.TestOps.test_where_type_promotion": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "numpy.float32",
    "numpy.nan",
    "object",
    "xarray.core.duck_array_ops.where"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.array_notnull_equiv": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.array_notnull_equiv"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.assert_allclose": {
  "data": {
   "shadows": "xarray.testing.assert_allclose"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.assert_dask_array": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "isinstance",
    "xarray.core.pycompat.dask_array_type"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.assert_equal": {
  "data": {
   "shadows": "xarray.testing.assert_equal"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.cftime": {
  "data": {
   "shadows": "cftime"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.cftime_range": {
  "data": {
   "shadows": "xarray.cftime_range"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.concat": {
  "data": {
   "shadows": "xarray.concat"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.concatenate": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.concatenate"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.construct_dataarray": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.arange",
    "numpy.array",
    "numpy.array.astype",
    "numpy.array.dtype",
    "numpy.array.flat",
    "numpy.array.size",
    "numpy.bool_",
    "numpy.floating",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.random.RandomState",
    "range",
    "str",
    "xarray.DataArray",
    "xarray.core.dtypes.maybe_promote"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.count": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.count"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.dask_array_type": {
  "data": {
   "shadows": "xarray.core.pycompat.dask_array_type"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.dt": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.dtypes": {
  "data": {
   "shadows": "xarray.core.dtypes"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.duck_array_ops": {
  "data": {
   "shadows": "xarray.core.duck_array_ops"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.first": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.first"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.from_series_or_scalar": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Series",
    "xarray.DataArray",
    "xarray.DataArray.from_series"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.gradient": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.gradient"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.last": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.last"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.least_squares": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.least_squares"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.mean": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.mean"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.np_timedelta64_to_float": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.np_timedelta64_to_float"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.pd_timedelta_to_float": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.pd_timedelta_to_float"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.py_timedelta_to_float": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.py_timedelta_to_float"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.rolling_window": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.rolling_window"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.series_reduce": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "getattr",
    "len",
    "list",
    "range",
    "xarray.concat",
    "xarray.tests.test_duck_array_ops.from_series_or_scalar"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.stack": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.stack"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.test_argmin_max": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "float",
    "getattr",
    "int",
    "list",
    "numpy.bool_",
    "numpy.dtype",
    "numpy.float32",
    "str",
    "xarray.testing.assert_allclose",
    "xarray.tests.test_duck_array_ops.construct_dataarray",
    "xarray.tests.test_duck_array_ops.pytest",
    "xarray.tests.test_duck_array_ops.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_argmin_max_error": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "ValueError",
    "numpy.bool_",
    "numpy.nan",
    "xarray.tests.test_duck_array_ops.construct_dataarray",
    "xarray.tests.test_duck_array_ops.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_cftime_datetime_mean": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.cftime_range",
    "xarray.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_cftime_datetime_mean_dask_error": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "NotImplementedError",
    "xarray.DataArray",
    "xarray.cftime_range",
    "xarray.tests.test_duck_array_ops.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_cftime_datetime_mean_long_time_period": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "numpy.array",
    "xarray.DataArray",
    "xarray.testing.assert_equal",
    "xarray.tests.test_duck_array_ops.cftime"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_cumprod_2d": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "xarray.core.duck_array_ops.cumprod"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_cumsum_1d": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "xarray.core.duck_array_ops.cumsum"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_cumsum_2d": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "xarray.core.duck_array_ops.cumsum"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_dask_gradient": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "assert_array_equal",
    "dask.array.Array",
    "dask.array.from_array",
    "isinstance",
    "numpy.array",
    "numpy.array.shape",
    "numpy.exp",
    "numpy.linspace",
    "numpy.random.randn",
    "xarray.core.duck_array_ops.gradient",
    "xarray.tests.test_duck_array_ops.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_dask_rolling": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "ValueError",
    "assert_array_equal",
    "dask.array.Array",
    "dask.array.from_array",
    "float",
    "isinstance",
    "numpy.array",
    "numpy.nan",
    "numpy.random.randn",
    "xarray.core.duck_array_ops.rolling_window",
    "xarray.tests.test_duck_array_ops.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_datetime_mean": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "numpy.array",
    "xarray.DataArray",
    "xarray.testing.assert_equal",
    "xarray.tests.test_duck_array_ops.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_datetime_to_numeric_cftime": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.float32",
    "numpy.testing.assert_array_equal",
    "xarray.cftime_range",
    "xarray.core.duck_array_ops.datetime_to_numeric"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_datetime_to_numeric_datetime64": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.testing.assert_array_equal",
    "pandas.date_range",
    "xarray.core.duck_array_ops.datetime_to_numeric"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_datetime_to_numeric_potential_overflow": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.datetime64",
    "numpy.testing.assert_array_equal",
    "pandas.date_range",
    "xarray.cftime_range",
    "xarray.core.duck_array_ops.datetime_to_numeric",
    "xarray.tests.test_duck_array_ops.cftime"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_docs": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "textwrap.dedent",
    "xarray.DataArray.std.__doc__",
    "xarray.DataArray.sum.__doc__"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_isnull": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.datetime64",
    "numpy.nan",
    "numpy.testing.assert_equal",
    "numpy.timedelta64",
    "object",
    "xarray.core.duck_array_ops.isnull",
    "xarray.tests.test_duck_array_ops.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_isnull_with_dask": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "isinstance",
    "numpy.float32",
    "xarray.core.pycompat.dask_array_type",
    "xarray.testing.assert_equal",
    "xarray.tests.test_duck_array_ops.construct_dataarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_least_squares": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_allclose",
    "xarray.DataArray",
    "xarray.core.duck_array_ops.least_squares",
    "xarray.tests.test_duck_array_ops.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_min_count": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "dask.array",
    "float",
    "getattr",
    "int",
    "numpy.bool_",
    "numpy.float32",
    "xarray.testing.assert_allclose",
    "xarray.tests.test_duck_array_ops.assert_dask_array",
    "xarray.tests.test_duck_array_ops.construct_dataarray",
    "xarray.tests.test_duck_array_ops.pytest",
    "xarray.tests.test_duck_array_ops.series_reduce"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_min_count_dataset": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "dask.array",
    "float",
    "getattr",
    "xarray.Dataset",
    "xarray.testing.assert_allclose",
    "xarray.tests.test_duck_array_ops.construct_dataarray",
    "xarray.tests.test_duck_array_ops.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_min_count_nd": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "dask.array",
    "float",
    "getattr",
    "int",
    "numpy.bool_",
    "numpy.float32",
    "xarray.testing.assert_allclose",
    "xarray.tests.test_duck_array_ops.assert_dask_array",
    "xarray.tests.test_duck_array_ops.construct_dataarray",
    "xarray.tests.test_duck_array_ops.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_multiple_dims": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "dask.array",
    "float",
    "getattr",
    "int",
    "numpy.bool_",
    "numpy.float32",
    "xarray.testing.assert_allclose",
    "xarray.tests.test_duck_array_ops.construct_dataarray",
    "xarray.tests.test_duck_array_ops.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_np_timedelta64_to_float": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "numpy.atleast_1d",
    "numpy.testing.assert_allclose",
    "numpy.timedelta64",
    "xarray.core.duck_array_ops.np_timedelta64_to_float",
    "xarray.tests.test_duck_array_ops.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_pd_timedelta_to_float": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "numpy.testing.assert_allclose",
    "pandas.Timedelta",
    "xarray.core.duck_array_ops.pd_timedelta_to_float",
    "xarray.tests.test_duck_array_ops.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_py_timedelta_to_float": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "datetime.timedelta",
    "xarray.core.duck_array_ops.py_timedelta_to_float"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_reduce": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "ZeroDivisionError",
    "float",
    "getattr",
    "int",
    "isinstance",
    "numpy",
    "numpy.allclose",
    "numpy.array",
    "numpy.bool_",
    "numpy.float32",
    "numpy.testing.assert_allclose",
    "object",
    "xarray.core.pycompat.dask_array_type",
    "xarray.testing.assert_allclose",
    "xarray.tests.test_duck_array_ops.assert_dask_array",
    "xarray.tests.test_duck_array_ops.construct_dataarray",
    "xarray.tests.test_duck_array_ops.pytest",
    "xarray.tests.test_duck_array_ops.series_reduce",
    "xarray.tests.test_duck_array_ops.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_timedelta_to_numeric": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "datetime.timedelta",
    "float",
    "isinstance",
    "numpy.testing.assert_allclose",
    "numpy.timedelta64",
    "pandas.Timedelta",
    "xarray.core.duck_array_ops.timedelta_to_numeric",
    "xarray.tests.test_duck_array_ops.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.timedelta_to_numeric": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.timedelta_to_numeric"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.where": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.where"
  },
  "type": "import"
 },
 "xarray.tests.test_extensions": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_extensions.ExampleAccessor": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "xarray.register_dataarray_accessor",
    "xarray.register_dataset_accessor"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_extensions.ExampleAccessor.__init__": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "xarray.tests.test_extensions.TestAccessor": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "xarray.tests.test_extensions.TestAccessor.test_broken_accessor": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "RuntimeError",
    "raises_regex",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_extensions.TestAccessor.test_broken_accessor.BrokenAccessor": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "xarray.register_dataset_accessor"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_extensions.TestAccessor.test_broken_accessor.BrokenAccessor.__init__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_extensions.TestAccessor.test_pickle_dataarray": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "xarray.Dataset",
    "xarray.tests.test_extensions.pickle"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_extensions.TestAccessor.test_pickle_dataset": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "xarray.Dataset",
    "xarray.tests.test_extensions.pickle"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_extensions.TestAccessor.test_register": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "Warning",
    "hasattr",
    "isinstance",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Dataset.demo",
    "xarray.Dataset.demo.__doc__",
    "xarray.tests.test_extensions.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_extensions.TestAccessor.test_register.DemoAccessor": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "xarray.register_dataarray_accessor",
    "xarray.register_dataset_accessor"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_extensions.TestAccessor.test_register.DemoAccessor.__init__": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "xarray.tests.test_extensions.TestAccessor.test_register.DemoAccessor.foo": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_extensions.TestAccessor.test_register.Foo": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "xarray.register_dataarray_accessor"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_extensions.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "xarray.tests.test_extensions.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_extensions.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_formatting": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_formatting.IS_NEP18_ACTIVE": {
  "data": {
   "shadows": "xarray.core.npcompat.IS_NEP18_ACTIVE"
  },
  "type": "import"
 },
 "xarray.tests.test_formatting.TestFormatting": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "xarray.tests.test_formatting.TestFormatting.test_array_repr": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "textwrap.dedent",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.core.formatting.array_repr"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.TestFormatting.test_attribute_repr": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "len",
    "xarray.core.formatting.summarize_attr"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.TestFormatting.test_diff_array_repr": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "textwrap.dedent",
    "xarray.DataArray",
    "xarray.Variable",
    "xarray.core.formatting.diff_array_repr",
    "xarray.tests.test_formatting.sys"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.TestFormatting.test_diff_attrs_repr_with_array": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "numpy.array",
    "textwrap.dedent",
    "xarray.core.formatting.diff_attrs_repr",
    "xarray.tests.test_formatting.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.TestFormatting.test_diff_dataset_repr": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "numpy.array",
    "textwrap.dedent",
    "xarray.Dataset",
    "xarray.core.formatting.diff_dataset_repr",
    "xarray.tests.test_formatting.sys"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.TestFormatting.test_first_n_items": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "raises_regex",
    "xarray.core.formatting.first_n_items"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.TestFormatting.test_format_array_flat": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.asarray",
    "range",
    "xarray.core.formatting.format_array_flat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.TestFormatting.test_format_item": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "pandas.Timedelta",
    "pandas.Timestamp",
    "xarray.core.formatting.format_item"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.TestFormatting.test_format_items": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.timedelta64",
    "pandas.to_timedelta",
    "xarray.core.formatting.format_items"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.TestFormatting.test_format_timestamp_out_of_bounds": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "datetime.datetime",
    "xarray.core.formatting.format_timestamp"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.TestFormatting.test_get_indexer_at_least_n_items": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "slice",
    "xarray.core.formatting._get_indexer_at_least_n_items"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.TestFormatting.test_last_item": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "xarray.core.formatting.last_item"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.TestFormatting.test_last_n_items": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "raises_regex",
    "xarray.core.formatting.first_n_items",
    "xarray.core.formatting.last_n_items"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.TestFormatting.test_maybe_truncate": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "xarray.core.formatting.maybe_truncate"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.TestFormatting.test_pretty_print": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "xarray.core.formatting.pretty_print"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "xarray.tests.test_formatting.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "xarray.tests.test_formatting.formatting": {
  "data": {
   "shadows": "xarray.core.formatting"
  },
  "type": "import"
 },
 "xarray.tests.test_formatting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_formatting.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_formatting.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_formatting.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "xarray.tests.test_formatting.test_inline_variable_array_repr_custom_repr": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "CustomArray",
    "numpy.array",
    "xarray.Variable",
    "xarray.core.formatting.inline_variable_array_repr",
    "xarray.core.npcompat.IS_NEP18_ACTIVE",
    "xarray.tests.test_formatting.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.test_inline_variable_array_repr_custom_repr.CustomArray": {
  "data": {
   "lineno": 397
  },
  "type": "class"
 },
 "xarray.tests.test_formatting.test_inline_variable_array_repr_custom_repr.CustomArray.__array_function__": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "NotImplemented"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.test_inline_variable_array_repr_custom_repr.CustomArray.__init__": {
  "data": {
   "lineno": 398
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.test_inline_variable_array_repr_custom_repr.CustomArray._repr_inline_": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.test_inline_variable_array_repr_custom_repr.CustomArray.dtype": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.test_inline_variable_array_repr_custom_repr.CustomArray.ndim": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.test_inline_variable_array_repr_custom_repr.CustomArray.shape": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.test_large_array_repr_length": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "repr",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.test_set_numpy_options": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.get_printoptions",
    "repr",
    "xarray.core.formatting.set_numpy_options"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.test_short_numpy_repr": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "numpy.random.randn",
    "xarray.core.formatting.short_numpy_repr"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_formatting_html": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_formatting_html.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.tests.test_formatting_html.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "xarray.tests.test_formatting_html.dask_dataarray": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "xarray.tests.test_formatting_html.dataarray",
    "xarray.tests.test_formatting_html.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting_html.dataarray": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "xarray.DataArray",
    "xarray.tests.test_formatting_html.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting_html.dataset": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.random.randn",
    "numpy.sin",
    "pandas.date_range",
    "xarray.Dataset",
    "xarray.tests.test_formatting_html.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting_html.fh": {
  "data": {
   "shadows": "xarray.core.formatting_html"
  },
  "type": "import"
 },
 "xarray.tests.test_formatting_html.multiindex": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_product",
    "xarray.Dataset",
    "xarray.tests.test_formatting_html.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting_html.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_formatting_html.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_formatting_html.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_formatting_html.test_format_dims_index": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "xarray.core.formatting_html.format_dims"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting_html.test_format_dims_no_dims": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "xarray.core.formatting_html.format_dims"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting_html.test_format_dims_non_index": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "xarray.core.formatting_html.format_dims"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting_html.test_format_dims_unsafe_dim_name": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "xarray.core.formatting_html.format_dims"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting_html.test_repr_of_dataarray": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "xarray.core.formatting_html.array_repr",
    "xarray.tests.test_formatting_html.dataarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting_html.test_repr_of_dataset": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "xarray.core.formatting_html.dataset_repr",
    "xarray.tests.test_formatting_html.dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting_html.test_repr_of_multiindex": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "xarray.core.formatting_html.dataset_repr",
    "xarray.tests.test_formatting_html.multiindex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting_html.test_repr_text_fallback": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "xarray.core.formatting_html.dataset_repr",
    "xarray.tests.test_formatting_html.dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting_html.test_short_data_repr_html": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "xarray.core.formatting_html.short_data_repr_html",
    "xarray.tests.test_formatting_html.dataarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting_html.test_short_data_repr_html_dask": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "hasattr",
    "xarray.core.formatting_html.short_data_repr_html",
    "xarray.tests.test_formatting_html.dask",
    "xarray.tests.test_formatting_html.dask_dataarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting_html.test_short_data_repr_html_non_str_keys": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "xarray.core.formatting_html.dataset_repr",
    "xarray.tests.test_formatting_html.dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting_html.test_summarize_attrs_with_unsafe_attr_name_and_value": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "xarray.core.formatting_html.summarize_attrs"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting_html.test_summary_of_multiindex_coord": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "xarray.core.formatting_html._summarize_coord_multiindex",
    "xarray.tests.test_formatting_html.multiindex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting_html.test_variable_repr_html": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "hasattr",
    "xarray.Variable",
    "xarray.set_options"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting_html.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_groupby": {
  "data": {
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "pandas.date_range",
    "range",
    "xarray.DataArray"
   ]
  },
  "type": "module"
 },
 "xarray.tests.test_groupby._consolidate_slices": {
  "data": {
   "shadows": "xarray.core.groupby._consolidate_slices"
  },
  "type": "import"
 },
 "xarray.tests.test_groupby.array": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "xarray.tests.test_groupby.dataset",
    "xarray.tests.test_groupby.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.dataset": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.random.randn",
    "xarray.Dataset",
    "xarray.tests.test_groupby.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_groupby.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_groupby.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_groupby.repr_da": {
  "data": {
   "lineno": 374
  },
  "type": "constant"
 },
 "xarray.tests.test_groupby.test_consolidate_slices": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "slice",
    "xarray.core.groupby._consolidate_slices",
    "xarray.tests.test_groupby.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_da_groupby_assign_coords": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "assert_identical",
    "range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_da_groupby_empty": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "ValueError",
    "xarray.DataArray",
    "xarray.tests.test_groupby.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_da_groupby_map_func_args": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.DataArray",
    "xarray.tests.test_groupby.array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_da_groupby_map_func_args.func": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_da_groupby_quantile": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "numpy.reshape",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.test_groupby.array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_ds_groupby_map_func_args": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset",
    "xarray.tests.test_groupby.dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_ds_groupby_map_func_args.func": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_ds_groupby_quantile": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "assert_identical",
    "dict",
    "numpy.arange",
    "numpy.reshape",
    "pandas.date_range",
    "slice",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_groupby_bins_timeseries": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.ones",
    "pandas.cut",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_groupby_da_datetime": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "assert_equal",
    "dict",
    "pandas.date_range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_groupby_dims_property": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "xarray.tests.test_groupby.dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_groupby_drops_nans": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "assert_equal",
    "assert_identical",
    "numpy.arange",
    "numpy.datetime64",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_groupby.array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_groupby_duplicate_coordinate_labels": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "assert_equal",
    "xarray.DataArray",
    "xarray.tests.test_groupby.array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_groupby_grouping_errors": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "raises_regex",
    "xarray.Dataset",
    "xarray.tests.test_groupby.dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_groupby_input_mutation": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.DataArray",
    "xarray.tests.test_groupby.array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_groupby_map_change_group_size": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_groupby.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_groupby_map_change_group_size.func": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_groupby_map_shrink_groups": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_groupby.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_groupby_multiple_string_args": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "TypeError",
    "xarray.tests.test_groupby.array",
    "xarray.tests.test_groupby.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_groupby_none_group_name": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.floor_divide",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_groupby_reduce_dimension_error": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "ValueError",
    "assert_allclose",
    "assert_identical",
    "numpy.mean",
    "raises_regex",
    "xarray.tests.test_groupby.array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_groupby_repr": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "len",
    "numpy.unique",
    "repr",
    "xarray.tests.test_groupby.pytest",
    "xarray.tests.test_groupby.repr_da"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_groupby_repr_datetime": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "len",
    "numpy.unique",
    "repr",
    "xarray.tests.test_groupby.pytest",
    "xarray.tests.test_groupby.repr_da"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_multi_index_groupby_map": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "assert_equal",
    "xarray.tests.test_groupby.dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_multi_index_groupby_sum": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.ones",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing": {
  "data": {
   "symbols_in_volume": [
    "IndexerMaker",
    "xarray.core.indexing.BasicIndexer"
   ]
  },
  "type": "module"
 },
 "xarray.tests.test_indexing.B": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "xarray.tests.test_indexing.DataArray": {
  "data": {
   "shadows": "xarray.DataArray"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.Dataset": {
  "data": {
   "shadows": "xarray.Dataset"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.TestCopyOnWriteArray": {
  "data": {
   "lineno": 341
  },
  "type": "class"
 },
 "xarray.tests.test_indexing.TestCopyOnWriteArray.test_index_scalar": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "numpy.array",
    "xarray.core.indexing.CopyOnWriteArray",
    "xarray.tests.test_indexing.B"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestCopyOnWriteArray.test_setitem": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.arange",
    "numpy.zeros",
    "xarray.core.indexing.CopyOnWriteArray",
    "xarray.tests.test_indexing.B"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestCopyOnWriteArray.test_sub_array": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "assert_array_equal",
    "isinstance",
    "numpy.arange",
    "numpy.zeros",
    "xarray.core.indexing.CopyOnWriteArray",
    "xarray.tests.test_indexing.B"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestIndexers": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "xarray.tests.test_indexing.TestIndexers.set_to_zero": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestIndexers.test_asarray_tuplesafe": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "xarray.core.indexing._asarray_tuplesafe"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestIndexers.test_convert_label_indexer": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "ValueError",
    "pandas.Index",
    "pandas.MultiIndex.from_product",
    "raises_regex",
    "slice",
    "xarray.core.indexing.convert_label_indexer",
    "xarray.tests.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestIndexers.test_convert_label_indexer_datetime": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "pandas.to_datetime",
    "xarray.core.indexing.convert_label_indexer"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestIndexers.test_convert_unsorted_datetime_index_raises": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "KeyError",
    "pandas.to_datetime",
    "slice",
    "xarray.core.indexing.convert_label_indexer",
    "xarray.tests.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestIndexers.test_expanded_indexer": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "IndexError",
    "ReturnItem",
    "assert_array_equal",
    "numpy.arange",
    "numpy.random.randn",
    "raises_regex",
    "xarray.core.indexing.expanded_indexer"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestIndexers.test_get_dim_indexers": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "ValueError",
    "pandas.MultiIndex.from_product",
    "raises_regex",
    "range",
    "xarray.DataArray",
    "xarray.core.indexing.get_dim_indexers"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestIndexers.test_read_only_view": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.random.rand",
    "xarray.DataArray",
    "xarray.tests.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestIndexers.test_remap_label_indexers": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "numpy.int32",
    "pandas.MultiIndex.from_product",
    "range",
    "slice",
    "test_indexer",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestIndexers.test_remap_label_indexers.test_indexer": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "assert_array_equal",
    "xarray.core.indexing.remap_label_indexers"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestIndexers.test_stacked_multiindex_min_max": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "assert_array_equal",
    "dict",
    "list",
    "numpy.random.randn",
    "range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestLazyArray": {
  "data": {
   "lineno": 192
  },
  "type": "class"
 },
 "xarray.tests.test_indexing.TestLazyArray.test_lazily_indexed_array": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "ReturnItem",
    "all",
    "assert_array_equal",
    "int",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.ndarray",
    "numpy.random.choice",
    "numpy.random.rand",
    "slice",
    "xarray.Variable",
    "xarray.core.indexing.BasicIndexer",
    "xarray.core.indexing.LazilyOuterIndexedArray",
    "xarray.core.indexing.LazilyVectorizedIndexedArray",
    "xarray.core.indexing.NumpyIndexingAdapter",
    "xarray.core.indexing.OuterIndexer"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestLazyArray.test_slice_slice": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "ReturnItem",
    "assert_array_equal",
    "numpy.arange",
    "xarray.core.indexing.slice_slice"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestLazyArray.test_vectorized_lazily_indexed_array": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "ReturnItem",
    "check_indexing",
    "numpy.random.rand",
    "slice",
    "xarray.Variable",
    "xarray.core.indexing.LazilyOuterIndexedArray",
    "xarray.core.indexing.NumpyIndexingAdapter"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestLazyArray.test_vectorized_lazily_indexed_array.check_indexing": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "assert_array_equal",
    "isinstance",
    "xarray.core.indexing.LazilyOuterIndexedArray",
    "xarray.core.indexing.LazilyVectorizedIndexedArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestMemoryCachedArray": {
  "data": {
   "lineno": 365
  },
  "type": "class"
 },
 "xarray.tests.test_indexing.TestMemoryCachedArray.test_index_scalar": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "numpy.array",
    "xarray.core.indexing.MemoryCachedArray",
    "xarray.tests.test_indexing.B"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestMemoryCachedArray.test_setitem": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.arange",
    "numpy.zeros",
    "xarray.core.indexing.MemoryCachedArray",
    "xarray.tests.test_indexing.B"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestMemoryCachedArray.test_sub_array": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "assert_array_equal",
    "isinstance",
    "numpy.arange",
    "xarray.core.indexing.LazilyOuterIndexedArray",
    "xarray.core.indexing.MemoryCachedArray",
    "xarray.core.indexing.NumpyIndexingAdapter",
    "xarray.tests.test_indexing.B"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestMemoryCachedArray.test_wrapper": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "assert_array_equal",
    "isinstance",
    "numpy.arange",
    "xarray.core.indexing.LazilyOuterIndexedArray",
    "xarray.core.indexing.MemoryCachedArray",
    "xarray.core.indexing.NumpyIndexingAdapter"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.Test_vectorized_indexer": {
  "data": {
   "lineno": 480
  },
  "type": "class"
 },
 "xarray.tests.test_indexing.Test_vectorized_indexer.setup": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.randn",
    "slice",
    "xarray.core.indexing.NumpyIndexingAdapter",
    "xarray.tests.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.Test_vectorized_indexer.test_arrayize_vectorized_indexer": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.newaxis",
    "numpy.stack",
    "numpy.testing.assert_array_equal",
    "slice",
    "xarray.core.indexing.VectorizedIndexer",
    "xarray.core.indexing._arrayize_vectorized_indexer",
    "xarray.tests.test_indexing.itertools"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.Variable": {
  "data": {
   "shadows": "xarray.Variable"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.check_array1d": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "indexer_cls",
    "numpy.arange",
    "numpy.int32",
    "numpy.int64",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.check_array2d": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "indexer_cls",
    "numpy.array",
    "numpy.int64",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.check_integer": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "all",
    "indexer_cls",
    "int",
    "isinstance",
    "numpy.uint64"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.check_slice": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "indexer_cls",
    "int",
    "isinstance",
    "numpy.int64",
    "slice"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.get_indexers": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "len",
    "numpy.random.randint",
    "slice",
    "tuple",
    "xarray.core.indexing.BasicIndexer",
    "xarray.core.indexing.OuterIndexer",
    "xarray.core.indexing.VectorizedIndexer"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.indexing": {
  "data": {
   "shadows": "xarray.core.indexing"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.nputils": {
  "data": {
   "shadows": "xarray.core.nputils"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.test_base_explicit_indexer": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "Subclass",
    "TypeError",
    "repr",
    "xarray.core.indexing.ExplicitIndexer",
    "xarray.tests.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_base_explicit_indexer.Subclass": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "xarray.core.indexing.ExplicitIndexer"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_indexing.test_basic_indexer": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "TypeError",
    "xarray.core.indexing.BasicIndexer",
    "xarray.tests.test_indexing.check_array1d",
    "xarray.tests.test_indexing.check_array2d",
    "xarray.tests.test_indexing.check_integer",
    "xarray.tests.test_indexing.check_slice",
    "xarray.tests.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_create_mask_basic_indexer": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "xarray.core.indexing.BasicIndexer",
    "xarray.core.indexing.create_mask"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_create_mask_dask": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "slice",
    "xarray.core.indexing.OuterIndexer",
    "xarray.core.indexing.VectorizedIndexer",
    "xarray.core.indexing.create_mask",
    "xarray.tests.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_create_mask_error": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "TypeError",
    "raises_regex",
    "xarray.core.indexing.create_mask"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_create_mask_outer_indexer": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "slice",
    "xarray.core.indexing.OuterIndexer",
    "xarray.core.indexing.create_mask"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_create_mask_vectorized_indexer": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "slice",
    "xarray.core.indexing.VectorizedIndexer",
    "xarray.core.indexing.create_mask"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_decompose_indexers": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "len",
    "numpy.random.randn",
    "numpy.testing.assert_array_equal",
    "xarray.core.indexing.IndexingSupport.BASIC",
    "xarray.core.indexing.IndexingSupport.OUTER",
    "xarray.core.indexing.IndexingSupport.OUTER_1VECTOR",
    "xarray.core.indexing.IndexingSupport.VECTORIZED",
    "xarray.core.indexing.NumpyIndexingAdapter",
    "xarray.core.indexing._combine_indexers",
    "xarray.core.indexing.decompose_indexer",
    "xarray.core.indexing.integer_types",
    "xarray.tests.test_indexing.get_indexers",
    "xarray.tests.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_decompose_slice": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.arange",
    "slice",
    "xarray.core.indexing._decompose_slice",
    "xarray.tests.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_implicit_indexing_adapter": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.asarray",
    "numpy.int64",
    "numpy.testing.assert_array_equal",
    "xarray.core.indexing.BasicIndexer",
    "xarray.core.indexing.ImplicitToExplicitIndexingAdapter",
    "xarray.core.indexing.NumpyIndexingAdapter"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_implicit_indexing_adapter_copy_on_write": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange",
    "numpy.int64",
    "xarray.core.indexing.CopyOnWriteArray",
    "xarray.core.indexing.ImplicitToExplicitIndexingAdapter"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_invalid_for_all": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "TypeError",
    "indexer_cls",
    "numpy.array",
    "slice",
    "xarray.core.indexing.BasicIndexer",
    "xarray.core.indexing.OuterIndexer",
    "xarray.core.indexing.VectorizedIndexer",
    "xarray.tests.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_outer_indexer": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "TypeError",
    "xarray.core.indexing.OuterIndexer",
    "xarray.tests.test_indexing.check_array1d",
    "xarray.tests.test_indexing.check_array2d",
    "xarray.tests.test_indexing.check_integer",
    "xarray.tests.test_indexing.check_slice",
    "xarray.tests.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_outer_indexer_consistency_with_broadcast_indexes_vectorized": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "ReturnItem",
    "isinstance",
    "len",
    "nonzero",
    "numpy.arange",
    "numpy.array",
    "numpy.moveaxis",
    "numpy.ndarray",
    "numpy.random.rand",
    "numpy.testing.assert_array_equal",
    "range",
    "xarray.Variable",
    "xarray.core.indexing.OuterIndexer",
    "xarray.core.indexing._outer_to_numpy_indexer",
    "xarray.core.nputils.NumpyVIndexAdapter",
    "xarray.tests.test_indexing.itertools"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_outer_indexer_consistency_with_broadcast_indexes_vectorized.nonzero": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_posify_mask_subindexer": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "xarray.core.indexing._posify_mask_subindexer",
    "xarray.tests.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_vectorized_indexer": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.arange",
    "numpy.array",
    "numpy.int64",
    "raises_regex",
    "xarray.core.indexing.VectorizedIndexer",
    "xarray.tests.test_indexing.check_array1d",
    "xarray.tests.test_indexing.check_array2d",
    "xarray.tests.test_indexing.check_integer",
    "xarray.tests.test_indexing.check_slice",
    "xarray.tests.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "xarray.tests.test_interp.DatetimeProlepticGregorian": {
  "data": {
   "shadows": "cftime.DatetimeProlepticGregorian"
  },
  "type": "import"
 },
 "xarray.tests.test_interp.assert_allclose": {
  "data": {
   "shadows": "xarray.tests.assert_allclose"
  },
  "type": "import"
 },
 "xarray.tests.test_interp.assert_equal": {
  "data": {
   "shadows": "xarray.tests.assert_equal"
  },
  "type": "import"
 },
 "xarray.tests.test_interp.assert_identical": {
  "data": {
   "shadows": "xarray.tests.assert_identical"
  },
  "type": "import"
 },
 "xarray.tests.test_interp.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "xarray.tests.test_interp.get_example_data": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.linspace",
    "numpy.newaxis",
    "numpy.sin",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_interp.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_interp.permutations": {
  "data": {
   "shadows": "itertools.permutations"
  },
  "type": "import"
 },
 "xarray.tests.test_interp.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_interp.requires_cftime": {
  "data": {
   "shadows": "xarray.tests.requires_cftime"
  },
  "type": "import"
 },
 "xarray.tests.test_interp.requires_dask": {
  "data": {
   "shadows": "xarray.tests.requires_dask"
  },
  "type": "import"
 },
 "xarray.tests.test_interp.requires_scipy": {
  "data": {
   "shadows": "xarray.tests.requires_scipy"
  },
  "type": "import"
 },
 "xarray.tests.test_interp.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "xarray.tests.test_interp.test_3641": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "range",
    "xarray.DataArray",
    "xarray.cftime_range",
    "xarray.tests.requires_cftime"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_cftime": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "numpy.arange",
    "xarray.DataArray",
    "xarray.cftime_range",
    "xarray.tests.assert_allclose",
    "xarray.tests.requires_cftime",
    "xarray.tests.requires_scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_cftime_list_of_strings": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "_parse_array_of_cftime_strings",
    "cftime.DatetimeProlepticGregorian",
    "numpy.arange",
    "numpy.array",
    "xarray.DataArray",
    "xarray.cftime_range",
    "xarray.tests.assert_allclose",
    "xarray.tests.requires_cftime",
    "xarray.tests.requires_scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_cftime_single_string": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "_parse_array_of_cftime_strings",
    "cftime.DatetimeProlepticGregorian",
    "numpy.arange",
    "numpy.array",
    "xarray.DataArray",
    "xarray.cftime_range",
    "xarray.tests.assert_allclose",
    "xarray.tests.requires_cftime",
    "xarray.tests.requires_scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_cftime_to_non_cftime_error": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "TypeError",
    "numpy.arange",
    "xarray.DataArray",
    "xarray.cftime_range",
    "xarray.tests.requires_cftime",
    "xarray.tests.requires_scipy",
    "xarray.tests.test_interp.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_cftime_type_error": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "TypeError",
    "numpy.arange",
    "xarray.DataArray",
    "xarray.cftime_range",
    "xarray.tests.requires_cftime",
    "xarray.tests.requires_scipy",
    "xarray.tests.test_interp.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_dataset": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "create_test_data",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.requires_scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_datetime": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.atleast_1d",
    "numpy.datetime64",
    "numpy.nan",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.requires_scipy",
    "xarray.tests.test_interp.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_datetime_interp_noerror": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.linspace",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.requires_scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_datetime_single_string": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.requires_scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_datetime_to_non_datetime_error": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "TypeError",
    "numpy.arange",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.requires_scipy",
    "xarray.tests.test_interp.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_decompose": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "numpy.arange",
    "xarray.DataArray",
    "xarray.broadcast",
    "xarray.tests.assert_allclose",
    "xarray.tests.requires_scipy",
    "xarray.tests.test_interp.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_dimension_wo_coords": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "numpy.arange",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.requires_scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_dtype": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "xarray.Dataset",
    "xarray.tests.requires_scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_errors": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.isnan",
    "numpy.nan",
    "range",
    "xarray.DataArray",
    "xarray.tests.test_interp.get_example_data",
    "xarray.tests.test_interp.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_interp_like": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "create_test_data",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.requires_scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_interpolate_1d": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "func",
    "numpy.linspace",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.test_interp.get_example_data",
    "xarray.tests.test_interp.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_interpolate_1d.func": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.tests.test_interp.scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_interpolate_1d_methods": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "func",
    "numpy.linspace",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.test_interp.get_example_data",
    "xarray.tests.test_interp.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_interpolate_1d_methods.func": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.tests.test_interp.scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_interpolate_chunk_1d": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "enumerate",
    "itertools.combinations",
    "itertools.permutations",
    "len",
    "numpy.cos",
    "numpy.exp",
    "numpy.linspace",
    "numpy.newaxis",
    "numpy.sin",
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.requires_dask",
    "xarray.tests.requires_scipy",
    "xarray.tests.test_interp.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_interpolate_chunk_advanced": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.exp",
    "numpy.linspace",
    "numpy.newaxis",
    "numpy.pi",
    "numpy.sin",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.requires_dask",
    "xarray.tests.requires_scipy",
    "xarray.tests.test_interp.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_interpolate_dimorder": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.test_interp.get_example_data",
    "xarray.tests.test_interp.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_interpolate_nd": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.nan",
    "numpy.stack",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.test_interp.get_example_data",
    "xarray.tests.test_interp.pytest",
    "xarray.tests.test_interp.scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_interpolate_nd_nd": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "xarray.DataArray",
    "xarray.testing.assert_allclose",
    "xarray.tests.requires_scipy",
    "xarray.tests.test_interp.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_interpolate_nd_scalar": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.stack",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.test_interp.get_example_data",
    "xarray.tests.test_interp.pytest",
    "xarray.tests.test_interp.scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_interpolate_nd_with_nan": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "float",
    "numpy.arange",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.testing.assert_allclose",
    "xarray.tests.requires_scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_interpolate_scalar": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "func",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.test_interp.get_example_data",
    "xarray.tests.test_interp.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_interpolate_scalar.func": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.tests.test_interp.scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_interpolate_vectorize": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "func",
    "numpy.linspace",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.test_interp.get_example_data",
    "xarray.tests.test_interp.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_interpolate_vectorize.func": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "enumerate",
    "numpy.nan",
    "xarray.tests.test_interp.scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_keywargs": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "xarray.tests.assert_equal",
    "xarray.tests.test_interp.get_example_data",
    "xarray.tests.test_interp.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_nans": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "numpy.nan",
    "range",
    "xarray.DataArray",
    "xarray.tests.test_interp.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_sorted": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "ValueError",
    "numpy.cos",
    "numpy.linspace",
    "numpy.newaxis",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.requires_scipy",
    "xarray.tests.test_interp.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_merge": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_merge.MergeError": {
  "data": {
   "shadows": "xarray.core.merge.MergeError"
  },
  "type": "import"
 },
 "xarray.tests.test_merge.TestMergeFunction": {
  "data": {
   "lineno": 31
  },
  "type": "class"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_alignment_error": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.Dataset",
    "xarray.merge"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_arrays": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "create_test_data",
    "xarray.merge"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_arrays_attrs": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "create_test_data",
    "raises_regex",
    "xarray.core.merge.MergeError",
    "xarray.merge",
    "xarray.tests.test_merge.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_arrays_attrs_default": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "create_test_data",
    "xarray.merge"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_dataarray_unnamed": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.DataArray",
    "xarray.merge"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_datasets": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "create_test_data",
    "xarray.merge"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_dicts_dims": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "xarray.Dataset",
    "xarray.merge"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_dicts_simple": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "xarray.Dataset",
    "xarray.merge"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_error": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "xarray.Dataset",
    "xarray.MergeError",
    "xarray.merge",
    "xarray.tests.test_merge.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_no_conflicts_broadcast": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.Dataset",
    "xarray.merge"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_no_conflicts_multi_var": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "create_test_data",
    "numpy.nan",
    "xarray.merge"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_no_conflicts_preserve_attrs": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "xarray.Dataset",
    "xarray.merge"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_no_conflicts_single_var": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "xarray.Dataset",
    "xarray.MergeError",
    "xarray.merge",
    "xarray.tests.test_merge.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_wrong_input_error": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "TypeError",
    "raises_regex",
    "xarray.Dataset",
    "xarray.merge"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeInternals": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "xarray.tests.test_merge.TestMergeInternals.test_broadcast_dimension_size": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "xarray.Variable",
    "xarray.core.merge.broadcast_dimension_size",
    "xarray.tests.test_merge.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeMethod": {
  "data": {
   "lineno": 197
  },
  "type": "class"
 },
 "xarray.tests.test_merge.TestMergeMethod.test_merge": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "ValueError",
    "create_test_data",
    "raises_regex",
    "xarray.tests.test_merge.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeMethod.test_merge_auto_align": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "numpy.nan",
    "slice",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeMethod.test_merge_broadcast_equals": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeMethod.test_merge_compat": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.Dataset",
    "xarray.MergeError",
    "xarray.tests.test_merge.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeMethod.test_merge_dataarray": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.merge",
    "xarray.testing.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeMethod.test_merge_fill_value": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "numpy.nan",
    "xarray.Dataset",
    "xarray.core.dtypes.NA",
    "xarray.merge",
    "xarray.tests.test_merge.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeMethod.test_merge_no_conflicts": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "xarray.Dataset",
    "xarray.MergeError",
    "xarray.tests.test_merge.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.assert_identical": {
  "data": {
   "shadows": "xarray.testing.assert_identical"
  },
  "type": "import"
 },
 "xarray.tests.test_merge.dtypes": {
  "data": {
   "shadows": "xarray.core.dtypes"
  },
  "type": "import"
 },
 "xarray.tests.test_merge.merge": {
  "data": {
   "shadows": "xarray.core.merge"
  },
  "type": "import"
 },
 "xarray.tests.test_merge.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_merge.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_merge.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_missing": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_missing.NumpyInterpolator": {
  "data": {
   "shadows": "xarray.core.missing.NumpyInterpolator"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.ScipyInterpolator": {
  "data": {
   "shadows": "xarray.core.missing.ScipyInterpolator"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.SplineInterpolator": {
  "data": {
   "shadows": "xarray.core.missing.SplineInterpolator"
  },
  "type": "import"
 },
 "xarray.tests.test_missing._CFTIME_CALENDARS": {
  "data": {
   "shadows": "xarray.tests.test_cftime_offsets._CFTIME_CALENDARS"
  },
  "type": "import"
 },
 "xarray.tests.test_missing._get_nan_block_lengths": {
  "data": {
   "shadows": "xarray.core.missing._get_nan_block_lengths"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.assert_allclose": {
  "data": {
   "shadows": "xarray.tests.assert_allclose"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.assert_array_equal": {
  "data": {
   "shadows": "xarray.tests.assert_array_equal"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.assert_equal": {
  "data": {
   "shadows": "xarray.tests.assert_equal"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.cf_da": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "xarray.tests.test_missing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.cf_da._cf_da": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.arange",
    "xarray.DataArray",
    "xarray.cftime_range"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.da": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.test_missing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.da_time": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.test_missing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.dask_array_type": {
  "data": {
   "shadows": "xarray.core.pycompat.dask_array_type"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.ds": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_missing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.get_clean_interp_index": {
  "data": {
   "shadows": "xarray.core.missing.get_clean_interp_index"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.make_interpolate_example_data": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.nan",
    "numpy.random.RandomState",
    "numpy.random.shuffle",
    "pandas.TimedeltaIndex",
    "pandas.Timestamp",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.test_missing.da"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.raises_regex": {
  "data": {
   "shadows": "xarray.tests.raises_regex"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.requires_bottleneck": {
  "data": {
   "shadows": "xarray.tests.requires_bottleneck"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.requires_cftime": {
  "data": {
   "shadows": "xarray.tests.requires_cftime"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.requires_dask": {
  "data": {
   "shadows": "xarray.tests.requires_dask"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.requires_scipy": {
  "data": {
   "shadows": "xarray.tests.requires_scipy"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.test_bfill_dask": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "isinstance",
    "xarray.core.pycompat.dask_array_type",
    "xarray.tests.assert_equal",
    "xarray.tests.requires_bottleneck",
    "xarray.tests.requires_dask",
    "xarray.tests.test_missing.da",
    "xarray.tests.test_missing.make_interpolate_example_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_bfill_dataset": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "xarray.tests.requires_bottleneck",
    "xarray.tests.test_missing.ds"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_ffill": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.requires_bottleneck",
    "xarray.tests.test_missing.da"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_ffill_bfill_allnans": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.full",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.requires_bottleneck"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_ffill_bfill_nonans": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.requires_bottleneck"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_ffill_dask": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "isinstance",
    "xarray.core.pycompat.dask_array_type",
    "xarray.tests.assert_equal",
    "xarray.tests.requires_bottleneck",
    "xarray.tests.requires_dask",
    "xarray.tests.test_missing.da",
    "xarray.tests.test_missing.make_interpolate_example_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_ffill_dataset": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "xarray.tests.requires_bottleneck",
    "xarray.tests.test_missing.ds"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_ffill_functions": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "xarray.tests.requires_bottleneck",
    "xarray.tests.test_missing.da"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_ffill_limit": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.assert_array_equal",
    "xarray.tests.requires_bottleneck",
    "xarray.tests.test_missing.da"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_get_clean_interp_index_cf_calendar": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "xarray.core.missing.get_clean_interp_index",
    "xarray.tests.requires_cftime",
    "xarray.tests.test_cftime_offsets._CFTIME_CALENDARS",
    "xarray.tests.test_missing.cf_da",
    "xarray.tests.test_missing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_get_clean_interp_index_dt": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "xarray.Variable",
    "xarray.core.missing.get_clean_interp_index",
    "xarray.tests.requires_cftime",
    "xarray.tests.test_missing.cf_da",
    "xarray.tests.test_missing.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_get_clean_interp_index_potential_overflow": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.cftime_range",
    "xarray.core.missing.get_clean_interp_index",
    "xarray.tests.test_missing.da"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_get_clean_interp_index_strict": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "ValueError",
    "numpy.float64",
    "numpy.testing.assert_array_equal",
    "xarray.DataArray",
    "xarray.core.missing.get_clean_interp_index",
    "xarray.tests.test_missing.da",
    "xarray.tests.test_missing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_2d_coord_raises": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.nan",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.Variable",
    "xarray.tests.raises_regex",
    "xarray.tests.test_missing.da"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_allnans": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.full",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.requires_scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_dask": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "isinstance",
    "xarray.core.pycompat.dask_array_type",
    "xarray.tests.assert_equal",
    "xarray.tests.requires_dask",
    "xarray.tests.test_missing.da",
    "xarray.tests.test_missing.make_interpolate_example_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_dask_raises_for_invalid_chunk_dim": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "ValueError",
    "xarray.tests.raises_regex",
    "xarray.tests.requires_dask",
    "xarray.tests.test_missing.da",
    "xarray.tests.test_missing.make_interpolate_example_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_dataset": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "xarray.tests.assert_array_equal",
    "xarray.tests.test_missing.ds"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_duplicate_values_raises": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.raises_regex",
    "xarray.tests.test_missing.da"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_invalid_interpolator_raises": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.float64",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.raises_regex",
    "xarray.tests.test_missing.da"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_keep_attrs": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.nan",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_kwargs": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.requires_scipy",
    "xarray.tests.test_missing.da"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_limits": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.requires_bottleneck",
    "xarray.tests.test_missing.da"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_methods": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.requires_scipy",
    "xarray.tests.test_missing.da"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_multiindex_raises": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "TypeError",
    "numpy.nan",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.raises_regex",
    "xarray.tests.test_missing.da"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_na_2d": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.requires_bottleneck",
    "xarray.tests.test_missing.da",
    "xarray.tests.test_missing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_na_max_gap_errors": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "pandas.date_range",
    "xarray.tests.raises_regex",
    "xarray.tests.test_missing.da_time"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_na_max_gap_time_specifier": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.timedelta64",
    "pandas.date_range",
    "pandas.to_timedelta",
    "time_range_func",
    "transform",
    "xarray.cftime_range",
    "xarray.tests.assert_allclose",
    "xarray.tests.requires_bottleneck",
    "xarray.tests.test_missing.da_time",
    "xarray.tests.test_missing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_na_nan_block_lengths": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.core.missing._get_nan_block_lengths",
    "xarray.core.missing.get_clean_interp_index",
    "xarray.tests.assert_equal",
    "xarray.tests.requires_bottleneck",
    "xarray.tests.test_missing.da",
    "xarray.tests.test_missing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_no_dim_raises": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.array",
    "numpy.float64",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.raises_regex",
    "xarray.tests.test_missing.da"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_nonans": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "xarray.DataArray",
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_pd_compat": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.testing.assert_allclose",
    "pandas.isnull",
    "xarray.tests.requires_scipy",
    "xarray.tests.test_missing.da",
    "xarray.tests.test_missing.itertools",
    "xarray.tests.test_missing.make_interpolate_example_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_pd_compat_non_uniform_index": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.testing.assert_allclose",
    "pandas.isnull",
    "xarray.tests.requires_scipy",
    "xarray.tests.test_missing.da",
    "xarray.tests.test_missing.itertools",
    "xarray.tests.test_missing.make_interpolate_example_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_pd_compat_polynomial": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "xarray.tests.requires_scipy",
    "xarray.tests.test_missing.da",
    "xarray.tests.test_missing.itertools",
    "xarray.tests.test_missing.make_interpolate_example_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_unsorted_index_raises": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.float64",
    "xarray.DataArray",
    "xarray.tests.raises_regex",
    "xarray.tests.requires_scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_use_coordinate": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.Variable",
    "xarray.tests.assert_equal",
    "xarray.tests.test_missing.da"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolators": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "f",
    "interpolator",
    "numpy.array",
    "numpy.float64",
    "pandas.isnull",
    "xarray.core.missing.NumpyInterpolator",
    "xarray.core.missing.ScipyInterpolator",
    "xarray.core.missing.SplineInterpolator",
    "xarray.tests.requires_scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_scipy_methods_function": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "xarray.tests.requires_scipy",
    "xarray.tests.test_missing.da",
    "xarray.tests.test_missing.make_interpolate_example_data",
    "xarray.tests.test_missing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_nputils": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_nputils.NumpyVIndexAdapter": {
  "data": {
   "shadows": "xarray.core.nputils.NumpyVIndexAdapter"
  },
  "type": "import"
 },
 "xarray.tests.test_nputils._is_contiguous": {
  "data": {
   "shadows": "xarray.core.nputils._is_contiguous"
  },
  "type": "import"
 },
 "xarray.tests.test_nputils.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "xarray.tests.test_nputils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_nputils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_nputils.rolling_window": {
  "data": {
   "shadows": "xarray.core.nputils.rolling_window"
  },
  "type": "import"
 },
 "xarray.tests.test_nputils.test_is_contiguous": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "xarray.core.nputils._is_contiguous"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_nputils.test_nd_rolling": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "float",
    "numpy.arange",
    "numpy.nan",
    "numpy.testing.assert_array_equal",
    "xarray.core.nputils.rolling_window",
    "xarray.tests.test_nputils.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_nputils.test_rolling": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.nan",
    "numpy.stack",
    "numpy.testing.assert_array_equal",
    "xarray.core.nputils.rolling_window"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_nputils.test_vindex": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "numpy.zeros_like",
    "xarray.core.nputils.NumpyVIndexAdapter"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_options.FILE_CACHE": {
  "data": {
   "shadows": "xarray.backends.file_manager.FILE_CACHE"
  },
  "type": "import"
 },
 "xarray.tests.test_options.OPTIONS": {
  "data": {
   "shadows": "xarray.core.options.OPTIONS"
  },
  "type": "import"
 },
 "xarray.tests.test_options.TestAttrRetention": {
  "data": {
   "lineno": 92
  },
  "type": "class"
 },
 "xarray.tests.test_options.TestAttrRetention.test_concat_attr_retention": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "xarray.concat",
    "xarray.tests.test_options.create_test_dataset_attrs"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options.TestAttrRetention.test_dataarray_attr_retention": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "xarray.tests.test_options.create_test_dataarray_attrs",
    "xarray.tests.test_options.xarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options.TestAttrRetention.test_dataset_attr_retention": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "xarray.tests.test_options.create_test_dataset_attrs",
    "xarray.tests.test_options.xarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options.TestAttrRetention.test_display_dataarray_style_html": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "xarray.tests.test_options.create_test_dataarray_attrs",
    "xarray.tests.test_options.xarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options.TestAttrRetention.test_display_dataarray_style_text": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "xarray.tests.test_options.create_test_dataarray_attrs",
    "xarray.tests.test_options.xarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options.TestAttrRetention.test_display_style_html": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "xarray.tests.test_options.create_test_dataset_attrs",
    "xarray.tests.test_options.xarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options.TestAttrRetention.test_display_style_text": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "xarray.tests.test_options.create_test_dataset_attrs",
    "xarray.tests.test_options.xarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options.TestAttrRetention.test_groupby_attr_retention": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "xarray.tests.test_options.xarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options.TestAttrRetention.test_merge_attr_retention": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "xarray.merge",
    "xarray.tests.test_options.create_test_dataarray_attrs",
    "xarray.tests.test_options.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options._get_keep_attrs": {
  "data": {
   "shadows": "xarray.core.options._get_keep_attrs"
  },
  "type": "import"
 },
 "xarray.tests.test_options.concat": {
  "data": {
   "shadows": "xarray.concat"
  },
  "type": "import"
 },
 "xarray.tests.test_options.create_test_data": {
  "data": {
   "shadows": "xarray.tests.test_dataset.create_test_data"
  },
  "type": "import"
 },
 "xarray.tests.test_options.create_test_dataarray_attrs": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options.create_test_dataset_attrs": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options.merge": {
  "data": {
   "shadows": "xarray.merge"
  },
  "type": "import"
 },
 "xarray.tests.test_options.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_options.test_arithmetic_join": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError",
    "xarray.core.options.OPTIONS",
    "xarray.tests.test_options.pytest",
    "xarray.tests.test_options.xarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options.test_display_style": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError",
    "xarray.core.options.OPTIONS",
    "xarray.tests.test_options.pytest",
    "xarray.tests.test_options.xarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options.test_display_width": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ValueError",
    "xarray.tests.test_options.pytest",
    "xarray.tests.test_options.xarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options.test_enable_cftimeindex": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "xarray.core.options.OPTIONS",
    "xarray.tests.test_options.pytest",
    "xarray.tests.test_options.xarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options.test_file_cache_maxsize": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "xarray.backends.file_manager.FILE_CACHE.maxsize",
    "xarray.tests.test_options.pytest",
    "xarray.tests.test_options.xarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options.test_invalid_option_raises": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ValueError",
    "xarray.tests.test_options.pytest",
    "xarray.tests.test_options.xarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options.test_keep_attrs": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError",
    "xarray.core.options.OPTIONS",
    "xarray.core.options._get_keep_attrs",
    "xarray.tests.test_options.pytest",
    "xarray.tests.test_options.xarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options.test_nested_options": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "xarray.core.options.OPTIONS",
    "xarray.tests.test_options.xarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options.xarray": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_plot": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "cartopy",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array"
   ]
  },
  "type": "module"
 },
 "xarray.tests.test_plot.Common2dMixin": {
  "data": {
   "lineno": 1045
  },
  "type": "class"
 },
 "xarray.tests.test_plot.Common2dMixin.setUp": {
  "data": {
   "lineno": 1053,
   "symbols_in_volume": [
    "getattr",
    "numpy.arange",
    "numpy.meshgrid",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_1d_raises_valueerror": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_2d_coord_with_interval": {
  "data": {
   "lineno": 1471,
   "symbols_in_volume": [
    "getattr",
    "range"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_2d_function_and_method_signature_same": {
  "data": {
   "lineno": 1373,
   "symbols_in_volume": [
    "xarray.tests.test_plot.inspect"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_3d_raises_valueerror": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_bad_x_string_exception": {
  "data": {
   "lineno": 1224,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_bool": {
  "data": {
   "lineno": 1088,
   "symbols_in_volume": [
    "bool",
    "xarray.ones_like"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_can_change_default_cmap": {
  "data": {
   "lineno": 1198
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_can_pass_in_axis": {
  "data": {
   "lineno": 1117
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_can_plot_all_nans": {
  "data": {
   "lineno": 1166,
   "symbols_in_volume": [
    "numpy.full",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_can_plot_axis_size_one": {
  "data": {
   "lineno": 1172,
   "symbols_in_volume": [
    "numpy.ones",
    "xarray.DataArray",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_cmap_and_color_both": {
  "data": {
   "lineno": 1467,
   "symbols_in_volume": [
    "ValueError",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_colorbar_default_label": {
  "data": {
   "lineno": 1298,
   "symbols_in_volume": [
    "xarray.tests.test_plot.text_in_fig"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_colorbar_kwargs": {
  "data": {
   "lineno": 1314,
   "symbols_in_volume": [
    "ValueError",
    "matplotlib.pyplot.subplots",
    "xarray.tests.test_plot.pytest",
    "xarray.tests.test_plot.text_in_fig"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_colormap_error_norm_and_vmin_vmax": {
  "data": {
   "lineno": 1479,
   "symbols_in_volume": [
    "ValueError",
    "matplotlib.colors.LogNorm",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_complex_raises_typeerror": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": [
    "TypeError",
    "raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_convenient_facetgrid": {
  "data": {
   "lineno": 1380,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.ndenumerate",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_convenient_facetgrid_4d": {
  "data": {
   "lineno": 1412,
   "symbols_in_volume": [
    "assert_array_equal",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_coord_strings": {
  "data": {
   "lineno": 1238,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_default_cmap": {
  "data": {
   "lineno": 1186,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_default_title": {
  "data": {
   "lineno": 1290,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_disallows_rgb_arg": {
  "data": {
   "lineno": 1177,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "xarray.DataArray",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_diverging_color_limits": {
  "data": {
   "lineno": 1202,
   "symbols_in_volume": [
    "abs",
    "round"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_facetgrid_cbar_kwargs": {
  "data": {
   "lineno": 1445,
   "symbols_in_volume": [
    "hasattr",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.get_colorbar_label"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_facetgrid_cmap": {
  "data": {
   "lineno": 1435,
   "symbols_in_volume": [
    "len",
    "numpy.linspace",
    "numpy.random.random",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_facetgrid_map_only_appends_mappables": {
  "data": {
   "lineno": 1422,
   "symbols_in_volume": [
    "matplotlib.pyplot.plot",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_facetgrid_no_cbar_ax": {
  "data": {
   "lineno": 1461,
   "symbols_in_volume": [
    "ValueError",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_label_names": {
  "data": {
   "lineno": 1079,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_multiindex_level_as_coord": {
  "data": {
   "lineno": 1269,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "matplotlib.pyplot.gca",
    "raises_regex",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_multiindex_raises_typeerror": {
  "data": {
   "lineno": 1107,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "raises_regex",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_no_labels": {
  "data": {
   "lineno": 1302,
   "symbols_in_volume": [
    "xarray.tests.test_plot.text_in_fig"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_non_linked_coords": {
  "data": {
   "lineno": 1243,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_non_linked_coords_transpose": {
  "data": {
   "lineno": 1255,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_nonnumeric_index_raises_typeerror": {
  "data": {
   "lineno": 1102,
   "symbols_in_volume": [
    "TypeError",
    "raises_regex",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_plot_nans": {
  "data": {
   "lineno": 1157,
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_positional_coord_string": {
  "data": {
   "lineno": 1213,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_seaborn_palette_as_cmap": {
  "data": {
   "lineno": 1193
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_verbose_facetgrid": {
  "data": {
   "lineno": 1365,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.plot.FacetGrid",
    "xarray.tests.test_plot.easy_array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_viridis_cmap": {
  "data": {
   "lineno": 1182
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_x_ticks_are_rotated_for_time": {
  "data": {
   "lineno": 1150,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.gca",
    "numpy.random.randn",
    "pandas.date_range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_xy_strings": {
  "data": {
   "lineno": 1207,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_xyincrease_defaults": {
  "data": {
   "lineno": 1120,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_xyincrease_false_changes_axes": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": [
    "abs",
    "all",
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_xyincrease_true_changes_axes": {
  "data": {
   "lineno": 1143,
   "symbols_in_volume": [
    "abs",
    "all",
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.DataArray": {
  "data": {
   "shadows": "xarray.DataArray"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.Dataset": {
  "data": {
   "shadows": "xarray.Dataset"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.PlotTestCase": {
  "data": {
   "lineno": 127
  },
  "type": "class"
 },
 "xarray.tests.test_plot.PlotTestCase.contourf_called": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "len",
    "matplotlib.collections.PathCollection",
    "matplotlib.pyplot.gca",
    "plotmethod"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.PlotTestCase.imshow_called": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "len",
    "matplotlib.image.AxesImage",
    "matplotlib.pyplot.gca",
    "plotmethod",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.PlotTestCase.pass_in_axis": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "matplotlib.pyplot.subplots",
    "plotmethod"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.PlotTestCase.setup": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "matplotlib.pyplot.close",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestAxesKwargs": {
  "data": {
   "lineno": 2354
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestAxesKwargs.test_xincrease_kwarg": {
  "data": {
   "lineno": 2356,
   "symbols_in_volume": [
    "matplotlib.pyplot.clf",
    "matplotlib.pyplot.gca",
    "xarray.tests.test_plot.pytest",
    "xarray.tests.test_plot.test_da_list"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestAxesKwargs.test_xlim_kwarg": {
  "data": {
   "lineno": 2386,
   "symbols_in_volume": [
    "matplotlib.pyplot.clf",
    "matplotlib.pyplot.gca",
    "xarray.tests.test_plot.pytest",
    "xarray.tests.test_plot.test_da_list"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestAxesKwargs.test_xscale_kwarg": {
  "data": {
   "lineno": 2370,
   "symbols_in_volume": [
    "matplotlib.pyplot.clf",
    "matplotlib.pyplot.gca",
    "xarray.tests.test_plot.pytest",
    "xarray.tests.test_plot.test_da_list"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestAxesKwargs.test_xticks_kwarg": {
  "data": {
   "lineno": 2400,
   "symbols_in_volume": [
    "assert_array_equal",
    "matplotlib.pyplot.clf",
    "matplotlib.pyplot.gca",
    "numpy.arange",
    "xarray.tests.test_plot.pytest",
    "xarray.tests.test_plot.test_da_list"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestAxesKwargs.test_yincrease_kwarg": {
  "data": {
   "lineno": 2363,
   "symbols_in_volume": [
    "matplotlib.pyplot.clf",
    "matplotlib.pyplot.gca",
    "xarray.tests.test_plot.pytest",
    "xarray.tests.test_plot.test_da_list"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestAxesKwargs.test_ylim_kwarg": {
  "data": {
   "lineno": 2393,
   "symbols_in_volume": [
    "matplotlib.pyplot.clf",
    "matplotlib.pyplot.gca",
    "xarray.tests.test_plot.pytest",
    "xarray.tests.test_plot.test_da_list"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestAxesKwargs.test_yscale_kwarg": {
  "data": {
   "lineno": 2377,
   "symbols_in_volume": [
    "matplotlib.pyplot.clf",
    "matplotlib.pyplot.gca",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestAxesKwargs.test_yticks_kwarg": {
  "data": {
   "lineno": 2407,
   "symbols_in_volume": [
    "assert_array_equal",
    "matplotlib.pyplot.clf",
    "matplotlib.pyplot.gca",
    "numpy.arange",
    "xarray.tests.test_plot.pytest",
    "xarray.tests.test_plot.test_da_list"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestCFDatetimePlot": {
  "data": {
   "lineno": 2296,
   "symbols_in_volume": [
    "xarray.tests.test_plot.PlotTestCase",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestCFDatetimePlot.setUp": {
  "data": {
   "lineno": 2300,
   "symbols_in_volume": [
    "numpy.random.rand",
    "xarray.DataArray",
    "xarray.cftime_range",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestCFDatetimePlot.test_cfdatetime_contour_plot": {
  "data": {
   "lineno": 2320
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestCFDatetimePlot.test_cfdatetime_line_plot": {
  "data": {
   "lineno": 2314
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestCFDatetimePlot.test_cfdatetime_pcolormesh_plot": {
  "data": {
   "lineno": 2317
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestContour": {
  "data": {
   "lineno": 1539,
   "symbols_in_volume": [
    "staticmethod",
    "xarray.plot.contour",
    "xarray.tests.test_plot.Common2dMixin",
    "xarray.tests.test_plot.PlotTestCase",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestContour._color_as_tuple": {
  "data": {
   "lineno": 1546,
   "symbols_in_volume": [
    "staticmethod",
    "tuple"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestContour.list_of_colors_in_cmap_raises_error": {
  "data": {
   "lineno": 1581,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestContour.test_2d_coord_names": {
  "data": {
   "lineno": 1585,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestContour.test_cmap_and_color_both": {
  "data": {
   "lineno": 1577,
   "symbols_in_volume": [
    "ValueError",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestContour.test_colors": {
  "data": {
   "lineno": 1550
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestContour.test_colors_np_levels": {
  "data": {
   "lineno": 1567,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestContour.test_single_level": {
  "data": {
   "lineno": 1593
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestContourf": {
  "data": {
   "lineno": 1489,
   "symbols_in_volume": [
    "staticmethod",
    "xarray.plot.contourf",
    "xarray.tests.test_plot.Common2dMixin",
    "xarray.tests.test_plot.PlotTestCase",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestContourf.test_2d_coord_names": {
  "data": {
   "lineno": 1522,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestContourf.test_contourf_called": {
  "data": {
   "lineno": 1494,
   "symbols_in_volume": [
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestContourf.test_extend": {
  "data": {
   "lineno": 1504,
   "symbols_in_volume": [
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestContourf.test_levels": {
  "data": {
   "lineno": 1530,
   "symbols_in_volume": [
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestContourf.test_primitive_artist_returned": {
  "data": {
   "lineno": 1500,
   "symbols_in_volume": [
    "isinstance",
    "matplotlib.contour.QuadContourSet"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDatasetScatterPlots": {
  "data": {
   "lineno": 2134,
   "symbols_in_volume": [
    "xarray.tests.test_plot.PlotTestCase"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestDatasetScatterPlots.setUp": {
  "data": {
   "lineno": 2136,
   "symbols_in_volume": [
    "numpy.random.randn",
    "range",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDatasetScatterPlots.test_accessor": {
  "data": {
   "lineno": 2156,
   "symbols_in_volume": [
    "isinstance",
    "xarray.Dataset.plot"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDatasetScatterPlots.test_add_guide": {
  "data": {
   "lineno": 2162,
   "symbols_in_volume": [
    "xarray.plot.dataset_plot._infer_meta_data",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDatasetScatterPlots.test_add_legend_by_default": {
  "data": {
   "lineno": 2272,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDatasetScatterPlots.test_axes_in_faceted_plot": {
  "data": {
   "lineno": 2203,
   "symbols_in_volume": [
    "ValueError",
    "matplotlib.pyplot.axes",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDatasetScatterPlots.test_bad_args": {
  "data": {
   "lineno": 2211,
   "symbols_in_volume": [
    "ValueError",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDatasetScatterPlots.test_datetime_hue": {
  "data": {
   "lineno": 2225,
   "symbols_in_volume": [
    "pandas.date_range",
    "pandas.timedelta_range",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDatasetScatterPlots.test_default_labels": {
  "data": {
   "lineno": 2188,
   "symbols_in_volume": [
    "str",
    "xarray.tests.test_plot.substring_in_axes",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDatasetScatterPlots.test_facetgrid_hue_style": {
  "data": {
   "lineno": 2235,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "matplotlib.collections.PathCollection"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDatasetScatterPlots.test_facetgrid_shape": {
  "data": {
   "lineno": 2181,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDatasetScatterPlots.test_figsize_and_size": {
  "data": {
   "lineno": 2207,
   "symbols_in_volume": [
    "ValueError",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDatasetScatterPlots.test_legend_labels": {
  "data": {
   "lineno": 2265
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDatasetScatterPlots.test_non_numeric_legend": {
  "data": {
   "lineno": 2255,
   "symbols_in_volume": [
    "ValueError",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDatasetScatterPlots.test_scatter": {
  "data": {
   "lineno": 2249,
   "symbols_in_volume": [
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDatetimePlot": {
  "data": {
   "lineno": 2277,
   "symbols_in_volume": [
    "xarray.tests.test_plot.PlotTestCase"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestDatetimePlot.setUp": {
  "data": {
   "lineno": 2278,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.arange",
    "numpy.array",
    "numpy.pi",
    "numpy.sin",
    "xarray.DataArray",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDatetimePlot.test_datetime_line_plot": {
  "data": {
   "lineno": 2291
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDetermineCmapParams": {
  "data": {
   "lineno": 741
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestDetermineCmapParams.setUp": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "numpy.linspace",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDetermineCmapParams.test_center": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "xarray.plot.utils._determine_cmap_params"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDetermineCmapParams.test_cmap_divergent_option": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "xarray.plot.utils._determine_cmap_params",
    "xarray.set_options"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDetermineCmapParams.test_cmap_sequential_explicit_option": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "matplotlib.cm.magma",
    "xarray.plot.utils._determine_cmap_params",
    "xarray.set_options"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDetermineCmapParams.test_cmap_sequential_option": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "xarray.plot.utils._determine_cmap_params",
    "xarray.set_options"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDetermineCmapParams.test_divergentcontrol": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "xarray.plot.utils._determine_cmap_params"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDetermineCmapParams.test_integer_levels": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "xarray.plot.utils._determine_cmap_params",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDetermineCmapParams.test_list_levels": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "assert_array_equal",
    "list",
    "numpy.array",
    "pandas.Index",
    "wrap_levels",
    "xarray.DataArray",
    "xarray.plot.utils._determine_cmap_params"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDetermineCmapParams.test_nan_inf_are_ignored": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.nan",
    "xarray.plot.utils._determine_cmap_params"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDetermineCmapParams.test_norm_sets_vmin_vmax": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "matplotlib.colors.Normalize",
    "xarray.plot.utils._determine_cmap_params",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDetermineCmapParams.test_robust": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "numpy.percentile",
    "xarray.plot.utils._determine_cmap_params"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDiscreteColorMap": {
  "data": {
   "lineno": 951
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestDiscreteColorMap.setUp": {
  "data": {
   "lineno": 953,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.dstack",
    "numpy.linalg.norm",
    "numpy.meshgrid",
    "xarray.DataArray",
    "xarray.tests.test_plot.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDiscreteColorMap.test_build_discrete_cmap": {
  "data": {
   "lineno": 969,
   "symbols_in_volume": [
    "assert_array_equal",
    "cmap",
    "len",
    "max",
    "min",
    "xarray.plot.utils._build_discrete_cmap",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDiscreteColorMap.test_discrete_colormap_int_levels": {
  "data": {
   "lineno": 1006,
   "symbols_in_volume": [
    "cmap",
    "getattr",
    "len",
    "matplotlib.cm.RdBu",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDiscreteColorMap.test_discrete_colormap_list_levels_and_vmin_or_vmax": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDiscreteColorMap.test_discrete_colormap_list_of_levels": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "assert_array_equal",
    "getattr",
    "len",
    "max",
    "min",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDiscreteColorMap.test_discrete_colormap_provided_boundary_norm": {
  "data": {
   "lineno": 1039,
   "symbols_in_volume": [
    "matplotlib.colors.BoundaryNorm",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDiscreteColorMap.test_recover_from_seaborn_jet_exception": {
  "data": {
   "lineno": 963,
   "symbols_in_volume": [
    "len",
    "numpy.ndarray",
    "type",
    "xarray.plot.utils._color_palette",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid": {
  "data": {
   "lineno": 1767,
   "symbols_in_volume": [
    "xarray.tests.test_plot.PlotTestCase"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestFacetGrid.setUp": {
  "data": {
   "lineno": 1768,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.plot.FacetGrid",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_can_set_norm": {
  "data": {
   "lineno": 1897,
   "symbols_in_volume": [
    "matplotlib.colors.SymLogNorm",
    "matplotlib.image.AxesImage",
    "matplotlib.pyplot.gcf",
    "xarray.plot.imshow",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_can_set_vmin_vmax": {
  "data": {
   "lineno": 1880,
   "symbols_in_volume": [
    "matplotlib.image.AxesImage",
    "matplotlib.pyplot.gcf",
    "numpy.allclose",
    "numpy.array",
    "xarray.plot.imshow",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_colorbar": {
  "data": {
   "lineno": 1809,
   "symbols_in_volume": [
    "len",
    "matplotlib.image.AxesImage",
    "matplotlib.pyplot.gcf",
    "numpy.allclose",
    "numpy.array",
    "xarray.plot.imshow",
    "xarray.tests.test_plot.find_possible_colorbars",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_empty_cell": {
  "data": {
   "lineno": 1823,
   "symbols_in_volume": [
    "xarray.plot.FacetGrid",
    "xarray.plot.imshow",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_facetgrid_colorbar": {
  "data": {
   "lineno": 1977,
   "symbols_in_volume": [
    "len",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.find_possible_colorbars",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_facetgrid_polar": {
  "data": {
   "lineno": 1991,
   "symbols_in_volume": [
    "dict",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_figure_size": {
  "data": {
   "lineno": 1905,
   "symbols_in_volume": [
    "ValueError",
    "assert_array_equal",
    "matplotlib.pyplot.gca",
    "raises_regex",
    "xarray.plot.FacetGrid",
    "xarray.plot.plot",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_float_index": {
  "data": {
   "lineno": 1846,
   "symbols_in_volume": [
    "xarray.plot.FacetGrid",
    "xarray.plot.imshow",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_groups": {
  "data": {
   "lineno": 1837,
   "symbols_in_volume": [
    "assert_equal",
    "xarray.plot.imshow",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_map": {
  "data": {
   "lineno": 1943,
   "symbols_in_volume": [
    "Ellipsis",
    "matplotlib.pyplot.contourf",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_map_dataset": {
  "data": {
   "lineno": 1950,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.contourf",
    "xarray.plot.FacetGrid",
    "xarray.tests.test_plot.find_possible_colorbars",
    "xarray.tests.test_plot.pytest",
    "xarray.tests.test_plot.text_in_fig"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_names_appear_somewhere": {
  "data": {
   "lineno": 1785,
   "symbols_in_volume": [
    "xarray.plot.contourf",
    "xarray.tests.test_plot.pytest",
    "xarray.tests.test_plot.text_in_fig",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_no_args": {
  "data": {
   "lineno": 1774,
   "symbols_in_volume": [
    "xarray.plot.contourf",
    "xarray.tests.test_plot.pytest",
    "xarray.tests.test_plot.text_in_fig"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_nonunique_index_error": {
  "data": {
   "lineno": 1852,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.plot.FacetGrid",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_norow_nocol_error": {
  "data": {
   "lineno": 1832,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.plot.FacetGrid",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_num_ticks": {
  "data": {
   "lineno": 1928,
   "symbols_in_volume": [
    "len",
    "xarray.plot.imshow",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_robust": {
  "data": {
   "lineno": 1858,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "float",
    "max",
    "numpy.zeros",
    "set",
    "xarray.DataArray",
    "xarray.plot.FacetGrid",
    "xarray.plot.imshow",
    "xarray.tests.test_plot.pytest",
    "xarray.tests.test_plot.text_in_fig"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_set_axis_labels": {
  "data": {
   "lineno": 1969,
   "symbols_in_volume": [
    "xarray.plot.contourf",
    "xarray.tests.test_plot.pytest",
    "xarray.tests.test_plot.text_in_fig"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_text_not_super_long": {
  "data": {
   "lineno": 1797,
   "symbols_in_volume": [
    "len",
    "max",
    "xarray.plot.FacetGrid",
    "xarray.plot.contour",
    "xarray.tests.test_plot.pytest",
    "xarray.tests.test_plot.text_in_fig"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_vmin_vmax_equal": {
  "data": {
   "lineno": 1890,
   "symbols_in_volume": [
    "xarray.plot.imshow",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid4d": {
  "data": {
   "lineno": 1999,
   "symbols_in_volume": [
    "xarray.tests.test_plot.PlotTestCase",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestFacetGrid4d.setUp": {
  "data": {
   "lineno": 2001,
   "symbols_in_volume": [
    "numpy.array",
    "str",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid4d.test_default_labels": {
  "data": {
   "lineno": 2014,
   "symbols_in_volume": [
    "xarray.plot.FacetGrid",
    "xarray.plot.imshow",
    "xarray.tests.test_plot.pytest",
    "xarray.tests.test_plot.substring_in_axes",
    "xarray.tests.test_plot.substring_not_in_axes",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetedLinePlots": {
  "data": {
   "lineno": 2055,
   "symbols_in_volume": [
    "xarray.tests.test_plot.PlotTestCase",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestFacetedLinePlots.setUp": {
  "data": {
   "lineno": 2057,
   "symbols_in_volume": [
    "numpy.random.randn",
    "range",
    "xarray.DataArray",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetedLinePlots.test_axes_in_faceted_plot": {
  "data": {
   "lineno": 2120,
   "symbols_in_volume": [
    "ValueError",
    "matplotlib.pyplot.axes",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetedLinePlots.test_default_labels": {
  "data": {
   "lineno": 2088,
   "symbols_in_volume": [
    "str",
    "xarray.tests.test_plot.substring_in_axes",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetedLinePlots.test_facetgrid_shape": {
  "data": {
   "lineno": 2072,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetedLinePlots.test_figsize_and_size": {
  "data": {
   "lineno": 2124,
   "symbols_in_volume": [
    "ValueError",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetedLinePlots.test_set_axis_labels": {
  "data": {
   "lineno": 2112,
   "symbols_in_volume": [
    "xarray.tests.test_plot.text_in_fig"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetedLinePlots.test_test_empty_cell": {
  "data": {
   "lineno": 2102
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetedLinePlots.test_unnamed_args": {
  "data": {
   "lineno": 2079,
   "symbols_in_volume": [
    "isinstance",
    "matplotlib.lines.Line2D"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetedLinePlots.test_wrong_num_of_dimensions": {
  "data": {
   "lineno": 2128,
   "symbols_in_volume": [
    "ValueError",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetedLinePlotsLegend": {
  "data": {
   "lineno": 2042,
   "symbols_in_volume": [
    "xarray.tests.test_plot.PlotTestCase",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestFacetedLinePlotsLegend.setUp": {
  "data": {
   "lineno": 2044,
   "symbols_in_volume": [
    "xarray.tests.test_plot.pytest",
    "xarray.tutorial.scatter_example_dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetedLinePlotsLegend.test_legend_labels": {
  "data": {
   "lineno": 2048,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow": {
  "data": {
   "lineno": 1631,
   "symbols_in_volume": [
    "staticmethod",
    "xarray.plot.imshow",
    "xarray.tests.test_plot.Common2dMixin",
    "xarray.tests.test_plot.PlotTestCase",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestImshow.test_2d_coord_names": {
  "data": {
   "lineno": 1673,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_cannot_change_mpl_aspect": {
  "data": {
   "lineno": 1651,
   "symbols_in_volume": [
    "ValueError",
    "matplotlib.pyplot.gca",
    "matplotlib.pyplot.gcf",
    "raises_regex",
    "tuple",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_default_aspect_is_auto": {
  "data": {
   "lineno": 1647,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_imshow_called": {
  "data": {
   "lineno": 1636,
   "symbols_in_volume": [
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_imshow_rgb_values_in_valid_range": {
  "data": {
   "lineno": 1742,
   "symbols_in_volume": [
    "matplotlib.pyplot.subplots",
    "numpy.arange",
    "numpy.uint8",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_normalize_rgb_imshow": {
  "data": {
   "lineno": 1719,
   "symbols_in_volume": [
    "dict",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_normalize_rgb_one_arg_error": {
  "data": {
   "lineno": 1732,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_origin_overrides_xyincrease": {
  "data": {
   "lineno": 1755,
   "symbols_in_volume": [
    "matplotlib.pyplot.clf",
    "matplotlib.pyplot.xlim",
    "matplotlib.pyplot.ylim",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_plot_rgb_faceted": {
  "data": {
   "lineno": 1689,
   "symbols_in_volume": [
    "len",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.find_possible_colorbars"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_plot_rgb_image": {
  "data": {
   "lineno": 1677,
   "symbols_in_volume": [
    "len",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.find_possible_colorbars"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_plot_rgb_image_explicit": {
  "data": {
   "lineno": 1683,
   "symbols_in_volume": [
    "len",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.find_possible_colorbars"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_plot_rgba_image_transposed": {
  "data": {
   "lineno": 1695,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_primitive_artist_returned": {
  "data": {
   "lineno": 1662,
   "symbols_in_volume": [
    "isinstance",
    "matplotlib.image.AxesImage",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_regression_rgb_imshow_dim_size_one": {
  "data": {
   "lineno": 1749,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_rgb_errors_bad_dim_sizes": {
  "data": {
   "lineno": 1714,
   "symbols_in_volume": [
    "ValueError",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_rgb_errors_too_many_dims": {
  "data": {
   "lineno": 1709,
   "symbols_in_volume": [
    "ValueError",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_seaborn_palette_needs_levels": {
  "data": {
   "lineno": 1667,
   "symbols_in_volume": [
    "ValueError",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_warns_ambigious_dim": {
  "data": {
   "lineno": 1701,
   "symbols_in_volume": [
    "UserWarning",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_xy_pixel_centered": {
  "data": {
   "lineno": 1642,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestNcAxisNotInstalled": {
  "data": {
   "lineno": 2324,
   "symbols_in_volume": [
    "xarray.tests.test_plot.PlotTestCase",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestNcAxisNotInstalled.setUp": {
  "data": {
   "lineno": 2327,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.pi",
    "numpy.sin",
    "xarray.DataArray",
    "xarray.cftime_range",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestNcAxisNotInstalled.test_ncaxis_notinstalled_line_plot": {
  "data": {
   "lineno": 2342,
   "symbols_in_volume": [
    "ImportError",
    "raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPcolormesh": {
  "data": {
   "lineno": 1600,
   "symbols_in_volume": [
    "staticmethod",
    "xarray.plot.pcolormesh",
    "xarray.tests.test_plot.Common2dMixin",
    "xarray.tests.test_plot.PlotTestCase"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestPcolormesh.test_2d_coord_names": {
  "data": {
   "lineno": 1612,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPcolormesh.test_dont_infer_interval_breaks_for_cartopy": {
  "data": {
   "lineno": 1620,
   "symbols_in_volume": [
    "isinstance",
    "matplotlib.collections.QuadMesh",
    "matplotlib.pyplot.gca",
    "setattr"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPcolormesh.test_everything_plotted": {
  "data": {
   "lineno": 1608
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPcolormesh.test_primitive_artist_returned": {
  "data": {
   "lineno": 1604,
   "symbols_in_volume": [
    "isinstance",
    "matplotlib.collections.QuadMesh"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "xarray.tests.test_plot.PlotTestCase"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestPlot.setup_array": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test1d": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test2d_1d_2d_coordinates_contourf": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "numpy.linspace",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test2d_nonuniform_calls_contourf": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test2d_uniform_calls_imshow": {
  "data": {
   "lineno": 341
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test3d": {
  "data": {
   "lineno": 425
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_1d_bool": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "bool",
    "xarray.ones_like"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_1d_x_y_kw": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "matplotlib.pyplot.subplots",
    "numpy.arange",
    "numpy.cos",
    "raises_regex",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_2d_before_squeeze": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_2d_coord_line_plot_coords_transpose_invariant": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "numpy.arange",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_2d_coords_line_plot": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "matplotlib.pyplot.clf",
    "numpy.arange",
    "numpy.linspace",
    "numpy.meshgrid",
    "xarray.DataArray",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_2d_line": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_2d_line_accepts_hue_kw": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "matplotlib.pyplot.cla",
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_2d_line_accepts_legend_kw": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "matplotlib.pyplot.cla",
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_2d_line_accepts_x_kw": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "matplotlib.pyplot.cla",
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test__infer_interval_breaks": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "ValueError",
    "assert_array_equal",
    "numpy.arange",
    "numpy.array",
    "numpy.meshgrid",
    "numpy.testing.assert_allclose",
    "numpy.timedelta64",
    "pandas.date_range",
    "xarray.plot.plot._infer_interval_breaks",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_accessor": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "isinstance",
    "xarray.DataArray.plot"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_can_pass_in_axis": {
  "data": {
   "lineno": 428
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_contourf_cmap_set": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "assert_array_equal",
    "cmap",
    "copy.copy",
    "matplotlib.cm.viridis",
    "numpy.inf",
    "numpy.ma.masked_invalid",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_contourf_cmap_set_with_bad_under_over": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "assert_array_equal",
    "cmap",
    "cmap.set_bad",
    "cmap.set_over",
    "cmap.set_under",
    "copy.copy",
    "matplotlib.cm.viridis",
    "numpy.all",
    "numpy.inf",
    "numpy.ma.masked_invalid",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_convenient_facetgrid": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "ValueError",
    "assert_array_equal",
    "list",
    "matplotlib.pyplot.gca",
    "raises_regex",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_convenient_facetgrid_4d": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "ValueError",
    "assert_array_equal",
    "matplotlib.pyplot.gca",
    "raises_regex",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_coord_with_interval": {
  "data": {
   "lineno": 574
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_coord_with_interval_x": {
  "data": {
   "lineno": 579
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_coord_with_interval_xy": {
  "data": {
   "lineno": 589
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_coord_with_interval_y": {
  "data": {
   "lineno": 584
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_datetime_dimension": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca",
    "pandas.date_range",
    "range",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_geo_data": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca",
    "numpy.array",
    "numpy.sqrt",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_infer_line_data": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_label_from_attrs": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "xarray.plot.utils.label_from_attrs"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_line_plot_along_1d_coord": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_multiindex_level_as_coord": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "assert_array_equal",
    "dict",
    "numpy.arange",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_plot_size": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "ValueError",
    "matplotlib.pyplot.gca",
    "matplotlib.pyplot.gcf",
    "raises_regex",
    "tuple",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_subplot_kws": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "dict",
    "list",
    "matplotlib.colors.to_rgb",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "xarray.tests.test_plot.PlotTestCase"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestPlot1D.setUp": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "len",
    "range",
    "xarray.DataArray",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_can_pass_in_axis": {
  "data": {
   "lineno": 629
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_format_string": {
  "data": {
   "lineno": 626
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_no_label_name_on_x_axis": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_no_label_name_on_y_axis": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_nonnumeric_index_raises_typeerror": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "TypeError",
    "raises_regex",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_plot_nans": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_primitive_returned": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "isinstance",
    "matplotlib.lines.Line2D"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_slice_in_title": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_x_ticks_are_rotated_for_time": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.gca",
    "numpy.arange",
    "pandas.date_range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_xlabel_is_data_name": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_xlabel_is_index_name": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_xyincrease_false_changes_axes": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "all",
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_ylabel_is_data_name": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotHistogram": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "xarray.tests.test_plot.PlotTestCase"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestPlotHistogram.setUp": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotHistogram.test_3d_array": {
  "data": {
   "lineno": 703
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotHistogram.test_can_pass_in_axis": {
  "data": {
   "lineno": 721
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotHistogram.test_can_pass_in_kwargs": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotHistogram.test_hist_coord_with_interval": {
  "data": {
   "lineno": 733
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotHistogram.test_plot_nans": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotHistogram.test_primitive_returned": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "isinstance",
    "matplotlib.patches.Rectangle"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotHistogram.test_title_is_histogram": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotHistogram.test_xlabel_uses_name": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotStep": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "xarray.tests.test_plot.PlotTestCase"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestPlotStep.setUp": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotStep.test_coord_with_interval_step": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotStep.test_coord_with_interval_step_x": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotStep.test_coord_with_interval_step_y": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotStep.test_step": {
  "data": {
   "lineno": 672
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotStep.test_step_with_drawstyle": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot._build_discrete_cmap": {
  "data": {
   "shadows": "xarray.plot.utils._build_discrete_cmap"
  },
  "type": "import"
 },
 "xarray.tests.test_plot._color_palette": {
  "data": {
   "shadows": "xarray.plot.utils._color_palette"
  },
  "type": "import"
 },
 "xarray.tests.test_plot._determine_cmap_params": {
  "data": {
   "shadows": "xarray.plot.utils._determine_cmap_params"
  },
  "type": "import"
 },
 "xarray.tests.test_plot._infer_interval_breaks": {
  "data": {
   "shadows": "xarray.plot.plot._infer_interval_breaks"
  },
  "type": "import"
 },
 "xarray.tests.test_plot._infer_meta_data": {
  "data": {
   "shadows": "xarray.plot.dataset_plot._infer_meta_data"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.ctpy": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "xarray.tests.test_plot.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.easy_array": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.figure_context": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "matplotlib.pyplot.close",
    "xarray.tests.test_plot.contextlib"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.find_possible_colorbars": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "matplotlib.collections.QuadMesh",
    "matplotlib.pyplot.gcf"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.get_axis": {
  "data": {
   "shadows": "xarray.plot.utils.get_axis"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.get_colorbar_label": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "xarray.tests.test_plot.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.label_from_attrs": {
  "data": {
   "shadows": "xarray.plot.utils.label_from_attrs"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.substring_in_axes": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "matplotlib.text.Text"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.substring_not_in_axes": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "all",
    "matplotlib.text.Text"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.test_all_figures_closed": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "matplotlib.pyplot.get_fignums",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.test_da_list": {
  "data": {
   "lineno": 2347
  },
  "type": "constant"
 },
 "xarray.tests.test_plot.test_facetgrid_single_contour": {
  "data": {
   "lineno": 2444,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.meshgrid",
    "numpy.sqrt",
    "xarray.DataArray",
    "xarray.concat",
    "xarray.tests.test_plot.figure_context"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.test_get_axis": {
  "data": {
   "lineno": 2457,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "matplotlib.axes.Axes",
    "xarray.plot.utils.get_axis",
    "xarray.tests.test_plot.figure_context",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.test_get_axis_cartopy": {
  "data": {
   "lineno": 2483,
   "symbols_in_volume": [
    "cartopy.crs.PlateCarree",
    "cartopy.mpl.geoaxes.GeoAxesSubplot",
    "isinstance",
    "xarray.plot.utils.get_axis",
    "xarray.tests.test_plot.figure_context"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.test_plot_transposed_nondim_coord": {
  "data": {
   "lineno": 2415,
   "symbols_in_volume": [
    "getattr",
    "numpy.cos",
    "numpy.linspace",
    "numpy.newaxis",
    "numpy.sin",
    "xarray.DataArray",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.test_plot_transposes_properly": {
  "data": {
   "lineno": 2431,
   "symbols_in_volume": [
    "assert_array_equal",
    "getattr",
    "numpy.arange",
    "numpy.pi",
    "numpy.sin",
    "xarray.DataArray",
    "xarray.tests.test_plot.figure_context",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.text_in_fig": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "matplotlib.pyplot.gcf",
    "matplotlib.text.Text",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.xplt": {
  "data": {
   "shadows": "xarray.plot"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_print_versions": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_print_versions.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "xarray.tests.test_print_versions.test_show_versions": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "xarray.tests.test_print_versions.io",
    "xarray.tests.test_print_versions.xarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_print_versions.xarray": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_sparse": {
  "data": {
   "symbols_in_volume": [
    "xarray.core.npcompat.IS_NEP18_ACTIVE",
    "xarray.tests.test_sparse.pytest"
   ]
  },
  "type": "module"
 },
 "xarray.tests.test_sparse.DataArray": {
  "data": {
   "shadows": "xarray.DataArray"
  },
  "type": "import"
 },
 "xarray.tests.test_sparse.IS_NEP18_ACTIVE": {
  "data": {
   "shadows": "xarray.core.npcompat.IS_NEP18_ACTIVE"
  },
  "type": "import"
 },
 "xarray.tests.test_sparse.TestSparseCoords": {
  "data": {
   "lineno": 830
  },
  "type": "class"
 },
 "xarray.tests.test_sparse.TestSparseCoords.test_sparse_coords": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "numpy.arange",
    "xarray.DataArray",
    "xarray.tests.test_sparse.pytest",
    "xarray.tests.test_sparse.sparse"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.TestSparseDataArrayAndDataset": {
  "data": {
   "lineno": 541
  },
  "type": "class"
 },
 "xarray.tests.test_sparse.TestSparseDataArrayAndDataset.setUp": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "range",
    "xarray.DataArray",
    "xarray.tests.test_sparse.pytest",
    "xarray.tests.test_sparse.sparse"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.TestSparseDataArrayAndDataset.test_align": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all",
    "numpy.arange",
    "xarray.DataArray",
    "xarray.align",
    "xarray.tests.test_sparse.sparse"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.TestSparseDataArrayAndDataset.test_align_2d": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.arange",
    "xarray.DataArray",
    "xarray.align",
    "xarray.tests.test_sparse.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.TestSparseDataArrayAndDataset.test_align_outer": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all",
    "numpy.arange",
    "xarray.DataArray",
    "xarray.align",
    "xarray.tests.test_sparse.sparse"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.TestSparseDataArrayAndDataset.test_coarsen": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "isinstance",
    "numpy.allclose",
    "xarray.tests.test_sparse.sparse"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.TestSparseDataArrayAndDataset.test_concat": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "xarray.Dataset",
    "xarray.concat",
    "xarray.tests.test_sparse.assert_sparse_equal",
    "xarray.tests.test_sparse.sparse"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.TestSparseDataArrayAndDataset.test_dataarray_pickle": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "numpy.ones",
    "xarray.DataArray",
    "xarray.tests.test_sparse.pickle",
    "xarray.tests.test_sparse.sparse"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.TestSparseDataArrayAndDataset.test_dataarray_repr": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ones",
    "repr",
    "textwrap.dedent",
    "xarray.DataArray",
    "xarray.tests.test_sparse.sparse"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.TestSparseDataArrayAndDataset.test_dataset_pickle": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "numpy.ones",
    "xarray.Dataset",
    "xarray.tests.test_sparse.pickle",
    "xarray.tests.test_sparse.sparse"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.TestSparseDataArrayAndDataset.test_dataset_repr": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ones",
    "repr",
    "textwrap.dedent",
    "xarray.Dataset",
    "xarray.tests.test_sparse.sparse"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.TestSparseDataArrayAndDataset.test_dot": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "assert_equal",
    "xarray.tests.test_sparse.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.TestSparseDataArrayAndDataset.test_groupby": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "isinstance",
    "numpy.allclose",
    "xarray.tests.test_sparse.pytest",
    "xarray.tests.test_sparse.sparse"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.TestSparseDataArrayAndDataset.test_groupby_bins": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "isinstance",
    "numpy.allclose",
    "xarray.tests.test_sparse.pytest",
    "xarray.tests.test_sparse.sparse"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.TestSparseDataArrayAndDataset.test_groupby_first": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "xarray.tests.test_sparse.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.TestSparseDataArrayAndDataset.test_merge": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "isinstance",
    "xarray.merge",
    "xarray.tests.test_sparse.pytest",
    "xarray.tests.test_sparse.sparse"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.TestSparseDataArrayAndDataset.test_reindex": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "numpy.allclose",
    "xarray.tests.test_sparse.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.TestSparseDataArrayAndDataset.test_resample": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "isinstance",
    "numpy.allclose",
    "numpy.linspace",
    "pandas.DateOffset",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.test_sparse.pytest",
    "xarray.tests.test_sparse.sparse"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.TestSparseDataArrayAndDataset.test_rolling": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "isinstance",
    "numpy.allclose",
    "xarray.tests.test_sparse.pytest",
    "xarray.tests.test_sparse.sparse"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.TestSparseDataArrayAndDataset.test_rolling_exp": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "isinstance",
    "numpy.allclose",
    "xarray.tests.test_sparse.pytest",
    "xarray.tests.test_sparse.sparse"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.TestSparseDataArrayAndDataset.test_sparse_dask_dataset_repr": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "numpy.ones",
    "repr",
    "textwrap.dedent",
    "xarray.Dataset",
    "xarray.tests.test_sparse.pytest",
    "xarray.tests.test_sparse.sparse"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.TestSparseDataArrayAndDataset.test_stack": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.arange",
    "pandas.MultiIndex.from_product",
    "xarray.DataArray",
    "xarray.tests.test_sparse.make_xrarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.TestSparseDataArrayAndDataset.test_to_dataset_roundtrip": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.TestSparseDataArrayAndDataset.test_ufuncs": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.sin",
    "xarray.tests.test_sparse.pytest",
    "xarray.ufuncs.sin"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.TestSparseDataArrayAndDataset.test_where": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "numpy.arange",
    "xarray.DataArray",
    "xarray.tests.test_sparse.pytest",
    "xarray.tests.test_sparse.sparse"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.TestSparseVariable": {
  "data": {
   "lineno": 257
  },
  "type": "class"
 },
 "xarray.tests.test_sparse.TestSparseVariable.setUp": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "xarray.Variable",
    "xarray.tests.test_sparse.pytest",
    "xarray.tests.test_sparse.sparse"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.TestSparseVariable.test_bivariate_ufunc": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "numpy.maximum",
    "xarray.tests.test_sparse.assert_sparse_equal",
    "xarray.tests.test_sparse.pytest",
    "xarray.ufuncs.maximum"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.TestSparseVariable.test_missing_values": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.nan",
    "xarray.Variable",
    "xarray.tests.test_sparse.sparse"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.TestSparseVariable.test_pickle": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "xarray.tests.test_sparse.assert_sparse_equal",
    "xarray.tests.test_sparse.pickle"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.TestSparseVariable.test_repr": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "repr",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.TestSparseVariable.test_unary_op": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "abs",
    "xarray.tests.test_sparse.assert_sparse_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.TestSparseVariable.test_univariate_ufunc": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "numpy.sin",
    "xarray.tests.test_sparse.assert_sparse_equal",
    "xarray.tests.test_sparse.pytest",
    "xarray.ufuncs.sin"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.Variable": {
  "data": {
   "shadows": "xarray.Variable"
  },
  "type": "import"
 },
 "xarray.tests.test_sparse.assert_sparse_equal": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "isinstance",
    "numpy.testing.assert_equal",
    "xarray.core.pycompat.sparse_array_type"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "xarray.tests.test_sparse.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "xarray.tests.test_sparse.do": {
  "data": {
   "lineno": 58
  },
  "type": "class"
 },
 "xarray.tests.test_sparse.do.__call__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.do.__init__": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.do.__repr__": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.make_ndarray": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.make_sparray": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "xarray.tests.test_sparse.sparse"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.make_xrarray": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.arange",
    "tuple",
    "xarray.DataArray",
    "xarray.tests.test_sparse.make_sparray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.make_xrvar": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "tuple",
    "xarray.Variable",
    "xarray.tests.test_sparse.make_sparray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_sparse.param": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "xarray.tests.test_sparse.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_sparse.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "xarray.tests.test_sparse.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_sparse.sparse": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "xarray.tests.test_sparse.sparse_array_type": {
  "data": {
   "shadows": "xarray.core.pycompat.sparse_array_type"
  },
  "type": "import"
 },
 "xarray.tests.test_sparse.test_1d_variable_method": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "func",
    "isinstance",
    "numpy.allclose",
    "xarray.Variable",
    "xarray.tests.test_sparse.do",
    "xarray.tests.test_sparse.make_xrvar",
    "xarray.tests.test_sparse.param",
    "xarray.tests.test_sparse.pytest",
    "xarray.tests.test_sparse.sparse",
    "xarray.tests.test_sparse.xfail"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.test_apply_ufunc_check_meta_coherence": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "numpy.array",
    "xarray.DataArray",
    "xarray.apply_ufunc",
    "xarray.tests.test_sparse.assert_sparse_equal",
    "xarray.tests.test_sparse.sparse"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.test_chunk": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": [
    "assert_identical",
    "isinstance",
    "numpy.array",
    "xarray.DataArray",
    "xarray.tests.test_sparse.sparse"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.test_dask_token": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "xarray.DataArray",
    "xarray.tests.test_sparse.dask",
    "xarray.tests.test_sparse.sparse"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.test_dataarray_method": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "func",
    "int",
    "isinstance",
    "numpy.allclose",
    "numpy.arange",
    "numpy.sum",
    "repr",
    "slice",
    "xarray.DataArray",
    "xarray.tests.test_sparse.do",
    "xarray.tests.test_sparse.make_xrarray",
    "xarray.tests.test_sparse.make_xrvar",
    "xarray.tests.test_sparse.param",
    "xarray.tests.test_sparse.pytest",
    "xarray.tests.test_sparse.sparse",
    "xarray.tests.test_sparse.xfail"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.test_dataarray_property": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "getattr",
    "xarray.tests.test_sparse.make_xrarray",
    "xarray.tests.test_sparse.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.test_datarray_1d_method": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "func",
    "isinstance",
    "numpy.allclose",
    "numpy.arange",
    "xarray.DataArray",
    "xarray.tests.test_sparse.do",
    "xarray.tests.test_sparse.make_xrarray",
    "xarray.tests.test_sparse.param",
    "xarray.tests.test_sparse.pytest",
    "xarray.tests.test_sparse.sparse",
    "xarray.tests.test_sparse.xfail"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.test_variable_method": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "func",
    "int",
    "isinstance",
    "numpy.allclose",
    "numpy.sum",
    "repr",
    "slice",
    "xarray.Variable",
    "xarray.tests.test_sparse.do",
    "xarray.tests.test_sparse.make_xrvar",
    "xarray.tests.test_sparse.param",
    "xarray.tests.test_sparse.pytest",
    "xarray.tests.test_sparse.sparse",
    "xarray.tests.test_sparse.xfail"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.test_variable_property": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "getattr",
    "xarray.tests.test_sparse.make_xrvar",
    "xarray.tests.test_sparse.param",
    "xarray.tests.test_sparse.pytest",
    "xarray.tests.test_sparse.xfail"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_sparse.xfail": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "xarray.tests.test_sparse.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_sparse.xu": {
  "data": {
   "shadows": "xarray.ufuncs"
  },
  "type": "import"
 },
 "xarray.tests.test_testing": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "dask.array.from_array",
    "xarray.tests.test_testing.pint"
   ]
  },
  "type": "module"
 },
 "xarray.tests.test_testing.IS_NEP18_ACTIVE": {
  "data": {
   "shadows": "xarray.core.npcompat.IS_NEP18_ACTIVE"
  },
  "type": "import"
 },
 "xarray.tests.test_testing.dask_from_array": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "xarray.tests.test_testing.has_pint": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "xarray.tests.test_testing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_testing.pint": {
  "data": {
   "shadows": "pint"
  },
  "type": "import"
 },
 "xarray.tests.test_testing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_testing.quantity": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "xarray.tests.test_testing.test_allclose_regression": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_testing.test_assert_allclose": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "AssertionError",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.testing.assert_allclose",
    "xarray.tests.test_testing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_testing.test_assert_duckarray_equal": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "dask.array.from_array",
    "duckarray",
    "numpy.array",
    "xarray.core.npcompat.IS_NEP18_ACTIVE",
    "xarray.testing.assert_duckarray_equal",
    "xarray.tests.test_testing.has_pint",
    "xarray.tests.test_testing.pytest",
    "xarray.tests.test_testing.quantity"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_testing.test_assert_duckarray_equal_failing": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "AssertionError",
    "dask.array.from_array",
    "duckarray",
    "numpy.array",
    "xarray.testing.assert_duckarray_equal",
    "xarray.tests.test_testing.has_pint",
    "xarray.tests.test_testing.pytest",
    "xarray.tests.test_testing.quantity"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_testing.unit_registry": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "xarray.tests.test_testing.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_tutorial": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_tutorial.DataArray": {
  "data": {
   "shadows": "xarray.DataArray"
  },
  "type": "import"
 },
 "xarray.tests.test_tutorial.TestLoadDataset": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "xarray.tests.test_tutorial.TestLoadDataset.setUp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "OSError",
    "contextlib.suppress",
    "xarray.tests.test_tutorial.os",
    "xarray.tests.test_tutorial.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_tutorial.TestLoadDataset.test_download_from_github": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "assert_identical",
    "range",
    "xarray.DataArray",
    "xarray.tutorial.open_dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_tutorial.TestLoadDataset.test_download_from_github_load_without_cache": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.tutorial.open_dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_tutorial.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "xarray.tests.test_tutorial.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_tutorial.suppress": {
  "data": {
   "shadows": "contextlib.suppress"
  },
  "type": "import"
 },
 "xarray.tests.test_tutorial.tutorial": {
  "data": {
   "shadows": "xarray.tutorial"
  },
  "type": "import"
 },
 "xarray.tests.test_ufuncs": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_ufuncs.assert_identical": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "assert_array_equal",
    "float",
    "isinstance",
    "type",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.assert_identical_": {
  "data": {
   "shadows": "assert_identical"
  },
  "type": "import"
 },
 "xarray.tests.test_ufuncs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_ufuncs.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "xarray.tests.test_ufuncs.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_ufuncs.test_alignment": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.add",
    "numpy.nan",
    "xarray.Dataset",
    "xarray.set_options",
    "xarray.tests.test_ufuncs.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_binary": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "enumerate",
    "numpy.maximum",
    "numpy.zeros",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.tests.test_ufuncs.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_binary_out": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.frexp",
    "numpy.ones",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.tests.test_ufuncs.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_dask_defers_to_xarray": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "isinstance",
    "numpy.add",
    "numpy.ones",
    "xarray.DataArray",
    "xarray.tests.test_ufuncs.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_groupby": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ValueError",
    "numpy.maximum",
    "raises_regex",
    "xarray.Dataset",
    "xarray.tests.test_ufuncs.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_gufunc_methods": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.add.reduce",
    "raises_regex",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_gufuncs": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.sin",
    "raises_regex",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_kwargs": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "numpy.add",
    "numpy.float64",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_numpy_ufuncs": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "dir",
    "getattr",
    "hasattr",
    "isinstance",
    "np_func",
    "numpy",
    "numpy.ndarray",
    "xarray.DataArray",
    "xarray.tests.test_ufuncs.pytest",
    "xarray.ufuncs"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_out": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.add",
    "numpy.array",
    "numpy.zeros",
    "raises_regex",
    "xarray.DataArray",
    "xarray.tests.test_ufuncs.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_unary": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.zeros",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.tests.test_ufuncs.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_xarray_defers_to_unrecognized_type": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "Other",
    "numpy.maximum",
    "numpy.sin",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_xarray_defers_to_unrecognized_type.Other": {
  "data": {
   "lineno": 109
  },
  "type": "class"
 },
 "xarray.tests.test_ufuncs.test_xarray_defers_to_unrecognized_type.Other.__array_ufunc__": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_xarray_handles_dask": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "isinstance",
    "numpy.add",
    "numpy.ones",
    "xarray.DataArray",
    "xarray.tests.test_ufuncs.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_xarray_ufuncs_deprecation": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "PendingDeprecationWarning",
    "len",
    "xarray.DataArray",
    "xarray.tests.test_ufuncs.pytest",
    "xarray.ufuncs.angle",
    "xarray.ufuncs.cos"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_xarray_ufuncs_pickle": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "cos_pickled",
    "xarray.tests.test_ufuncs.assert_identical",
    "xarray.tests.test_ufuncs.pickle",
    "xarray.tests.test_ufuncs.pytest",
    "xarray.ufuncs.cos"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_ufuncs.xu": {
  "data": {
   "shadows": "xarray.ufuncs"
  },
  "type": "import"
 },
 "xarray.tests.test_units": {
  "data": {
   "symbols_in_volume": [
    "xarray.core.npcompat.IS_NEP18_ACTIVE",
    "xarray.tests.test_units.pint",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "module"
 },
 "xarray.tests.test_units.Callable": {
  "data": {
   "shadows": "collections.abc.Callable"
  },
  "type": "import"
 },
 "xarray.tests.test_units.DimensionalityError": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "xarray.tests.test_units.IS_NEP18_ACTIVE": {
  "data": {
   "shadows": "xarray.core.npcompat.IS_NEP18_ACTIVE"
  },
  "type": "import"
 },
 "xarray.tests.test_units.Quantity": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "xarray.tests.test_units.TestDataArray": {
  "data": {
   "lineno": 2241
  },
  "type": "class"
 },
 "xarray.tests.test_units.TestDataArray.test_aggregation": {
  "data": {
   "lineno": 2308,
   "symbols_in_volume": [
    "assert_allclose",
    "func",
    "func.kwargs.copy",
    "func.name",
    "numpy.arange",
    "repr",
    "xarray.DataArray",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.function",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_binary_operations": {
  "data": {
   "lineno": 2403,
   "symbols_in_volume": [
    "assert_identical",
    "func",
    "numpy.arange",
    "xarray.DataArray",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_bivariate_ufunc": {
  "data": {
   "lineno": 2510,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "numpy.maximum",
    "xarray.DataArray",
    "xarray.tests.test_units.DimensionalityError",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_broadcast_equals": {
  "data": {
   "lineno": 3105,
   "symbols_in_volume": [
    "numpy.ones",
    "xarray.DataArray",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_broadcast_like": {
  "data": {
   "lineno": 3045,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "numpy.array",
    "numpy.linspace",
    "xarray.DataArray",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_combine_first": {
  "data": {
   "lineno": 2919,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.ones_like",
    "numpy.zeros",
    "xarray.DataArray",
    "xarray.tests.test_units.DimensionalityError",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_comparison_operations": {
  "data": {
   "lineno": 2423,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "comparison",
    "numpy.array",
    "xarray.DataArray",
    "xarray.tests.test_units.DimensionalityError",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.operator",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_comparisons": {
  "data": {
   "lineno": 2968,
   "symbols_in_volume": [
    "all",
    "func",
    "func.name",
    "len",
    "numpy.arange",
    "numpy.linspace",
    "repr",
    "xarray.DataArray",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.is_compatible",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_comparisons.is_compatible": {
  "data": {
   "lineno": 3000,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_computation": {
  "data": {
   "lineno": 3677,
   "symbols_in_volume": [
    "assert_identical",
    "func",
    "isinstance",
    "numpy.arange",
    "numpy.linspace",
    "numpy.sum",
    "repr",
    "xarray.DataArray",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.function",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_computation_objects": {
  "data": {
   "lineno": 3731,
   "symbols_in_volume": [
    "assert_allclose",
    "func",
    "numpy.arange",
    "numpy.array",
    "numpy.linspace",
    "repr",
    "xarray.DataArray",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_content_manipulation": {
  "data": {
   "lineno": 3145,
   "symbols_in_volume": [
    "assert_identical",
    "func",
    "func.kwargs.items",
    "getattr",
    "numpy.arange",
    "numpy.float32",
    "numpy.linspace",
    "repr",
    "xarray.DataArray",
    "xarray.tests.test_units.array_strip_units",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_copy": {
  "data": {
   "lineno": 3216,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "numpy.linspace",
    "xarray.DataArray",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_drop_sel": {
  "data": {
   "lineno": 3350,
   "symbols_in_volume": [
    "KeyError",
    "assert_identical",
    "float",
    "int",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.linspace",
    "xarray.DataArray",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_dropna": {
  "data": {
   "lineno": 2805,
   "symbols_in_volume": [
    "assert_identical",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_fillna": {
  "data": {
   "lineno": 2756,
   "symbols_in_volume": [
    "assert_identical",
    "func",
    "numpy.array",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.test_units.DimensionalityError",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_grouped_operations": {
  "data": {
   "lineno": 3806,
   "symbols_in_volume": [
    "assert_identical",
    "func",
    "func.kwargs.items",
    "isinstance",
    "numpy.arange",
    "numpy.linspace",
    "repr",
    "tuple",
    "xarray.DataArray",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_head_tail_thin": {
  "data": {
   "lineno": 3423,
   "symbols_in_volume": [
    "assert_identical",
    "func",
    "numpy.linspace",
    "repr",
    "xarray.DataArray",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_init": {
  "data": {
   "lineno": 2242,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.linspace",
    "xarray.DataArray",
    "xarray.tests.test_units.Quantity",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_interp_reindex": {
  "data": {
   "lineno": 3442,
   "symbols_in_volume": [
    "assert_allclose",
    "func",
    "numpy.arange",
    "numpy.linspace",
    "repr",
    "xarray.DataArray",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_interp_reindex_indexing": {
  "data": {
   "lineno": 3474,
   "symbols_in_volume": [
    "assert_identical",
    "func",
    "numpy.arange",
    "numpy.linspace",
    "repr",
    "xarray.DataArray",
    "xarray.tests.test_units.DimensionalityError",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_interp_reindex_like": {
  "data": {
   "lineno": 3517,
   "symbols_in_volume": [
    "assert_allclose",
    "func",
    "numpy.arange",
    "numpy.empty_like",
    "numpy.linspace",
    "repr",
    "xarray.DataArray",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_interp_reindex_like_indexing": {
  "data": {
   "lineno": 3550,
   "symbols_in_volume": [
    "assert_identical",
    "func",
    "numpy.arange",
    "numpy.empty_like",
    "numpy.linspace",
    "repr",
    "xarray.DataArray",
    "xarray.tests.test_units.DimensionalityError",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_interpolate_na": {
  "data": {
   "lineno": 2903,
   "symbols_in_volume": [
    "assert_identical",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_isel": {
  "data": {
   "lineno": 3239,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "xarray.DataArray",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_isin": {
  "data": {
   "lineno": 2820,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.array",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_item": {
  "data": {
   "lineno": 2589,
   "symbols_in_volume": [
    "assert_duckarray_allclose",
    "func",
    "numpy.arange",
    "xarray.DataArray",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_loc": {
  "data": {
   "lineno": 3305,
   "symbols_in_volume": [
    "KeyError",
    "assert_identical",
    "float",
    "int",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.linspace",
    "xarray.DataArray",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_missing_value_detection": {
  "data": {
   "lineno": 2715,
   "symbols_in_volume": [
    "assert_identical",
    "func",
    "numpy.array",
    "numpy.nan",
    "repr",
    "xarray.DataArray",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_missing_value_filling": {
  "data": {
   "lineno": 2738,
   "symbols_in_volume": [
    "assert_identical",
    "func",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.nan",
    "repr",
    "xarray.DataArray",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_numpy_methods": {
  "data": {
   "lineno": 2573,
   "symbols_in_volume": [
    "assert_identical",
    "func",
    "numpy.arange",
    "repr",
    "xarray.DataArray",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_numpy_methods_with_args": {
  "data": {
   "lineno": 2658,
   "symbols_in_volume": [
    "assert_identical",
    "float",
    "func",
    "func.args",
    "func.kwargs.items",
    "int",
    "isinstance",
    "list",
    "numpy.arange",
    "repr",
    "xarray.DataArray",
    "xarray.tests.test_units.DimensionalityError",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.function",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_numpy_properties": {
  "data": {
   "lineno": 2556,
   "symbols_in_volume": [
    "assert_identical",
    "getattr",
    "numpy.arange",
    "numpy.linspace",
    "property",
    "xarray.DataArray",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_pad": {
  "data": {
   "lineno": 3133,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.linspace",
    "xarray.DataArray",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_repr": {
  "data": {
   "lineno": 2276,
   "symbols_in_volume": [
    "func",
    "len",
    "numpy.arange",
    "numpy.linspace",
    "repr",
    "str",
    "xarray.DataArray",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_resample": {
  "data": {
   "lineno": 3791,
   "symbols_in_volume": [
    "assert_identical",
    "func",
    "len",
    "numpy.linspace",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_searchsorted": {
  "data": {
   "lineno": 2600,
   "symbols_in_volume": [
    "float",
    "func",
    "func.args",
    "func.kwargs.items",
    "int",
    "isinstance",
    "list",
    "numpy.arange",
    "numpy.testing.assert_allclose",
    "repr",
    "xarray.DataArray",
    "xarray.tests.test_units.DimensionalityError",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.function",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_sel": {
  "data": {
   "lineno": 3260,
   "symbols_in_volume": [
    "KeyError",
    "assert_identical",
    "float",
    "int",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.linspace",
    "xarray.DataArray",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_squeeze": {
  "data": {
   "lineno": 3395,
   "symbols_in_volume": [
    "assert_identical",
    "dict",
    "len",
    "numpy.arange",
    "tuple",
    "xarray.DataArray",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_stacking_reordering": {
  "data": {
   "lineno": 3642,
   "symbols_in_volume": [
    "assert_identical",
    "func",
    "numpy.arange",
    "numpy.linspace",
    "repr",
    "xarray.DataArray",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_stacking_stacked": {
  "data": {
   "lineno": 3595,
   "symbols_in_volume": [
    "assert_identical",
    "func",
    "numpy.arange",
    "numpy.linspace",
    "repr",
    "xarray.DataArray",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_to_unstacked_dataset": {
  "data": {
   "lineno": 3618,
   "symbols_in_volume": [
    "assert_identical",
    "dict",
    "func",
    "len",
    "numpy.arange",
    "numpy.linspace",
    "xarray.DataArray",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_unary_operations": {
  "data": {
   "lineno": 2384,
   "symbols_in_volume": [
    "abs",
    "assert_identical",
    "func",
    "numpy.arange",
    "numpy.round",
    "xarray.DataArray",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.operator",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_univariate_ufunc": {
  "data": {
   "lineno": 2481,
   "symbols_in_volume": [
    "assert_identical",
    "func",
    "numpy.arange",
    "numpy.sin",
    "xarray.DataArray",
    "xarray.tests.test_units.DimensionalityError",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.function",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataArray.test_where": {
  "data": {
   "lineno": 2849,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.linspace",
    "xarray.DataArray",
    "xarray.tests.test_units.DimensionalityError",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset": {
  "data": {
   "lineno": 3864
  },
  "type": "class"
 },
 "xarray.tests.test_units.TestDataset.test_aggregation": {
  "data": {
   "lineno": 3980,
   "symbols_in_volume": [
    "assert_allclose",
    "func",
    "func.kwargs",
    "func.kwargs.copy",
    "func.name",
    "numpy.linspace",
    "repr",
    "xarray.Dataset",
    "xarray.tests.test_units.array_extract_units",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.function",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_broadcast_equals": {
  "data": {
   "lineno": 4605,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.zeros",
    "xarray.Dataset",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.is_compatible",
    "xarray.tests.test_units.merge_mappings",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_broadcast_like": {
  "data": {
   "lineno": 4555,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.arange",
    "numpy.array",
    "numpy.linspace",
    "xarray.Dataset",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_combine_first": {
  "data": {
   "lineno": 4397,
   "symbols_in_volume": [
    "assert_equal",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.full_like",
    "numpy.nan",
    "numpy.ones_like",
    "xarray.Dataset",
    "xarray.tests.test_units.DimensionalityError",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_comparisons": {
  "data": {
   "lineno": 4462,
   "symbols_in_volume": [
    "all",
    "func",
    "func.name",
    "len",
    "numpy.arange",
    "numpy.linspace",
    "repr",
    "xarray.Dataset",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.is_compatible",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry",
    "xarray.tests.test_units.zip_mappings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_computation": {
  "data": {
   "lineno": 5188,
   "symbols_in_volume": [
    "assert_equal",
    "func",
    "numpy.arange",
    "numpy.fabs",
    "numpy.linspace",
    "numpy.sum",
    "repr",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_computation_objects": {
  "data": {
   "lineno": 5240,
   "symbols_in_volume": [
    "assert_allclose",
    "func",
    "func.name",
    "numpy.arange",
    "numpy.linspace",
    "repr",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_content_manipulation": {
  "data": {
   "lineno": 5394,
   "symbols_in_volume": [
    "assert_equal",
    "func",
    "func.kwargs.items",
    "numpy.arange",
    "numpy.linspace",
    "repr",
    "xarray.Dataset",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.merge_mappings",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_drop_sel": {
  "data": {
   "lineno": 4839,
   "symbols_in_volume": [
    "KeyError",
    "assert_equal",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.linspace",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_dropna": {
  "data": {
   "lineno": 4263,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.array",
    "numpy.nan",
    "xarray.Dataset",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_fillna": {
  "data": {
   "lineno": 4209,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.array",
    "numpy.nan",
    "xarray.Dataset",
    "xarray.tests.test_units.DimensionalityError",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_grouped_operations": {
  "data": {
   "lineno": 5338,
   "symbols_in_volume": [
    "assert_equal",
    "func",
    "func.kwargs.items",
    "numpy.arange",
    "numpy.linspace",
    "repr",
    "xarray.Dataset",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.merge_mappings",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_head_tail_thin": {
  "data": {
   "lineno": 4945,
   "symbols_in_volume": [
    "assert_equal",
    "func",
    "numpy.arange",
    "numpy.linspace",
    "repr",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_init": {
  "data": {
   "lineno": 3865,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.arange",
    "numpy.linspace",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.MergeError",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.merge_mappings",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_interp_reindex": {
  "data": {
   "lineno": 5036,
   "symbols_in_volume": [
    "assert_equal",
    "func",
    "numpy.arange",
    "numpy.linspace",
    "repr",
    "xarray.Dataset",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_interp_reindex_indexing": {
  "data": {
   "lineno": 5073,
   "symbols_in_volume": [
    "assert_equal",
    "func",
    "numpy.arange",
    "numpy.linspace",
    "repr",
    "xarray.Dataset",
    "xarray.tests.test_units.DimensionalityError",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_interp_reindex_like": {
  "data": {
   "lineno": 5109,
   "symbols_in_volume": [
    "assert_equal",
    "func",
    "numpy.arange",
    "numpy.empty_like",
    "numpy.linspace",
    "repr",
    "xarray.Dataset",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_interp_reindex_like_indexing": {
  "data": {
   "lineno": 5148,
   "symbols_in_volume": [
    "assert_equal",
    "func",
    "numpy.arange",
    "numpy.empty_like",
    "numpy.linspace",
    "repr",
    "xarray.Dataset",
    "xarray.tests.test_units.DimensionalityError",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_interpolate_na": {
  "data": {
   "lineno": 4375,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.array",
    "numpy.nan",
    "xarray.Dataset",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_isel": {
  "data": {
   "lineno": 4766,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.arange",
    "numpy.linspace",
    "xarray.Dataset",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_isin": {
  "data": {
   "lineno": 4281,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.array",
    "numpy.nan",
    "xarray.Dataset",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.is_compatible",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_loc": {
  "data": {
   "lineno": 4892,
   "symbols_in_volume": [
    "KeyError",
    "assert_equal",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.linspace",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_merge": {
  "data": {
   "lineno": 5478,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.arange",
    "xarray.Dataset",
    "xarray.MergeError",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_missing_value_detection": {
  "data": {
   "lineno": 4152,
   "symbols_in_volume": [
    "assert_equal",
    "func",
    "numpy.array",
    "numpy.nan",
    "repr",
    "xarray.Dataset",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_missing_value_filling": {
  "data": {
   "lineno": 4188,
   "symbols_in_volume": [
    "assert_equal",
    "func",
    "numpy.array",
    "numpy.nan",
    "repr",
    "xarray.Dataset",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_numpy_methods": {
  "data": {
   "lineno": 4085,
   "symbols_in_volume": [
    "assert_equal",
    "float",
    "func",
    "numpy.linspace",
    "repr",
    "xarray.Dataset",
    "xarray.tests.test_units.array_extract_units",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_numpy_methods_with_args": {
  "data": {
   "lineno": 4111,
   "symbols_in_volume": [
    "assert_equal",
    "func",
    "func.kwargs.items",
    "numpy.linspace",
    "repr",
    "xarray.Dataset",
    "xarray.tests.test_units.DimensionalityError",
    "xarray.tests.test_units.array_attach_units",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_numpy_properties": {
  "data": {
   "lineno": 4072,
   "symbols_in_volume": [
    "assert_equal",
    "getattr",
    "numpy.linspace",
    "property",
    "xarray.Dataset",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_pad": {
  "data": {
   "lineno": 4639,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.linspace",
    "xarray.Dataset",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_repr": {
  "data": {
   "lineno": 3940,
   "symbols_in_volume": [
    "func",
    "len",
    "numpy.arange",
    "numpy.linspace",
    "repr",
    "str",
    "xarray.Dataset",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_resample": {
  "data": {
   "lineno": 5296,
   "symbols_in_volume": [
    "assert_equal",
    "func",
    "numpy.arange",
    "numpy.linspace",
    "pandas.date_range",
    "xarray.Dataset",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_sel": {
  "data": {
   "lineno": 4786,
   "symbols_in_volume": [
    "KeyError",
    "assert_equal",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.linspace",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_squeeze": {
  "data": {
   "lineno": 4998,
   "symbols_in_volume": [
    "assert_equal",
    "dict",
    "len",
    "numpy.linspace",
    "tuple",
    "xarray.Dataset",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_stacking_reordering": {
  "data": {
   "lineno": 4722,
   "symbols_in_volume": [
    "assert_equal",
    "func",
    "numpy.arange",
    "numpy.linspace",
    "repr",
    "xarray.Dataset",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_stacking_stacked": {
  "data": {
   "lineno": 4652,
   "symbols_in_volume": [
    "assert_equal",
    "func",
    "numpy.arange",
    "numpy.linspace",
    "repr",
    "xarray.Dataset",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_to_stacked_array": {
  "data": {
   "lineno": 4698,
   "symbols_in_volume": [
    "assert_equal",
    "func",
    "numpy.linspace",
    "range",
    "xarray.Dataset",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestDataset.test_where": {
  "data": {
   "lineno": 4323,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.linspace",
    "xarray.Dataset",
    "xarray.tests.test_units.DimensionalityError",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestVariable": {
  "data": {
   "lineno": 1497
  },
  "type": "class"
 },
 "xarray.tests.test_units.TestVariable.test_1d_math": {
  "data": {
   "lineno": 1848,
   "symbols_in_volume": [
    "abs",
    "all",
    "assert_allclose",
    "func",
    "func.name",
    "numpy.arange",
    "numpy.ones",
    "repr",
    "xarray.Variable",
    "xarray.tests.test_units.DimensionalityError",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.compatible_mappings",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.function",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestVariable.test_aggregate_complex": {
  "data": {
   "lineno": 1539,
   "symbols_in_volume": [
    "assert_allclose",
    "numpy.nan",
    "xarray.Variable",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestVariable.test_aggregation": {
  "data": {
   "lineno": 1498,
   "symbols_in_volume": [
    "assert_allclose",
    "func",
    "func.kwargs",
    "func.kwargs.copy",
    "func.name",
    "numpy.linspace",
    "repr",
    "xarray.Variable",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestVariable.test_broadcast_equals": {
  "data": {
   "lineno": 1797,
   "symbols_in_volume": [
    "numpy.full",
    "numpy.ones",
    "xarray.Variable",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.is_compatible",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestVariable.test_comparisons": {
  "data": {
   "lineno": 1734,
   "symbols_in_volume": [
    "all",
    "func",
    "func.name",
    "numpy.linspace",
    "repr",
    "xarray.Variable",
    "xarray.tests.test_units.compatible_mappings",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.is_compatible",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestVariable.test_computation": {
  "data": {
   "lineno": 1972,
   "symbols_in_volume": [
    "assert_identical",
    "func",
    "numpy.linspace",
    "numpy.mean",
    "numpy.std",
    "repr",
    "xarray.Variable",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestVariable.test_concat": {
  "data": {
   "lineno": 2063,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.linspace",
    "xarray.Variable",
    "xarray.Variable.concat",
    "xarray.tests.test_units.DimensionalityError",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestVariable.test_copy": {
  "data": {
   "lineno": 2116,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "numpy.linspace",
    "xarray.Variable",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestVariable.test_isel": {
  "data": {
   "lineno": 1829,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.linspace",
    "xarray.Variable",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestVariable.test_masking": {
  "data": {
   "lineno": 1906,
   "symbols_in_volume": [
    "assert_identical",
    "func",
    "numpy.array",
    "numpy.linspace",
    "repr",
    "xarray.Variable",
    "xarray.tests.test_units.DimensionalityError",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.is_compatible",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestVariable.test_missing_value_detection": {
  "data": {
   "lineno": 1665,
   "symbols_in_volume": [
    "assert_identical",
    "func",
    "numpy.array",
    "numpy.nan",
    "repr",
    "xarray.Variable",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestVariable.test_missing_value_fillna": {
  "data": {
   "lineno": 1688,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.array",
    "numpy.nan",
    "xarray.Variable",
    "xarray.tests.test_units.DimensionalityError",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestVariable.test_no_conflicts": {
  "data": {
   "lineno": 2129,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "xarray.Variable",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.is_compatible",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestVariable.test_numpy_methods": {
  "data": {
   "lineno": 1547,
   "symbols_in_volume": [
    "assert_allclose",
    "float",
    "func",
    "func.args",
    "func.kwargs.items",
    "func.name",
    "int",
    "isinstance",
    "list",
    "numpy.float32",
    "numpy.linspace",
    "repr",
    "xarray.Variable",
    "xarray.tests.test_units.DimensionalityError",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestVariable.test_pad": {
  "data": {
   "lineno": 2168,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.arange",
    "xarray.Variable",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestVariable.test_pad_unit_constant_value": {
  "data": {
   "lineno": 2202,
   "symbols_in_volume": [
    "assert_identical",
    "func",
    "numpy.linspace",
    "xarray.Variable",
    "xarray.tests.test_units.DimensionalityError",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestVariable.test_raw_numpy_methods": {
  "data": {
   "lineno": 1605,
   "symbols_in_volume": [
    "assert_duckarray_allclose",
    "float",
    "func",
    "func.args",
    "func.kwargs.items",
    "func.name",
    "int",
    "isinstance",
    "list",
    "numpy.linspace",
    "repr",
    "xarray.Variable",
    "xarray.tests.test_units.DimensionalityError",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.method",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestVariable.test_searchsorted": {
  "data": {
   "lineno": 2005,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "xarray.Variable",
    "xarray.tests.test_units.DimensionalityError",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestVariable.test_set_dims": {
  "data": {
   "lineno": 2103,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.linspace",
    "xarray.Variable",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestVariable.test_squeeze": {
  "data": {
   "lineno": 1955,
   "symbols_in_volume": [
    "assert_identical",
    "dict",
    "list",
    "numpy.ones",
    "xarray.Variable",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestVariable.test_stack": {
  "data": {
   "lineno": 2039,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.linspace",
    "xarray.Variable",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.TestVariable.test_unstack": {
  "data": {
   "lineno": 2051,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.linspace",
    "xarray.Variable",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.array_attach_units": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.core._exceptions.UFuncTypeError",
    "xarray.tests.test_units.Quantity",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.array_extract_units": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "AttributeError",
    "isinstance",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.array_strip_units": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.assert_units_equal": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "xarray.tests.test_units.extract_units"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.attach_units": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "isinstance",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.tests.test_units.array_attach_units"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.compatible_mappings": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "xarray.tests.test_units.is_compatible",
    "xarray.tests.test_units.zip_mappings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.convert_units": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "isinstance",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.dtype": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.dtype",
    "str",
    "xarray.tests.test_units.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.dtypes": {
  "data": {
   "shadows": "xarray.core.dtypes"
  },
  "type": "import"
 },
 "xarray.tests.test_units.extract_units": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "isinstance",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.tests.test_units.Quantity",
    "xarray.tests.test_units.array_extract_units"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.function": {
  "data": {
   "lineno": 327
  },
  "type": "class"
 },
 "xarray.tests.test_units.function.__call__": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "xarray.tests.test_units.merge_args"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.function.__init__": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "AttributeError",
    "callable",
    "getattr",
    "numpy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.function.__repr__": {
  "data": {
   "lineno": 358
  },
  "type": "function"
 },
 "xarray.tests.test_units.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.tests.test_units.is_compatible": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "dimensionality"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.is_compatible.dimensionality": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "isinstance",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.merge_args": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "itertools.zip_longest",
    "object"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.merge_mappings": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "xarray.tests.test_units.method": {
  "data": {
   "lineno": 277
  },
  "type": "class"
 },
 "xarray.tests.test_units.method.__call__": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "AttributeError",
    "collections.abc.Callable",
    "func",
    "functools.partial",
    "getattr",
    "isinstance",
    "numpy",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.core.groupby.GroupBy",
    "xarray.tests.test_units.merge_args"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.method.__init__": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "xarray.tests.test_units.method.__repr__": {
  "data": {
   "lineno": 323
  },
  "type": "function"
 },
 "xarray.tests.test_units.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_units.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "xarray.tests.test_units.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "xarray.tests.test_units.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_units.pint": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "xarray.tests.test_units.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_units.pytestmark": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "xarray.tests.test_units.strip_units": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tuple",
    "type",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.tests.test_units.Quantity",
    "xarray.tests.test_units.array_strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.test_align_dataarray": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "assert_allclose",
    "func",
    "func.kwargs.items",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.linspace",
    "repr",
    "xarray.DataArray",
    "xarray.align",
    "xarray.core.dtypes.NA",
    "xarray.core.dtypes.get_fill_value",
    "xarray.tests.test_units.DimensionalityError",
    "xarray.tests.test_units.Quantity",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.function",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.test_align_dataset": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "assert_allclose",
    "func",
    "func.kwargs.items",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.linspace",
    "repr",
    "xarray.Dataset",
    "xarray.align",
    "xarray.core.dtypes.NA",
    "xarray.core.dtypes.get_fill_value",
    "xarray.tests.test_units.DimensionalityError",
    "xarray.tests.test_units.Quantity",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.function",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.test_apply_ufunc_dataarray": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "assert_identical",
    "func",
    "numpy.arange",
    "numpy.linspace",
    "numpy.mean",
    "xarray.DataArray",
    "xarray.apply_ufunc",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.functools",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.test_apply_ufunc_dataset": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "assert_identical",
    "func",
    "numpy.arange",
    "numpy.linspace",
    "numpy.mean",
    "xarray.Dataset",
    "xarray.apply_ufunc",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.functools",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.test_broadcast_dataarray": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.linspace",
    "xarray.DataArray",
    "xarray.broadcast",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.test_broadcast_dataset": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "numpy.linspace",
    "xarray.Dataset",
    "xarray.broadcast",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.test_combine_by_coords": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "numpy.ones_like",
    "numpy.zeros",
    "repr",
    "xarray.Dataset",
    "xarray.combine_by_coords",
    "xarray.tests.test_units.DimensionalityError",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.test_combine_nested": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "assert_identical",
    "convert_and_strip",
    "func",
    "numpy.arange",
    "numpy.full_like",
    "numpy.nan",
    "numpy.ones_like",
    "numpy.zeros",
    "repr",
    "xarray.Dataset",
    "xarray.combine_nested",
    "xarray.tests.test_units.DimensionalityError",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.function",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.test_concat_dataarray": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "numpy.linspace",
    "repr",
    "xarray.DataArray",
    "xarray.concat",
    "xarray.tests.test_units.DimensionalityError",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.test_concat_dataset": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "numpy.linspace",
    "repr",
    "xarray.Dataset",
    "xarray.concat",
    "xarray.tests.test_units.DimensionalityError",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.test_dot_dataarray": {
  "data": {
   "lineno": 1475,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.linspace",
    "xarray.DataArray",
    "xarray.dot",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.test_merge_dataarray": {
  "data": {
   "lineno": 1020,
   "symbols_in_volume": [
    "assert_allclose",
    "convert_and_strip",
    "numpy.arange",
    "numpy.linspace",
    "repr",
    "xarray.DataArray",
    "xarray.merge",
    "xarray.tests.test_units.DimensionalityError",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.test_merge_dataset": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "assert_allclose",
    "convert_and_strip",
    "func",
    "numpy.arange",
    "numpy.full_like",
    "numpy.nan",
    "numpy.ones_like",
    "numpy.zeros",
    "repr",
    "xarray.Dataset",
    "xarray.merge",
    "xarray.tests.test_units.DimensionalityError",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.function",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.test_replication_dataarray": {
  "data": {
   "lineno": 1214,
   "symbols_in_volume": [
    "assert_identical",
    "func",
    "numpy.arange",
    "numpy.linspace",
    "xarray.DataArray",
    "xarray.ones_like",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry",
    "xarray.zeros_like"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.test_replication_dataset": {
  "data": {
   "lineno": 1250,
   "symbols_in_volume": [
    "assert_identical",
    "func",
    "numpy.arange",
    "numpy.linspace",
    "xarray.Dataset",
    "xarray.ones_like",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry",
    "xarray.zeros_like"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.test_replication_full_like_dataarray": {
  "data": {
   "lineno": 1295,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "numpy.linspace",
    "xarray.DataArray",
    "xarray.full_like",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.test_replication_full_like_dataset": {
  "data": {
   "lineno": 1338,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "numpy.linspace",
    "xarray.Dataset",
    "xarray.full_like",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.test_where_dataarray": {
  "data": {
   "lineno": 1388,
   "symbols_in_volume": [
    "assert_identical",
    "isinstance",
    "numpy.isnan",
    "numpy.linspace",
    "numpy.nan",
    "repr",
    "xarray.DataArray",
    "xarray.tests.test_units.DimensionalityError",
    "xarray.tests.test_units.Quantity",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry",
    "xarray.where"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.test_where_dataset": {
  "data": {
   "lineno": 1431,
   "symbols_in_volume": [
    "assert_identical",
    "isinstance",
    "numpy.isnan",
    "numpy.linspace",
    "numpy.nan",
    "repr",
    "xarray.Dataset",
    "xarray.tests.test_units.DimensionalityError",
    "xarray.tests.test_units.Quantity",
    "xarray.tests.test_units.assert_units_equal",
    "xarray.tests.test_units.attach_units",
    "xarray.tests.test_units.convert_units",
    "xarray.tests.test_units.dtype",
    "xarray.tests.test_units.extract_units",
    "xarray.tests.test_units.pytest",
    "xarray.tests.test_units.strip_units",
    "xarray.tests.test_units.unit_registry",
    "xarray.where"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_units.unit_registry": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "xarray.tests.test_units.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_units.zip_longest": {
  "data": {
   "shadows": "itertools.zip_longest"
  },
  "type": "import"
 },
 "xarray.tests.test_units.zip_mappings": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_utils.CFTimeIndex": {
  "data": {
   "shadows": "xarray.coding.cftimeindex.CFTimeIndex"
  },
  "type": "import"
 },
 "xarray.tests.test_utils.Hashable": {
  "data": {
   "shadows": "typing.Hashable"
  },
  "type": "import"
 },
 "xarray.tests.test_utils.TestAlias": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "xarray.tests.test_utils.TestAlias.test": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "Warning",
    "old_method",
    "xarray.core.utils.alias",
    "xarray.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.TestAlias.test.new_method": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "xarray.tests.test_utils.TestArrayEquiv": {
  "data": {
   "lineno": 90
  },
  "type": "class"
 },
 "xarray.tests.test_utils.TestArrayEquiv.test_0d": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "xarray.core.duck_array_ops.array_equiv"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.TestDictionaries": {
  "data": {
   "lineno": 99
  },
  "type": "class"
 },
 "xarray.tests.test_utils.TestDictionaries.setup": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "xarray.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.TestDictionaries.test_compat_dict_intersection": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "xarray.core.utils.compat_dict_intersection"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.TestDictionaries.test_compat_dict_union": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.core.utils.compat_dict_union"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.TestDictionaries.test_dict_equiv": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "dict",
    "numpy.arange",
    "numpy.array",
    "numpy.inf",
    "numpy.nan",
    "xarray.core.utils.dict_equiv"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.TestDictionaries.test_equivalent": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.nan",
    "numpy.zeros",
    "xarray.core.utils.equivalent"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.TestDictionaries.test_frozen": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "repr",
    "xarray.core.utils.Frozen",
    "xarray.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.TestDictionaries.test_safe": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "xarray.core.utils.update_safety_check"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.TestDictionaries.test_sorted_keys_dict": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "list",
    "repr",
    "xarray.core.utils.SortedKeysDict"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.TestDictionaries.test_unsafe": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ValueError",
    "xarray.core.utils.update_safety_check",
    "xarray.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.Test_hashable": {
  "data": {
   "lineno": 238
  },
  "type": "class"
 },
 "xarray.tests.test_utils.Test_hashable.test_hashable": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "xarray.core.utils.hashable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.Test_is_uniform_and_sorted": {
  "data": {
   "lineno": 218
  },
  "type": "class"
 },
 "xarray.tests.test_utils.Test_is_uniform_and_sorted.test_not_sorted_not_uniform": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "xarray.core.utils.is_uniform_spaced"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.Test_is_uniform_and_sorted.test_not_sorted_uniform": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "xarray.core.utils.is_uniform_spaced"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.Test_is_uniform_and_sorted.test_relative_tolerance": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "xarray.core.utils.is_uniform_spaced"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.Test_is_uniform_and_sorted.test_sorted_not_uniform": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "xarray.core.utils.is_uniform_spaced"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.Test_is_uniform_and_sorted.test_sorted_uniform": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "numpy.arange",
    "xarray.core.utils.is_uniform_spaced"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.Test_is_uniform_and_sorted.test_two_numbers": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "xarray.core.utils.is_uniform_spaced"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.tests.test_utils.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "xarray.tests.test_utils.duck_array_ops": {
  "data": {
   "shadows": "xarray.core.duck_array_ops"
  },
  "type": "import"
 },
 "xarray.tests.test_utils.either_dict_or_kwargs": {
  "data": {
   "shadows": "xarray.core.utils.either_dict_or_kwargs"
  },
  "type": "import"
 },
 "xarray.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_utils.test_dask_array_is_scalar": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "dask.array.arange",
    "xarray.core.utils.is_scalar"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.test_either_dict_or_kwargs": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "xarray.core.utils.either_dict_or_kwargs",
    "xarray.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.test_hidden_key_dict": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "xarray.core.utils.HiddenKeyDict",
    "xarray.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.test_infix_dims": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "list",
    "xarray.core.utils.infix_dims",
    "xarray.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.test_infix_dims_errors": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "xarray.core.utils.infix_dims",
    "xarray.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.test_is_grib_path": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "xarray.core.utils.is_grib_path"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.test_is_remote_uri": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "xarray.core.utils.is_remote_uri"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.test_multiindex_from_product_levels": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "pandas.Index",
    "pandas.MultiIndex.from_product",
    "xarray.core.utils.multiindex_from_product_levels"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.test_multiindex_from_product_levels_non_unique": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "pandas.Index",
    "xarray.core.utils.multiindex_from_product_levels"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.test_repr_object": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "isinstance",
    "repr",
    "str",
    "typing.Hashable",
    "xarray.core.utils.ReprObject"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.test_repr_object_magic_methods": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "hash",
    "xarray.core.utils.ReprObject"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.test_safe_cast_to_index": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.arange",
    "numpy.timedelta64",
    "object",
    "pandas.Index",
    "pandas.date_range",
    "xarray.core.utils.safe_cast_to_index"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.test_safe_cast_to_index_cftimeindex": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "_all_cftime_date_types",
    "assert_array_equal",
    "date_type",
    "isinstance",
    "numpy.array",
    "range",
    "type",
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.core.utils.safe_cast_to_index"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.test_safe_cast_to_index_datetime_datetime": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "assert_array_equal",
    "datetime.datetime",
    "isinstance",
    "numpy.array",
    "pandas.Index",
    "range",
    "xarray.core.utils.safe_cast_to_index"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.utils": {
  "data": {
   "shadows": "xarray.core.utils"
  },
  "type": "import"
 },
 "xarray.tests.test_variable": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_variable.BasicIndexer": {
  "data": {
   "shadows": "xarray.core.indexing.BasicIndexer"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.Coordinate": {
  "data": {
   "shadows": "xarray.Coordinate"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.CopyOnWriteArray": {
  "data": {
   "shadows": "xarray.core.indexing.CopyOnWriteArray"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.DaskIndexingAdapter": {
  "data": {
   "shadows": "xarray.core.indexing.DaskIndexingAdapter"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.Dataset": {
  "data": {
   "shadows": "xarray.Dataset"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.IndexVariable": {
  "data": {
   "shadows": "xarray.IndexVariable"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.LazilyOuterIndexedArray": {
  "data": {
   "shadows": "xarray.core.indexing.LazilyOuterIndexedArray"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.MemoryCachedArray": {
  "data": {
   "shadows": "xarray.core.indexing.MemoryCachedArray"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.NDArrayMixin": {
  "data": {
   "shadows": "xarray.core.utils.NDArrayMixin"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.NumpyIndexingAdapter": {
  "data": {
   "shadows": "xarray.core.indexing.NumpyIndexingAdapter"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.OuterIndexer": {
  "data": {
   "shadows": "xarray.core.indexing.OuterIndexer"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.PandasIndexAdapter": {
  "data": {
   "shadows": "xarray.core.indexing.PandasIndexAdapter"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.TestAsCompatibleData": {
  "data": {
   "lineno": 2146
  },
  "type": "class"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_converted_types": {
  "data": {
   "lineno": 2158,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.asarray",
    "numpy.ndarray",
    "pandas.DataFrame",
    "type",
    "xarray.core.variable.as_compatible_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_datetime": {
  "data": {
   "lineno": 2179,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.array",
    "numpy.asarray",
    "numpy.datetime64",
    "numpy.dtype",
    "numpy.ndarray",
    "source_ndarray",
    "type",
    "xarray.core.variable.as_compatible_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_full_like": {
  "data": {
   "lineno": 2205,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "bool",
    "raises_regex",
    "xarray.Variable",
    "xarray.core.common.full_like"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_full_like_dask": {
  "data": {
   "lineno": 2224,
   "symbols_in_volume": [
    "bool",
    "check",
    "isinstance",
    "numpy.full_like",
    "numpy.ndarray",
    "tuple",
    "xarray.Variable",
    "xarray.core.common.full_like"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_full_like_dask.check": {
  "data": {
   "lineno": 2230,
   "symbols_in_volume": [
    "assert_array_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_masked_array": {
  "data": {
   "lineno": 2165,
   "symbols_in_volume": [
    "assert_array_equal",
    "float",
    "int",
    "numpy.arange",
    "numpy.dtype",
    "numpy.ma.MaskedArray",
    "numpy.nan",
    "xarray.core.variable.as_compatible_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_ones_like": {
  "data": {
   "lineno": 2263,
   "symbols_in_volume": [
    "assert_identical",
    "int",
    "xarray.Variable",
    "xarray.core.common.full_like",
    "xarray.core.common.ones_like"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_unchanged_types": {
  "data": {
   "lineno": 2147,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.asarray",
    "pandas.date_range",
    "source_ndarray",
    "t",
    "xarray.core.indexing.LazilyOuterIndexedArray",
    "xarray.core.indexing.PandasIndexAdapter",
    "xarray.core.variable.as_compatible_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_unsupported_type": {
  "data": {
   "lineno": 2270,
   "symbols_in_volume": [
    "CustomArray",
    "CustomIndexable",
    "isinstance",
    "numpy.arange",
    "numpy.ndarray",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_unsupported_type.CustomArray": {
  "data": {
   "lineno": 2272,
   "symbols_in_volume": [
    "xarray.core.utils.NDArrayMixin"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_unsupported_type.CustomArray.__init__": {
  "data": {
   "lineno": 2273
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_unsupported_type.CustomIndexable": {
  "data": {
   "lineno": 2276,
   "symbols_in_volume": [
    "xarray.core.indexing.ExplicitlyIndexed"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_zeros_like": {
  "data": {
   "lineno": 2256,
   "symbols_in_volume": [
    "assert_identical",
    "int",
    "xarray.Variable",
    "xarray.core.common.full_like",
    "xarray.core.common.zeros_like"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestBackendIndexing": {
  "data": {
   "lineno": 2294
  },
  "type": "class"
 },
 "xarray.tests.test_variable.TestBackendIndexing.check_orthogonal_indexing": {
  "data": {
   "lineno": 2301,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestBackendIndexing.check_vectorized_indexing": {
  "data": {
   "lineno": 2304,
   "symbols_in_volume": [
    "numpy.allclose",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestBackendIndexing.setUp": {
  "data": {
   "lineno": 2297,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.random.random",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestBackendIndexing.test_CopyOnWriteArray": {
  "data": {
   "lineno": 2335,
   "symbols_in_volume": [
    "xarray.Variable",
    "xarray.core.indexing.CopyOnWriteArray",
    "xarray.core.indexing.LazilyOuterIndexedArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestBackendIndexing.test_DaskIndexingAdapter": {
  "data": {
   "lineno": 2355,
   "symbols_in_volume": [
    "xarray.Variable",
    "xarray.core.indexing.CopyOnWriteArray",
    "xarray.core.indexing.DaskIndexingAdapter",
    "xarray.tests.test_variable.dask.array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestBackendIndexing.test_LazilyOuterIndexedArray": {
  "data": {
   "lineno": 2319,
   "symbols_in_volume": [
    "xarray.Variable",
    "xarray.core.indexing.LazilyOuterIndexedArray",
    "xarray.core.indexing.NumpyIndexingAdapter"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestBackendIndexing.test_MemoryCachedArray": {
  "data": {
   "lineno": 2346,
   "symbols_in_volume": [
    "xarray.Variable",
    "xarray.core.indexing.CopyOnWriteArray",
    "xarray.core.indexing.MemoryCachedArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestBackendIndexing.test_NumpyIndexingAdapter": {
  "data": {
   "lineno": 2309,
   "symbols_in_volume": [
    "TypeError",
    "raises_regex",
    "xarray.Variable",
    "xarray.core.indexing.NumpyIndexingAdapter"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable": {
  "data": {
   "lineno": 2009,
   "symbols_in_volume": [
    "staticmethod",
    "xarray.IndexVariable",
    "xarray.tests.test_variable.VariableSubclassobjects"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_coarsen_2d": {
  "data": {
   "lineno": 2141,
   "symbols_in_volume": [
    "super",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_concat_multiindex": {
  "data": {
   "lineno": 2076,
   "symbols_in_volume": [
    "isinstance",
    "pandas.MultiIndex",
    "pandas.MultiIndex.from_product",
    "xarray.IndexVariable",
    "xarray.IndexVariable.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_concat_periods": {
  "data": {
   "lineno": 2063,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "pandas.PeriodIndex",
    "pandas.period_range",
    "range",
    "xarray.IndexVariable",
    "xarray.IndexVariable.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_coordinate_alias": {
  "data": {
   "lineno": 2084,
   "symbols_in_volume": [
    "Warning",
    "isinstance",
    "xarray.Coordinate",
    "xarray.IndexVariable",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_data": {
  "data": {
   "lineno": 2026,
   "symbols_in_volume": [
    "TypeError",
    "assert_array_equal",
    "float",
    "isinstance",
    "numpy.arange",
    "numpy.ndarray",
    "raises_regex",
    "xarray.IndexVariable",
    "xarray.core.indexing.PandasIndexAdapter"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_datetime64": {
  "data": {
   "lineno": 2089,
   "symbols_in_volume": [
    "numpy.array",
    "xarray.IndexVariable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_get_level_variable": {
  "data": {
   "lineno": 2052,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "pandas.MultiIndex.from_product",
    "raises_regex",
    "xarray.IndexVariable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_getitem_advanced": {
  "data": {
   "lineno": 2101,
   "symbols_in_volume": [
    "super",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_getitem_error": {
  "data": {
   "lineno": 2097,
   "symbols_in_volume": [
    "super",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_getitem_fancy": {
  "data": {
   "lineno": 2105,
   "symbols_in_volume": [
    "super",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_getitem_uint": {
  "data": {
   "lineno": 2109,
   "symbols_in_volume": [
    "super",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_init": {
  "data": {
   "lineno": 2012,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.IndexVariable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_level_names": {
  "data": {
   "lineno": 2043,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_product",
    "xarray.IndexVariable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_multiindex_default_level_names": {
  "data": {
   "lineno": 2021,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_product",
    "xarray.IndexVariable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_name": {
  "data": {
   "lineno": 2036,
   "symbols_in_volume": [
    "AttributeError",
    "xarray.IndexVariable",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_pad": {
  "data": {
   "lineno": 2113,
   "symbols_in_volume": [
    "super",
    "xarray.tests.test_variable._PAD_XR_NP_ARGS",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_pad_constant_values": {
  "data": {
   "lineno": 2132,
   "symbols_in_volume": [
    "super",
    "xarray.tests.test_variable._PAD_XR_NP_ARGS",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_rolling_window": {
  "data": {
   "lineno": 2137,
   "symbols_in_volume": [
    "super",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_to_index": {
  "data": {
   "lineno": 2016,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Index",
    "xarray.IndexVariable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "staticmethod",
    "xarray.Variable",
    "xarray.tests.test_variable.VariableSubclassobjects"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_variable.TestVariable.setup": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.random.random",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_0d_datetime": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "numpy.datetime64",
    "numpy.dtype",
    "pandas.Timestamp",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_0d_str": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": [
    "bytes",
    "numpy.dtype",
    "numpy.string_",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_0d_timedelta": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.timedelta64",
    "pandas.to_timedelta",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_as_variable": {
  "data": {
   "lineno": 1017,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "assert_identical",
    "datetime.datetime",
    "datetime.timedelta",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "raises_regex",
    "range",
    "tuple",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.core.variable.as_variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_big_endian_reduce": {
  "data": {
   "lineno": 1636,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.ones",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_binary_ops_keep_attrs": {
  "data": {
   "lineno": 1722,
   "symbols_in_volume": [
    "numpy.random.randn",
    "xarray.Variable",
    "xarray.set_options"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_broadcast_equals": {
  "data": {
   "lineno": 980,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_broadcasting_failures": {
  "data": {
   "lineno": 1522,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "raises_regex",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_broadcasting_math": {
  "data": {
   "lineno": 1499,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.einsum",
    "numpy.random.randn",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_coarsen": {
  "data": {
   "lineno": 1862,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "numpy.max",
    "numpy.mean",
    "numpy.median"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_coarsen_2d": {
  "data": {
   "lineno": 1885,
   "symbols_in_volume": [
    "assert_allclose",
    "assert_equal",
    "dict",
    "numpy.arange",
    "numpy.float32",
    "numpy.nan",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_coarsen_keep_attrs": {
  "data": {
   "lineno": 1937,
   "symbols_in_volume": [
    "getattr",
    "numpy.linspace",
    "xarray.Variable",
    "xarray.core.duck_array_ops",
    "xarray.set_options"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_count": {
  "data": {
   "lineno": 1734,
   "symbols_in_volume": [
    "assert_identical",
    "int",
    "numpy.array",
    "numpy.nan",
    "object",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_data_and_values": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "ValueError",
    "assert_array_equal",
    "numpy.random.random",
    "source_ndarray",
    "xarray.Variable",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_datetime64_conversion_scalar": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.datetime64",
    "numpy.dtype",
    "pandas.Timestamp",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_detect_indexer_type": {
  "data": {
   "lineno": 1085,
   "symbols_in_volume": [
    "numpy.random.random",
    "slice",
    "type",
    "xarray.Variable",
    "xarray.core.indexing.BasicIndexer",
    "xarray.core.indexing.OuterIndexer",
    "xarray.core.indexing.VectorizedIndexer"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_equals_and_identical": {
  "data": {
   "lineno": 955,
   "symbols_in_volume": [
    "copy.deepcopy",
    "numpy.nan",
    "numpy.random.rand",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_get_axis_num": {
  "data": {
   "lineno": 1397,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "raises_regex",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_getitem_basic": {
  "data": {
   "lineno": 1192,
   "symbols_in_volume": [
    "assert_array_equal",
    "dict",
    "slice"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_getitem_with_mask_2d_input": {
  "data": {
   "lineno": 1241,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "slice",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_index_0d_numpy_string": {
  "data": {
   "lineno": 1271,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.string_",
    "numpy.unicode_",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_indexer_type": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "assert_indexer_type",
    "numpy.random.random",
    "slice",
    "xarray.Variable",
    "xarray.core.indexing.BasicIndexer",
    "xarray.core.indexing.OuterIndexer",
    "xarray.core.indexing.VectorizedIndexer"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_indexer_type.assert_indexer_type": {
  "data": {
   "lineno": 1129,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_indexing_0d_unicode": {
  "data": {
   "lineno": 1279,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_inplace_math": {
  "data": {
   "lineno": 1531,
   "symbols_in_volume": [
    "ValueError",
    "assert_array_equal",
    "numpy.arange",
    "raises_regex",
    "source_ndarray",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_isel": {
  "data": {
   "lineno": 1249,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "assert_identical",
    "raises_regex",
    "slice",
    "xarray.Variable",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_items": {
  "data": {
   "lineno": 1161,
   "symbols_in_volume": [
    "TypeError",
    "assert_array_equal",
    "assert_identical",
    "enumerate",
    "iter",
    "numpy.all",
    "numpy.arange",
    "numpy.ones",
    "numpy.random.random",
    "raises_regex",
    "range",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_no_conflicts": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_numpy_same_methods": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "float",
    "numpy.arange",
    "numpy.float32",
    "type",
    "xarray.IndexVariable",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_quantile": {
  "data": {
   "lineno": 1565,
   "symbols_in_volume": [
    "_percentile_func",
    "numpy.array",
    "numpy.nanpercentile",
    "numpy.percentile",
    "numpy.testing.assert_allclose",
    "xarray.Variable",
    "xarray.tests.test_variable.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_quantile_chunked_dim_error": {
  "data": {
   "lineno": 1587,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_quantile_dask": {
  "data": {
   "lineno": 1577,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.nanpercentile",
    "numpy.testing.assert_allclose",
    "xarray.Variable",
    "xarray.core.pycompat.dask_array_type",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_quantile_out_of_bounds": {
  "data": {
   "lineno": 1595,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.Variable",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_rank": {
  "data": {
   "lineno": 1610,
   "symbols_in_volume": [
    "ValueError",
    "assert_equal",
    "bottleneck.nanrankdata",
    "bottleneck.rankdata",
    "numpy.nan",
    "numpy.testing.assert_allclose",
    "raises_regex",
    "xarray.Variable",
    "xarray.tests.requires_bottleneck"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_rank_dask_raises": {
  "data": {
   "lineno": 1603,
   "symbols_in_volume": [
    "TypeError",
    "numpy.nan",
    "raises_regex",
    "xarray.Variable",
    "xarray.tests.requires_bottleneck"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_reduce": {
  "data": {
   "lineno": 1544,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "assert_allclose",
    "assert_identical",
    "numpy.mean",
    "numpy.std",
    "raises_regex",
    "xarray.Variable",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_reduce_funcs": {
  "data": {
   "lineno": 1643,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.array",
    "numpy.mean",
    "numpy.nan",
    "pandas.Timestamp",
    "pandas.date_range",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_reduce_keep_attrs": {
  "data": {
   "lineno": 1707,
   "symbols_in_volume": [
    "len",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_reduce_keepdims": {
  "data": {
   "lineno": 1665,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.mean",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_reduce_keepdims_dask": {
  "data": {
   "lineno": 1689,
   "symbols_in_volume": [
    "assert_identical",
    "isinstance",
    "numpy.mean",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_repr": {
  "data": {
   "lineno": 1067,
   "symbols_in_volume": [
    "repr",
    "textwrap.dedent",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_repr_lazy_data": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange",
    "repr",
    "xarray.Variable",
    "xarray.core.indexing.LazilyOuterIndexedArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_roll": {
  "data": {
   "lineno": 1326,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "raises_regex",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_roll_consistency": {
  "data": {
   "lineno": 1344,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.random.randn",
    "numpy.roll",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_set_dims": {
  "data": {
   "lineno": 1406,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "raises_regex",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_set_dims_object_dtype": {
  "data": {
   "lineno": 1427,
   "symbols_in_volume": [
    "numpy.empty",
    "object",
    "range",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_setitem": {
  "data": {
   "lineno": 1751,
   "symbols_in_volume": [
    "assert_array_equal",
    "dict",
    "numpy.ones_like",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_setitem_fancy": {
  "data": {
   "lineno": 1769,
   "symbols_in_volume": [
    "ValueError",
    "assert_array_equal",
    "assert_assigned_2d",
    "assert_identical",
    "dict",
    "int",
    "numpy.arange",
    "numpy.ones",
    "numpy.ones_like",
    "numpy.random.randn",
    "numpy.zeros",
    "raises_regex",
    "slice",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_setitem_fancy.assert_assigned_2d": {
  "data": {
   "lineno": 1771,
   "symbols_in_volume": [
    "assert_array_equal",
    "dict",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_shift": {
  "data": {
   "lineno": 1285,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "numpy.nan",
    "raises_regex",
    "xarray.Variable",
    "xarray.core.dtypes.NA",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_shift2d": {
  "data": {
   "lineno": 1321,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_squeeze": {
  "data": {
   "lineno": 1383,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "raises_regex",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_stack": {
  "data": {
   "lineno": 1436,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_stack_errors": {
  "data": {
   "lineno": 1453,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_stack_unstack_consistency": {
  "data": {
   "lineno": 1494,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_timedelta64_conversion_scalar": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.dtype",
    "numpy.timedelta64",
    "pandas.Timedelta",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_transpose": {
  "data": {
   "lineno": 1353,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.einsum",
    "numpy.random.randn",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_transpose_0d": {
  "data": {
   "lineno": 1370,
   "symbols_in_volume": [
    "numpy.datetime64",
    "numpy.timedelta64",
    "object",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_unstack": {
  "data": {
   "lineno": 1461,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_unstack_2d": {
  "data": {
   "lineno": 1484,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_unstack_errors": {
  "data": {
   "lineno": 1475,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariableWithDask": {
  "data": {
   "lineno": 1960,
   "symbols_in_volume": [
    "staticmethod",
    "xarray.Variable",
    "xarray.tests.test_variable.VariableSubclassobjects"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_variable.TestVariableWithDask.test_0d_object_array_with_list": {
  "data": {
   "lineno": 1964,
   "symbols_in_volume": [
    "super",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariableWithDask.test_array_interface": {
  "data": {
   "lineno": 1968,
   "symbols_in_volume": [
    "super",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariableWithDask.test_copy_index": {
  "data": {
   "lineno": 1973,
   "symbols_in_volume": [
    "super",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariableWithDask.test_eq_all_dtypes": {
  "data": {
   "lineno": 1977,
   "symbols_in_volume": [
    "super",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariableWithDask.test_getitem_1d_fancy": {
  "data": {
   "lineno": 1984,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariableWithDask.test_getitem_fancy": {
  "data": {
   "lineno": 1981,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariableWithDask.test_getitem_with_mask_nd_indexer": {
  "data": {
   "lineno": 1987,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Variable",
    "xarray.tests.test_variable.dask.array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariableWithSparse": {
  "data": {
   "lineno": 1998
  },
  "type": "class"
 },
 "xarray.tests.test_variable.TestVariableWithSparse.test_as_sparse": {
  "data": {
   "lineno": 2002,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.Variable": {
  "data": {
   "shadows": "xarray.Variable"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.VariableSubclassobjects": {
  "data": {
   "lineno": 50
  },
  "type": "class"
 },
 "xarray.tests.test_variable.VariableSubclassobjects._assertIndexedLikeNDArray": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "type",
    "xarray.tests.test_variable.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.example_1d_objects": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.float32",
    "object",
    "pandas.date_range",
    "range"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_0d_object_array_with_list": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.empty",
    "object"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_0d_time_data": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "numpy.datetime64",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_1d_math": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "abs",
    "assert_array_equal",
    "assert_identical",
    "float",
    "isinstance",
    "numpy.arange",
    "numpy.ones",
    "xarray.IndexVariable",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_1d_reduce": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "type",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test___array__": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_aggregate_complex": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "assert_allclose",
    "numpy.nan",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_array_interface": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "assert_array_equal",
    "assert_identical",
    "float",
    "isinstance",
    "numpy.arange",
    "numpy.asarray",
    "numpy.sin",
    "xarray.IndexVariable",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_attrs": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_concat": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "numpy.arange",
    "numpy.array",
    "numpy.random.random",
    "raises_regex",
    "xarray.Variable",
    "xarray.Variable.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_concat_attrs": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.ones",
    "xarray.Variable.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_concat_fixed_len_str": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.array",
    "xarray.Variable",
    "xarray.Variable.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_concat_mixed_dtypes": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.array",
    "object",
    "xarray.Variable",
    "xarray.Variable.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_concat_number_strings": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "str",
    "xarray.Variable",
    "xarray.Variable.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_copy": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "assert_identical",
    "copy.copy",
    "float",
    "int",
    "numpy.arange",
    "source_ndarray",
    "str",
    "type",
    "xarray.Variable",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_copy_index": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "assert_array_equal",
    "isinstance",
    "pandas.MultiIndex",
    "pandas.MultiIndex.from_product",
    "xarray.core.indexing.PandasIndexAdapter"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_copy_index_with_data": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "xarray.IndexVariable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_copy_index_with_data_errors": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "raises_regex",
    "xarray.IndexVariable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_copy_with_data": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.array",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_copy_with_data_errors": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_datetime64_conversion": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.dtype",
    "pandas.date_range",
    "source_ndarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_encoding_preserved": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "assert_identical",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_eq_all_dtypes": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_equals_all_dtypes": {
  "data": {
   "lineno": 391
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_getitem_0d_array": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_getitem_1d": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "assert_array_equal",
    "dict",
    "numpy.array",
    "slice",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_getitem_1d_fancy": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "IndexError",
    "assert_array_equal",
    "assert_identical",
    "numpy.array",
    "raises_regex",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_getitem_advanced": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "IndexError",
    "assert_array_equal",
    "dict",
    "numpy.array",
    "raises_regex",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_getitem_dict": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_getitem_error": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "IndexError",
    "dict",
    "numpy.arange",
    "raises_regex",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_getitem_fancy": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "assert_array_equal",
    "assert_identical",
    "dict",
    "numpy.arange",
    "numpy.newaxis",
    "numpy.zeros",
    "slice",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_getitem_uint": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "numpy.uint64"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_getitem_uint_1d": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_getitem_with_mask": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "slice",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_getitem_with_mask_nd_indexer": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_getitem_with_mask_size_zero": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_index_0d_datetime": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.datetime64",
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_index_0d_float": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float_"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_index_0d_int": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "numpy.int32",
    "numpy.int_"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_index_0d_not_a_time": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "numpy.datetime64"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_index_0d_object": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "HashableItemWrapper"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_index_0d_object.HashableItemWrapper": {
  "data": {
   "lineno": 217
  },
  "type": "class"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_index_0d_object.HashableItemWrapper.__eq__": {
  "data": {
   "lineno": 221
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_index_0d_object.HashableItemWrapper.__hash__": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_index_0d_object.HashableItemWrapper.__init__": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_index_0d_object.HashableItemWrapper.__repr__": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_index_0d_string": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_index_0d_timedelta64": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.timedelta64",
    "pandas.to_timedelta"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_index_and_concat_datetime": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "assert_array_equal",
    "pandas.date_range",
    "range",
    "xarray.Variable.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_load": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_multiindex": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "assert_identical",
    "list",
    "pandas.MultiIndex.from_product",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_object_conversion": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "numpy.arange",
    "object",
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_pad": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "assert_array_equal",
    "isinstance",
    "numpy.arange",
    "numpy.pad",
    "type",
    "xarray.tests.test_variable._PAD_XR_NP_ARGS",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_pad_constant_values": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "assert_array_equal",
    "bool",
    "float",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.full_like",
    "numpy.nan",
    "numpy.pad",
    "type",
    "xarray.tests.test_variable._PAD_XR_NP_ARGS",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_pandas_cateogrical_dtype": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Categorical",
    "print"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_pandas_data": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "assert_identical",
    "pandas.Index",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_pandas_datetime64_with_tz": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "pandas.date_range",
    "print",
    "str",
    "xarray.tests.test_variable.pytz"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_pandas_period_index": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.period_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_properties": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "assert_array_equal",
    "float",
    "len",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_real_and_imag": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "abs",
    "assert_allclose",
    "assert_identical",
    "numpy.arange",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_replace": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "assert_array_equal",
    "assert_identical",
    "numpy.arange",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_rolling_window": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "ValueError",
    "assert_array_equal",
    "isinstance",
    "numpy.arange",
    "numpy.ndarray",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_timedelta64_conversion": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.dtype",
    "pandas.timedelta_range",
    "source_ndarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VectorizedIndexer": {
  "data": {
   "shadows": "xarray.core.indexing.VectorizedIndexer"
  },
  "type": "import"
 },
 "xarray.tests.test_variable._PAD_XR_NP_ARGS": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "xarray.tests.test_variable.as_compatible_data": {
  "data": {
   "shadows": "xarray.core.variable.as_compatible_data"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.as_variable": {
  "data": {
   "shadows": "xarray.core.variable.as_variable"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.bn": {
  "data": {
   "shadows": "bottleneck"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.dask.array": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.dask_array_type": {
  "data": {
   "shadows": "xarray.core.pycompat.dask_array_type"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.dtypes": {
  "data": {
   "shadows": "xarray.core.dtypes"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.duck_array_ops": {
  "data": {
   "shadows": "xarray.core.duck_array_ops"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.full_like": {
  "data": {
   "shadows": "xarray.core.common.full_like"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.indexing": {
  "data": {
   "shadows": "xarray.core.indexing"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.ones_like": {
  "data": {
   "shadows": "xarray.core.common.ones_like"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.requires_bottleneck": {
  "data": {
   "shadows": "xarray.tests.requires_bottleneck"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.set_options": {
  "data": {
   "shadows": "xarray.set_options"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.test_raise_no_warning_for_nan_in_binary_ops": {
  "data": {
   "lineno": 2288,
   "symbols_in_volume": [
    "len",
    "numpy.NaN",
    "xarray.Variable",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.zeros_like": {
  "data": {
   "shadows": "xarray.core.common.zeros_like"
  },
  "type": "import"
 },
 "xarray.tests.test_weighted": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_weighted.DataArray": {
  "data": {
   "shadows": "xarray.DataArray"
  },
  "type": "import"
 },
 "xarray.tests.test_weighted.assert_allclose": {
  "data": {
   "shadows": "xarray.tests.assert_allclose"
  },
  "type": "import"
 },
 "xarray.tests.test_weighted.assert_equal": {
  "data": {
   "shadows": "xarray.tests.assert_equal"
  },
  "type": "import"
 },
 "xarray.tests.test_weighted.expected_weighted": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "xarray.tests.test_weighted.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_weighted.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_weighted.raises_regex": {
  "data": {
   "shadows": "xarray.tests.raises_regex"
  },
  "type": "import"
 },
 "xarray.tests.test_weighted.test_weighted_mean_bool": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_weighted.test_weighted_mean_equal_weights": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.full_like",
    "xarray.tests.assert_equal",
    "xarray.tests.test_weighted.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_weighted.test_weighted_mean_nan": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.test_weighted.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_weighted.test_weighted_mean_no_nan": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.test_weighted.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_weighted.test_weighted_non_DataArray_weights": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ValueError",
    "xarray.DataArray",
    "xarray.tests.raises_regex",
    "xarray.tests.test_weighted.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_weighted.test_weighted_operations_3D": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "int",
    "numpy.NaN",
    "numpy.random.choice",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.test_weighted.expected_weighted",
    "xarray.tests.test_weighted.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_weighted.test_weighted_operations_different_shapes": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "getattr",
    "int",
    "numpy.NaN",
    "numpy.random.choice",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.test_weighted.expected_weighted",
    "xarray.tests.test_weighted.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_weighted.test_weighted_operations_keep_attr": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.test_weighted.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_weighted.test_weighted_operations_keep_attr_da_in_ds": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.test_weighted.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_weighted.test_weighted_operations_nonequal_coords": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.test_weighted.expected_weighted",
    "xarray.tests.test_weighted.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_weighted.test_weighted_sum_equal_weights": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.full_like",
    "xarray.tests.assert_equal",
    "xarray.tests.test_weighted.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_weighted.test_weighted_sum_nan": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.test_weighted.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_weighted.test_weighted_sum_no_nan": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.test_weighted.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_weighted.test_weighted_sum_of_weights_bool": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_weighted.test_weighted_sum_of_weights_nan": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.test_weighted.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_weighted.test_weighted_sum_of_weights_no_nan": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.test_weighted.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_weighted.test_weighted_weights_nan_raises": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.test_weighted.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_weighted.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.utils": {
  "data": {
   "shadows": "xarray.core.utils"
  },
  "type": "import"
 },
 "xarray.tests.version": {
  "data": {
   "shadows": "distutils.version"
  },
  "type": "import"
 },
 "xarray.tests.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.tests.xarray.testing": {
  "data": {
   "shadows": "xarray.testing"
  },
  "type": "import"
 },
 "xarray.tutorial": {
  "data": {
   "symbols_in_volume": [
    "os.sep.join"
   ]
  },
  "type": "module"
 },
 "xarray.tutorial._default_cache_dir": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "xarray.tutorial._open_dataset": {
  "data": {
   "shadows": "open_dataset"
  },
  "type": "import"
 },
 "xarray.tutorial._os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "xarray.tutorial.file_md5_checksum": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "open",
    "xarray.tutorial.hashlib"
   ]
  },
  "type": "function"
 },
 "xarray.tutorial.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "xarray.tutorial.load_dataset": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "xarray.tutorial.open_dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tutorial.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tutorial.open_dataset": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "OSError",
    "open",
    "os.mkdir",
    "os.path.exists",
    "os.path.expanduser",
    "os.path.isdir",
    "os.path.splitext",
    "os.remove",
    "os.sep.join",
    "urllib.request.urlretrieve",
    "xarray.tutorial._default_cache_dir",
    "xarray.tutorial.file_md5_checksum"
   ]
  },
  "type": "function"
 },
 "xarray.tutorial.scatter_example_dataset": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "DataArray",
    "Dataset",
    "numpy.arange",
    "numpy.linspace",
    "numpy.random.randn",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "xarray.tutorial.urlretrieve": {
  "data": {
   "shadows": "urllib.request.urlretrieve"
  },
  "type": "import"
 },
 "xarray.ufuncs": {
  "data": {
   "symbols_in_volume": [
    "globals",
    "numpy.ndarray",
    "xarray.ufuncs.__all__",
    "xarray.ufuncs._create_op",
    "xarray.ufuncs._xarray_types"
   ]
  },
  "type": "module"
 },
 "xarray.ufuncs._DataArray": {
  "data": {
   "shadows": "DataArray"
  },
  "type": "import"
 },
 "xarray.ufuncs._Dataset": {
  "data": {
   "shadows": "Dataset"
  },
  "type": "import"
 },
 "xarray.ufuncs._GroupBy": {
  "data": {
   "shadows": "GroupBy"
  },
  "type": "import"
 },
 "xarray.ufuncs._UFuncDispatcher": {
  "data": {
   "lineno": 39
  },
  "type": "class"
 },
 "xarray.ufuncs._UFuncDispatcher.__call__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "NotImplemented",
    "PendingDeprecationWarning",
    "TypeError",
    "_dask_or_eager_func",
    "f",
    "isinstance",
    "len",
    "map",
    "reversed",
    "slice",
    "tuple",
    "type",
    "warnings.warn",
    "xarray.ufuncs._dispatch_priority",
    "xarray.ufuncs._xarray_types"
   ]
  },
  "type": "function"
 },
 "xarray.ufuncs._UFuncDispatcher.__init__": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "xarray.ufuncs._Variable": {
  "data": {
   "shadows": "Variable"
  },
  "type": "import"
 },
 "xarray.ufuncs.__all__": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "xarray.ufuncs._create_op": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "getattr",
    "numpy",
    "xarray.ufuncs._UFuncDispatcher",
    "xarray.ufuncs._dedent",
    "xarray.ufuncs._remove_unused_reference_labels",
    "xarray.ufuncs._skip_signature"
   ]
  },
  "type": "function"
 },
 "xarray.ufuncs._dask_array_type": {
  "data": {
   "shadows": "dask_array_type"
  },
  "type": "import"
 },
 "xarray.ufuncs._dedent": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "xarray.ufuncs.textwrap"
   ]
  },
  "type": "function"
 },
 "xarray.ufuncs._dispatch_order": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "xarray.ufuncs._dispatch_priority": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "xarray.ufuncs._dispatch_order"
   ]
  },
  "type": "function"
 },
 "xarray.ufuncs._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.ufuncs._remove_unused_reference_labels": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "isinstance",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.ufuncs._skip_signature": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.ufuncs._warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.ufuncs._xarray_types": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "xarray.ufuncs.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "xarray.util": {
  "data": {},
  "type": "module"
 },
 "xarray.util.print_versions": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "xarray.util.print_versions.show_versions"
   ]
  },
  "type": "module"
 },
 "xarray.util.print_versions.get_sys_info": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "xarray.util.print_versions.locale",
    "xarray.util.print_versions.os",
    "xarray.util.print_versions.platform",
    "xarray.util.print_versions.struct",
    "xarray.util.print_versions.subprocess",
    "xarray.util.print_versions.sys"
   ]
  },
  "type": "function"
 },
 "xarray.util.print_versions.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "xarray.util.print_versions.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "xarray.util.print_versions.locale": {
  "data": {
   "shadows": "locale"
  },
  "type": "import"
 },
 "xarray.util.print_versions.netCDF4": {
  "data": {
   "shadows": "netCDF4"
  },
  "type": "import"
 },
 "xarray.util.print_versions.netcdf_and_hdf5_versions": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ImportError",
    "xarray.util.print_versions.h5py",
    "xarray.util.print_versions.netCDF4"
   ]
  },
  "type": "function"
 },
 "xarray.util.print_versions.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "xarray.util.print_versions.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "xarray.util.print_versions.show_versions": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "Exception",
    "print",
    "ver_f",
    "xarray.util.print_versions.get_sys_info",
    "xarray.util.print_versions.importlib",
    "xarray.util.print_versions.netcdf_and_hdf5_versions",
    "xarray.util.print_versions.sys"
   ]
  },
  "type": "function"
 },
 "xarray.util.print_versions.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "xarray.util.print_versions.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "xarray.util.print_versions.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 }
}