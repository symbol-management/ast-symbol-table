{
 "xarray": {
  "data": {
   "symbols_in_volume": [
    "get_versions"
   ]
  },
  "type": "module"
 },
 "xarray.__version__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "xarray._version": {
  "data": {},
  "type": "module"
 },
 "xarray._version.get_versions": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "xarray._version.json",
    "xarray._version.version_json"
   ]
  },
  "type": "function"
 },
 "xarray._version.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "xarray._version.version_json": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "xarray.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.backends": {
  "data": {},
  "type": "module"
 },
 "xarray.backends.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "xarray.backends.api": {
  "data": {},
  "type": "module"
 },
 "xarray.backends.api.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "xarray.backends.api.DATAARRAY_NAME": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "xarray.backends.api.DATAARRAY_VARIABLE": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "xarray.backends.api.Nio": {
  "data": {
   "shadows": "Nio"
  },
  "type": "import"
 },
 "xarray.backends.api.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "xarray.backends.api.WRITEABLE_STORES": {
  "data": {
   "lineno": 669
  },
  "type": "constant"
 },
 "xarray.backends.api._MultiFileCloser": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.backends.api._MultiFileCloser.__init__": {
  "data": {
   "lineno": 479
  },
  "type": "function"
 },
 "xarray.backends.api._MultiFileCloser.close": {
  "data": {
   "lineno": 482
  },
  "type": "function"
 },
 "xarray.backends.api._finalize_store": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "xarray.backends.api._get_default_engine": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "is_grib_path",
    "is_remote_uri",
    "xarray.backends.api._get_default_engine_grib",
    "xarray.backends.api._get_default_engine_gz",
    "xarray.backends.api._get_default_engine_netcdf",
    "xarray.backends.api._get_default_engine_remote_uri"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api._get_default_engine_grib": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ImportError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api._get_default_engine_gz": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ImportError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api._get_default_engine_netcdf": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ImportError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api._get_default_engine_remote_uri": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ImportError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api._normalize_path": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "is_remote_uri"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api._protect_dataset_variables_inplace": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "xarray.backends.api._validate_attrs": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "check_attr"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api._validate_attrs.check_attr": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "list",
    "numbers.Number",
    "numpy.ndarray",
    "numpy.number",
    "tuple"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api._validate_dataset_names": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "check_name"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api._validate_dataset_names.check_name": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.backends.api.cfgrib": {
  "data": {
   "shadows": "cfgrib"
  },
  "type": "import"
 },
 "xarray.backends.api.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "xarray.backends.api.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.backends.api.dump_to_store": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "ArrayWriter",
    "encoder",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "xarray.backends.api.netCDF4": {
  "data": {
   "shadows": "netCDF4"
  },
  "type": "import"
 },
 "xarray.backends.api.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.api.open_dataarray": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "xarray.backends.api.DATAARRAY_NAME",
    "xarray.backends.api.DATAARRAY_VARIABLE",
    "xarray.backends.api.open_dataset"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api.open_dataset": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "bytes",
    "close_on_error",
    "isinstance",
    "maybe_decode_store",
    "str",
    "xarray.backends.api._get_default_engine",
    "xarray.backends.api._normalize_path",
    "xarray.backends.api.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api.open_dataset.maybe_decode_store": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "dask.base.tokenize",
    "is_remote_uri",
    "isinstance",
    "xarray.backends.api._protect_dataset_variables_inplace"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api.open_mfdataset": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "_auto_combine",
    "_infer_concat_order_from_positions",
    "dict",
    "getattr",
    "getattr_",
    "glob.glob",
    "is_remote_uri",
    "isinstance",
    "list",
    "open_",
    "preprocess",
    "sorted",
    "str",
    "xarray.backends.api._MultiFileCloser",
    "xarray.backends.api.dask",
    "xarray.backends.api.open_dataset"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "xarray.backends.api.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.backends.api.pydap": {
  "data": {
   "shadows": "pydap"
  },
  "type": "import"
 },
 "xarray.backends.api.save_mfdataset": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "format",
    "isinstance",
    "len",
    "set",
    "type",
    "xarray.backends.api._finalize_store",
    "xarray.backends.api.dask",
    "xarray.backends.api.to_netcdf",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "xarray.backends.api.scipy.io.netcdf": {
  "data": {
   "shadows": "scipy.io.netcdf"
  },
  "type": "import"
 },
 "xarray.backends.api.to_netcdf": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "ArrayWriter",
    "KeyError",
    "NotImplementedError",
    "ValueError",
    "_get_scheduler",
    "any",
    "dict",
    "format",
    "format.upper",
    "io.BytesIO",
    "isinstance",
    "store_open",
    "str",
    "xarray.backends.api.WRITEABLE_STORES",
    "xarray.backends.api._finalize_store",
    "xarray.backends.api._get_default_engine",
    "xarray.backends.api._normalize_path",
    "xarray.backends.api._validate_attrs",
    "xarray.backends.api._validate_dataset_names",
    "xarray.backends.api.dask",
    "xarray.backends.api.dump_to_store"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api.to_zarr": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "ArrayWriter",
    "isinstance",
    "str",
    "xarray.backends.api._finalize_store",
    "xarray.backends.api._validate_attrs",
    "xarray.backends.api._validate_dataset_names",
    "xarray.backends.api.dask",
    "xarray.backends.api.dump_to_store"
   ]
  },
  "type": "function"
 },
 "xarray.backends.api.tokenize": {
  "data": {
   "shadows": "dask.base.tokenize"
  },
  "type": "import"
 },
 "xarray.backends.api.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.backends.cfgrib_": {
  "data": {
   "symbols_in_volume": [
    "SerializableLock"
   ]
  },
  "type": "module"
 },
 "xarray.backends.cfgrib_.CfGribArrayWrapper": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "xarray.backends.cfgrib_.CfGribArrayWrapper.__getitem__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "xarray.backends.cfgrib_.CfGribArrayWrapper.__init__": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "xarray.backends.cfgrib_.CfGribArrayWrapper._getitem": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "xarray.backends.cfgrib_.CfGribDataStore": {
  "data": {
   "lineno": 33
  },
  "type": "class"
 },
 "xarray.backends.cfgrib_.CfGribDataStore.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ensure_lock",
    "xarray.backends.cfgrib_.ECCODES_LOCK",
    "xarray.backends.cfgrib_.cfgrib"
   ]
  },
  "type": "function"
 },
 "xarray.backends.cfgrib_.CfGribDataStore.get_attrs": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "Frozen"
   ]
  },
  "type": "function"
 },
 "xarray.backends.cfgrib_.CfGribDataStore.get_dimensions": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "Frozen"
   ]
  },
  "type": "function"
 },
 "xarray.backends.cfgrib_.CfGribDataStore.get_encoding": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "xarray.backends.cfgrib_.CfGribDataStore.get_variables": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "FrozenOrderedDict"
   ]
  },
  "type": "function"
 },
 "xarray.backends.cfgrib_.CfGribDataStore.open_store_variable": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "Variable",
    "isinstance",
    "numpy.ndarray",
    "xarray.backends.cfgrib_.CfGribArrayWrapper"
   ]
  },
  "type": "function"
 },
 "xarray.backends.cfgrib_.ECCODES_LOCK": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "xarray.backends.cfgrib_.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.backends.cfgrib_.cfgrib": {
  "data": {
   "shadows": "cfgrib"
  },
  "type": "import"
 },
 "xarray.backends.cfgrib_.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.backends.cfgrib_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.cfgrib_.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.backends.common": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "xarray.backends.common.logging"
   ]
  },
  "type": "module"
 },
 "xarray.backends.common.AbstractDataStore": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "collections.Mapping"
   ]
  },
  "type": "class"
 },
 "xarray.backends.common.AbstractDataStore.__enter__": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractDataStore.__exit__": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractDataStore.__getitem__": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractDataStore.__iter__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractDataStore.__len__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractDataStore.attrs": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "FutureWarning",
    "property",
    "xarray.backends.common.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractDataStore.close": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractDataStore.dimensions": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "FutureWarning",
    "property",
    "xarray.backends.common.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractDataStore.get_attrs": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractDataStore.get_dimensions": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractDataStore.get_encoding": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractDataStore.get_variables": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractDataStore.load": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "FrozenOrderedDict",
    "xarray.backends.common._decode_variable_name"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractDataStore.variables": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "FutureWarning",
    "property",
    "xarray.backends.common.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "xarray.backends.common.AbstractDataStore"
   ]
  },
  "type": "class"
 },
 "xarray.backends.common.AbstractWritableDataStore.encode": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore.encode_attribute": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore.encode_variable": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore.set_attribute": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore.set_attributes": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "iteritems"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore.set_dimension": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore.set_dimensions": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict",
    "dict",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore.set_variable": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore.set_variables": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "iteritems",
    "xarray.backends.common._encode_variable_name"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore.store": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "frozenset",
    "xarray.backends.common.ArrayWriter"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore.store_dataset": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "xarray.backends.common.ArrayWriter": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.backends.common.ArrayWriter.__init__": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "xarray.backends.common.ArrayWriter.add": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.ArrayWriter.sync": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "dask.array.store"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.BackendArray": {
  "data": {
   "lineno": 69
  },
  "type": "class"
 },
 "xarray.backends.common.BackendArray.__array__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.asarray",
    "slice"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "xarray.backends.common.NONE_VAR_NAME": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "xarray.backends.common.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "xarray.backends.common.WritableCFDataStore": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "xarray.backends.common.AbstractWritableDataStore"
   ]
  },
  "type": "class"
 },
 "xarray.backends.common.WritableCFDataStore.encode": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "cf_encoder",
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common._decode_variable_name": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "xarray.backends.common.NONE_VAR_NAME"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common._encode_variable_name": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "xarray.backends.common.NONE_VAR_NAME"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.backends.common.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.backends.common.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.backends.common.find_root": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "xarray.backends.common.logger": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "xarray.backends.common.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "xarray.backends.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.common.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.backends.common.robust_getitem": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "Exception",
    "numpy.random.randint",
    "range",
    "xarray.backends.common.logger",
    "xarray.backends.common.time",
    "xarray.backends.common.traceback"
   ]
  },
  "type": "function"
 },
 "xarray.backends.common.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "xarray.backends.common.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "xarray.backends.common.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.backends.file_manager": {
  "data": {
   "symbols_in_volume": [
    "LRUCache",
    "xarray.backends.file_manager.FILE_CACHE"
   ]
  },
  "type": "module"
 },
 "xarray.backends.file_manager.CachingFileManager": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "xarray.backends.file_manager.FileManager"
   ]
  },
  "type": "class"
 },
 "xarray.backends.file_manager.CachingFileManager.__del__": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "RuntimeWarning",
    "acquire",
    "xarray.backends.file_manager.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.backends.file_manager.CachingFileManager.__getstate__": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "xarray.backends.file_manager.CachingFileManager.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "list",
    "xarray.backends.file_manager.FILE_CACHE",
    "xarray.backends.file_manager.REF_COUNTS",
    "xarray.backends.file_manager._DEFAULT_MODE",
    "xarray.backends.file_manager._RefCounter",
    "xarray.backends.file_manager.threading"
   ]
  },
  "type": "function"
 },
 "xarray.backends.file_manager.CachingFileManager.__repr__": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "map",
    "repr",
    "type",
    "xarray.backends.file_manager._DEFAULT_MODE"
   ]
  },
  "type": "function"
 },
 "xarray.backends.file_manager.CachingFileManager.__setstate__": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "xarray.backends.file_manager.CachingFileManager._make_key": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "sorted",
    "tuple",
    "xarray.backends.file_manager._HashedSequence"
   ]
  },
  "type": "function"
 },
 "xarray.backends.file_manager.CachingFileManager._optional_lock": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "xarray.backends.file_manager.contextlib"
   ]
  },
  "type": "function"
 },
 "xarray.backends.file_manager.CachingFileManager.acquire": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "KeyError",
    "xarray.backends.file_manager._DEFAULT_MODE"
   ]
  },
  "type": "function"
 },
 "xarray.backends.file_manager.CachingFileManager.close": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "xarray.backends.file_manager.DummyFileManager": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "xarray.backends.file_manager.FileManager"
   ]
  },
  "type": "class"
 },
 "xarray.backends.file_manager.DummyFileManager.__init__": {
  "data": {
   "lineno": 280
  },
  "type": "function"
 },
 "xarray.backends.file_manager.DummyFileManager.acquire": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "xarray.backends.file_manager.DummyFileManager.close": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "xarray.backends.file_manager.FILE_CACHE": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "xarray.backends.file_manager.FileManager": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.backends.file_manager.FileManager.acquire": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "xarray.backends.file_manager.FileManager.close": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "xarray.backends.file_manager.REF_COUNTS": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "xarray.backends.file_manager._DEFAULT_MODE": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "xarray.backends.file_manager._HashedSequence": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "class"
 },
 "xarray.backends.file_manager._HashedSequence.__hash__": {
  "data": {
   "lineno": 273
  },
  "type": "function"
 },
 "xarray.backends.file_manager._HashedSequence.__init__": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "xarray.backends.file_manager._RefCounter": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.backends.file_manager._RefCounter.__init__": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "xarray.backends.file_manager.threading"
   ]
  },
  "type": "function"
 },
 "xarray.backends.file_manager._RefCounter.decrement": {
  "data": {
   "lineno": 250
  },
  "type": "function"
 },
 "xarray.backends.file_manager._RefCounter.increment": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "xarray.backends.file_manager.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "xarray.backends.file_manager.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "xarray.backends.file_manager.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.backends.h5netcdf_": {
  "data": {
   "symbols_in_volume": [
    "xarray.backends.h5netcdf_.functools"
   ]
  },
  "type": "module"
 },
 "xarray.backends.h5netcdf_.H5NetCDFArrayWrapper": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "xarray.backends.h5netcdf_.H5NetCDFArrayWrapper.__getitem__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFArrayWrapper._getitem": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.ndarray",
    "tuple"
   ]
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore": {
  "data": {
   "lineno": 71
  },
  "type": "class"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.__init__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "CachingFileManager",
    "ValueError",
    "combine_locks",
    "dict",
    "ensure_lock",
    "format",
    "get_write_lock",
    "xarray.backends.h5netcdf_._open_h5netcdf_group"
   ]
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.close": {
  "data": {
   "lineno": 234
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.ds": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.encode_variable": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "_encode_nc4_variable"
   ]
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.get_attrs": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "FrozenOrderedDict",
    "xarray.backends.h5netcdf_._read_attributes"
   ]
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.get_dimensions": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.get_encoding": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.get_variables": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "FrozenOrderedDict",
    "iteritems"
   ]
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.open_store_variable": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "Variable",
    "str",
    "xarray.backends.h5netcdf_.H5NetCDFArrayWrapper",
    "xarray.backends.h5netcdf_._read_attributes",
    "xarray.backends.h5netcdf_.h5py"
   ]
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.prepare_variable": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "_get_datatype",
    "iteritems",
    "str",
    "xarray.backends.h5netcdf_.H5NetCDFArrayWrapper",
    "xarray.backends.h5netcdf_._extract_h5nc_encoding",
    "xarray.backends.h5netcdf_.h5py"
   ]
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.set_attribute": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.set_dimension": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.sync": {
  "data": {
   "lineno": 231
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_._extract_h5nc_encoding": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "xarray.backends.h5netcdf_._h5netcdf_create_group": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_._open_h5netcdf_group": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "GroupWrapper",
    "_nc4_require_group",
    "close_on_error",
    "xarray.backends.h5netcdf_._h5netcdf_create_group",
    "xarray.backends.h5netcdf_.h5netcdf"
   ]
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_._read_attributes": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "OrderedDict",
    "xarray.backends.h5netcdf_.maybe_decode_bytes"
   ]
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.backends.h5netcdf_.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.backends.h5netcdf_.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.backends.h5netcdf_.h5netcdf": {
  "data": {
   "shadows": "h5netcdf"
  },
  "type": "import"
 },
 "xarray.backends.h5netcdf_.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "xarray.backends.h5netcdf_.maybe_decode_bytes": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.h5netcdf_.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.backends.locks": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "dask.distributed.Lock",
    "dask.utils.SerializableLock",
    "xarray.backends.locks._get_multiprocessing_lock",
    "xarray.backends.locks._get_threaded_lock",
    "xarray.backends.locks.threading",
    "xarray.backends.locks.weakref"
   ]
  },
  "type": "module"
 },
 "xarray.backends.locks.Client": {
  "data": {
   "shadows": "dask.distributed.Client"
  },
  "type": "import"
 },
 "xarray.backends.locks.CombinedLock": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.backends.locks.CombinedLock.__enter__": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "xarray.backends.locks.CombinedLock.__exit__": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "xarray.backends.locks.CombinedLock.__init__": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "xarray.backends.locks.CombinedLock.__repr__": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "xarray.backends.locks.CombinedLock.acquire": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "all",
    "xarray.backends.locks.acquire"
   ]
  },
  "type": "function"
 },
 "xarray.backends.locks.CombinedLock.locked": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "xarray.backends.locks.CombinedLock.release": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "xarray.backends.locks.DistributedLock": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "xarray.backends.locks.DummyLock": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.backends.locks.DummyLock.__enter__": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "xarray.backends.locks.DummyLock.__exit__": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "xarray.backends.locks.DummyLock.acquire": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "xarray.backends.locks.DummyLock.locked": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "xarray.backends.locks.DummyLock.release": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "xarray.backends.locks.HDF5_LOCK": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "xarray.backends.locks.NETCDFC_LOCK": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "xarray.backends.locks.SerializableLock": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "xarray.backends.locks._FILE_LOCKS": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "xarray.backends.locks._LOCK_MAKERS": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "xarray.backends.locks._get_lock_maker": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "xarray.backends.locks._LOCK_MAKERS"
   ]
  },
  "type": "function"
 },
 "xarray.backends.locks._get_multiprocessing_lock": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "xarray.backends.locks.multiprocessing"
   ]
  },
  "type": "function"
 },
 "xarray.backends.locks._get_scheduler": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "dask.base.get_scheduler",
    "dask.distributed.Client",
    "dask.utils.effective_get",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.backends.locks._get_threaded_lock": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "KeyError",
    "xarray.backends.locks._FILE_LOCKS",
    "xarray.backends.locks.threading"
   ]
  },
  "type": "function"
 },
 "xarray.backends.locks.acquire": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "dask.distributed.Lock",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.backends.locks.combine_locks": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "xarray.backends.locks.CombinedLock",
    "xarray.backends.locks.DummyLock"
   ]
  },
  "type": "function"
 },
 "xarray.backends.locks.dask.multiprocessing": {
  "data": {
   "shadows": "dask.multiprocessing"
  },
  "type": "import"
 },
 "xarray.backends.locks.effective_get": {
  "data": {
   "shadows": "dask.utils.effective_get"
  },
  "type": "import"
 },
 "xarray.backends.locks.ensure_lock": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "xarray.backends.locks.DummyLock"
   ]
  },
  "type": "function"
 },
 "xarray.backends.locks.get_scheduler": {
  "data": {
   "shadows": "dask.base.get_scheduler"
  },
  "type": "import"
 },
 "xarray.backends.locks.get_write_lock": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "lock_maker",
    "xarray.backends.locks._get_lock_maker",
    "xarray.backends.locks._get_scheduler"
   ]
  },
  "type": "function"
 },
 "xarray.backends.locks.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "xarray.backends.locks.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "xarray.backends.locks.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "xarray.backends.lru_cache": {
  "data": {},
  "type": "module"
 },
 "xarray.backends.lru_cache.LRUCache": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "xarray.backends.lru_cache.collections"
   ]
  },
  "type": "class"
 },
 "xarray.backends.lru_cache.LRUCache.__delitem__": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "xarray.backends.lru_cache.LRUCache.__getitem__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "move_to_end"
   ]
  },
  "type": "function"
 },
 "xarray.backends.lru_cache.LRUCache.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "isinstance",
    "xarray.backends.lru_cache.collections",
    "xarray.backends.lru_cache.threading"
   ]
  },
  "type": "function"
 },
 "xarray.backends.lru_cache.LRUCache.__iter__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "iter",
    "list"
   ]
  },
  "type": "function"
 },
 "xarray.backends.lru_cache.LRUCache.__len__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.backends.lru_cache.LRUCache.__setitem__": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "xarray.backends.lru_cache.LRUCache._enforce_size_limit": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.backends.lru_cache.LRUCache.maxsize": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "xarray.backends.lru_cache.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "xarray.backends.lru_cache.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "xarray.backends.memory": {
  "data": {},
  "type": "module"
 },
 "xarray.backends.memory.InMemoryDataStore": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "xarray.backends.memory.InMemoryDataStore.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "OrderedDict"
   ]
  },
  "type": "function"
 },
 "xarray.backends.memory.InMemoryDataStore.get_attrs": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "xarray.backends.memory.InMemoryDataStore.get_dimensions": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "OrderedDict"
   ]
  },
  "type": "function"
 },
 "xarray.backends.memory.InMemoryDataStore.get_variables": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "xarray.backends.memory.InMemoryDataStore.prepare_variable": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "Variable",
    "numpy.empty_like"
   ]
  },
  "type": "function"
 },
 "xarray.backends.memory.InMemoryDataStore.set_attribute": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "xarray.backends.memory.copy"
   ]
  },
  "type": "function"
 },
 "xarray.backends.memory.InMemoryDataStore.set_dimension": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "xarray.backends.memory.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.backends.memory.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "xarray.backends.memory.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.backends.memory.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.memory.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.backends.netCDF4_": {
  "data": {
   "symbols_in_volume": [
    "combine_locks"
   ]
  },
  "type": "module"
 },
 "xarray.backends.netCDF4_.BaseNetCDF4Array": {
  "data": {
   "lineno": 33
  },
  "type": "class"
 },
 "xarray.backends.netCDF4_.BaseNetCDF4Array.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.dtype",
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.BaseNetCDF4Array.__setitem__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.BaseNetCDF4Array.get_array": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.GroupWrapper": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.backends.netCDF4_.GroupWrapper.__init__": {
  "data": {
   "lineno": 236
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.GroupWrapper.close": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "find_root"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.backends.netCDF4_.NETCDF4_PYTHON_LOCK": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "xarray.backends.netCDF4_.NetCDF4ArrayWrapper": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "xarray.backends.netCDF4_.BaseNetCDF4Array"
   ]
  },
  "type": "class"
 },
 "xarray.backends.netCDF4_.NetCDF4ArrayWrapper.__getitem__": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4ArrayWrapper._getitem": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "IndexError",
    "RuntimeError",
    "getitem",
    "xarray.backends.netCDF4_.functools",
    "xarray.backends.netCDF4_.operator",
    "xarray.backends.netCDF4_.traceback"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore": {
  "data": {
   "lineno": 300
  },
  "type": "class"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.__init__": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "DummyFileManager",
    "ensure_lock",
    "is_remote_uri",
    "isinstance",
    "xarray.backends.netCDF4_.GroupWrapper",
    "xarray.backends.netCDF4_.NETCDF4_PYTHON_LOCK",
    "xarray.backends.netCDF4_._disable_auto_decode_group",
    "xarray.backends.netCDF4_.netCDF4"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.close": {
  "data": {
   "lineno": 482
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.ds": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.encode_variable": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "encode_nc3_variable",
    "xarray.backends.netCDF4_._encode_nc4_variable",
    "xarray.backends.netCDF4_._force_native_endianness"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.get_attrs": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "FrozenOrderedDict"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.get_dimensions": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "FrozenOrderedDict",
    "iteritems",
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.get_encoding": {
  "data": {
   "lineno": 408
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.get_variables": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "FrozenOrderedDict",
    "iteritems"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.open": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "CachingFileManager",
    "classmethod",
    "cls",
    "combine_locks",
    "dict",
    "distutils.version.LooseVersion",
    "format",
    "format.startswith",
    "get_write_lock",
    "is_remote_uri",
    "len",
    "xarray.backends.netCDF4_.NETCDF4_PYTHON_LOCK",
    "xarray.backends.netCDF4_._open_netcdf4_group",
    "xarray.backends.netCDF4_.netCDF4",
    "xarray.backends.netCDF4_.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.open_store_variable": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "OrderedDict",
    "Variable",
    "pop_to",
    "tuple",
    "xarray.backends.netCDF4_.NetCDF4ArrayWrapper",
    "xarray.backends.netCDF4_._ensure_fill_value_valid"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.prepare_variable": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "NotImplementedError",
    "iteritems",
    "str",
    "xarray.backends.netCDF4_.NetCDF4ArrayWrapper",
    "xarray.backends.netCDF4_._disable_auto_decode_variable",
    "xarray.backends.netCDF4_._extract_nc4_variable_encoding",
    "xarray.backends.netCDF4_._get_datatype",
    "xarray.backends.netCDF4_._set_nc_attribute"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.set_attribute": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "encode_nc3_attr_value",
    "xarray.backends.netCDF4_._set_nc_attribute"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.set_dimension": {
  "data": {
   "lineno": 414
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.sync": {
  "data": {
   "lineno": 479
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_._check_encoding_dtype_is_vlen_string": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "AssertionError",
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_._disable_auto_decode_group": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "xarray.backends.netCDF4_._disable_auto_decode_variable"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_._disable_auto_decode_variable": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "AttributeError",
    "suppress"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_._encode_nc4_variable": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_._endian_lookup": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "xarray.backends.netCDF4_._ensure_fill_value_valid": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "numpy.string_"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_._extract_nc4_variable_encoding": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "list",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_._force_native_endianness": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "NotImplementedError",
    "Variable"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_._get_datatype": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "ValueError",
    "xarray.backends.netCDF4_._check_encoding_dtype_is_vlen_string",
    "xarray.backends.netCDF4_._nc4_dtype"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_._is_list_of_strings": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_._nc4_dtype": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ValueError",
    "str",
    "xarray.backends.netCDF4_._check_encoding_dtype_is_vlen_string"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_._nc4_require_group": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "IOError",
    "KeyError",
    "ValueError",
    "create_group",
    "isinstance",
    "set",
    "xarray.backends.netCDF4_._netcdf4_create_group"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_._netcdf4_create_group": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_._open_netcdf4_group": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "close_on_error",
    "netCDF4.Dataset",
    "xarray.backends.netCDF4_.GroupWrapper",
    "xarray.backends.netCDF4_._disable_auto_decode_group",
    "xarray.backends.netCDF4_._nc4_require_group"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_._set_nc_attribute": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "AttributeError",
    "xarray.backends.netCDF4_._is_list_of_strings"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.backends.netCDF4_.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.backends.netCDF4_.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.backends.netCDF4_.nc4": {
  "data": {
   "shadows": "netCDF4"
  },
  "type": "import"
 },
 "xarray.backends.netCDF4_.netCDF4": {
  "data": {
   "shadows": "netCDF4"
  },
  "type": "import"
 },
 "xarray.backends.netCDF4_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.netCDF4_.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "xarray.backends.netCDF4_.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.backends.netCDF4_.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "xarray.backends.netCDF4_.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.backends.netcdf3": {
  "data": {
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "module"
 },
 "xarray.backends.netcdf3.STRING_ENCODING": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "xarray.backends.netcdf3._isalnumMUTF8": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netcdf3._nc3_dtype_coercions": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "xarray.backends.netcdf3._reserved_names": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "xarray.backends.netcdf3._specialchars": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "xarray.backends.netcdf3.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.backends.netcdf3.coerce_nc3_dtype": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "str",
    "xarray.backends.netcdf3._nc3_dtype_coercions"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netcdf3.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.backends.netcdf3.encode_nc3_attr_value": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ValueError",
    "bytes",
    "isinstance",
    "numpy.atleast_1d",
    "xarray.backends.netcdf3.STRING_ENCODING",
    "xarray.backends.netcdf3.coerce_nc3_dtype"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netcdf3.encode_nc3_attrs": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "OrderedDict",
    "xarray.backends.netcdf3.encode_nc3_attr_value"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netcdf3.encode_nc3_variable": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "Variable",
    "xarray.backends.netcdf3.coerce_nc3_dtype",
    "xarray.backends.netcdf3.encode_nc3_attrs"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netcdf3.is_valid_nc3_name": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "len",
    "xarray.backends.netcdf3._isalnumMUTF8",
    "xarray.backends.netcdf3._reserved_names",
    "xarray.backends.netcdf3._specialchars",
    "xarray.backends.netcdf3.unicodedata"
   ]
  },
  "type": "function"
 },
 "xarray.backends.netcdf3.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.netcdf3.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.backends.netcdf3.unicodedata": {
  "data": {
   "shadows": "unicodedata"
  },
  "type": "import"
 },
 "xarray.backends.pseudonetcdf_": {
  "data": {
   "symbols_in_volume": [
    "combine_locks"
   ]
  },
  "type": "module"
 },
 "xarray.backends.pseudonetcdf_.PNETCDF_LOCK": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "xarray.backends.pseudonetcdf_.PncArrayWrapper": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "xarray.backends.pseudonetcdf_.PncArrayWrapper.__getitem__": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "xarray.backends.pseudonetcdf_.PncArrayWrapper.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pseudonetcdf_.PncArrayWrapper._getitem": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "xarray.backends.pseudonetcdf_.PncArrayWrapper.get_array": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "xarray.backends.pseudonetcdf_.PseudoNetCDFDataStore": {
  "data": {
   "lineno": 41
  },
  "type": "class"
 },
 "xarray.backends.pseudonetcdf_.PseudoNetCDFDataStore.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ensure_lock"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pseudonetcdf_.PseudoNetCDFDataStore.close": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "xarray.backends.pseudonetcdf_.PseudoNetCDFDataStore.ds": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pseudonetcdf_.PseudoNetCDFDataStore.get_attrs": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "Frozen",
    "dict",
    "getattr"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pseudonetcdf_.PseudoNetCDFDataStore.get_dimensions": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "Frozen"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pseudonetcdf_.PseudoNetCDFDataStore.get_encoding": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pseudonetcdf_.PseudoNetCDFDataStore.get_variables": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "FrozenOrderedDict"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pseudonetcdf_.PseudoNetCDFDataStore.open": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "CachingFileManager",
    "PseudoNetCDF.pncopen",
    "classmethod",
    "cls",
    "dict",
    "xarray.backends.pseudonetcdf_.PNETCDF_LOCK"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pseudonetcdf_.PseudoNetCDFDataStore.open_store_variable": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "OrderedDict",
    "Variable",
    "getattr",
    "xarray.backends.pseudonetcdf_.PncArrayWrapper"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pseudonetcdf_.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.backends.pseudonetcdf_.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.backends.pseudonetcdf_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.pseudonetcdf_.pncopen": {
  "data": {
   "shadows": "PseudoNetCDF.pncopen"
  },
  "type": "import"
 },
 "xarray.backends.pseudonetcdf_.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.backends.pydap_": {
  "data": {},
  "type": "module"
 },
 "xarray.backends.pydap_.PydapArrayWrapper": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "xarray.backends.pydap_.PydapArrayWrapper.__getitem__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "xarray.backends.pydap_.PydapArrayWrapper.__init__": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "xarray.backends.pydap_.PydapArrayWrapper._getitem": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "getattr",
    "isinstance",
    "len",
    "numpy.squeeze",
    "robust_getitem",
    "tuple"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pydap_.PydapArrayWrapper.dtype": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pydap_.PydapArrayWrapper.shape": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pydap_.PydapDataStore": {
  "data": {
   "lineno": 57
  },
  "type": "class"
 },
 "xarray.backends.pydap_.PydapDataStore.__init__": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "xarray.backends.pydap_.PydapDataStore.get_attrs": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "Frozen",
    "xarray.backends.pydap_._fix_attributes"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pydap_.PydapDataStore.get_dimensions": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "Frozen"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pydap_.PydapDataStore.get_variables": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "FrozenOrderedDict"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pydap_.PydapDataStore.open": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pydap_.PydapDataStore.open_store_variable": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "Variable",
    "xarray.backends.pydap_.PydapArrayWrapper",
    "xarray.backends.pydap_._fix_attributes"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pydap_._fix_attributes": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "dict",
    "is_dict_like",
    "list"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pydap_.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.backends.pydap_.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.backends.pydap_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.pydap_.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.backends.pydap_.pydap.client": {
  "data": {
   "shadows": "pydap.client"
  },
  "type": "import"
 },
 "xarray.backends.pynio_": {
  "data": {
   "symbols_in_volume": [
    "SerializableLock",
    "combine_locks",
    "xarray.backends.pynio_.NCL_LOCK"
   ]
  },
  "type": "module"
 },
 "xarray.backends.pynio_.NCL_LOCK": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "xarray.backends.pynio_.Nio": {
  "data": {
   "shadows": "Nio"
  },
  "type": "import"
 },
 "xarray.backends.pynio_.NioArrayWrapper": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "xarray.backends.pynio_.NioArrayWrapper.__getitem__": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "xarray.backends.pynio_.NioArrayWrapper.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pynio_.NioArrayWrapper._getitem": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "xarray.backends.pynio_.NioArrayWrapper.get_array": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "xarray.backends.pynio_.NioDataStore": {
  "data": {
   "lineno": 46
  },
  "type": "class"
 },
 "xarray.backends.pynio_.NioDataStore.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "CachingFileManager",
    "ensure_lock",
    "xarray.backends.pynio_.Nio",
    "xarray.backends.pynio_.PYNIO_LOCK"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pynio_.NioDataStore.close": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "xarray.backends.pynio_.NioDataStore.ds": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pynio_.NioDataStore.get_attrs": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "Frozen"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pynio_.NioDataStore.get_dimensions": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "Frozen"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pynio_.NioDataStore.get_encoding": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pynio_.NioDataStore.get_variables": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "FrozenOrderedDict"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pynio_.NioDataStore.open_store_variable": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "Variable",
    "xarray.backends.pynio_.NioArrayWrapper"
   ]
  },
  "type": "function"
 },
 "xarray.backends.pynio_.PYNIO_LOCK": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "xarray.backends.pynio_.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.backends.pynio_.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.backends.pynio_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.pynio_.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.backends.rasterio_": {
  "data": {
   "symbols_in_volume": [
    "SerializableLock"
   ]
  },
  "type": "module"
 },
 "xarray.backends.rasterio_.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.backends.rasterio_.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "xarray.backends.rasterio_.RASTERIO_LOCK": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "xarray.backends.rasterio_.RasterioArrayWrapper": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "xarray.backends.rasterio_.RasterioArrayWrapper.__getitem__": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "xarray.backends.rasterio_.RasterioArrayWrapper.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "numpy.asarray",
    "numpy.dtype",
    "rasterio.vrt.WarpedVRT"
   ]
  },
  "type": "function"
 },
 "xarray.backends.rasterio_.RasterioArrayWrapper._get_indexer": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "enumerate",
    "is_scalar",
    "isinstance",
    "len",
    "list",
    "numpy.arange",
    "numpy.asarray",
    "numpy.ix_",
    "numpy.max",
    "numpy.min",
    "numpy.ndarray",
    "slice",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.backends.rasterio_.RasterioArrayWrapper._getitem": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "any",
    "len",
    "numpy.squeeze",
    "numpy.zeros",
    "rasterio.vrt.WarpedVRT",
    "tuple"
   ]
  },
  "type": "function"
 },
 "xarray.backends.rasterio_.RasterioArrayWrapper.dtype": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.backends.rasterio_.RasterioArrayWrapper.shape": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.backends.rasterio_.WarpedVRT": {
  "data": {
   "shadows": "rasterio.vrt.WarpedVRT"
  },
  "type": "import"
 },
 "xarray.backends.rasterio_._ERROR_MSG": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "xarray.backends.rasterio_._parse_envi": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "xarray.backends.rasterio_._parse_envi.default": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "xarray.backends.rasterio_._parse_envi.parsevec": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "numpy.fromstring"
   ]
  },
  "type": "function"
 },
 "xarray.backends.rasterio_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.rasterio_.open_rasterio": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "CachingFileManager",
    "DataArray",
    "OSError",
    "RuntimeWarning",
    "ValueError",
    "collections.OrderedDict",
    "dask.base.tokenize",
    "dict",
    "distutils.version.LooseVersion",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "numpy.arange",
    "numpy.asarray",
    "numpy.nan",
    "numpy.ndarray",
    "numpy.uint8",
    "numpy.zeros",
    "rasterio.vrt.WarpedVRT",
    "tuple",
    "xarray.backends.rasterio_.RASTERIO_LOCK",
    "xarray.backends.rasterio_.RasterioArrayWrapper",
    "xarray.backends.rasterio_._parse_envi",
    "xarray.backends.rasterio_.os",
    "xarray.backends.rasterio_.rasterio",
    "xarray.backends.rasterio_.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.backends.rasterio_.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "xarray.backends.rasterio_.rasterio": {
  "data": {
   "shadows": "rasterio"
  },
  "type": "import"
 },
 "xarray.backends.rasterio_.tokenize": {
  "data": {
   "shadows": "dask.base.tokenize"
  },
  "type": "import"
 },
 "xarray.backends.rasterio_.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.backends.scipy_": {
  "data": {},
  "type": "module"
 },
 "xarray.backends.scipy_.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "xarray.backends.scipy_.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.backends.scipy_.ScipyArrayWrapper": {
  "data": {
   "lineno": 33
  },
  "type": "class"
 },
 "xarray.backends.scipy_.ScipyArrayWrapper.__getitem__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "NumpyIndexingAdapter",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyArrayWrapper.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.dtype",
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyArrayWrapper.__setitem__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "Ellipsis",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyArrayWrapper.get_variable": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore": {
  "data": {
   "lineno": 107
  },
  "type": "class"
 },
 "xarray.backends.scipy_.ScipyDataStore.__init__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "CachingFileManager",
    "DummyFileManager",
    "ImportWarning",
    "ValueError",
    "dict",
    "distutils.version.LooseVersion",
    "ensure_lock",
    "format",
    "get_write_lock",
    "isinstance",
    "xarray.backends.scipy_._open_scipy_netcdf",
    "xarray.backends.scipy_.scipy",
    "xarray.backends.scipy_.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore._validate_attr_key": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "ValueError",
    "is_valid_nc3_name"
   ]
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.close": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.ds": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.encode_variable": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "encode_nc3_variable"
   ]
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.get_attrs": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "Frozen",
    "xarray.backends.scipy_._decode_attrs"
   ]
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.get_dimensions": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "Frozen"
   ]
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.get_encoding": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.get_variables": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "FrozenOrderedDict",
    "iteritems"
   ]
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.open_store_variable": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "Variable",
    "xarray.backends.scipy_.ScipyArrayWrapper",
    "xarray.backends.scipy_._decode_attrs"
   ]
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.prepare_variable": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "ValueError",
    "iteritems",
    "list",
    "setattr",
    "xarray.backends.scipy_.ScipyArrayWrapper"
   ]
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.set_attribute": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "encode_nc3_attr_value",
    "setattr"
   ]
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.set_dimension": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "ValueError",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.sync": {
  "data": {
   "lineno": 224
  },
  "type": "function"
 },
 "xarray.backends.scipy_._decode_attrs": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "OrderedDict",
    "iteritems",
    "xarray.backends.scipy_._decode_string"
   ]
  },
  "type": "function"
 },
 "xarray.backends.scipy_._decode_string": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "bytes",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.backends.scipy_._open_scipy_netcdf": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bytes",
    "io.BytesIO",
    "isinstance",
    "xarray.backends.scipy_.gzip"
   ]
  },
  "type": "function"
 },
 "xarray.backends.scipy_.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.backends.scipy_.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.backends.scipy_.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "xarray.backends.scipy_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.scipy_.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.backends.scipy_.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "xarray.backends.scipy_.scipy.io": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "xarray.backends.scipy_.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.backends.zarr": {
  "data": {},
  "type": "module"
 },
 "xarray.backends.zarr.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.backends.zarr.ZarrArrayWrapper": {
  "data": {
   "lineno": 31
  },
  "type": "class"
 },
 "xarray.backends.zarr.ZarrArrayWrapper.__getitem__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrArrayWrapper.__init__": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrArrayWrapper.get_array": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore": {
  "data": {
   "lineno": 222
  },
  "type": "class"
 },
 "xarray.backends.zarr.ZarrStore.__init__": {
  "data": {
   "lineno": 254
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.close": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "xarray.backends.zarr.zarr"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.encode_attribute": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "xarray.backends.zarr._encode_zarr_attr_value"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.encode_variable": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "xarray.backends.zarr.encode_zarr_variable"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.get_attrs": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "OrderedDict"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.get_dimensions": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "KeyError",
    "OrderedDict",
    "ValueError",
    "xarray.backends.zarr._DIMENSION_KEY",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.get_variables": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "FrozenOrderedDict"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.open_group": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod",
    "cls",
    "dict",
    "distutils.version.LooseVersion",
    "xarray.backends.zarr.zarr"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.open_store_variable": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "OrderedDict",
    "Variable",
    "getattr",
    "xarray.backends.zarr.ZarrArrayWrapper",
    "xarray.backends.zarr._DIMENSION_KEY",
    "xarray.backends.zarr._get_zarr_dims_and_attrs"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.prepare_variable": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "OrderedDict",
    "iteritems",
    "xarray.backends.zarr._DIMENSION_KEY",
    "xarray.backends.zarr._extract_zarr_variable_encoding"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.set_attributes": {
  "data": {
   "lineno": 306
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.set_dimensions": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.store": {
  "data": {
   "lineno": 343
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.sync": {
  "data": {
   "lineno": 347
  },
  "type": "function"
 },
 "xarray.backends.zarr._DIMENSION_KEY": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "xarray.backends.zarr._determine_zarr_chunks": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "AssertionError",
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "any",
    "int",
    "isinstance",
    "len",
    "set",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr._encode_zarr_attr_value": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "isinstance",
    "numpy.generic",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr._extract_zarr_variable_encoding": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "set",
    "xarray.backends.zarr._determine_zarr_chunks"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr._get_zarr_dims_and_attrs": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "HiddenKeyDict",
    "KeyError"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.backends.zarr.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.backends.zarr.encode_zarr_variable": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "xarray.backends.zarr.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.zarr.open_zarr": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "OrderedDict",
    "maybe_chunk",
    "maybe_decode_store",
    "xarray.backends.zarr.ZarrStore"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr.open_zarr.maybe_chunk": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "dask.base.tokenize"
   ]
  },
  "type": "function"
 },
 "xarray.backends.zarr.open_zarr.maybe_decode_store": {
  "data": {
   "lineno": 433
  },
  "type": "function"
 },
 "xarray.backends.zarr.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.backends.zarr.tokenize": {
  "data": {
   "shadows": "dask.base.tokenize"
  },
  "type": "import"
 },
 "xarray.backends.zarr.zarr": {
  "data": {
   "shadows": "zarr"
  },
  "type": "import"
 },
 "xarray.coding": {
  "data": {},
  "type": "module"
 },
 "xarray.coding.cftime_offsets": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "xarray.coding.cftime_offsets.Day",
    "xarray.coding.cftime_offsets.Hour",
    "xarray.coding.cftime_offsets.Minute",
    "xarray.coding.cftime_offsets.MonthBegin",
    "xarray.coding.cftime_offsets.MonthEnd",
    "xarray.coding.cftime_offsets.Second",
    "xarray.coding.cftime_offsets.YearBegin",
    "xarray.coding.cftime_offsets.YearEnd",
    "xarray.coding.cftime_offsets._FREQUENCIES",
    "xarray.coding.cftime_offsets._FREQUENCY_CONDITION"
   ]
  },
  "type": "module"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset.__add__": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset.__apply__": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "NotImplemented"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset.__eq__": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset.__mul__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset.__ne__": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset.__neg__": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset.__radd__": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset.__repr__": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset.__rmul__": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset.__rsub__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "type",
    "xarray.coding.cftime_offsets.BaseCFTimeOffset"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset.__str__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset.__sub__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "NotImplemented",
    "TypeError",
    "isinstance",
    "type",
    "xarray.coding.cftime_offsets.cftime"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset.onOffset": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset.rollback": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset.rollforward": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.BaseCFTimeOffset.rule_code": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.Day": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.BaseCFTimeOffset"
   ]
  },
  "type": "class"
 },
 "xarray.coding.cftime_offsets.Day.__apply__": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.Hour": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.BaseCFTimeOffset"
   ]
  },
  "type": "class"
 },
 "xarray.coding.cftime_offsets.Hour.__apply__": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.Minute": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.BaseCFTimeOffset"
   ]
  },
  "type": "class"
 },
 "xarray.coding.cftime_offsets.Minute.__apply__": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.MonthBegin": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.BaseCFTimeOffset"
   ]
  },
  "type": "class"
 },
 "xarray.coding.cftime_offsets.MonthBegin.__apply__": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets._adjust_n_months",
    "xarray.coding.cftime_offsets._shift_months"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.MonthBegin.onOffset": {
  "data": {
   "lineno": 221
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.MonthEnd": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.BaseCFTimeOffset"
   ]
  },
  "type": "class"
 },
 "xarray.coding.cftime_offsets.MonthEnd.__apply__": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets._adjust_n_months",
    "xarray.coding.cftime_offsets._days_in_month",
    "xarray.coding.cftime_offsets._shift_months"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.MonthEnd.onOffset": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets._days_in_month"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.Second": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.BaseCFTimeOffset"
   ]
  },
  "type": "class"
 },
 "xarray.coding.cftime_offsets.Second.__apply__": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.YearBegin": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.YearOffset"
   ]
  },
  "type": "class"
 },
 "xarray.coding.cftime_offsets.YearBegin.onOffset": {
  "data": {
   "lineno": 313
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.YearBegin.rollback": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.YearBegin"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.YearBegin.rollforward": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.YearBegin"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.YearEnd": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.YearOffset"
   ]
  },
  "type": "class"
 },
 "xarray.coding.cftime_offsets.YearEnd.onOffset": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets._days_in_month"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.YearEnd.rollback": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.YearEnd"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.YearEnd.rollforward": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.YearEnd"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.YearOffset": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.BaseCFTimeOffset"
   ]
  },
  "type": "class"
 },
 "xarray.coding.cftime_offsets.YearOffset.__apply__": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "ValueError",
    "xarray.coding.cftime_offsets._adjust_n_years",
    "xarray.coding.cftime_offsets._days_in_month",
    "xarray.coding.cftime_offsets._shift_months"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.YearOffset.__init__": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "isinstance",
    "xarray.coding.cftime_offsets.BaseCFTimeOffset"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.YearOffset.__mul__": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.YearOffset.__str__": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.YearOffset.__sub__": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "NotImplemented",
    "TypeError",
    "isinstance",
    "type",
    "xarray.coding.cftime_offsets.cftime"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.YearOffset.rule_code": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets._MONTH_ABBREVIATIONS"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets._FREQUENCIES": {
  "data": {
   "lineno": 386
  },
  "type": "constant"
 },
 "xarray.coding.cftime_offsets._FREQUENCY_CONDITION": {
  "data": {
   "lineno": 425
  },
  "type": "constant"
 },
 "xarray.coding.cftime_offsets._MONTH_ABBREVIATIONS": {
  "data": {
   "lineno": 240
  },
  "type": "constant"
 },
 "xarray.coding.cftime_offsets._PATTERN": {
  "data": {
   "lineno": 426
  },
  "type": "constant"
 },
 "xarray.coding.cftime_offsets._adjust_n_months": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets._adjust_n_years": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets._count_not_none": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets._days_in_month": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "datetime.timedelta",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets._generate_linear_range": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "format_cftime_datetime",
    "numpy.linspace",
    "xarray.coding.cftime_offsets.cftime"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets._generate_range": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets._maybe_normalize_date": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.normalize_date"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets._shift_months": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "ValueError",
    "type",
    "xarray.coding.cftime_offsets._days_in_month"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.cftime": {
  "data": {
   "shadows": "cftime"
  },
  "type": "import"
 },
 "xarray.coding.cftime_offsets.cftime_range": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "CFTimeIndex",
    "ValueError",
    "len",
    "list",
    "numpy.array",
    "xarray.coding.cftime_offsets._count_not_none",
    "xarray.coding.cftime_offsets._generate_linear_range",
    "xarray.coding.cftime_offsets._generate_range",
    "xarray.coding.cftime_offsets._maybe_normalize_date",
    "xarray.coding.cftime_offsets.to_cftime_datetime",
    "xarray.coding.cftime_offsets.to_offset"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.get_date_type": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ImportError",
    "xarray.coding.cftime_offsets.cftime"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.normalize_date": {
  "data": {
   "lineno": 470
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.coding.cftime_offsets.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "xarray.coding.cftime_offsets.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "xarray.coding.cftime_offsets.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "xarray.coding.cftime_offsets.to_cftime_datetime": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_parse_iso8601_with_reso",
    "isinstance",
    "xarray.coding.cftime_offsets.cftime",
    "xarray.coding.cftime_offsets.get_date_type"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftime_offsets.to_offset": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "int",
    "isinstance",
    "xarray.coding.cftime_offsets.BaseCFTimeOffset",
    "xarray.coding.cftime_offsets._FREQUENCIES",
    "xarray.coding.cftime_offsets._PATTERN",
    "xarray.coding.cftime_offsets.re"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftimeindex": {
  "data": {
   "symbols_in_volume": [
    "xarray.coding.cftimeindex._BASIC_PATTERN",
    "xarray.coding.cftimeindex._EXTENDED_PATTERN",
    "xarray.coding.cftimeindex.build_pattern"
   ]
  },
  "type": "module"
 },
 "xarray.coding.cftimeindex.CFTimeIndex": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "date_type",
    "pandas.Index",
    "property",
    "xarray.coding.cftimeindex._field_accessor",
    "xarray.coding.cftimeindex.get_date_type"
   ]
  },
  "type": "class"
 },
 "xarray.coding.cftimeindex.CFTimeIndex.__add__": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "pandas.TimedeltaIndex",
    "xarray.coding.cftimeindex.CFTimeIndex"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftimeindex.CFTimeIndex.__contains__": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "isinstance",
    "numpy.ndarray",
    "slice",
    "type",
    "xarray.core.utils.is_scalar"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftimeindex.CFTimeIndex.__new__": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "hasattr",
    "numpy.array",
    "object.__new__",
    "xarray.coding.cftimeindex.assert_all_valid_date_type"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftimeindex.CFTimeIndex.__radd__": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "pandas.TimedeltaIndex",
    "xarray.coding.cftimeindex.CFTimeIndex"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftimeindex.CFTimeIndex.__sub__": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "pandas.TimedeltaIndex",
    "xarray.coding.cftimeindex.CFTimeIndex"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftimeindex.CFTimeIndex._add_delta": {
  "data": {
   "lineno": 421
  },
  "type": "function"
 },
 "xarray.coding.cftimeindex.CFTimeIndex._get_string_slice": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "KeyError",
    "xarray.coding.cftimeindex._parse_iso8601_with_reso"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftimeindex.CFTimeIndex._maybe_cast_slice_bound": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "xarray.coding.cftimeindex._parse_iso8601_with_reso",
    "xarray.coding.cftimeindex._parsed_string_to_bounds",
    "xarray.core.pycompat.basestring"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftimeindex.CFTimeIndex._partial_date_slice": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "numpy.flatnonzero",
    "slice",
    "xarray.coding.cftimeindex._parsed_string_to_bounds"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftimeindex.CFTimeIndex.contains": {
  "data": {
   "lineno": 357
  },
  "type": "function"
 },
 "xarray.coding.cftimeindex.CFTimeIndex.get_loc": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Index.get_loc",
    "xarray.core.pycompat.basestring"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftimeindex.CFTimeIndex.get_value": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "isinstance",
    "slice"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftimeindex.CFTimeIndex.shift": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "TypeError",
    "datetime.timedelta",
    "int",
    "isinstance",
    "to_offset",
    "xarray.core.pycompat.basestring"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftimeindex.CFTimeIndex.to_datetimeindex": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "RuntimeWarning",
    "cftime_to_nptime",
    "infer_calendar_name",
    "pandas.DatetimeIndex",
    "xarray.coding.cftimeindex.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftimeindex.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.coding.cftimeindex._BASIC_PATTERN": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "xarray.coding.cftimeindex._EXTENDED_PATTERN": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "xarray.coding.cftimeindex._PATTERNS": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "xarray.coding.cftimeindex._field_accessor": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftimeindex._field_accessor.f": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "ImportError",
    "distutils.version.LooseVersion",
    "xarray.coding.cftimeindex.cftime",
    "xarray.coding.cftimeindex.get_date_field"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftimeindex._parse_array_of_cftime_strings": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "date_type",
    "numpy.array",
    "xarray.coding.cftimeindex._parse_iso8601_without_reso"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftimeindex._parse_iso8601_with_reso": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "date_type",
    "int",
    "xarray.coding.cftimeindex.parse_iso8601"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftimeindex._parse_iso8601_without_reso": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "date_type",
    "xarray.coding.cftimeindex._parse_iso8601_with_reso"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftimeindex._parsed_string_to_bounds": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "KeyError",
    "date_type",
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftimeindex.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.coding.cftimeindex.assert_all_valid_date_type": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "TypeError",
    "all",
    "date_type",
    "isinstance",
    "type",
    "xarray.coding.cftimeindex.cftime"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftimeindex.build_pattern": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "xarray.coding.cftimeindex.named",
    "xarray.coding.cftimeindex.trailing_optional"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftimeindex.cftime": {
  "data": {
   "shadows": "cftime"
  },
  "type": "import"
 },
 "xarray.coding.cftimeindex.get_date_field": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "getattr",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftimeindex.get_date_type": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftimeindex.is_scalar": {
  "data": {
   "shadows": "xarray.core.utils.is_scalar"
  },
  "type": "import"
 },
 "xarray.coding.cftimeindex.named": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "xarray.coding.cftimeindex.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.coding.cftimeindex.optional": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "xarray.coding.cftimeindex.parse_iso8601": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "xarray.coding.cftimeindex._PATTERNS",
    "xarray.coding.cftimeindex.re"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftimeindex.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.coding.cftimeindex.pycompat": {
  "data": {
   "shadows": "xarray.core.pycompat"
  },
  "type": "import"
 },
 "xarray.coding.cftimeindex.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "xarray.coding.cftimeindex.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "xarray.coding.cftimeindex.trailing_optional": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "xarray.coding.cftimeindex.optional"
   ]
  },
  "type": "function"
 },
 "xarray.coding.cftimeindex.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.coding.strings": {
  "data": {},
  "type": "module"
 },
 "xarray.coding.strings.CharacterArrayCoder": {
  "data": {
   "lineno": 99
  },
  "type": "class"
 },
 "xarray.coding.strings.CharacterArrayCoder.decode": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "Variable",
    "unpack_for_decoding",
    "xarray.coding.strings.char_to_bytes"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings.CharacterArrayCoder.encode": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "Variable",
    "str",
    "unpack_for_encoding",
    "xarray.coding.strings.bytes_to_char",
    "xarray.coding.strings.ensure_fixed_length_bytes"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings.EncodedStringCoder": {
  "data": {
   "lineno": 36
  },
  "type": "class"
 },
 "xarray.coding.strings.EncodedStringCoder.__init__": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "xarray.coding.strings.EncodedStringCoder.decode": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "Variable",
    "functools.partial",
    "lazy_elemwise_func",
    "numpy.dtype",
    "object",
    "pop_to",
    "unpack_for_decoding"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings.EncodedStringCoder.encode": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "NotImplementedError",
    "Variable",
    "safe_setitem",
    "unpack_for_encoding",
    "xarray.coding.strings.encode_string_array",
    "xarray.coding.strings.is_unicode_dtype"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings.StackedBytesArray": {
  "data": {
   "lineno": 185
  },
  "type": "class"
 },
 "xarray.coding.strings.StackedBytesArray.__getitem__": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "IndexError",
    "slice",
    "type",
    "xarray.coding.strings._numpy_char_to_bytes"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings.StackedBytesArray.__init__": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings.StackedBytesArray.__repr__": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings.StackedBytesArray.dtype": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "numpy.dtype",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings.StackedBytesArray.shape": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings._numpy_bytes_to_char": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.string_"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings._numpy_char_to_bytes": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.coding.strings.bytes_to_char": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ValueError",
    "dask.array.map_blocks",
    "isinstance",
    "xarray.coding.strings._numpy_bytes_to_char"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings.char_to_bytes": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "ValueError",
    "dask.array.map_blocks",
    "isinstance",
    "len",
    "numpy.dtype",
    "numpy.string_",
    "numpy.zeros",
    "str",
    "xarray.coding.strings.StackedBytesArray"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings.check_vlen_dtype": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "xarray.coding.strings.create_vlen_dtype": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.coding.strings.decode_bytes_array": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "object"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.coding.strings.encode_string_array": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "bytes",
    "numpy.array",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings.ensure_fixed_length_bytes": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "Variable",
    "numpy.asarray",
    "numpy.string_",
    "unpack_for_encoding",
    "xarray.coding.strings.check_vlen_dtype"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings.is_bytes_dtype": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "xarray.coding.strings.check_vlen_dtype"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings.is_unicode_dtype": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "xarray.coding.strings.check_vlen_dtype"
   ]
  },
  "type": "function"
 },
 "xarray.coding.strings.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.coding.strings.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "xarray.coding.strings.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.coding.times": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "frozenset",
    "int",
    "set"
   ]
  },
  "type": "module"
 },
 "xarray.coding.times.CFDatetimeCoder": {
  "data": {
   "lineno": 391
  },
  "type": "class"
 },
 "xarray.coding.times.CFDatetimeCoder.decode": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "Variable",
    "functools.partial",
    "lazy_elemwise_func",
    "pop_to",
    "unpack_for_decoding",
    "xarray.coding.times._decode_cf_datetime_dtype",
    "xarray.coding.times.decode_cf_datetime"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times.CFDatetimeCoder.encode": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "Variable",
    "contains_cftime_datetimes",
    "numpy.datetime64",
    "numpy.issubdtype",
    "safe_setitem",
    "unpack_for_encoding",
    "xarray.coding.times.encode_cf_datetime"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times.CFTimedeltaCoder": {
  "data": {
   "lineno": 420
  },
  "type": "class"
 },
 "xarray.coding.times.CFTimedeltaCoder.decode": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "Variable",
    "functools.partial",
    "lazy_elemwise_func",
    "numpy.dtype",
    "pop_to",
    "unpack_for_decoding",
    "xarray.coding.times.TIME_UNITS",
    "xarray.coding.times.decode_cf_timedelta"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times.CFTimedeltaCoder.encode": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "Variable",
    "numpy.issubdtype",
    "numpy.timedelta64",
    "safe_setitem",
    "unpack_for_encoding",
    "xarray.coding.times.encode_cf_timedelta"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times.OutOfBoundsDatetime": {
  "data": {
   "shadows": "pandas.tslib.OutOfBoundsDatetime"
  },
  "type": "import"
 },
 "xarray.coding.times.TIME_UNITS": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "xarray.coding.times._NS_PER_TIME_DELTA": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "xarray.coding.times._STANDARD_CALENDARS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "xarray.coding.times._cleanup_netcdf_time_units": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "format_timestamp",
    "pandas.tslib.OutOfBoundsDatetime",
    "xarray.coding.times._unpack_netcdf_time_units"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times._decode_cf_datetime_dtype": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "first_n_items",
    "getattr",
    "last_item",
    "numpy.concatenate",
    "numpy.dtype",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.coding.times.traceback"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times._decode_datetime_with_cftime": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "netCDF4",
    "netCDF4.__name__",
    "netCDF4.num2date",
    "numpy.asarray",
    "numpy.nanargmax",
    "numpy.nanargmin",
    "xarray.coding.times._STANDARD_CALENDARS",
    "xarray.coding.times._import_cftime",
    "xarray.coding.times.cftime_to_nptime",
    "xarray.coding.times.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times._encode_datetime_with_cftime": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "datetime.datetime",
    "netCDF4",
    "numpy.datetime64",
    "numpy.issubdtype",
    "numpy.vectorize",
    "xarray.coding.times._import_cftime"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times._encode_datetime_with_cftime.encode_datetime": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "netCDF4.date2num",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times._import_cftime": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ImportError",
    "netCDF4"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times._infer_time_units_from_diff": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "int",
    "numpy.all",
    "numpy.timedelta64",
    "xarray.coding.times._NS_PER_TIME_DELTA",
    "xarray.coding.times._netcdf_to_numpy_timeunit"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times._netcdf_to_numpy_timeunit": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "xarray.coding.times._require_standalone_cftime": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times._unpack_netcdf_time_units": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "xarray.coding.times.re"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.coding.times.cast_to_int_if_safe": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times.cftime": {
  "data": {
   "shadows": "cftime"
  },
  "type": "import"
 },
 "xarray.coding.times.cftime_to_nptime": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.datetime64",
    "numpy.empty",
    "numpy.ndenumerate",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "xarray.coding.times.decode_cf_datetime": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "OverflowError",
    "RuntimeWarning",
    "ValueError",
    "numpy.asarray",
    "numpy.float",
    "numpy.float64",
    "numpy.int64",
    "pandas.Timestamp",
    "pandas.to_timedelta",
    "pandas.tslib.OutOfBoundsDatetime",
    "xarray.coding.times._NS_PER_TIME_DELTA",
    "xarray.coding.times._STANDARD_CALENDARS",
    "xarray.coding.times._decode_datetime_with_cftime",
    "xarray.coding.times._netcdf_to_numpy_timeunit",
    "xarray.coding.times._unpack_netcdf_time_units",
    "xarray.coding.times.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times.decode_cf_timedelta": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "numpy.asarray",
    "pandas.to_timedelta",
    "xarray.coding.times._netcdf_to_numpy_timeunit"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.coding.times.encode_cf_datetime": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "OverflowError",
    "numpy.asarray",
    "numpy.timedelta64",
    "pandas.DatetimeIndex",
    "pandas.Timestamp",
    "pandas.tslib.OutOfBoundsDatetime",
    "xarray.coding.times._STANDARD_CALENDARS",
    "xarray.coding.times._cleanup_netcdf_time_units",
    "xarray.coding.times._encode_datetime_with_cftime",
    "xarray.coding.times._netcdf_to_numpy_timeunit",
    "xarray.coding.times._unpack_netcdf_time_units",
    "xarray.coding.times.cast_to_int_if_safe",
    "xarray.coding.times.infer_calendar_name",
    "xarray.coding.times.infer_datetime_units"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times.encode_cf_timedelta": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.timedelta64",
    "numpy.where",
    "pandas.isnull",
    "xarray.coding.times._netcdf_to_numpy_timeunit",
    "xarray.coding.times.cast_to_int_if_safe",
    "xarray.coding.times.infer_timedelta_units"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times.format_cftime_datetime": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "xarray.coding.times.infer_calendar_name": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times.infer_datetime_units": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.diff",
    "numpy.dtype",
    "numpy.unique",
    "pandas.Timestamp",
    "pandas.notnull",
    "pandas.to_datetime",
    "pandas.to_timedelta",
    "xarray.coding.times._infer_time_units_from_diff",
    "xarray.coding.times.format_cftime_datetime"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times.infer_timedelta_units": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.unique",
    "pandas.notnull",
    "pandas.to_timedelta",
    "xarray.coding.times._infer_time_units_from_diff"
   ]
  },
  "type": "function"
 },
 "xarray.coding.times.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.coding.times.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "xarray.coding.times.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.coding.times.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.coding.times.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "xarray.coding.times.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "xarray.coding.times.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.coding.variables": {
  "data": {},
  "type": "module"
 },
 "xarray.coding.variables.CFMaskCoder": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "xarray.coding.variables.VariableCoder"
   ]
  },
  "type": "class"
 },
 "xarray.coding.variables.CFMaskCoder.decode": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "Variable",
    "functools.partial",
    "len",
    "numpy.ravel",
    "pandas.isnull",
    "xarray.coding.variables.SerializationWarning",
    "xarray.coding.variables._apply_mask",
    "xarray.coding.variables.lazy_elemwise_func",
    "xarray.coding.variables.pop_to",
    "xarray.coding.variables.unpack_for_decoding",
    "xarray.coding.variables.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables.CFMaskCoder.encode": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "Variable",
    "pandas.isnull",
    "xarray.coding.variables.pop_to",
    "xarray.coding.variables.unpack_for_encoding"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables.CFScaleOffsetCoder": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "xarray.coding.variables.VariableCoder"
   ]
  },
  "type": "class"
 },
 "xarray.coding.variables.CFScaleOffsetCoder.decode": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "Variable",
    "functools.partial",
    "xarray.coding.variables._choose_float_dtype",
    "xarray.coding.variables._scale_offset_decoding",
    "xarray.coding.variables.lazy_elemwise_func",
    "xarray.coding.variables.pop_to",
    "xarray.coding.variables.unpack_for_decoding"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables.CFScaleOffsetCoder.encode": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "Variable",
    "xarray.coding.variables._choose_float_dtype",
    "xarray.coding.variables.pop_to",
    "xarray.coding.variables.unpack_for_encoding"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables.SerializationWarning": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "RuntimeWarning"
   ]
  },
  "type": "class"
 },
 "xarray.coding.variables.UnsignedIntegerCoder": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "xarray.coding.variables.VariableCoder"
   ]
  },
  "type": "class"
 },
 "xarray.coding.variables.UnsignedIntegerCoder.decode": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "Variable",
    "functools.partial",
    "numpy.asarray",
    "numpy.dtype",
    "xarray.coding.variables.SerializationWarning",
    "xarray.coding.variables.lazy_elemwise_func",
    "xarray.coding.variables.pop_to",
    "xarray.coding.variables.unpack_for_decoding",
    "xarray.coding.variables.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables.UnsignedIntegerCoder.encode": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "Variable",
    "numpy.dtype",
    "xarray.coding.variables.pop_to",
    "xarray.coding.variables.unpack_for_encoding"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables.VariableCoder": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.coding.variables.VariableCoder.decode": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables.VariableCoder.encode": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables._ElementwiseFunctionArray": {
  "data": {
   "lineno": 47
  },
  "type": "class"
 },
 "xarray.coding.variables._ElementwiseFunctionArray.__array__": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "xarray.coding.variables._ElementwiseFunctionArray.__getitem__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables._ElementwiseFunctionArray.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables._ElementwiseFunctionArray.__repr__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables._ElementwiseFunctionArray.dtype": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.dtype",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables._apply_mask": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables._choose_float_dtype": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.floating",
    "numpy.integer",
    "numpy.issubdtype"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables._scale_offset_decoding": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.coding.variables.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.coding.variables.lazy_elemwise_func": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "isinstance",
    "xarray.coding.variables._ElementwiseFunctionArray"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.coding.variables.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "xarray.coding.variables.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.coding.variables.pop_to": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "xarray.coding.variables.safe_setitem"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.coding.variables.safe_setitem": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "xarray.coding.variables.unpack_for_decoding": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "xarray.coding.variables.unpack_for_encoding": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "xarray.coding.variables.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.conventions": {
  "data": {},
  "type": "module"
 },
 "xarray.conventions.BoolTypeArray": {
  "data": {
   "lineno": 48
  },
  "type": "class"
 },
 "xarray.conventions.BoolTypeArray.__getitem__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "xarray.conventions.BoolTypeArray.__init__": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "xarray.conventions.BoolTypeArray.dtype": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.dtype",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.conventions.NativeEndiannessArray": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "xarray.conventions.NativeEndiannessArray.__getitem__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "xarray.conventions.NativeEndiannessArray.__init__": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "xarray.conventions.NativeEndiannessArray.dtype": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.dtype",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.conventions._copy_with_dtype": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "xarray.conventions._encode_coordinates": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "OrderedDict",
    "ValueError",
    "collections.defaultdict",
    "isinstance",
    "list",
    "map",
    "set",
    "str",
    "xarray.conventions.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.conventions._infer_dtype": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "isinstance",
    "numpy.array",
    "numpy.dtype",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.conventions._update_bounds_attributes": {
  "data": {
   "lineno": 323
  },
  "type": "function"
 },
 "xarray.conventions._var_as_tuple": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "xarray.conventions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.conventions.cf_decoder": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "xarray.conventions.decode_cf_variables"
   ]
  },
  "type": "function"
 },
 "xarray.conventions.cf_encoder": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "OrderedDict",
    "iteritems",
    "xarray.conventions.encode_cf_variable"
   ]
  },
  "type": "function"
 },
 "xarray.conventions.decode_cf": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "Dataset",
    "TypeError",
    "isinstance",
    "set",
    "vars",
    "xarray.conventions.decode_cf_variables"
   ]
  },
  "type": "function"
 },
 "xarray.conventions.decode_cf_variable": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "Variable",
    "as_variable",
    "isinstance",
    "xarray.conventions.BoolTypeArray",
    "xarray.conventions.NativeEndiannessArray"
   ]
  },
  "type": "function"
 },
 "xarray.conventions.decode_cf_variables": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "OrderedDict",
    "all",
    "collections.defaultdict",
    "isinstance",
    "iteritems",
    "list",
    "set",
    "stackable",
    "xarray.conventions._update_bounds_attributes",
    "xarray.conventions.decode_cf_variable"
   ]
  },
  "type": "function"
 },
 "xarray.conventions.decode_cf_variables.stackable": {
  "data": {
   "lineno": 364
  },
  "type": "function"
 },
 "xarray.conventions.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "xarray.conventions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.conventions.encode_cf_variable": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "xarray.conventions.ensure_dtype_not_object",
    "xarray.conventions.ensure_not_multiindex",
    "xarray.conventions.maybe_default_fill_value",
    "xarray.conventions.maybe_encode_bools",
    "xarray.conventions.maybe_encode_nonstring_dtype"
   ]
  },
  "type": "function"
 },
 "xarray.conventions.encode_dataset_coordinates": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "set",
    "xarray.conventions._encode_coordinates"
   ]
  },
  "type": "function"
 },
 "xarray.conventions.ensure_dtype_not_object": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "Variable",
    "float",
    "isinstance",
    "numpy.dtype",
    "numpy.floating",
    "numpy.issubdtype",
    "numpy.nan",
    "pandas.isnull",
    "xarray.conventions._copy_with_dtype",
    "xarray.conventions._infer_dtype",
    "xarray.conventions._var_as_tuple",
    "xarray.conventions.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.conventions.ensure_not_multiindex": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "NotImplementedError",
    "isinstance",
    "pandas.MultiIndex"
   ]
  },
  "type": "function"
 },
 "xarray.conventions.maybe_default_fill_value": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "numpy.floating",
    "numpy.issubdtype",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "xarray.conventions.maybe_encode_bools": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "Variable",
    "numpy.bool",
    "xarray.conventions._var_as_tuple"
   ]
  },
  "type": "function"
 },
 "xarray.conventions.maybe_encode_nonstring_dtype": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "Variable",
    "numpy.dtype",
    "numpy.floating",
    "numpy.integer",
    "numpy.issubdtype",
    "str",
    "xarray.conventions._var_as_tuple",
    "xarray.conventions.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.conventions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.conventions.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.conventions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.conventions.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.convert": {
  "data": {},
  "type": "module"
 },
 "xarray.convert.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "xarray.convert._filter_attrs": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "xarray.convert._get_iris_args": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "xarray.convert._filter_attrs",
    "xarray.convert._pick_attrs",
    "xarray.convert.cf_units",
    "xarray.convert.iris_forbidden_keys"
   ]
  },
  "type": "function"
 },
 "xarray.convert._iris_cell_methods_to_str": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "xarray.convert._iris_obj_to_attrs": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "xarray.convert._name": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "xarray.convert._pick_attrs": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "xarray.convert.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.convert.cdms2": {
  "data": {
   "shadows": "cdms2"
  },
  "type": "import"
 },
 "xarray.convert.cdms2_ignored_attrs": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "xarray.convert.cell_methods_strings": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "xarray.convert.cf_units": {
  "data": {
   "shadows": "cf_units"
  },
  "type": "import"
 },
 "xarray.convert.dask_array_type": {
  "data": {
   "shadows": "xarray.core.pycompat.dask_array_type"
  },
  "type": "import"
 },
 "xarray.convert.dask_ma": {
  "data": {
   "shadows": "dask.array.ma"
  },
  "type": "import"
 },
 "xarray.convert.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.convert.encode": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "CFDatetimeCoder",
    "CFTimedeltaCoder"
   ]
  },
  "type": "function"
 },
 "xarray.convert.from_cdms2": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "DataArray",
    "decode_cf",
    "numpy.asarray",
    "xarray.convert._filter_attrs",
    "xarray.convert.cdms2_ignored_attrs"
   ]
  },
  "type": "function"
 },
 "xarray.convert.from_iris": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "DataArray",
    "OrderedDict",
    "ValueError",
    "collections.Counter",
    "dask.array.ma.filled",
    "decode_cf",
    "get_fill_value",
    "hasattr",
    "isinstance",
    "len",
    "numpy.asscalar",
    "numpy.ma.MaskedArray",
    "numpy.ma.filled",
    "range",
    "set",
    "xarray.convert._iris_cell_methods_to_str",
    "xarray.convert._iris_obj_to_attrs",
    "xarray.convert._name",
    "xarray.convert.iris",
    "xarray.core.pycompat.dask_array_type"
   ]
  },
  "type": "function"
 },
 "xarray.convert.iris": {
  "data": {
   "shadows": "iris"
  },
  "type": "import"
 },
 "xarray.convert.iris.exceptions": {
  "data": {
   "shadows": "iris.exceptions"
  },
  "type": "import"
 },
 "xarray.convert.iris_forbidden_keys": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "xarray.convert.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.convert.parse_cell_methods": {
  "data": {
   "shadows": "iris.fileformats.netcdf.parse_cell_methods"
  },
  "type": "import"
 },
 "xarray.convert.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.convert.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.convert.to_cdms2": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "OrderedDict",
    "cdms2_axis_cls",
    "len",
    "pandas.isnull",
    "set",
    "set_cdms2_attrs",
    "xarray.convert.cdms2",
    "xarray.convert.encode"
   ]
  },
  "type": "function"
 },
 "xarray.convert.to_cdms2.set_cdms2_attrs": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "xarray.convert.to_iris": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "ValueError",
    "iris.fileformats.netcdf.parse_cell_methods",
    "xarray.convert._get_iris_args",
    "xarray.convert.encode",
    "xarray.convert.iris"
   ]
  },
  "type": "function"
 },
 "xarray.core": {
  "data": {},
  "type": "module"
 },
 "xarray.core.accessors": {
  "data": {},
  "type": "module"
 },
 "xarray.core.accessors.DatetimeAccessor": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "_tslib_field_accessor",
    "numpy.int64",
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.core.accessors.DatetimeAccessor.__init__": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "TypeError",
    "_contains_datetime_like_objects"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessors.DatetimeAccessor._tslib_field_accessor": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessors.DatetimeAccessor._tslib_field_accessor.f": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "obj_type",
    "type",
    "xarray.core.accessors._get_date_field"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessors.DatetimeAccessor._tslib_round_accessor": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "obj_type",
    "type",
    "xarray.core.accessors._round_field"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessors.DatetimeAccessor.ceil": {
  "data": {
   "lineno": 230
  },
  "type": "function"
 },
 "xarray.core.accessors.DatetimeAccessor.floor": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "xarray.core.accessors.DatetimeAccessor.round": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "xarray.core.accessors._access_through_cftimeindex": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "CFTimeIndex",
    "getattr",
    "xarray.core.accessors._season_from_months"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessors._access_through_series": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "getattr",
    "pandas.Series",
    "xarray.core.accessors._season_from_months"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessors._get_date_field": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "access_method",
    "dask.array.map_blocks",
    "is_np_datetime_like",
    "isinstance",
    "xarray.core.accessors._access_through_cftimeindex",
    "xarray.core.accessors._access_through_series"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessors._round_field": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "dask.array.map_blocks",
    "isinstance",
    "numpy.datetime64",
    "xarray.core.accessors._round_series"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessors._round_series": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "getattr",
    "method",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessors._season_from_months": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "xarray.core.accessors.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.accessors.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.accessors.map_blocks": {
  "data": {
   "shadows": "dask.array.map_blocks"
  },
  "type": "import"
 },
 "xarray.core.accessors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.accessors.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.accessors.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.alignment": {
  "data": {
   "symbols_in_volume": [
    "frozenset"
   ]
  },
  "type": "module"
 },
 "xarray.core.alignment._DEFAULT_EXCLUDE": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "xarray.core.alignment._get_joiner": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "xarray.core.alignment.functools",
    "xarray.core.alignment.operator"
   ]
  },
  "type": "function"
 },
 "xarray.core.alignment.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.alignment.align": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "any",
    "collections.defaultdict",
    "iteritems",
    "joiner",
    "len",
    "list",
    "set",
    "tuple",
    "xarray.core.alignment._DEFAULT_EXCLUDE",
    "xarray.core.alignment._get_joiner"
   ]
  },
  "type": "function"
 },
 "xarray.core.alignment.broadcast": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "DataArray",
    "Dataset",
    "OrderedDict",
    "TypeError",
    "ValueError",
    "_broadcast_array",
    "_broadcast_dataset",
    "isinstance",
    "list",
    "set",
    "tuple",
    "xarray.core.alignment.align"
   ]
  },
  "type": "function"
 },
 "xarray.core.alignment.broadcast._broadcast_array": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "DataArray",
    "OrderedDict",
    "_set_dims"
   ]
  },
  "type": "function"
 },
 "xarray.core.alignment.broadcast._broadcast_dataset": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "Dataset",
    "OrderedDict",
    "_set_dims"
   ]
  },
  "type": "function"
 },
 "xarray.core.alignment.broadcast._set_dims": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "ValueError",
    "suppress"
   ]
  },
  "type": "function"
 },
 "xarray.core.alignment.broadcast_arrays": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "DeprecationWarning",
    "xarray.core.alignment.broadcast",
    "xarray.core.alignment.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.alignment.deep_align": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "OrderedDict",
    "ValueError",
    "all",
    "enumerate",
    "frozenset",
    "is_alignable",
    "is_dict_like",
    "object",
    "xarray.core.alignment.align",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.alignment.deep_align.is_alignable": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.core.alignment.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "xarray.core.alignment.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.alignment.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.core.alignment.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.alignment.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "xarray.core.alignment.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.alignment.reindex_like_indexers": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "xarray.core.alignment.reindex_variables": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "FutureWarning",
    "IndexVariable",
    "OrderedDict",
    "ValueError",
    "all",
    "any",
    "get_indexer_nd",
    "is_full_slice",
    "isinstance",
    "iteritems",
    "len",
    "numpy.arange",
    "numpy.array_equal",
    "set",
    "slice",
    "str",
    "tuple",
    "xarray.core.alignment.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.alignment.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.core.arithmetic": {
  "data": {},
  "type": "module"
 },
 "xarray.core.arithmetic.SupportsArithmetic": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.generic",
    "numpy.ndarray",
    "object",
    "xarray.core.arithmetic.numbers"
   ]
  },
  "type": "class"
 },
 "xarray.core.arithmetic.SupportsArithmetic.__array_ufunc__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "NotImplemented",
    "NotImplementedError",
    "any",
    "apply_ufunc",
    "isinstance",
    "numpy.nan",
    "xarray.core.arithmetic.SupportsArithmetic"
   ]
  },
  "type": "function"
 },
 "xarray.core.arithmetic.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.arithmetic.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.arithmetic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.arithmetic.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "xarray.core.arithmetic.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.combine": {
  "data": {},
  "type": "module"
 },
 "xarray.core.combine.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "xarray.core.combine._CONCAT_DIM_DEFAULT": {
  "data": {
   "lineno": 371
  },
  "type": "constant"
 },
 "xarray.core.combine._auto_combine": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "NotImplementedError",
    "OrderedDict",
    "xarray.core.combine._check_shape_tile_ids",
    "xarray.core.combine._combine_nd",
    "xarray.core.combine._infer_concat_order_from_positions",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.combine._auto_combine_1d": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "id",
    "list",
    "merge",
    "sorted",
    "xarray.core.combine._CONCAT_DIM_DEFAULT",
    "xarray.core.combine._auto_concat",
    "xarray.core.combine.itertools",
    "xarray.core.combine.vars_as_keys"
   ]
  },
  "type": "function"
 },
 "xarray.core.combine._auto_combine_all_along_first_dim": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "OrderedDict",
    "sorted",
    "xarray.core.combine._auto_combine_1d",
    "xarray.core.combine.itertools"
   ]
  },
  "type": "function"
 },
 "xarray.core.combine._auto_concat": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "set",
    "xarray.core.combine.concat"
   ]
  },
  "type": "function"
 },
 "xarray.core.combine._calc_concat_dim_coord": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "IndexVariable",
    "as_variable",
    "getattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.core.combine._calc_concat_over": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "process_subset_opt",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.combine._calc_concat_over.process_subset_opt": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "isinstance",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.combine._check_shape_tile_ids": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "ValueError",
    "collections.Counter",
    "len",
    "range",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.core.combine._combine_nd": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "list",
    "xarray.core.combine._auto_combine_all_along_first_dim"
   ]
  },
  "type": "function"
 },
 "xarray.core.combine._dataarray_concat": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "list",
    "xarray.core.combine._dataset_concat"
   ]
  },
  "type": "function"
 },
 "xarray.core.combine._dataset_concat": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "Dataset",
    "KeyError",
    "OrderedDict",
    "ValueError",
    "align",
    "ensure_common_dims",
    "insert_result_variable",
    "iteritems",
    "set",
    "vars",
    "xarray.core.combine._calc_concat_dim_coord",
    "xarray.core.combine._calc_concat_over",
    "xarray.core.combine.concat"
   ]
  },
  "type": "function"
 },
 "xarray.core.combine._dataset_concat.ensure_common_dims": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "pandas.unique",
    "tuple",
    "vars",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.combine._dataset_concat.insert_result_variable": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.core.combine._infer_concat_order_from_positions": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "OrderedDict",
    "ValueError",
    "len",
    "list",
    "str",
    "xarray.core.combine._CONCAT_DIM_DEFAULT",
    "xarray.core.combine._infer_tile_ids_from_nested_list"
   ]
  },
  "type": "function"
 },
 "xarray.core.combine._infer_tile_ids_from_nested_list": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "xarray.core.combine._new_tile_id": {
  "data": {
   "lineno": 517
  },
  "type": "function"
 },
 "xarray.core.combine.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.combine.auto_combine": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "xarray.core.combine._CONCAT_DIM_DEFAULT",
    "xarray.core.combine._auto_combine"
   ]
  },
  "type": "function"
 },
 "xarray.core.combine.concat": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "FutureWarning",
    "StopIteration",
    "TypeError",
    "ValueError",
    "f",
    "isinstance",
    "type",
    "xarray.core.combine.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.combine.concat_vars": {
  "data": {
   "shadows": "concat"
  },
  "type": "import"
 },
 "xarray.core.combine.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.combine.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "xarray.core.combine.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.combine.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.combine.vars_as_keys": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "xarray.core.combine.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.core.common": {
  "data": {
   "symbols_in_volume": [
    "ReprObject"
   ]
  },
  "type": "module"
 },
 "xarray.core.common.ALL_DIMS": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "xarray.core.common.AbstractArray": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "xarray.core.common.ImplementsArrayReduce"
   ]
  },
  "type": "class"
 },
 "xarray.core.common.AbstractArray.T": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray.__array__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray.__bool__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray.__complex__": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "complex"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray.__float__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray.__int__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray.__iter__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray.__long__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "long"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray.__repr__": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray._get_axis_num": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray._iter": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray.get_axis_num": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray.sizes": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "Frozen",
    "OrderedDict",
    "property",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AttrAccessMixin": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.core.common.AttrAccessMixin.__dir__": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "dir",
    "isinstance",
    "set",
    "sorted",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AttrAccessMixin.__getattr__": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "suppress",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AttrAccessMixin.__setattr__": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "AttributeError",
    "object.__setattr__",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AttrAccessMixin._attr_sources": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AttrAccessMixin._ipython_key_completions_": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.AttrAccessMixin._item_sources": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "xarray.core.common.AttrAccessMixin"
   ]
  },
  "type": "class"
 },
 "xarray.core.common.DataWithCoords.__enter__": {
  "data": {
   "lineno": 857
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.__exit__": {
  "data": {
   "lineno": 860
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords._calc_assign_results": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "SortedKeysDict",
    "callable",
    "v"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.assign_attrs": {
  "data": {
   "lineno": 352
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.assign_coords": {
  "data": {
   "lineno": 295
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.close": {
  "data": {
   "lineno": 801
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.get_index": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "KeyError",
    "numpy.int64",
    "pandas.Index",
    "range"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.groupby": {
  "data": {
   "lineno": 435
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.groupby_bins": {
  "data": {
   "lineno": 481
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.isin": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "DataArray",
    "TypeError",
    "apply_ufunc",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.pipe": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "ValueError",
    "func",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.resample": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "DataArray",
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "_get_keep_attrs",
    "bool",
    "either_dict_or_kwargs",
    "isinstance",
    "len",
    "pandas.Grouper",
    "pandas.tseries.frequencies.to_offset"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.rolling": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "either_dict_or_kwargs"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.squeeze": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "xarray.core.common.get_squeeze_dims"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.where": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "DataArray",
    "TypeError",
    "ValueError",
    "align",
    "isinstance",
    "numpy.nonzero",
    "numpy.unique",
    "v",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.ImplementsArrayReduce": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object",
    "textwrap.dedent"
   ]
  },
  "type": "class"
 },
 "xarray.core.common.ImplementsArrayReduce._reduce_method": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.ImplementsArrayReduce._reduce_method.wrapped_func": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "xarray.core.common.ImplementsDatasetReduce": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.core.common.ImplementsDatasetReduce._reduce_method": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.ImplementsDatasetReduce._reduce_method.wrapped_func": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "xarray.core.common._contains_datetime_like_objects": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "xarray.core.common.contains_cftime_datetimes",
    "xarray.core.common.is_np_datetime_like"
   ]
  },
  "type": "function"
 },
 "xarray.core.common._full_like_variable": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "Variable",
    "isinstance",
    "numpy.full_like"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.common.cftime_datetime": {
  "data": {
   "shadows": "cftime.datetime"
  },
  "type": "import"
 },
 "xarray.core.common.contains_cftime_datetimes": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "ImportError",
    "cftime.datetime",
    "isinstance",
    "numpy.dtype",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.dask.array": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.core.common.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "xarray.core.common.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.common.full_like": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "DataArray",
    "Dataset",
    "OrderedDict",
    "TypeError",
    "isinstance",
    "v",
    "xarray.core.common._full_like_variable"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.get_squeeze_dims": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "int",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.is_np_datetime_like": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "numpy.datetime64",
    "numpy.issubdtype",
    "numpy.timedelta64"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.common.ones_like": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "xarray.core.common.full_like"
   ]
  },
  "type": "function"
 },
 "xarray.core.common.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.common.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.common.zeros_like": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "xarray.core.common.full_like"
   ]
  },
  "type": "function"
 },
 "xarray.core.computation": {
  "data": {
   "symbols_in_volume": [
    "frozenset",
    "slice",
    "xarray.core.computation.assert_and_return_exact_match",
    "xarray.core.computation.operator",
    "xarray.core.computation.ordered_set_intersection",
    "xarray.core.computation.ordered_set_union"
   ]
  },
  "type": "module"
 },
 "xarray.core.computation.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "xarray.core.computation.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.core.computation.SLICE_NONE": {
  "data": {
   "lineno": 461
  },
  "type": "constant"
 },
 "xarray.core.computation._DEFAULT_FROZEN_SET": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "xarray.core.computation._DEFAULT_NAME": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "xarray.core.computation._JOINERS": {
  "data": {
   "lineno": 250
  },
  "type": "constant"
 },
 "xarray.core.computation._JOINS_WITHOUT_FILL_VALUES": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "xarray.core.computation._NO_FILL_VALUE": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "xarray.core.computation._UFuncSignature": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.core.computation._UFuncSignature.__eq__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "xarray.core.computation._UFuncSignature.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "xarray.core.computation._UFuncSignature.__ne__": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "xarray.core.computation._UFuncSignature.__repr__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "list",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.core.computation._UFuncSignature.__str__": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "xarray.core.computation._UFuncSignature.all_core_dims": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.computation._UFuncSignature.all_input_core_dims": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "frozenset",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.computation._UFuncSignature.all_output_core_dims": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "frozenset",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.computation._UFuncSignature.num_inputs": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.computation._UFuncSignature.num_outputs": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.computation._UFuncSignature.to_gufunc_string": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "dict",
    "len",
    "range",
    "sorted",
    "str",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.computation._apply_with_dask_atop": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "any",
    "dask.array.atop",
    "enumerate",
    "func",
    "getattr",
    "isinstance",
    "len",
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.computation._as_variables_or_variable": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "xarray.core.computation._fast_dataset": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.computation._get_coord_variables": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "AttributeError",
    "getattr"
   ]
  },
  "type": "function"
 },
 "xarray.core.computation._iter_over_selections": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "_dummy_copy"
   ]
  },
  "type": "function"
 },
 "xarray.core.computation._unpack_dict_tuples": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "OrderedDict",
    "range",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.computation.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.computation.apply_array_ufunc": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "func",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "xarray.core.computation.apply_dataarray_ufunc": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "DataArray",
    "TypeError",
    "deep_align",
    "func",
    "getattr",
    "len",
    "list",
    "tuple",
    "xarray.core.computation._DEFAULT_FROZEN_SET",
    "xarray.core.computation.build_output_coords",
    "xarray.core.computation.result_name",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.computation.apply_dataset_ufunc": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "TypeError",
    "deep_align",
    "func",
    "getattr",
    "isinstance",
    "len",
    "list",
    "tuple",
    "xarray.core.computation._DEFAULT_FROZEN_SET",
    "xarray.core.computation._JOINS_WITHOUT_FILL_VALUES",
    "xarray.core.computation._NO_FILL_VALUE",
    "xarray.core.computation._fast_dataset",
    "xarray.core.computation.apply_dict_of_variables_ufunc",
    "xarray.core.computation.build_output_coords",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.computation.apply_dict_of_variables_ufunc": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "OrderedDict",
    "TypeError",
    "func",
    "list",
    "xarray.core.computation._as_variables_or_variable",
    "xarray.core.computation._unpack_dict_tuples",
    "xarray.core.computation.collect_dict_values",
    "xarray.core.computation.join_dict_keys",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.computation.apply_groupby_ufunc": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "combine",
    "func",
    "hasattr",
    "isinstance",
    "peek_at",
    "tuple",
    "xarray.core.computation._iter_over_selections",
    "xarray.core.computation.itertools",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.computation.apply_ufunc": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "DataArray",
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "Variable",
    "any",
    "distutils.version.LooseVersion",
    "frozenset",
    "func",
    "is_dict_like",
    "isinstance",
    "len",
    "list",
    "numpy.__version__",
    "numpy.vectorize",
    "set",
    "variables_ufunc",
    "xarray.core.computation._NO_FILL_VALUE",
    "xarray.core.computation._UFuncSignature",
    "xarray.core.computation.apply_array_ufunc",
    "xarray.core.computation.apply_dataarray_ufunc",
    "xarray.core.computation.apply_dataset_ufunc",
    "xarray.core.computation.apply_groupby_ufunc",
    "xarray.core.computation.apply_variable_ufunc",
    "xarray.core.computation.functools"
   ]
  },
  "type": "function"
 },
 "xarray.core.computation.apply_variable_ufunc": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "Variable",
    "any",
    "as_compatible_data",
    "func",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "tuple",
    "xarray.core.computation._DEFAULT_FROZEN_SET",
    "xarray.core.computation.broadcast_compat_data",
    "xarray.core.computation.unified_dim_sizes",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.computation.apply_variable_ufunc.func": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "xarray.core.computation._apply_with_dask_atop"
   ]
  },
  "type": "function"
 },
 "xarray.core.computation.assert_and_return_exact_match": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "xarray.core.computation.broadcast_compat_data": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.newaxis",
    "set",
    "tuple",
    "xarray.core.computation.SLICE_NONE"
   ]
  },
  "type": "function"
 },
 "xarray.core.computation.build_output_coords": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "OrderedDict",
    "expand_and_merge_variables",
    "frozenset",
    "len",
    "set",
    "xarray.core.computation._get_coord_variables"
   ]
  },
  "type": "function"
 },
 "xarray.core.computation.collect_dict_values": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "is_dict_like"
   ]
  },
  "type": "function"
 },
 "xarray.core.computation.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.core.computation.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "xarray.core.computation.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.computation.dot": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "DataArray",
    "TypeError",
    "Variable",
    "any",
    "collections.Counter",
    "distutils.version.LooseVersion",
    "enumerate",
    "func",
    "isinstance",
    "len",
    "set",
    "set.intersection",
    "tuple",
    "type",
    "xarray.core.computation.apply_ufunc",
    "xarray.core.computation.dask",
    "xarray.core.computation.functools"
   ]
  },
  "type": "function"
 },
 "xarray.core.computation.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.core.computation.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "xarray.core.computation.join_dict_keys": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "hasattr",
    "joiner",
    "xarray.core.computation._JOINERS"
   ]
  },
  "type": "function"
 },
 "xarray.core.computation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.computation.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "xarray.core.computation.ordered_set_intersection": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.computation.ordered_set_union": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "OrderedDict"
   ]
  },
  "type": "function"
 },
 "xarray.core.computation.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.computation.result_name": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "getattr",
    "len",
    "xarray.core.computation._DEFAULT_NAME"
   ]
  },
  "type": "function"
 },
 "xarray.core.computation.unified_dim_sizes": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "OrderedDict",
    "ValueError",
    "frozenset",
    "len",
    "list",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.computation.where": {
  "data": {
   "lineno": 1100,
   "symbols_in_volume": [
    "xarray.core.computation.apply_ufunc"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates": {
  "data": {
   "symbols_in_volume": [
    "ReprObject"
   ]
  },
  "type": "module"
 },
 "xarray.core.coordinates.AbstractCoordinates": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "collections.Mapping"
   ]
  },
  "type": "class"
 },
 "xarray.core.coordinates.AbstractCoordinates.__contains__": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "xarray.core.coordinates.AbstractCoordinates.__getitem__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.AbstractCoordinates.__iter__": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "xarray.core.coordinates.AbstractCoordinates.__len__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.AbstractCoordinates.__setitem__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "xarray.core.coordinates.AbstractCoordinates.__unicode__": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "xarray.core.coordinates.AbstractCoordinates._merge_inplace": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "OrderedDict",
    "contextlib.contextmanager",
    "merge_coords_for_inplace_math"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.AbstractCoordinates._merge_raw": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "OrderedDict",
    "expand_and_merge_variables"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.AbstractCoordinates._update_coords": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.AbstractCoordinates.dims": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.AbstractCoordinates.indexes": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.AbstractCoordinates.merge": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "expand_and_merge_variables",
    "getattr",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.AbstractCoordinates.to_index": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "pandas.MultiIndex.from_product",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.AbstractCoordinates.update": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "getattr",
    "merge_coords"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.AbstractCoordinates.variables": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "NotImplementedError",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.DataArrayCoordinates": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "xarray.core.coordinates.AbstractCoordinates"
   ]
  },
  "type": "class"
 },
 "xarray.core.coordinates.DataArrayCoordinates.__delitem__": {
  "data": {
   "lineno": 253
  },
  "type": "function"
 },
 "xarray.core.coordinates.DataArrayCoordinates.__getitem__": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "xarray.core.coordinates.DataArrayCoordinates.__init__": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "xarray.core.coordinates.DataArrayCoordinates._ipython_key_completions_": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "xarray.core.coordinates.DataArrayCoordinates._names": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "property",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.DataArrayCoordinates._to_dataset": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "OrderedDict",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.DataArrayCoordinates._update_coords": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "ValueError",
    "calculate_dimensions",
    "set",
    "xarray.core.coordinates._THIS_ARRAY"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.DataArrayCoordinates.to_dataset": {
  "data": {
   "lineno": 250
  },
  "type": "function"
 },
 "xarray.core.coordinates.DataArrayCoordinates.variables": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "Frozen",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.DatasetCoordinates": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "xarray.core.coordinates.AbstractCoordinates"
   ]
  },
  "type": "class"
 },
 "xarray.core.coordinates.DatasetCoordinates.__delitem__": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.DatasetCoordinates.__getitem__": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.DatasetCoordinates.__init__": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "xarray.core.coordinates.DatasetCoordinates._ipython_key_completions_": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "xarray.core.coordinates.DatasetCoordinates._names": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.DatasetCoordinates._update_coords": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "calculate_dimensions",
    "dict",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.DatasetCoordinates.to_dataset": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "xarray.core.coordinates.DatasetCoordinates.variables": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "Frozen",
    "OrderedDict",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.Indexes": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "collections.Mapping"
   ]
  },
  "type": "class"
 },
 "xarray.core.coordinates.Indexes.__contains__": {
  "data": {
   "lineno": 305
  },
  "type": "function"
 },
 "xarray.core.coordinates.Indexes.__getitem__": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.Indexes.__init__": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "xarray.core.coordinates.Indexes.__iter__": {
  "data": {
   "lineno": 297
  },
  "type": "function"
 },
 "xarray.core.coordinates.Indexes.__len__": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.Indexes.__unicode__": {
  "data": {
   "lineno": 313
  },
  "type": "function"
 },
 "xarray.core.coordinates.LevelCoordinatesSource": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.core.coordinates.LevelCoordinatesSource.__getitem__": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.LevelCoordinatesSource.__init__": {
  "data": {
   "lineno": 268
  },
  "type": "function"
 },
 "xarray.core.coordinates.LevelCoordinatesSource.__iter__": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "xarray.core.coordinates._THIS_ARRAY": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "xarray.core.coordinates.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.coordinates.assert_coordinate_consistent": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "xarray.core.coordinates.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "xarray.core.coordinates.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.coordinates.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.coordinates.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.coordinates.remap_label_indexers": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "DataArray",
    "OrderedDict",
    "Variable",
    "either_dict_or_kwargs",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.core.dask_array_compat": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "Exception",
    "ImportError",
    "dask.__version__",
    "dask.array.gradient",
    "distutils.version.LooseVersion",
    "numpy.AxisError",
    "numpy.array",
    "type"
   ]
  },
  "type": "module"
 },
 "xarray.core.dask_array_compat.AxisError": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "xarray.core.dask_array_compat.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "xarray.core.dask_array_compat.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.core.dask_array_compat.Real": {
  "data": {
   "shadows": "numbers.Real"
  },
  "type": "import"
 },
 "xarray.core.dask_array_compat._gradient_kernel": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.gradient"
   ]
  },
  "type": "function"
 },
 "xarray.core.dask_array_compat._isin_kernel": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.in1d"
   ]
  },
  "type": "function"
 },
 "xarray.core.dask_array_compat.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.dask_array_compat.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.core.dask_array_compat.dask_version": {
  "data": {
   "shadows": "dask.__version__"
  },
  "type": "import"
 },
 "xarray.core.dask_array_compat.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.dask_array_compat.gradient": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "dask.array.Array",
    "dask.array.asarray",
    "enumerate",
    "float",
    "isinstance",
    "issubclass",
    "len",
    "numbers.Integral",
    "numbers.Real",
    "numpy.array",
    "numpy.bool8",
    "numpy.cumsum",
    "numpy.isscalar",
    "numpy.min",
    "range",
    "set",
    "tuple",
    "xarray.core.dask_array_compat._gradient_kernel",
    "xarray.core.dask_array_compat.math",
    "xarray.core.dask_array_compat.validate_axis"
   ]
  },
  "type": "function"
 },
 "xarray.core.dask_array_compat.isin": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "bool",
    "dask.array.asarray",
    "dask.array.atop",
    "range",
    "tuple",
    "xarray.core.dask_array_compat._isin_kernel"
   ]
  },
  "type": "function"
 },
 "xarray.core.dask_array_compat.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "xarray.core.dask_array_compat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.dask_array_compat.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.dask_array_compat.validate_axis": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "list",
    "numbers.Integral",
    "tuple",
    "xarray.core.dask_array_compat.AxisError"
   ]
  },
  "type": "function"
 },
 "xarray.core.dask_array_ops": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "dask.array.ghost.ghost",
    "dask.array.ghost.trim_internal",
    "dask.array.overlap.overlap",
    "dask.array.overlap.trim_internal",
    "distutils.version.LooseVersion",
    "xarray.core.dask_array_ops.dask"
   ]
  },
  "type": "module"
 },
 "xarray.core.dask_array_ops.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.core.dask_array_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.dask_array_ops.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.core.dask_array_ops.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "xarray.core.dask_array_ops.dask_rolling_wrapper": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "range",
    "xarray.core.dask_array_ops.overlap",
    "xarray.core.dask_array_ops.trim_internal"
   ]
  },
  "type": "function"
 },
 "xarray.core.dask_array_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.dask_array_ops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.dask_array_ops.overlap": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "xarray.core.dask_array_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.dask_array_ops.rolling_window": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "dask.array.concatenate",
    "dask.array.full",
    "int",
    "list",
    "max",
    "min",
    "range",
    "slice",
    "xarray.core.dask_array_ops.overlap"
   ]
  },
  "type": "function"
 },
 "xarray.core.dask_array_ops.rolling_window.func": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "numpy.asarray",
    "slice"
   ]
  },
  "type": "function"
 },
 "xarray.core.dask_array_ops.trim_internal": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "xarray.core.dataarray": {
  "data": {
   "symbols_in_volume": [
    "xarray.core.dataarray.DataArray"
   ]
  },
  "type": "module"
 },
 "xarray.core.dataarray.DataArray": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "xarray.core.dataarray.DataArray.__array_wrap__": {
  "data": {
   "lineno": 1944
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__contains__": {
  "data": {
   "lineno": 507
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__copy__": {
  "data": {
   "lineno": 757
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__dask_graph__": {
  "data": {
   "lineno": 585
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__dask_keys__": {
  "data": {
   "lineno": 588
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__dask_layers__": {
  "data": {
   "lineno": 591
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__dask_optimize__": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__dask_postcompute__": {
  "data": {
   "lineno": 602
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__dask_postpersist__": {
  "data": {
   "lineno": 606
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__dask_scheduler__": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__deepcopy__": {
  "data": {
   "lineno": 760
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__delitem__": {
  "data": {
   "lineno": 493
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__getitem__": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__init__": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "Variable",
    "as_compatible_data",
    "getattr",
    "isinstance",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Panel",
    "pandas.Series",
    "xarray.core.dataarray._infer_coords_and_dims"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__len__": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__setitem__": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "assert_coordinate_consistent",
    "isinstance",
    "xarray.core.dataarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._all_compat": {
  "data": {
   "lineno": 1874,
   "symbols_in_volume": [
    "compat"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._all_compat.compat": {
  "data": {
   "lineno": 1877,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._attr_sources": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._binary_op": {
  "data": {
   "lineno": 1958,
   "symbols_in_volume": [
    "func",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._binary_op.func": {
  "data": {
   "lineno": 1960,
   "symbols_in_volume": [
    "Dataset",
    "NotImplemented",
    "align",
    "f",
    "getattr",
    "isinstance",
    "xarray.core.dataarray.DataArray",
    "xarray.core.dataarray.functools"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._copy_attrs_from": {
  "data": {
   "lineno": 2000
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._dask_finalize": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "func",
    "staticmethod",
    "xarray.core.dataarray.DataArray",
    "xarray.core.dataarray._THIS_ARRAY"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._from_temp_dataset": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "xarray.core.dataarray._THIS_ARRAY"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._getitem_coord": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "KeyError",
    "_get_virtual_variable",
    "dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._in_memory": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._inplace_binary_op": {
  "data": {
   "lineno": 1981,
   "symbols_in_volume": [
    "func",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._inplace_binary_op.func": {
  "data": {
   "lineno": 1983,
   "symbols_in_volume": [
    "TypeError",
    "f",
    "getattr",
    "isinstance",
    "xarray.core.dataarray.functools"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._item_key_to_dict": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._item_sources": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "LevelCoordinatesSource",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._level_coords": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "IndexVariable",
    "OrderedDict",
    "isinstance",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._replace": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._replace_indexes": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "IndexVariable",
    "isinstance",
    "len",
    "pandas.MultiIndex"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._replace_maybe_drop_dims": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "OrderedDict",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._result_name": {
  "data": {
   "lineno": 1935,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._title_for_slice": {
  "data": {
   "lineno": 2020,
   "symbols_in_volume": [
    "format_item",
    "iteritems",
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._to_dataset_split": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "Dataset",
    "OrderedDict",
    "subset"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._to_dataset_split.subset": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._to_dataset_whole": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "Dataset._from_vars_and_coord_names",
    "ValueError",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._to_temp_dataset": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "xarray.core.dataarray._THIS_ARRAY"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._unary_op": {
  "data": {
   "lineno": 1948,
   "symbols_in_volume": [
    "func",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._unary_op.func": {
  "data": {
   "lineno": 1950,
   "symbols_in_volume": [
    "f",
    "numpy.errstate",
    "xarray.core.dataarray.functools"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.attrs": {
  "data": {
   "lineno": 521
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.bfill": {
  "data": {
   "lineno": 1526,
   "symbols_in_volume": [
    "bfill"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.broadcast_equals": {
  "data": {
   "lineno": 1883,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.chunk": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.chunks": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.combine_first": {
  "data": {
   "lineno": 1549
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.compute": {
  "data": {
   "lineno": 641
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.coords": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "DataArrayCoordinates",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.copy": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "OrderedDict"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.data": {
  "data": {
   "lineno": 400
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.diff": {
  "data": {
   "lineno": 2048
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.differentiate": {
  "data": {
   "lineno": 2368
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.dims": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.dot": {
  "data": {
   "lineno": 2181,
   "symbols_in_volume": [
    "Dataset",
    "NotImplementedError",
    "TypeError",
    "isinstance",
    "xarray.core.dataarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.drop": {
  "data": {
   "lineno": 1391
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.dropna": {
  "data": {
   "lineno": 1411
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.dtype": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.encoding": {
  "data": {
   "lineno": 531
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.equals": {
  "data": {
   "lineno": 1898,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.expand_dims": {
  "data": {
   "lineno": 1133
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.ffill": {
  "data": {
   "lineno": 1503,
   "symbols_in_volume": [
    "ffill"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.fillna": {
  "data": {
   "lineno": 1433,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.from_cdms2": {
  "data": {
   "lineno": 1854,
   "symbols_in_volume": [
    "classmethod",
    "from_cdms2"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.from_dict": {
  "data": {
   "lineno": 1781,
   "symbols_in_volume": [
    "KeyError",
    "OrderedDict",
    "ValueError",
    "classmethod",
    "cls",
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.from_iris": {
  "data": {
   "lineno": 1867,
   "symbols_in_volume": [
    "classmethod",
    "from_iris"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.from_series": {
  "data": {
   "lineno": 1833,
   "symbols_in_volume": [
    "Dataset.from_dataframe",
    "classmethod",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.identical": {
  "data": {
   "lineno": 1918,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.imag": {
  "data": {
   "lineno": 2177,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.indexes": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "Indexes",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.interp": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.interp_like": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.interpolate_na": {
  "data": {
   "lineno": 1458,
   "symbols_in_volume": [
    "interp_na"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.isel": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "either_dict_or_kwargs"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.isel_points": {
  "data": {
   "lineno": 852
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.load": {
  "data": {
   "lineno": 617
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.loc": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "property",
    "xarray.core.dataarray._LocIndexer"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.name": {
  "data": {
   "lineno": 363
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.nbytes": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.ndim": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.persist": {
  "data": {
   "lineno": 663
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.plot": {
  "data": {
   "lineno": 2003,
   "symbols_in_volume": [
    "_PlotMethods",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.quantile": {
  "data": {
   "lineno": 2282
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.rank": {
  "data": {
   "lineno": 2328
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.real": {
  "data": {
   "lineno": 2173,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.reduce": {
  "data": {
   "lineno": 1567,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.reindex": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "either_dict_or_kwargs"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.reindex_like": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "reindex_like_indexers"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.rename": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "either_dict_or_kwargs"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.reorder_levels": {
  "data": {
   "lineno": 1231,
   "symbols_in_volume": [
    "IndexVariable",
    "ValueError",
    "_check_inplace",
    "either_dict_or_kwargs",
    "isinstance",
    "pandas.MultiIndex"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.reset_coords": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "ValueError",
    "_check_inplace",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.reset_index": {
  "data": {
   "lineno": 1198,
   "symbols_in_volume": [
    "_check_inplace",
    "set",
    "split_indexes"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.roll": {
  "data": {
   "lineno": 2132
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.sel": {
  "data": {
   "lineno": 824
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.sel_points": {
  "data": {
   "lineno": 863
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.set_index": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": [
    "_check_inplace",
    "either_dict_or_kwargs",
    "merge_indexes",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.shape": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.shift": {
  "data": {
   "lineno": 2089
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.size": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.sortby": {
  "data": {
   "lineno": 2229
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.stack": {
  "data": {
   "lineno": 1272
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.swap_dims": {
  "data": {
   "lineno": 1109
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.to_cdms2": {
  "data": {
   "lineno": 1848,
   "symbols_in_volume": [
    "to_cdms2"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.to_dataframe": {
  "data": {
   "lineno": 1628,
   "symbols_in_volume": [
    "OrderedDict",
    "ValueError",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.to_dataset": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "FutureWarning",
    "TypeError",
    "xarray.core.dataarray.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.to_dict": {
  "data": {
   "lineno": 1754,
   "symbols_in_volume": [
    "decode_numpy_dict_values",
    "ensure_us_time_resolution"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.to_index": {
  "data": {
   "lineno": 417
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.to_iris": {
  "data": {
   "lineno": 1861,
   "symbols_in_volume": [
    "to_iris"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.to_masked_array": {
  "data": {
   "lineno": 1664,
   "symbols_in_volume": [
    "numpy.ma.MaskedArray",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.to_netcdf": {
  "data": {
   "lineno": 1681
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.to_pandas": {
  "data": {
   "lineno": 1600,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "constructor",
    "pandas.DataFrame",
    "pandas.Panel",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.to_series": {
  "data": {
   "lineno": 1655,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.transpose": {
  "data": {
   "lineno": 1364
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.unstack": {
  "data": {
   "lineno": 1318
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.values": {
  "data": {
   "lineno": 409
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.variable": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray._LocIndexer": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.core.dataarray._LocIndexer.__getitem__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray._LocIndexer.__init__": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "xarray.core.dataarray._LocIndexer.__setitem__": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "dict",
    "remap_label_indexers",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray._THIS_ARRAY": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "xarray.core.dataarray._infer_coords_and_dims": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "OrderedDict",
    "TypeError",
    "ValueError",
    "any",
    "as_variable",
    "assert_unique_multiindex_level_names",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "range",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataarray.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.dataarray.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.dataarray.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.core.dataarray.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.dataarray.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.dataarray.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.dataarray.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.core.dataset": {
  "data": {
   "symbols_in_volume": [
    "xarray.core.dataset.Dataset"
   ]
  },
  "type": "module"
 },
 "xarray.core.dataset.DataVariables": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "collections.Mapping"
   ]
  },
  "type": "class"
 },
 "xarray.core.dataset.DataVariables.__contains__": {
  "data": {
   "lineno": 269
  },
  "type": "function"
 },
 "xarray.core.dataset.DataVariables.__getitem__": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.DataVariables.__init__": {
  "data": {
   "lineno": 259
  },
  "type": "function"
 },
 "xarray.core.dataset.DataVariables.__iter__": {
  "data": {
   "lineno": 262
  },
  "type": "function"
 },
 "xarray.core.dataset.DataVariables.__len__": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.DataVariables.__unicode__": {
  "data": {
   "lineno": 279
  },
  "type": "function"
 },
 "xarray.core.dataset.DataVariables._ipython_key_completions_": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "xarray.core.dataset.DataVariables.variables": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "Frozen",
    "OrderedDict",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "collections.Mapping",
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.core.dataset.Dataset.__array__": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__bool__": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__contains__": {
  "data": {
   "lineno": 928
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__copy__": {
  "data": {
   "lineno": 909
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__dask_graph__": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "ImportError",
    "dask.highlevelgraph.HighLevelGraph.merge",
    "dask.sharedict.merge"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__dask_keys__": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "xarray.core.dataset.dask"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__dask_layers__": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "sum",
    "xarray.core.dataset.dask"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__dask_optimize__": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "dask.array.Array.__dask_optimize__",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__dask_postcompute__": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "xarray.core.dataset.dask"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__dask_postpersist__": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "xarray.core.dataset.dask"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__dask_scheduler__": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "dask.array.Array.__dask_scheduler__",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__deepcopy__": {
  "data": {
   "lineno": 912
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__delitem__": {
  "data": {
   "lineno": 991
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__getitem__": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "hashable",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__init__": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "OrderedDict",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__iter__": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__len__": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__setitem__": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__unicode__": {
  "data": {
   "lineno": 1279
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._all_compat": {
  "data": {
   "lineno": 1000
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._all_compat.compat": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._assert_all_in_dataset": {
  "data": {
   "lineno": 2593,
   "symbols_in_volume": [
    "ValueError",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._attr_sources": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._attrs_copy": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "OrderedDict"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._binary_op": {
  "data": {
   "lineno": 3314,
   "symbols_in_volume": [
    "func",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._binary_op.func": {
  "data": {
   "lineno": 3316,
   "symbols_in_volume": [
    "DataArray",
    "NotImplemented",
    "align",
    "f",
    "isinstance",
    "xarray.core.dataset.Dataset",
    "xarray.core.dataset.functools"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._calculate_binary_op": {
  "data": {
   "lineno": 3352,
   "symbols_in_volume": [
    "OrderedDict",
    "apply_over_both",
    "f",
    "getattr",
    "isinstance",
    "xarray.core.dataset.Dataset",
    "xarray.core.dataset.calculate_dimensions"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._calculate_binary_op.apply_over_both": {
  "data": {
   "lineno": 3354,
   "symbols_in_volume": [
    "OrderedDict",
    "ValueError",
    "f",
    "list",
    "numpy.nan",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._construct_dataarray": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "DataArray",
    "KeyError",
    "OrderedDict",
    "set",
    "xarray.core.dataset._get_virtual_variable"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._construct_direct": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "object.__new__"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._copy_attrs_from": {
  "data": {
   "lineno": 3393
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._copy_listed": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "KeyError",
    "OrderedDict",
    "set",
    "xarray.core.dataset._get_virtual_variable"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._dask_postcompute": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "OrderedDict",
    "func",
    "list",
    "staticmethod",
    "xarray.core.dataset.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._dask_postpersist": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "OrderedDict",
    "func",
    "staticmethod",
    "xarray.core.dataset.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._drop_vars": {
  "data": {
   "lineno": 2629,
   "symbols_in_volume": [
    "OrderedDict",
    "iteritems",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._from_vars_and_coord_names": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "classmethod",
    "cls._construct_direct",
    "dict",
    "xarray.core.dataset.calculate_dimensions"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._get_indexers_coordinates": {
  "data": {
   "lineno": 1443,
   "symbols_in_volume": [
    "DataArray",
    "OrderedDict",
    "ValueError",
    "assert_coordinate_consistent",
    "isinstance",
    "merge_variables"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._inplace_binary_op": {
  "data": {
   "lineno": 3331,
   "symbols_in_volume": [
    "func",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._inplace_binary_op.func": {
  "data": {
   "lineno": 3333,
   "symbols_in_volume": [
    "DataArray",
    "TypeError",
    "f",
    "isinstance",
    "xarray.core.dataset.Dataset",
    "xarray.core.dataset.functools"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._item_sources": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": [
    "LevelCoordinatesSource",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._level_coords": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "IndexVariable",
    "OrderedDict",
    "isinstance",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._persist_inplace": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "isinstance",
    "xarray.core.dataset.dask",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._replace_indexes": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "IndexVariable",
    "isinstance",
    "len",
    "pandas.MultiIndex"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._replace_vars_and_dims": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "xarray.core.dataset.calculate_dimensions"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._set_init_vars_and_dims": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "merge_data_and_coords",
    "xarray.core.dataset.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._stack_once": {
  "data": {
   "lineno": 2365,
   "symbols_in_volume": [
    "IndexVariable",
    "OrderedDict",
    "any",
    "distutils.version.LooseVersion",
    "isinstance",
    "list",
    "pandas.Int64Index",
    "pandas.RangeIndex",
    "pandas.__version__",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._subset_with_all_valid_coords": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "dict",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._to_dataframe": {
  "data": {
   "lineno": 3074,
   "symbols_in_volume": [
    "OrderedDict",
    "pandas.DataFrame",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._unary_op": {
  "data": {
   "lineno": 3301,
   "symbols_in_volume": [
    "func",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._unary_op.func": {
  "data": {
   "lineno": 3303,
   "symbols_in_volume": [
    "f",
    "xarray.core.dataset.functools"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._unstack_once": {
  "data": {
   "lineno": 2427,
   "symbols_in_volume": [
    "IndexVariable",
    "OrderedDict",
    "distutils.version.LooseVersion",
    "pandas.MultiIndex.from_product",
    "pandas.__version__",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._validate_indexers": {
  "data": {
   "lineno": 1398,
   "symbols_in_volume": [
    "DataArray",
    "IndexError",
    "TypeError",
    "ValueError",
    "Variable",
    "_parse_array_of_cftime_strings",
    "as_variable",
    "isinstance",
    "iteritems",
    "numpy.asarray",
    "pandas.DatetimeIndex",
    "slice",
    "tuple",
    "xarray.CFTimeIndex",
    "xarray.core.dataset.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.apply": {
  "data": {
   "lineno": 2951,
   "symbols_in_volume": [
    "OrderedDict",
    "_get_keep_attrs",
    "func",
    "iteritems",
    "maybe_wrap_array",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.assign": {
  "data": {
   "lineno": 3001,
   "symbols_in_volume": [
    "either_dict_or_kwargs"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.attrs": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "OrderedDict"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.bfill": {
  "data": {
   "lineno": 2834,
   "symbols_in_volume": [
    "_apply_over_vars_with_dim"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.broadcast_equals": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.chunk": {
  "data": {
   "lineno": 1333,
   "symbols_in_volume": [
    "ImportError",
    "OrderedDict",
    "ValueError",
    "dict.fromkeys",
    "isinstance",
    "maybe_chunk",
    "numbers.Number"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.chunk.maybe_chunk": {
  "data": {
   "lineno": 1383,
   "symbols_in_volume": [
    "dask.base.tokenize",
    "selkeys"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.chunk.selkeys": {
  "data": {
   "lineno": 1378,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.chunks": {
  "data": {
   "lineno": 1319,
   "symbols_in_volume": [
    "Frozen",
    "SortedKeysDict",
    "ValueError",
    "property",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.combine_first": {
  "data": {
   "lineno": 2859
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.compute": {
  "data": {
   "lineno": 584
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.coords": {
  "data": {
   "lineno": 1071,
   "symbols_in_volume": [
    "DatasetCoordinates",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.copy": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "OrderedDict",
    "ValueError",
    "iteritems",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.data_vars": {
  "data": {
   "lineno": 1078,
   "symbols_in_volume": [
    "property",
    "xarray.core.dataset.DataVariables"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.diff": {
  "data": {
   "lineno": 3399,
   "symbols_in_volume": [
    "OrderedDict",
    "ValueError",
    "iteritems",
    "slice"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.differentiate": {
  "data": {
   "lineno": 3799,
   "symbols_in_volume": [
    "OrderedDict",
    "ValueError",
    "Variable",
    "_contains_datetime_like_objects",
    "datetime_to_numeric",
    "numpy.datetime_data"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.dims": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "Frozen",
    "SortedKeysDict",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.drop": {
  "data": {
   "lineno": 2601,
   "symbols_in_volume": [
    "KeyError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.dropna": {
  "data": {
   "lineno": 2676,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "list",
    "numpy.asarray",
    "numpy.int64",
    "numpy.prod",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.dump_to_store": {
  "data": {
   "lineno": 1153,
   "symbols_in_volume": [
    "dump_to_store"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.encoding": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.equals": {
  "data": {
   "lineno": 1030,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.expand_dims": {
  "data": {
   "lineno": 2173,
   "symbols_in_volume": [
    "IndexError",
    "OrderedDict",
    "ValueError",
    "int",
    "isinstance",
    "iteritems",
    "len",
    "list",
    "range",
    "set",
    "sorted",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.ffill": {
  "data": {
   "lineno": 2809,
   "symbols_in_volume": [
    "_apply_over_vars_with_dim"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.fillna": {
  "data": {
   "lineno": 2731,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.filter_by_attrs": {
  "data": {
   "lineno": 3868,
   "symbols_in_volume": [
    "callable",
    "pattern"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.from_dataframe": {
  "data": {
   "lineno": 3090,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "cls",
    "enumerate",
    "isinstance",
    "iteritems",
    "numpy.asarray",
    "pandas.MultiIndex",
    "pandas.MultiIndex.from_product",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.from_dict": {
  "data": {
   "lineno": 3239,
   "symbols_in_volume": [
    "KeyError",
    "OrderedDict",
    "ValueError",
    "classmethod",
    "cls",
    "set",
    "str",
    "xarray.core.dataset.itertools"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.identical": {
  "data": {
   "lineno": 1050,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.imag": {
  "data": {
   "lineno": 3863,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.indexes": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "Indexes",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.info": {
  "data": {
   "lineno": 1282,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.attrs.items",
    "dask.array.dims",
    "dask.array.dtype",
    "xarray.core.dataset.sys"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.interp": {
  "data": {
   "lineno": 1918,
   "symbols_in_volume": [
    "OrderedDict",
    "_validate_interp_indexer",
    "all",
    "either_dict_or_kwargs",
    "iteritems",
    "maybe_variable",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.interp._validate_interp_indexer": {
  "data": {
   "lineno": 1972,
   "symbols_in_volume": [
    "TypeError",
    "_contains_datetime_like_objects"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.interp.maybe_variable": {
  "data": {
   "lineno": 1965,
   "symbols_in_volume": [
    "KeyError",
    "as_variable",
    "range"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.interp_like": {
  "data": {
   "lineno": 2012,
   "symbols_in_volume": [
    "OrderedDict"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.interpolate_na": {
  "data": {
   "lineno": 2760,
   "symbols_in_volume": [
    "_apply_over_vars_with_dim"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.isel": {
  "data": {
   "lineno": 1480,
   "symbols_in_volume": [
    "OrderedDict",
    "either_dict_or_kwargs",
    "iteritems",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.isel_points": {
  "data": {
   "lineno": 1614,
   "symbols_in_volume": [
    "DeprecationWarning",
    "OrderedDict",
    "TypeError",
    "ValueError",
    "any",
    "as_variable",
    "dict",
    "hasattr",
    "isinstance",
    "iteritems",
    "len",
    "list",
    "numpy.asarray",
    "relevant_keys",
    "set",
    "slice",
    "take",
    "tuple",
    "type",
    "xarray.core.dataset.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.isel_points.relevant_keys": {
  "data": {
   "lineno": 1669,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.isel_points.take": {
  "data": {
   "lineno": 1657,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.load": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "dask.array.compute",
    "isinstance",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.load_store": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "decoder"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.loc": {
  "data": {
   "lineno": 953,
   "symbols_in_volume": [
    "property",
    "xarray.core.dataset._LocIndexer"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.merge": {
  "data": {
   "lineno": 2535,
   "symbols_in_volume": [
    "_check_inplace",
    "dataset_merge_method",
    "frozenset"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.nbytes": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "property",
    "sum"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.persist": {
  "data": {
   "lineno": 622
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.quantile": {
  "data": {
   "lineno": 3664,
   "symbols_in_volume": [
    "OrderedDict",
    "Variable",
    "_get_keep_attrs",
    "isinstance",
    "iteritems",
    "len",
    "numpy.asarray",
    "numpy.bool_",
    "numpy.float64",
    "numpy.issubdtype",
    "numpy.number",
    "set",
    "xarray.core.dataset._assert_empty"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.rank": {
  "data": {
   "lineno": 3753,
   "symbols_in_volume": [
    "OrderedDict",
    "ValueError",
    "_get_keep_attrs",
    "iteritems",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.real": {
  "data": {
   "lineno": 3858,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.reduce": {
  "data": {
   "lineno": 2878,
   "symbols_in_volume": [
    "OrderedDict",
    "ValueError",
    "_get_keep_attrs",
    "func",
    "isinstance",
    "iteritems",
    "len",
    "numpy.bool_",
    "numpy.issubdtype",
    "numpy.number",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.reindex": {
  "data": {
   "lineno": 1858,
   "symbols_in_volume": [
    "ValueError",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.reindex_like": {
  "data": {
   "lineno": 1811
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.rename": {
  "data": {
   "lineno": 2069,
   "symbols_in_volume": [
    "OrderedDict",
    "ValueError",
    "_check_inplace",
    "either_dict_or_kwargs",
    "iteritems",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.reorder_levels": {
  "data": {
   "lineno": 2327,
   "symbols_in_volume": [
    "IndexVariable",
    "ValueError",
    "_check_inplace",
    "either_dict_or_kwargs",
    "isinstance",
    "pandas.MultiIndex"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.reset_coords": {
  "data": {
   "lineno": 1115,
   "symbols_in_volume": [
    "ValueError",
    "_check_inplace",
    "isinstance",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.reset_index": {
  "data": {
   "lineno": 2296,
   "symbols_in_volume": [
    "_check_inplace",
    "xarray.core.dataset.split_indexes"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.roll": {
  "data": {
   "lineno": 3536,
   "symbols_in_volume": [
    "FutureWarning",
    "OrderedDict",
    "ValueError",
    "either_dict_or_kwargs",
    "iteritems",
    "xarray.core.dataset.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.sel": {
  "data": {
   "lineno": 1544,
   "symbols_in_volume": [
    "either_dict_or_kwargs",
    "remap_label_indexers"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.sel_points": {
  "data": {
   "lineno": 1751,
   "symbols_in_volume": [
    "DeprecationWarning",
    "xarray.core.dataset.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.set_coords": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": [
    "_check_inplace",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.set_index": {
  "data": {
   "lineno": 2257,
   "symbols_in_volume": [
    "_check_inplace",
    "either_dict_or_kwargs",
    "xarray.core.dataset.merge_indexes"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.shift": {
  "data": {
   "lineno": 3479,
   "symbols_in_volume": [
    "OrderedDict",
    "ValueError",
    "either_dict_or_kwargs",
    "iteritems"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.sizes": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.sortby": {
  "data": {
   "lineno": 3603,
   "symbols_in_volume": [
    "DataArray",
    "NotImplementedError",
    "ValueError",
    "align",
    "collections.defaultdict",
    "distutils.version.LooseVersion",
    "isinstance",
    "list",
    "numpy.__version__",
    "numpy.lexsort",
    "object",
    "reversed",
    "tuple"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.stack": {
  "data": {
   "lineno": 2395,
   "symbols_in_volume": [
    "either_dict_or_kwargs"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.swap_dims": {
  "data": {
   "lineno": 2120,
   "symbols_in_volume": [
    "OrderedDict",
    "ValueError",
    "_check_inplace",
    "iteritems",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.to_array": {
  "data": {
   "lineno": 3043,
   "symbols_in_volume": [
    "DataArray",
    "broadcast_variables",
    "dict",
    "list"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.to_dask_dataframe": {
  "data": {
   "lineno": 3133,
   "symbols_in_volume": [
    "IndexVariable",
    "KeyError",
    "OrderedDict",
    "ValueError",
    "Variable",
    "dask.array.arange",
    "dask.dataframe.concat",
    "dask.dataframe.from_array",
    "isinstance",
    "len",
    "list",
    "numpy.int64",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.to_dataframe": {
  "data": {
   "lineno": 3081
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.to_dict": {
  "data": {
   "lineno": 3209,
   "symbols_in_volume": [
    "decode_numpy_dict_values",
    "dict",
    "ensure_us_time_resolution"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.to_netcdf": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": [
    "format",
    "to_netcdf"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.to_zarr": {
  "data": {
   "lineno": 1234,
   "symbols_in_volume": [
    "ValueError",
    "to_zarr"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.transpose": {
  "data": {
   "lineno": 2637,
   "symbols_in_volume": [
    "ValueError",
    "iteritems",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.unstack": {
  "data": {
   "lineno": 2462,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas.MultiIndex"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.update": {
  "data": {
   "lineno": 2507,
   "symbols_in_volume": [
    "_check_inplace",
    "dataset_update_method"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.variables": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "Frozen",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.HighLevelGraph": {
  "data": {
   "shadows": "dask.highlevelgraph.HighLevelGraph"
  },
  "type": "import"
 },
 "xarray.core.dataset.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.core.dataset.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "xarray.core.dataset.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "xarray.core.dataset._DATETIMEINDEX_COMPONENTS": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "xarray.core.dataset._LocIndexer": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.core.dataset._LocIndexer.__getitem__": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset._LocIndexer.__init__": {
  "data": {
   "lineno": 294
  },
  "type": "function"
 },
 "xarray.core.dataset._assert_empty": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset._get_virtual_variable": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "IndexVariable",
    "KeyError",
    "Variable",
    "_contains_datetime_like_objects",
    "getattr",
    "isinstance",
    "len",
    "pandas.Index",
    "range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.dataset.as_dataset": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "xarray.core.dataset.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.calculate_dimensions": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "OrderedDict",
    "ValueError",
    "iteritems",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.core.dataset.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "xarray.core.dataset.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "xarray.core.dataset.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "xarray.core.dataset.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.dataset.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.core.dataset.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "xarray.core.dataset.merge_indexes": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "IndexVariable",
    "OrderedDict",
    "ValueError",
    "isinstance",
    "iteritems",
    "len",
    "pandas.Categorical",
    "pandas.Index",
    "pandas.MultiIndex",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.dataset.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.dataset.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.dataset.sharedict": {
  "data": {
   "shadows": "dask.sharedict"
  },
  "type": "import"
 },
 "xarray.core.dataset.split_indexes": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "IndexVariable",
    "OrderedDict",
    "Variable",
    "collections.defaultdict",
    "isinstance",
    "len",
    "list",
    "pandas.MultiIndex",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.dataset.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "xarray.core.dataset.tokenize": {
  "data": {
   "shadows": "dask.base.tokenize"
  },
  "type": "import"
 },
 "xarray.core.dataset.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.core.dataset.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.core.dtypes": {
  "data": {
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.bytes_",
    "numpy.character",
    "numpy.datetime64",
    "numpy.number",
    "numpy.timedelta64",
    "numpy.unicode_",
    "xarray.core.dtypes.AlwaysGreaterThan",
    "xarray.core.dtypes.AlwaysLessThan"
   ]
  },
  "type": "module"
 },
 "xarray.core.dtypes.AlwaysGreaterThan": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "object",
    "xarray.core.dtypes.functools"
   ]
  },
  "type": "class"
 },
 "xarray.core.dtypes.AlwaysGreaterThan.__eq__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.core.dtypes.AlwaysGreaterThan.__gt__": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "xarray.core.dtypes.AlwaysLessThan": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "object",
    "xarray.core.dtypes.functools"
   ]
  },
  "type": "class"
 },
 "xarray.core.dtypes.AlwaysLessThan.__eq__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.core.dtypes.AlwaysLessThan.__lt__": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "xarray.core.dtypes.INF": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "xarray.core.dtypes.NA": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "xarray.core.dtypes.NAT_TYPES": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "xarray.core.dtypes.NINF": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "xarray.core.dtypes.PROMOTE_TO_OBJECT": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "xarray.core.dtypes.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.core.dtypes.get_fill_value": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "xarray.core.dtypes.maybe_promote"
   ]
  },
  "type": "function"
 },
 "xarray.core.dtypes.get_neg_infinity": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "issubclass",
    "numpy.complexfloating",
    "numpy.floating",
    "numpy.inf",
    "numpy.integer",
    "xarray.core.dtypes.NINF"
   ]
  },
  "type": "function"
 },
 "xarray.core.dtypes.get_pos_infinity": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "issubclass",
    "numpy.complexfloating",
    "numpy.floating",
    "numpy.inf",
    "numpy.integer",
    "xarray.core.dtypes.INF"
   ]
  },
  "type": "function"
 },
 "xarray.core.dtypes.is_datetime_like": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "numpy.datetime64",
    "numpy.issubdtype",
    "numpy.timedelta64"
   ]
  },
  "type": "function"
 },
 "xarray.core.dtypes.maybe_promote": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.complexfloating",
    "numpy.datetime64",
    "numpy.dtype",
    "numpy.float32",
    "numpy.float64",
    "numpy.floating",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.nan",
    "numpy.timedelta64",
    "object"
   ]
  },
  "type": "function"
 },
 "xarray.core.dtypes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.dtypes.result_type": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "any",
    "issubclass",
    "numpy.dtype",
    "numpy.result_type",
    "object",
    "xarray.core.dtypes.PROMOTE_TO_OBJECT"
   ]
  },
  "type": "function"
 },
 "xarray.core.duck_array_ops": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "dask.array",
    "functools.partial",
    "getattr",
    "numpy.ma",
    "pandas",
    "slice",
    "xarray.core.duck_array_ops._create_nan_agg_method",
    "xarray.core.duck_array_ops._dask_or_eager_func",
    "xarray.core.duck_array_ops.cumprod_1d",
    "xarray.core.duck_array_ops.cumsum_1d",
    "xarray.core.duck_array_ops.dask_array_compat",
    "xarray.core.duck_array_ops.fail_on_dask_array_input",
    "xarray.core.duck_array_ops.mean",
    "xarray.core.duck_array_ops.median",
    "xarray.core.duck_array_ops.prod",
    "xarray.core.duck_array_ops.std",
    "xarray.core.duck_array_ops.sum",
    "xarray.core.duck_array_ops.var"
   ]
  },
  "type": "module"
 },
 "xarray.core.duck_array_ops._concatenate": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "xarray.core.duck_array_ops._create_nan_agg_method": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "xarray.core.duck_array_ops._create_nan_agg_method.f": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "AttributeError",
    "NotImplementedError",
    "TypeError",
    "func",
    "getattr",
    "isinstance",
    "object",
    "xarray.core.duck_array_ops._dask_or_eager_func",
    "xarray.core.duck_array_ops.asarray"
   ]
  },
  "type": "function"
 },
 "xarray.core.duck_array_ops._dask_or_eager_func": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "dask.array",
    "numpy",
    "slice"
   ]
  },
  "type": "function"
 },
 "xarray.core.duck_array_ops._dask_or_eager_func.f": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "xarray.core.duck_array_ops._fail_on_dask_array_input_skipna": {
  "data": {
   "lineno": 304
  },
  "type": "constant"
 },
 "xarray.core.duck_array_ops._ignore_warnings_if": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "xarray.core.duck_array_ops.contextlib",
    "xarray.core.duck_array_ops.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.duck_array_ops._isnull": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "xarray.core.duck_array_ops._nd_cum_func": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "cum_func",
    "int",
    "isinstance",
    "range",
    "tuple",
    "xarray.core.duck_array_ops.asarray"
   ]
  },
  "type": "function"
 },
 "xarray.core.duck_array_ops._stack": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "xarray.core.duck_array_ops._where": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "xarray.core.duck_array_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.duck_array_ops.allclose_or_equiv": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "bool",
    "xarray.core.duck_array_ops.as_like_arrays",
    "xarray.core.duck_array_ops.isclose"
   ]
  },
  "type": "function"
 },
 "xarray.core.duck_array_ops.argmax": {
  "data": {
   "lineno": 257
  },
  "type": "constant"
 },
 "xarray.core.duck_array_ops.argmin": {
  "data": {
   "lineno": 258
  },
  "type": "constant"
 },
 "xarray.core.duck_array_ops.around": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "xarray.core.duck_array_ops.array_all": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "xarray.core.duck_array_ops.array_any": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "xarray.core.duck_array_ops.array_equiv": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "bool",
    "xarray.core.duck_array_ops.as_like_arrays",
    "xarray.core.duck_array_ops.isnull",
    "xarray.core.duck_array_ops.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.duck_array_ops.array_notnull_equiv": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "bool",
    "xarray.core.duck_array_ops.as_like_arrays",
    "xarray.core.duck_array_ops.isnull",
    "xarray.core.duck_array_ops.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.duck_array_ops.as_like_arrays": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "numpy.asarray",
    "tuple"
   ]
  },
  "type": "function"
 },
 "xarray.core.duck_array_ops.as_shared_dtype": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "xarray.core.duck_array_ops.asarray"
   ]
  },
  "type": "function"
 },
 "xarray.core.duck_array_ops.asarray": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "isinstance",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "xarray.core.duck_array_ops.broadcast_to": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "xarray.core.duck_array_ops.concatenate": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "xarray.core.duck_array_ops._concatenate",
    "xarray.core.duck_array_ops.as_shared_dtype"
   ]
  },
  "type": "function"
 },
 "xarray.core.duck_array_ops.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "xarray.core.duck_array_ops.count": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "numpy.sum",
    "xarray.core.duck_array_ops.isnull"
   ]
  },
  "type": "function"
 },
 "xarray.core.duck_array_ops.cumprod": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "xarray.core.duck_array_ops._nd_cum_func",
    "xarray.core.duck_array_ops.cumprod_1d"
   ]
  },
  "type": "function"
 },
 "xarray.core.duck_array_ops.cumprod_1d": {
  "data": {
   "lineno": 275
  },
  "type": "constant"
 },
 "xarray.core.duck_array_ops.cumsum": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "xarray.core.duck_array_ops._nd_cum_func",
    "xarray.core.duck_array_ops.cumsum_1d"
   ]
  },
  "type": "function"
 },
 "xarray.core.duck_array_ops.cumsum_1d": {
  "data": {
   "lineno": 277
  },
  "type": "constant"
 },
 "xarray.core.duck_array_ops.dask_array": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "xarray.core.duck_array_ops.dask_array_compat": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "xarray.core.duck_array_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.duck_array_ops.einsum": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "xarray.core.duck_array_ops.fail_on_dask_array_input": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "NotImplementedError",
    "isinstance",
    "xarray.core.duck_array_ops.inspect"
   ]
  },
  "type": "function"
 },
 "xarray.core.duck_array_ops.fillna": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "xarray.core.duck_array_ops.isnull",
    "xarray.core.duck_array_ops.where"
   ]
  },
  "type": "function"
 },
 "xarray.core.duck_array_ops.first": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "nanfirst",
    "xarray.core.duck_array_ops._fail_on_dask_array_input_skipna",
    "xarray.core.duck_array_ops.take"
   ]
  },
  "type": "function"
 },
 "xarray.core.duck_array_ops.gradient": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "isinstance",
    "xarray.core.duck_array_ops.dask_array_compat"
   ]
  },
  "type": "function"
 },
 "xarray.core.duck_array_ops.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "xarray.core.duck_array_ops.isclose": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "xarray.core.duck_array_ops.isin": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "xarray.core.duck_array_ops.isnull": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "numpy.zeros",
    "xarray.core.duck_array_ops._isnull"
   ]
  },
  "type": "function"
 },
 "xarray.core.duck_array_ops.last": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "nanlast",
    "xarray.core.duck_array_ops._fail_on_dask_array_input_skipna",
    "xarray.core.duck_array_ops.take"
   ]
  },
  "type": "function"
 },
 "xarray.core.duck_array_ops.masked_invalid": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "xarray.core.duck_array_ops.max": {
  "data": {
   "lineno": 259
  },
  "type": "constant"
 },
 "xarray.core.duck_array_ops.mean": {
  "data": {
   "lineno": 264
  },
  "type": "constant"
 },
 "xarray.core.duck_array_ops.median": {
  "data": {
   "lineno": 270
  },
  "type": "constant"
 },
 "xarray.core.duck_array_ops.min": {
  "data": {
   "lineno": 260
  },
  "type": "constant"
 },
 "xarray.core.duck_array_ops.notnull": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "xarray.core.duck_array_ops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.duck_array_ops.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "xarray.core.duck_array_ops.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.duck_array_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.duck_array_ops.prod": {
  "data": {
   "lineno": 272
  },
  "type": "constant"
 },
 "xarray.core.duck_array_ops.rolling_window": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.core.duck_array_ops.stack": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "xarray.core.duck_array_ops._stack",
    "xarray.core.duck_array_ops.as_shared_dtype"
   ]
  },
  "type": "function"
 },
 "xarray.core.duck_array_ops.std": {
  "data": {
   "lineno": 266
  },
  "type": "constant"
 },
 "xarray.core.duck_array_ops.sum": {
  "data": {
   "lineno": 261
  },
  "type": "constant"
 },
 "xarray.core.duck_array_ops.take": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "xarray.core.duck_array_ops.tensordot": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "xarray.core.duck_array_ops.transpose": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "xarray.core.duck_array_ops.var": {
  "data": {
   "lineno": 268
  },
  "type": "constant"
 },
 "xarray.core.duck_array_ops.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.core.duck_array_ops.where": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "xarray.core.duck_array_ops._where",
    "xarray.core.duck_array_ops.as_shared_dtype"
   ]
  },
  "type": "function"
 },
 "xarray.core.duck_array_ops.where_method": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "xarray.core.duck_array_ops.where"
   ]
  },
  "type": "function"
 },
 "xarray.core.extensions": {
  "data": {},
  "type": "module"
 },
 "xarray.core.extensions.AccessorRegistrationWarning": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "xarray.core.extensions._CachedAccessor": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.core.extensions._CachedAccessor.__get__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "AttributeError",
    "RuntimeError",
    "object.__setattr__",
    "xarray.core.extensions.traceback"
   ]
  },
  "type": "function"
 },
 "xarray.core.extensions._CachedAccessor.__init__": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "xarray.core.extensions._register_accessor": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "xarray.core.extensions._register_accessor.decorator": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "hasattr",
    "setattr",
    "xarray.core.extensions.AccessorRegistrationWarning",
    "xarray.core.extensions._CachedAccessor",
    "xarray.core.extensions.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.extensions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.extensions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.extensions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.extensions.register_dataarray_accessor": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "xarray.core.extensions._register_accessor"
   ]
  },
  "type": "function"
 },
 "xarray.core.extensions.register_dataset_accessor": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "xarray.core.extensions._register_accessor"
   ]
  },
  "type": "function"
 },
 "xarray.core.extensions.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "xarray.core.extensions.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.core.formatting": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "xarray.core.formatting._mapping_repr",
    "xarray.core.formatting.functools",
    "xarray.core.formatting.summarize_attr",
    "xarray.core.formatting.summarize_datavar"
   ]
  },
  "type": "module"
 },
 "xarray.core.formatting.EMPTY_REPR": {
  "data": {
   "lineno": 299
  },
  "type": "constant"
 },
 "xarray.core.formatting.OutOfBoundsDatetime": {
  "data": {
   "shadows": "pandas.tslib.OutOfBoundsDatetime"
  },
  "type": "import"
 },
 "xarray.core.formatting.ReprMixin": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.core.formatting.ReprMixin.__repr__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "xarray.core.formatting.ensure_valid_repr"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting._calculate_col_width": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "len",
    "max",
    "unicode_type"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting._get_col_items": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting._get_indexer_at_least_n_items": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "numpy.argmax",
    "numpy.ceil",
    "numpy.cumprod",
    "numpy.prod",
    "numpy.r_",
    "slice"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting._mapping_repr": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "summarizer",
    "xarray.core.formatting.EMPTY_REPR",
    "xarray.core.formatting._calculate_col_width"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting._summarize_coord_levels": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "xarray.core.formatting.summarize_variable"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting._summarize_coord_multiindex": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "unicode_type",
    "xarray.core.formatting.pretty_print"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.formatting.array_repr": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "isinstance",
    "repr",
    "type",
    "xarray.core.formatting.attrs_repr",
    "xarray.core.formatting.dim_summary",
    "xarray.core.formatting.short_array_repr",
    "xarray.core.formatting.short_dask_repr",
    "xarray.core.formatting.unindexed_dims_repr"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.attrs_repr": {
  "data": {
   "lineno": 341
  },
  "type": "constant"
 },
 "xarray.core.formatting.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "xarray.core.formatting.coords_repr": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "xarray.core.formatting._calculate_col_width",
    "xarray.core.formatting._get_col_items",
    "xarray.core.formatting._mapping_repr",
    "xarray.core.formatting.summarize_coord"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.data_vars_repr": {
  "data": {
   "lineno": 337
  },
  "type": "constant"
 },
 "xarray.core.formatting.dataset_repr": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "type",
    "xarray.core.formatting._calculate_col_width",
    "xarray.core.formatting._get_col_items",
    "xarray.core.formatting.attrs_repr",
    "xarray.core.formatting.coords_repr",
    "xarray.core.formatting.data_vars_repr",
    "xarray.core.formatting.dim_summary",
    "xarray.core.formatting.pretty_print",
    "xarray.core.formatting.unindexed_dims_repr"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "xarray.core.formatting.dim_summary": {
  "data": {
   "lineno": 359
  },
  "type": "function"
 },
 "xarray.core.formatting.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.formatting.ensure_valid_repr": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "isinstance",
    "unicode_type"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.first_n_items": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "xarray.core.formatting._get_indexer_at_least_n_items"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.format_array_flat": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "int",
    "len",
    "max",
    "min",
    "numpy.argmax",
    "numpy.ceil",
    "numpy.cumsum",
    "reversed",
    "sum",
    "xarray.core.formatting.first_n_items",
    "xarray.core.formatting.format_items",
    "xarray.core.formatting.last_n_items",
    "zip_longest"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.format_item": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta",
    "float",
    "isinstance",
    "numpy.datetime64",
    "numpy.float",
    "numpy.timedelta64",
    "repr",
    "unicode_type",
    "xarray.core.formatting.format_timedelta",
    "xarray.core.formatting.format_timestamp"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.format_items": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.issubdtype",
    "numpy.logical_not",
    "numpy.timedelta64",
    "pandas.isnull",
    "xarray.core.formatting.format_item"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.format_timedelta": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Timedelta",
    "unicode_type"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.format_timestamp": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Timestamp",
    "pandas.tslib.OutOfBoundsDatetime",
    "unicode_type"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.core.formatting.indexes_repr": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "repr",
    "xarray.core.formatting.wrap_indent"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.last_item": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.ravel",
    "slice"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.last_n_items": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.asarray",
    "xarray.core.formatting._get_indexer_at_least_n_items"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.maybe_truncate": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "len",
    "unicode_type"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.formatting.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.formatting.pretty_print": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "len",
    "max",
    "xarray.core.formatting.maybe_truncate"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.formatting.set_numpy_options": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "numpy.get_printoptions",
    "numpy.set_printoptions",
    "xarray.core.formatting.contextlib"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.short_array_repr": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "numpy.asarray",
    "repr",
    "xarray.core.formatting.set_numpy_options"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.short_dask_repr": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.summarize_attr": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "unicode_type",
    "xarray.core.formatting.maybe_truncate",
    "xarray.core.formatting.pretty_print"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.summarize_coord": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "xarray.core.formatting._summarize_coord_levels",
    "xarray.core.formatting._summarize_coord_multiindex",
    "xarray.core.formatting.summarize_variable"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.summarize_datavar": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "xarray.core.formatting.summarize_variable"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.summarize_variable": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "map",
    "unicode_type",
    "xarray.core.formatting.format_array_flat",
    "xarray.core.formatting.pretty_print",
    "xarray.core.formatting.short_dask_repr"
   ]
  },
  "type": "function"
 },
 "xarray.core.formatting.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "xarray.core.formatting.unindexed_dims_repr": {
  "data": {
   "lineno": 364
  },
  "type": "function"
 },
 "xarray.core.formatting.wrap_indent": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby": {
  "data": {
   "symbols_in_volume": [
    "xarray.core.groupby.DataArrayGroupBy",
    "xarray.core.groupby.DatasetGroupBy"
   ]
  },
  "type": "module"
 },
 "xarray.core.groupby.DEFAULT_DIMS": {
  "data": {
   "lineno": 640
  },
  "type": "constant"
 },
 "xarray.core.groupby.DataArrayGroupBy": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "xarray.core.groupby.GroupBy"
   ]
  },
  "type": "class"
 },
 "xarray.core.groupby.DataArrayGroupBy._combine": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "as_variable",
    "concat",
    "isinstance",
    "peek_at",
    "type",
    "xarray.core.groupby._maybe_reorder"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.DataArrayGroupBy._concat_shortcut": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "xarray.core.groupby._maybe_reorder"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.DataArrayGroupBy._iter_grouped_shortcut": {
  "data": {
   "lineno": 475
  },
  "type": "function"
 },
 "xarray.core.groupby.DataArrayGroupBy._reduce_method": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.DataArrayGroupBy._reduce_method.wrapped_func": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.DataArrayGroupBy._restore_dim_order": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.DataArrayGroupBy._restore_dim_order.lookup_order": {
  "data": {
   "lineno": 494
  },
  "type": "function"
 },
 "xarray.core.groupby.DataArrayGroupBy.apply": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "func",
    "maybe_wrap_array"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.DataArrayGroupBy.reduce": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "FutureWarning",
    "_get_keep_attrs",
    "xarray.core.groupby.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.DataArrayGroupBy.reduce.reduce_array": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.DatasetGroupBy": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "xarray.core.groupby.GroupBy"
   ]
  },
  "type": "class"
 },
 "xarray.core.groupby.DatasetGroupBy._combine": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "concat",
    "peek_at",
    "xarray.core.groupby._maybe_reorder"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.DatasetGroupBy._reduce_method": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.DatasetGroupBy._reduce_method.wrapped_func": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "func",
    "xarray.core.groupby.DEFAULT_DIMS"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.DatasetGroupBy.apply": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.DatasetGroupBy.assign": {
  "data": {
   "lineno": 758
  },
  "type": "function"
 },
 "xarray.core.groupby.DatasetGroupBy.reduce": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "FutureWarning",
    "_get_keep_attrs",
    "xarray.core.groupby.DEFAULT_DIMS",
    "xarray.core.groupby.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.DatasetGroupBy.reduce.reduce_dataset": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy": {
  "data": {
   "lineno": 184
  },
  "type": "class"
 },
 "xarray.core.groupby.GroupBy.__init__": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "DataArray",
    "IndexVariable",
    "TypeError",
    "ValueError",
    "getattr",
    "hashable",
    "isinstance",
    "numpy.arange",
    "numpy.int64",
    "pandas.Series",
    "pandas.cut",
    "safe_cast_to_index",
    "slice",
    "xarray.core.groupby._DummyGroup",
    "xarray.core.groupby._apply_loffset",
    "xarray.core.groupby._ensure_1d",
    "xarray.core.groupby._unique_and_monotonic",
    "xarray.core.groupby.unique_value_groups",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy.__iter__": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy.__len__": {
  "data": {
   "lineno": 309
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy._binary_op": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy._binary_op.func": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "f",
    "xarray.core.groupby.functools"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy._first_or_last": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "_get_keep_attrs",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy._infer_concat_args": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "isinstance",
    "xarray.core.groupby._DummyGroup"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy._iter_grouped": {
  "data": {
   "lineno": 315
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy._maybe_restore_empty_groups": {
  "data": {
   "lineno": 365
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy._maybe_unstack": {
  "data": {
   "lineno": 375
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy._yield_binary_applied": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "TypeError",
    "ValueError",
    "func",
    "xarray.core.groupby._dummy_copy"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy.assign_coords": {
  "data": {
   "lineno": 451
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy.fillna": {
  "data": {
   "lineno": 385
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy.first": {
  "data": {
   "lineno": 441
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy.groups": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "dict",
    "property",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy.last": {
  "data": {
   "lineno": 446
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy.where": {
  "data": {
   "lineno": 410
  },
  "type": "function"
 },
 "xarray.core.groupby._DummyGroup": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.core.groupby._DummyGroup.__init__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby._apply_loffset": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pandas.DateOffset",
    "pandas.DatetimeIndex",
    "xarray.core.groupby.datetime"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby._consolidate_slices": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "slice",
    "xarray.core.groupby._is_one_or_none"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby._dummy_copy": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "AssertionError",
    "DataArray",
    "Dataset",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby._ensure_1d": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "xarray.core.groupby._inverse_permutation_indices": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange",
    "numpy.concatenate",
    "slice",
    "xarray.core.groupby._consolidate_slices"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby._is_one_or_none": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "xarray.core.groupby._maybe_reorder": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "xarray.core.groupby._inverse_permutation_indices"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby._unique_and_monotonic": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "isinstance",
    "safe_cast_to_index",
    "xarray.core.groupby._DummyGroup"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.groupby.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "xarray.core.groupby.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.groupby.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.core.groupby.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.groupby.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.groupby.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.groupby.unique_value_groups": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "pandas.factorize",
    "range"
   ]
  },
  "type": "function"
 },
 "xarray.core.groupby.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.core.merge": {
  "data": {
   "symbols_in_volume": [
    "Frozen",
    "pandas.DataFrame",
    "pandas.Panel",
    "pandas.Series"
   ]
  },
  "type": "module"
 },
 "xarray.core.merge.MergeError": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "xarray.core.merge.OrderedDefaultDict": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "OrderedDict"
   ]
  },
  "type": "class"
 },
 "xarray.core.merge.OrderedDefaultDict.__init__": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "super",
    "xarray.core.merge.OrderedDefaultDict"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge.OrderedDefaultDict.__missing__": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "xarray.core.merge.PANDAS_TYPES": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "xarray.core.merge._VALID_COMPAT": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "xarray.core.merge._assert_compat_valid": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "set",
    "xarray.core.merge._VALID_COMPAT"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge._get_priority_vars": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "xarray.core.merge.expand_variable_dicts",
    "xarray.core.merge.merge_variables"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.merge.assert_valid_explicit_coords": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "xarray.core.merge.MergeError"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge.broadcast_dimension_size": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "OrderedDict",
    "ValueError",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge.coerce_pandas_values": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "DataArray",
    "OrderedDict",
    "isinstance",
    "xarray.core.merge.PANDAS_TYPES"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge.dataset_merge_method": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "OrderedDict",
    "isinstance",
    "set",
    "xarray.core.merge.merge_core"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge.dataset_update_method": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "DataArray",
    "OrderedDict",
    "isinstance",
    "xarray.core.merge.merge_core"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge.determine_coords": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "isinstance",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.merge.expand_and_merge_variables": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "xarray.core.merge._get_priority_vars",
    "xarray.core.merge.expand_variable_dicts",
    "xarray.core.merge.merge_variables"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge.expand_variable_dicts": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "OrderedDict",
    "as_variable",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge.extract_indexes": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "as_variable"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge.merge": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "DataArray",
    "isinstance",
    "xarray.core.merge.merge_core"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge.merge_coords": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "assert_unique_multiindex_level_names",
    "deep_align",
    "xarray.core.merge._assert_compat_valid",
    "xarray.core.merge._get_priority_vars",
    "xarray.core.merge.coerce_pandas_values",
    "xarray.core.merge.expand_variable_dicts",
    "xarray.core.merge.merge_variables"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge.merge_coords_for_inplace_math": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "assert_unique_multiindex_level_names",
    "xarray.core.merge.expand_variable_dicts",
    "xarray.core.merge.merge_variables"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge.merge_core": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "assert_unique_multiindex_level_names",
    "calculate_dimensions",
    "deep_align",
    "dict",
    "xarray.core.merge.MergeError",
    "xarray.core.merge._assert_compat_valid",
    "xarray.core.merge._get_priority_vars",
    "xarray.core.merge.assert_valid_explicit_coords",
    "xarray.core.merge.coerce_pandas_values",
    "xarray.core.merge.determine_coords",
    "xarray.core.merge.expand_variable_dicts",
    "xarray.core.merge.merge_variables"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge.merge_data_and_coords": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "dict",
    "xarray.core.merge.extract_indexes",
    "xarray.core.merge.merge_core"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge.merge_variables": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "OrderedDict",
    "list",
    "min",
    "xarray.core.merge.MergeError",
    "xarray.core.merge.OrderedDefaultDict",
    "xarray.core.merge._VALID_COMPAT",
    "xarray.core.merge._assert_compat_valid",
    "xarray.core.merge.unique_variable"
   ]
  },
  "type": "function"
 },
 "xarray.core.merge.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.merge.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.merge.unique_variable": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "getattr",
    "len",
    "xarray.core.merge.MergeError",
    "xarray.core.merge.broadcast_dimension_size"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing": {
  "data": {},
  "type": "module"
 },
 "xarray.core.missing.BaseInterpolator": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.core.missing.BaseInterpolator.__call__": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "xarray.core.missing.BaseInterpolator.__init__": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "xarray.core.missing.BaseInterpolator.__repr__": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "xarray.core.missing.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "xarray.core.missing.NumpyInterpolator": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "xarray.core.missing.BaseInterpolator"
   ]
  },
  "type": "class"
 },
 "xarray.core.missing.NumpyInterpolator.__call__": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "xarray.core.missing.NumpyInterpolator.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ValueError",
    "collections.Iterable",
    "is_scalar",
    "isinstance",
    "len",
    "numpy.interp",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing.ScipyInterpolator": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "xarray.core.missing.BaseInterpolator"
   ]
  },
  "type": "class"
 },
 "xarray.core.missing.ScipyInterpolator.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "scipy.interpolate.interp1d"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing.SplineInterpolator": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "xarray.core.missing.BaseInterpolator"
   ]
  },
  "type": "class"
 },
 "xarray.core.missing.SplineInterpolator.__init__": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ValueError",
    "scipy.interpolate.UnivariateSpline"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing.UnivariateSpline": {
  "data": {
   "shadows": "scipy.interpolate.UnivariateSpline"
  },
  "type": "import"
 },
 "xarray.core.missing._apply_over_vars_with_dim": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "func",
    "iteritems",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing._assert_single_chunk": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "NotImplementedError",
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing._bfill": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "bottleneck.push",
    "numpy.flip"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing._floatize_x": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "_contains_datetime_like_objects",
    "datetime_to_numeric",
    "len",
    "list",
    "numpy.float64",
    "range"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing._get_interpolator": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "scipy.interpolate.Akima1DInterpolator",
    "scipy.interpolate.BarycentricInterpolator",
    "scipy.interpolate.KroghInterpolator",
    "scipy.interpolate.PchipInterpolator",
    "xarray.core.missing.NumpyInterpolator",
    "xarray.core.missing.ScipyInterpolator",
    "xarray.core.missing.SplineInterpolator"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing._get_interpolator_nd": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "scipy.interpolate.interpn"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing._get_valid_fill_mask": {
  "data": {
   "lineno": 368
  },
  "type": "function"
 },
 "xarray.core.missing._interp1d": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "func",
    "numpy.ravel"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing._interpnd": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "func",
    "len",
    "numpy.stack",
    "range",
    "xarray.core.missing._floatize_x",
    "xarray.core.missing._interp1d"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing._localize": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "max",
    "numpy.max",
    "numpy.min",
    "slice"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.missing.bfill": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "apply_ufunc",
    "dict",
    "xarray.core.missing._bfill"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing.bn": {
  "data": {
   "shadows": "bottleneck"
  },
  "type": "import"
 },
 "xarray.core.missing.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.core.missing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.missing.ffill": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "apply_ufunc",
    "bottleneck.push",
    "dict"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing.func_interpolate_na": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "f",
    "interpolator",
    "len",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing.get_clean_interp_index": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.arange",
    "numpy.diff",
    "numpy.float64",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing.interp": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "OrderedSet",
    "Variable",
    "broadcast_variables",
    "list",
    "tuple",
    "xarray.core.missing._localize",
    "xarray.core.missing.interp_func",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "xarray.core.missing.interp_func": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "dask.array.map_blocks",
    "func",
    "isinstance",
    "len",
    "range",
    "xarray.core.missing._assert_single_chunk",
    "xarray.core.missing._get_interpolator",
    "xarray.core.missing._get_interpolator_nd",
    "xarray.core.missing._interpnd"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing.interp_na": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeWarning",
    "apply_ufunc",
    "functools.partial",
    "xarray.core.missing._get_interpolator",
    "xarray.core.missing._get_valid_fill_mask",
    "xarray.core.missing.get_clean_interp_index",
    "xarray.core.missing.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.missing.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "xarray.core.missing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.missing.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "xarray.core.missing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.missing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.missing.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.core.nanops": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "dask.array"
   ]
  },
  "type": "module"
 },
 "xarray.core.nanops._maybe_null_out": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "hasattr",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops._nan_argminmax_object": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError",
    "_dask_or_eager_func",
    "count",
    "fillna"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops._nan_minmax_object": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "count",
    "fillna",
    "getattr",
    "hasattr",
    "numpy",
    "numpy.array",
    "where_method"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops._nanmean_ddof_object": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "_dask_or_eager_func",
    "count",
    "fillna",
    "float",
    "where_method"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops._nanvar_object": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "xarray.core.nanops._nanmean_ddof_object"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops._replace_nan": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "isnull",
    "where_method"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.nanops.dask_array": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "xarray.core.nanops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.nanops.nanargmax": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "dask.array.argmax",
    "isinstance",
    "numpy.argmax",
    "xarray.core.nanops._nan_argminmax_object",
    "xarray.core.nanops._replace_nan"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops.nanargmin": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ValueError",
    "dask.array.argmin",
    "isinstance",
    "numpy.argmin",
    "xarray.core.nanops._nan_argminmax_object",
    "xarray.core.nanops._replace_nan"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops.nancumprod": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "_dask_or_eager_func"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops.nancumsum": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "_dask_or_eager_func"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops.nanmax": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "dask.array",
    "isinstance",
    "xarray.core.nanops._nan_minmax_object"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops.nanmean": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "dask.array.nanmean",
    "isinstance",
    "numpy.nanmean",
    "xarray.core.nanops._nanmean_ddof_object"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops.nanmedian": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "_dask_or_eager_func"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops.nanmin": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "dask.array",
    "isinstance",
    "xarray.core.nanops._nan_minmax_object"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops.nanprod": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "_dask_or_eager_func",
    "xarray.core.nanops._maybe_null_out",
    "xarray.core.nanops._replace_nan"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops.nanstd": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "_dask_or_eager_func"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops.nansum": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "_dask_or_eager_func",
    "xarray.core.nanops._maybe_null_out",
    "xarray.core.nanops._replace_nan"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops.nanvar": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "_dask_or_eager_func",
    "xarray.core.nanops._nanvar_object"
   ]
  },
  "type": "function"
 },
 "xarray.core.nanops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.nanops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.npcompat": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "distutils.version.LooseVersion",
    "numpy.__version__",
    "numpy.gradient"
   ]
  },
  "type": "module"
 },
 "xarray.core.npcompat.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.core.npcompat.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.npcompat.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.npcompat.gradient": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "enumerate",
    "int",
    "len",
    "list",
    "numpy.asanyarray",
    "numpy.diff",
    "numpy.empty_like",
    "numpy.ndim",
    "numpy.ones",
    "range",
    "slice",
    "tuple",
    "xarray.core.npcompat.normalize_axis_tuple"
   ]
  },
  "type": "function"
 },
 "xarray.core.npcompat.isin": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.in1d"
   ]
  },
  "type": "function"
 },
 "xarray.core.npcompat.normalize_axis_tuple": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "xarray.core.npcompat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.npcompat.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.nputils": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "bottleneck",
    "numpy",
    "xarray.core.nputils._create_bottleneck_method"
   ]
  },
  "type": "module"
 },
 "xarray.core.nputils.NumpyVIndexAdapter": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.core.nputils.NumpyVIndexAdapter.__getitem__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "numpy.moveaxis",
    "xarray.core.nputils._advanced_indexer_subspaces"
   ]
  },
  "type": "function"
 },
 "xarray.core.nputils.NumpyVIndexAdapter.__init__": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "xarray.core.nputils.NumpyVIndexAdapter.__setitem__": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "numpy.moveaxis",
    "xarray.core.nputils._advanced_indexer_subspaces"
   ]
  },
  "type": "function"
 },
 "xarray.core.nputils._USE_BOTTLENECK": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "xarray.core.nputils._advanced_indexer_subspaces": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.broadcast",
    "slice",
    "tuple",
    "xarray.core.nputils._is_contiguous"
   ]
  },
  "type": "function"
 },
 "xarray.core.nputils._create_bottleneck_method": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "numpy"
   ]
  },
  "type": "function"
 },
 "xarray.core.nputils._create_bottleneck_method.f": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "bn_func",
    "bottleneck",
    "getattr",
    "isinstance",
    "numpy.dtype",
    "tuple",
    "xarray.core.nputils._USE_BOTTLENECK"
   ]
  },
  "type": "function"
 },
 "xarray.core.nputils._ensure_bool_is_ndarray": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "bool",
    "constructor",
    "isinstance",
    "numpy.broadcast",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "xarray.core.nputils._is_contiguous": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "xarray.core.nputils._rolling_window": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ValueError",
    "numpy.lib.stride_tricks.as_strided",
    "numpy.swapaxes",
    "xarray.core.nputils._validate_axis"
   ]
  },
  "type": "function"
 },
 "xarray.core.nputils._select_along_axis": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ix_"
   ]
  },
  "type": "function"
 },
 "xarray.core.nputils._validate_axis": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "xarray.core.nputils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.nputils.array_eq": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "xarray.core.nputils._ensure_bool_is_ndarray",
    "xarray.core.nputils.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.nputils.array_ne": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "xarray.core.nputils._ensure_bool_is_ndarray",
    "xarray.core.nputils.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.nputils.bn": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "xarray.core.nputils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.nputils.inverse_permutation": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.empty",
    "numpy.intp"
   ]
  },
  "type": "function"
 },
 "xarray.core.nputils.nancumprod": {
  "data": {
   "lineno": 238
  },
  "type": "constant"
 },
 "xarray.core.nputils.nancumsum": {
  "data": {
   "lineno": 237
  },
  "type": "constant"
 },
 "xarray.core.nputils.nanfirst": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.argmax",
    "pandas.isnull",
    "xarray.core.nputils._select_along_axis",
    "xarray.core.nputils._validate_axis"
   ]
  },
  "type": "function"
 },
 "xarray.core.nputils.nanlast": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.argmax",
    "pandas.isnull",
    "slice",
    "xarray.core.nputils._select_along_axis",
    "xarray.core.nputils._validate_axis"
   ]
  },
  "type": "function"
 },
 "xarray.core.nputils.nanmax": {
  "data": {
   "lineno": 231
  },
  "type": "constant"
 },
 "xarray.core.nputils.nanmean": {
  "data": {
   "lineno": 232
  },
  "type": "constant"
 },
 "xarray.core.nputils.nanmedian": {
  "data": {
   "lineno": 233
  },
  "type": "constant"
 },
 "xarray.core.nputils.nanmin": {
  "data": {
   "lineno": 230
  },
  "type": "constant"
 },
 "xarray.core.nputils.nanprod": {
  "data": {
   "lineno": 236
  },
  "type": "constant"
 },
 "xarray.core.nputils.nanstd": {
  "data": {
   "lineno": 235
  },
  "type": "constant"
 },
 "xarray.core.nputils.nanvar": {
  "data": {
   "lineno": 234
  },
  "type": "constant"
 },
 "xarray.core.nputils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.nputils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.nputils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.nputils.rolling_window": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "int",
    "numpy.pad",
    "xarray.core.nputils._rolling_window"
   ]
  },
  "type": "function"
 },
 "xarray.core.nputils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.core.ops": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "bottleneck",
    "dict",
    "numpy",
    "xarray.core.ops.NUM_BINARY_OPS",
    "xarray.core.ops.get_op"
   ]
  },
  "type": "module"
 },
 "xarray.core.ops.BOTTLENECK_ROLLING_METHODS": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "xarray.core.ops.CMP_BINARY_OPS": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "xarray.core.ops.NAN_CUM_METHODS": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "xarray.core.ops.NAN_REDUCE_METHODS": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "xarray.core.ops.NON_INPLACE_OP": {
  "data": {
   "lineno": 278
  },
  "type": "constant"
 },
 "xarray.core.ops.NUMPY_SAME_METHODS": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "xarray.core.ops.NUMPY_UNARY_METHODS": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "xarray.core.ops.NUM_BINARY_OPS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "xarray.core.ops.PANDAS_UNARY_FUNCTIONS": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "xarray.core.ops.REDUCE_METHODS": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "xarray.core.ops.UNARY_OPS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "xarray.core.ops._CUM_DOCSTRING_TEMPLATE": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "xarray.core.ops._MINCOUNT_DOCSTRING": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "xarray.core.ops._REDUCE_DOCSTRING_TEMPLATE": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "xarray.core.ops._ROLLING_REDUCE_DOCSTRING_TEMPLATE": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "xarray.core.ops._call_possibly_missing_method": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "hasattr",
    "method"
   ]
  },
  "type": "function"
 },
 "xarray.core.ops._func_slash_method_wrapper": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "f.__doc__"
   ]
  },
  "type": "function"
 },
 "xarray.core.ops._func_slash_method_wrapper.func": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "AttributeError",
    "f",
    "getattr"
   ]
  },
  "type": "function"
 },
 "xarray.core.ops._method_wrapper": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "getattr",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "xarray.core.ops._method_wrapper.func": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "xarray.core.ops._call_possibly_missing_method"
   ]
  },
  "type": "function"
 },
 "xarray.core.ops._values_method_wrapper": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "getattr",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "xarray.core.ops._values_method_wrapper.func": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "xarray.core.ops._call_possibly_missing_method"
   ]
  },
  "type": "function"
 },
 "xarray.core.ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.ops.bn": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "xarray.core.ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.ops.fillna": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "apply_ufunc",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "xarray.core.ops.get_op": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "getattr",
    "xarray.core.ops.op_str",
    "xarray.core.ops.operator"
   ]
  },
  "type": "function"
 },
 "xarray.core.ops.has_bottleneck": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "xarray.core.ops.inject_all_ops_and_reduce_methods": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "f",
    "getattr",
    "setattr",
    "xarray.core.ops.NUMPY_SAME_METHODS",
    "xarray.core.ops.NUMPY_UNARY_METHODS",
    "xarray.core.ops.PANDAS_UNARY_FUNCTIONS",
    "xarray.core.ops.UNARY_OPS",
    "xarray.core.ops._func_slash_method_wrapper",
    "xarray.core.ops._method_wrapper",
    "xarray.core.ops._values_method_wrapper",
    "xarray.core.ops.get_op",
    "xarray.core.ops.inject_binary_ops",
    "xarray.core.ops.inject_cum_methods",
    "xarray.core.ops.inject_reduce_methods",
    "xarray.core.ops.op_str"
   ]
  },
  "type": "function"
 },
 "xarray.core.ops.inject_binary_ops": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "f",
    "setattr",
    "xarray.core.ops.CMP_BINARY_OPS",
    "xarray.core.ops.NUM_BINARY_OPS",
    "xarray.core.ops.get_op",
    "xarray.core.ops.op_str"
   ]
  },
  "type": "function"
 },
 "xarray.core.ops.inject_bottleneck_rolling_methods": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "bottleneck",
    "f",
    "getattr",
    "setattr",
    "xarray.core.ops.BOTTLENECK_ROLLING_METHODS",
    "xarray.core.ops.NAN_REDUCE_METHODS",
    "xarray.core.ops._ROLLING_REDUCE_DOCSTRING_TEMPLATE",
    "xarray.core.ops.has_bottleneck",
    "xarray.core.ops.rolling_count"
   ]
  },
  "type": "function"
 },
 "xarray.core.ops.inject_cum_methods": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "f",
    "getattr",
    "setattr",
    "xarray.core.ops.NAN_CUM_METHODS",
    "xarray.core.ops._CUM_DOCSTRING_TEMPLATE"
   ]
  },
  "type": "function"
 },
 "xarray.core.ops.inject_datasetrolling_methods": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "f",
    "getattr",
    "setattr",
    "xarray.core.ops.NAN_REDUCE_METHODS",
    "xarray.core.ops._ROLLING_REDUCE_DOCSTRING_TEMPLATE",
    "xarray.core.ops.rolling_count"
   ]
  },
  "type": "function"
 },
 "xarray.core.ops.inject_reduce_methods": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "f",
    "getattr",
    "setattr",
    "xarray.core.ops.NAN_REDUCE_METHODS",
    "xarray.core.ops.REDUCE_METHODS",
    "xarray.core.ops._MINCOUNT_DOCSTRING",
    "xarray.core.ops._REDUCE_DOCSTRING_TEMPLATE"
   ]
  },
  "type": "function"
 },
 "xarray.core.ops.inplace_to_noninplace_op": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "f",
    "xarray.core.ops.NON_INPLACE_OP"
   ]
  },
  "type": "function"
 },
 "xarray.core.ops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.ops.op_str": {
  "data": {
   "lineno": 270
  },
  "type": "function"
 },
 "xarray.core.ops.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "xarray.core.ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.ops.rolling_count": {
  "data": {
   "lineno": 230
  },
  "type": "function"
 },
 "xarray.core.ops.where_method": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "apply_ufunc"
   ]
  },
  "type": "function"
 },
 "xarray.core.options": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "frozenset",
    "isinstance",
    "xarray.core.options.ARITHMETIC_JOIN",
    "xarray.core.options.CMAP_DIVERGENT",
    "xarray.core.options.CMAP_SEQUENTIAL",
    "xarray.core.options.DISPLAY_WIDTH",
    "xarray.core.options.ENABLE_CFTIMEINDEX",
    "xarray.core.options.FILE_CACHE_MAXSIZE",
    "xarray.core.options.KEEP_ATTRS",
    "xarray.core.options.WARN_FOR_UNCLOSED_FILES",
    "xarray.core.options._JOIN_OPTIONS",
    "xarray.core.options._positive_integer",
    "xarray.core.options._set_file_cache_maxsize",
    "xarray.core.options._warn_on_setting_enable_cftimeindex"
   ]
  },
  "type": "module"
 },
 "xarray.core.options.ARITHMETIC_JOIN": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "xarray.core.options.CMAP_DIVERGENT": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "xarray.core.options.CMAP_SEQUENTIAL": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "xarray.core.options.DISPLAY_WIDTH": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "xarray.core.options.ENABLE_CFTIMEINDEX": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "xarray.core.options.FILE_CACHE_MAXSIZE": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "xarray.core.options.KEEP_ATTRS": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "xarray.core.options.OPTIONS": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "xarray.core.options.WARN_FOR_UNCLOSED_FILES": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "xarray.core.options._JOIN_OPTIONS": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "xarray.core.options._SETTERS": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "xarray.core.options._VALIDATORS": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "xarray.core.options._get_keep_attrs": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "xarray.core.options.OPTIONS"
   ]
  },
  "type": "function"
 },
 "xarray.core.options._positive_integer": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.core.options._set_file_cache_maxsize": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "xarray.core.options._warn_on_setting_enable_cftimeindex": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "FutureWarning",
    "xarray.core.options.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.options.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.options.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.options.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.options.set_options": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.core.options.set_options.__enter__": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "xarray.core.options.set_options.__exit__": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "xarray.core.options.set_options.__init__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ValueError",
    "set",
    "xarray.core.options.OPTIONS",
    "xarray.core.options._VALIDATORS"
   ]
  },
  "type": "function"
 },
 "xarray.core.options.set_options._apply_update": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "xarray.core.options.OPTIONS",
    "xarray.core.options._SETTERS"
   ]
  },
  "type": "function"
 },
 "xarray.core.options.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.core.pdcompat": {
  "data": {},
  "type": "module"
 },
 "xarray.core.pdcompat.algos": {
  "data": {
   "shadows": "pandas.core.algorithms"
  },
  "type": "import"
 },
 "xarray.core.pdcompat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.pdcompat.remove_unused_levels": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.arange",
    "numpy.bincount",
    "numpy.where",
    "numpy.zeros",
    "pandas.core.algorithms.unique",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.pycompat": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "bytes",
    "functools.reduce",
    "int",
    "numpy.integer",
    "pathlib2.Path",
    "str",
    "xarray.core.pycompat.PY3",
    "xarray.core.pycompat.native_int_types",
    "xarray.core.pycompat.sys"
   ]
  },
  "type": "module"
 },
 "xarray.core.pycompat.ExitStack": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.core.pycompat.ExitStack.__enter__": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "xarray.core.pycompat.ExitStack.__exit__": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "BaseException",
    "_fix_exception_context",
    "cb",
    "xarray.core.pycompat.sys"
   ]
  },
  "type": "function"
 },
 "xarray.core.pycompat.ExitStack.__exit__._fix_exception_context": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "xarray.core.pycompat.ExitStack.__init__": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "collections.deque"
   ]
  },
  "type": "function"
 },
 "xarray.core.pycompat.ExitStack._push_cm_exit": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "xarray.core.pycompat.ExitStack._push_cm_exit._exit_wrapper": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "cm_exit"
   ]
  },
  "type": "function"
 },
 "xarray.core.pycompat.ExitStack.callback": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "callback"
   ]
  },
  "type": "function"
 },
 "xarray.core.pycompat.ExitStack.callback._exit_wrapper": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "callback"
   ]
  },
  "type": "function"
 },
 "xarray.core.pycompat.ExitStack.close": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "xarray.core.pycompat.ExitStack.enter_context": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.core.pycompat.ExitStack.pop_all": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "collections.deque",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.core.pycompat.ExitStack.push": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "AttributeError",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.core.pycompat.OrderedDict": {
  "data": {
   "shadows": "ordereddict.OrderedDict"
  },
  "type": "import"
 },
 "xarray.core.pycompat.PY2": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "xarray.core.pycompat.PY3": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "xarray.core.pycompat.Path": {
  "data": {
   "shadows": "pathlib2.Path"
  },
  "type": "import"
 },
 "xarray.core.pycompat.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.pycompat.basestring": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "xarray.core.pycompat.builtins": {
  "data": {
   "shadows": "__builtin__"
  },
  "type": "import"
 },
 "xarray.core.pycompat.bytes_type": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "xarray.core.pycompat.dask.array": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.core.pycompat.dask_array_type": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "xarray.core.pycompat.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "xarray.core.pycompat.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.pycompat.getargspec": {
  "data": {
   "shadows": "inspect.getargspec"
  },
  "type": "import"
 },
 "xarray.core.pycompat.integer_types": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "xarray.core.pycompat.iteritems": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "xarray.core.pycompat.itervalues": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "xarray.core.pycompat.map": {
  "data": {
   "shadows": "itertools.imap"
  },
  "type": "import"
 },
 "xarray.core.pycompat.move_to_end": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "xarray.core.pycompat.native_int_types": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "xarray.core.pycompat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.pycompat.path_type": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "xarray.core.pycompat.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.pycompat.range": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "xarray.core.pycompat.reduce": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "xarray.core.pycompat.suppress": {
  "data": {
   "lineno": 93
  },
  "type": "class"
 },
 "xarray.core.pycompat.suppress.__enter__": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "xarray.core.pycompat.suppress.__exit__": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "issubclass"
   ]
  },
  "type": "function"
 },
 "xarray.core.pycompat.suppress.__init__": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "xarray.core.pycompat.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "xarray.core.pycompat.unicode_type": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "xarray.core.pycompat.urlretrieve": {
  "data": {
   "shadows": "urllib.urlretrieve"
  },
  "type": "import"
 },
 "xarray.core.pycompat.zip": {
  "data": {
   "shadows": "itertools.izip"
  },
  "type": "import"
 },
 "xarray.core.pycompat.zip_longest": {
  "data": {
   "shadows": "itertools.izip_longest"
  },
  "type": "import"
 },
 "xarray.core.resample": {
  "data": {
   "symbols_in_volume": [
    "xarray.core.resample.DataArrayResample",
    "xarray.core.resample.DatasetResample"
   ]
  },
  "type": "module"
 },
 "xarray.core.resample.DataArrayResample": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "xarray.core.resample.Resample"
   ]
  },
  "type": "class"
 },
 "xarray.core.resample.DataArrayResample.__init__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "xarray.core.resample.DataArrayResample"
   ]
  },
  "type": "function"
 },
 "xarray.core.resample.DataArrayResample._interpolate": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "DataArray",
    "OrderedDict",
    "TypeError",
    "f",
    "isinstance",
    "scipy.interpolate.interp1d"
   ]
  },
  "type": "function"
 },
 "xarray.core.resample.DataArrayResample.apply": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "super",
    "xarray.core.resample.DataArrayResample"
   ]
  },
  "type": "function"
 },
 "xarray.core.resample.DatasetResample": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "xarray.core.resample.Resample"
   ]
  },
  "type": "class"
 },
 "xarray.core.resample.DatasetResample.__init__": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "xarray.core.resample.DatasetResample"
   ]
  },
  "type": "function"
 },
 "xarray.core.resample.DatasetResample._interpolate": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "Dataset",
    "OrderedDict",
    "TypeError",
    "Variable",
    "f",
    "float",
    "isinstance",
    "scipy.interpolate.interp1d"
   ]
  },
  "type": "function"
 },
 "xarray.core.resample.DatasetResample.apply": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "xarray.core.resample.DatasetResample.reduce": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "func",
    "super",
    "xarray.core.resample.DatasetResample"
   ]
  },
  "type": "function"
 },
 "xarray.core.resample.RESAMPLE_DIM": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "xarray.core.resample.Resample": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.core.resample.Resample._interpolate": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "xarray.core.resample.Resample._upsample": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "xarray.core.resample.Resample.asfreq": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "xarray.core.resample.Resample.backfill": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "xarray.core.resample.Resample.interpolate": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "xarray.core.resample.Resample.nearest": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "xarray.core.resample.Resample.pad": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "xarray.core.resample.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.resample.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.resample.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "xarray.core.resample.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.rolling": {
  "data": {
   "symbols_in_volume": [
    "inject_bottleneck_rolling_methods",
    "inject_datasetrolling_methods",
    "xarray.core.rolling.DataArrayRolling",
    "xarray.core.rolling.DatasetRolling"
   ]
  },
  "type": "module"
 },
 "xarray.core.rolling.DataArrayRolling": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "xarray.core.rolling.Rolling"
   ]
  },
  "type": "class"
 },
 "xarray.core.rolling.DataArrayRolling.__init__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "super",
    "xarray.core.rolling.DataArrayRolling"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.DataArrayRolling.__iter__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.arange",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.DataArrayRolling._bottleneck_reduce": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.DataArrayRolling._bottleneck_reduce.wrapped_func": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "DataArray",
    "dask_rolling_wrapper",
    "distutils.version.LooseVersion",
    "float",
    "func",
    "isinstance",
    "numpy.__version__",
    "slice"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.DataArrayRolling._counts": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "xarray.core.rolling._get_new_dimname"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.DataArrayRolling._reduce_method": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.DataArrayRolling._reduce_method.wrapped_func": {
  "data": {
   "lineno": 263
  },
  "type": "function"
 },
 "xarray.core.rolling.DataArrayRolling.construct": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "DataArray",
    "slice"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.DataArrayRolling.reduce": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "xarray.core.rolling._get_new_dimname"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.DatasetRolling": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "xarray.core.rolling.Rolling"
   ]
  },
  "type": "class"
 },
 "xarray.core.rolling.DatasetRolling.__init__": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "KeyError",
    "OrderedDict",
    "super",
    "xarray.core.rolling.DataArrayRolling",
    "xarray.core.rolling.DatasetRolling"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.DatasetRolling._counts": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "Dataset",
    "OrderedDict"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.DatasetRolling._reduce_method": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.DatasetRolling._reduce_method.wrapped_func": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "Dataset",
    "OrderedDict",
    "func.__name__",
    "getattr"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.DatasetRolling.construct": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "Dataset",
    "OrderedDict",
    "slice"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.DatasetRolling.reduce": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "Dataset",
    "OrderedDict",
    "func"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.core.rolling.Rolling": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.core.rolling.Rolling.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ValueError",
    "distutils.version.LooseVersion",
    "iter",
    "len",
    "next",
    "xarray.core.rolling.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling.Rolling.__len__": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "xarray.core.rolling.Rolling.__repr__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "xarray.core.rolling._get_new_dimname": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "xarray.core.rolling.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.rolling.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.rolling.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.rolling.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.rolling.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.core.utils": {
  "data": {},
  "type": "module"
 },
 "xarray.core.utils.ChainMap": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "collections.MutableMapping",
    "xarray.core.utils.SingleSlotPickleMixin"
   ]
  },
  "type": "class"
 },
 "xarray.core.utils.ChainMap.__delitem__": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.ChainMap.__getitem__": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.ChainMap.__init__": {
  "data": {
   "lineno": 379
  },
  "type": "function"
 },
 "xarray.core.utils.ChainMap.__iter__": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.ChainMap.__len__": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "iter",
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.ChainMap.__setitem__": {
  "data": {
   "lineno": 390
  },
  "type": "function"
 },
 "xarray.core.utils.Frozen": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "collections.Mapping",
    "xarray.core.utils.SingleSlotPickleMixin"
   ]
  },
  "type": "class"
 },
 "xarray.core.utils.Frozen.__contains__": {
  "data": {
   "lineno": 325
  },
  "type": "function"
 },
 "xarray.core.utils.Frozen.__getitem__": {
  "data": {
   "lineno": 316
  },
  "type": "function"
 },
 "xarray.core.utils.Frozen.__init__": {
  "data": {
   "lineno": 313
  },
  "type": "function"
 },
 "xarray.core.utils.Frozen.__iter__": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.Frozen.__len__": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.Frozen.__repr__": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.FrozenOrderedDict": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "OrderedDict",
    "xarray.core.utils.Frozen"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.HiddenKeyDict": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "collections.MutableMapping"
   ]
  },
  "type": "class"
 },
 "xarray.core.utils.HiddenKeyDict.__delitem__": {
  "data": {
   "lineno": 594
  },
  "type": "function"
 },
 "xarray.core.utils.HiddenKeyDict.__getitem__": {
  "data": {
   "lineno": 590
  },
  "type": "function"
 },
 "xarray.core.utils.HiddenKeyDict.__init__": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.HiddenKeyDict.__iter__": {
  "data": {
   "lineno": 598
  },
  "type": "function"
 },
 "xarray.core.utils.HiddenKeyDict.__len__": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "len",
    "sum"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.HiddenKeyDict.__setitem__": {
  "data": {
   "lineno": 586
  },
  "type": "function"
 },
 "xarray.core.utils.HiddenKeyDict._raise_if_hidden": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "xarray.core.utils.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "xarray.core.utils.MutableMapping": {
  "data": {
   "shadows": "collections.MutableMapping"
  },
  "type": "import"
 },
 "xarray.core.utils.MutableSet": {
  "data": {
   "shadows": "collections.MutableSet"
  },
  "type": "import"
 },
 "xarray.core.utils.NDArrayMixin": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "xarray.core.utils.NdimSizeLenMixin"
   ]
  },
  "type": "class"
 },
 "xarray.core.utils.NDArrayMixin.__getitem__": {
  "data": {
   "lineno": 481
  },
  "type": "function"
 },
 "xarray.core.utils.NDArrayMixin.__repr__": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.NDArrayMixin.dtype": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.NDArrayMixin.shape": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.NdimSizeLenMixin": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.core.utils.NdimSizeLenMixin.__len__": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "IndexError",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.NdimSizeLenMixin.ndim": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.NdimSizeLenMixin.size": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "int",
    "numpy.prod",
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.OrderedSet": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "collections.MutableSet"
   ]
  },
  "type": "class"
 },
 "xarray.core.utils.OrderedSet.__contains__": {
  "data": {
   "lineno": 422
  },
  "type": "function"
 },
 "xarray.core.utils.OrderedSet.__init__": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "OrderedDict"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.OrderedSet.__iter__": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.OrderedSet.__len__": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.OrderedSet.__repr__": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "list",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.OrderedSet.add": {
  "data": {
   "lineno": 431
  },
  "type": "function"
 },
 "xarray.core.utils.OrderedSet.discard": {
  "data": {
   "lineno": 434
  },
  "type": "function"
 },
 "xarray.core.utils.OrderedSet.update": {
  "data": {
   "lineno": 439
  },
  "type": "function"
 },
 "xarray.core.utils.ReprObject": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.core.utils.ReprObject.__init__": {
  "data": {
   "lineno": 491
  },
  "type": "function"
 },
 "xarray.core.utils.ReprObject.__repr__": {
  "data": {
   "lineno": 494
  },
  "type": "function"
 },
 "xarray.core.utils.SingleSlotPickleMixin": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.core.utils.SingleSlotPickleMixin.__getstate__": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.SingleSlotPickleMixin.__setstate__": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.SortedKeysDict": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "collections.MutableMapping",
    "xarray.core.utils.SingleSlotPickleMixin"
   ]
  },
  "type": "class"
 },
 "xarray.core.utils.SortedKeysDict.__contains__": {
  "data": {
   "lineno": 361
  },
  "type": "function"
 },
 "xarray.core.utils.SortedKeysDict.__delitem__": {
  "data": {
   "lineno": 352
  },
  "type": "function"
 },
 "xarray.core.utils.SortedKeysDict.__getitem__": {
  "data": {
   "lineno": 346
  },
  "type": "function"
 },
 "xarray.core.utils.SortedKeysDict.__init__": {
  "data": {
   "lineno": 343
  },
  "type": "function"
 },
 "xarray.core.utils.SortedKeysDict.__iter__": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "iter",
    "sorted"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.SortedKeysDict.__len__": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.SortedKeysDict.__repr__": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.SortedKeysDict.__setitem__": {
  "data": {
   "lineno": 349
  },
  "type": "function"
 },
 "xarray.core.utils.SortedKeysDict.copy": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils._check_inplace": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "FutureWarning",
    "xarray.core.utils.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils._maybe_cast_to_cftimeindex": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "CFTimeIndex",
    "ImportError",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.utils.alias": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "isinstance",
    "obj.__name__",
    "xarray.core.utils.alias_message"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.alias.wrapper": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "obj",
    "xarray.core.utils.alias_warning",
    "xarray.core.utils.functools"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.alias_message": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "xarray.core.utils.alias_warning": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "FutureWarning",
    "xarray.core.utils.alias_message",
    "xarray.core.utils.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.close_on_error": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "Exception",
    "xarray.core.utils.contextlib"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "xarray.core.utils.datetime_to_numeric": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "float",
    "numpy.timedelta64"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.decode_numpy_dict_values": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "numpy.asscalar",
    "numpy.generic",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.dict_equiv": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "compat",
    "xarray.core.utils.equivalent"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.utils.either_dict_or_kwargs": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "ValueError",
    "xarray.core.utils.is_dict_like"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.ensure_us_time_resolution": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "numpy.datetime64",
    "numpy.issubdtype",
    "numpy.timedelta64"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.equivalent": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.core.utils.hashable": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "TypeError",
    "hash"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.is_dict_like": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.is_full_slice": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "isinstance",
    "slice"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.is_grib_path": {
  "data": {
   "lineno": 514
  },
  "type": "function"
 },
 "xarray.core.utils.is_remote_uri": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "bool",
    "xarray.core.utils.re"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.is_scalar": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "collections.Iterable",
    "getattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.is_uniform_spaced": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.diff",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.is_valid_numpy_dtype": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "xarray.core.utils.maybe_wrap_array": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.multiindex_from_product_levels": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "TypeError",
    "any",
    "isinstance",
    "numpy.meshgrid",
    "pandas.Index",
    "pandas.MultiIndex",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.not_implemented": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "NotImplemented"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.utils.ordered_dict_intersection": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "OrderedDict",
    "compat",
    "xarray.core.utils.equivalent",
    "xarray.core.utils.remove_incompatible_items"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "xarray.core.utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.utils.peek_at": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "iter",
    "next",
    "xarray.core.utils.itertools"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "xarray.core.utils.remove_incompatible_items": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "compat",
    "list",
    "xarray.core.utils.equivalent"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.safe_cast_to_index": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "numpy.asarray",
    "object",
    "pandas.Index",
    "xarray.core.utils._maybe_cast_to_cftimeindex"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.to_0d_array": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.isscalar",
    "numpy.ndarray",
    "xarray.core.utils.to_0d_object_array"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.to_0d_object_array": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "numpy.empty",
    "object"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.update_safety_check": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "ValueError",
    "compat",
    "iteritems",
    "xarray.core.utils.equivalent"
   ]
  },
  "type": "function"
 },
 "xarray.core.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.plot": {
  "data": {},
  "type": "module"
 },
 "xarray.plot.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "xarray.plot.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.plot.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.plot.facetgrid": {
  "data": {},
  "type": "module"
 },
 "xarray.plot.facetgrid.FacetGrid": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.plot.facetgrid.FacetGrid.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError",
    "import_matplotlib_pyplot",
    "int",
    "len",
    "list",
    "numpy.array",
    "numpy.ceil",
    "range",
    "xarray.plot.facetgrid.itertools",
    "xarray.plot.facetgrid.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid._bottom_axes": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid._finalize_grid": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid._left_axes": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid.add_colorbar": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "label_from_attrs",
    "list"
   ]
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid.add_legend": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid.map": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "func",
    "hasattr",
    "import_matplotlib_pyplot",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid.map_dataarray": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "ValueError",
    "_determine_cmap_params",
    "_infer_xy_labels",
    "dict",
    "func",
    "getargspec",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid.map_dataarray_line": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "_infer_line_data",
    "line",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid.set_axis_labels": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "label_from_attrs"
   ]
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid.set_ticks": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "matplotlib.ticker.MaxNLocator",
    "xarray.plot.facetgrid._FONTSIZE",
    "xarray.plot.facetgrid._NTICKS",
    "xarray.plot.facetgrid.itertools"
   ]
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid.set_titles": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "list",
    "matplotlib.rcParams",
    "nicetitle",
    "xarray.plot.facetgrid._nicetitle",
    "xarray.plot.facetgrid.functools",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid.set_xlabels": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "label_from_attrs"
   ]
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid.set_ylabels": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "label_from_attrs"
   ]
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.MaxNLocator": {
  "data": {
   "shadows": "matplotlib.ticker.MaxNLocator"
  },
  "type": "import"
 },
 "xarray.plot.facetgrid._FONTSIZE": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "xarray.plot.facetgrid._NTICKS": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "xarray.plot.facetgrid._nicetitle": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "format_item",
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.plot.facetgrid.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.plot.facetgrid.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.plot.facetgrid.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "xarray.plot.facetgrid.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "xarray.plot.facetgrid.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.plot.facetgrid.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.plot.facetgrid.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.plot.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.plot.utils": {
  "data": {},
  "type": "module"
 },
 "xarray.plot.utils.ListedColormap": {
  "data": {
   "shadows": "matplotlib.colors.ListedColormap"
  },
  "type": "import"
 },
 "xarray.plot.utils.ROBUST_PERCENTILE": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "xarray.plot.utils._build_discrete_cmap": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "getattr",
    "len",
    "matplotlib.colors.from_levels_and_colors",
    "xarray.plot.utils._color_palette"
   ]
  },
  "type": "function"
 },
 "xarray.plot.utils._color_palette": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "cmap",
    "isinstance",
    "list",
    "matplotlib.colors.ListedColormap",
    "matplotlib.pyplot.get_cmap",
    "numpy.linspace",
    "seaborn.apionly.color_palette",
    "tuple"
   ]
  },
  "type": "function"
 },
 "xarray.plot.utils._determine_cmap_params": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "cmap",
    "dict",
    "is_scalar",
    "isinstance",
    "matplotlib.colors.BoundaryNorm",
    "matplotlib.ticker.MaxNLocator",
    "max",
    "numpy.array",
    "numpy.asarray",
    "numpy.isfinite",
    "numpy.linspace",
    "numpy.percentile",
    "numpy.ravel",
    "xarray.plot.utils.ROBUST_PERCENTILE",
    "xarray.plot.utils._build_discrete_cmap",
    "xarray.plot.utils._determine_extend"
   ]
  },
  "type": "function"
 },
 "xarray.plot.utils._determine_extend": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "xarray.plot.utils._infer_xy_labels": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "xarray.plot.utils._infer_xy_labels_3d"
   ]
  },
  "type": "function"
 },
 "xarray.plot.utils._infer_xy_labels_3d": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "set",
    "xarray.plot.utils._infer_xy_labels",
    "xarray.plot.utils.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.plot.utils._interval_to_bound_points": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "xarray.plot.utils._interval_to_double_bound_points": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "xarray.plot.utils.itertools",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.plot.utils._interval_to_mid_points": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "xarray.plot.utils._registered": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "xarray.plot.utils._resolve_intervals_2dplot": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "pandas.Interval",
    "xarray.plot.utils._interval_to_bound_points",
    "xarray.plot.utils._interval_to_mid_points",
    "xarray.plot.utils._valid_other_type"
   ]
  },
  "type": "function"
 },
 "xarray.plot.utils._valid_other_type": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "all",
    "any",
    "isinstance",
    "numpy.ravel"
   ]
  },
  "type": "function"
 },
 "xarray.plot.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.plot.utils.color_palette": {
  "data": {
   "shadows": "seaborn.apionly.color_palette"
  },
  "type": "import"
 },
 "xarray.plot.utils.converter": {
  "data": {
   "shadows": "pandas.tseries.converter"
  },
  "type": "import"
 },
 "xarray.plot.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.plot.utils.get_axis": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "ValueError",
    "matplotlib.pyplot.gca",
    "matplotlib.pyplot.subplots",
    "matplotlib.rcParams"
   ]
  },
  "type": "function"
 },
 "xarray.plot.utils.import_matplotlib_pyplot": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "matplotlib.pyplot",
    "xarray.plot.utils.register_pandas_datetime_converter_if_needed"
   ]
  },
  "type": "function"
 },
 "xarray.plot.utils.import_seaborn": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ImportError",
    "UserWarning",
    "issubclass",
    "seaborn",
    "str",
    "xarray.plot.utils.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.plot.utils.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "xarray.plot.utils.label_from_attrs": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "xarray.plot.utils.textwrap"
   ]
  },
  "type": "function"
 },
 "xarray.plot.utils.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "xarray.plot.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.plot.utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.plot.utils.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "xarray.plot.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.plot.utils.register_matplotlib_converters": {
  "data": {
   "shadows": "pandas.plotting.register_matplotlib_converters"
  },
  "type": "import"
 },
 "xarray.plot.utils.register_pandas_datetime_converter_if_needed": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ImportError",
    "pandas.plotting.register_matplotlib_converters",
    "pandas.tseries.converter.register",
    "xarray.plot.utils._registered"
   ]
  },
  "type": "function"
 },
 "xarray.plot.utils.sns": {
  "data": {
   "shadows": "seaborn"
  },
  "type": "import"
 },
 "xarray.plot.utils.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "xarray.plot.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.testing": {
  "data": {},
  "type": "module"
 },
 "xarray.testing._data_allclose_or_equiv": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "any",
    "xarray.core.duck_array_ops.allclose_or_equiv",
    "xarray.core.duck_array_ops.array_equiv",
    "xarray.testing._decode_string_data"
   ]
  },
  "type": "function"
 },
 "xarray.testing._decode_string_data": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.core.defchararray.decode"
   ]
  },
  "type": "function"
 },
 "xarray.testing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.testing.assert_allclose": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "isinstance",
    "list",
    "set",
    "type",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.testing._data_allclose_or_equiv"
   ]
  },
  "type": "function"
 },
 "xarray.testing.assert_combined_tile_ids_equal": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "len",
    "xarray.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.testing.assert_equal": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "type",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.testing.assert_identical": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "type",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.testing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.testing.duck_array_ops": {
  "data": {
   "shadows": "xarray.core.duck_array_ops"
  },
  "type": "import"
 },
 "xarray.testing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.testing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.testing.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "ValueError",
    "matplotlib.use",
    "xarray.core.options.set_options",
    "xarray.plot.utils.import_seaborn",
    "xarray.tests.LooseVersion",
    "xarray.tests._SKIP_FLAKY",
    "xarray.tests._SKIP_NETWORK_TESTS",
    "xarray.tests._importorskip",
    "xarray.tests.dask",
    "xarray.tests.has_cftime_or_netCDF4",
    "xarray.tests.has_scipy_or_netCDF4",
    "xarray.tests.has_seaborn",
    "xarray.tests.pytest"
   ]
  },
  "type": "module"
 },
 "xarray.tests.ExplicitlyIndexed": {
  "data": {
   "shadows": "xarray.core.indexing.ExplicitlyIndexed"
  },
  "type": "import"
 },
 "xarray.tests.InaccessibleArray": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "xarray.core.indexing.ExplicitlyIndexed",
    "xarray.core.utils.NDArrayMixin"
   ]
  },
  "type": "class"
 },
 "xarray.tests.InaccessibleArray.__getitem__": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "xarray.tests.UnexpectedDataAccess"
   ]
  },
  "type": "function"
 },
 "xarray.tests.InaccessibleArray.__init__": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "xarray.tests.IndexerMaker": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.IndexerMaker.__getitem__": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "xarray.tests.IndexerMaker.__init__": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "xarray.tests.LooseVersion": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "distutils.version.LooseVersion"
   ]
  },
  "type": "function"
 },
 "xarray.tests.ReturnItem": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.ReturnItem.__getitem__": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "xarray.tests.UnexpectedDataAccess": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "xarray.tests._SKIP_FLAKY": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "xarray.tests._SKIP_NETWORK_TESTS": {
  "data": {
   "lineno": 121
  },
  "type": "constant"
 },
 "xarray.tests._importorskip": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ImportError",
    "xarray.tests.LooseVersion",
    "xarray.tests.importlib",
    "xarray.tests.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.allclose_or_equiv": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.allclose_or_equiv"
  },
  "type": "import"
 },
 "xarray.tests.assert_allclose": {
  "data": {
   "shadows": "xarray.testing.assert_allclose"
  },
  "type": "import"
 },
 "xarray.tests.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "xarray.tests.assert_combined_tile_ids_equal": {
  "data": {
   "shadows": "xarray.testing.assert_combined_tile_ids_equal"
  },
  "type": "import"
 },
 "xarray.tests.assert_equal": {
  "data": {
   "shadows": "xarray.testing.assert_equal"
  },
  "type": "import"
 },
 "xarray.tests.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "xarray.tests.assert_identical": {
  "data": {
   "shadows": "xarray.testing.assert_identical"
  },
  "type": "import"
 },
 "xarray.tests.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "xarray.tests.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "xarray.tests.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.flaky": {
  "data": {
   "lineno": 123
  },
  "type": "constant"
 },
 "xarray.tests.has_cftime_or_netCDF4": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "xarray.tests.has_scipy_or_netCDF4": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "xarray.tests.has_seaborn": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "xarray.tests.import_seaborn": {
  "data": {
   "shadows": "xarray.plot.utils.import_seaborn"
  },
  "type": "import"
 },
 "xarray.tests.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "xarray.tests.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "xarray.tests.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "xarray.tests.network": {
  "data": {
   "lineno": 125
  },
  "type": "constant"
 },
 "xarray.tests.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.raises_regex": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "AssertionError",
    "contextlib.contextmanager",
    "str",
    "xarray.tests.pytest",
    "xarray.tests.re"
   ]
  },
  "type": "function"
 },
 "xarray.tests.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "xarray.tests.requires_cftime_or_netCDF4": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "xarray.tests.requires_scipy_or_netCDF4": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "xarray.tests.requires_seaborn": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "xarray.tests.set_options": {
  "data": {
   "shadows": "xarray.core.options.set_options"
  },
  "type": "import"
 },
 "xarray.tests.source_ndarray": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "getattr",
    "numpy.asarray",
    "xarray.tests.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessors": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_accessors.TestDatetimeAccessor": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_accessors.TestDatetimeAccessor.setup": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.random.choice",
    "numpy.random.rand",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.test_accessors.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessors.TestDatetimeAccessor.test_dask_field_access": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "assert_equal",
    "dask.array.Array",
    "dask.array.from_array",
    "isinstance",
    "round",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessors.TestDatetimeAccessor.test_field_access": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "assert_equal",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessors.TestDatetimeAccessor.test_not_datetime_type": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "numpy.arange",
    "raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessors.TestDatetimeAccessor.test_rounders": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "assert_array_equal",
    "len",
    "numpy.arange",
    "pandas.date_range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessors.TestDatetimeAccessor.test_seasons": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "assert_array_equal",
    "pandas.date_range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessors._CFTIME_CALENDARS": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "xarray.tests.test_accessors._NT": {
  "data": {
   "lineno": 124
  },
  "type": "constant"
 },
 "xarray.tests.test_accessors.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_accessors.calendar": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "xarray.tests.test_accessors._CFTIME_CALENDARS",
    "xarray.tests.test_accessors.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessors.cftime": {
  "data": {
   "shadows": "cftime"
  },
  "type": "import"
 },
 "xarray.tests.test_accessors.cftime_date_type": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "_all_cftime_date_types",
    "xarray.tests.test_accessors.calendar",
    "xarray.tests.test_accessors.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessors.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.tests.test_accessors.data": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.random.rand",
    "xarray.DataArray",
    "xarray.tests.test_accessors._NT",
    "xarray.tests.test_accessors.pytest",
    "xarray.tests.test_accessors.times"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessors.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_accessors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_accessors.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_accessors.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_accessors.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_accessors.test_dask_field_access": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "assert_equal",
    "dask.array.Array",
    "getattr",
    "isinstance",
    "xarray.DataArray",
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.tests.test_accessors.pytest",
    "xarray.tests.test_accessors.times_3d"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessors.test_dask_field_access_1d": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "assert_equal",
    "dask.array.Array",
    "getattr",
    "isinstance",
    "xarray.DataArray",
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.tests.test_accessors.data",
    "xarray.tests.test_accessors.pytest",
    "xarray.tests.test_accessors.times"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessors.test_dt_accessor_error_netCDF4": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "TypeError",
    "dask.array",
    "dask.array.dt.month",
    "xarray.DataArray",
    "xarray.tests.test_accessors.cftime_date_type",
    "xarray.tests.test_accessors.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessors.test_field_access": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "assert_equal",
    "getattr",
    "xarray.DataArray",
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.tests.test_accessors.data",
    "xarray.tests.test_accessors.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessors.test_seasons": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "range",
    "xarray.DataArray",
    "xarray.tests.test_accessors.cftime_date_type",
    "xarray.tests.test_accessors.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessors.times": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "numpy.arange",
    "xarray.tests.test_accessors._NT",
    "xarray.tests.test_accessors.calendar",
    "xarray.tests.test_accessors.cftime",
    "xarray.tests.test_accessors.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessors.times_3d": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.random.choice",
    "xarray.DataArray",
    "xarray.tests.test_accessors._NT",
    "xarray.tests.test_accessors.pytest",
    "xarray.tests.test_accessors.times"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_accessors.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_backends_api": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_backends_api._get_default_engine": {
  "data": {
   "shadows": "xarray.backends.api._get_default_engine"
  },
  "type": "import"
 },
 "xarray.tests.test_backends_api.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_backends_api.test__get_default_engine": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ValueError",
    "xarray.backends.api._get_default_engine",
    "xarray.tests.test_backends_api.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_file_manager": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "xarray.tests.test_backends_file_manager.CachingFileManager": {
  "data": {
   "shadows": "xarray.backends.file_manager.CachingFileManager"
  },
  "type": "import"
 },
 "xarray.tests.test_backends_file_manager.LRUCache": {
  "data": {
   "shadows": "xarray.backends.lru_cache.LRUCache"
  },
  "type": "import"
 },
 "xarray.tests.test_backends_file_manager.file_cache": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "xarray.backends.lru_cache.LRUCache",
    "xarray.tests.test_backends_file_manager.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_file_manager.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "xarray.tests.test_backends_file_manager.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "xarray.tests.test_backends_file_manager.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "xarray.tests.test_backends_file_manager.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_backends_file_manager.set_options": {
  "data": {
   "shadows": "xarray.core.options.set_options"
  },
  "type": "import"
 },
 "xarray.tests.test_backends_file_manager.test_file_manager_autoclose": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "RuntimeWarning",
    "unittest.mock.Mock",
    "xarray.backends.file_manager.CachingFileManager",
    "xarray.core.options.set_options",
    "xarray.tests.test_backends_file_manager.gc",
    "xarray.tests.test_backends_file_manager.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_file_manager.test_file_manager_autoclose_while_locked": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "unittest.mock.Mock",
    "xarray.backends.file_manager.CachingFileManager",
    "xarray.core.options.set_options",
    "xarray.tests.test_backends_file_manager.gc",
    "xarray.tests.test_backends_file_manager.threading"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_file_manager.test_file_manager_invalid_kwargs": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "TypeError",
    "open",
    "xarray.backends.file_manager.CachingFileManager",
    "xarray.tests.test_backends_file_manager.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_file_manager.test_file_manager_mock_write": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "open",
    "unittest.mock.MagicMock",
    "unittest.mock.Mock",
    "unittest.mock.call",
    "xarray.backends.file_manager.CachingFileManager",
    "xarray.tests.test_backends_file_manager.file_cache",
    "xarray.tests.test_backends_file_manager.threading"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_file_manager.test_file_manager_read": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "open",
    "str",
    "xarray.backends.file_manager.CachingFileManager",
    "xarray.tests.test_backends_file_manager.file_cache"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_file_manager.test_file_manager_refcounts": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "open",
    "unittest.mock.Mock",
    "xarray.backends.file_manager.CachingFileManager",
    "xarray.core.options.set_options",
    "xarray.tests.test_backends_file_manager.gc"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_file_manager.test_file_manager_replace_object": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "unittest.mock.Mock",
    "xarray.backends.file_manager.CachingFileManager"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_file_manager.test_file_manager_repr": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "repr",
    "unittest.mock.Mock",
    "xarray.backends.file_manager.CachingFileManager"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_file_manager.test_file_manager_write_concurrent": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "open",
    "str",
    "xarray.backends.file_manager.CachingFileManager",
    "xarray.tests.test_backends_file_manager.file_cache"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_file_manager.test_file_manager_write_consecutive": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "float",
    "getattr",
    "open",
    "str",
    "xarray.backends.file_manager.CachingFileManager",
    "xarray.tests.test_backends_file_manager.file_cache"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_file_manager.test_file_manager_write_pickle": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "open",
    "str",
    "xarray.backends.file_manager.CachingFileManager",
    "xarray.tests.test_backends_file_manager.file_cache",
    "xarray.tests.test_backends_file_manager.pickle"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_file_manager.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "xarray.tests.test_backends_locks": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_backends_locks.locks": {
  "data": {
   "shadows": "xarray.backends.locks"
  },
  "type": "import"
 },
 "xarray.tests.test_backends_locks.test_threaded_lock": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "isinstance",
    "type",
    "xarray.backends.locks._get_threaded_lock",
    "xarray.tests.test_backends_locks.threading"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_locks.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "xarray.tests.test_backends_lru_cache": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "xarray.tests.test_backends_lru_cache.LRUCache": {
  "data": {
   "shadows": "xarray.backends.lru_cache.LRUCache"
  },
  "type": "import"
 },
 "xarray.tests.test_backends_lru_cache.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "xarray.tests.test_backends_lru_cache.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_backends_lru_cache.test_del": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "dict",
    "xarray.backends.lru_cache.LRUCache"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_lru_cache.test_invalid": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "xarray.backends.lru_cache.LRUCache",
    "xarray.tests.test_backends_lru_cache.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_lru_cache.test_on_evict": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "unittest.mock.Mock",
    "xarray.backends.lru_cache.LRUCache"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_lru_cache.test_on_evict_trivial": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "unittest.mock.Mock",
    "xarray.backends.lru_cache.LRUCache"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_lru_cache.test_resize": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "xarray.backends.lru_cache.LRUCache",
    "xarray.tests.test_backends_lru_cache.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_lru_cache.test_simple": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "dict",
    "len",
    "list",
    "xarray.backends.lru_cache.LRUCache"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_lru_cache.test_trivial": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "len",
    "xarray.backends.lru_cache.LRUCache"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_backends_lru_cache.test_update_priority": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "list",
    "xarray.backends.lru_cache.LRUCache"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets": {
  "data": {
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.BaseCFTimeOffset",
    "xarray.coding.cftime_offsets.Day",
    "xarray.coding.cftime_offsets.Hour",
    "xarray.coding.cftime_offsets.Minute",
    "xarray.coding.cftime_offsets.MonthBegin",
    "xarray.coding.cftime_offsets.MonthEnd",
    "xarray.coding.cftime_offsets.Second",
    "xarray.coding.cftime_offsets.YearBegin",
    "xarray.coding.cftime_offsets.YearEnd",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "module"
 },
 "xarray.tests.test_cftime_offsets.BaseCFTimeOffset": {
  "data": {
   "shadows": "xarray.coding.cftime_offsets.BaseCFTimeOffset"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.CFTimeIndex": {
  "data": {
   "shadows": "xarray.CFTimeIndex"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.Day": {
  "data": {
   "shadows": "xarray.coding.cftime_offsets.Day"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.Hour": {
  "data": {
   "shadows": "xarray.coding.cftime_offsets.Hour"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.Minute": {
  "data": {
   "shadows": "xarray.coding.cftime_offsets.Minute"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.MonthBegin": {
  "data": {
   "shadows": "xarray.coding.cftime_offsets.MonthBegin"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.MonthEnd": {
  "data": {
   "shadows": "xarray.coding.cftime_offsets.MonthEnd"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.Second": {
  "data": {
   "shadows": "xarray.coding.cftime_offsets.Second"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.YearBegin": {
  "data": {
   "shadows": "xarray.coding.cftime_offsets.YearBegin"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.YearEnd": {
  "data": {
   "shadows": "xarray.coding.cftime_offsets.YearEnd"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets._ADD_TESTS": {
  "data": {
   "lineno": 270
  },
  "type": "constant"
 },
 "xarray.tests.test_cftime_offsets._ANNUAL_OFFSET_TYPES": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "xarray.tests.test_cftime_offsets._CALENDAR_SPECIFIC_MONTH_END_TESTS": {
  "data": {
   "lineno": 752
  },
  "type": "constant"
 },
 "xarray.tests.test_cftime_offsets._CFTIME_CALENDARS": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "xarray.tests.test_cftime_offsets._CFTIME_RANGE_TESTS": {
  "data": {
   "lineno": 664
  },
  "type": "constant"
 },
 "xarray.tests.test_cftime_offsets._EQ_TESTS_A": {
  "data": {
   "lineno": 198
  },
  "type": "constant"
 },
 "xarray.tests.test_cftime_offsets._EQ_TESTS_B": {
  "data": {
   "lineno": 203
  },
  "type": "constant"
 },
 "xarray.tests.test_cftime_offsets._EQ_TESTS_B_COPY": {
  "data": {
   "lineno": 217
  },
  "type": "constant"
 },
 "xarray.tests.test_cftime_offsets._MONTH_ABBREVIATIONS": {
  "data": {
   "shadows": "xarray.coding.cftime_offsets._MONTH_ABBREVIATIONS"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets._MUL_TESTS": {
  "data": {
   "lineno": 231
  },
  "type": "constant"
 },
 "xarray.tests.test_cftime_offsets._days_in_month": {
  "data": {
   "shadows": "xarray.coding.cftime_offsets._days_in_month"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets._id_func": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.calendar": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "xarray.tests.test_cftime_offsets._CFTIME_CALENDARS",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.cftime": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "xarray.tests.test_cftime_offsets.cftime_range": {
  "data": {
   "shadows": "xarray.coding.cftime_offsets.cftime_range"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.get_date_type": {
  "data": {
   "shadows": "xarray.coding.cftime_offsets.get_date_type"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.test_add_month_begin": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "date_type",
    "offset",
    "xarray.coding.cftime_offsets.MonthBegin",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_add_month_end": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "date_type",
    "offset",
    "xarray.coding.cftime_offsets.MonthEnd",
    "xarray.coding.cftime_offsets._days_in_month",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_add_month_end_onOffset": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "date_type",
    "offset",
    "xarray.coding.cftime_offsets.MonthEnd",
    "xarray.coding.cftime_offsets._days_in_month",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_add_sub_monthly": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "date_type",
    "offset",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._ADD_TESTS",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_add_year_begin": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "date_type",
    "offset",
    "xarray.coding.cftime_offsets.YearBegin",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_add_year_end": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "date_type",
    "offset",
    "xarray.coding.cftime_offsets.YearEnd",
    "xarray.coding.cftime_offsets._days_in_month",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_add_year_end_onOffset": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "date_type",
    "offset",
    "xarray.coding.cftime_offsets.YearEnd",
    "xarray.coding.cftime_offsets._days_in_month",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_calendar_specific_month_end": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "date_type",
    "numpy.testing.assert_equal",
    "xarray.coding.cftime_offsets.cftime_range",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._CALENDAR_SPECIFIC_MONTH_END_TESTS",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_calendar_year_length": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "len",
    "xarray.coding.cftime_offsets.cftime_range",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_cftime_offset_constructor_invalid_n": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "TypeError",
    "offset",
    "xarray.coding.cftime_offsets.BaseCFTimeOffset",
    "xarray.coding.cftime_offsets.YearBegin",
    "xarray.coding.cftime_offsets.YearEnd",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_cftime_offset_constructor_valid_n": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.BaseCFTimeOffset",
    "xarray.coding.cftime_offsets.YearBegin",
    "xarray.coding.cftime_offsets.YearEnd",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_cftime_range": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "date_type",
    "isinstance",
    "numpy.abs",
    "numpy.array",
    "numpy.max",
    "numpy.testing.assert_equal",
    "tuple",
    "xarray.CFTimeIndex",
    "xarray.coding.cftime_offsets.cftime_range",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._CFTIME_RANGE_TESTS",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_cftime_range_name": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.cftime_range"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_dayofweek_after_cftime_range": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "pandas.date_range",
    "xarray.coding.cftime_offsets.cftime_range",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_dayofyear_after_cftime_range": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "pandas.date_range",
    "xarray.coding.cftime_offsets.cftime_range",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_days_in_month_december": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "date_type",
    "xarray.coding.cftime_offsets._days_in_month",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets.calendar"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_days_in_month_non_december": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "date_type",
    "xarray.coding.cftime_offsets._days_in_month",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets.calendar"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_eq": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "xarray.tests.test_cftime_offsets._EQ_TESTS_B",
    "xarray.tests.test_cftime_offsets._EQ_TESTS_B_COPY",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_invalid_cftime_range_inputs": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "ValueError",
    "xarray.coding.cftime_offsets.cftime_range",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_invalid_to_offset_str": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "ValueError",
    "xarray.coding.cftime_offsets.to_offset",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_minus_offset": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "xarray.tests.test_cftime_offsets._EQ_TESTS_A",
    "xarray.tests.test_cftime_offsets._EQ_TESTS_B",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_minus_offset_error": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "numpy.roll",
    "xarray.coding.cftime_offsets.YearEnd",
    "xarray.tests.test_cftime_offsets._EQ_TESTS_A",
    "xarray.tests.test_cftime_offsets._EQ_TESTS_B",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_mul": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "offset",
    "xarray.tests.test_cftime_offsets._MUL_TESTS",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_neg": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "offset",
    "xarray.coding.cftime_offsets.BaseCFTimeOffset",
    "xarray.coding.cftime_offsets.Day",
    "xarray.coding.cftime_offsets.Hour",
    "xarray.coding.cftime_offsets.Minute",
    "xarray.coding.cftime_offsets.MonthBegin",
    "xarray.coding.cftime_offsets.MonthEnd",
    "xarray.coding.cftime_offsets.Second",
    "xarray.coding.cftime_offsets.YearBegin",
    "xarray.coding.cftime_offsets.YearEnd",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_neq": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "itertools.product",
    "xarray.tests.test_cftime_offsets._EQ_TESTS_A",
    "xarray.tests.test_cftime_offsets._EQ_TESTS_B",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_onOffset": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "date_type",
    "offset.onOffset",
    "xarray.coding.cftime_offsets.Day",
    "xarray.coding.cftime_offsets.Hour",
    "xarray.coding.cftime_offsets.Minute",
    "xarray.coding.cftime_offsets.MonthBegin",
    "xarray.coding.cftime_offsets.MonthEnd",
    "xarray.coding.cftime_offsets.Second",
    "xarray.coding.cftime_offsets.YearBegin",
    "xarray.coding.cftime_offsets.YearEnd",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_onOffset_month_or_year_end": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "date_type",
    "offset.onOffset",
    "xarray.coding.cftime_offsets.MonthEnd",
    "xarray.coding.cftime_offsets.YearEnd",
    "xarray.coding.cftime_offsets._days_in_month",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_radd_sub_monthly": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "date_type",
    "offset",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._ADD_TESTS",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_rmul": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "offset",
    "xarray.tests.test_cftime_offsets._MUL_TESTS",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_rollback": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "date_type",
    "isinstance",
    "offset",
    "offset.rollback",
    "xarray.coding.cftime_offsets.Day",
    "xarray.coding.cftime_offsets.Hour",
    "xarray.coding.cftime_offsets.Minute",
    "xarray.coding.cftime_offsets.MonthBegin",
    "xarray.coding.cftime_offsets.MonthEnd",
    "xarray.coding.cftime_offsets.Second",
    "xarray.coding.cftime_offsets.YearBegin",
    "xarray.coding.cftime_offsets.YearEnd",
    "xarray.coding.cftime_offsets._days_in_month",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_rollforward": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "date_type",
    "isinstance",
    "offset",
    "offset.rollforward",
    "xarray.coding.cftime_offsets.Day",
    "xarray.coding.cftime_offsets.Hour",
    "xarray.coding.cftime_offsets.Minute",
    "xarray.coding.cftime_offsets.MonthBegin",
    "xarray.coding.cftime_offsets.MonthEnd",
    "xarray.coding.cftime_offsets.Second",
    "xarray.coding.cftime_offsets.YearBegin",
    "xarray.coding.cftime_offsets.YearEnd",
    "xarray.coding.cftime_offsets._days_in_month",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_rsub_sub_monthly": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "date_type",
    "offset",
    "xarray.coding.cftime_offsets.Day",
    "xarray.coding.cftime_offsets.Hour",
    "xarray.coding.cftime_offsets.Minute",
    "xarray.coding.cftime_offsets.Second",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_rule_code": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "offset.rule_code",
    "xarray.coding.cftime_offsets.BaseCFTimeOffset",
    "xarray.coding.cftime_offsets.MonthBegin",
    "xarray.coding.cftime_offsets.YearBegin",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_str_and_repr": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "offset",
    "repr",
    "str",
    "xarray.coding.cftime_offsets.BaseCFTimeOffset",
    "xarray.coding.cftime_offsets.YearBegin",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_sub_error": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "TypeError",
    "date_type",
    "offset",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.tests.test_cftime_offsets._EQ_TESTS_A",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_to_cftime_datetime": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "date_type",
    "isinstance",
    "tuple",
    "xarray.coding.cftime_offsets.get_date_type",
    "xarray.coding.cftime_offsets.to_cftime_datetime",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.calendar",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_to_cftime_datetime_error_no_calendar": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "ValueError",
    "xarray.coding.cftime_offsets.to_cftime_datetime",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_to_cftime_datetime_error_type_error": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "TypeError",
    "xarray.coding.cftime_offsets.to_cftime_datetime",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_to_offset_annual": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "list",
    "offset_type",
    "xarray.coding.cftime_offsets._MONTH_ABBREVIATIONS.items",
    "xarray.coding.cftime_offsets.to_offset",
    "xarray.tests.test_cftime_offsets._ANNUAL_OFFSET_TYPES",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_to_offset_offset_input": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "offset",
    "xarray.coding.cftime_offsets.BaseCFTimeOffset",
    "xarray.coding.cftime_offsets.MonthBegin",
    "xarray.coding.cftime_offsets.YearBegin",
    "xarray.coding.cftime_offsets.to_offset",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_to_offset_sub_annual": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "xarray.coding.cftime_offsets.Day",
    "xarray.coding.cftime_offsets.Hour",
    "xarray.coding.cftime_offsets.Minute",
    "xarray.coding.cftime_offsets.MonthBegin",
    "xarray.coding.cftime_offsets.MonthEnd",
    "xarray.coding.cftime_offsets.Second",
    "xarray.coding.cftime_offsets.to_offset",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_year_offset_constructor_invalid_month": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "offset",
    "xarray.coding.cftime_offsets.YearBegin",
    "xarray.coding.cftime_offsets.YearEnd",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.test_year_offset_constructor_valid_month": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "offset.month",
    "xarray.coding.cftime_offsets.YearBegin",
    "xarray.coding.cftime_offsets.YearEnd",
    "xarray.tests.test_cftime_offsets._id_func",
    "xarray.tests.test_cftime_offsets.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftime_offsets.to_cftime_datetime": {
  "data": {
   "shadows": "xarray.coding.cftime_offsets.to_cftime_datetime"
  },
  "type": "import"
 },
 "xarray.tests.test_cftime_offsets.to_offset": {
  "data": {
   "shadows": "xarray.coding.cftime_offsets.to_offset"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex": {
  "data": {
   "symbols_in_volume": [
    "slice",
    "xarray.tests.test_cftimeindex.date_dict"
   ]
  },
  "type": "module"
 },
 "xarray.tests.test_cftimeindex.CFTimeIndex": {
  "data": {
   "shadows": "xarray.coding.cftimeindex.CFTimeIndex"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex.DatetimeNoLeap": {
  "data": {
   "shadows": "cftime.DatetimeNoLeap"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex.ISO8601_STRING_TESTS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "xarray.tests.test_cftimeindex.SEL_STRING_OR_LIST_TESTS": {
  "data": {
   "lineno": 385
  },
  "type": "constant"
 },
 "xarray.tests.test_cftimeindex._CFTIME_CALENDARS": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "xarray.tests.test_cftimeindex._parse_array_of_cftime_strings": {
  "data": {
   "shadows": "xarray.coding.cftimeindex._parse_array_of_cftime_strings"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex._parse_iso8601_with_reso": {
  "data": {
   "shadows": "xarray.coding.cftimeindex._parse_iso8601_with_reso"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex._parsed_string_to_bounds": {
  "data": {
   "shadows": "xarray.coding.cftimeindex._parsed_string_to_bounds"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex.assert_all_valid_date_type": {
  "data": {
   "shadows": "xarray.coding.cftimeindex.assert_all_valid_date_type"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex.assert_array_equal": {
  "data": {
   "shadows": "xarray.tests.assert_array_equal"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex.assert_identical": {
  "data": {
   "shadows": "xarray.tests.assert_identical"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex.cftime": {
  "data": {
   "shadows": "cftime"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex.da": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.date_dict": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.date_type": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "_all_cftime_date_types",
    "xarray.tests.test_cftimeindex._CFTIME_CALENDARS",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.dec_days": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "xarray.tests.test_cftimeindex.cftime",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.df": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.feb_days": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "xarray.tests.test_cftimeindex.cftime",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.index": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.index_with_name": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.length_one_index": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.monotonic_decreasing_index": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex.parse_iso8601": {
  "data": {
   "shadows": "xarray.coding.cftimeindex.parse_iso8601"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex.range_args": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "slice",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.scalar_args": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.series": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "pandas.Series",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_assert_all_valid_date_type": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "xarray.coding.cftimeindex.assert_all_valid_date_type",
    "xarray.tests.test_cftimeindex.cftime",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_add": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "datetime.timedelta",
    "isinstance",
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_add_timedeltaindex": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "datetime.timedelta",
    "isinstance",
    "pandas.TimedeltaIndex",
    "range",
    "xarray.cftime_range",
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.tests.test_cftimeindex._CFTIME_CALENDARS",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_dayofweek_accessor": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "xarray.tests.assert_array_equal",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_dayofyear_accessor": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "xarray.tests.assert_array_equal",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_field_accessors": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "getattr",
    "xarray.tests.assert_array_equal",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_radd": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "datetime.timedelta",
    "isinstance",
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_rsub": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "TypeError",
    "datetime.timedelta",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_shift": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "datetime.timedelta",
    "isinstance",
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_shift_invalid_freq": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "TypeError",
    "xarray.cftime_range",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_shift_invalid_n": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "TypeError",
    "xarray.cftime_range",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_sub": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "datetime.timedelta",
    "isinstance",
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_sub_cftimeindex": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "datetime.timedelta",
    "isinstance",
    "pandas.TimedeltaIndex",
    "range",
    "xarray.cftime_range",
    "xarray.tests.test_cftimeindex._CFTIME_CALENDARS",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_cftimeindex_sub_timedeltaindex": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "datetime.timedelta",
    "isinstance",
    "pandas.TimedeltaIndex",
    "range",
    "xarray.cftime_range",
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.tests.test_cftimeindex._CFTIME_CALENDARS",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_concat_cftimeindex": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Index",
    "xarray.DataArray",
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.concat",
    "xarray.tests.test_cftimeindex.da",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_constructor_with_name": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.tests.test_cftimeindex.index_with_name",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_contains": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_date_type_property": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_empty_cftimeindex": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_get_loc": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "KeyError",
    "raises_regex",
    "slice",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_get_slice_bound": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_get_slice_bound_decreasing_index": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.monotonic_decreasing_index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_get_slice_bound_length_one_index": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.length_one_index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_groupby": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_cftimeindex.da",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_indexing_in_dataframe_iloc": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "xarray.tests.test_cftimeindex.df",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_indexing_in_dataframe_loc": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "xarray.tests.test_cftimeindex.df",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest",
    "xarray.tests.test_cftimeindex.range_args",
    "xarray.tests.test_cftimeindex.scalar_args"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_indexing_in_series_getitem": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "pandas.Series",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest",
    "xarray.tests.test_cftimeindex.range_args",
    "xarray.tests.test_cftimeindex.scalar_args",
    "xarray.tests.test_cftimeindex.series"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_indexing_in_series_iloc": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "pandas.Series",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest",
    "xarray.tests.test_cftimeindex.series"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_indexing_in_series_loc": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "pandas.Series",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest",
    "xarray.tests.test_cftimeindex.range_args",
    "xarray.tests.test_cftimeindex.scalar_args",
    "xarray.tests.test_cftimeindex.series"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_isel": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_cftimeindex.da",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_multiindex": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_arrays",
    "slice",
    "xarray.cftime_range",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_parse_array_of_cftime_strings": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "cftime.DatetimeNoLeap",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "xarray.coding.cftimeindex._parse_array_of_cftime_strings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_parse_iso8601": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "xarray.coding.cftimeindex.parse_iso8601",
    "xarray.tests.test_cftimeindex.ISO8601_STRING_TESTS",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_parse_iso8601_with_reso": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "xarray.coding.cftimeindex._parse_iso8601_with_reso",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_parse_string_to_bounds_month_dec": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "xarray.coding.cftimeindex._parsed_string_to_bounds",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.dec_days",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_parse_string_to_bounds_month_feb": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "xarray.coding.cftimeindex._parsed_string_to_bounds",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.feb_days",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_parse_string_to_bounds_year": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "xarray.coding.cftimeindex._parsed_string_to_bounds",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.dec_days",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_parsed_string_to_bounds_raises": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "KeyError",
    "xarray.coding.cftimeindex._parsed_string_to_bounds",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_parsed_string_to_bounds_sub_monthly": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "xarray.coding.cftimeindex._parsed_string_to_bounds",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_resample_error": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "NotImplementedError",
    "xarray.tests.test_cftimeindex.da",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_sel_date_list_backfill": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "datetime.timedelta",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_cftimeindex.da",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_sel_date_list_nearest": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "datetime.timedelta",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_cftimeindex.da",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_sel_date_list_pad": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "datetime.timedelta",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_cftimeindex.da",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_sel_date_list_tolerance_raises": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "KeyError",
    "datetime.timedelta",
    "xarray.tests.test_cftimeindex.da",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_sel_date_scalar": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_cftimeindex.da",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_sel_date_scalar_backfill": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "datetime.timedelta",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_cftimeindex.da",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_sel_date_scalar_nearest": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "datetime.timedelta",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_cftimeindex.da",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_sel_date_scalar_pad": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "datetime.timedelta",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_cftimeindex.da",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_sel_date_scalar_tolerance_raises": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "KeyError",
    "datetime.timedelta",
    "xarray.tests.test_cftimeindex.da",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_sel_date_slice_or_list": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "slice",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_cftimeindex.da",
    "xarray.tests.test_cftimeindex.date_type",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_sel_string_or_list": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "list",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_cftimeindex.SEL_STRING_OR_LIST_TESTS",
    "xarray.tests.test_cftimeindex.da",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_string_slice_length_one_index": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "slice",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_cftimeindex.da",
    "xarray.tests.test_cftimeindex.length_one_index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_timedeltaindex_add_cftimeindex": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "datetime.timedelta",
    "isinstance",
    "pandas.TimedeltaIndex",
    "range",
    "xarray.cftime_range",
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.tests.test_cftimeindex._CFTIME_CALENDARS",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_to_datetimeindex": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "RuntimeWarning",
    "isinstance",
    "numpy.testing.assert_array_equal",
    "pandas.DatetimeIndex",
    "pandas.date_range",
    "xarray.cftime_range",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_to_datetimeindex_feb_29": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "ValueError",
    "xarray.cftime_range",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.test_to_datetimeindex_out_of_range": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "ValueError",
    "xarray.cftime_range",
    "xarray.tests.test_cftimeindex.index",
    "xarray.tests.test_cftimeindex.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_cftimeindex.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "xarray.tests.test_cftimeindex.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_coding": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "xarray.core.pycompat.suppress"
   ]
  },
  "type": "module"
 },
 "xarray.tests.test_coding.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.tests.test_coding.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_coding.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_coding.suppress": {
  "data": {
   "shadows": "xarray.core.pycompat.suppress"
  },
  "type": "import"
 },
 "xarray.tests.test_coding.test_CFMaskCoder_decode": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "xarray.Variable",
    "xarray.coding.variables.CFMaskCoder"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding.test_CFMaskCoder_decode_dask": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "assert_identical",
    "dask.array.Array",
    "isinstance",
    "numpy.nan",
    "xarray.Variable",
    "xarray.coding.variables.CFMaskCoder"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding.test_coder_roundtrip": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "xarray.Variable",
    "xarray.coding.variables.CFMaskCoder"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding.test_scaling_converts_to_float32": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "assert_identical",
    "dict",
    "numpy.arange",
    "numpy.float32",
    "xarray.Variable",
    "xarray.coding.variables.CFScaleOffsetCoder",
    "xarray.tests.test_coding.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding.variables": {
  "data": {
   "shadows": "xarray.coding.variables"
  },
  "type": "import"
 },
 "xarray.tests.test_coding.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_strings": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "xarray.core.pycompat.suppress"
   ]
  },
  "type": "module"
 },
 "xarray.tests.test_coding_strings.Variable": {
  "data": {
   "shadows": "xarray.Variable"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_strings.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_strings.bytes_type": {
  "data": {
   "shadows": "xarray.core.pycompat.bytes_type"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_strings.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_strings.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_strings.indexing": {
  "data": {
   "shadows": "xarray.core.indexing"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_strings.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_strings.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_strings.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_strings.strings": {
  "data": {
   "shadows": "xarray.coding.strings"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_strings.suppress": {
  "data": {
   "shadows": "xarray.core.pycompat.suppress"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_strings.test_CharacterArrayCoder_encode": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.array",
    "xarray.Variable",
    "xarray.coding.strings.CharacterArrayCoder",
    "xarray.coding.strings.create_vlen_dtype",
    "xarray.core.pycompat.bytes_type",
    "xarray.tests.test_coding_strings.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_strings.test_CharacterArrayCoder_roundtrip": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Variable",
    "xarray.coding.strings.CharacterArrayCoder",
    "xarray.tests.test_coding_strings.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_strings.test_EncodedStringCoder_decode": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.array",
    "object",
    "xarray.Variable",
    "xarray.coding.strings.EncodedStringCoder"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_strings.test_EncodedStringCoder_decode_dask": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "assert_identical",
    "dask.array.Array",
    "isinstance",
    "numpy.array",
    "object",
    "xarray.Variable",
    "xarray.coding.strings.EncodedStringCoder"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_strings.test_EncodedStringCoder_encode": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.array",
    "object",
    "xarray.Variable",
    "xarray.coding.strings.EncodedStringCoder",
    "xarray.coding.strings.create_vlen_dtype",
    "xarray.core.pycompat.unicode_type"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_strings.test_StackedBytesArray": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "IndexError",
    "IndexerMaker",
    "assert_array_equal",
    "len",
    "numpy.array",
    "xarray.coding.strings.StackedBytesArray",
    "xarray.core.indexing.BasicIndexer",
    "xarray.tests.test_coding_strings.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_strings.test_StackedBytesArray_scalar": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "IndexError",
    "IndexerMaker",
    "TypeError",
    "len",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "xarray.coding.strings.StackedBytesArray",
    "xarray.core.indexing.BasicIndexer",
    "xarray.tests.test_coding_strings.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_strings.test_StackedBytesArray_vectorized_indexing": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "IndexerMaker",
    "assert_array_equal",
    "numpy.array",
    "xarray.coding.strings.StackedBytesArray",
    "xarray.core.indexing.VectorizedIndexer"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_strings.test_bytes_to_char": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "xarray.coding.strings.bytes_to_char"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_strings.test_bytes_to_char_dask": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "assert_array_equal",
    "dask.array.Array",
    "dask.array.from_array",
    "isinstance",
    "numpy.array",
    "xarray.coding.strings.bytes_to_char"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_strings.test_char_to_bytes": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "xarray.coding.strings.char_to_bytes"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_strings.test_char_to_bytes_dask": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "ValueError",
    "assert_array_equal",
    "dask.array.Array",
    "dask.array.from_array",
    "isinstance",
    "numpy.array",
    "raises_regex",
    "xarray.coding.strings.char_to_bytes"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_strings.test_char_to_bytes_ndim_zero": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "xarray.coding.strings.char_to_bytes"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_strings.test_char_to_bytes_size_zero": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "numpy.zeros",
    "xarray.coding.strings.char_to_bytes"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_strings.test_vlen_dtype": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.dtype",
    "object",
    "xarray.coding.strings.check_vlen_dtype",
    "xarray.coding.strings.create_vlen_dtype",
    "xarray.coding.strings.is_bytes_dtype",
    "xarray.coding.strings.is_unicode_dtype",
    "xarray.core.pycompat.bytes_type",
    "xarray.core.pycompat.unicode_type"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_strings.unicode_type": {
  "data": {
   "shadows": "xarray.core.pycompat.unicode_type"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times": {
  "data": {
   "symbols_in_volume": [
    "itertools.product",
    "numpy.arange",
    "numpy.array",
    "numpy.int32",
    "sorted",
    "xarray.coding.times._STANDARD_CALENDARS",
    "xarray.tests.test_coding_times._CF_DATETIME_NUM_DATES_UNITS",
    "xarray.tests.test_coding_times._NON_STANDARD_CALENDARS_SET",
    "xarray.tests.test_coding_times._STANDARD_CALENDARS"
   ]
  },
  "type": "module"
 },
 "xarray.tests.test_coding_times.DataArray": {
  "data": {
   "shadows": "xarray.DataArray"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.DatetimeGregorian": {
  "data": {
   "shadows": "netcdftime.DatetimeGregorian"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.Variable": {
  "data": {
   "shadows": "xarray.Variable"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times._ALL_CALENDARS": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "xarray.tests.test_coding_times._CFTIME_DATETIME_UNITS_TESTS": {
  "data": {
   "lineno": 515
  },
  "type": "constant"
 },
 "xarray.tests.test_coding_times._CF_DATETIME_NUM_DATES_UNITS": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "xarray.tests.test_coding_times._CF_DATETIME_TESTS": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "xarray.tests.test_coding_times._NON_STANDARD_CALENDARS": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "xarray.tests.test_coding_times._NON_STANDARD_CALENDARS_SET": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "xarray.tests.test_coding_times._STANDARD_CALENDARS": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "xarray.tests.test_coding_times._all_cftime_date_types": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ImportError",
    "netcdftime.Datetime360Day",
    "netcdftime.DatetimeAllLeap",
    "netcdftime.DatetimeGregorian",
    "netcdftime.DatetimeJulian",
    "netcdftime.DatetimeNoLeap",
    "netcdftime.DatetimeProlepticGregorian"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times._import_cftime": {
  "data": {
   "shadows": "xarray.coding.times._import_cftime"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times._update_bounds_attributes": {
  "data": {
   "shadows": "xarray.conventions._update_bounds_attributes"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.calendar": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "xarray.tests.test_coding_times._ALL_CALENDARS",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.cftime": {
  "data": {
   "shadows": "netcdftime"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.cftime_to_nptime": {
  "data": {
   "shadows": "xarray.coding.times.cftime_to_nptime"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.coding": {
  "data": {
   "shadows": "xarray.coding"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.contains_cftime_datetimes": {
  "data": {
   "shadows": "xarray.core.common.contains_cftime_datetimes"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.data": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.random.rand",
    "xarray.DataArray",
    "xarray.tests.test_coding_times.pytest",
    "xarray.tests.test_coding_times.times"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.decode_cf": {
  "data": {
   "shadows": "xarray.decode_cf"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.decode_cf_datetime": {
  "data": {
   "shadows": "xarray.coding.times.decode_cf_datetime"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.encode_cf_datetime": {
  "data": {
   "shadows": "xarray.coding.times.encode_cf_datetime"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.test_cf_datetime": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "abs",
    "assert_array_equal",
    "hasattr",
    "netcdftime",
    "netcdftime.__name__",
    "netcdftime.num2date",
    "numpy.around",
    "numpy.atleast_1d",
    "numpy.nanargmax",
    "numpy.nanargmin",
    "numpy.ravel",
    "numpy.timedelta64",
    "pandas.Index",
    "xarray.coding.times._import_cftime",
    "xarray.coding.times.cftime_to_nptime",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.coding.times.encode_cf_datetime",
    "xarray.tests.test_coding_times._CF_DATETIME_TESTS",
    "xarray.tests.test_coding_times.pytest",
    "xarray.tests.test_coding_times.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_cf_datetime_nan": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.nan",
    "pandas.to_datetime",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.tests.test_coding_times.pytest",
    "xarray.tests.test_coding_times.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_cf_timedelta": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "numpy.int64",
    "numpy.nan",
    "numpy.timedelta64",
    "pandas.to_timedelta",
    "xarray.coding.times.decode_cf_timedelta",
    "xarray.coding.times.encode_cf_timedelta",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_cf_timedelta_2d": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.atleast_2d",
    "pandas.to_timedelta",
    "xarray.coding.times.decode_cf_timedelta"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_contains_cftime_datetimes_1d": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "xarray.core.common.contains_cftime_datetimes",
    "xarray.tests.test_coding_times.data",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_contains_cftime_datetimes_3d": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "xarray.core.common.contains_cftime_datetimes",
    "xarray.tests.test_coding_times.pytest",
    "xarray.tests.test_coding_times.times_3d"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_contains_cftime_datetimes_dask_1d": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "xarray.core.common.contains_cftime_datetimes",
    "xarray.tests.test_coding_times.data",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_contains_cftime_datetimes_dask_3d": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "xarray.core.common.contains_cftime_datetimes",
    "xarray.tests.test_coding_times.pytest",
    "xarray.tests.test_coding_times.times_3d"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_contains_cftime_datetimes_non_cftimes": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.core.common.contains_cftime_datetimes",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_contains_cftime_datetimes_non_cftimes_dask": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.core.common.contains_cftime_datetimes",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decode_360_day_calendar": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "assert_array_equal",
    "len",
    "netcdftime",
    "netcdftime.__name__",
    "netcdftime.num2date",
    "numpy.arange",
    "numpy.dtype",
    "xarray.coding.times._import_cftime",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.tests.test_coding_times.pytest",
    "xarray.tests.test_coding_times.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decode_cf": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dtype",
    "xarray.DataArray",
    "xarray.decode_cf",
    "xarray.tests.test_coding_times._ALL_CALENDARS",
    "xarray.tests.test_coding_times._STANDARD_CALENDARS",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decode_cf_datetime_non_iso_strings": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "abs",
    "numpy.arange",
    "numpy.timedelta64",
    "pandas.date_range",
    "xarray.coding.times.decode_cf_datetime"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decode_cf_datetime_non_standard_units": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.arange",
    "pandas.date_range",
    "xarray.coding.times.decode_cf_datetime"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decode_cf_datetime_overflow": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "ImportError",
    "enumerate",
    "netcdftime.DatetimeGregorian",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.tests.test_coding_times.datetime",
    "xarray.tests.test_coding_times.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decode_cf_time_bounds": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.dtype",
    "xarray.DataArray",
    "xarray.conventions._update_bounds_attributes",
    "xarray.decode_cf"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decode_dates_outside_timestamp_range": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "abs",
    "all",
    "datetime.datetime",
    "isinstance",
    "netcdftime",
    "netcdftime.__name__",
    "netcdftime.date2num",
    "netcdftime.num2date",
    "numpy.timedelta64",
    "range",
    "type",
    "xarray.coding.times._import_cftime",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.tests.test_coding_times._ALL_CALENDARS",
    "xarray.tests.test_coding_times.pytest",
    "xarray.tests.test_coding_times.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decode_multidim_time_outside_timestamp_range": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "abs",
    "datetime.datetime",
    "len",
    "netcdftime",
    "netcdftime.__name__",
    "netcdftime.date2num",
    "netcdftime.num2date",
    "numpy.dtype",
    "numpy.empty",
    "numpy.timedelta64",
    "range",
    "xarray.coding.times._import_cftime",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.tests.test_coding_times._ALL_CALENDARS",
    "xarray.tests.test_coding_times.pytest",
    "xarray.tests.test_coding_times.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decode_non_standard_calendar_inside_timestamp_range": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "abs",
    "netcdftime",
    "netcdftime.__name__",
    "netcdftime.date2num",
    "netcdftime.num2date",
    "numpy.dtype",
    "numpy.timedelta64",
    "pandas.date_range",
    "xarray.coding.times._import_cftime",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.tests.test_coding_times._NON_STANDARD_CALENDARS",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decode_non_standard_calendar_single_element": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "AttributeError",
    "netcdftime",
    "netcdftime.__name__",
    "netcdftime.date2num",
    "netcdftime.datetime",
    "netcdftime.netcdftime.datetime",
    "netcdftime.num2date",
    "numpy.asarray",
    "numpy.dtype",
    "xarray.coding.times._import_cftime",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decode_non_standard_calendar_single_element_inside_timestamp_range": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "numpy.dtype",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.tests.test_coding_times._NON_STANDARD_CALENDARS",
    "xarray.tests.test_coding_times.pytest",
    "xarray.tests.test_coding_times.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decode_nonstandard_calendar_multidim_time_inside_timestamp_range": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "abs",
    "len",
    "netcdftime",
    "netcdftime.__name__",
    "netcdftime.date2num",
    "netcdftime.num2date",
    "numpy.dtype",
    "numpy.empty",
    "numpy.timedelta64",
    "pandas.date_range",
    "xarray.coding.times._import_cftime",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.tests.test_coding_times._NON_STANDARD_CALENDARS",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decode_single_element_outside_timestamp_range": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "isinstance",
    "netcdftime",
    "netcdftime.__name__",
    "netcdftime.num2date",
    "type",
    "xarray.coding.times._import_cftime",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.tests.test_coding_times._NON_STANDARD_CALENDARS",
    "xarray.tests.test_coding_times.pytest",
    "xarray.tests.test_coding_times.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decode_standard_calendar_inside_timestamp_range": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "abs",
    "netcdftime",
    "netcdftime.date2num",
    "numpy.dtype",
    "numpy.timedelta64",
    "pandas.date_range",
    "xarray.coding.times._import_cftime",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.tests.test_coding_times._STANDARD_CALENDARS",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decode_standard_calendar_multidim_time_inside_timestamp_range": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "abs",
    "len",
    "netcdftime",
    "netcdftime.date2num",
    "numpy.dtype",
    "numpy.empty",
    "numpy.timedelta64",
    "pandas.date_range",
    "xarray.coding.times._import_cftime",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.tests.test_coding_times._STANDARD_CALENDARS",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decode_standard_calendar_single_element_inside_timestamp_range": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "numpy.dtype",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.tests.test_coding_times._STANDARD_CALENDARS",
    "xarray.tests.test_coding_times.pytest",
    "xarray.tests.test_coding_times.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_decoded_cf_datetime_array_2d": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "numpy.asarray",
    "pandas.date_range",
    "xarray.Variable",
    "xarray.coding.times.CFDatetimeCoder"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_encode_cf_datetime_overflow": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "pandas.date_range",
    "xarray.coding.times.decode_cf_datetime",
    "xarray.coding.times.encode_cf_datetime",
    "xarray.tests.test_coding_times.calendar",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_encode_cf_datetime_pandas_min": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "pandas.date_range",
    "xarray.coding.times.encode_cf_datetime",
    "xarray.tests.test_coding_times.calendar"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_encode_cf_datetime_units_with_tz": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "pandas.date_range",
    "xarray.coding.times.encode_cf_datetime",
    "xarray.tests.test_coding_times.calendar"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_format_cftime_datetime": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "date_type",
    "xarray.coding.times.format_cftime_datetime",
    "xarray.tests.test_coding_times._all_cftime_date_types",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_infer_cftime_datetime_units": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "date_type",
    "xarray.coding.times.infer_datetime_units",
    "xarray.tests.test_coding_times._CFTIME_DATETIME_UNITS_TESTS",
    "xarray.tests.test_coding_times._NON_STANDARD_CALENDARS",
    "xarray.tests.test_coding_times._all_cftime_date_types",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_infer_datetime_units": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "pandas.date_range",
    "pandas.to_datetime",
    "xarray.coding.times.infer_datetime_units",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.test_infer_timedelta_units": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.to_timedelta",
    "xarray.coding.times.infer_timedelta_units",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.times": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "netcdftime",
    "netcdftime.num2date",
    "numpy.arange",
    "xarray.coding.times._import_cftime",
    "xarray.tests.test_coding_times.calendar",
    "xarray.tests.test_coding_times.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.times_3d": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.random.choice",
    "xarray.DataArray",
    "xarray.tests.test_coding_times.pytest",
    "xarray.tests.test_coding_times.times"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.tests.test_combine": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_combine.DataArray": {
  "data": {
   "shadows": "xarray.DataArray"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.Dataset": {
  "data": {
   "shadows": "xarray.Dataset"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.OrderedDict": {
  "data": {
   "shadows": "xarray.core.pycompat.OrderedDict"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.TestAutoCombine": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_combine.TestAutoCombine.test_auto_combine": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "assert_identical",
    "combine",
    "raises_regex",
    "xarray.Dataset",
    "xarray.auto_combine",
    "xarray.core.combine._auto_combine_1d",
    "xarray.core.pycompat.OrderedDict",
    "xarray.tests.test_combine.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestAutoCombine.test_auto_combine_no_concat": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.auto_combine"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestAutoCombine.test_auto_combine_previously_failed": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "xarray.Dataset",
    "xarray.auto_combine"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestAutoCombine.test_auto_combine_still_fails": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "ValueError",
    "xarray.Dataset",
    "xarray.auto_combine",
    "xarray.tests.test_combine.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestAutoCombineND": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_combine.TestAutoCombineND.test_auto_combine_2d": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "assert_equal",
    "create_test_data",
    "ds",
    "xarray.auto_combine",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestAutoCombineND.test_combine_concat_over_redundant_nesting": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset",
    "xarray.auto_combine"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestAutoCombineND.test_internal_ordering": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset",
    "xarray.auto_combine"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestAutoCombineND.test_invalid_hypercube_input": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "ValueError",
    "create_test_data",
    "ds",
    "raises_regex",
    "xarray.auto_combine"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestAutoCombineND.test_merge_one_dim_concat_another": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset",
    "xarray.auto_combine"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestAutoCombineND.test_single_dataset": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset",
    "xarray.auto_combine"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestAutoCombineUsingCoords": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_combine.TestAutoCombineUsingCoords.test_infer_order_from_coords": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "assert_identical",
    "create_test_data",
    "slice",
    "xarray.auto_combine",
    "xarray.tests.test_combine.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestAutoCombineUsingCoords.test_order_inferred_from_coords": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "NotImplementedError",
    "create_test_data",
    "slice",
    "xarray.core.combine._auto_combine",
    "xarray.tests.test_combine.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestCheckShapeTileIDs": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_combine.TestCheckShapeTileIDs.test_check_depths": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "ValueError",
    "create_test_data",
    "ds",
    "raises_regex",
    "xarray.core.combine._check_shape_tile_ids"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestCheckShapeTileIDs.test_check_lengths": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "ValueError",
    "create_test_data",
    "ds",
    "raises_regex",
    "xarray.core.combine._check_shape_tile_ids"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestCombineND": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_combine.TestCombineND.test_concat_once": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "assert_combined_tile_ids_equal",
    "create_test_data",
    "ds",
    "xarray.concat",
    "xarray.core.combine._auto_combine_all_along_first_dim",
    "xarray.tests.test_combine.create_combined_ids",
    "xarray.tests.test_combine.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestCombineND.test_concat_only_first_dim": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "assert_combined_tile_ids_equal",
    "create_test_data",
    "ds",
    "enumerate",
    "xarray.concat",
    "xarray.core.combine._auto_combine_all_along_first_dim",
    "xarray.tests.test_combine.create_combined_ids"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestCombineND.test_concat_twice": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "assert_equal",
    "create_test_data",
    "ds",
    "xarray.concat",
    "xarray.core.combine._combine_nd",
    "xarray.tests.test_combine.create_combined_ids",
    "xarray.tests.test_combine.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestCombineND.test_get_new_tile_ids": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "sorted",
    "xarray.tests.test_combine._create_tile_ids",
    "xarray.tests.test_combine.create_combined_ids"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestCombineND.test_new_tile_id": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "create_test_data",
    "ds",
    "xarray.core.combine._new_tile_id",
    "xarray.tests.test_combine.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestConcatDataArray": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_combine.TestConcatDataArray.test_concat": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "ValueError",
    "assert_equal",
    "assert_identical",
    "numpy.array",
    "numpy.random.random",
    "pandas.Index",
    "raises_regex",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestConcatDataArray.test_concat_encoding": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "numpy.random.random",
    "xarray.Dataset",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestConcatDataArray.test_concat_lazy": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "InaccessibleArray",
    "dask.array.from_array",
    "numpy.zeros",
    "range",
    "xarray.DataArray",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestConcatDataset": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_combine.TestConcatDataset.test_concat": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "assert_array_equal",
    "assert_equal",
    "assert_identical",
    "create_test_data",
    "list",
    "numpy.arange",
    "numpy.array",
    "range",
    "rectify_dim_order",
    "slice",
    "xarray.concat",
    "xarray.core.pycompat.iteritems"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestConcatDataset.test_concat.rectify_dim_order": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "dict",
    "xarray.Dataset",
    "xarray.core.pycompat.iteritems"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestConcatDataset.test_concat_autoalign": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestConcatDataset.test_concat_constant_index": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "raises_regex",
    "xarray.Dataset",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestConcatDataset.test_concat_coords": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "numpy.random.randn",
    "raises_regex",
    "slice",
    "xarray.Dataset",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestConcatDataset.test_concat_data_vars": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.random.randn",
    "slice",
    "xarray.Dataset",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestConcatDataset.test_concat_dim_is_variable": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestConcatDataset.test_concat_do_not_promote": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "xarray.Dataset",
    "xarray.concat",
    "xarray.tests.test_combine.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestConcatDataset.test_concat_errors": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "copy.deepcopy",
    "create_test_data",
    "numpy.random.randn",
    "raises_regex",
    "slice",
    "xarray.Dataset",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestConcatDataset.test_concat_multiindex": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "isinstance",
    "pandas.MultiIndex",
    "pandas.MultiIndex.from_product",
    "slice",
    "xarray.Dataset",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestConcatDataset.test_concat_promote_shape": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestConcatDataset.test_concat_size0": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "assert_identical",
    "create_test_data",
    "slice",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestTileIDsFromNestedList": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_combine.TestTileIDsFromNestedList.test_1d": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "assert_combined_tile_ids_equal",
    "create_test_data",
    "dict",
    "ds",
    "input",
    "xarray.core.combine._infer_tile_ids_from_nested_list"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestTileIDsFromNestedList.test_2d": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "assert_combined_tile_ids_equal",
    "create_test_data",
    "dict",
    "ds",
    "input",
    "xarray.core.combine._infer_tile_ids_from_nested_list"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestTileIDsFromNestedList.test_3d": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "assert_combined_tile_ids_equal",
    "create_test_data",
    "dict",
    "ds",
    "input",
    "xarray.core.combine._infer_tile_ids_from_nested_list"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestTileIDsFromNestedList.test_ignore_empty_list": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "assert_combined_tile_ids_equal",
    "create_test_data",
    "dict",
    "ds",
    "input",
    "xarray.core.combine._infer_tile_ids_from_nested_list"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestTileIDsFromNestedList.test_infer_from_datasets": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "ValueError",
    "assert_combined_tile_ids_equal",
    "create_test_data",
    "ds",
    "input",
    "xarray.core.combine._infer_concat_order_from_positions",
    "xarray.tests.test_combine.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestTileIDsFromNestedList.test_redundant_nesting": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "assert_combined_tile_ids_equal",
    "create_test_data",
    "dict",
    "ds",
    "input",
    "xarray.core.combine._infer_tile_ids_from_nested_list"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestTileIDsFromNestedList.test_single_dataset": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "assert_combined_tile_ids_equal",
    "create_test_data",
    "dict",
    "ds",
    "input",
    "xarray.core.combine._infer_tile_ids_from_nested_list"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestTileIDsFromNestedList.test_uneven_depth_input": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "assert_combined_tile_ids_equal",
    "create_test_data",
    "dict",
    "ds",
    "input",
    "xarray.core.combine._infer_tile_ids_from_nested_list"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestTileIDsFromNestedList.test_uneven_length_input": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "assert_combined_tile_ids_equal",
    "create_test_data",
    "dict",
    "ds",
    "input",
    "xarray.core.combine._infer_tile_ids_from_nested_list"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.Variable": {
  "data": {
   "shadows": "xarray.Variable"
  },
  "type": "import"
 },
 "xarray.tests.test_combine._auto_combine": {
  "data": {
   "shadows": "xarray.core.combine._auto_combine"
  },
  "type": "import"
 },
 "xarray.tests.test_combine._auto_combine_1d": {
  "data": {
   "shadows": "xarray.core.combine._auto_combine_1d"
  },
  "type": "import"
 },
 "xarray.tests.test_combine._auto_combine_all_along_first_dim": {
  "data": {
   "shadows": "xarray.core.combine._auto_combine_all_along_first_dim"
  },
  "type": "import"
 },
 "xarray.tests.test_combine._check_shape_tile_ids": {
  "data": {
   "shadows": "xarray.core.combine._check_shape_tile_ids"
  },
  "type": "import"
 },
 "xarray.tests.test_combine._combine_nd": {
  "data": {
   "shadows": "xarray.core.combine._combine_nd"
  },
  "type": "import"
 },
 "xarray.tests.test_combine._create_combined_ids": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "create_test_data",
    "len",
    "range",
    "xarray.tests.test_combine._create_tile_ids",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine._create_tile_ids": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "itertools.product",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine._infer_concat_order_from_positions": {
  "data": {
   "shadows": "xarray.core.combine._infer_concat_order_from_positions"
  },
  "type": "import"
 },
 "xarray.tests.test_combine._infer_tile_ids_from_nested_list": {
  "data": {
   "shadows": "xarray.core.combine._infer_tile_ids_from_nested_list"
  },
  "type": "import"
 },
 "xarray.tests.test_combine._new_tile_id": {
  "data": {
   "shadows": "xarray.core.combine._new_tile_id"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.auto_combine": {
  "data": {
   "shadows": "xarray.auto_combine"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.concat": {
  "data": {
   "shadows": "xarray.concat"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.create_combined_ids": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "xarray.tests.test_combine.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_combine.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.iteritems": {
  "data": {
   "shadows": "xarray.core.pycompat.iteritems"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_computation": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_computation.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "xarray.tests.test_computation._UFuncSignature": {
  "data": {
   "shadows": "xarray.core.computation._UFuncSignature"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.add": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.operator"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.apply_ufunc": {
  "data": {
   "shadows": "xarray.core.computation.apply_ufunc"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.assert_identical": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "hasattr",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.broadcast_compat_data": {
  "data": {
   "shadows": "xarray.core.computation.broadcast_compat_data"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.collect_dict_values": {
  "data": {
   "shadows": "xarray.core.computation.collect_dict_values"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.identity": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "xarray.tests.test_computation.join_dict_keys": {
  "data": {
   "shadows": "xarray.core.computation.join_dict_keys"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.ordered_set_intersection": {
  "data": {
   "shadows": "xarray.core.computation.ordered_set_intersection"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.ordered_set_union": {
  "data": {
   "shadows": "xarray.core.computation.ordered_set_union"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.pandas_median": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.result_name": {
  "data": {
   "shadows": "xarray.core.computation.result_name"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.test_apply_1d_and_0d": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "numpy.array",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.tests.test_computation.add",
    "xarray.tests.test_computation.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "ValueError",
    "dask.array.Array",
    "dask.array.ones",
    "dask_safe_identity",
    "isinstance",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.assert_identical",
    "xarray.tests.test_computation.identity",
    "xarray.tests.test_computation.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask.dask_safe_identity": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.identity"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_multiple_inputs": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "dask.array.Array",
    "dask.array.from_array",
    "float",
    "isinstance",
    "numpy.random.RandomState",
    "xarray.DataArray",
    "xarray.core.computation.apply_ufunc",
    "xarray.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_multiple_inputs.covariance": {
  "data": {
   "lineno": 691
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_new_output_dimension": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "dask.array.Array",
    "dask.array.ones",
    "isinstance",
    "stack_negative",
    "xarray.DataArray",
    "xarray.tests.test_computation.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_new_output_dimension.stack_negative": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "xarray.core.computation.apply_ufunc"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_new_output_dimension.stack_negative.func": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "numpy.stack"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_parallelized_errors": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "dask.array.ones",
    "float",
    "raises_regex",
    "xarray.DataArray",
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.identity",
    "xarray.tests.test_computation.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_parallelized_one_arg": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "dask.array.Array",
    "dask.array.ones",
    "isinstance",
    "parallel_identity",
    "xarray.DataArray",
    "xarray.tests.test_computation.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_parallelized_one_arg.parallel_identity": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.identity"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_parallelized_two_args": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "check",
    "dask.array.ones",
    "numpy.int64",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_parallelized_two_args.check": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "dask.array.Array",
    "isinstance",
    "parallel_add",
    "xarray.tests.test_computation.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_parallelized_two_args.parallel_add": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "numpy.int64",
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.operator"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_exclude": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "ValueError",
    "concatenate",
    "len",
    "list",
    "numpy.array",
    "range",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.assert_identical",
    "xarray.tests.test_computation.identity",
    "xarray.tests.test_computation.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_exclude.concatenate": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.concatenate",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.core.computation.apply_ufunc"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_exclude.concatenate.func": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_groupby_add": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.tests.test_computation.add",
    "xarray.tests.test_computation.assert_identical",
    "xarray.tests.test_computation.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_identity": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "apply_identity",
    "numpy.arange",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.assert_identical",
    "xarray.tests.test_computation.functools",
    "xarray.tests.test_computation.identity"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_input_core_dimension": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "ValueError",
    "first_element",
    "multiply",
    "numpy.array",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.assert_identical",
    "xarray.tests.test_computation.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_input_core_dimension.first_element": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "xarray.core.computation.apply_ufunc"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_input_core_dimension.first_element.func": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_input_core_dimension.multiply": {
  "data": {
   "lineno": 277
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_output_core_dimension": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "numpy.array",
    "original_and_stack_negative",
    "stack_negative",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.tests.test_computation.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_output_core_dimension.original_and_stack_negative": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "isinstance",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.core.computation.apply_ufunc"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_output_core_dimension.original_and_stack_negative.func": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "numpy.stack"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_output_core_dimension.stack_negative": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "isinstance",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.core.computation.apply_ufunc"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_output_core_dimension.stack_negative.func": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "numpy.stack"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_two_inputs": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.zeros_like",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.tests.test_computation.add",
    "xarray.tests.test_computation.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_two_outputs": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "numpy.arange",
    "twice",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.tests.test_computation.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_two_outputs.twice": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "xarray.core.computation.apply_ufunc"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_two_outputs.twice.func": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_broadcast_compat_data_1d": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "xarray.Variable",
    "xarray.core.computation.broadcast_compat_data",
    "xarray.tests.test_computation.assert_identical",
    "xarray.tests.test_computation.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_broadcast_compat_data_2d": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "numpy.arange",
    "xarray.Variable",
    "xarray.core.computation.broadcast_compat_data",
    "xarray.tests.test_computation.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_collect_dict_values": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "xarray.core.computation.collect_dict_values"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_dataset_join": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.nan",
    "raises_regex",
    "xarray.Dataset",
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.add",
    "xarray.tests.test_computation.assert_identical",
    "xarray.tests.test_computation.operator"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_dataset_join.add": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.operator"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_dot": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "TypeError",
    "distutils.version.LooseVersion",
    "isinstance",
    "numpy.arange",
    "numpy.einsum",
    "numpy.linspace",
    "numpy.zeros",
    "type",
    "xarray.DataArray",
    "xarray.dot",
    "xarray.tests.test_computation.dask",
    "xarray.tests.test_computation.pickle",
    "xarray.tests.test_computation.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_join_dict_keys": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "collections.OrderedDict.fromkeys",
    "list",
    "xarray.core.computation.join_dict_keys",
    "xarray.tests.test_computation.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_keep_attrs": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_computation.add",
    "xarray.tests.test_computation.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_keep_attrs.add": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.operator"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_ordered_set_intersection": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "list",
    "xarray.core.computation.ordered_set_intersection"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_ordered_set_union": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "list",
    "xarray.core.computation.ordered_set_union"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_output_wrong_dim_size": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "ValueError",
    "apply_truncate_broadcast_invalid",
    "apply_truncate_x_x_invalid",
    "apply_truncate_x_x_valid",
    "apply_truncate_x_z",
    "numpy.arange",
    "raises_regex",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.tests.test_computation.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_output_wrong_dim_size.apply_truncate_broadcast_invalid": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "xarray.core.computation.apply_ufunc"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_output_wrong_dim_size.apply_truncate_x_x_invalid": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "xarray.core.computation.apply_ufunc"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_output_wrong_dim_size.apply_truncate_x_x_valid": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "xarray.core.computation.apply_ufunc"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_output_wrong_dim_size.apply_truncate_x_z": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "xarray.core.computation.apply_ufunc"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_output_wrong_dim_size.truncate": {
  "data": {
   "lineno": 806
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_output_wrong_dims": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "raises_regex",
    "xarray.Variable",
    "xarray.core.computation.apply_ufunc"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_output_wrong_dims.add_dim": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_output_wrong_dims.remove_dim": {
  "data": {
   "lineno": 787
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_output_wrong_number": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "raises_regex",
    "xarray.Variable",
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.identity"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_output_wrong_number.identity": {
  "data": {
   "lineno": 768
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_output_wrong_number.tuple3x": {
  "data": {
   "lineno": 771
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_result_name": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "Named",
    "xarray.core.computation.result_name"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_result_name.Named": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_computation.test_result_name.Named.__init__": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_signature_properties": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "frozenset",
    "str",
    "xarray.core.computation._UFuncSignature"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_unified_dim_sizes": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict",
    "xarray.Variable",
    "xarray.core.computation.unified_dim_sizes",
    "xarray.tests.test_computation.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_vectorize": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.assert_identical",
    "xarray.tests.test_computation.pandas_median"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_vectorize_dask": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "float",
    "xarray.DataArray",
    "xarray.core.computation.apply_ufunc",
    "xarray.tests.test_computation.assert_identical",
    "xarray.tests.test_computation.pandas_median"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_where": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.test_computation.assert_identical",
    "xarray.where"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_computation.unified_dim_sizes": {
  "data": {
   "shadows": "xarray.core.computation.unified_dim_sizes"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_conventions.CFEncodedInMemoryStore": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "xarray.backends.common.WritableCFDataStore",
    "xarray.backends.memory.InMemoryDataStore"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_conventions.CFEncodedInMemoryStore.encode_variable": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "xarray.coding.strings.EncodedStringCoder"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.Dataset": {
  "data": {
   "shadows": "xarray.Dataset"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.InMemoryDataStore": {
  "data": {
   "shadows": "xarray.backends.memory.InMemoryDataStore"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.SerializationWarning": {
  "data": {
   "shadows": "xarray.SerializationWarning"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.TestBoolTypeArray": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_conventions.TestBoolTypeArray.test_booltype_array": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "numpy.bool",
    "xarray.conventions.BoolTypeArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestCFEncodedDataStore": {
  "data": {
   "lineno": 257
  },
  "type": "class"
 },
 "xarray.tests.test_conventions.TestCFEncodedDataStore.create_store": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "xarray.tests.test_conventions.CFEncodedInMemoryStore",
    "xarray.tests.test_conventions.contextlib"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestCFEncodedDataStore.roundtrip": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "xarray.open_dataset",
    "xarray.tests.test_conventions.CFEncodedInMemoryStore",
    "xarray.tests.test_conventions.contextlib"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestCFEncodedDataStore.test_encoding_kwarg": {
  "data": {
   "lineno": 279
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestCFEncodedDataStore.test_encoding_kwarg_fixed_width_string": {
  "data": {
   "lineno": 284
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestCFEncodedDataStore.test_invalid_dataarray_names_raise": {
  "data": {
   "lineno": 275
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestCFEncodedDataStore.test_roundtrip_coordinates": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "xarray.tests.test_conventions.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestDecodeCF": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_conventions.TestDecodeCF.test_0d_int32_encoding": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "numpy.int32",
    "numpy.int64",
    "xarray.Variable",
    "xarray.conventions.maybe_encode_nonstring_dtype",
    "xarray.testing.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestDecodeCF.test_dataset": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.date_range",
    "xarray.Dataset",
    "xarray.conventions.decode_cf",
    "xarray.testing.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestDecodeCF.test_dataset_repr_with_netcdf4_datetimes": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "repr",
    "xarray.Dataset",
    "xarray.conventions.decode_cf",
    "xarray.tests.test_conventions.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestDecodeCF.test_decode_cf_datetime_transition_to_invalid": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "assert_array_equal",
    "datetime.datetime",
    "dict",
    "xarray.Dataset",
    "xarray.conventions.decode_cf",
    "xarray.tests.test_conventions.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestDecodeCF.test_decode_cf_with_dask": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "all",
    "dask.array.Array",
    "isinstance",
    "print",
    "xarray.Dataset",
    "xarray.conventions.decode_cf",
    "xarray.testing.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestDecodeCF.test_decode_cf_with_drop_variables": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.date_range",
    "xarray.Dataset",
    "xarray.conventions.decode_cf",
    "xarray.testing.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestDecodeCF.test_decode_cf_with_multiple_missing_values": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "str",
    "xarray.Variable",
    "xarray.conventions.decode_cf_variable",
    "xarray.testing.assert_identical",
    "xarray.tests.test_conventions.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestDecodeCF.test_decode_coordinates": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "xarray.Dataset",
    "xarray.conventions.decode_cf"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestDecodeCF.test_invalid_coordinates": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "xarray.Dataset",
    "xarray.conventions.decode_cf",
    "xarray.testing.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestDecodeCF.test_invalid_time_units_raises_eagerly": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.Dataset",
    "xarray.conventions.decode_cf"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestEncodeCFVariable": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_conventions.TestEncodeCFVariable.test_incompatible_attributes": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError",
    "pandas.date_range",
    "pandas.to_timedelta",
    "xarray.Variable",
    "xarray.conventions.encode_cf_variable",
    "xarray.tests.test_conventions.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestEncodeCFVariable.test_missing_fillvalue": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "Warning",
    "numpy.array",
    "numpy.nan",
    "xarray.Variable",
    "xarray.conventions.encode_cf_variable",
    "xarray.tests.test_conventions.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestEncodeCFVariable.test_multidimensional_coordinates": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.zeros",
    "set",
    "xarray.Dataset",
    "xarray.conventions.decode_cf",
    "xarray.conventions.encode_dataset_coordinates"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestEncodeCFVariable.test_string_object_warning": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "xarray.SerializationWarning",
    "xarray.Variable",
    "xarray.conventions.encode_cf_variable",
    "xarray.testing.assert_identical",
    "xarray.tests.test_conventions.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestNativeEndiannessArray": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_conventions.TestNativeEndiannessArray.test": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.arange",
    "xarray.conventions.NativeEndiannessArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.Variable": {
  "data": {
   "shadows": "xarray.Variable"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.WritableCFDataStore": {
  "data": {
   "shadows": "xarray.backends.common.WritableCFDataStore"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.assert_identical": {
  "data": {
   "shadows": "xarray.testing.assert_identical"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.coding": {
  "data": {
   "shadows": "xarray.coding"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.conventions": {
  "data": {
   "shadows": "xarray.conventions"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.decode_cf": {
  "data": {
   "shadows": "xarray.conventions.decode_cf"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.open_dataset": {
  "data": {
   "shadows": "xarray.open_dataset"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.test_decode_cf_with_conflicting_fill_missing_value": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.nan",
    "str",
    "xarray.Variable",
    "xarray.conventions.decode_cf_variable",
    "xarray.testing.assert_identical",
    "xarray.tests.test_conventions.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_dataarray.ALL_DIMS": {
  "data": {
   "shadows": "xarray.core.common.ALL_DIMS"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.AuxCoord": {
  "data": {
   "shadows": "iris.coords.AuxCoord"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.CFDatetimeCoder": {
  "data": {
   "shadows": "xarray.coding.times.CFDatetimeCoder"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.Cube": {
  "data": {
   "shadows": "iris.cube.Cube"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.DataArray": {
  "data": {
   "shadows": "xarray.DataArray"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.Dataset": {
  "data": {
   "shadows": "xarray.Dataset"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.DimCoord": {
  "data": {
   "shadows": "iris.coords.DimCoord"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.IndexVariable": {
  "data": {
   "shadows": "xarray.IndexVariable"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.LooseVersion": {
  "data": {
   "shadows": "xarray.tests.LooseVersion"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.OrderedDict": {
  "data": {
   "shadows": "xarray.core.pycompat.OrderedDict"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.ReturnItem": {
  "data": {
   "shadows": "xarray.tests.ReturnItem"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.TestDataArray": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_dataarray.TestDataArray.make_groupby_example_array": {
  "data": {
   "lineno": 1984,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.coords",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.make_groupby_multidim_example_array": {
  "data": {
   "lineno": 2205,
   "symbols_in_volume": [
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.setup": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.random.random",
    "pandas.MultiIndex.from_product",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test__title_for_slice": {
  "data": {
   "lineno": 3095,
   "symbols_in_volume": [
    "numpy.ones",
    "range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test__title_for_slice_truncate": {
  "data": {
   "lineno": 3106,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_align": {
  "data": {
   "lineno": 2555,
   "symbols_in_volume": [
    "list",
    "numpy.random.random",
    "xarray.DataArray",
    "xarray.align",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_align_copy": {
  "data": {
   "lineno": 2571,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.align",
    "xarray.tests.assert_identical",
    "xarray.tests.source_ndarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_align_dtype": {
  "data": {
   "lineno": 2562,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.random.random",
    "xarray.DataArray",
    "xarray.align"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_align_exclude": {
  "data": {
   "lineno": 2598,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.align",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_align_indexes": {
  "data": {
   "lineno": 2616,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.align",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_align_mixed_indexes": {
  "data": {
   "lineno": 2638,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.align",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_align_without_indexes_errors": {
  "data": {
   "lineno": 2650,
   "symbols_in_volume": [
    "ValueError",
    "xarray.DataArray",
    "xarray.align",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_align_without_indexes_exclude": {
  "data": {
   "lineno": 2631,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.align",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_array_interface": {
  "data": {
   "lineno": 1483,
   "symbols_in_volume": [
    "copy.deepcopy",
    "float",
    "numpy.asarray",
    "numpy.maximum",
    "numpy.sin",
    "numpy.zeros",
    "xarray.Variable",
    "xarray.tests.assert_array_equal",
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_assign_attrs": {
  "data": {
   "lineno": 1924,
   "symbols_in_volume": [
    "dict",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_assign_coords": {
  "data": {
   "lineno": 1192,
   "symbols_in_volume": [
    "ValueError",
    "dask.array",
    "dask.array.coords",
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_attr_sources_multiindex": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "isinstance",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_binary_op_join_setting": {
  "data": {
   "lineno": 3254,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.align",
    "xarray.set_options",
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_broadcast_arrays": {
  "data": {
   "lineno": 2659,
   "symbols_in_volume": [
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.broadcast",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_broadcast_arrays_exclude": {
  "data": {
   "lineno": 2708,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.broadcast",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_broadcast_arrays_misaligned": {
  "data": {
   "lineno": 2677,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.broadcast",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_broadcast_arrays_nocopy": {
  "data": {
   "lineno": 2690,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.broadcast",
    "xarray.tests.assert_identical",
    "xarray.tests.source_ndarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_broadcast_coordinates": {
  "data": {
   "lineno": 2724,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.meshgrid",
    "numpy.ones",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.broadcast",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_broadcast_equals": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_chunk": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "dask.array.Array",
    "isinstance",
    "numpy.ones",
    "xarray.DataArray",
    "xarray.tests.requires_dask"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_combine_first": {
  "data": {
   "lineno": 3268,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_constructor": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "numpy.random.random",
    "pandas.Index",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_constructor_dask_coords": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "dask.array.arange",
    "dask.array.random.random",
    "numpy.arange",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.requires_dask"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_constructor_from_0d": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_constructor_from_self_described": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "hasattr",
    "pandas",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Panel",
    "pandas.Series",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.IndexVariable",
    "xarray.tests.assert_equal",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_constructor_invalid": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.random.rand",
    "numpy.random.randn",
    "range",
    "xarray.DataArray",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_contains": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_coord_coords": {
  "data": {
   "lineno": 1119,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_coordinate_diff": {
  "data": {
   "lineno": 3123,
   "symbols_in_volume": [
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_coords": {
  "data": {
   "lineno": 1058,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "dask.array",
    "dask.array.coords",
    "dask.array.values",
    "len",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.random.randn",
    "repr",
    "textwrap.dedent",
    "xarray.DataArray",
    "xarray.IndexVariable",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_coords_alignment": {
  "data": {
   "lineno": 1214,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_coords_non_string": {
  "data": {
   "lineno": 1233,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_coords_replacement_alignment": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_coords_to_index": {
  "data": {
   "lineno": 1096,
   "symbols_in_volume": [
    "ValueError",
    "dask.array",
    "dask.array.coords.to_index",
    "list",
    "numpy.zeros",
    "pandas.Index",
    "pandas.MultiIndex.from_product",
    "xarray.DataArray",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_copy_with_data": {
  "data": {
   "lineno": 3172,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.random",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_cumops": {
  "data": {
   "lineno": 1813,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_da_resample_func_args": {
  "data": {
   "lineno": 2299,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.resample",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_da_resample_func_args.func": {
  "data": {
   "lineno": 2301
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_data_property": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.zeros",
    "xarray.DataArray",
    "xarray.tests.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_dataarray_diff_n1": {
  "data": {
   "lineno": 3117,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.diff",
    "dask.array.values",
    "numpy.diff",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_dataset_getitem": {
  "data": {
   "lineno": 1479,
   "symbols_in_volume": [
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_dataset_math": {
  "data": {
   "lineno": 1640,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ones",
    "range",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_dims": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "AttributeError",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_dot": {
  "data": {
   "lineno": 3217,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "dask.array",
    "dask.array.dot",
    "numpy.arange",
    "numpy.linspace",
    "numpy.tensordot",
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_drop_coordinates": {
  "data": {
   "lineno": 1758,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_drop_index_labels": {
  "data": {
   "lineno": 1775,
   "symbols_in_volume": [
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_dropna": {
  "data": {
   "lineno": 1782,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_empty_dataarrays_return_empty_result": {
  "data": {
   "lineno": 1534,
   "symbols_in_volume": [
    "len",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_encoding": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_equals_and_identical": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_equals_failures": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "numpy.arange",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_expand_dims": {
  "data": {
   "lineno": 1337,
   "symbols_in_volume": [
    "numpy.expand_dims",
    "numpy.linspace",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_expand_dims_error": {
  "data": {
   "lineno": 1307,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "numpy.linspace",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.raises_regex",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_expand_dims_with_scalar_coordinate": {
  "data": {
   "lineno": 1387,
   "symbols_in_volume": [
    "numpy.expand_dims",
    "numpy.linspace",
    "numpy.ones",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_fillna": {
  "data": {
   "lineno": 1938,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.nan",
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_full_like": {
  "data": {
   "lineno": 3198,
   "symbols_in_volume": [
    "bool",
    "dask.array",
    "dask.array.copy",
    "numpy.random.random",
    "xarray.DataArray",
    "xarray.core.common.full_like",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_get_index": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "KeyError",
    "numpy.zeros",
    "pandas.Index",
    "xarray.DataArray",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_get_index_size_zero": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.int64",
    "numpy.zeros",
    "pandas.Index",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_getitem": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "xarray.tests.ReturnItem",
    "xarray.tests.assert_array_equal",
    "xarray.tests.assert_equal",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_getitem_coords": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_getitem_dataarray": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.values",
    "numpy.arange",
    "xarray.DataArray",
    "xarray.tests.assert_array_equal",
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_getitem_dict": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "slice",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_apply_center": {
  "data": {
   "lineno": 2085,
   "symbols_in_volume": [
    "center",
    "numpy.hstack",
    "xarray.tests.assert_allclose"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_apply_center.center": {
  "data": {
   "lineno": 2086,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_apply_changes_metadata": {
  "data": {
   "lineno": 2107,
   "symbols_in_volume": [
    "change_metadata",
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_apply_changes_metadata.change_metadata": {
  "data": {
   "lineno": 2108
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_apply_identity": {
  "data": {
   "lineno": 1998,
   "symbols_in_volume": [
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_apply_identity.identity": {
  "data": {
   "lineno": 2002
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_apply_ndarray": {
  "data": {
   "lineno": 2100,
   "symbols_in_volume": [
    "numpy.asarray",
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_bins": {
  "data": {
   "lineno": 2228,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.cut",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_bins_empty": {
  "data": {
   "lineno": 2245,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.nan",
    "pandas.cut",
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_bins_multidim": {
  "data": {
   "lineno": 2258,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.cut",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_bins_sort": {
  "data": {
   "lineno": 2273,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.linspace",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_count": {
  "data": {
   "lineno": 2061,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_first_and_last": {
  "data": {
   "lineno": 2184,
   "symbols_in_volume": [
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_iter": {
  "data": {
   "lineno": 1976,
   "symbols_in_volume": [
    "xarray.tests.assert_identical",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_math": {
  "data": {
   "lineno": 2120,
   "symbols_in_volume": [
    "TypeError",
    "numpy.arange",
    "range",
    "xarray.DataArray",
    "xarray.core.common.ALL_DIMS",
    "xarray.tests.assert_allclose",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_math_not_aligned": {
  "data": {
   "lineno": 2153,
   "symbols_in_volume": [
    "numpy.nan",
    "range",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_multidim": {
  "data": {
   "lineno": 2211,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.core.common.ALL_DIMS",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_multidim_apply": {
  "data": {
   "lineno": 2220,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_properties": {
  "data": {
   "lineno": 1990,
   "symbols_in_volume": [
    "len",
    "range",
    "xarray.tests.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_reduce_attrs": {
  "data": {
   "lineno": 2070,
   "symbols_in_volume": [
    "numpy.mean",
    "print",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_restore_dim_order": {
  "data": {
   "lineno": 2173,
   "symbols_in_volume": [
    "numpy.random.randn",
    "range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_sum": {
  "data": {
   "lineno": 2012,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.sum",
    "slice",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.core.common.ALL_DIMS",
    "xarray.tests.assert_allclose"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_sum_default": {
  "data": {
   "lineno": 2046,
   "symbols_in_volume": [
    "numpy.array",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.__version__",
    "xarray.tests.LooseVersion",
    "xarray.tests.assert_allclose",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_warning": {
  "data": {
   "lineno": 2040,
   "symbols_in_volume": [
    "FutureWarning",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_index_math": {
  "data": {
   "lineno": 1626,
   "symbols_in_volume": [
    "numpy.arange",
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_indexes": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.zeros",
    "pandas.Index",
    "xarray.DataArray",
    "xarray.core.pycompat.OrderedDict"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_inplace_math_automatic_alignment": {
  "data": {
   "lineno": 1551,
   "symbols_in_volume": [
    "range",
    "xarray.DataArray",
    "xarray.MergeError",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_inplace_math_basics": {
  "data": {
   "lineno": 1540,
   "symbols_in_volume": [
    "xarray.tests.assert_array_equal",
    "xarray.tests.source_ndarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_is_null": {
  "data": {
   "lineno": 1497,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "numpy.random.RandomState",
    "pandas.isnull",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_isel": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "slice",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_isel_drop": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_isel_fancy": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "dask.array",
    "dask.array.isel",
    "dask.array.isel_points",
    "dask.array.values",
    "dask.array.variable",
    "len",
    "list",
    "numpy.arange",
    "numpy.random.random",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.assert_array_equal",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_isel_points": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dask.array",
    "dask.array.isel_points",
    "dask.array.values",
    "len",
    "list",
    "numpy.arange",
    "numpy.random.random",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "slice",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_isel_types": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.isel",
    "numpy.array",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_loc": {
  "data": {
   "lineno": 913,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.loc",
    "list",
    "numpy.arange",
    "numpy.array",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_loc_assign": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.loc",
    "dask.array.values",
    "list",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.zeros",
    "slice",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_loc_assign_dataarray": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "IndexError",
    "dask.array",
    "dask.array.loc",
    "dask.array.values",
    "dict",
    "get_data",
    "numpy.allclose",
    "numpy.arange",
    "numpy.random.randn",
    "numpy.zeros",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_loc_assign_dataarray.get_data": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ones",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_loc_single_boolean": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_math": {
  "data": {
   "lineno": 1506,
   "symbols_in_volume": [
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_math_automatic_alignment": {
  "data": {
   "lineno": 1522,
   "symbols_in_volume": [
    "numpy.ones",
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_math_name": {
  "data": {
   "lineno": 1559
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_math_with_coords": {
  "data": {
   "lineno": 1574,
   "symbols_in_volume": [
    "dict",
    "numpy.random.randn",
    "numpy.zeros",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_name": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.IndexVariable",
    "xarray.tests.assert_equal",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_non_overlapping_dataarrays_return_empty_result": {
  "data": {
   "lineno": 1528,
   "symbols_in_volume": [
    "len",
    "range",
    "slice",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_pickle": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "numpy.random.random",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pickle"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_properties": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "getattr",
    "isinstance",
    "len",
    "pandas.Index",
    "set",
    "xarray.core.pycompat.iteritems",
    "xarray.tests.assert_array_equal",
    "xarray.tests.assert_equal",
    "xarray.tests.raises_regex",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_quantile": {
  "data": {
   "lineno": 1904,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nanpercentile",
    "numpy.testing.assert_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_rank": {
  "data": {
   "lineno": 3327,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.requires_bottleneck"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_real_and_imag": {
  "data": {
   "lineno": 3184,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reduce": {
  "data": {
   "lineno": 1844,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.mean",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reduce_dtype": {
  "data": {
   "lineno": 1885,
   "symbols_in_volume": [
    "float",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reduce_keep_attrs": {
  "data": {
   "lineno": 1913,
   "symbols_in_volume": [
    "len",
    "xarray.core.pycompat.OrderedDict"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reduce_out": {
  "data": {
   "lineno": 1894,
   "symbols_in_volume": [
    "TypeError",
    "numpy.ones",
    "xarray.DataArray",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reindex_like": {
  "data": {
   "lineno": 1239,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reindex_like_no_index": {
  "data": {
   "lineno": 1250,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reindex_method": {
  "data": {
   "lineno": 1274,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reindex_regressions": {
  "data": {
   "lineno": 1259,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.complex",
    "numpy.random.randn",
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_rename": {
  "data": {
   "lineno": 1286,
   "symbols_in_volume": [
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reorder_levels": {
  "data": {
   "lineno": 1459,
   "symbols_in_volume": [
    "FutureWarning",
    "KeyError",
    "ValueError",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_repr": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int64",
    "repr",
    "textwrap.dedent",
    "xarray.DataArray",
    "xarray.Variable",
    "xarray.core.pycompat.OrderedDict"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_repr_multiindex": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "repr",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_resample": {
  "data": {
   "lineno": 2280,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.mean",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_resample_bad_resample_dim": {
  "data": {
   "lineno": 2353,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_resample_cftimeindex": {
  "data": {
   "lineno": 2310,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.arange",
    "xarray.DataArray",
    "xarray.coding.times._import_cftime",
    "xarray.tests.raises_regex",
    "xarray.tests.requires_cftime"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_resample_drop_nondim_coords": {
  "data": {
   "lineno": 2359,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.arange",
    "numpy.meshgrid",
    "numpy.tile",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.requires_scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_resample_first": {
  "data": {
   "lineno": 2320,
   "symbols_in_volume": [
    "float",
    "numpy.arange",
    "numpy.nan",
    "pandas.date_range",
    "pandas.to_datetime",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_resample_keep_attrs": {
  "data": {
   "lineno": 2392,
   "symbols_in_volume": [
    "numpy.ones",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_resample_skipna": {
  "data": {
   "lineno": 2402,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.ones",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reset_coords": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "numpy.zeros",
    "range",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reset_index": {
  "data": {
   "lineno": 1427,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_roll_coords": {
  "data": {
   "lineno": 3151,
   "symbols_in_volume": [
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_roll_coords_none": {
  "data": {
   "lineno": 3163,
   "symbols_in_volume": [
    "FutureWarning",
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_roll_no_coords": {
  "data": {
   "lineno": 3157,
   "symbols_in_volume": [
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_sel": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.sel",
    "list",
    "numpy.array",
    "slice",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_sel_dataarray": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.isel",
    "dask.array.sel",
    "list",
    "numpy.array",
    "xarray.DataArray",
    "xarray.tests.assert_array_equal",
    "xarray.tests.assert_equal",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_sel_dataarray_datetime": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.date_range",
    "slice",
    "xarray.DataArray",
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_sel_drop": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_sel_invalid_slice": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "slice",
    "xarray.DataArray",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_sel_method": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_sel_no_index": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "numpy.arange",
    "slice",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_selection_multiindex": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "IndexError",
    "pandas.MultiIndex.from_product",
    "range",
    "slice",
    "test_sel",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_selection_multiindex.test_sel": {
  "data": {
   "lineno": 995,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.dims",
    "dask.array.equals",
    "dask.array.rename",
    "dask.array.variable",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_selection_multiindex_remove_unused": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": [
    "KeyError",
    "numpy.arange",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_series_categorical_index": {
  "data": {
   "lineno": 2828,
   "symbols_in_volume": [
    "hasattr",
    "list",
    "numpy.arange",
    "pandas",
    "pandas.CategoricalIndex",
    "pandas.Series",
    "repr",
    "xarray.DataArray",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_set_index": {
  "data": {
   "lineno": 1401,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.rand",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_setattr_raises": {
  "data": {
   "lineno": 3189,
   "symbols_in_volume": [
    "AttributeError",
    "xarray.DataArray",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_setitem": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "numpy.arange",
    "slice",
    "xarray.DataArray",
    "xarray.tests.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_setitem_dataarray": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "IndexError",
    "dask.array",
    "dask.array.values",
    "dict",
    "get_data",
    "numpy.allclose",
    "numpy.arange",
    "numpy.random.randn",
    "numpy.zeros",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_setitem_dataarray.get_data": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ones",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_setitem_fancy": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "dask.array",
    "dict",
    "numpy.ones",
    "xarray.DataArray",
    "xarray.Variable",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_shift": {
  "data": {
   "lineno": 3132,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.core.dtypes.NA",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_sizes": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "TypeError",
    "numpy.zeros",
    "tuple",
    "xarray.DataArray",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_sortby": {
  "data": {
   "lineno": 3288,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.sortby",
    "xarray.DataArray",
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_squeeze": {
  "data": {
   "lineno": 1730,
   "symbols_in_volume": [
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_squeeze_drop": {
  "data": {
   "lineno": 1733,
   "symbols_in_volume": [
    "ValueError",
    "xarray.DataArray",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_stack_nonunique_consistency": {
  "data": {
   "lineno": 1719,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_stack_unstack": {
  "data": {
   "lineno": 1682,
   "symbols_in_volume": [
    "numpy.random.rand",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_stack_unstack_decreasing_coordinate": {
  "data": {
   "lineno": 1701,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.rand",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_struct_array_dims": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_swap_dims": {
  "data": {
   "lineno": 1301,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_and_from_cdms2_classic": {
  "data": {
   "lineno": 2959,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.date_range",
    "str",
    "tuple",
    "xarray.DataArray",
    "xarray.DataArray.from_cdms2",
    "xarray.IndexVariable",
    "xarray.convert.from_cdms2",
    "xarray.tests.assert_array_equal",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_and_from_cdms2_sgrid": {
  "data": {
   "lineno": 2993,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.mgrid",
    "set",
    "tuple",
    "xarray.DataArray",
    "xarray.convert.from_cdms2",
    "xarray.core.pycompat.OrderedDict",
    "xarray.tests.assert_array_equal",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_and_from_cdms2_ugrid": {
  "data": {
   "lineno": 3021,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.uniform",
    "set",
    "tuple",
    "xarray.DataArray",
    "xarray.convert.from_cdms2",
    "xarray.tests.assert_array_equal",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_and_from_dict": {
  "data": {
   "lineno": 2837,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.DataArray.from_dict",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_and_from_dict_with_nan_nat": {
  "data": {
   "lineno": 2889,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.to_dict",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.DataArray.from_dict",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_and_from_dict_with_time_dim": {
  "data": {
   "lineno": 2881,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.to_dict",
    "numpy.random.randn",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.DataArray.from_dict",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_and_from_series": {
  "data": {
   "lineno": 2811,
   "symbols_in_volume": [
    "xarray.DataArray.from_series",
    "xarray.tests.assert_array_equal",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_dataframe": {
  "data": {
   "lineno": 2774,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.assert_array_equal",
    "xarray.tests.raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_dataset_retains_keys": {
  "data": {
   "lineno": 3081,
   "symbols_in_volume": [
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.test_dataarray.datetime"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_dataset_split": {
  "data": {
   "lineno": 3062,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.core.pycompat.OrderedDict",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_dataset_whole": {
  "data": {
   "lineno": 3043,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_dict_with_numpy_attrs": {
  "data": {
   "lineno": 2899,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.to_dict",
    "list",
    "numpy.array",
    "numpy.asscalar",
    "numpy.float64",
    "numpy.random.randn",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_masked_array": {
  "data": {
   "lineno": 2917,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.to_masked_array",
    "dask.array.values",
    "isinstance",
    "len",
    "numpy.ma.MaskedArray",
    "numpy.ma.masked_where",
    "numpy.nan",
    "numpy.random.RandomState",
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_array_equal",
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_pandas": {
  "data": {
   "lineno": 2736,
   "symbols_in_volume": [
    "ValueError",
    "dask.array",
    "dask.array.to_pandas",
    "hasattr",
    "len",
    "list",
    "numpy.array",
    "numpy.random.randn",
    "pandas",
    "pandas.Index",
    "xarray.DataArray",
    "xarray.tests.assert_array_equal",
    "xarray.tests.assert_identical",
    "xarray.tests.raises_regex",
    "xarray.tests.test_dataarray.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_pandas_name_matches_coordinate": {
  "data": {
   "lineno": 2798,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_transpose": {
  "data": {
   "lineno": 1726,
   "symbols_in_volume": [
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_unstack_pandas_consistency": {
  "data": {
   "lineno": 1710,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_upsample": {
  "data": {
   "lineno": 2411,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_upsample_interpolate": {
  "data": {
   "lineno": 2496,
   "symbols_in_volume": [
    "f",
    "len",
    "numpy.arange",
    "numpy.linspace",
    "numpy.tile",
    "pandas.date_range",
    "scipy.interpolate.interp1d",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.requires_scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_upsample_interpolate_dask": {
  "data": {
   "lineno": 2536,
   "symbols_in_volume": [
    "TypeError",
    "dask.array.from_array",
    "numpy.arange",
    "numpy.tile",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.raises_regex",
    "xarray.tests.requires_dask",
    "xarray.tests.requires_scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_upsample_interpolate_regression_1605": {
  "data": {
   "lineno": 2527,
   "symbols_in_volume": [
    "len",
    "numpy.random.random",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.requires_scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_upsample_nd": {
  "data": {
   "lineno": 2444,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.arange",
    "numpy.flipud",
    "numpy.nan",
    "numpy.repeat",
    "numpy.tile",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_virtual_default_coords": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": [
    "numpy.zeros",
    "range",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_virtual_time_components": {
  "data": {
   "lineno": 1051,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.coords",
    "dask.array.values",
    "numpy.arange",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_where": {
  "data": {
   "lineno": 1801,
   "symbols_in_volume": [
    "numpy.arange",
    "slice",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_where_string": {
  "data": {
   "lineno": 1807,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "xarray.DataArray",
    "xarray.tests.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestIrisConversion": {
  "data": {
   "lineno": 3640,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_dataarray.TestIrisConversion.test_da_coord_name_from_cube": {
  "data": {
   "lineno": 3792,
   "symbols_in_volume": [
    "iris.coords.DimCoord",
    "iris.cube.Cube",
    "xarray.DataArray",
    "xarray.DataArray.from_iris",
    "xarray.testing.assert_identical",
    "xarray.tests.requires_iris",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestIrisConversion.test_da_name_from_cube": {
  "data": {
   "lineno": 3770,
   "symbols_in_volume": [
    "iris.cube.Cube",
    "xarray.DataArray",
    "xarray.DataArray.from_iris",
    "xarray.testing.assert_identical",
    "xarray.tests.requires_iris",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestIrisConversion.test_fallback_to_iris_AuxCoord": {
  "data": {
   "lineno": 3834,
   "symbols_in_volume": [
    "dask.array",
    "iris.coords.AuxCoord",
    "iris.cube.Cube",
    "xarray.DataArray",
    "xarray.DataArray.to_iris",
    "xarray.tests.requires_iris",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestIrisConversion.test_prevent_duplicate_coord_names": {
  "data": {
   "lineno": 3816,
   "symbols_in_volume": [
    "ValueError",
    "iris.coords.DimCoord",
    "iris.cube.Cube",
    "xarray.DataArray.from_iris",
    "xarray.tests.requires_iris",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestIrisConversion.test_to_and_from_iris": {
  "data": {
   "lineno": 3641,
   "symbols_in_volume": [
    "numpy.NaN",
    "numpy.arange",
    "pandas.date_range",
    "tuple",
    "xarray.DataArray",
    "xarray.DataArray.from_iris",
    "xarray.coding.times.CFDatetimeCoder",
    "xarray.core.pycompat.OrderedDict",
    "xarray.tests.assert_array_equal",
    "xarray.tests.assert_identical",
    "xarray.tests.requires_iris",
    "xarray.tests.test_dataarray.cf_units",
    "xarray.tests.test_dataarray.iris",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestIrisConversion.test_to_and_from_iris_dask": {
  "data": {
   "lineno": 3699,
   "symbols_in_volume": [
    "dask.array.from_array",
    "dask.array.ma.masked_less",
    "dict",
    "hasattr",
    "isinstance",
    "numpy.arange",
    "pandas.date_range",
    "tuple",
    "type",
    "xarray.DataArray",
    "xarray.DataArray.from_iris",
    "xarray.coding.times.CFDatetimeCoder",
    "xarray.core.pycompat.OrderedDict",
    "xarray.tests.assert_array_equal",
    "xarray.tests.assert_identical",
    "xarray.tests.requires_dask",
    "xarray.tests.requires_iris",
    "xarray.tests.test_dataarray.cf_units",
    "xarray.tests.test_dataarray.iris",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.Variable": {
  "data": {
   "shadows": "xarray.Variable"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray._import_cftime": {
  "data": {
   "shadows": "xarray.coding.times._import_cftime"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.align": {
  "data": {
   "shadows": "xarray.align"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.assert_allclose": {
  "data": {
   "shadows": "xarray.tests.assert_allclose"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.assert_array_equal": {
  "data": {
   "shadows": "xarray.tests.assert_array_equal"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.assert_equal": {
  "data": {
   "shadows": "xarray.tests.assert_equal"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.assert_identical": {
  "data": {
   "shadows": "xarray.tests.assert_identical"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.broadcast": {
  "data": {
   "shadows": "xarray.broadcast"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.cf_units": {
  "data": {
   "shadows": "cf_units"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.da_dask": {
  "data": {
   "lineno": 3370,
   "symbols_in_volume": [
    "dask.array",
    "numpy.random.RandomState",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.dtypes": {
  "data": {
   "shadows": "xarray.core.dtypes"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.from_cdms2": {
  "data": {
   "shadows": "xarray.convert.from_cdms2"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.full_like": {
  "data": {
   "shadows": "xarray.core.common.full_like"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.iris": {
  "data": {
   "shadows": "iris"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.iteritems": {
  "data": {
   "shadows": "xarray.core.pycompat.iteritems"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.raises_regex": {
  "data": {
   "shadows": "xarray.tests.raises_regex"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.requires_bottleneck": {
  "data": {
   "shadows": "xarray.tests.requires_bottleneck"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.requires_cftime": {
  "data": {
   "shadows": "xarray.tests.requires_cftime"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.requires_dask": {
  "data": {
   "shadows": "xarray.tests.requires_dask"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.requires_iris": {
  "data": {
   "shadows": "xarray.tests.requires_iris"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.requires_np113": {
  "data": {
   "shadows": "xarray.tests.requires_np113"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.requires_scipy": {
  "data": {
   "shadows": "xarray.tests.requires_scipy"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.source_ndarray": {
  "data": {
   "shadows": "xarray.tests.source_ndarray"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.test_isin": {
  "data": {
   "lineno": 3381,
   "symbols_in_volume": [
    "dask.array.isin",
    "list",
    "numpy.asarray",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_raise_no_warning_for_nan_in_binary_ops": {
  "data": {
   "lineno": 3634,
   "symbols_in_volume": [
    "len",
    "numpy.NaN",
    "xarray.DataArray",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_rolling_construct": {
  "data": {
   "lineno": 3538,
   "symbols_in_volume": [
    "center",
    "dask.array",
    "dask.array.rolling",
    "numpy.arange",
    "numpy.testing.assert_allclose",
    "pandas.Series",
    "xarray.DataArray.from_series",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_rolling_count_correct": {
  "data": {
   "lineno": 3610,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.rolling",
    "dask.array.to_dataset",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_rolling_doc": {
  "data": {
   "lineno": 3431,
   "symbols_in_volume": [
    "dask.array.rolling"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_rolling_iter": {
  "data": {
   "lineno": 3404,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.isel",
    "dask.array.rolling",
    "enumerate",
    "len",
    "numpy.allclose",
    "xarray.tests.assert_array_equal",
    "xarray.tests.assert_identical",
    "xarray.tests.test_dataarray.pytest",
    "xarray.tests.test_dataarray.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_rolling_pandas_compat": {
  "data": {
   "lineno": 3515,
   "symbols_in_volume": [
    "center",
    "dask.array",
    "dask.array.rolling",
    "numpy.arange",
    "numpy.nanmean",
    "numpy.testing.assert_allclose",
    "pandas.Series",
    "xarray.DataArray.from_series",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_rolling_properties": {
  "data": {
   "lineno": 3438,
   "symbols_in_volume": [
    "ValueError",
    "dask.array.rolling",
    "str",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_rolling_reduce": {
  "data": {
   "lineno": 3564,
   "symbols_in_volume": [
    "center",
    "dask.array.isnull",
    "dask.array.rolling",
    "getattr",
    "numpy",
    "xarray.tests.assert_allclose",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_rolling_reduce_nonnumeric": {
  "data": {
   "lineno": 3588,
   "symbols_in_volume": [
    "center",
    "dask.array",
    "dask.array.rolling",
    "getattr",
    "numpy",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.requires_np113",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_rolling_wrapped_bottleneck": {
  "data": {
   "lineno": 3455,
   "symbols_in_volume": [
    "center",
    "dask.array",
    "dask.array.rolling",
    "dask.array.values",
    "getattr",
    "xarray.tests.assert_array_equal",
    "xarray.tests.assert_equal",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_rolling_wrapped_dask": {
  "data": {
   "lineno": 3477,
   "symbols_in_volume": [
    "center",
    "getattr",
    "xarray.tests.assert_allclose",
    "xarray.tests.test_dataarray.da_dask",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_rolling_wrapped_dask_nochunk": {
  "data": {
   "lineno": 3503,
   "symbols_in_volume": [
    "center",
    "numpy.arange",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.test_dataarray.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "xarray.tests.test_dataset.ALL_DIMS": {
  "data": {
   "shadows": "xarray.ALL_DIMS"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.DataArray": {
  "data": {
   "shadows": "xarray.DataArray"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.Dataset": {
  "data": {
   "shadows": "xarray.Dataset"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.InaccessibleVariableDataStore": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "xarray.backends.InMemoryDataStore"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_dataset.InaccessibleVariableDataStore.__init__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "set",
    "super",
    "xarray.tests.test_dataset.InaccessibleVariableDataStore"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.InaccessibleVariableDataStore.get_variables": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "dict",
    "lazy_inaccessible",
    "xarray.core.pycompat.iteritems"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.InaccessibleVariableDataStore.get_variables.lazy_inaccessible": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "InaccessibleArray",
    "xarray.Variable",
    "xarray.core.indexing.LazilyOuterIndexedArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.InaccessibleVariableDataStore.store": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "isinstance",
    "super",
    "xarray.IndexVariable",
    "xarray.tests.test_dataset.InaccessibleVariableDataStore"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.IndexVariable": {
  "data": {
   "shadows": "xarray.IndexVariable"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.MergeError": {
  "data": {
   "shadows": "xarray.MergeError"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.OrderedDict": {
  "data": {
   "shadows": "xarray.core.pycompat.OrderedDict"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.TestDataset": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_dataset.TestDataset.make_example_math_dataset": {
  "data": {
   "lineno": 3687,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "xarray.Dataset",
    "xarray.core.pycompat.OrderedDict"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_align": {
  "data": {
   "lineno": 1626,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "assert_array_equal",
    "assert_equal",
    "assert_identical",
    "list",
    "numpy.isnan",
    "numpy.random.randn",
    "raises_regex",
    "xarray.align",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_align_exact": {
  "data": {
   "lineno": 1674,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "raises_regex",
    "xarray.Dataset",
    "xarray.align"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_align_exclude": {
  "data": {
   "lineno": 1685,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.align"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_align_indexes": {
  "data": {
   "lineno": 1721,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.align"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_align_nocopy": {
  "data": {
   "lineno": 1703,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "source_ndarray",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.align"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_align_non_unique": {
  "data": {
   "lineno": 1730,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.Dataset",
    "xarray.align"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_apply": {
  "data": {
   "lineno": 3663,
   "symbols_in_volume": [
    "assert_equal",
    "assert_identical",
    "numpy.asarray",
    "numpy.mean",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_apply.scale": {
  "data": {
   "lineno": 3676
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_asarray": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "TypeError",
    "numpy.asarray",
    "raises_regex",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_assign": {
  "data": {
   "lineno": 2454,
   "symbols_in_volume": [
    "assert_identical",
    "list",
    "range",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_assign_attrs": {
  "data": {
   "lineno": 2483,
   "symbols_in_volume": [
    "assert_identical",
    "dict",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_assign_multiindex_level": {
  "data": {
   "lineno": 2495,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "range",
    "xarray.tests.test_dataset.create_test_multiindex",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_attr_access": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "assert_identical",
    "dir",
    "set",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_attribute_access": {
  "data": {
   "lineno": 4220,
   "symbols_in_volume": [
    "assert_equal",
    "dir",
    "getattr",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_attrs": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "isinstance",
    "xarray.core.pycompat.OrderedDict",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_binary_op_join_setting": {
  "data": {
   "lineno": 4061,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.nan",
    "xarray.Dataset",
    "xarray.set_options"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_broadcast": {
  "data": {
   "lineno": 1739,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset",
    "xarray.broadcast"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_broadcast_equals": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_broadcast_exclude": {
  "data": {
   "lineno": 1778,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.broadcast"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_broadcast_misaligned": {
  "data": {
   "lineno": 1803,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.broadcast"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_broadcast_nocopy": {
  "data": {
   "lineno": 1763,
   "symbols_in_volume": [
    "assert_identical",
    "source_ndarray",
    "xarray.Dataset",
    "xarray.broadcast"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_chunk": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "dask.array.Array",
    "isinstance",
    "numpy.ndarray",
    "raises_regex",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_combine_first": {
  "data": {
   "lineno": 4117,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.merge"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_constructor": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "assert_identical",
    "numpy.arange",
    "raises_regex",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_constructor_0d": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "Arbitrary",
    "assert_identical",
    "numpy.array",
    "numpy.datetime64",
    "numpy.nan",
    "pandas.Timestamp",
    "print",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_constructor_0d.Arbitrary": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_dataset.TestDataset.test_constructor_1d": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_constructor_auto_align": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "isinstance",
    "numpy.nan",
    "raises_regex",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.IndexVariable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_constructor_compat": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.ones",
    "numpy.zeros",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.MergeError",
    "xarray.core.pycompat.OrderedDict",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_constructor_deprecated": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_constructor_invalid_dims": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "dict",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.MergeError",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_constructor_pandas_sequence": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "assert_equal",
    "reversed",
    "xarray.Dataset",
    "xarray.core.pycompat.OrderedDict"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_constructor_pandas_single": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "assert_array_equal",
    "hasattr",
    "numpy.random.rand",
    "pandas",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_dataset.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_constructor_with_coords": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "pandas.MultiIndex.from_product",
    "raises_regex",
    "range",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_convert_dataframe_with_many_types_and_multiindex": {
  "data": {
   "lineno": 2994,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.asarray",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.date_range",
    "range",
    "xarray.Dataset.from_dataframe"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_coords_merge": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "range",
    "xarray.Dataset",
    "xarray.MergeError",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_coords_merge_mismatched_shape": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_coords_modify": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "assert_array_equal",
    "assert_identical",
    "numpy.random.randn",
    "raises_regex",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_coords_properties": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "KeyError",
    "assert_identical",
    "len",
    "list",
    "numpy.array",
    "numpy.int64",
    "numpy.random.randn",
    "repr",
    "textwrap.dedent",
    "xarray.Dataset",
    "xarray.core.pycompat.OrderedDict",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_coords_set": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "raises_regex",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_coords_setitem_multiindex": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "range",
    "xarray.tests.test_dataset.create_test_multiindex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_coords_setitem_with_new_dimension": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_coords_to_dataset": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_copy": {
  "data": {
   "lineno": 1870,
   "symbols_in_volume": [
    "assert_identical",
    "copy.copy",
    "copy.deepcopy",
    "numpy.arange",
    "source_ndarray",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_copy_with_data": {
  "data": {
   "lineno": 1892,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.random.randn",
    "xarray.core.pycompat.iteritems",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_copy_with_data_errors": {
  "data": {
   "lineno": 1903,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "raises_regex",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_count": {
  "data": {
   "lineno": 3657,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dask_is_lazy": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "slice",
    "xarray.open_dataset",
    "xarray.tests.test_dataset.InaccessibleVariableDataStore",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_data_vars_properties": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "assert_identical",
    "repr",
    "set",
    "textwrap.dedent",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_array_math": {
  "data": {
   "lineno": 3729,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_dataset_math": {
  "data": {
   "lineno": 3751,
   "symbols_in_volume": [
    "assert_identical",
    "dict",
    "id",
    "slice"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_diff_exception_label_str": {
  "data": {
   "lineno": 3915,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_diff_exception_n_neg": {
  "data": {
   "lineno": 3910,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_diff_n1": {
  "data": {
   "lineno": 3880,
   "symbols_in_volume": [
    "assert_equal",
    "dict",
    "numpy.diff",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_diff_n1_label": {
  "data": {
   "lineno": 3870,
   "symbols_in_volume": [
    "assert_equal",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_diff_n1_simple": {
  "data": {
   "lineno": 3864,
   "symbols_in_volume": [
    "assert_equal",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_diff_n2": {
  "data": {
   "lineno": 3895,
   "symbols_in_volume": [
    "assert_equal",
    "dict",
    "numpy.diff",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_math_auto_align": {
  "data": {
   "lineno": 3776,
   "symbols_in_volume": [
    "assert_equal",
    "assert_identical",
    "slice",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_math_errors": {
  "data": {
   "lineno": 3806,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "assert_identical",
    "numpy.datetime64",
    "raises_regex",
    "xarray.DataArray",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_number_math": {
  "data": {
   "lineno": 3697,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_retains_period_index_on_transpose": {
  "data": {
   "lineno": 3855,
   "symbols_in_volume": [
    "isinstance",
    "pandas.PeriodIndex",
    "pandas.period_range",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_transpose": {
  "data": {
   "lineno": 3825,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "dir",
    "numpy.random.randn",
    "raises_regex",
    "tuple",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_delitem": {
  "data": {
   "lineno": 2547,
   "symbols_in_volume": [
    "set",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_drop_index_labels": {
  "data": {
   "lineno": 1848,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "assert_identical",
    "numpy.random.randn",
    "raises_regex",
    "slice",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_drop_variables": {
  "data": {
   "lineno": 1833,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "dict",
    "raises_regex",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dropna": {
  "data": {
   "lineno": 3146,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "assert_identical",
    "numpy.nan",
    "numpy.random.randn",
    "raises_regex",
    "slice",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_ds_resample_apply_func_args": {
  "data": {
   "lineno": 2889,
   "symbols_in_volume": [
    "assert_identical",
    "pandas.date_range",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_ds_resample_apply_func_args.func": {
  "data": {
   "lineno": 2891
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_equals_and_identical": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_equals_failures": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_expand_dims": {
  "data": {
   "lineno": 2020,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.linspace",
    "numpy.random.randn",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_expand_dims_error": {
  "data": {
   "lineno": 2002,
   "symbols_in_volume": [
    "ValueError",
    "numpy.linspace",
    "numpy.random.randn",
    "raises_regex",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_fillna": {
  "data": {
   "lineno": 3206,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "dask.array",
    "dask.array.attrs",
    "dask.array.fillna",
    "numpy.nan",
    "raises_regex",
    "range",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_filter_by_attrs": {
  "data": {
   "lineno": 4002,
   "symbols_in_volume": [
    "assert_equal",
    "bool",
    "dict",
    "len",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_from_dataframe_non_unique_columns": {
  "data": {
   "lineno": 2987,
   "symbols_in_volume": [
    "ValueError",
    "numpy.zeros",
    "pandas.DataFrame",
    "raises_regex",
    "xarray.Dataset.from_dataframe"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_full_like": {
  "data": {
   "lineno": 4092,
   "symbols_in_volume": [
    "assert_identical",
    "bool",
    "float",
    "int",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.core.common.full_like"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_get_index": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "KeyError",
    "numpy.zeros",
    "pandas.Index",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_getitem": {
  "data": {
   "lineno": 2226,
   "symbols_in_volume": [
    "KeyError",
    "assert_equal",
    "assert_identical",
    "dict",
    "isinstance",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_getitem_hashable": {
  "data": {
   "lineno": 2250,
   "symbols_in_volume": [
    "KeyError",
    "assert_identical",
    "raises_regex",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_groupby": {
  "data": {
   "lineno": 2593,
   "symbols_in_volume": [
    "assert_equal",
    "len",
    "list",
    "numpy.random.randn",
    "range",
    "xarray.Dataset",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_groupby.identity": {
  "data": {
   "lineno": 2609
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_groupby_errors": {
  "data": {
   "lineno": 2635,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.arange",
    "raises_regex",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_groupby_iter": {
  "data": {
   "lineno": 2627,
   "symbols_in_volume": [
    "assert_equal",
    "enumerate",
    "list",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_groupby_math": {
  "data": {
   "lineno": 2674,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "assert_equal",
    "assert_identical",
    "numpy.arange",
    "numpy.zeros",
    "pandas.date_range",
    "raises_regex",
    "range",
    "reorder_dims",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_groupby_math.reorder_dims": {
  "data": {
   "lineno": 2675
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_groupby_math_virtual": {
  "data": {
   "lineno": 2724,
   "symbols_in_volume": [
    "assert_identical",
    "pandas.date_range",
    "xarray.ALL_DIMS",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_groupby_nan": {
  "data": {
   "lineno": 2733,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "xarray.ALL_DIMS",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_groupby_order": {
  "data": {
   "lineno": 2741,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "xarray.ALL_DIMS",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_groupby_reduce": {
  "data": {
   "lineno": 2644,
   "symbols_in_volume": [
    "assert_allclose",
    "numpy.random.randn",
    "xarray.ALL_DIMS",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_groupby_returns_new_type": {
  "data": {
   "lineno": 2616,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.random.randn",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_groupby_warn": {
  "data": {
   "lineno": 2666,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.random.randn",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_info": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "io.StringIO",
    "textwrap.dedent",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_ipython_key_completion": {
  "data": {
   "lineno": 4234,
   "symbols_in_volume": [
    "sorted",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_isel": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.nonzero",
    "numpy.testing.assert_array_equal",
    "set",
    "slice",
    "tuple",
    "xarray.core.pycompat.iteritems",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_isel_dataarray": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": [
    "IndexError",
    "assert_identical",
    "numpy.arange",
    "numpy.random.randn",
    "raises_regex",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_isel_drop": {
  "data": {
   "lineno": 1230,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_isel_fancy": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "ValueError",
    "assert_array_equal",
    "assert_equal",
    "assert_identical",
    "len",
    "numpy.random.randn",
    "numpy.testing.assert_array_equal",
    "raises_regex",
    "slice",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_isel_points": {
  "data": {
   "lineno": 1240,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "assert_identical",
    "len",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "pandas.Index",
    "raises_regex",
    "slice",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_lazy_load": {
  "data": {
   "lineno": 3131,
   "symbols_in_volume": [
    "slice",
    "xarray.open_dataset",
    "xarray.tests.test_dataset.InaccessibleVariableDataStore",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_loc": {
  "data": {
   "lineno": 1453,
   "symbols_in_volume": [
    "TypeError",
    "assert_identical",
    "dict",
    "raises_regex",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_mean_uint_dtype": {
  "data": {
   "lineno": 3468,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "numpy.array",
    "numpy.nan",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_merge_multiindex_level": {
  "data": {
   "lineno": 2504,
   "symbols_in_volume": [
    "ValueError",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_multiindex",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_modify_inplace": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.random.random",
    "pandas.Index",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_pickle": {
  "data": {
   "lineno": 3124,
   "symbols_in_volume": [
    "assert_identical",
    "cPickle.dumps",
    "cPickle.loads",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_properties": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "bool",
    "dict",
    "isinstance",
    "len",
    "list",
    "numpy.float32",
    "numpy.int64",
    "repr",
    "set",
    "sorted",
    "type",
    "xarray.Dataset",
    "xarray.core.utils.Frozen",
    "xarray.core.utils.SortedKeysDict",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_quantile": {
  "data": {
   "lineno": 3623,
   "symbols_in_volume": [
    "all",
    "assert_identical",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_rank": {
  "data": {
   "lineno": 3640,
   "symbols_in_volume": [
    "ValueError",
    "assert_equal",
    "list",
    "raises_regex",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_real_and_imag": {
  "data": {
   "lineno": 3983,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce": {
  "data": {
   "lineno": 3435,
   "symbols_in_volume": [
    "assert_equal",
    "dict",
    "len",
    "list",
    "xarray.Dataset",
    "xarray.core.pycompat.iteritems",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_argmin": {
  "data": {
   "lineno": 3585,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_bad_dim": {
  "data": {
   "lineno": 3477,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_coords": {
  "data": {
   "lineno": 3457,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_cumsum": {
  "data": {
   "lineno": 3482,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_cumsum_test_dims": {
  "data": {
   "lineno": 3493,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "list",
    "raises_regex",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_dtypes": {
  "data": {
   "lineno": 3551,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.array",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_keep_attrs": {
  "data": {
   "lineno": 3566,
   "symbols_in_volume": [
    "xarray.core.pycompat.OrderedDict",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_non_numeric": {
  "data": {
   "lineno": 3509,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.random.randint",
    "numpy.str_",
    "sorted",
    "tuple",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_only_one_axis": {
  "data": {
   "lineno": 3605,
   "symbols_in_volume": [
    "TypeError",
    "assert_identical",
    "raises_regex",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_only_one_axis.mean_only_one_axis": {
  "data": {
   "lineno": 3607,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "xarray.core.pycompat.integer_types"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_scalars": {
  "data": {
   "lineno": 3595,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_strings": {
  "data": {
   "lineno": 3523,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.array",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reindex": {
  "data": {
   "lineno": 1528,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "assert_identical",
    "numpy.arange",
    "numpy.nan",
    "numpy.random.randn",
    "numpy.zeros",
    "raises_regex",
    "range",
    "slice",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reindex_like": {
  "data": {
   "lineno": 1508,
   "symbols_in_volume": [
    "assert_identical",
    "float",
    "list",
    "numpy.nan",
    "object",
    "slice",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reindex_method": {
  "data": {
   "lineno": 1607,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reindex_variables_copied": {
  "data": {
   "lineno": 1601,
   "symbols_in_volume": [
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reindex_warning": {
  "data": {
   "lineno": 1585,
   "symbols_in_volume": [
    "FutureWarning",
    "any",
    "len",
    "str",
    "xarray.DataArray",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_rename": {
  "data": {
   "lineno": 1913,
   "symbols_in_volume": [
    "InaccessibleArray",
    "ValueError",
    "assert_equal",
    "assert_identical",
    "list",
    "raises_regex",
    "type",
    "xarray.Variable",
    "xarray.core.pycompat.OrderedDict",
    "xarray.core.pycompat.iteritems",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_rename_inplace": {
  "data": {
   "lineno": 1968,
   "symbols_in_volume": [
    "assert_array_equal",
    "assert_identical",
    "pandas.date_range",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_rename_old_name": {
  "data": {
   "lineno": 1952,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_rename_same_name": {
  "data": {
   "lineno": 1962,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reorder_levels": {
  "data": {
   "lineno": 2087,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "assert_identical",
    "raises_regex",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_multiindex",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_repr": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "len",
    "map",
    "max",
    "numpy.ones",
    "print",
    "repr",
    "textwrap.dedent",
    "xarray.Dataset",
    "xarray.set_options",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_repr_multiindex": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_product",
    "print",
    "repr",
    "textwrap.dedent",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_multiindex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_repr_period_index": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "pandas.period_range",
    "repr",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_resample_and_first": {
  "data": {
   "lineno": 2755,
   "symbols_in_volume": [
    "assert_equal",
    "assert_identical",
    "getattr",
    "method",
    "numpy.mean",
    "numpy.random.randn",
    "pandas.date_range",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_resample_by_last_discarding_attrs": {
  "data": {
   "lineno": 2831,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.date_range",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_resample_by_mean_discarding_attrs": {
  "data": {
   "lineno": 2819,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.date_range",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_resample_by_mean_with_keep_attrs": {
  "data": {
   "lineno": 2791,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.date_range",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_resample_drop_nondim_coords": {
  "data": {
   "lineno": 2843,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.arange",
    "numpy.meshgrid",
    "numpy.tile",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_resample_loffset": {
  "data": {
   "lineno": 2807,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.random.randn",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_resample_min_count": {
  "data": {
   "lineno": 2777,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.date_range",
    "range",
    "slice",
    "xarray.Dataset",
    "xarray.concat",
    "xarray.where"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_resample_old_api": {
  "data": {
   "lineno": 2873,
   "symbols_in_volume": [
    "TypeError",
    "numpy.random.randn",
    "pandas.date_range",
    "raises_regex",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reset_index": {
  "data": {
   "lineno": 2073,
   "symbols_in_volume": [
    "FutureWarning",
    "assert_identical",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_multiindex",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_roll_coords": {
  "data": {
   "lineno": 3936,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "list",
    "raises_regex",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_roll_coords_none": {
  "data": {
   "lineno": 3961,
   "symbols_in_volume": [
    "FutureWarning",
    "assert_identical",
    "list",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_roll_multidim": {
  "data": {
   "lineno": 3973,
   "symbols_in_volume": [
    "assert_identical",
    "range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_roll_no_coords": {
  "data": {
   "lineno": 3949,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "list",
    "raises_regex",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_sel": {
  "data": {
   "lineno": 1079,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.arange",
    "pandas.Timedelta",
    "pandas.date_range",
    "pandas.to_timedelta",
    "slice",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_sel_dataarray": {
  "data": {
   "lineno": 1113,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.allclose",
    "xarray.DataArray",
    "xarray.Variable",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_sel_dataarray_mindex": {
  "data": {
   "lineno": 1178,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.random.rand",
    "pandas.MultiIndex.from_product",
    "raises_regex",
    "range",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_sel_drop": {
  "data": {
   "lineno": 1215,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_sel_fancy": {
  "data": {
   "lineno": 1350,
   "symbols_in_volume": [
    "KeyError",
    "assert_array_equal",
    "assert_identical",
    "numpy.arange",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_sel_method": {
  "data": {
   "lineno": 1425,
   "symbols_in_volume": [
    "KeyError",
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "assert_identical",
    "numpy.pi",
    "raises_regex",
    "slice",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_sel_points": {
  "data": {
   "lineno": 1318,
   "symbols_in_volume": [
    "KeyError",
    "assert_identical",
    "numpy.arange",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_selection_multiindex": {
  "data": {
   "lineno": 1463,
   "symbols_in_volume": [
    "assert_identical",
    "pandas.MultiIndex.from_product",
    "range",
    "slice",
    "test_sel",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_selection_multiindex.test_sel": {
  "data": {
   "lineno": 1469,
   "symbols_in_volume": [
    "assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_set_index": {
  "data": {
   "lineno": 2053,
   "symbols_in_volume": [
    "FutureWarning",
    "assert_identical",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_multiindex",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_setattr_raises": {
  "data": {
   "lineno": 3993,
   "symbols_in_volume": [
    "AttributeError",
    "raises_regex",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_setitem": {
  "data": {
   "lineno": 2330,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "assert_equal",
    "assert_identical",
    "numpy.random.randn",
    "raises_regex",
    "xarray.Variable",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_setitem_align_new_indexes": {
  "data": {
   "lineno": 2446,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_setitem_auto_align": {
  "data": {
   "lineno": 2377,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "numpy.nan",
    "range",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_setitem_both_non_unique_index": {
  "data": {
   "lineno": 2531,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.random.randint",
    "range",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_setitem_multiindex_level": {
  "data": {
   "lineno": 2542,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "range",
    "xarray.tests.test_dataset.create_test_multiindex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_setitem_original_non_unique_index": {
  "data": {
   "lineno": 2513,
   "symbols_in_volume": [
    "assert_identical",
    "list",
    "numpy.arange",
    "range",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_setitem_pandas": {
  "data": {
   "lineno": 2368,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_setitem_with_coords": {
  "data": {
   "lineno": 2400,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.allclose",
    "numpy.arange",
    "slice",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_shift": {
  "data": {
   "lineno": 3920,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "list",
    "numpy.nan",
    "raises_regex",
    "xarray.Dataset",
    "xarray.core.dtypes.NA",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_slice_virtual_variable": {
  "data": {
   "lineno": 2323,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.arange",
    "xarray.Variable",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_sortby": {
  "data": {
   "lineno": 4135,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "assert_equal",
    "pandas.MultiIndex.from_tuples",
    "reversed",
    "str",
    "tuple",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_squeeze": {
  "data": {
   "lineno": 2557,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "dict",
    "get_args",
    "raises_regex",
    "xarray.Dataset",
    "xarray.core.pycompat.iteritems"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_squeeze.get_args": {
  "data": {
   "lineno": 2560,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_squeeze_drop": {
  "data": {
   "lineno": 2570,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_stack": {
  "data": {
   "lineno": 2104,
   "symbols_in_volume": [
    "assert_identical",
    "pandas.MultiIndex.from_product",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_stack_unstack_fast": {
  "data": {
   "lineno": 2143,
   "symbols_in_volume": [
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_stack_unstack_slow": {
  "data": {
   "lineno": 2154,
   "symbols_in_volume": [
    "slice",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_swap_dims": {
  "data": {
   "lineno": 1981,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "isinstance",
    "list",
    "raises_regex",
    "xarray.Dataset",
    "xarray.IndexVariable",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_time_season": {
  "data": {
   "lineno": 2318,
   "symbols_in_volume": [
    "assert_array_equal",
    "pandas.date_range",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_to_and_from_dataframe": {
  "data": {
   "lineno": 2916,
   "symbols_in_volume": [
    "assert_identical",
    "list",
    "numpy.array",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_arrays",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Dataset.from_dataframe",
    "xarray.core.pycompat.OrderedDict"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_to_and_from_dict": {
  "data": {
   "lineno": 3014,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "list",
    "numpy.random.randn",
    "raises_regex",
    "xarray.Dataset",
    "xarray.Dataset.from_dict",
    "xarray.core.pycompat.OrderedDict"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_to_and_from_dict_with_nan_nat": {
  "data": {
   "lineno": 3090,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.date_range",
    "xarray.Dataset",
    "xarray.Dataset.from_dict",
    "xarray.core.pycompat.OrderedDict"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_to_and_from_dict_with_time_dim": {
  "data": {
   "lineno": 3078,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.random.randn",
    "pandas.date_range",
    "xarray.Dataset",
    "xarray.Dataset.from_dict",
    "xarray.core.pycompat.OrderedDict"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_to_array": {
  "data": {
   "lineno": 2902,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.core.pycompat.OrderedDict"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_to_dict_with_numpy_attrs": {
  "data": {
   "lineno": 3105,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.asscalar",
    "numpy.float64",
    "numpy.random.randn",
    "xarray.Dataset",
    "xarray.core.pycompat.OrderedDict"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_unary_ops": {
  "data": {
   "lineno": 3710,
   "symbols_in_volume": [
    "AttributeError",
    "abs",
    "assert_identical",
    "func",
    "int",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_unicode_data": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "repr",
    "textwrap.dedent",
    "xarray.Dataset",
    "xarray.core.pycompat.unicode_type",
    "xarray.tests.test_dataset.sys"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_unstack": {
  "data": {
   "lineno": 2125,
   "symbols_in_volume": [
    "assert_identical",
    "pandas.MultiIndex.from_product",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_unstack_errors": {
  "data": {
   "lineno": 2136,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_update": {
  "data": {
   "lineno": 2167,
   "symbols_in_volume": [
    "FutureWarning",
    "assert_identical",
    "numpy.arange",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_update_auto_align": {
  "data": {
   "lineno": 2207,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "numpy.nan",
    "raises_regex",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_update_overwrite_coords": {
  "data": {
   "lineno": 2191,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_variable": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "ValueError",
    "assert_array_equal",
    "list",
    "numpy.random.random",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_variable_indexing": {
  "data": {
   "lineno": 1820,
   "symbols_in_volume": [
    "assert_equal",
    "range",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_virtual_variable_multiindex": {
  "data": {
   "lineno": 2299,
   "symbols_in_volume": [
    "assert_identical",
    "pandas.MultiIndex.from_arrays",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_multiindex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_virtual_variable_same_name": {
  "data": {
   "lineno": 2291,
   "symbols_in_volume": [
    "assert_identical",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_virtual_variables_default_coords": {
  "data": {
   "lineno": 2259,
   "symbols_in_volume": [
    "assert_identical",
    "isinstance",
    "range",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.IndexVariable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_virtual_variables_time": {
  "data": {
   "lineno": 2270,
   "symbols_in_volume": [
    "assert_array_equal",
    "assert_equal",
    "numpy.arange",
    "numpy.sin",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_where": {
  "data": {
   "lineno": 3288,
   "symbols_in_volume": [
    "assert_identical",
    "dask.array",
    "dask.array.attrs",
    "dask.array.values",
    "dask.array.where",
    "numpy.nan",
    "range",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_where_drop": {
  "data": {
   "lineno": 3358,
   "symbols_in_volume": [
    "TypeError",
    "assert_identical",
    "numpy.arange",
    "numpy.array",
    "numpy.e",
    "numpy.nan",
    "numpy.pi",
    "raises_regex",
    "range",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_where_drop_empty": {
  "data": {
   "lineno": 3420,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.random.rand",
    "numpy.zeros",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_where_drop_no_indexes": {
  "data": {
   "lineno": 3429,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_where_other": {
  "data": {
   "lineno": 3342,
   "symbols_in_volume": [
    "ValueError",
    "assert_equal",
    "int",
    "raises_regex",
    "range",
    "slice",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.Variable": {
  "data": {
   "shadows": "xarray.Variable"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.align": {
  "data": {
   "shadows": "xarray.align"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.backends": {
  "data": {
   "shadows": "xarray.backends"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.broadcast": {
  "data": {
   "shadows": "xarray.broadcast"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.create_test_data": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "all",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.random.RandomState",
    "pandas.date_range",
    "sorted",
    "tuple",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.create_test_multiindex": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_product",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.data_set": {
  "data": {
   "lineno": 4282,
   "symbols_in_volume": [
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.ds": {
  "data": {
   "lineno": 4415,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.random.randn",
    "range",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.dtypes": {
  "data": {
   "shadows": "xarray.core.dtypes"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.full_like": {
  "data": {
   "shadows": "xarray.core.common.full_like"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.indexing": {
  "data": {
   "shadows": "xarray.core.indexing"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.integer_types": {
  "data": {
   "shadows": "xarray.core.pycompat.integer_types"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.iteritems": {
  "data": {
   "shadows": "xarray.core.pycompat.iteritems"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.npcompat": {
  "data": {
   "shadows": "xarray.core.npcompat"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.open_dataset": {
  "data": {
   "shadows": "xarray.open_dataset"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.set_options": {
  "data": {
   "shadows": "xarray.set_options"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.test_constructor_raises_with_invalid_coords": {
  "data": {
   "lineno": 4378,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "xarray.DataArray",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_dataset_constructor_aligns_to_explicit_coords": {
  "data": {
   "lineno": 4344,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.asarray",
    "pandas.Index",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.IndexVariable",
    "xarray.Variable",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_differentiate": {
  "data": {
   "lineno": 4561,
   "symbols_in_volume": [
    "ValueError",
    "assert_equal",
    "dask.array",
    "dask.array.chunk",
    "dask.array.coords",
    "dask.array.differentiate",
    "dask.array.dims",
    "numpy.random.RandomState",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.core.npcompat.gradient",
    "xarray.tests.test_dataset.ds",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_differentiate_cftime": {
  "data": {
   "lineno": 4636,
   "symbols_in_volume": [
    "assert_allclose",
    "assert_equal",
    "dask.array",
    "dask.array.chunk",
    "dask.array.coords",
    "dask.array.differentiate",
    "dask.array.dims",
    "float",
    "numpy.random.RandomState",
    "xarray.DataArray",
    "xarray.cftime_range",
    "xarray.core.npcompat.gradient",
    "xarray.core.utils.datetime_to_numeric",
    "xarray.ones_like",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_differentiate_datetime": {
  "data": {
   "lineno": 4600,
   "symbols_in_volume": [
    "assert_equal",
    "dask.array",
    "dask.array.chunk",
    "dask.array.coords",
    "dask.array.differentiate",
    "dask.array.dims",
    "numpy.allclose",
    "numpy.array",
    "numpy.random.RandomState",
    "xarray.DataArray",
    "xarray.core.npcompat.gradient",
    "xarray.core.utils.datetime_to_numeric",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_dir_expected_attrs": {
  "data": {
   "lineno": 4388,
   "symbols_in_volume": [
    "dir",
    "set",
    "xarray.tests.test_dataset.data_set"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_dir_non_string": {
  "data": {
   "lineno": 4396,
   "symbols_in_volume": [
    "dir",
    "numpy.random.uniform",
    "xarray.Dataset",
    "xarray.tests.test_dataset.data_set"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_dir_unicode": {
  "data": {
   "lineno": 4409,
   "symbols_in_volume": [
    "dir",
    "xarray.tests.test_dataset.data_set"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_error_message_on_set_supplied": {
  "data": {
   "lineno": 4373,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_isin": {
  "data": {
   "lineno": 4287,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.array",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_isin_dask": {
  "data": {
   "lineno": 4312,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.array",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_isin_dataset": {
  "data": {
   "lineno": 4338,
   "symbols_in_volume": [
    "TypeError",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_raise_no_warning_for_nan_in_binary_ops": {
  "data": {
   "lineno": 4555,
   "symbols_in_volume": [
    "len",
    "numpy.NaN",
    "xarray.Dataset",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_rolling_construct": {
  "data": {
   "lineno": 4497,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.random.randn",
    "numpy.testing.assert_allclose",
    "pandas.DataFrame",
    "xarray.Dataset.from_dataframe",
    "xarray.tests.test_dataset.ds",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_rolling_pandas_compat": {
  "data": {
   "lineno": 4477,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.random.randn",
    "numpy.testing.assert_allclose",
    "pandas.DataFrame",
    "xarray.Dataset.from_dataframe",
    "xarray.tests.test_dataset.ds",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_rolling_properties": {
  "data": {
   "lineno": 4435,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "str",
    "xarray.tests.test_dataset.ds",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_rolling_reduce": {
  "data": {
   "lineno": 4524,
   "symbols_in_volume": [
    "assert_allclose",
    "getattr",
    "list",
    "numpy",
    "xarray.tests.test_dataset.ds",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_rolling_wrapped_bottleneck": {
  "data": {
   "lineno": 4451,
   "symbols_in_volume": [
    "assert_array_equal",
    "assert_equal",
    "getattr",
    "xarray.tests.test_dataset.ds",
    "xarray.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.unicode_type": {
  "data": {
   "shadows": "xarray.core.pycompat.unicode_type"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.utils": {
  "data": {
   "shadows": "xarray.core.utils"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed": {
  "data": {
   "symbols_in_volume": [
    "xarray.tests.test_distributed.ENGINES",
    "xarray.tests.test_distributed.pytest"
   ]
  },
  "type": "module"
 },
 "xarray.tests.test_distributed.Client": {
  "data": {
   "shadows": "dask.distributed.Client"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.CombinedLock": {
  "data": {
   "shadows": "xarray.backends.locks.CombinedLock"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.ENGINES": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "xarray.tests.test_distributed.ENGINES_AND_FORMATS": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "xarray.tests.test_distributed.HDF5_LOCK": {
  "data": {
   "shadows": "xarray.backends.locks.HDF5_LOCK"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.Lock": {
  "data": {
   "shadows": "dask.distributed.Lock"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.NC_FORMATS": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "xarray.tests.test_distributed.ON_WINDOWS": {
  "data": {
   "shadows": "xarray.tests.test_backends.ON_WINDOWS"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.cluster": {
  "data": {
   "shadows": "distributed.utils_test.cluster"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.create_test_data": {
  "data": {
   "shadows": "xarray.tests.test_dataset.create_test_data"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.create_tmp_file": {
  "data": {
   "shadows": "xarray.tests.test_backends.create_tmp_file"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.create_tmp_geotiff": {
  "data": {
   "shadows": "xarray.tests.test_backends.create_tmp_geotiff"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.da": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "xarray.tests.test_distributed.dask": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "xarray.tests.test_distributed.distributed": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "xarray.tests.test_distributed.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.futures_of": {
  "data": {
   "shadows": "distributed.client.futures_of"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.gen_cluster": {
  "data": {
   "shadows": "distributed.utils_test.gen_cluster"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.loop": {
  "data": {
   "shadows": "distributed.utils_test.loop"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.open_example_dataset": {
  "data": {
   "shadows": "xarray.tests.test_backends.open_example_dataset"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.test_async": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "assert_allclose",
    "distributed.client.futures_of",
    "distributed.utils_test.gen_cluster",
    "len",
    "str",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_distributed.dask",
    "xarray.tests.test_distributed.distributed",
    "xarray.tests.test_distributed.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_distributed.test_dask_distributed_cfgrib_integration_test": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "assert_allclose",
    "dask.distributed.Client",
    "distributed.utils_test.cluster",
    "distributed.utils_test.loop",
    "isinstance",
    "xarray.tests.test_backends.open_example_dataset",
    "xarray.tests.test_distributed.da"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_distributed.test_dask_distributed_netcdf_roundtrip": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "NotImplementedError",
    "assert_allclose",
    "dask.distributed.Client",
    "distributed.utils_test.cluster",
    "distributed.utils_test.loop",
    "isinstance",
    "xarray.open_dataset",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_distributed.ENGINES",
    "xarray.tests.test_distributed.ENGINES_AND_FORMATS",
    "xarray.tests.test_distributed.da",
    "xarray.tests.test_distributed.pytest",
    "xarray.tests.test_distributed.tmp_netcdf_filename"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_distributed.test_dask_distributed_rasterio_integration_test": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "assert_allclose",
    "dask.distributed.Client",
    "distributed.utils_test.cluster",
    "distributed.utils_test.loop",
    "isinstance",
    "xarray.open_rasterio",
    "xarray.tests.test_backends.create_tmp_geotiff",
    "xarray.tests.test_distributed.da"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_distributed.test_dask_distributed_read_netcdf_integration_test": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "assert_allclose",
    "dask.distributed.Client",
    "distributed.utils_test.cluster",
    "distributed.utils_test.loop",
    "isinstance",
    "xarray.open_dataset",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_distributed.ENGINES",
    "xarray.tests.test_distributed.ENGINES_AND_FORMATS",
    "xarray.tests.test_distributed.da",
    "xarray.tests.test_distributed.pytest",
    "xarray.tests.test_distributed.tmp_netcdf_filename"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_distributed.test_dask_distributed_zarr_integration_test": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "assert_allclose",
    "dask.distributed.Client",
    "dict",
    "distributed.utils_test.cluster",
    "distributed.utils_test.loop",
    "isinstance",
    "xarray.open_zarr",
    "xarray.tests.test_backends.ON_WINDOWS",
    "xarray.tests.test_backends.create_tmp_file",
    "xarray.tests.test_dataset.create_test_data",
    "xarray.tests.test_distributed.da",
    "xarray.tests.test_distributed.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_distributed.test_hdf5_lock": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "isinstance",
    "xarray.backends.locks.HDF5_LOCK",
    "xarray.tests.test_distributed.dask"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_distributed.test_serializable_locks": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "dask.distributed.Lock",
    "distributed.utils_test.gen_cluster",
    "list",
    "range",
    "type",
    "xarray.backends.locks.CombinedLock",
    "xarray.backends.locks.HDF5_LOCK",
    "xarray.tests.test_distributed.pickle"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_distributed.test_serializable_locks.f": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "xarray.tests.test_distributed.tmp_netcdf_filename": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "str",
    "xarray.tests.test_distributed.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_distributed.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_dtypes": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_dtypes.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_dtypes.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_dtypes.dtypes": {
  "data": {
   "shadows": "xarray.core.dtypes"
  },
  "type": "import"
 },
 "xarray.tests.test_dtypes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_dtypes.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_dtypes.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_dtypes.test_inf": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.inf",
    "xarray.core.dtypes.INF",
    "xarray.core.dtypes.NINF",
    "xarray.tests.test_dtypes.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dtypes.test_maybe_promote": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.complex128",
    "numpy.complex64",
    "numpy.datetime64",
    "numpy.dtype",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.timedelta64",
    "str",
    "xarray.core.dtypes.maybe_promote",
    "xarray.tests.test_dtypes.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dtypes.test_result_type": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.bytes_",
    "numpy.float32",
    "numpy.float64",
    "numpy.int64",
    "numpy.object_",
    "numpy.string_",
    "numpy.unicode_",
    "xarray.core.dtypes.result_type",
    "xarray.tests.test_dtypes.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dtypes.test_result_type_dask_array": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "RuntimeError",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "xarray.core.dtypes.result_type",
    "xarray.tests.test_dtypes.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dtypes.test_result_type_dask_array.error": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_dtypes.test_result_type_scalar": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.nan",
    "xarray.core.dtypes.result_type"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_duck_array_ops.DataArray": {
  "data": {
   "shadows": "xarray.DataArray"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.Dataset": {
  "data": {
   "shadows": "xarray.Dataset"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.TestArrayNotNullEquiv": {
  "data": {
   "lineno": 160
  },
  "type": "class"
 },
 "xarray.tests.test_duck_array_ops.TestArrayNotNullEquiv.test_equal": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "xarray.core.duck_array_ops.array_notnull_equiv",
    "xarray.tests.test_duck_array_ops.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.TestArrayNotNullEquiv.test_some_not_equal": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "xarray.core.duck_array_ops.array_notnull_equiv"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.TestArrayNotNullEquiv.test_types": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "xarray.core.duck_array_ops.array_notnull_equiv",
    "xarray.tests.test_duck_array_ops.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.TestArrayNotNullEquiv.test_wrong_shape": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "xarray.core.duck_array_ops.array_notnull_equiv"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.TestOps": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_duck_array_ops.TestOps.setUp": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "xarray.tests.test_duck_array_ops.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.TestOps.test_all_nan_arrays": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.nan",
    "xarray.core.duck_array_ops.mean",
    "xarray.tests.test_duck_array_ops.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.TestOps.test_concatenate_type_promotion": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "object",
    "xarray.core.duck_array_ops.concatenate"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.TestOps.test_count": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "xarray.core.duck_array_ops.count"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.TestOps.test_first": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "IndexError",
    "assert_array_equal",
    "numpy.array",
    "numpy.nan",
    "raises_regex",
    "xarray.core.duck_array_ops.first",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.TestOps.test_last": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "IndexError",
    "assert_array_equal",
    "numpy.array",
    "numpy.nan",
    "raises_regex",
    "xarray.core.duck_array_ops.last",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.TestOps.test_stack_type_promotion": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "object",
    "xarray.core.duck_array_ops.stack"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.TestOps.test_where_type_promotion": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "numpy.float32",
    "numpy.nan",
    "object",
    "xarray.core.duck_array_ops.where"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.array_notnull_equiv": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.array_notnull_equiv"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.assert_allclose": {
  "data": {
   "shadows": "xarray.testing.assert_allclose"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.assert_dask_array": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "isinstance",
    "xarray.core.pycompat.dask_array_type"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.assert_equal": {
  "data": {
   "shadows": "xarray.testing.assert_equal"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.concat": {
  "data": {
   "shadows": "xarray.concat"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.concatenate": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.concatenate"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.construct_dataarray": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.arange",
    "numpy.array",
    "numpy.array.astype",
    "numpy.array.dtype",
    "numpy.array.flat",
    "numpy.array.size",
    "numpy.bool_",
    "numpy.floating",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.random.RandomState",
    "range",
    "str",
    "xarray.DataArray",
    "xarray.core.dtypes.maybe_promote"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.count": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.count"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.dask_array_type": {
  "data": {
   "shadows": "xarray.core.pycompat.dask_array_type"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.dtypes": {
  "data": {
   "shadows": "xarray.core.dtypes"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.duck_array_ops": {
  "data": {
   "shadows": "xarray.core.duck_array_ops"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.first": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.first"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.from_series_or_scalar": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "AttributeError",
    "xarray.DataArray",
    "xarray.DataArray.from_series"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.gradient": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.gradient"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.last": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.last"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.mean": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.mean"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.rolling_window": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.rolling_window"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.series_reduce": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "getattr",
    "len",
    "list",
    "range",
    "xarray.concat",
    "xarray.tests.test_duck_array_ops.from_series_or_scalar"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.stack": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.stack"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.test_argmin_max": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "float",
    "getattr",
    "int",
    "numpy.bool_",
    "numpy.dtype",
    "numpy.float32",
    "str",
    "xarray.testing.assert_allclose",
    "xarray.tests.test_duck_array_ops.construct_dataarray",
    "xarray.tests.test_duck_array_ops.pytest",
    "xarray.tests.test_duck_array_ops.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_argmin_max_error": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "ValueError",
    "numpy.bool_",
    "numpy.nan",
    "xarray.tests.test_duck_array_ops.construct_dataarray",
    "xarray.tests.test_duck_array_ops.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_cumprod_2d": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "xarray.core.duck_array_ops.cumprod"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_cumsum_1d": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "xarray.core.duck_array_ops.cumsum"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_cumsum_2d": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "xarray.core.duck_array_ops.cumsum"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_dask_gradient": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "assert_array_equal",
    "dask.array.Array",
    "dask.array.from_array",
    "isinstance",
    "numpy.array",
    "numpy.array.shape",
    "numpy.exp",
    "numpy.linspace",
    "numpy.random.randn",
    "xarray.core.duck_array_ops.gradient",
    "xarray.tests.test_duck_array_ops.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_dask_rolling": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "ValueError",
    "assert_array_equal",
    "dask.array.Array",
    "dask.array.from_array",
    "float",
    "isinstance",
    "numpy.array",
    "numpy.nan",
    "numpy.random.randn",
    "xarray.core.duck_array_ops.rolling_window",
    "xarray.tests.test_duck_array_ops.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_docs": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "textwrap.dedent",
    "xarray.DataArray.std.__doc__",
    "xarray.DataArray.sum.__doc__"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_isnull_with_dask": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "isinstance",
    "numpy.float32",
    "xarray.core.pycompat.dask_array_type",
    "xarray.testing.assert_equal",
    "xarray.tests.test_duck_array_ops.construct_dataarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_min_count": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "dask.array",
    "distutils.version.LooseVersion",
    "float",
    "getattr",
    "int",
    "numpy.bool_",
    "numpy.float32",
    "pandas.__version__",
    "xarray.testing.assert_allclose",
    "xarray.tests.test_duck_array_ops.assert_dask_array",
    "xarray.tests.test_duck_array_ops.construct_dataarray",
    "xarray.tests.test_duck_array_ops.pytest",
    "xarray.tests.test_duck_array_ops.series_reduce"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_min_count_dataset": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "dask.array",
    "float",
    "getattr",
    "xarray.Dataset",
    "xarray.testing.assert_allclose",
    "xarray.tests.test_duck_array_ops.construct_dataarray",
    "xarray.tests.test_duck_array_ops.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_multiple_dims": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "dask.array",
    "float",
    "getattr",
    "int",
    "numpy.bool_",
    "numpy.float32",
    "xarray.testing.assert_allclose",
    "xarray.tests.test_duck_array_ops.construct_dataarray",
    "xarray.tests.test_duck_array_ops.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_reduce": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "ZeroDivisionError",
    "float",
    "getattr",
    "int",
    "isinstance",
    "numpy",
    "numpy.allclose",
    "numpy.array",
    "numpy.bool_",
    "numpy.float32",
    "object",
    "xarray.core.pycompat.dask_array_type",
    "xarray.testing.assert_allclose",
    "xarray.tests.test_duck_array_ops.assert_dask_array",
    "xarray.tests.test_duck_array_ops.construct_dataarray",
    "xarray.tests.test_duck_array_ops.pytest",
    "xarray.tests.test_duck_array_ops.series_reduce",
    "xarray.tests.test_duck_array_ops.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.where": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.where"
  },
  "type": "import"
 },
 "xarray.tests.test_extensions": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "xarray.tests.test_extensions.ExampleAccessor": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object",
    "xarray.register_dataarray_accessor",
    "xarray.register_dataset_accessor"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_extensions.ExampleAccessor.__init__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "xarray.tests.test_extensions.TestAccessor": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_extensions.TestAccessor.test_broken_accessor": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "RuntimeError",
    "raises_regex",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_extensions.TestAccessor.test_broken_accessor.BrokenAccessor": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "object",
    "xarray.register_dataset_accessor"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_extensions.TestAccessor.test_broken_accessor.BrokenAccessor.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_extensions.TestAccessor.test_pickle_dataarray": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "cPickle.dumps",
    "cPickle.loads",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_extensions.TestAccessor.test_pickle_dataset": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "cPickle.dumps",
    "cPickle.loads",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_extensions.TestAccessor.test_register": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "Warning",
    "hasattr",
    "isinstance",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Dataset.demo",
    "xarray.Dataset.demo.__doc__",
    "xarray.tests.test_extensions.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_extensions.TestAccessor.test_register.DemoAccessor": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "object",
    "xarray.register_dataarray_accessor",
    "xarray.register_dataset_accessor"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_extensions.TestAccessor.test_register.DemoAccessor.__init__": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "xarray.tests.test_extensions.TestAccessor.test_register.DemoAccessor.foo": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_extensions.TestAccessor.test_register.Foo": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "object",
    "xarray.register_dataarray_accessor"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_extensions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_extensions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_extensions.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "xarray.tests.test_extensions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_extensions.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_extensions.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_formatting": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_formatting.PY3": {
  "data": {
   "shadows": "xarray.core.pycompat.PY3"
  },
  "type": "import"
 },
 "xarray.tests.test_formatting.TestFormatting": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_formatting.TestFormatting.test_attribute_repr": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "len",
    "xarray.core.formatting.summarize_attr"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.TestFormatting.test_first_n_items": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "raises_regex",
    "xarray.core.formatting.first_n_items"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.TestFormatting.test_format_array_flat": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.arange",
    "xarray.core.formatting.format_array_flat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.TestFormatting.test_format_item": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "pandas.Timedelta",
    "pandas.Timestamp",
    "xarray.core.formatting.format_item",
    "xarray.core.pycompat.PY3"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.TestFormatting.test_format_items": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.timedelta64",
    "pandas.to_timedelta",
    "xarray.core.formatting.format_items"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.TestFormatting.test_format_timestamp_out_of_bounds": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "datetime.datetime",
    "xarray.core.formatting.format_timestamp"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.TestFormatting.test_get_indexer_at_least_n_items": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "slice",
    "xarray.core.formatting._get_indexer_at_least_n_items"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.TestFormatting.test_last_item": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "xarray.core.formatting.last_item"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.TestFormatting.test_last_n_items": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "raises_regex",
    "xarray.core.formatting.first_n_items",
    "xarray.core.formatting.last_n_items"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.TestFormatting.test_maybe_truncate": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "xarray.core.formatting.maybe_truncate"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.TestFormatting.test_pretty_print": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "xarray.core.formatting.pretty_print"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_formatting.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "xarray.tests.test_formatting.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_formatting.formatting": {
  "data": {
   "shadows": "xarray.core.formatting"
  },
  "type": "import"
 },
 "xarray.tests.test_formatting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_formatting.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_formatting.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_formatting.test_set_numpy_options": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.get_printoptions",
    "repr",
    "xarray.core.formatting.set_numpy_options"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.test_short_array_repr": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "numpy.random.randn",
    "xarray.core.formatting.short_array_repr"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_groupby": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_groupby._consolidate_slices": {
  "data": {
   "shadows": "xarray.core.groupby._consolidate_slices"
  },
  "type": "import"
 },
 "xarray.tests.test_groupby.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_groupby.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_groupby.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_groupby.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_groupby.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_groupby.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_groupby.test_consolidate_slices": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "slice",
    "xarray.core.groupby._consolidate_slices",
    "xarray.tests.test_groupby.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_da_groupby_apply_func_args": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_da_groupby_apply_func_args.func": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_ds_groupby_apply_func_args": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_ds_groupby_apply_func_args.func": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_groupby_da_datetime": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "dict",
    "pandas.date_range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_groupby_duplicate_coordinate_labels": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_groupby_input_mutation": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_multi_index_groupby_apply": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.random.randn",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_multi_index_groupby_sum": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.ones",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing": {
  "data": {
   "symbols_in_volume": [
    "IndexerMaker",
    "xarray.core.indexing.BasicIndexer"
   ]
  },
  "type": "module"
 },
 "xarray.tests.test_indexing.B": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "xarray.tests.test_indexing.DataArray": {
  "data": {
   "shadows": "xarray.DataArray"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.Dataset": {
  "data": {
   "shadows": "xarray.Dataset"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.TestCopyOnWriteArray": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_indexing.TestCopyOnWriteArray.test_index_scalar": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "numpy.array",
    "xarray.core.indexing.CopyOnWriteArray",
    "xarray.tests.test_indexing.B"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestCopyOnWriteArray.test_setitem": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.arange",
    "numpy.zeros",
    "xarray.core.indexing.CopyOnWriteArray",
    "xarray.tests.test_indexing.B"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestCopyOnWriteArray.test_sub_array": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "assert_array_equal",
    "isinstance",
    "numpy.arange",
    "numpy.zeros",
    "xarray.core.indexing.CopyOnWriteArray",
    "xarray.tests.test_indexing.B"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestIndexers": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_indexing.TestIndexers.set_to_zero": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestIndexers.test_asarray_tuplesafe": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "xarray.core.indexing._asarray_tuplesafe"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestIndexers.test_convert_label_indexer": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "ValueError",
    "pandas.Index",
    "pandas.MultiIndex.from_product",
    "raises_regex",
    "slice",
    "xarray.core.indexing.convert_label_indexer",
    "xarray.tests.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestIndexers.test_convert_unsorted_datetime_index_raises": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "KeyError",
    "pandas.to_datetime",
    "slice",
    "xarray.core.indexing.convert_label_indexer",
    "xarray.tests.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestIndexers.test_expanded_indexer": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "IndexError",
    "ReturnItem",
    "assert_array_equal",
    "numpy.arange",
    "numpy.random.randn",
    "raises_regex",
    "xarray.core.indexing.expanded_indexer"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestIndexers.test_get_dim_indexers": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ValueError",
    "pandas.MultiIndex.from_product",
    "raises_regex",
    "range",
    "xarray.DataArray",
    "xarray.core.indexing.get_dim_indexers"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestIndexers.test_remap_label_indexers": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.int32",
    "pandas.MultiIndex.from_product",
    "range",
    "slice",
    "test_indexer",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestIndexers.test_remap_label_indexers.test_indexer": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "assert_array_equal",
    "xarray.core.indexing.remap_label_indexers"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestLazyArray": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_indexing.TestLazyArray.test_lazily_indexed_array": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "ReturnItem",
    "all",
    "assert_array_equal",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.ndarray",
    "numpy.random.choice",
    "numpy.random.rand",
    "slice",
    "xarray.Variable",
    "xarray.core.indexing.BasicIndexer",
    "xarray.core.indexing.LazilyOuterIndexedArray",
    "xarray.core.indexing.LazilyVectorizedIndexedArray",
    "xarray.core.indexing.NumpyIndexingAdapter",
    "xarray.core.indexing.OuterIndexer",
    "xarray.core.pycompat.native_int_types"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestLazyArray.test_slice_slice": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ReturnItem",
    "assert_array_equal",
    "numpy.arange",
    "xarray.core.indexing.slice_slice"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestLazyArray.test_vectorized_lazily_indexed_array": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "ReturnItem",
    "check_indexing",
    "numpy.random.rand",
    "slice",
    "xarray.Variable",
    "xarray.core.indexing.LazilyOuterIndexedArray",
    "xarray.core.indexing.NumpyIndexingAdapter"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestLazyArray.test_vectorized_lazily_indexed_array.check_indexing": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "assert_array_equal",
    "isinstance",
    "xarray.core.indexing.LazilyOuterIndexedArray",
    "xarray.core.indexing.LazilyVectorizedIndexedArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestMemoryCachedArray": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_indexing.TestMemoryCachedArray.test_index_scalar": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "numpy.array",
    "xarray.core.indexing.MemoryCachedArray",
    "xarray.tests.test_indexing.B"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestMemoryCachedArray.test_setitem": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.arange",
    "numpy.zeros",
    "xarray.core.indexing.MemoryCachedArray",
    "xarray.tests.test_indexing.B"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestMemoryCachedArray.test_sub_array": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "assert_array_equal",
    "isinstance",
    "numpy.arange",
    "xarray.core.indexing.LazilyOuterIndexedArray",
    "xarray.core.indexing.MemoryCachedArray",
    "xarray.core.indexing.NumpyIndexingAdapter",
    "xarray.tests.test_indexing.B"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestMemoryCachedArray.test_wrapper": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "assert_array_equal",
    "isinstance",
    "numpy.arange",
    "xarray.core.indexing.LazilyOuterIndexedArray",
    "xarray.core.indexing.MemoryCachedArray",
    "xarray.core.indexing.NumpyIndexingAdapter"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.Test_vectorized_indexer": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_indexing.Test_vectorized_indexer.setup": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.randn",
    "slice",
    "xarray.core.indexing.NumpyIndexingAdapter",
    "xarray.tests.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.Test_vectorized_indexer.test_arrayize_vectorized_indexer": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.newaxis",
    "numpy.stack",
    "numpy.testing.assert_array_equal",
    "slice",
    "xarray.core.indexing.VectorizedIndexer",
    "xarray.core.indexing._arrayize_vectorized_indexer",
    "xarray.tests.test_indexing.itertools"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.Variable": {
  "data": {
   "shadows": "xarray.Variable"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.check_array1d": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "indexer_cls",
    "numpy.arange",
    "numpy.int32",
    "numpy.int64",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.check_array2d": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "indexer_cls",
    "numpy.array",
    "numpy.int64",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.check_integer": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "all",
    "indexer_cls",
    "int",
    "isinstance",
    "numpy.uint64"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.check_slice": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "indexer_cls",
    "isinstance",
    "numpy.int64",
    "slice",
    "xarray.core.pycompat.native_int_types"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.get_indexers": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "len",
    "numpy.random.randint",
    "slice",
    "tuple",
    "xarray.core.indexing.BasicIndexer",
    "xarray.core.indexing.OuterIndexer",
    "xarray.core.indexing.VectorizedIndexer"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.indexing": {
  "data": {
   "shadows": "xarray.core.indexing"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.native_int_types": {
  "data": {
   "shadows": "xarray.core.pycompat.native_int_types"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.nputils": {
  "data": {
   "shadows": "xarray.core.nputils"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.test_base_explicit_indexer": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "Subclass",
    "TypeError",
    "repr",
    "xarray.core.indexing.ExplicitIndexer",
    "xarray.tests.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_base_explicit_indexer.Subclass": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "xarray.core.indexing.ExplicitIndexer"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_indexing.test_basic_indexer": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "TypeError",
    "xarray.core.indexing.BasicIndexer",
    "xarray.tests.test_indexing.check_array1d",
    "xarray.tests.test_indexing.check_array2d",
    "xarray.tests.test_indexing.check_integer",
    "xarray.tests.test_indexing.check_slice",
    "xarray.tests.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_create_mask_basic_indexer": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "xarray.core.indexing.BasicIndexer",
    "xarray.core.indexing.create_mask"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_create_mask_dask": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "slice",
    "xarray.core.indexing.OuterIndexer",
    "xarray.core.indexing.VectorizedIndexer",
    "xarray.core.indexing.create_mask",
    "xarray.tests.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_create_mask_error": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "TypeError",
    "raises_regex",
    "xarray.core.indexing.create_mask"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_create_mask_outer_indexer": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "slice",
    "xarray.core.indexing.OuterIndexer",
    "xarray.core.indexing.create_mask"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_create_mask_vectorized_indexer": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "slice",
    "xarray.core.indexing.VectorizedIndexer",
    "xarray.core.indexing.create_mask"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_decompose_indexers": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "len",
    "numpy.random.randn",
    "numpy.testing.assert_array_equal",
    "xarray.core.indexing.IndexingSupport.BASIC",
    "xarray.core.indexing.IndexingSupport.OUTER",
    "xarray.core.indexing.IndexingSupport.OUTER_1VECTOR",
    "xarray.core.indexing.IndexingSupport.VECTORIZED",
    "xarray.core.indexing.NumpyIndexingAdapter",
    "xarray.core.indexing._combine_indexers",
    "xarray.core.indexing.decompose_indexer",
    "xarray.core.indexing.integer_types",
    "xarray.tests.test_indexing.get_indexers",
    "xarray.tests.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_decompose_slice": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.arange",
    "slice",
    "xarray.core.indexing._decompose_slice",
    "xarray.tests.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_implicit_indexing_adapter": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.asarray",
    "numpy.testing.assert_array_equal",
    "xarray.core.indexing.BasicIndexer",
    "xarray.core.indexing.ImplicitToExplicitIndexingAdapter",
    "xarray.core.indexing.NumpyIndexingAdapter"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_invalid_for_all": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "TypeError",
    "indexer_cls",
    "numpy.array",
    "slice",
    "xarray.core.indexing.BasicIndexer",
    "xarray.core.indexing.OuterIndexer",
    "xarray.core.indexing.VectorizedIndexer",
    "xarray.tests.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_outer_indexer": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "TypeError",
    "xarray.core.indexing.OuterIndexer",
    "xarray.tests.test_indexing.check_array1d",
    "xarray.tests.test_indexing.check_array2d",
    "xarray.tests.test_indexing.check_integer",
    "xarray.tests.test_indexing.check_slice",
    "xarray.tests.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_outer_indexer_consistency_with_broadcast_indexes_vectorized": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "ReturnItem",
    "isinstance",
    "len",
    "nonzero",
    "numpy.arange",
    "numpy.array",
    "numpy.moveaxis",
    "numpy.ndarray",
    "numpy.random.rand",
    "numpy.testing.assert_array_equal",
    "range",
    "xarray.Variable",
    "xarray.core.indexing.OuterIndexer",
    "xarray.core.indexing._outer_to_numpy_indexer",
    "xarray.core.nputils.NumpyVIndexAdapter",
    "xarray.tests.test_indexing.itertools"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_outer_indexer_consistency_with_broadcast_indexes_vectorized.nonzero": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_posify_mask_subindexer": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "xarray.core.indexing._posify_mask_subindexer",
    "xarray.tests.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_vectorized_indexer": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.arange",
    "numpy.array",
    "numpy.int64",
    "raises_regex",
    "xarray.core.indexing.VectorizedIndexer",
    "xarray.tests.test_indexing.check_array1d",
    "xarray.tests.test_indexing.check_array2d",
    "xarray.tests.test_indexing.check_integer",
    "xarray.tests.test_indexing.check_slice",
    "xarray.tests.test_indexing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "xarray.tests.test_interp.DatetimeProlepticGregorian": {
  "data": {
   "shadows": "cftime.DatetimeProlepticGregorian"
  },
  "type": "import"
 },
 "xarray.tests.test_interp.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_interp.assert_allclose": {
  "data": {
   "shadows": "xarray.tests.assert_allclose"
  },
  "type": "import"
 },
 "xarray.tests.test_interp.assert_equal": {
  "data": {
   "shadows": "xarray.tests.assert_equal"
  },
  "type": "import"
 },
 "xarray.tests.test_interp.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_interp.get_example_data": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.linspace",
    "numpy.newaxis",
    "numpy.sin",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_interp.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_interp.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_interp.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_interp.requires_cftime": {
  "data": {
   "shadows": "xarray.tests.requires_cftime"
  },
  "type": "import"
 },
 "xarray.tests.test_interp.requires_scipy": {
  "data": {
   "shadows": "xarray.tests.requires_scipy"
  },
  "type": "import"
 },
 "xarray.tests.test_interp.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "xarray.tests.test_interp.test_cftime": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "numpy.arange",
    "xarray.DataArray",
    "xarray.cftime_range",
    "xarray.tests.assert_allclose",
    "xarray.tests.requires_cftime",
    "xarray.tests.requires_scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_cftime_list_of_strings": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "_parse_array_of_cftime_strings",
    "cftime.DatetimeProlepticGregorian",
    "numpy.arange",
    "numpy.array",
    "xarray.DataArray",
    "xarray.cftime_range",
    "xarray.tests.assert_allclose",
    "xarray.tests.requires_cftime",
    "xarray.tests.requires_scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_cftime_single_string": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "_parse_array_of_cftime_strings",
    "cftime.DatetimeProlepticGregorian",
    "numpy.arange",
    "numpy.array",
    "xarray.DataArray",
    "xarray.cftime_range",
    "xarray.tests.assert_allclose",
    "xarray.tests.requires_cftime",
    "xarray.tests.requires_scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_cftime_to_non_cftime_error": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "TypeError",
    "numpy.arange",
    "xarray.DataArray",
    "xarray.cftime_range",
    "xarray.tests.requires_cftime",
    "xarray.tests.requires_scipy",
    "xarray.tests.test_interp.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_cftime_type_error": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "TypeError",
    "numpy.arange",
    "xarray.DataArray",
    "xarray.cftime_range",
    "xarray.tests.requires_cftime",
    "xarray.tests.requires_scipy",
    "xarray.tests.test_interp.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_dataset": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "create_test_data",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.requires_scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_datetime": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.atleast_1d",
    "numpy.datetime64",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.requires_scipy",
    "xarray.tests.test_interp.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_datetime_single_string": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.requires_scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_datetime_to_non_datetime_error": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "TypeError",
    "numpy.arange",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.requires_scipy",
    "xarray.tests.test_interp.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_dimension_wo_coords": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "numpy.arange",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.requires_scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_dtype": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "xarray.Dataset",
    "xarray.tests.requires_scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_errors": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.isnan",
    "numpy.nan",
    "range",
    "xarray.DataArray",
    "xarray.tests.test_interp.get_example_data",
    "xarray.tests.test_interp.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_interp_like": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "create_test_data",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.requires_scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_interpolate_1d": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "NotImplementedError",
    "func",
    "numpy.linspace",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.test_interp.get_example_data",
    "xarray.tests.test_interp.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_interpolate_1d.func": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.tests.test_interp.scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_interpolate_1d_methods": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "func",
    "numpy.linspace",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.test_interp.get_example_data",
    "xarray.tests.test_interp.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_interpolate_1d_methods.func": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.tests.test_interp.scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_interpolate_dimorder": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.test_interp.get_example_data",
    "xarray.tests.test_interp.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_interpolate_nd": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.nan",
    "numpy.stack",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.test_interp.get_example_data",
    "xarray.tests.test_interp.pytest",
    "xarray.tests.test_interp.scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_interpolate_nd_scalar": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.stack",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.test_interp.get_example_data",
    "xarray.tests.test_interp.pytest",
    "xarray.tests.test_interp.scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_interpolate_scalar": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "func",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.test_interp.get_example_data",
    "xarray.tests.test_interp.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_interpolate_scalar.func": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.tests.test_interp.scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_interpolate_vectorize": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "func",
    "numpy.linspace",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.test_interp.get_example_data",
    "xarray.tests.test_interp.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_interpolate_vectorize.func": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "enumerate",
    "numpy.nan",
    "xarray.tests.test_interp.scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_keywargs": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "xarray.tests.assert_equal",
    "xarray.tests.test_interp.get_example_data",
    "xarray.tests.test_interp.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_nans": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "numpy.nan",
    "range",
    "xarray.DataArray",
    "xarray.tests.test_interp.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.test_sorted": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "ValueError",
    "numpy.cos",
    "numpy.linspace",
    "numpy.newaxis",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.assert_allclose",
    "xarray.tests.requires_scipy",
    "xarray.tests.test_interp.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_interp.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_merge": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_merge.TestMergeFunction": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_alignment_error": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.Dataset",
    "xarray.merge"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_arrays": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "create_test_data",
    "xarray.merge"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_dataarray_unnamed": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.DataArray",
    "xarray.merge"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_datasets": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "create_test_data",
    "xarray.merge"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_dicts_dims": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "xarray.Dataset",
    "xarray.merge"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_dicts_simple": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "xarray.Dataset",
    "xarray.merge"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_error": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "xarray.Dataset",
    "xarray.MergeError",
    "xarray.merge",
    "xarray.tests.test_merge.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_no_conflicts_broadcast": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.Dataset",
    "xarray.merge"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_no_conflicts_multi_var": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "create_test_data",
    "numpy.nan",
    "xarray.merge"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_no_conflicts_preserve_attrs": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "xarray.Dataset",
    "xarray.merge"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_no_conflicts_single_var": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "xarray.Dataset",
    "xarray.MergeError",
    "xarray.merge",
    "xarray.tests.test_merge.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeInternals": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_merge.TestMergeInternals.test_broadcast_dimension_size": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "xarray.Variable",
    "xarray.core.merge.broadcast_dimension_size",
    "xarray.tests.test_merge.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeMethod": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_merge.TestMergeMethod.test_merge": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "ValueError",
    "create_test_data",
    "raises_regex",
    "xarray.tests.test_merge.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeMethod.test_merge_auto_align": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "numpy.nan",
    "slice",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeMethod.test_merge_broadcast_equals": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeMethod.test_merge_compat": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.Dataset",
    "xarray.MergeError",
    "xarray.tests.test_merge.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeMethod.test_merge_no_conflicts": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "xarray.Dataset",
    "xarray.MergeError",
    "xarray.tests.test_merge.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_merge.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_merge.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_merge.merge": {
  "data": {
   "shadows": "xarray.core.merge"
  },
  "type": "import"
 },
 "xarray.tests.test_merge.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_merge.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_merge.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_merge.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_missing": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_missing.NumpyInterpolator": {
  "data": {
   "shadows": "xarray.core.missing.NumpyInterpolator"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.ScipyInterpolator": {
  "data": {
   "shadows": "xarray.core.missing.ScipyInterpolator"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.SplineInterpolator": {
  "data": {
   "shadows": "xarray.core.missing.SplineInterpolator"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.assert_array_equal": {
  "data": {
   "shadows": "xarray.tests.assert_array_equal"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.assert_equal": {
  "data": {
   "shadows": "xarray.tests.assert_equal"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.da": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.test_missing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.dask_array_type": {
  "data": {
   "shadows": "xarray.core.pycompat.dask_array_type"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.ds": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.tests.test_missing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.make_interpolate_example_data": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.nan",
    "numpy.random.RandomState",
    "numpy.random.shuffle",
    "pandas.TimedeltaIndex",
    "pandas.Timestamp",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.tests.test_missing.da"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.raises_regex": {
  "data": {
   "shadows": "xarray.tests.raises_regex"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.requires_bottleneck": {
  "data": {
   "shadows": "xarray.tests.requires_bottleneck"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.requires_dask": {
  "data": {
   "shadows": "xarray.tests.requires_dask"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.requires_scipy": {
  "data": {
   "shadows": "xarray.tests.requires_scipy"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.test_bfill_dask": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "isinstance",
    "xarray.core.pycompat.dask_array_type",
    "xarray.tests.assert_equal",
    "xarray.tests.requires_bottleneck",
    "xarray.tests.requires_dask",
    "xarray.tests.test_missing.da",
    "xarray.tests.test_missing.make_interpolate_example_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_bfill_dataset": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "xarray.tests.requires_bottleneck",
    "xarray.tests.test_missing.ds"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_ffill": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.requires_bottleneck",
    "xarray.tests.test_missing.da"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_ffill_bfill_allnans": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.full",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.requires_bottleneck"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_ffill_bfill_nonans": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.requires_bottleneck"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_ffill_dask": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "isinstance",
    "xarray.core.pycompat.dask_array_type",
    "xarray.tests.assert_equal",
    "xarray.tests.requires_bottleneck",
    "xarray.tests.requires_dask",
    "xarray.tests.test_missing.da",
    "xarray.tests.test_missing.make_interpolate_example_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_ffill_dataset": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "xarray.tests.requires_bottleneck",
    "xarray.tests.test_missing.ds"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_ffill_functions": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "xarray.tests.requires_bottleneck",
    "xarray.tests.test_missing.da"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_ffill_limit": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.assert_array_equal",
    "xarray.tests.requires_bottleneck",
    "xarray.tests.test_missing.da"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_2d_coord_raises": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.nan",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.Variable",
    "xarray.tests.raises_regex",
    "xarray.tests.test_missing.da"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_allnans": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.full",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.requires_scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_dask": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "isinstance",
    "xarray.core.pycompat.dask_array_type",
    "xarray.tests.assert_equal",
    "xarray.tests.requires_dask",
    "xarray.tests.test_missing.da",
    "xarray.tests.test_missing.make_interpolate_example_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_dask_raises_for_invalid_chunk_dim": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "ValueError",
    "xarray.tests.raises_regex",
    "xarray.tests.requires_dask",
    "xarray.tests.test_missing.da",
    "xarray.tests.test_missing.make_interpolate_example_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_dataset": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "xarray.tests.assert_array_equal",
    "xarray.tests.test_missing.ds"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_invalid_interpolator_raises": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.float64",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.raises_regex",
    "xarray.tests.test_missing.da"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_kwargs": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.requires_scipy",
    "xarray.tests.test_missing.da"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_limits": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.assert_equal",
    "xarray.tests.requires_bottleneck",
    "xarray.tests.test_missing.da"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_methods": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.requires_scipy",
    "xarray.tests.test_missing.da"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_multiindex_raises": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "TypeError",
    "numpy.nan",
    "numpy.random.randn",
    "xarray.DataArray",
    "xarray.tests.raises_regex",
    "xarray.tests.test_missing.da"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_no_dim_raises": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.array",
    "numpy.float64",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.raises_regex",
    "xarray.tests.test_missing.da"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_nonans": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "xarray.DataArray",
    "xarray.tests.assert_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_pd_compat": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.testing.assert_allclose",
    "pandas.isnull",
    "xarray.tests.requires_scipy",
    "xarray.tests.test_missing.da",
    "xarray.tests.test_missing.itertools",
    "xarray.tests.test_missing.make_interpolate_example_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_pd_compat_non_uniform_index": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.testing.assert_allclose",
    "pandas.isnull",
    "xarray.tests.requires_scipy",
    "xarray.tests.test_missing.da",
    "xarray.tests.test_missing.itertools",
    "xarray.tests.test_missing.make_interpolate_example_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_pd_compat_polynomial": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "xarray.tests.requires_scipy",
    "xarray.tests.test_missing.da",
    "xarray.tests.test_missing.itertools",
    "xarray.tests.test_missing.make_interpolate_example_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_unsorted_index_raises": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.float64",
    "xarray.DataArray",
    "xarray.tests.raises_regex",
    "xarray.tests.requires_scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_use_coordinate": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.Variable",
    "xarray.tests.assert_equal",
    "xarray.tests.test_missing.da"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolators": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "f",
    "interpolator",
    "numpy.array",
    "numpy.float64",
    "pandas.isnull",
    "xarray.core.missing.NumpyInterpolator",
    "xarray.core.missing.ScipyInterpolator",
    "xarray.core.missing.SplineInterpolator",
    "xarray.tests.requires_scipy"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_scipy_methods_function": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "xarray.tests.requires_scipy",
    "xarray.tests.test_missing.da",
    "xarray.tests.test_missing.make_interpolate_example_data",
    "xarray.tests.test_missing.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_missing.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_nputils": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_nputils.NumpyVIndexAdapter": {
  "data": {
   "shadows": "xarray.core.nputils.NumpyVIndexAdapter"
  },
  "type": "import"
 },
 "xarray.tests.test_nputils._is_contiguous": {
  "data": {
   "shadows": "xarray.core.nputils._is_contiguous"
  },
  "type": "import"
 },
 "xarray.tests.test_nputils.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "xarray.tests.test_nputils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_nputils.rolling_window": {
  "data": {
   "shadows": "xarray.core.nputils.rolling_window"
  },
  "type": "import"
 },
 "xarray.tests.test_nputils.test_is_contiguous": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "xarray.core.nputils._is_contiguous"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_nputils.test_rolling": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.nan",
    "numpy.stack",
    "numpy.testing.assert_array_equal",
    "xarray.core.nputils.rolling_window"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_nputils.test_vindex": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "numpy.zeros_like",
    "xarray.core.nputils.NumpyVIndexAdapter"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_options.FILE_CACHE": {
  "data": {
   "shadows": "xarray.backends.file_manager.FILE_CACHE"
  },
  "type": "import"
 },
 "xarray.tests.test_options.OPTIONS": {
  "data": {
   "shadows": "xarray.core.options.OPTIONS"
  },
  "type": "import"
 },
 "xarray.tests.test_options.TestAttrRetention": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_options.TestAttrRetention.test_concat_attr_retention": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "xarray.concat",
    "xarray.tests.test_options.create_test_dataset_attrs"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options.TestAttrRetention.test_dataarray_attr_retention": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "xarray.tests.test_options.create_test_dataarray_attrs",
    "xarray.tests.test_options.xarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options.TestAttrRetention.test_dataset_attr_retention": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "xarray.tests.test_options.create_test_dataset_attrs",
    "xarray.tests.test_options.xarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options.TestAttrRetention.test_groupby_attr_retention": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "xarray.tests.test_options.xarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options.TestAttrRetention.test_merge_attr_retention": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "xarray.merge",
    "xarray.tests.test_options.create_test_dataarray_attrs",
    "xarray.tests.test_options.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options._get_keep_attrs": {
  "data": {
   "shadows": "xarray.core.options._get_keep_attrs"
  },
  "type": "import"
 },
 "xarray.tests.test_options.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_options.concat": {
  "data": {
   "shadows": "xarray.concat"
  },
  "type": "import"
 },
 "xarray.tests.test_options.create_test_data": {
  "data": {
   "shadows": "xarray.tests.test_dataset.create_test_data"
  },
  "type": "import"
 },
 "xarray.tests.test_options.create_test_dataarray_attrs": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options.create_test_dataset_attrs": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "xarray.tests.test_dataset.create_test_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_options.merge": {
  "data": {
   "shadows": "xarray.merge"
  },
  "type": "import"
 },
 "xarray.tests.test_options.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_options.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_options.test_arithmetic_join": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "xarray.core.options.OPTIONS",
    "xarray.tests.test_options.pytest",
    "xarray.tests.test_options.xarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options.test_display_width": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "xarray.tests.test_options.pytest",
    "xarray.tests.test_options.xarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options.test_enable_cftimeindex": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "xarray.core.options.OPTIONS",
    "xarray.tests.test_options.pytest",
    "xarray.tests.test_options.xarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options.test_file_cache_maxsize": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "xarray.backends.file_manager.FILE_CACHE.maxsize",
    "xarray.tests.test_options.pytest",
    "xarray.tests.test_options.xarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options.test_invalid_option_raises": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ValueError",
    "xarray.tests.test_options.pytest",
    "xarray.tests.test_options.xarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options.test_keep_attrs": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ValueError",
    "xarray.core.options.OPTIONS",
    "xarray.core.options._get_keep_attrs",
    "xarray.tests.test_options.pytest",
    "xarray.tests.test_options.xarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options.test_nested_options": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "xarray.core.options.OPTIONS",
    "xarray.tests.test_options.xarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_options.xarray": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_plot": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array"
   ]
  },
  "type": "module"
 },
 "xarray.tests.test_plot.Common2dMixin": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_plot.Common2dMixin.setUp": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "getattr",
    "numpy.arange",
    "numpy.meshgrid",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_1d_raises_valueerror": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_2d_coord_with_interval": {
  "data": {
   "lineno": 1171,
   "symbols_in_volume": [
    "getattr",
    "range"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_2d_function_and_method_signature_same": {
  "data": {
   "lineno": 1078,
   "symbols_in_volume": [
    "xarray.tests.test_plot.inspect"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_3d_raises_valueerror": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_bad_x_string_exception": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_can_change_default_cmap": {
  "data": {
   "lineno": 919
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_can_pass_in_axis": {
  "data": {
   "lineno": 835
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_can_plot_all_nans": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "numpy.full",
    "numpy.nan",
    "xarray.DataArray",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_can_plot_axis_size_one": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "numpy.ones",
    "xarray.DataArray",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_cmap_and_color_both": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "ValueError",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_colorbar_default_label": {
  "data": {
   "lineno": 995,
   "symbols_in_volume": [
    "xarray.tests.test_plot.text_in_fig"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_colorbar_kwargs": {
  "data": {
   "lineno": 1009,
   "symbols_in_volume": [
    "ValueError",
    "matplotlib.pyplot.subplots",
    "xarray.tests.test_plot.pytest",
    "xarray.tests.test_plot.text_in_fig"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_colormap_error_norm_and_vmin_vmax": {
  "data": {
   "lineno": 1177,
   "symbols_in_volume": [
    "ValueError",
    "matplotlib.colors.LogNorm",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_convenient_facetgrid": {
  "data": {
   "lineno": 1085,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.ndenumerate",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_convenient_facetgrid_4d": {
  "data": {
   "lineno": 1117,
   "symbols_in_volume": [
    "assert_array_equal",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_coord_strings": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_default_cmap": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_default_title": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_disallows_rgb_arg": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "xarray.DataArray",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_diverging_color_limits": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "abs",
    "round"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_facetgrid_cbar_kwargs": {
  "data": {
   "lineno": 1150,
   "symbols_in_volume": [
    "hasattr",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_facetgrid_cmap": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "len",
    "numpy.linspace",
    "numpy.random.random",
    "set",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_facetgrid_map_only_appends_mappables": {
  "data": {
   "lineno": 1127,
   "symbols_in_volume": [
    "matplotlib.pyplot.plot",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_facetgrid_no_cbar_ax": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": [
    "ValueError",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_label_names": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_no_labels": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "xarray.tests.test_plot.text_in_fig"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_non_linked_coords": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_non_linked_coords_transpose": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_nonnumeric_index_raises_typeerror": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "TypeError",
    "raises_regex",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_plot_nans": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_positional_coord_string": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_seaborn_palette_as_cmap": {
  "data": {
   "lineno": 914
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_verbose_facetgrid": {
  "data": {
   "lineno": 1070,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.plot.FacetGrid",
    "xarray.tests.test_plot.easy_array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_viridis_cmap": {
  "data": {
   "lineno": 903
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_x_ticks_are_rotated_for_time": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.gca",
    "numpy.random.randn",
    "pandas.date_range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_xy_strings": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_xyincrease_defaults": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_xyincrease_false_changes_axes": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "abs",
    "all",
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_xyincrease_true_changes_axes": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "abs",
    "all",
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.DataArray": {
  "data": {
   "shadows": "xarray.DataArray"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.PlotTestCase": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_plot.PlotTestCase.contourf_called": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "len",
    "matplotlib.collections.PathCollection",
    "matplotlib.pyplot.gca",
    "plotmethod"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.PlotTestCase.imshow_called": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "len",
    "matplotlib.image.AxesImage",
    "matplotlib.pyplot.gca",
    "plotmethod",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.PlotTestCase.pass_in_axis": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "matplotlib.pyplot.subplots",
    "plotmethod"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.PlotTestCase.setup": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "matplotlib.pyplot.close",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestAxesKwargs": {
  "data": {
   "lineno": 1860,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestAxesKwargs.test_xincrease_kwarg": {
  "data": {
   "lineno": 1862,
   "symbols_in_volume": [
    "matplotlib.pyplot.clf",
    "matplotlib.pyplot.gca",
    "xarray.tests.test_plot.pytest",
    "xarray.tests.test_plot.test_da_list"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestAxesKwargs.test_xlim_kwarg": {
  "data": {
   "lineno": 1891,
   "symbols_in_volume": [
    "matplotlib.pyplot.clf",
    "matplotlib.pyplot.gca",
    "xarray.tests.test_plot.pytest",
    "xarray.tests.test_plot.test_da_list"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestAxesKwargs.test_xscale_kwarg": {
  "data": {
   "lineno": 1876,
   "symbols_in_volume": [
    "matplotlib.pyplot.clf",
    "matplotlib.pyplot.gca",
    "xarray.tests.test_plot.pytest",
    "xarray.tests.test_plot.test_da_list"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestAxesKwargs.test_xticks_kwarg": {
  "data": {
   "lineno": 1905,
   "symbols_in_volume": [
    "matplotlib.pyplot.clf",
    "matplotlib.pyplot.gca",
    "numpy.all",
    "numpy.arange",
    "xarray.tests.test_plot.pytest",
    "xarray.tests.test_plot.test_da_list"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestAxesKwargs.test_yincrease_kwarg": {
  "data": {
   "lineno": 1869,
   "symbols_in_volume": [
    "matplotlib.pyplot.clf",
    "matplotlib.pyplot.gca",
    "xarray.tests.test_plot.pytest",
    "xarray.tests.test_plot.test_da_list"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestAxesKwargs.test_ylim_kwarg": {
  "data": {
   "lineno": 1898,
   "symbols_in_volume": [
    "matplotlib.pyplot.clf",
    "matplotlib.pyplot.gca",
    "xarray.tests.test_plot.pytest",
    "xarray.tests.test_plot.test_da_list"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestAxesKwargs.test_yscale_kwarg": {
  "data": {
   "lineno": 1883,
   "symbols_in_volume": [
    "matplotlib.pyplot.clf",
    "matplotlib.pyplot.gca",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestAxesKwargs.test_yticks_kwarg": {
  "data": {
   "lineno": 1912,
   "symbols_in_volume": [
    "matplotlib.pyplot.clf",
    "matplotlib.pyplot.gca",
    "numpy.all",
    "numpy.arange",
    "xarray.tests.test_plot.pytest",
    "xarray.tests.test_plot.test_da_list"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestContour": {
  "data": {
   "lineno": 1237,
   "symbols_in_volume": [
    "staticmethod",
    "xarray.plot.contour",
    "xarray.tests.test_plot.Common2dMixin",
    "xarray.tests.test_plot.PlotTestCase",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestContour.list_of_colors_in_cmap_deprecated": {
  "data": {
   "lineno": 1270,
   "symbols_in_volume": [
    "Exception",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestContour.test_2d_coord_names": {
  "data": {
   "lineno": 1274,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestContour.test_cmap_and_color_both": {
  "data": {
   "lineno": 1266,
   "symbols_in_volume": [
    "ValueError",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestContour.test_colors": {
  "data": {
   "lineno": 1242,
   "symbols_in_volume": [
    "_color_as_tuple"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestContour.test_colors._color_as_tuple": {
  "data": {
   "lineno": 1245,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestContour.test_single_level": {
  "data": {
   "lineno": 1282
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestContourf": {
  "data": {
   "lineno": 1187,
   "symbols_in_volume": [
    "staticmethod",
    "xarray.plot.contourf",
    "xarray.tests.test_plot.Common2dMixin",
    "xarray.tests.test_plot.PlotTestCase",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestContourf.test_2d_coord_names": {
  "data": {
   "lineno": 1220,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestContourf.test_contourf_called": {
  "data": {
   "lineno": 1192,
   "symbols_in_volume": [
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestContourf.test_extend": {
  "data": {
   "lineno": 1202,
   "symbols_in_volume": [
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestContourf.test_levels": {
  "data": {
   "lineno": 1228,
   "symbols_in_volume": [
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestContourf.test_primitive_artist_returned": {
  "data": {
   "lineno": 1198,
   "symbols_in_volume": [
    "isinstance",
    "matplotlib.contour.QuadContourSet"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDatetimePlot": {
  "data": {
   "lineno": 1799,
   "symbols_in_volume": [
    "xarray.tests.test_plot.PlotTestCase"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestDatetimePlot.setUp": {
  "data": {
   "lineno": 1800,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.arange",
    "numpy.array",
    "numpy.pi",
    "numpy.sin",
    "xarray.DataArray",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDatetimePlot.test_datetime_line_plot": {
  "data": {
   "lineno": 1813
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDetermineCmapParams": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestDetermineCmapParams.setUp": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "numpy.linspace",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDetermineCmapParams.test_center": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "xarray.plot.utils._determine_cmap_params"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDetermineCmapParams.test_cmap_divergent_option": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "xarray.plot.utils._determine_cmap_params",
    "xarray.set_options"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDetermineCmapParams.test_cmap_sequential_explicit_option": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "matplotlib.cm.magma",
    "xarray.plot.utils._determine_cmap_params",
    "xarray.set_options"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDetermineCmapParams.test_cmap_sequential_option": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "xarray.plot.utils._determine_cmap_params",
    "xarray.set_options"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDetermineCmapParams.test_divergentcontrol": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "xarray.plot.utils._determine_cmap_params"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDetermineCmapParams.test_integer_levels": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "xarray.plot.utils._determine_cmap_params",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDetermineCmapParams.test_list_levels": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "assert_array_equal",
    "list",
    "numpy.array",
    "pandas.Index",
    "wrap_levels",
    "xarray.DataArray",
    "xarray.plot.utils._determine_cmap_params"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDetermineCmapParams.test_nan_inf_are_ignored": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.nan",
    "xarray.plot.utils._determine_cmap_params"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDetermineCmapParams.test_norm_sets_vmin_vmax": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "matplotlib.colors.LogNorm",
    "xarray.plot.utils._determine_cmap_params",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDetermineCmapParams.test_robust": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "numpy.percentile",
    "xarray.plot.utils._determine_cmap_params"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDiscreteColorMap": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestDiscreteColorMap.setUp": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.dstack",
    "numpy.linalg.norm",
    "numpy.meshgrid",
    "xarray.DataArray",
    "xarray.tests.test_plot.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDiscreteColorMap.test_build_discrete_cmap": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "assert_array_equal",
    "len",
    "max",
    "min",
    "xarray.plot.utils._build_discrete_cmap",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDiscreteColorMap.test_discrete_colormap_int_levels": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "getattr",
    "len",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDiscreteColorMap.test_discrete_colormap_list_levels_and_vmin_or_vmax": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDiscreteColorMap.test_discrete_colormap_list_of_levels": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "assert_array_equal",
    "getattr",
    "len",
    "max",
    "min",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDiscreteColorMap.test_discrete_colormap_provided_boundary_norm": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "matplotlib.colors.BoundaryNorm",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDiscreteColorMap.test_recover_from_seaborn_jet_exception": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "len",
    "numpy.ndarray",
    "type",
    "xarray.plot.utils._color_palette",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid": {
  "data": {
   "lineno": 1459,
   "symbols_in_volume": [
    "xarray.tests.test_plot.PlotTestCase"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestFacetGrid.setUp": {
  "data": {
   "lineno": 1460,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.plot.FacetGrid",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_can_set_norm": {
  "data": {
   "lineno": 1585,
   "symbols_in_volume": [
    "matplotlib.colors.SymLogNorm",
    "matplotlib.image.AxesImage",
    "matplotlib.pyplot.gcf",
    "xarray.plot.imshow",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_can_set_vmin_vmax": {
  "data": {
   "lineno": 1575,
   "symbols_in_volume": [
    "matplotlib.image.AxesImage",
    "matplotlib.pyplot.gcf",
    "numpy.allclose",
    "numpy.array",
    "xarray.plot.imshow",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_colorbar": {
  "data": {
   "lineno": 1504,
   "symbols_in_volume": [
    "len",
    "matplotlib.image.AxesImage",
    "matplotlib.pyplot.gcf",
    "numpy.allclose",
    "numpy.array",
    "xarray.plot.imshow",
    "xarray.tests.test_plot.find_possible_colorbars",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_empty_cell": {
  "data": {
   "lineno": 1518,
   "symbols_in_volume": [
    "xarray.plot.FacetGrid",
    "xarray.plot.imshow",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_facetgrid_colorbar": {
  "data": {
   "lineno": 1664,
   "symbols_in_volume": [
    "len",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.find_possible_colorbars",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_facetgrid_polar": {
  "data": {
   "lineno": 1678,
   "symbols_in_volume": [
    "dict",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_figure_size": {
  "data": {
   "lineno": 1592,
   "symbols_in_volume": [
    "ValueError",
    "assert_array_equal",
    "matplotlib.pyplot.gca",
    "raises_regex",
    "xarray.plot.FacetGrid",
    "xarray.plot.plot",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_float_index": {
  "data": {
   "lineno": 1541,
   "symbols_in_volume": [
    "xarray.plot.FacetGrid",
    "xarray.plot.imshow",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_groups": {
  "data": {
   "lineno": 1532,
   "symbols_in_volume": [
    "assert_equal",
    "xarray.plot.imshow",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_map": {
  "data": {
   "lineno": 1630,
   "symbols_in_volume": [
    "Ellipsis",
    "matplotlib.pyplot.contourf",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_map_dataset": {
  "data": {
   "lineno": 1637,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.contourf",
    "xarray.plot.FacetGrid",
    "xarray.tests.test_plot.find_possible_colorbars",
    "xarray.tests.test_plot.pytest",
    "xarray.tests.test_plot.text_in_fig"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_names_appear_somewhere": {
  "data": {
   "lineno": 1480,
   "symbols_in_volume": [
    "xarray.plot.contourf",
    "xarray.tests.test_plot.pytest",
    "xarray.tests.test_plot.text_in_fig",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_no_args": {
  "data": {
   "lineno": 1469,
   "symbols_in_volume": [
    "xarray.plot.contourf",
    "xarray.tests.test_plot.pytest",
    "xarray.tests.test_plot.text_in_fig"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_nonunique_index_error": {
  "data": {
   "lineno": 1547,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.plot.FacetGrid",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_norow_nocol_error": {
  "data": {
   "lineno": 1527,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.plot.FacetGrid",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_num_ticks": {
  "data": {
   "lineno": 1615,
   "symbols_in_volume": [
    "len",
    "xarray.plot.imshow",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_robust": {
  "data": {
   "lineno": 1553,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "float",
    "max",
    "numpy.zeros",
    "set",
    "xarray.DataArray",
    "xarray.plot.FacetGrid",
    "xarray.plot.imshow",
    "xarray.tests.test_plot.pytest",
    "xarray.tests.test_plot.text_in_fig"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_set_axis_labels": {
  "data": {
   "lineno": 1656,
   "symbols_in_volume": [
    "xarray.plot.contourf",
    "xarray.tests.test_plot.pytest",
    "xarray.tests.test_plot.text_in_fig"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_text_not_super_long": {
  "data": {
   "lineno": 1492,
   "symbols_in_volume": [
    "len",
    "max",
    "xarray.plot.FacetGrid",
    "xarray.plot.contour",
    "xarray.tests.test_plot.pytest",
    "xarray.tests.test_plot.text_in_fig"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid4d": {
  "data": {
   "lineno": 1688,
   "symbols_in_volume": [
    "xarray.tests.test_plot.PlotTestCase",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestFacetGrid4d.setUp": {
  "data": {
   "lineno": 1690,
   "symbols_in_volume": [
    "numpy.array",
    "str",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid4d.test_default_labels": {
  "data": {
   "lineno": 1701,
   "symbols_in_volume": [
    "xarray.plot.FacetGrid",
    "xarray.plot.imshow",
    "xarray.tests.test_plot.pytest",
    "xarray.tests.test_plot.substring_in_axes",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetedLinePlots": {
  "data": {
   "lineno": 1717,
   "symbols_in_volume": [
    "xarray.tests.test_plot.PlotTestCase",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestFacetedLinePlots.setUp": {
  "data": {
   "lineno": 1719,
   "symbols_in_volume": [
    "numpy.random.randn",
    "range",
    "xarray.DataArray",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetedLinePlots.test_axes_in_faceted_plot": {
  "data": {
   "lineno": 1783,
   "symbols_in_volume": [
    "ValueError",
    "matplotlib.pyplot.axes",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetedLinePlots.test_both_x_and_y": {
  "data": {
   "lineno": 1778,
   "symbols_in_volume": [
    "ValueError",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetedLinePlots.test_default_labels": {
  "data": {
   "lineno": 1748,
   "symbols_in_volume": [
    "str",
    "xarray.tests.test_plot.substring_in_axes",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetedLinePlots.test_facetgrid_shape": {
  "data": {
   "lineno": 1733,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetedLinePlots.test_figsize_and_size": {
  "data": {
   "lineno": 1788,
   "symbols_in_volume": [
    "ValueError",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetedLinePlots.test_set_axis_labels": {
  "data": {
   "lineno": 1770,
   "symbols_in_volume": [
    "xarray.tests.test_plot.text_in_fig"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetedLinePlots.test_test_empty_cell": {
  "data": {
   "lineno": 1762
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetedLinePlots.test_unnamed_args": {
  "data": {
   "lineno": 1740,
   "symbols_in_volume": [
    "isinstance",
    "matplotlib.lines.Line2D"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetedLinePlots.test_wrong_num_of_dimensions": {
  "data": {
   "lineno": 1793,
   "symbols_in_volume": [
    "ValueError",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow": {
  "data": {
   "lineno": 1320,
   "symbols_in_volume": [
    "staticmethod",
    "xarray.plot.imshow",
    "xarray.tests.test_plot.Common2dMixin",
    "xarray.tests.test_plot.PlotTestCase",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestImshow.test_2d_coord_names": {
  "data": {
   "lineno": 1362,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_cannot_change_mpl_aspect": {
  "data": {
   "lineno": 1340,
   "symbols_in_volume": [
    "ValueError",
    "matplotlib.pyplot.gca",
    "matplotlib.pyplot.gcf",
    "raises_regex",
    "tuple",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_default_aspect_is_auto": {
  "data": {
   "lineno": 1336,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_imshow_called": {
  "data": {
   "lineno": 1325,
   "symbols_in_volume": [
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_imshow_rgb_values_in_valid_range": {
  "data": {
   "lineno": 1434,
   "symbols_in_volume": [
    "matplotlib.pyplot.subplots",
    "numpy.arange",
    "numpy.uint8",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_normalize_rgb_imshow": {
  "data": {
   "lineno": 1414,
   "symbols_in_volume": [
    "dict",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_normalize_rgb_one_arg_error": {
  "data": {
   "lineno": 1424,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_origin_overrides_xyincrease": {
  "data": {
   "lineno": 1447,
   "symbols_in_volume": [
    "matplotlib.pyplot.clf",
    "matplotlib.pyplot.xlim",
    "matplotlib.pyplot.ylim",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_plot_rgb_faceted": {
  "data": {
   "lineno": 1381,
   "symbols_in_volume": [
    "len",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.find_possible_colorbars"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_plot_rgb_image": {
  "data": {
   "lineno": 1366,
   "symbols_in_volume": [
    "len",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.find_possible_colorbars"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_plot_rgb_image_explicit": {
  "data": {
   "lineno": 1373,
   "symbols_in_volume": [
    "len",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.find_possible_colorbars"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_plot_rgba_image_transposed": {
  "data": {
   "lineno": 1389,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_primitive_artist_returned": {
  "data": {
   "lineno": 1351,
   "symbols_in_volume": [
    "isinstance",
    "matplotlib.image.AxesImage",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_regression_rgb_imshow_dim_size_one": {
  "data": {
   "lineno": 1441,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_rgb_errors_bad_dim_sizes": {
  "data": {
   "lineno": 1409,
   "symbols_in_volume": [
    "ValueError",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_rgb_errors_too_many_dims": {
  "data": {
   "lineno": 1404,
   "symbols_in_volume": [
    "ValueError",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_seaborn_palette_needs_levels": {
  "data": {
   "lineno": 1356,
   "symbols_in_volume": [
    "ValueError",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_warns_ambigious_dim": {
  "data": {
   "lineno": 1396,
   "symbols_in_volume": [
    "UserWarning",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_xy_pixel_centered": {
  "data": {
   "lineno": 1331,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPcolormesh": {
  "data": {
   "lineno": 1289,
   "symbols_in_volume": [
    "staticmethod",
    "xarray.plot.pcolormesh",
    "xarray.tests.test_plot.Common2dMixin",
    "xarray.tests.test_plot.PlotTestCase"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestPcolormesh.test_2d_coord_names": {
  "data": {
   "lineno": 1301,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPcolormesh.test_dont_infer_interval_breaks_for_cartopy": {
  "data": {
   "lineno": 1309,
   "symbols_in_volume": [
    "isinstance",
    "matplotlib.collections.QuadMesh",
    "matplotlib.pyplot.gca",
    "setattr"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPcolormesh.test_everything_plotted": {
  "data": {
   "lineno": 1297
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPcolormesh.test_primitive_artist_returned": {
  "data": {
   "lineno": 1293,
   "symbols_in_volume": [
    "isinstance",
    "matplotlib.collections.QuadMesh"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "xarray.tests.test_plot.PlotTestCase"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestPlot.setup_array": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test1d": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test2d_1d_2d_coordinates_contourf": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "numpy.linspace",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test2d_nonuniform_calls_contourf": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test2d_uniform_calls_imshow": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test3d": {
  "data": {
   "lineno": 229
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_1d_x_y_kw": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "matplotlib.pyplot.subplots",
    "numpy.arange",
    "numpy.cos",
    "raises_regex",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_2d_before_squeeze": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_2d_coords_line_plot": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "matplotlib.pyplot.clf",
    "numpy.arange",
    "numpy.linspace",
    "numpy.meshgrid",
    "xarray.DataArray",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_2d_line": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_2d_line_accepts_hue_kw": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "matplotlib.pyplot.cla",
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_2d_line_accepts_legend_kw": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "matplotlib.pyplot.cla",
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_2d_line_accepts_x_kw": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "matplotlib.pyplot.cla",
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test__infer_interval_breaks": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "ValueError",
    "assert_array_equal",
    "numpy.arange",
    "numpy.array",
    "numpy.meshgrid",
    "numpy.testing.assert_allclose",
    "numpy.timedelta64",
    "pandas.date_range",
    "xarray.plot.plot._infer_interval_breaks",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_can_pass_in_axis": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_convenient_facetgrid": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "ValueError",
    "assert_array_equal",
    "list",
    "matplotlib.pyplot.gca",
    "raises_regex",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_convenient_facetgrid_4d": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "ValueError",
    "assert_array_equal",
    "matplotlib.pyplot.gca",
    "raises_regex",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_coord_with_interval": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "xarray.ALL_DIMS"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_datetime_dimension": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca",
    "pandas.date_range",
    "range",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_geo_data": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca",
    "numpy.array",
    "numpy.sqrt",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_label_from_attrs": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "xarray.plot.utils.label_from_attrs"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_plot_size": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "ValueError",
    "matplotlib.pyplot.gca",
    "matplotlib.pyplot.gcf",
    "raises_regex",
    "tuple",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_subplot_kws": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "dict",
    "list",
    "matplotlib.colors.to_rgb",
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "xarray.tests.test_plot.PlotTestCase"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestPlot1D.setUp": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "len",
    "range",
    "xarray.DataArray",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_can_pass_in_axis": {
  "data": {
   "lineno": 407
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_format_string": {
  "data": {
   "lineno": 404
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_no_label_name_on_x_axis": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_no_label_name_on_y_axis": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_nonnumeric_index_raises_typeerror": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "TypeError",
    "raises_regex",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_plot_nans": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_primitive_returned": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "isinstance",
    "matplotlib.lines.Line2D"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_slice_in_title": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_x_ticks_are_rotated_for_time": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.gca",
    "numpy.arange",
    "pandas.date_range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_xlabel_is_data_name": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_xlabel_is_index_name": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_xyincrease_false_changes_axes": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "all",
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_ylabel_is_data_name": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotHistogram": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "xarray.tests.test_plot.PlotTestCase"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestPlotHistogram.setUp": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotHistogram.test_3d_array": {
  "data": {
   "lineno": 464
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotHistogram.test_can_pass_in_axis": {
  "data": {
   "lineno": 482
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotHistogram.test_can_pass_in_kwargs": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotHistogram.test_hist_coord_with_interval": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "xarray.ALL_DIMS"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotHistogram.test_plot_nans": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotHistogram.test_primitive_returned": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "isinstance",
    "matplotlib.patches.Rectangle"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotHistogram.test_title_is_histogram": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotHistogram.test_xlabel_uses_name": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotStep": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "xarray.tests.test_plot.PlotTestCase"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestPlotStep.setUp": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.tests.test_plot.easy_array",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotStep.test_coord_with_interval_step": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.gca",
    "xarray.ALL_DIMS"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotStep.test_step": {
  "data": {
   "lineno": 450
  },
  "type": "function"
 },
 "xarray.tests.test_plot._build_discrete_cmap": {
  "data": {
   "shadows": "xarray.plot.utils._build_discrete_cmap"
  },
  "type": "import"
 },
 "xarray.tests.test_plot._color_palette": {
  "data": {
   "shadows": "xarray.plot.utils._color_palette"
  },
  "type": "import"
 },
 "xarray.tests.test_plot._determine_cmap_params": {
  "data": {
   "shadows": "xarray.plot.utils._determine_cmap_params"
  },
  "type": "import"
 },
 "xarray.tests.test_plot._import_cftime": {
  "data": {
   "shadows": "xarray.coding.times._import_cftime"
  },
  "type": "import"
 },
 "xarray.tests.test_plot._infer_interval_breaks": {
  "data": {
   "shadows": "xarray.plot.plot._infer_interval_breaks"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.easy_array": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.find_possible_colorbars": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "matplotlib.collections.QuadMesh",
    "matplotlib.pyplot.gcf"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.import_seaborn": {
  "data": {
   "shadows": "xarray.plot.utils.import_seaborn"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.label_from_attrs": {
  "data": {
   "shadows": "xarray.plot.utils.label_from_attrs"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.substring_in_axes": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "matplotlib.text.Text",
    "set"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.test_da_list": {
  "data": {
   "lineno": 1855
  },
  "type": "constant"
 },
 "xarray.tests.test_plot.test_import_seaborn_no_warning": {
  "data": {
   "lineno": 1818,
   "symbols_in_volume": [
    "len",
    "xarray.plot.utils.import_seaborn",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.test_plot_cftime_coordinate_error": {
  "data": {
   "lineno": 1834,
   "symbols_in_volume": [
    "TypeError",
    "numpy.arange",
    "raises_regex",
    "xarray.DataArray",
    "xarray.coding.times._import_cftime"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.test_plot_cftime_data_error": {
  "data": {
   "lineno": 1845,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.arange",
    "raises_regex",
    "xarray.DataArray",
    "xarray.coding.times._import_cftime"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.test_plot_seaborn_no_import_warning": {
  "data": {
   "lineno": 1826,
   "symbols_in_volume": [
    "len",
    "xarray.plot.utils._color_palette",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.text_in_fig": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "matplotlib.pyplot.gcf",
    "matplotlib.text.Text",
    "xarray.tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_plot.xplt": {
  "data": {
   "shadows": "xarray.plot"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_testing": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_testing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_testing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_testing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_testing.test_allclose_regression": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "xarray.DataArray",
    "xarray.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_testing.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_tutorial": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_tutorial.DataArray": {
  "data": {
   "shadows": "xarray.DataArray"
  },
  "type": "import"
 },
 "xarray.tests.test_tutorial.TestLoadDataset": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_tutorial.TestLoadDataset.setUp": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "OSError",
    "xarray.core.pycompat.suppress",
    "xarray.tests.test_tutorial.os",
    "xarray.tests.test_tutorial.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_tutorial.TestLoadDataset.test_download_from_github": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "assert_identical",
    "range",
    "xarray.DataArray",
    "xarray.tutorial.open_dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_tutorial.TestLoadDataset.test_download_from_github_load_without_cache": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.tutorial.open_dataset"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_tutorial.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_tutorial.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_tutorial.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "xarray.tests.test_tutorial.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_tutorial.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_tutorial.suppress": {
  "data": {
   "shadows": "xarray.core.pycompat.suppress"
  },
  "type": "import"
 },
 "xarray.tests.test_tutorial.tutorial": {
  "data": {
   "shadows": "xarray.tutorial"
  },
  "type": "import"
 },
 "xarray.tests.test_ufuncs": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_ufuncs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_ufuncs.assert_identical": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "assert_array_equal",
    "float",
    "isinstance",
    "type",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.assert_identical_": {
  "data": {
   "shadows": "assert_identical"
  },
  "type": "import"
 },
 "xarray.tests.test_ufuncs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_ufuncs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_ufuncs.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "xarray.tests.test_ufuncs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_ufuncs.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_ufuncs.test_alignment": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.add",
    "numpy.nan",
    "xarray.Dataset",
    "xarray.set_options",
    "xarray.tests.test_ufuncs.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_binary": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "enumerate",
    "numpy.maximum",
    "numpy.zeros",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.tests.test_ufuncs.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_binary_out": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.frexp",
    "numpy.ones",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.tests.test_ufuncs.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_dask_defers_to_xarray": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "isinstance",
    "numpy.add",
    "numpy.ones",
    "xarray.DataArray",
    "xarray.tests.test_ufuncs.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_groupby": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "numpy.maximum",
    "raises_regex",
    "xarray.Dataset",
    "xarray.tests.test_ufuncs.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_gufunc_methods": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.add.reduce",
    "raises_regex",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_gufuncs": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.sin",
    "raises_regex",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_kwargs": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "numpy.add",
    "numpy.float64",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_numpy_ufuncs": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "dir",
    "getattr",
    "hasattr",
    "isinstance",
    "np_func",
    "numpy",
    "numpy.ndarray",
    "xarray.DataArray",
    "xarray.tests.test_ufuncs.pytest",
    "xarray.ufuncs"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_out": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.add",
    "numpy.array",
    "numpy.zeros",
    "raises_regex",
    "xarray.DataArray",
    "xarray.tests.test_ufuncs.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_unary": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.zeros",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.tests.test_ufuncs.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_xarray_defers_to_unrecognized_type": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "Other",
    "numpy.maximum",
    "numpy.sin",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_xarray_defers_to_unrecognized_type.Other": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_ufuncs.test_xarray_defers_to_unrecognized_type.Other.__array_ufunc__": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_xarray_handles_dask": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "isinstance",
    "numpy.add",
    "numpy.ones",
    "xarray.DataArray",
    "xarray.tests.test_ufuncs.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_xarray_ufuncs_deprecation": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "PendingDeprecationWarning",
    "len",
    "xarray.DataArray",
    "xarray.tests.test_ufuncs.pytest",
    "xarray.ufuncs.angle",
    "xarray.ufuncs.cos"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_xarray_ufuncs_pickle": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "cos_pickled",
    "xarray.tests.test_ufuncs.assert_identical",
    "xarray.tests.test_ufuncs.pickle",
    "xarray.ufuncs.cos"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_ufuncs.xu": {
  "data": {
   "shadows": "xarray.ufuncs"
  },
  "type": "import"
 },
 "xarray.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_utils.CFTimeIndex": {
  "data": {
   "shadows": "xarray.coding.cftimeindex.CFTimeIndex"
  },
  "type": "import"
 },
 "xarray.tests.test_utils.OrderedDict": {
  "data": {
   "shadows": "xarray.core.pycompat.OrderedDict"
  },
  "type": "import"
 },
 "xarray.tests.test_utils.TestAlias": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_utils.TestAlias.test": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "Warning",
    "old_method",
    "xarray.core.utils.alias",
    "xarray.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.TestAlias.test.new_method": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "xarray.tests.test_utils.TestArrayEquiv": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_utils.TestArrayEquiv.test_0d": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "xarray.core.duck_array_ops.array_equiv"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.TestDictionaries": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_utils.TestDictionaries.setup": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "xarray.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.TestDictionaries.test_chain_map": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "set",
    "xarray.core.utils.ChainMap"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.TestDictionaries.test_dict_equiv": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "dict",
    "numpy.arange",
    "numpy.array",
    "numpy.inf",
    "numpy.nan",
    "xarray.core.pycompat.OrderedDict",
    "xarray.core.utils.dict_equiv"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.TestDictionaries.test_equivalent": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.nan",
    "numpy.zeros",
    "xarray.core.utils.equivalent"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.TestDictionaries.test_frozen": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "repr",
    "xarray.core.utils.Frozen",
    "xarray.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.TestDictionaries.test_ordered_dict_intersection": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "xarray.core.utils.ordered_dict_intersection"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.TestDictionaries.test_safe": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "xarray.core.utils.update_safety_check"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.TestDictionaries.test_sorted_keys_dict": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "list",
    "repr",
    "xarray.core.utils.SortedKeysDict"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.TestDictionaries.test_unsafe": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "ValueError",
    "xarray.core.utils.update_safety_check",
    "xarray.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.Test_hashable": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_utils.Test_hashable.test_hashable": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "xarray.core.utils.hashable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.Test_is_uniform_and_sorted": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_utils.Test_is_uniform_and_sorted.test_not_sorted_not_uniform": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "xarray.core.utils.is_uniform_spaced"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.Test_is_uniform_and_sorted.test_not_sorted_uniform": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "xarray.core.utils.is_uniform_spaced"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.Test_is_uniform_and_sorted.test_relative_tolerance": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "xarray.core.utils.is_uniform_spaced"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.Test_is_uniform_and_sorted.test_sorted_not_uniform": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "xarray.core.utils.is_uniform_spaced"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.Test_is_uniform_and_sorted.test_sorted_uniform": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "numpy.arange",
    "xarray.core.utils.is_uniform_spaced"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.Test_is_uniform_and_sorted.test_two_numbers": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "xarray.core.utils.is_uniform_spaced"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_utils.assert_identical": {
  "data": {
   "shadows": "xarray.testing.assert_identical"
  },
  "type": "import"
 },
 "xarray.tests.test_utils.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.tests.test_utils.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "xarray.tests.test_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_utils.duck_array_ops": {
  "data": {
   "shadows": "xarray.core.duck_array_ops"
  },
  "type": "import"
 },
 "xarray.tests.test_utils.either_dict_or_kwargs": {
  "data": {
   "shadows": "xarray.core.utils.either_dict_or_kwargs"
  },
  "type": "import"
 },
 "xarray.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_utils.test_dask_array_is_scalar": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "dask.array.arange",
    "xarray.core.utils.is_scalar"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.test_datetime_to_numeric_cftime": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.coords",
    "dask.array.isel",
    "numpy.arange",
    "numpy.float32",
    "xarray.DataArray",
    "xarray.cftime_range",
    "xarray.core.utils.datetime_to_numeric",
    "xarray.testing.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.test_datetime_to_numeric_datetime64": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.coords",
    "dask.array.isel",
    "numpy.arange",
    "numpy.float32",
    "pandas.date_range",
    "xarray.DataArray",
    "xarray.core.utils.datetime_to_numeric",
    "xarray.testing.assert_identical"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.test_either_dict_or_kwargs": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "xarray.core.utils.either_dict_or_kwargs",
    "xarray.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.test_hidden_key_dict": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "xarray.core.utils.HiddenKeyDict",
    "xarray.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.test_is_grib_path": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "xarray.core.utils.is_grib_path"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.test_is_remote_uri": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "xarray.core.utils.is_remote_uri"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.test_multiindex_from_product_levels": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "pandas.Index",
    "pandas.MultiIndex.from_product",
    "xarray.core.utils.multiindex_from_product_levels"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.test_multiindex_from_product_levels_non_unique": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "pandas.Index",
    "xarray.core.utils.multiindex_from_product_levels"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.test_repr_object": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "repr",
    "xarray.core.utils.ReprObject"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.test_safe_cast_to_index": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.arange",
    "numpy.timedelta64",
    "object",
    "pandas.Index",
    "pandas.date_range",
    "xarray.core.utils.safe_cast_to_index"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.test_safe_cast_to_index_cftimeindex": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "_all_cftime_date_types",
    "assert_array_equal",
    "date_type",
    "isinstance",
    "numpy.array",
    "pandas.Index",
    "range",
    "type",
    "xarray.coding.cftimeindex.CFTimeIndex",
    "xarray.core.utils.safe_cast_to_index",
    "xarray.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.test_safe_cast_to_index_datetime_datetime": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "assert_array_equal",
    "datetime.datetime",
    "isinstance",
    "numpy.array",
    "pandas.Index",
    "range",
    "xarray.core.utils.safe_cast_to_index",
    "xarray.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_utils.utils": {
  "data": {
   "shadows": "xarray.core.utils"
  },
  "type": "import"
 },
 "xarray.tests.test_utils.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_variable": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_variable.BasicIndexer": {
  "data": {
   "shadows": "xarray.core.indexing.BasicIndexer"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.Coordinate": {
  "data": {
   "shadows": "xarray.Coordinate"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.CopyOnWriteArray": {
  "data": {
   "shadows": "xarray.core.indexing.CopyOnWriteArray"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.DaskIndexingAdapter": {
  "data": {
   "shadows": "xarray.core.indexing.DaskIndexingAdapter"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.Dataset": {
  "data": {
   "shadows": "xarray.Dataset"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.IndexVariable": {
  "data": {
   "shadows": "xarray.IndexVariable"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.LazilyOuterIndexedArray": {
  "data": {
   "shadows": "xarray.core.indexing.LazilyOuterIndexedArray"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.MemoryCachedArray": {
  "data": {
   "shadows": "xarray.core.indexing.MemoryCachedArray"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.NDArrayMixin": {
  "data": {
   "shadows": "xarray.core.utils.NDArrayMixin"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.NumpyIndexingAdapter": {
  "data": {
   "shadows": "xarray.core.indexing.NumpyIndexingAdapter"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.OrderedDict": {
  "data": {
   "shadows": "xarray.core.pycompat.OrderedDict"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.OuterIndexer": {
  "data": {
   "shadows": "xarray.core.indexing.OuterIndexer"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.PY3": {
  "data": {
   "shadows": "xarray.core.pycompat.PY3"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.PandasIndexAdapter": {
  "data": {
   "shadows": "xarray.core.indexing.PandasIndexAdapter"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.TestAsCompatibleData": {
  "data": {
   "lineno": 1842,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_converted_types": {
  "data": {
   "lineno": 1853,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.asarray",
    "numpy.ndarray",
    "pandas.DataFrame",
    "type",
    "xarray.core.variable.as_compatible_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_datetime": {
  "data": {
   "lineno": 1874,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.array",
    "numpy.asarray",
    "numpy.datetime64",
    "numpy.dtype",
    "numpy.ndarray",
    "source_ndarray",
    "type",
    "xarray.core.variable.as_compatible_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_full_like": {
  "data": {
   "lineno": 1900,
   "symbols_in_volume": [
    "assert_identical",
    "bool",
    "xarray.Variable",
    "xarray.core.common.full_like"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_full_like_dask": {
  "data": {
   "lineno": 1914,
   "symbols_in_volume": [
    "bool",
    "check",
    "isinstance",
    "numpy.full_like",
    "numpy.ndarray",
    "tuple",
    "xarray.Variable",
    "xarray.core.common.full_like"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_full_like_dask.check": {
  "data": {
   "lineno": 1919,
   "symbols_in_volume": [
    "assert_array_equal"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_masked_array": {
  "data": {
   "lineno": 1860,
   "symbols_in_volume": [
    "assert_array_equal",
    "float",
    "int",
    "numpy.arange",
    "numpy.dtype",
    "numpy.ma.MaskedArray",
    "numpy.nan",
    "xarray.core.variable.as_compatible_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_ones_like": {
  "data": {
   "lineno": 1951,
   "symbols_in_volume": [
    "assert_identical",
    "int",
    "xarray.Variable",
    "xarray.core.common.full_like",
    "xarray.core.common.ones_like"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_unchanged_types": {
  "data": {
   "lineno": 1843,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.asarray",
    "pandas.date_range",
    "source_ndarray",
    "t",
    "xarray.core.indexing.LazilyOuterIndexedArray",
    "xarray.core.indexing.PandasIndexAdapter",
    "xarray.core.variable.as_compatible_data"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_unsupported_type": {
  "data": {
   "lineno": 1959,
   "symbols_in_volume": [
    "CustomArray",
    "CustomIndexable",
    "isinstance",
    "numpy.arange",
    "numpy.ndarray",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_unsupported_type.CustomArray": {
  "data": {
   "lineno": 1961,
   "symbols_in_volume": [
    "xarray.core.utils.NDArrayMixin"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_unsupported_type.CustomArray.__init__": {
  "data": {
   "lineno": 1962
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_unsupported_type.CustomIndexable": {
  "data": {
   "lineno": 1965,
   "symbols_in_volume": [
    "xarray.core.indexing.ExplicitlyIndexed"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_zeros_like": {
  "data": {
   "lineno": 1943,
   "symbols_in_volume": [
    "assert_identical",
    "int",
    "xarray.Variable",
    "xarray.core.common.full_like",
    "xarray.core.common.zeros_like"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestBackendIndexing": {
  "data": {
   "lineno": 1983,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_variable.TestBackendIndexing.check_orthogonal_indexing": {
  "data": {
   "lineno": 1990,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestBackendIndexing.check_vectorized_indexing": {
  "data": {
   "lineno": 1994,
   "symbols_in_volume": [
    "numpy.allclose",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestBackendIndexing.setUp": {
  "data": {
   "lineno": 1986,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.random.random",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestBackendIndexing.test_CopyOnWriteArray": {
  "data": {
   "lineno": 2023,
   "symbols_in_volume": [
    "xarray.Variable",
    "xarray.core.indexing.CopyOnWriteArray",
    "xarray.core.indexing.LazilyOuterIndexedArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestBackendIndexing.test_DaskIndexingAdapter": {
  "data": {
   "lineno": 2044,
   "symbols_in_volume": [
    "dask.array",
    "dask.array.asarray",
    "xarray.Variable",
    "xarray.core.indexing.CopyOnWriteArray",
    "xarray.core.indexing.DaskIndexingAdapter"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestBackendIndexing.test_LazilyOuterIndexedArray": {
  "data": {
   "lineno": 2008,
   "symbols_in_volume": [
    "xarray.Variable",
    "xarray.core.indexing.LazilyOuterIndexedArray",
    "xarray.core.indexing.NumpyIndexingAdapter"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestBackendIndexing.test_MemoryCachedArray": {
  "data": {
   "lineno": 2034,
   "symbols_in_volume": [
    "xarray.Variable",
    "xarray.core.indexing.CopyOnWriteArray",
    "xarray.core.indexing.MemoryCachedArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestBackendIndexing.test_NumpyIndexingAdapter": {
  "data": {
   "lineno": 1999,
   "symbols_in_volume": [
    "TypeError",
    "raises_regex",
    "xarray.Variable",
    "xarray.core.indexing.NumpyIndexingAdapter"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable": {
  "data": {
   "lineno": 1729,
   "symbols_in_volume": [
    "staticmethod",
    "xarray.IndexVariable",
    "xarray.tests.test_variable.VariableSubclassobjects"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_concat_multiindex": {
  "data": {
   "lineno": 1795,
   "symbols_in_volume": [
    "isinstance",
    "pandas.MultiIndex",
    "pandas.MultiIndex.from_product",
    "xarray.IndexVariable",
    "xarray.IndexVariable.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_concat_periods": {
  "data": {
   "lineno": 1781,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "pandas.PeriodIndex",
    "pandas.period_range",
    "range",
    "xarray.IndexVariable",
    "xarray.IndexVariable.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_coordinate_alias": {
  "data": {
   "lineno": 1803,
   "symbols_in_volume": [
    "Warning",
    "isinstance",
    "xarray.Coordinate",
    "xarray.IndexVariable",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_data": {
  "data": {
   "lineno": 1746,
   "symbols_in_volume": [
    "TypeError",
    "assert_array_equal",
    "float",
    "isinstance",
    "numpy.arange",
    "numpy.ndarray",
    "raises_regex",
    "xarray.IndexVariable",
    "xarray.core.indexing.PandasIndexAdapter"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_datetime64": {
  "data": {
   "lineno": 1808,
   "symbols_in_volume": [
    "numpy.array",
    "xarray.IndexVariable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_get_level_variable": {
  "data": {
   "lineno": 1771,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "pandas.MultiIndex.from_product",
    "raises_regex",
    "xarray.IndexVariable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_getitem_advanced": {
  "data": {
   "lineno": 1821,
   "symbols_in_volume": [
    "super",
    "xarray.tests.test_variable.TestIndexVariable",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_getitem_error": {
  "data": {
   "lineno": 1817,
   "symbols_in_volume": [
    "super",
    "xarray.tests.test_variable.TestIndexVariable",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_getitem_fancy": {
  "data": {
   "lineno": 1825,
   "symbols_in_volume": [
    "super",
    "xarray.tests.test_variable.TestIndexVariable",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_getitem_uint": {
  "data": {
   "lineno": 1829,
   "symbols_in_volume": [
    "super",
    "xarray.tests.test_variable.TestIndexVariable",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_init": {
  "data": {
   "lineno": 1732,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.IndexVariable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_level_names": {
  "data": {
   "lineno": 1763,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_product",
    "xarray.IndexVariable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_multiindex_default_level_names": {
  "data": {
   "lineno": 1741,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_product",
    "xarray.IndexVariable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_name": {
  "data": {
   "lineno": 1756,
   "symbols_in_volume": [
    "AttributeError",
    "xarray.IndexVariable",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_pad": {
  "data": {
   "lineno": 1833,
   "symbols_in_volume": [
    "super",
    "xarray.tests.test_variable.TestIndexVariable",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_rolling_window": {
  "data": {
   "lineno": 1837,
   "symbols_in_volume": [
    "super",
    "xarray.tests.test_variable.TestIndexVariable",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_to_index": {
  "data": {
   "lineno": 1736,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Index",
    "xarray.IndexVariable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "staticmethod",
    "xarray.Variable",
    "xarray.tests.test_variable.VariableSubclassobjects"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_variable.TestVariable.setup": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.random.random",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_0d_datetime": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "numpy.datetime64",
    "numpy.dtype",
    "pandas.Timestamp",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_0d_str": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "bytes",
    "numpy.dtype",
    "numpy.string_",
    "xarray.Variable",
    "xarray.core.pycompat.PY3"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_0d_timedelta": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.timedelta64",
    "pandas.to_timedelta",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_as_variable": {
  "data": {
   "lineno": 955,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "assert_identical",
    "datetime.datetime",
    "datetime.timedelta",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "raises_regex",
    "range",
    "tuple",
    "xarray.Dataset",
    "xarray.Variable",
    "xarray.core.variable.as_variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_big_endian_reduce": {
  "data": {
   "lineno": 1514,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.ones",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_binary_ops_keep_attrs": {
  "data": {
   "lineno": 1561,
   "symbols_in_volume": [
    "numpy.random.randn",
    "xarray.Variable",
    "xarray.core.pycompat.OrderedDict",
    "xarray.set_options"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_broadcast_equals": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "numpy.nan",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_broadcasting_failures": {
  "data": {
   "lineno": 1423,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "raises_regex",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_broadcasting_math": {
  "data": {
   "lineno": 1394,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.einsum",
    "numpy.random.randn",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_count": {
  "data": {
   "lineno": 1573,
   "symbols_in_volume": [
    "assert_identical",
    "int",
    "numpy.array",
    "numpy.nan",
    "object",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_data_and_values": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "ValueError",
    "assert_array_equal",
    "numpy.random.random",
    "source_ndarray",
    "xarray.Variable",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_datetime64_conversion_scalar": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.datetime64",
    "numpy.dtype",
    "pandas.Timestamp",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_detect_indexer_type": {
  "data": {
   "lineno": 1020,
   "symbols_in_volume": [
    "numpy.random.random",
    "slice",
    "type",
    "xarray.Variable",
    "xarray.core.indexing.BasicIndexer",
    "xarray.core.indexing.OuterIndexer",
    "xarray.core.indexing.VectorizedIndexer"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_equals_and_identical": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "copy.deepcopy",
    "numpy.nan",
    "numpy.random.rand",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_get_axis_num": {
  "data": {
   "lineno": 1291,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "raises_regex",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_getitem_basic": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "assert_array_equal",
    "dict",
    "slice"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_getitem_with_mask_2d_input": {
  "data": {
   "lineno": 1153,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "slice",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_index_0d_numpy_string": {
  "data": {
   "lineno": 1168,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.string_",
    "numpy.unicode_",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_indexer_type": {
  "data": {
   "lineno": 1059,
   "symbols_in_volume": [
    "assert_indexer_type",
    "numpy.random.random",
    "slice",
    "xarray.Variable",
    "xarray.core.indexing.BasicIndexer",
    "xarray.core.indexing.OuterIndexer",
    "xarray.core.indexing.VectorizedIndexer"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_indexer_type.assert_indexer_type": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_indexing_0d_unicode": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_inplace_math": {
  "data": {
   "lineno": 1432,
   "symbols_in_volume": [
    "ValueError",
    "assert_array_equal",
    "numpy.arange",
    "raises_regex",
    "source_ndarray",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_isel": {
  "data": {
   "lineno": 1159,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "raises_regex",
    "slice",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_items": {
  "data": {
   "lineno": 1092,
   "symbols_in_volume": [
    "TypeError",
    "assert_array_equal",
    "assert_identical",
    "enumerate",
    "iter",
    "numpy.all",
    "numpy.arange",
    "numpy.ones",
    "numpy.random.random",
    "raises_regex",
    "range",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_no_conflicts": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_numpy_same_methods": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "float",
    "numpy.arange",
    "numpy.float32",
    "type",
    "xarray.IndexVariable",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_quantile": {
  "data": {
   "lineno": 1463,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nanpercentile",
    "numpy.testing.assert_allclose",
    "xarray.Variable",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_quantile_dask_raises": {
  "data": {
   "lineno": 1474,
   "symbols_in_volume": [
    "TypeError",
    "raises_regex",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_rank": {
  "data": {
   "lineno": 1489,
   "symbols_in_volume": [
    "ValueError",
    "assert_equal",
    "bottleneck.nanrankdata",
    "bottleneck.rankdata",
    "numpy.nan",
    "numpy.testing.assert_allclose",
    "raises_regex",
    "xarray.Variable",
    "xarray.tests.requires_bottleneck"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_rank_dask_raises": {
  "data": {
   "lineno": 1482,
   "symbols_in_volume": [
    "TypeError",
    "numpy.nan",
    "raises_regex",
    "xarray.Variable",
    "xarray.tests.requires_bottleneck"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_reduce": {
  "data": {
   "lineno": 1445,
   "symbols_in_volume": [
    "ValueError",
    "assert_allclose",
    "assert_identical",
    "numpy.mean",
    "numpy.std",
    "raises_regex",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_reduce_funcs": {
  "data": {
   "lineno": 1521,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.array",
    "numpy.mean",
    "numpy.nan",
    "pandas.Timestamp",
    "pandas.date_range",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_reduce_keep_attrs": {
  "data": {
   "lineno": 1546,
   "symbols_in_volume": [
    "len",
    "xarray.Variable",
    "xarray.core.pycompat.OrderedDict"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_repr": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "repr",
    "textwrap.dedent",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_repr_lazy_data": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange",
    "repr",
    "xarray.Variable",
    "xarray.core.indexing.LazilyOuterIndexedArray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_roll": {
  "data": {
   "lineno": 1223,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "raises_regex",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_roll_consistency": {
  "data": {
   "lineno": 1241,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.random.randn",
    "numpy.roll",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_set_dims": {
  "data": {
   "lineno": 1300,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "raises_regex",
    "xarray.Variable",
    "xarray.core.pycompat.OrderedDict"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_set_dims_object_dtype": {
  "data": {
   "lineno": 1321,
   "symbols_in_volume": [
    "numpy.empty",
    "object",
    "range",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_setitem": {
  "data": {
   "lineno": 1590,
   "symbols_in_volume": [
    "assert_array_equal",
    "dict",
    "numpy.ones_like",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_setitem_fancy": {
  "data": {
   "lineno": 1608,
   "symbols_in_volume": [
    "ValueError",
    "assert_array_equal",
    "assert_assigned_2d",
    "assert_identical",
    "dict",
    "int",
    "numpy.arange",
    "numpy.ones",
    "numpy.ones_like",
    "numpy.random.randn",
    "numpy.zeros",
    "raises_regex",
    "slice",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_setitem_fancy.assert_assigned_2d": {
  "data": {
   "lineno": 1610,
   "symbols_in_volume": [
    "assert_array_equal",
    "dict",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_shift": {
  "data": {
   "lineno": 1182,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "numpy.nan",
    "raises_regex",
    "xarray.Variable",
    "xarray.core.dtypes.NA",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_shift2d": {
  "data": {
   "lineno": 1218,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_squeeze": {
  "data": {
   "lineno": 1277,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "raises_regex",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_stack": {
  "data": {
   "lineno": 1330,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_stack_errors": {
  "data": {
   "lineno": 1347,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_stack_unstack_consistency": {
  "data": {
   "lineno": 1388,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Variable",
    "xarray.core.pycompat.OrderedDict"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_timedelta64_conversion_scalar": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.dtype",
    "numpy.timedelta64",
    "pandas.Timedelta",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_transpose": {
  "data": {
   "lineno": 1250,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.einsum",
    "numpy.random.randn",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_transpose_0d": {
  "data": {
   "lineno": 1264,
   "symbols_in_volume": [
    "numpy.datetime64",
    "numpy.timedelta64",
    "object",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_unstack": {
  "data": {
   "lineno": 1355,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Variable",
    "xarray.core.pycompat.OrderedDict"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_unstack_2d": {
  "data": {
   "lineno": 1378,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_unstack_errors": {
  "data": {
   "lineno": 1369,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariableWithDask": {
  "data": {
   "lineno": 1688,
   "symbols_in_volume": [
    "staticmethod",
    "xarray.Variable",
    "xarray.tests.test_variable.VariableSubclassobjects"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_variable.TestVariableWithDask.test_0d_object_array_with_list": {
  "data": {
   "lineno": 1692,
   "symbols_in_volume": [
    "super",
    "xarray.tests.test_variable.TestVariableWithDask",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariableWithDask.test_array_interface": {
  "data": {
   "lineno": 1696,
   "symbols_in_volume": [
    "super",
    "xarray.tests.test_variable.TestVariableWithDask",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariableWithDask.test_copy_index": {
  "data": {
   "lineno": 1701,
   "symbols_in_volume": [
    "super",
    "xarray.tests.test_variable.TestVariableWithDask",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariableWithDask.test_eq_all_dtypes": {
  "data": {
   "lineno": 1705,
   "symbols_in_volume": [
    "super",
    "xarray.tests.test_variable.TestVariableWithDask",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariableWithDask.test_equals_all_dtypes": {
  "data": {
   "lineno": 1715,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "super",
    "xarray.tests.test_variable.TestVariableWithDask",
    "xarray.tests.test_variable.dask",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariableWithDask.test_getitem_1d_fancy": {
  "data": {
   "lineno": 1712,
   "symbols_in_volume": [
    "super",
    "xarray.tests.test_variable.TestVariableWithDask"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariableWithDask.test_getitem_fancy": {
  "data": {
   "lineno": 1709,
   "symbols_in_volume": [
    "super",
    "xarray.tests.test_variable.TestVariableWithDask"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariableWithDask.test_getitem_with_mask_nd_indexer": {
  "data": {
   "lineno": 1721,
   "symbols_in_volume": [
    "assert_identical",
    "dask.array.arange",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.Variable": {
  "data": {
   "shadows": "xarray.Variable"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.VariableSubclassobjects": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_variable.VariableSubclassobjects._assertIndexedLikeNDArray": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "type",
    "xarray.tests.test_variable.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.example_1d_objects": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.float32",
    "object",
    "pandas.date_range",
    "range"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_0d_object_array_with_list": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.empty",
    "object"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_0d_time_data": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "numpy.datetime64",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_1d_math": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "abs",
    "assert_array_equal",
    "assert_identical",
    "float",
    "isinstance",
    "numpy.arange",
    "numpy.ones",
    "xarray.IndexVariable",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_1d_reduce": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "type",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test___array__": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_aggregate_complex": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "assert_allclose",
    "numpy.nan",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_array_interface": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "assert_array_equal",
    "assert_identical",
    "float",
    "isinstance",
    "numpy.arange",
    "numpy.asarray",
    "numpy.sin",
    "xarray.IndexVariable",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_attrs": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange",
    "xarray.core.pycompat.OrderedDict"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_concat": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "ValueError",
    "assert_identical",
    "numpy.arange",
    "numpy.array",
    "numpy.random.random",
    "raises_regex",
    "xarray.Variable",
    "xarray.Variable.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_concat_attrs": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.ones",
    "xarray.Variable.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_concat_fixed_len_str": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.array",
    "xarray.Variable",
    "xarray.Variable.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_concat_mixed_dtypes": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.array",
    "object",
    "xarray.Variable",
    "xarray.Variable.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_concat_number_strings": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "str",
    "xarray.Variable",
    "xarray.Variable.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_copy": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "assert_identical",
    "copy.copy",
    "numpy.arange",
    "source_ndarray",
    "type",
    "xarray.Variable",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_copy_index": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "assert_array_equal",
    "isinstance",
    "pandas.MultiIndex",
    "pandas.MultiIndex.from_product",
    "xarray.core.indexing.PandasIndexAdapter"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_copy_index_with_data": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "xarray.IndexVariable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_copy_index_with_data_errors": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "raises_regex",
    "xarray.IndexVariable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_copy_with_data": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.array",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_copy_with_data_errors": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "ValueError",
    "raises_regex",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_datetime64_conversion": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.dtype",
    "pandas.date_range",
    "source_ndarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_encoding_preserved": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "assert_identical",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_eq_all_dtypes": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_equals_all_dtypes": {
  "data": {
   "lineno": 375
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_getitem_0d_array": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_getitem_1d": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "assert_array_equal",
    "dict",
    "numpy.array",
    "slice",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_getitem_1d_fancy": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "IndexError",
    "assert_array_equal",
    "assert_identical",
    "numpy.array",
    "raises_regex",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_getitem_advanced": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "IndexError",
    "assert_array_equal",
    "dict",
    "numpy.array",
    "raises_regex",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_getitem_dict": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_getitem_error": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "IndexError",
    "dict",
    "numpy.arange",
    "raises_regex",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_getitem_fancy": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "assert_array_equal",
    "assert_identical",
    "dict",
    "numpy.arange",
    "numpy.newaxis",
    "numpy.zeros",
    "slice",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_getitem_uint": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "numpy.uint64"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_getitem_uint_1d": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_getitem_with_mask": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "slice",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_getitem_with_mask_nd_indexer": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "assert_identical",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_getitem_with_mask_size_zero": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.nan",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_index_0d_datetime": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.datetime64",
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_index_0d_float": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float_"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_index_0d_int": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "numpy.int32",
    "numpy.int_"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_index_0d_not_a_time": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "numpy.datetime64"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_index_0d_object": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "HashableItemWrapper"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_index_0d_object.HashableItemWrapper": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_index_0d_object.HashableItemWrapper.__eq__": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_index_0d_object.HashableItemWrapper.__hash__": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_index_0d_object.HashableItemWrapper.__init__": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_index_0d_object.HashableItemWrapper.__repr__": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_index_0d_string": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "numpy.dtype",
    "xarray.core.pycompat.PY3"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_index_0d_timedelta64": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.timedelta64",
    "pandas.to_timedelta"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_index_and_concat_datetime": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "assert_array_equal",
    "pandas.date_range",
    "range",
    "xarray.Variable.concat"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_load": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "assert_identical",
    "numpy.arange",
    "type"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_multiindex": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "assert_identical",
    "list",
    "pandas.MultiIndex.from_product",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_object_conversion": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "numpy.arange",
    "object",
    "str"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_pad": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "assert_array_equal",
    "bool",
    "float",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.full_like",
    "numpy.nan",
    "numpy.pad",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_pandas_cateogrical_dtype": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Categorical",
    "print"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_pandas_data": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "assert_identical",
    "pandas.Index",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_pandas_datetime64_with_tz": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "pandas.date_range",
    "print",
    "str",
    "xarray.tests.test_variable.pytz"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_pandas_period_index": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.period_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_properties": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "assert_array_equal",
    "float",
    "len",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_real_and_imag": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "abs",
    "assert_allclose",
    "assert_identical",
    "numpy.arange",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_rolling_window": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "ValueError",
    "assert_array_equal",
    "isinstance",
    "numpy.arange",
    "numpy.ndarray",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassobjects.test_timedelta64_conversion": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.dtype",
    "pandas.timedelta_range",
    "source_ndarray"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VectorizedIndexer": {
  "data": {
   "shadows": "xarray.core.indexing.VectorizedIndexer"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.as_compatible_data": {
  "data": {
   "shadows": "xarray.core.variable.as_compatible_data"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.as_variable": {
  "data": {
   "shadows": "xarray.core.variable.as_variable"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.bn": {
  "data": {
   "shadows": "bottleneck"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.dtypes": {
  "data": {
   "shadows": "xarray.core.dtypes"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.full_like": {
  "data": {
   "shadows": "xarray.core.common.full_like"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.indexing": {
  "data": {
   "shadows": "xarray.core.indexing"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.ones_like": {
  "data": {
   "shadows": "xarray.core.common.ones_like"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.requires_bottleneck": {
  "data": {
   "shadows": "xarray.tests.requires_bottleneck"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.set_options": {
  "data": {
   "shadows": "xarray.set_options"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.test_raise_no_warning_for_nan_in_binary_ops": {
  "data": {
   "lineno": 1977,
   "symbols_in_volume": [
    "len",
    "numpy.NaN",
    "xarray.Variable",
    "xarray.tests.test_variable.pytest"
   ]
  },
  "type": "function"
 },
 "xarray.tests.test_variable.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.zeros_like": {
  "data": {
   "shadows": "xarray.core.common.zeros_like"
  },
  "type": "import"
 },
 "xarray.tests.utils": {
  "data": {
   "shadows": "xarray.core.utils"
  },
  "type": "import"
 },
 "xarray.tests.version": {
  "data": {
   "shadows": "distutils.version"
  },
  "type": "import"
 },
 "xarray.tests.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.tutorial": {
  "data": {
   "symbols_in_volume": [
    "os.sep.join"
   ]
  },
  "type": "module"
 },
 "xarray.tutorial._default_cache_dir": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "xarray.tutorial._open_dataset": {
  "data": {
   "shadows": "open_dataset"
  },
  "type": "import"
 },
 "xarray.tutorial._os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "xarray.tutorial._urlretrieve": {
  "data": {
   "shadows": "urlretrieve"
  },
  "type": "import"
 },
 "xarray.tutorial.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tutorial.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tutorial.file_md5_checksum": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "open",
    "xarray.tutorial.hashlib"
   ]
  },
  "type": "function"
 },
 "xarray.tutorial.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "xarray.tutorial.load_dataset": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "DeprecationWarning",
    "xarray.tutorial.open_dataset",
    "xarray.tutorial.warnings"
   ]
  },
  "type": "function"
 },
 "xarray.tutorial.open_dataset": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "IOError",
    "open",
    "os.mkdir",
    "os.path.exists",
    "os.path.expanduser",
    "os.path.isdir",
    "os.remove",
    "os.sep.join",
    "xarray.tutorial._default_cache_dir",
    "xarray.tutorial.file_md5_checksum"
   ]
  },
  "type": "function"
 },
 "xarray.tutorial.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tutorial.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.ufuncs": {
  "data": {
   "symbols_in_volume": [
    "globals",
    "numpy.ndarray",
    "xarray.ufuncs.__all__",
    "xarray.ufuncs._create_op",
    "xarray.ufuncs._xarray_types"
   ]
  },
  "type": "module"
 },
 "xarray.ufuncs._DataArray": {
  "data": {
   "shadows": "DataArray"
  },
  "type": "import"
 },
 "xarray.ufuncs._Dataset": {
  "data": {
   "shadows": "Dataset"
  },
  "type": "import"
 },
 "xarray.ufuncs._GroupBy": {
  "data": {
   "shadows": "GroupBy"
  },
  "type": "import"
 },
 "xarray.ufuncs._UFuncDispatcher": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xarray.ufuncs._UFuncDispatcher.__call__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "NotImplemented",
    "PendingDeprecationWarning",
    "TypeError",
    "_dask_or_eager_func",
    "f",
    "isinstance",
    "len",
    "map",
    "reversed",
    "slice",
    "tuple",
    "type",
    "warnings.warn",
    "xarray.ufuncs._dispatch_priority",
    "xarray.ufuncs._xarray_types"
   ]
  },
  "type": "function"
 },
 "xarray.ufuncs._UFuncDispatcher.__init__": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "xarray.ufuncs._Variable": {
  "data": {
   "shadows": "Variable"
  },
  "type": "import"
 },
 "xarray.ufuncs.__all__": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "xarray.ufuncs._create_op": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "getattr",
    "numpy",
    "xarray.ufuncs._UFuncDispatcher"
   ]
  },
  "type": "function"
 },
 "xarray.ufuncs._dask_array_type": {
  "data": {
   "shadows": "dask_array_type"
  },
  "type": "import"
 },
 "xarray.ufuncs._dispatch_order": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "xarray.ufuncs._dispatch_priority": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "xarray.ufuncs._dispatch_order"
   ]
  },
  "type": "function"
 },
 "xarray.ufuncs._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.ufuncs._warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.ufuncs._xarray_types": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "xarray.ufuncs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.ufuncs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.ufuncs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.util": {
  "data": {},
  "type": "module"
 },
 "xarray.util.print_versions": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "xarray.util.print_versions.main",
    "xarray.util.print_versions.sys"
   ]
  },
  "type": "module"
 },
 "xarray.util.print_versions.OptionParser": {
  "data": {
   "shadows": "optparse.OptionParser"
  },
  "type": "import"
 },
 "xarray.util.print_versions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.util.print_versions.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "xarray.util.print_versions.get_sys_info": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "xarray.util.print_versions.locale",
    "xarray.util.print_versions.os",
    "xarray.util.print_versions.platform",
    "xarray.util.print_versions.struct",
    "xarray.util.print_versions.subprocess",
    "xarray.util.print_versions.sys"
   ]
  },
  "type": "function"
 },
 "xarray.util.print_versions.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "xarray.util.print_versions.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "xarray.util.print_versions.json": {
  "data": {
   "shadows": "simplejson"
  },
  "type": "import"
 },
 "xarray.util.print_versions.locale": {
  "data": {
   "shadows": "locale"
  },
  "type": "import"
 },
 "xarray.util.print_versions.main": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "optparse.OptionParser",
    "xarray.util.print_versions.show_versions"
   ]
  },
  "type": "function"
 },
 "xarray.util.print_versions.netCDF4": {
  "data": {
   "shadows": "netCDF4"
  },
  "type": "import"
 },
 "xarray.util.print_versions.netcdf_and_hdf5_versions": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ImportError",
    "xarray.util.print_versions.h5py",
    "xarray.util.print_versions.netCDF4"
   ]
  },
  "type": "function"
 },
 "xarray.util.print_versions.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "xarray.util.print_versions.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "xarray.util.print_versions.show_versions": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "list",
    "print",
    "simplejson.dump",
    "ver_f",
    "xarray.util.print_versions.codecs",
    "xarray.util.print_versions.get_sys_info",
    "xarray.util.print_versions.importlib",
    "xarray.util.print_versions.netcdf_and_hdf5_versions",
    "xarray.util.print_versions.sys"
   ]
  },
  "type": "function"
 },
 "xarray.util.print_versions.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "xarray.util.print_versions.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "xarray.util.print_versions.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 }
}