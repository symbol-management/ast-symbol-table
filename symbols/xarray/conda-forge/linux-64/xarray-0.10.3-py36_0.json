{
 "xarray": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      27,
      28
     ]
    }
   }
  },
  "type": "module"
 },
 "xarray.__version__": {
  "data": {
   "shadows": "version"
  },
  "type": "import"
 },
 "xarray.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.backends": {
  "data": {},
  "type": "module"
 },
 "xarray.backends.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "xarray.backends.api": {
  "data": {},
  "type": "module"
 },
 "xarray.backends.api.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "xarray.backends.api.DATAARRAY_NAME": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "xarray.backends.api.DATAARRAY_VARIABLE": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "xarray.backends.api.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "xarray.backends.api.WRITEABLE_STORES": {
  "data": {
   "lineno": 591
  },
  "type": "constant"
 },
 "xarray.backends.api._CONCAT_DIM_DEFAULT": {
  "data": {
   "lineno": 451
  },
  "type": "constant"
 },
 "xarray.backends.api._MultiFileCloser": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": {
    "object": {
     "line number": [
      442
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.backends.api._MultiFileCloser.__init__": {
  "data": {
   "lineno": 443
  },
  "type": "function"
 },
 "xarray.backends.api._MultiFileCloser.close": {
  "data": {
   "lineno": 446
  },
  "type": "function"
 },
 "xarray.backends.api._default_lock": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "is_remote_uri": {
     "line number": [
      63
     ]
    },
    "xarray.backends.api._get_default_engine": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.api._get_default_engine": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      27,
      31,
      38,
      42
     ]
    },
    "ValueError": {
     "line number": [
      32,
      43
     ]
    },
    "is_remote_uri": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.api._get_lock": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "CombinedLock": {
     "line number": [
      142
     ]
    },
    "format": {
     "line number": [
      137
     ]
    },
    "get_scheduler_lock": {
     "line number": [
      139
     ]
    },
    "len": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.api._normalize_path": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "is_remote_uri": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.api._protect_dataset_variables_inplace": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "xarray.backends.api._validate_attrs": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "check_attr": {
     "line number": [
      115,
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.api._validate_attrs.check_attr": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      103,
      108
     ]
    },
    "ValueError": {
     "line number": [
      99
     ]
    },
    "isinstance": {
     "line number": [
      97,
      106
     ]
    },
    "list": {
     "line number": [
      107
     ]
    },
    "numbers.Number": {
     "line number": [
      106
     ]
    },
    "numpy.ndarray": {
     "line number": [
      106
     ]
    },
    "numpy.number": {
     "line number": [
      106
     ]
    },
    "tuple": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.api._validate_dataset_names": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "check_name": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.api._validate_dataset_names.check_name": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      85
     ]
    },
    "ValueError": {
     "line number": [
      81
     ]
    },
    "isinstance": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.api.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.backends.api.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.backends.api.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "xarray.backends.api.netCDF4": {
  "data": {
   "shadows": "netCDF4"
  },
  "type": "import"
 },
 "xarray.backends.api.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.api.open_dataarray": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      422
     ]
    },
    "len": {
     "line number": [
      421
     ]
    },
    "xarray.backends.api.DATAARRAY_NAME": {
     "line number": [
      432,
      433,
      434
     ]
    },
    "xarray.backends.api.DATAARRAY_VARIABLE": {
     "line number": [
      436
     ]
    },
    "xarray.backends.api.open_dataset": {
     "line number": [
      413
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.api.open_dataset": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      278,
      288,
      312,
      321
     ]
    },
    "bytes": {
     "line number": [
      276,
      279
     ]
    },
    "close_on_error": {
     "line number": [
      317
     ]
    },
    "isinstance": {
     "line number": [
      269,
      272,
      274,
      276,
      279,
      283
     ]
    },
    "maybe_decode_store": {
     "line number": [
      318,
      326
     ]
    },
    "str": {
     "line number": [
      270
     ]
    },
    "xarray.backends.api._default_lock": {
     "line number": [
      316
     ]
    },
    "xarray.backends.api._get_default_engine": {
     "line number": [
      294
     ]
    },
    "xarray.backends.api._normalize_path": {
     "line number": [
      284
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.api.open_dataset.maybe_decode_store": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "dask.base.tokenize": {
     "line number": [
      251
     ]
    },
    "is_remote_uri": {
     "line number": [
      247
     ]
    },
    "isinstance": {
     "line number": [
      246
     ]
    },
    "xarray.backends.api._protect_dataset_variables_inplace": {
     "line number": [
      240
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.api.open_mfdataset": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      561
     ]
    },
    "ValueError": {
     "line number": [
      581
     ]
    },
    "auto_combine": {
     "line number": [
      575,
      578
     ]
    },
    "glob.glob": {
     "line number": [
      556
     ]
    },
    "isinstance": {
     "line number": [
      555,
      558
     ]
    },
    "preprocess": {
     "line number": [
      570
     ]
    },
    "sorted": {
     "line number": [
      556
     ]
    },
    "str": {
     "line number": [
      558
     ]
    },
    "xarray.backends.api._CONCAT_DIM_DEFAULT": {
     "line number": [
      454,
      574
     ]
    },
    "xarray.backends.api._MultiFileCloser": {
     "line number": [
      586
     ]
    },
    "xarray.backends.api._default_lock": {
     "line number": [
      564
     ]
    },
    "xarray.backends.api.open_dataset": {
     "line number": [
      565
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.api.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "xarray.backends.api.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.backends.api.pydap": {
  "data": {
   "shadows": "pydap"
  },
  "type": "import"
 },
 "xarray.backends.api.save_mfdataset": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": {
    "ArrayWriter": {
     "line number": [
      745
     ]
    },
    "TypeError": {
     "line number": [
      734
     ]
    },
    "ValueError": {
     "line number": [
      729,
      741
     ]
    },
    "format": {
     "line number": [
      746
     ]
    },
    "isinstance": {
     "line number": [
      733
     ]
    },
    "len": {
     "line number": [
      728,
      728,
      738,
      740,
      740,
      740,
      740
     ]
    },
    "set": {
     "line number": [
      728,
      740
     ]
    },
    "type": {
     "line number": [
      735
     ]
    },
    "xarray.backends.api.to_netcdf": {
     "line number": [
      746
     ]
    },
    "zip": {
     "line number": [
      747
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.api.scipy.io.netcdf": {
  "data": {
   "shadows": "scipy.io.netcdf"
  },
  "type": "import"
 },
 "xarray.backends.api.to_netcdf": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      629
     ]
    },
    "NotImplementedError": {
     "line number": [
      642
     ]
    },
    "ValueError": {
     "line number": [
      613,
      630
     ]
    },
    "format": {
     "line number": [
      632,
      633,
      645,
      650
     ]
    },
    "format.upper": {
     "line number": [
      633
     ]
    },
    "get_scheduler": {
     "line number": [
      639
     ]
    },
    "io.BytesIO": {
     "line number": [
      649
     ]
    },
    "isinstance": {
     "line number": [
      605,
      616,
      661
     ]
    },
    "store_open": {
     "line number": [
      650
     ]
    },
    "str": {
     "line number": [
      606
     ]
    },
    "xarray.backends.api.WRITEABLE_STORES": {
     "line number": [
      628
     ]
    },
    "xarray.backends.api._get_default_engine": {
     "line number": [
      618
     ]
    },
    "xarray.backends.api._get_lock": {
     "line number": [
      645
     ]
    },
    "xarray.backends.api._normalize_path": {
     "line number": [
      619
     ]
    },
    "xarray.backends.api._validate_attrs": {
     "line number": [
      625
     ]
    },
    "xarray.backends.api._validate_dataset_names": {
     "line number": [
      624
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.api.to_zarr": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      764
     ]
    },
    "str": {
     "line number": [
      765
     ]
    },
    "xarray.backends.api._validate_attrs": {
     "line number": [
      771
     ]
    },
    "xarray.backends.api._validate_dataset_names": {
     "line number": [
      770
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.api.tokenize": {
  "data": {
   "shadows": "dask.base.tokenize"
  },
  "type": "import"
 },
 "xarray.backends.common": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      23
     ]
    },
    "__name__": {
     "line number": [
      27
     ]
    },
    "dask.utils.SerializableLock": {
     "line number": [
      22
     ]
    },
    "xarray.backends.common.logging": {
     "line number": [
      27
     ]
    },
    "xarray.backends.common.threading": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "module"
 },
 "xarray.backends.common.AbstractDataStore": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "collections.Mapping": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.backends.common.AbstractDataStore.__enter__": {
  "data": {
   "lineno": 247
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractDataStore.__exit__": {
  "data": {
   "lineno": 250
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractDataStore.__getitem__": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractDataStore.__iter__": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractDataStore.__len__": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "len": {
     "line number": [
      181
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractDataStore.attrs": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": {
    "FutureWarning": {
     "line number": [
      233
     ]
    },
    "property": {
     "line number": [
      229
     ]
    },
    "xarray.backends.common.warnings": {
     "line number": [
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractDataStore.close": {
  "data": {
   "lineno": 244
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractDataStore.dimensions": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": {
    "FutureWarning": {
     "line number": [
      241
     ]
    },
    "property": {
     "line number": [
      237
     ]
    },
    "xarray.backends.common.warnings": {
     "line number": [
      239
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractDataStore.get_attrs": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractDataStore.get_dimensions": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractDataStore.get_encoding": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractDataStore.get_variables": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      190
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractDataStore.load": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": {
    "FrozenOrderedDict": {
     "line number": [
      216,
      218
     ]
    },
    "xarray.backends.common._decode_variable_name": {
     "line number": [
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractDataStore.variables": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": {
    "FutureWarning": {
     "line number": [
      225
     ]
    },
    "property": {
     "line number": [
      221
     ]
    },
    "xarray.backends.common.warnings": {
     "line number": [
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": {
    "xarray.backends.common.AbstractDataStore": {
     "line number": [
      275
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.backends.common.AbstractWritableDataStore.__init__": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": {
    "xarray.backends.common.ArrayWriter": {
     "line number": [
      278
     ]
    },
    "xarray.backends.common.HDF5_LOCK": {
     "line number": [
      276
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore.encode": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": {
    "collections.OrderedDict": {
     "line number": [
      298,
      300
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore.encode_attribute": {
  "data": {
   "lineno": 308
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore.encode_variable": {
  "data": {
   "lineno": 304
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore.set_attribute": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      316
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore.set_attributes": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": {
    "iteritems": {
     "line number": [
      375
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore.set_dimension": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      313
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore.set_dimensions": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      430
     ]
    },
    "collections.OrderedDict": {
     "line number": [
      422
     ]
    },
    "dict": {
     "line number": [
      426
     ]
    },
    "set": {
     "line number": [
      418
     ]
    },
    "zip": {
     "line number": [
      426
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore.set_variable": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      319
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore.set_variables": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": {
    "iteritems": {
     "line number": [
      396
     ]
    },
    "xarray.backends.common._encode_variable_name": {
     "line number": [
      397
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore.store": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": {
    "frozenset": {
     "line number": [
      336
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore.store_dataset": {
  "data": {
   "lineno": 327
  },
  "type": "function"
 },
 "xarray.backends.common.AbstractWritableDataStore.sync": {
  "data": {
   "lineno": 321
  },
  "type": "function"
 },
 "xarray.backends.common.ArrayWriter": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": {
    "object": {
     "line number": [
      254
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.backends.common.ArrayWriter.__init__": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "xarray.backends.common.HDF5_LOCK": {
     "line number": [
      255
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common.ArrayWriter.add": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      261
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common.ArrayWriter.sync": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": {
    "dask.array.store": {
     "line number": [
      270
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common.BackendArray": {
  "data": {
   "lineno": 162
  },
  "type": "class"
 },
 "xarray.backends.common.BackendArray.__array__": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      166
     ]
    },
    "slice": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common.Client": {
  "data": {
   "shadows": "dask.distributed.Client"
  },
  "type": "import"
 },
 "xarray.backends.common.CombinedLock": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "object": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.backends.common.CombinedLock.__enter__": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "xarray.backends.common.CombinedLock.__exit__": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "xarray.backends.common.CombinedLock.__init__": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "set": {
     "line number": [
      137
     ]
    },
    "tuple": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common.CombinedLock.__repr__": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "list": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common.CombinedLock.acquire": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "all": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common.CombinedLock.locked": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "any": {
     "line number": [
      156
     ]
    },
    "property": {
     "line number": [
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common.CombinedLock.release": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "xarray.backends.common.DataStorePickleMixin": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": {
    "object": {
     "line number": [
      451
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.backends.common.DataStorePickleMixin.__getstate__": {
  "data": {
   "lineno": 457
  },
  "type": "function"
 },
 "xarray.backends.common.DataStorePickleMixin.__setstate__": {
  "data": {
   "lineno": 466
  },
  "type": "function"
 },
 "xarray.backends.common.DataStorePickleMixin.assert_open": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      504
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common.DataStorePickleMixin.ds": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": {
    "property": {
     "line number": [
      471
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common.DataStorePickleMixin.ensure_open": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": {
    "xarray.backends.common.contextlib": {
     "line number": [
      479
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common.HDF5_LOCK": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "xarray.backends.common.Lock": {
  "data": {
   "shadows": "dask.distributed.Lock"
  },
  "type": "import"
 },
 "xarray.backends.common.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "xarray.backends.common.NONE_VAR_NAME": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "xarray.backends.common.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "xarray.backends.common.SerializableLock": {
  "data": {
   "shadows": "dask.utils.SerializableLock"
  },
  "type": "import"
 },
 "xarray.backends.common.WritableCFDataStore": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": {
    "xarray.backends.common.AbstractWritableDataStore": {
     "line number": [
      438
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.backends.common.WritableCFDataStore.encode": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": {
    "cf_encoder": {
     "line number": [
      443
     ]
    },
    "collections.OrderedDict": {
     "line number": [
      444,
      446
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common._decode_variable_name": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "xarray.backends.common.NONE_VAR_NAME": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common._encode_variable_name": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "xarray.backends.common.NONE_VAR_NAME": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.backends.common.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "xarray.backends.common.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.backends.common.dask.multiprocessing": {
  "data": {
   "shadows": "dask.multiprocessing"
  },
  "type": "import"
 },
 "xarray.backends.common.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.backends.common.effective_get": {
  "data": {
   "shadows": "dask.utils.effective_get"
  },
  "type": "import"
 },
 "xarray.backends.common.find_root": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "xarray.backends.common.get_scheduler": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      49
     ]
    },
    "ImportError": {
     "line number": [
      49,
      56,
      58
     ]
    },
    "dask.distributed.Client": {
     "line number": [
      47
     ]
    },
    "dask.utils.effective_get": {
     "line number": [
      44
     ]
    },
    "isinstance": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common.get_scheduler_lock": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "dask.distributed.Lock": {
     "line number": [
      73
     ]
    },
    "dask.utils.SerializableLock": {
     "line number": [
      78
     ]
    },
    "xarray.backends.common.multiprocessing": {
     "line number": [
      75
     ]
    },
    "xarray.backends.common.threading": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "xarray.backends.common.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "xarray.backends.common.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "xarray.backends.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.common.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.backends.common.robust_getitem": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      104
     ]
    },
    "numpy.random.randint": {
     "line number": [
      121
     ]
    },
    "range": {
     "line number": [
      114
     ]
    },
    "xarray.backends.common.logger": {
     "line number": [
      125
     ]
    },
    "xarray.backends.common.time": {
     "line number": [
      126
     ]
    },
    "xarray.backends.common.traceback": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.common.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "xarray.backends.common.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "xarray.backends.common.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "xarray.backends.common.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.backends.h5netcdf_": {
  "data": {
   "symbols_in_volume": {
    "xarray.backends.h5netcdf_.functools": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "module"
 },
 "xarray.backends.h5netcdf_.H5NetCDFArrayWrapper": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "xarray.backends.h5netcdf_.H5NetCDFArrayWrapper.__getitem__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      25
     ]
    },
    "len": {
     "line number": [
      30
     ]
    },
    "list": {
     "line number": [
      25
     ]
    },
    "numpy.ndarray": {
     "line number": [
      25
     ]
    },
    "tuple": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore": {
  "data": {
   "lineno": 67
  },
  "type": "class"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.__init__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      79
     ]
    },
    "ValueError": {
     "line number": [
      74
     ]
    },
    "format": {
     "line number": [
      73,
      85
     ]
    },
    "opener": {
     "line number": [
      77,
      86
     ]
    },
    "super": {
     "line number": [
      89
     ]
    },
    "xarray.backends.h5netcdf_.H5NetCDFStore": {
     "line number": [
      89
     ]
    },
    "xarray.backends.h5netcdf_._open_h5netcdf_group": {
     "line number": [
      75
     ]
    },
    "xarray.backends.h5netcdf_.functools": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.close": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "find_root": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.encode_variable": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "_encode_nc4_variable": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.get_attrs": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "FrozenOrderedDict": {
     "line number": [
      117
     ]
    },
    "xarray.backends.h5netcdf_._read_attributes": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.get_dimensions": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.get_encoding": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.get_variables": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "FrozenOrderedDict": {
     "line number": [
      112
     ]
    },
    "iteritems": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.open_store_variable": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "Variable": {
     "line number": [
      108
     ]
    },
    "dict": {
     "line number": [
      99
     ]
    },
    "xarray.backends.h5netcdf_.H5NetCDFArrayWrapper": {
     "line number": [
      95
     ]
    },
    "xarray.backends.h5netcdf_._read_attributes": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.prepare_variable": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      154
     ]
    },
    "_get_datatype": {
     "line number": [
      150
     ]
    },
    "iteritems": {
     "line number": [
      179
     ]
    },
    "str": {
     "line number": [
      153,
      162
     ]
    },
    "xarray.backends.h5netcdf_.H5NetCDFArrayWrapper": {
     "line number": [
      182
     ]
    },
    "xarray.backends.h5netcdf_._extract_h5nc_encoding": {
     "line number": [
      165
     ]
    },
    "xarray.backends.h5netcdf_.h5py": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.set_attribute": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.set_dimension": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.H5NetCDFStore.sync": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": {
    "super": {
     "line number": [
      188
     ]
    },
    "xarray.backends.h5netcdf_.H5NetCDFStore": {
     "line number": [
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_._extract_h5nc_encoding": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "xarray.backends.h5netcdf_._open_h5netcdf_group": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "_nc4_group": {
     "line number": [
      64
     ]
    },
    "close_on_error": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_._read_attributes": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      47
     ]
    },
    "xarray.backends.h5netcdf_.maybe_decode_bytes": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.backends.h5netcdf_.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.backends.h5netcdf_.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.backends.h5netcdf_.h5netcdf.legacyapi": {
  "data": {
   "shadows": "h5netcdf.legacyapi"
  },
  "type": "import"
 },
 "xarray.backends.h5netcdf_.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "xarray.backends.h5netcdf_.maybe_decode_bytes": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.h5netcdf_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.h5netcdf_.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.backends.memory": {
  "data": {},
  "type": "module"
 },
 "xarray.backends.memory.InMemoryDataStore": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "xarray.backends.memory.InMemoryDataStore.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      21,
      22
     ]
    },
    "super": {
     "line number": [
      23
     ]
    },
    "xarray.backends.memory.InMemoryDataStore": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.memory.InMemoryDataStore.get_attrs": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "xarray.backends.memory.InMemoryDataStore.get_dimensions": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.memory.InMemoryDataStore.get_variables": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "xarray.backends.memory.InMemoryDataStore.prepare_variable": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "Variable": {
     "line number": [
      39
     ]
    },
    "numpy.empty_like": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.memory.InMemoryDataStore.set_attribute": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "xarray.backends.memory.copy": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.memory.InMemoryDataStore.set_dimension": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "xarray.backends.memory.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.backends.memory.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "xarray.backends.memory.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.backends.memory.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.memory.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.backends.netCDF4_": {
  "data": {},
  "type": "module"
 },
 "xarray.backends.netCDF4_.BaseNetCDF4Array": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "xarray.backends.netCDF4_.BaseNetCDF4Array.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "numpy.dtype": {
     "line number": [
      41
     ]
    },
    "str": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.BaseNetCDF4Array.__setitem__": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.BaseNetCDF4Array.get_array": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.backends.netCDF4_.NetCDF4ArrayWrapper": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "xarray.backends.netCDF4_.BaseNetCDF4Array": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.backends.netCDF4_.NetCDF4ArrayWrapper.__getitem__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      66,
      76
     ]
    },
    "RuntimeError": {
     "line number": [
      59
     ]
    },
    "getitem": {
     "line number": [
      65
     ]
    },
    "len": {
     "line number": [
      78
     ]
    },
    "xarray.backends.netCDF4_.functools": {
     "line number": [
      59
     ]
    },
    "xarray.backends.netCDF4_.operator": {
     "line number": [
      61
     ]
    },
    "xarray.backends.netCDF4_.traceback": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore": {
  "data": {
   "lineno": 232
  },
  "type": "class"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.__init__": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      242
     ]
    },
    "is_remote_uri": {
     "line number": [
      251
     ]
    },
    "super": {
     "line number": [
      257
     ]
    },
    "xarray.backends.netCDF4_.NetCDF4DataStore": {
     "line number": [
      257
     ]
    },
    "xarray.backends.netCDF4_._disable_auto_decode_group": {
     "line number": [
      244
     ]
    },
    "xarray.backends.netCDF4_.functools": {
     "line number": [
      254
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.close": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": {
    "find_root": {
     "line number": [
      419
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.encode_variable": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": {
    "encode_nc3_variable": {
     "line number": [
      361
     ]
    },
    "xarray.backends.netCDF4_._encode_nc4_variable": {
     "line number": [
      359
     ]
    },
    "xarray.backends.netCDF4_._force_native_endianness": {
     "line number": [
      357
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.get_attrs": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": {
    "FrozenOrderedDict": {
     "line number": [
      324
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.get_dimensions": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": {
    "FrozenOrderedDict": {
     "line number": [
      330
     ]
    },
    "iteritems": {
     "line number": [
      331
     ]
    },
    "len": {
     "line number": [
      330
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.get_encoding": {
  "data": {
   "lineno": 334
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.get_variables": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": {
    "FrozenOrderedDict": {
     "line number": [
      317
     ]
    },
    "iteritems": {
     "line number": [
      319
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.open": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      259
     ]
    },
    "cls": {
     "line number": [
      281
     ]
    },
    "distutils.version.LooseVersion": {
     "line number": [
      265
     ]
    },
    "format": {
     "line number": [
      274,
      275,
      279
     ]
    },
    "len": {
     "line number": [
      264
     ]
    },
    "netCDF4.__version__": {
     "line number": [
      265
     ]
    },
    "opener": {
     "line number": [
      280,
      281
     ]
    },
    "xarray.backends.netCDF4_._open_netcdf4_group": {
     "line number": [
      276
     ]
    },
    "xarray.backends.netCDF4_.functools": {
     "line number": [
      276
     ]
    },
    "xarray.backends.netCDF4_.warnings": {
     "line number": [
      266
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.open_store_variable": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      289
     ]
    },
    "Variable": {
     "line number": [
      313
     ]
    },
    "pop_to": {
     "line number": [
      308
     ]
    },
    "tuple": {
     "line number": [
      304
     ]
    },
    "xarray.backends.netCDF4_.NetCDF4ArrayWrapper": {
     "line number": [
      288
     ]
    },
    "xarray.backends.netCDF4_._ensure_fill_value_valid": {
     "line number": [
      291
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.prepare_variable": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      372
     ]
    },
    "iteritems": {
     "line number": [
      402
     ]
    },
    "str": {
     "line number": [
      371
     ]
    },
    "xarray.backends.netCDF4_.NetCDF4ArrayWrapper": {
     "line number": [
      407
     ]
    },
    "xarray.backends.netCDF4_._disable_auto_decode_variable": {
     "line number": [
      400
     ]
    },
    "xarray.backends.netCDF4_._extract_nc4_variable_encoding": {
     "line number": [
      380
     ]
    },
    "xarray.backends.netCDF4_._get_datatype": {
     "line number": [
      366
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.set_attribute": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": {
    "encode_nc3_attr_value": {
     "line number": [
      349
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.set_dimension": {
  "data": {
   "lineno": 341
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.set_variables": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": {
    "super": {
     "line number": [
      354
     ]
    },
    "xarray.backends.netCDF4_.NetCDF4DataStore": {
     "line number": [
      354
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.NetCDF4DataStore.sync": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": {
    "super": {
     "line number": [
      413
     ]
    },
    "xarray.backends.netCDF4_.NetCDF4DataStore": {
     "line number": [
      413
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_._disable_auto_decode_group": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": {
    "xarray.backends.netCDF4_._disable_auto_decode_variable": {
     "line number": [
      229
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_._disable_auto_decode_variable": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      222
     ]
    },
    "suppress": {
     "line number": [
      222
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_._encode_nc4_variable": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_._endian_lookup": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "xarray.backends.netCDF4_._ensure_fill_value_valid": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "numpy.string_": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_._extract_nc4_variable_encoding": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      191
     ]
    },
    "any": {
     "line number": [
      177
     ]
    },
    "list": {
     "line number": [
      194
     ]
    },
    "set": {
     "line number": [
      166,
      167
     ]
    },
    "zip": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_._force_native_endianness": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      152
     ]
    },
    "Variable": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_._get_datatype": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "xarray.backends.netCDF4_._nc4_dtype": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_._nc4_dtype": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      104
     ]
    },
    "str": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_._nc4_group": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      126
     ]
    },
    "KeyError": {
     "line number": [
      121
     ]
    },
    "ValueError": {
     "line number": [
      115
     ]
    },
    "isinstance": {
     "line number": [
      114
     ]
    },
    "set": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_._open_netcdf4_group": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "close_on_error": {
     "line number": [
      206
     ]
    },
    "netCDF4.Dataset": {
     "line number": [
      204
     ]
    },
    "xarray.backends.netCDF4_._disable_auto_decode_group": {
     "line number": [
      209
     ]
    },
    "xarray.backends.netCDF4_._nc4_group": {
     "line number": [
      207
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.netCDF4_.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.backends.netCDF4_.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.backends.netCDF4_.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.backends.netCDF4_.nc4": {
  "data": {
   "shadows": "netCDF4"
  },
  "type": "import"
 },
 "xarray.backends.netCDF4_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.netCDF4_.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "xarray.backends.netCDF4_.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.backends.netCDF4_.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "xarray.backends.netCDF4_.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.backends.netcdf3": {
  "data": {
   "symbols_in_volume": {
    "set": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "module"
 },
 "xarray.backends.netcdf3.STRING_ENCODING": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "xarray.backends.netcdf3._isalnumMUTF8": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "len": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.netcdf3._nc3_dtype_coercions": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "xarray.backends.netcdf3._reserved_names": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "xarray.backends.netcdf3._specialchars": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "xarray.backends.netcdf3.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.backends.netcdf3.coerce_nc3_dtype": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      44
     ]
    },
    "str": {
     "line number": [
      38
     ]
    },
    "xarray.backends.netcdf3._nc3_dtype_coercions": {
     "line number": [
      39,
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.netcdf3.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.backends.netcdf3.encode_nc3_attr_value": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      58
     ]
    },
    "bytes": {
     "line number": [
      51
     ]
    },
    "isinstance": {
     "line number": [
      51,
      53
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      56
     ]
    },
    "xarray.backends.netcdf3.STRING_ENCODING": {
     "line number": [
      54
     ]
    },
    "xarray.backends.netcdf3.coerce_nc3_dtype": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.netcdf3.encode_nc3_attrs": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      63
     ]
    },
    "xarray.backends.netcdf3.encode_nc3_attr_value": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.netcdf3.encode_nc3_variable": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "Variable": {
     "line number": [
      71
     ]
    },
    "xarray.backends.netcdf3.coerce_nc3_dtype": {
     "line number": [
      69
     ]
    },
    "xarray.backends.netcdf3.encode_nc3_attrs": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.netcdf3.is_valid_nc3_name": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "all": {
     "line number": [
      111
     ]
    },
    "isinstance": {
     "line number": [
      100,
      102
     ]
    },
    "len": {
     "line number": [
      104
     ]
    },
    "xarray.backends.netcdf3._isalnumMUTF8": {
     "line number": [
      110,
      111
     ]
    },
    "xarray.backends.netcdf3._reserved_names": {
     "line number": [
      106
     ]
    },
    "xarray.backends.netcdf3._specialchars": {
     "line number": [
      111
     ]
    },
    "xarray.backends.netcdf3.unicodedata": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.netcdf3.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.netcdf3.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.backends.netcdf3.unicodedata": {
  "data": {
   "shadows": "unicodedata"
  },
  "type": "import"
 },
 "xarray.backends.pydap_": {
  "data": {},
  "type": "module"
 },
 "xarray.backends.pydap_.PydapArrayWrapper": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "xarray.backends.pydap_.PydapArrayWrapper.__getitem__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      31
     ]
    },
    "enumerate": {
     "line number": [
      33
     ]
    },
    "getattr": {
     "line number": [
      30
     ]
    },
    "isinstance": {
     "line number": [
      34
     ]
    },
    "len": {
     "line number": [
      35,
      38
     ]
    },
    "numpy.asarray": {
     "line number": [
      39
     ]
    },
    "numpy.squeeze": {
     "line number": [
      36
     ]
    },
    "robust_getitem": {
     "line number": [
      31
     ]
    },
    "tuple": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.pydap_.PydapArrayWrapper.__init__": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "xarray.backends.pydap_.PydapArrayWrapper.dtype": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "property": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.pydap_.PydapArrayWrapper.shape": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "property": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.pydap_.PydapDataStore": {
  "data": {
   "lineno": 59
  },
  "type": "class"
 },
 "xarray.backends.pydap_.PydapDataStore.__init__": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "xarray.backends.pydap_.PydapDataStore.get_attrs": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "Frozen": {
     "line number": [
      90
     ]
    },
    "xarray.backends.pydap_._fix_attributes": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.pydap_.PydapDataStore.get_dimensions": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "Frozen": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.pydap_.PydapDataStore.get_variables": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "FrozenOrderedDict": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.pydap_.PydapDataStore.open": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      74
     ]
    },
    "cls": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.pydap_.PydapDataStore.open_store_variable": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "Variable": {
     "line number": [
      82
     ]
    },
    "xarray.backends.pydap_.PydapArrayWrapper": {
     "line number": [
      81
     ]
    },
    "xarray.backends.pydap_._fix_attributes": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.pydap_._fix_attributes": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      45
     ]
    },
    "is_dict_like": {
     "line number": [
      51
     ]
    },
    "list": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.pydap_.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.backends.pydap_.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.backends.pydap_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.pydap_.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.backends.pydap_.pydap.client": {
  "data": {
   "shadows": "pydap.client"
  },
  "type": "import"
 },
 "xarray.backends.pynio_": {
  "data": {},
  "type": "module"
 },
 "xarray.backends.pynio_.Nio": {
  "data": {
   "shadows": "Nio"
  },
  "type": "import"
 },
 "xarray.backends.pynio_.NioArrayWrapper": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "xarray.backends.pynio_.NioArrayWrapper.__getitem__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "len": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.pynio_.NioArrayWrapper.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "numpy.dtype": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.pynio_.NioArrayWrapper.get_array": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "xarray.backends.pynio_.NioDataStore": {
  "data": {
   "lineno": 42
  },
  "type": "class"
 },
 "xarray.backends.pynio_.NioDataStore.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "opener": {
     "line number": [
      49,
      52
     ]
    },
    "xarray.backends.pynio_.Nio": {
     "line number": [
      48
     ]
    },
    "xarray.backends.pynio_.functools": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.pynio_.NioDataStore.close": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "xarray.backends.pynio_.NioDataStore.get_attrs": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "Frozen": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.pynio_.NioDataStore.get_dimensions": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "Frozen": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.pynio_.NioDataStore.get_encoding": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "set": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.pynio_.NioDataStore.get_variables": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "FrozenOrderedDict": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.pynio_.NioDataStore.open_store_variable": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "Variable": {
     "line number": [
      60
     ]
    },
    "xarray.backends.pynio_.NioArrayWrapper": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.pynio_.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.backends.pynio_.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.backends.pynio_.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.backends.pynio_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.pynio_.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.backends.rasterio_": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      15
     ]
    },
    "threading.Lock": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "module"
 },
 "xarray.backends.rasterio_.Lock": {
  "data": {
   "shadows": "threading.Lock"
  },
  "type": "import"
 },
 "xarray.backends.rasterio_.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.backends.rasterio_.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "xarray.backends.rasterio_.RASTERIO_LOCK": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "xarray.backends.rasterio_.RasterioArrayWrapper": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "xarray.backends.rasterio_.RasterioArrayWrapper.__getitem__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "numpy.squeeze": {
     "line number": [
      110
     ]
    },
    "tuple": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.rasterio_.RasterioArrayWrapper.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "len": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.rasterio_.RasterioArrayWrapper._get_indexer": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      83
     ]
    },
    "is_scalar": {
     "line number": [
      89
     ]
    },
    "isinstance": {
     "line number": [
      71,
      76,
      84
     ]
    },
    "len": {
     "line number": [
      77
     ]
    },
    "list": {
     "line number": [
      76
     ]
    },
    "numpy.arange": {
     "line number": [
      73
     ]
    },
    "numpy.asarray": {
     "line number": [
      75
     ]
    },
    "numpy.max": {
     "line number": [
      96
     ]
    },
    "numpy.min": {
     "line number": [
      96
     ]
    },
    "slice": {
     "line number": [
      71,
      78,
      84,
      87
     ]
    },
    "tuple": {
     "line number": [
      102,
      103
     ]
    },
    "zip": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.rasterio_.RasterioArrayWrapper.dtype": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      38
     ]
    },
    "numpy.all": {
     "line number": [
      37
     ]
    },
    "numpy.asarray": {
     "line number": [
      37
     ]
    },
    "numpy.dtype": {
     "line number": [
      39
     ]
    },
    "property": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.rasterio_.RasterioArrayWrapper.shape": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "property": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.rasterio_._ERROR_MSG": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "xarray.backends.rasterio_._parse_envi": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "xarray.backends.rasterio_._parse_envi.default": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "xarray.backends.rasterio_._parse_envi.parsevec": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "numpy.fromstring": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.rasterio_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.rasterio_.open_rasterio": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "DataArray": {
     "line number": [
      287
     ]
    },
    "FutureWarning": {
     "line number": [
      255
     ]
    },
    "OSError": {
     "line number": [
      295
     ]
    },
    "RuntimeWarning": {
     "line number": [
      232
     ]
    },
    "ValueError": {
     "line number": [
      206
     ]
    },
    "collections.OrderedDict": {
     "line number": [
      202
     ]
    },
    "dask.base.tokenize": {
     "line number": [
      298
     ]
    },
    "dict": {
     "line number": [
      235
     ]
    },
    "distutils.version.LooseVersion": {
     "line number": [
      210
     ]
    },
    "hasattr": {
     "line number": [
      241,
      246,
      249,
      256,
      260
     ]
    },
    "isinstance": {
     "line number": [
      275
     ]
    },
    "len": {
     "line number": [
      275
     ]
    },
    "list": {
     "line number": [
      275
     ]
    },
    "numpy.arange": {
     "line number": [
      220,
      221
     ]
    },
    "numpy.asarray": {
     "line number": [
      207,
      276
     ]
    },
    "numpy.nan": {
     "line number": [
      262
     ]
    },
    "numpy.ndarray": {
     "line number": [
      275
     ]
    },
    "numpy.uint8": {
     "line number": [
      252
     ]
    },
    "numpy.zeros": {
     "line number": [
      220,
      221
     ]
    },
    "tuple": {
     "line number": [
      240,
      259,
      262
     ]
    },
    "xarray.backends.rasterio_.RASTERIO_LOCK": {
     "line number": [
      301
     ]
    },
    "xarray.backends.rasterio_.RasterioArrayWrapper": {
     "line number": [
      280
     ]
    },
    "xarray.backends.rasterio_._parse_envi": {
     "line number": [
      266
     ]
    },
    "xarray.backends.rasterio_.os": {
     "line number": [
      294
     ]
    },
    "xarray.backends.rasterio_.rasterio": {
     "line number": [
      197,
      210
     ]
    },
    "xarray.backends.rasterio_.warnings": {
     "line number": [
      228,
      253,
      255
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.rasterio_.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "xarray.backends.rasterio_.rasterio": {
  "data": {
   "shadows": "rasterio"
  },
  "type": "import"
 },
 "xarray.backends.rasterio_.tokenize": {
  "data": {
   "shadows": "dask.base.tokenize"
  },
  "type": "import"
 },
 "xarray.backends.rasterio_.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.backends.scipy_": {
  "data": {},
  "type": "module"
 },
 "xarray.backends.scipy_.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "xarray.backends.scipy_.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.backends.scipy_.ScipyArrayWrapper": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "xarray.backends.scipy_.ScipyArrayWrapper.__getitem__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "NumpyIndexingAdapter": {
     "line number": [
      48
     ]
    },
    "numpy.array": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyArrayWrapper.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "numpy.dtype": {
     "line number": [
      39
     ]
    },
    "str": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyArrayWrapper.__setitem__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "Ellipsis": {
     "line number": [
      63
     ]
    },
    "TypeError": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyArrayWrapper.get_array": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore": {
  "data": {
   "lineno": 109
  },
  "type": "class"
 },
 "xarray.backends.scipy_.ScipyDataStore.__exit__": {
  "data": {
   "lineno": 231
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.__init__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "ImportWarning": {
     "line number": [
      129
     ]
    },
    "ValueError": {
     "line number": [
      132,
      140
     ]
    },
    "distutils.version.LooseVersion": {
     "line number": [
      124
     ]
    },
    "format": {
     "line number": [
      135,
      135,
      137,
      141
     ]
    },
    "opener": {
     "line number": [
      146,
      149
     ]
    },
    "super": {
     "line number": [
      152
     ]
    },
    "xarray.backends.scipy_.ScipyDataStore": {
     "line number": [
      152
     ]
    },
    "xarray.backends.scipy_._open_scipy_netcdf": {
     "line number": [
      143
     ]
    },
    "xarray.backends.scipy_.functools": {
     "line number": [
      143
     ]
    },
    "xarray.backends.scipy_.scipy": {
     "line number": [
      124,
      129
     ]
    },
    "xarray.backends.scipy_.warnings": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.__setstate__": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      236
     ]
    },
    "super": {
     "line number": [
      240
     ]
    },
    "xarray.backends.scipy_.ScipyDataStore": {
     "line number": [
      240
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore._validate_attr_key": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      188
     ]
    },
    "is_valid_nc3_name": {
     "line number": [
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.close": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.encode_variable": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "encode_nc3_variable": {
     "line number": [
      197
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.get_attrs": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "Frozen": {
     "line number": [
      166
     ]
    },
    "xarray.backends.scipy_._decode_attrs": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.get_dimensions": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "Frozen": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.get_encoding": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.get_variables": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "FrozenOrderedDict": {
     "line number": [
      161
     ]
    },
    "iteritems": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.open_store_variable": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "Variable": {
     "line number": [
      156
     ]
    },
    "xarray.backends.scipy_.ScipyArrayWrapper": {
     "line number": [
      156
     ]
    },
    "xarray.backends.scipy_._decode_attrs": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.prepare_variable": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      204
     ]
    },
    "iteritems": {
     "line number": [
      214
     ]
    },
    "list": {
     "line number": [
      205
     ]
    },
    "setattr": {
     "line number": [
      216
     ]
    },
    "xarray.backends.scipy_.ScipyArrayWrapper": {
     "line number": [
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.set_attribute": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": {
    "encode_nc3_attr_value": {
     "line number": [
      193
     ]
    },
    "setattr": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.set_dimension": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      181
     ]
    },
    "type": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.scipy_.ScipyDataStore.sync": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "super": {
     "line number": [
      224
     ]
    },
    "xarray.backends.scipy_.ScipyDataStore": {
     "line number": [
      224
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.scipy_._decode_attrs": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      28
     ]
    },
    "iteritems": {
     "line number": [
      29
     ]
    },
    "xarray.backends.scipy_._decode_string": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.scipy_._decode_string": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "bytes": {
     "line number": [
      20
     ]
    },
    "isinstance": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.scipy_._open_scipy_netcdf": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      79,
      94,
      104
     ]
    },
    "ValueError": {
     "line number": [
      82
     ]
    },
    "bytes": {
     "line number": [
      87
     ]
    },
    "io.BytesIO": {
     "line number": [
      89
     ]
    },
    "isinstance": {
     "line number": [
      75,
      87
     ]
    },
    "xarray.backends.scipy_.gzip": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.scipy_.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.backends.scipy_.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.backends.scipy_.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.backends.scipy_.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "xarray.backends.scipy_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.scipy_.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.backends.scipy_.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "xarray.backends.scipy_.scipy.io": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "xarray.backends.scipy_.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.backends.zarr": {
  "data": {},
  "type": "module"
 },
 "xarray.backends.zarr.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.backends.zarr.ZarrArrayWrapper": {
  "data": {
   "lineno": 45
  },
  "type": "class"
 },
 "xarray.backends.zarr.ZarrArrayWrapper.__getitem__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      61,
      63,
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrArrayWrapper.__init__": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrArrayWrapper.get_array": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore": {
  "data": {
   "lineno": 243
  },
  "type": "class"
 },
 "xarray.backends.zarr.ZarrStore.__init__": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": {
    "ArrayWriter": {
     "line number": [
      272
     ]
    },
    "super": {
     "line number": [
      277
     ]
    },
    "xarray.backends.zarr.ZarrStore": {
     "line number": [
      277
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.encode_attribute": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": {
    "xarray.backends.zarr._encode_zarr_attr_value": {
     "line number": [
      332
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.encode_variable": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": {
    "xarray.backends.zarr.encode_zarr_variable": {
     "line number": [
      328
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.get_attrs": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      299
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.get_dimensions": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      313,
      314
     ]
    },
    "OrderedDict": {
     "line number": [
      303
     ]
    },
    "ValueError": {
     "line number": [
      308
     ]
    },
    "xarray.backends.zarr._DIMENSION_KEY": {
     "line number": [
      306,
      316
     ]
    },
    "zip": {
     "line number": [
      306
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.get_variables": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": {
    "FrozenOrderedDict": {
     "line number": [
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.open_group": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      254
     ]
    },
    "classmethod": {
     "line number": [
      247
     ]
    },
    "cls": {
     "line number": [
      261
     ]
    },
    "distutils.version.LooseVersion": {
     "line number": [
      253
     ]
    },
    "xarray.backends.zarr.zarr": {
     "line number": [
      253,
      259
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.open_store_variable": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      283
     ]
    },
    "Variable": {
     "line number": [
      292
     ]
    },
    "getattr": {
     "line number": [
      289
     ]
    },
    "xarray.backends.zarr.ZarrArrayWrapper": {
     "line number": [
      280
     ]
    },
    "xarray.backends.zarr._DIMENSION_KEY": {
     "line number": [
      282
     ]
    },
    "xarray.backends.zarr._get_zarr_dims_and_attrs": {
     "line number": [
      281
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.prepare_variable": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      350
     ]
    },
    "iteritems": {
     "line number": [
      353
     ]
    },
    "xarray.backends.zarr._DIMENSION_KEY": {
     "line number": [
      352
     ]
    },
    "xarray.backends.zarr._ensure_valid_fill_value": {
     "line number": [
      342
     ]
    },
    "xarray.backends.zarr._extract_zarr_variable_encoding": {
     "line number": [
      347
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.set_attributes": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.set_dimensions": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      321
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.store": {
  "data": {
   "lineno": 362
  },
  "type": "function"
 },
 "xarray.backends.zarr.ZarrStore.sync": {
  "data": {
   "lineno": 366
  },
  "type": "function"
 },
 "xarray.backends.zarr._DIMENSION_KEY": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "xarray.backends.zarr._determine_zarr_chunks": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      160
     ]
    },
    "NotImplementedError": {
     "line number": [
      152
     ]
    },
    "TypeError": {
     "line number": [
      131
     ]
    },
    "ValueError": {
     "line number": [
      99,
      107,
      125
     ]
    },
    "int": {
     "line number": [
      130
     ]
    },
    "isinstance": {
     "line number": [
      119,
      130
     ]
    },
    "itertools.product": {
     "line number": [
      94
     ]
    },
    "len": {
     "line number": [
      124
     ]
    },
    "list": {
     "line number": [
      94
     ]
    },
    "tuple": {
     "line number": [
      122
     ]
    },
    "zip": {
     "line number": [
      105,
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.zarr._encode_zarr_attr_value": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "base64.b64encode": {
     "line number": [
      31
     ]
    },
    "bytes": {
     "line number": [
      30
     ]
    },
    "isinstance": {
     "line number": [
      23,
      26
     ]
    },
    "numpy.generic": {
     "line number": [
      26
     ]
    },
    "numpy.ndarray": {
     "line number": [
      23
     ]
    },
    "type": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.zarr._ensure_valid_fill_value": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "base64.b64encode": {
     "line number": [
      39
     ]
    },
    "bytes": {
     "line number": [
      38
     ]
    },
    "numpy.string_": {
     "line number": [
      38
     ]
    },
    "type": {
     "line number": [
      38
     ]
    },
    "xarray.backends.zarr._encode_zarr_attr_value": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.zarr._extract_zarr_variable_encoding": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      188
     ]
    },
    "list": {
     "line number": [
      191
     ]
    },
    "set": {
     "line number": [
      182
     ]
    },
    "xarray.backends.zarr._determine_zarr_chunks": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.zarr._get_zarr_dims_and_attrs": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "HiddenKeyDict": {
     "line number": [
      175
     ]
    },
    "KeyError": {
     "line number": [
      171,
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.zarr.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.backends.zarr.b64encode": {
  "data": {
   "shadows": "base64.b64encode"
  },
  "type": "import"
 },
 "xarray.backends.zarr.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.backends.zarr.encode_zarr_variable": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      225
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.zarr.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.backends.zarr.open_zarr": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      477
     ]
    },
    "maybe_chunk": {
     "line number": [
      477
     ]
    },
    "maybe_decode_store": {
     "line number": [
      460
     ]
    },
    "xarray.backends.zarr.ZarrStore": {
     "line number": [
      457
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.zarr.open_zarr.maybe_chunk": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": {
    "dask.base.tokenize": {
     "line number": [
      471
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.backends.zarr.open_zarr.maybe_decode_store": {
  "data": {
   "lineno": 444
  },
  "type": "function"
 },
 "xarray.backends.zarr.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.backends.zarr.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "xarray.backends.zarr.tokenize": {
  "data": {
   "shadows": "dask.base.tokenize"
  },
  "type": "import"
 },
 "xarray.backends.zarr.zarr": {
  "data": {
   "shadows": "zarr"
  },
  "type": "import"
 },
 "xarray.coding": {
  "data": {},
  "type": "module"
 },
 "xarray.coding.strings": {
  "data": {},
  "type": "module"
 },
 "xarray.coding.strings.StackedBytesArray": {
  "data": {
   "lineno": 41
  },
  "type": "class"
 },
 "xarray.coding.strings.StackedBytesArray.__getitem__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      84
     ]
    },
    "char_to_bytes": {
     "line number": [
      85
     ]
    },
    "slice": {
     "line number": [
      83
     ]
    },
    "type": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.strings.StackedBytesArray.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.strings.StackedBytesArray.__repr__": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "type": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.strings.StackedBytesArray.__str__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "repr": {
     "line number": [
      75
     ]
    },
    "str": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.strings.StackedBytesArray.dtype": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "property": {
     "line number": [
      62
     ]
    },
    "str": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.strings.StackedBytesArray.shape": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "property": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.strings.UnsignedIntegerCoder": {
  "data": {
   "lineno": 3
  },
  "type": "class"
 },
 "xarray.coding.strings.UnsignedIntegerCoder.decode": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "Variable": {
     "line number": [
      37
     ]
    },
    "lazy_elemwise_func": {
     "line number": [
      28
     ]
    },
    "partial": {
     "line number": [
      27
     ]
    },
    "pop_to": {
     "line number": [
      22
     ]
    },
    "unpack_for_decoding": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.strings.UnsignedIntegerCoder.encode": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": {
    "Variable": {
     "line number": [
      16
     ]
    },
    "pop_to": {
     "line number": [
      9
     ]
    },
    "unpack_for_encoding": {
     "line number": [
      6
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.times": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      22
     ]
    },
    "frozenset": {
     "line number": [
      37
     ]
    },
    "int": {
     "line number": [
      30,
      31,
      32,
      33,
      34,
      35
     ]
    },
    "set": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "module"
 },
 "xarray.coding.times.CFDatetimeCoder": {
  "data": {
   "lineno": 331
  },
  "type": "class"
 },
 "xarray.coding.times.CFDatetimeCoder.decode": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": {
    "Variable": {
     "line number": [
      357
     ]
    },
    "functools.partial": {
     "line number": [
      353
     ]
    },
    "lazy_elemwise_func": {
     "line number": [
      355
     ]
    },
    "pop_to": {
     "line number": [
      350,
      351
     ]
    },
    "unpack_for_decoding": {
     "line number": [
      347
     ]
    },
    "xarray.coding.times._decode_cf_datetime_dtype": {
     "line number": [
      352
     ]
    },
    "xarray.coding.times.decode_cf_datetime": {
     "line number": [
      354
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.times.CFDatetimeCoder.encode": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": {
    "Variable": {
     "line number": [
      344
     ]
    },
    "numpy.datetime64": {
     "line number": [
      336
     ]
    },
    "numpy.issubdtype": {
     "line number": [
      336
     ]
    },
    "safe_setitem": {
     "line number": [
      341,
      342
     ]
    },
    "unpack_for_encoding": {
     "line number": [
      334
     ]
    },
    "xarray.coding.times.encode_cf_datetime": {
     "line number": [
      337
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.times.CFTimedeltaCoder": {
  "data": {
   "lineno": 360
  },
  "type": "class"
 },
 "xarray.coding.times.CFTimedeltaCoder.decode": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": {
    "Variable": {
     "line number": [
      381
     ]
    },
    "functools.partial": {
     "line number": [
      377
     ]
    },
    "lazy_elemwise_func": {
     "line number": [
      379
     ]
    },
    "numpy.dtype": {
     "line number": [
      378
     ]
    },
    "pop_to": {
     "line number": [
      376
     ]
    },
    "unpack_for_decoding": {
     "line number": [
      373
     ]
    },
    "xarray.coding.times.TIME_UNITS": {
     "line number": [
      375
     ]
    },
    "xarray.coding.times.decode_cf_timedelta": {
     "line number": [
      377
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.times.CFTimedeltaCoder.encode": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": {
    "Variable": {
     "line number": [
      370
     ]
    },
    "numpy.issubdtype": {
     "line number": [
      365
     ]
    },
    "numpy.timedelta64": {
     "line number": [
      365
     ]
    },
    "safe_setitem": {
     "line number": [
      368
     ]
    },
    "unpack_for_encoding": {
     "line number": [
      363
     ]
    },
    "xarray.coding.times.encode_cf_timedelta": {
     "line number": [
      366
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.times.OutOfBoundsDatetime": {
  "data": {
   "shadows": "pandas.tslib.OutOfBoundsDatetime"
  },
  "type": "import"
 },
 "xarray.coding.times.TIME_UNITS": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "xarray.coding.times._NS_PER_TIME_DELTA": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "xarray.coding.times._STANDARD_CALENDARS": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "xarray.coding.times._cleanup_netcdf_time_units": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": {
    "format_timestamp": {
     "line number": [
      249
     ]
    },
    "pandas.tslib.OutOfBoundsDatetime": {
     "line number": [
      250
     ]
    },
    "xarray.coding.times._unpack_netcdf_time_units": {
     "line number": [
      247
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.times._decode_cf_datetime_dtype": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      112
     ]
    },
    "ValueError": {
     "line number": [
      120
     ]
    },
    "first_n_items": {
     "line number": [
      107
     ]
    },
    "getattr": {
     "line number": [
      122
     ]
    },
    "last_item": {
     "line number": [
      108
     ]
    },
    "numpy.concatenate": {
     "line number": [
      107
     ]
    },
    "numpy.dtype": {
     "line number": [
      122
     ]
    },
    "xarray.coding.times.decode_cf_datetime": {
     "line number": [
      111
     ]
    },
    "xarray.coding.times.traceback": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.times._decode_datetime_with_netcdftime": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      93
     ]
    },
    "netCDF4": {
     "line number": [
      81
     ]
    },
    "netCDF4.num2date": {
     "line number": [
      83
     ]
    },
    "numpy.asarray": {
     "line number": [
      83
     ]
    },
    "numpy.nanargmax": {
     "line number": [
      85
     ]
    },
    "numpy.nanargmin": {
     "line number": [
      84
     ]
    },
    "xarray.coding.times._import_netcdftime": {
     "line number": [
      81
     ]
    },
    "xarray.coding.times.nctime_to_nptime": {
     "line number": [
      92
     ]
    },
    "xarray.coding.times.warnings": {
     "line number": [
      86,
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.times._encode_datetime_with_netcdftime": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": {
    "datetime.datetime": {
     "line number": [
      266
     ]
    },
    "netCDF4": {
     "line number": [
      262
     ]
    },
    "numpy.datetime64": {
     "line number": [
      264
     ]
    },
    "numpy.issubdtype": {
     "line number": [
      264
     ]
    },
    "numpy.vectorize": {
     "line number": [
      271
     ]
    },
    "xarray.coding.times._import_netcdftime": {
     "line number": [
      262
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.times._encode_datetime_with_netcdftime.encode_datetime": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "netCDF4.date2num": {
     "line number": [
      269
     ]
    },
    "numpy.nan": {
     "line number": [
      269
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.times._import_netcdftime": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      51,
      52,
      56,
      57
     ]
    },
    "hasattr": {
     "line number": [
      49
     ]
    },
    "netCDF4": {
     "line number": [
      58
     ]
    },
    "netcdftime": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.times._infer_time_units_from_diff": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "int": {
     "line number": [
      205
     ]
    },
    "numpy.all": {
     "line number": [
      205
     ]
    },
    "numpy.timedelta64": {
     "line number": [
      203
     ]
    },
    "xarray.coding.times._NS_PER_TIME_DELTA": {
     "line number": [
      202
     ]
    },
    "xarray.coding.times._netcdf_to_numpy_timeunit": {
     "line number": [
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.times._netcdf_to_numpy_timeunit": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "xarray.coding.times._unpack_netcdf_time_units": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      75
     ]
    },
    "xarray.coding.times.re": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.times.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.coding.times.cast_to_int_if_safe": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      275
     ]
    },
    "numpy.int64": {
     "line number": [
      275
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.times.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "xarray.coding.times.decode_cf_datetime": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "OverflowError": {
     "line number": [
      176
     ]
    },
    "ValueError": {
     "line number": [
      156
     ]
    },
    "numpy.asarray": {
     "line number": [
      142
     ]
    },
    "numpy.float": {
     "line number": [
      178
     ]
    },
    "numpy.float64": {
     "line number": [
      170
     ]
    },
    "numpy.int64": {
     "line number": [
      171
     ]
    },
    "pandas.Timestamp": {
     "line number": [
      155
     ]
    },
    "pandas.to_timedelta": {
     "line number": [
      164,
      165,
      173
     ]
    },
    "pandas.tslib.OutOfBoundsDatetime": {
     "line number": [
      151,
      159,
      176
     ]
    },
    "xarray.coding.times._NS_PER_TIME_DELTA": {
     "line number": [
      171
     ]
    },
    "xarray.coding.times._STANDARD_CALENDARS": {
     "line number": [
      150
     ]
    },
    "xarray.coding.times._decode_datetime_with_netcdftime": {
     "line number": [
      177
     ]
    },
    "xarray.coding.times._netcdf_to_numpy_timeunit": {
     "line number": [
      153
     ]
    },
    "xarray.coding.times._unpack_netcdf_time_units": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.times.decode_cf_timedelta": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      187
     ]
    },
    "pandas.to_timedelta": {
     "line number": [
      193
     ]
    },
    "xarray.coding.times._netcdf_to_numpy_timeunit": {
     "line number": [
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.times.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.coding.times.encode_cf_datetime": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": {
    "OverflowError": {
     "line number": [
      313
     ]
    },
    "numpy.asarray": {
     "line number": [
      291
     ]
    },
    "numpy.datetime64": {
     "line number": [
      310
     ]
    },
    "numpy.timedelta64": {
     "line number": [
      309
     ]
    },
    "pandas.Timestamp": {
     "line number": [
      310
     ]
    },
    "pandas.tslib.OutOfBoundsDatetime": {
     "line number": [
      305,
      313
     ]
    },
    "xarray.coding.times._STANDARD_CALENDARS": {
     "line number": [
      303
     ]
    },
    "xarray.coding.times._cleanup_netcdf_time_units": {
     "line number": [
      296
     ]
    },
    "xarray.coding.times._encode_datetime_with_netcdftime": {
     "line number": [
      314
     ]
    },
    "xarray.coding.times._netcdf_to_numpy_timeunit": {
     "line number": [
      308
     ]
    },
    "xarray.coding.times._unpack_netcdf_time_units": {
     "line number": [
      301
     ]
    },
    "xarray.coding.times.cast_to_int_if_safe": {
     "line number": [
      316
     ]
    },
    "xarray.coding.times.infer_datetime_units": {
     "line number": [
      294
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.times.encode_cf_timedelta": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      326
     ]
    },
    "numpy.timedelta64": {
     "line number": [
      325
     ]
    },
    "numpy.where": {
     "line number": [
      326
     ]
    },
    "pandas.isnull": {
     "line number": [
      326
     ]
    },
    "xarray.coding.times._netcdf_to_numpy_timeunit": {
     "line number": [
      324
     ]
    },
    "xarray.coding.times.cast_to_int_if_safe": {
     "line number": [
      327
     ]
    },
    "xarray.coding.times.infer_timedelta_units": {
     "line number": [
      322
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.times.infer_datetime_units": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": {
    "len": {
     "line number": [
      220
     ]
    },
    "numpy.asarray": {
     "line number": [
      216
     ]
    },
    "numpy.diff": {
     "line number": [
      218
     ]
    },
    "numpy.unique": {
     "line number": [
      218
     ]
    },
    "pandas.Timestamp": {
     "line number": [
      221
     ]
    },
    "pandas.notnull": {
     "line number": [
      217
     ]
    },
    "pandas.to_datetime": {
     "line number": [
      216
     ]
    },
    "xarray.coding.times._infer_time_units_from_diff": {
     "line number": [
      219
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.times.infer_timedelta_units": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      229
     ]
    },
    "numpy.unique": {
     "line number": [
      230
     ]
    },
    "pandas.notnull": {
     "line number": [
      230
     ]
    },
    "pandas.to_timedelta": {
     "line number": [
      229
     ]
    },
    "xarray.coding.times._infer_time_units_from_diff": {
     "line number": [
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.times.nctime": {
  "data": {
   "shadows": "netCDF4"
  },
  "type": "import"
 },
 "xarray.coding.times.nctime_to_nptime": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": {
    "datetime.datetime": {
     "line number": [
      241
     ]
    },
    "numpy.asarray": {
     "line number": [
      238
     ]
    },
    "numpy.datetime64": {
     "line number": [
      242
     ]
    },
    "numpy.empty": {
     "line number": [
      239
     ]
    },
    "numpy.ndenumerate": {
     "line number": [
      240
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.times.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.coding.times.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "xarray.coding.times.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.coding.times.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.coding.times.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "xarray.coding.times.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "xarray.coding.times.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.coding.variables": {
  "data": {},
  "type": "module"
 },
 "xarray.coding.variables.CFMaskCoder": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "xarray.coding.variables.VariableCoder": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.coding.variables.CFMaskCoder.decode": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "Variable": {
     "line number": [
      177
     ]
    },
    "functools.partial": {
     "line number": [
      171
     ]
    },
    "len": {
     "line number": [
      162
     ]
    },
    "numpy.ravel": {
     "line number": [
      159
     ]
    },
    "pandas.isnull": {
     "line number": [
      160
     ]
    },
    "xarray.coding.variables.SerializationWarning": {
     "line number": [
      166
     ]
    },
    "xarray.coding.variables._apply_mask": {
     "line number": [
      171
     ]
    },
    "xarray.coding.variables.lazy_elemwise_func": {
     "line number": [
      175
     ]
    },
    "xarray.coding.variables.pop_to": {
     "line number": [
      155
     ]
    },
    "xarray.coding.variables.unpack_for_decoding": {
     "line number": [
      153
     ]
    },
    "xarray.coding.variables.warnings": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.variables.CFMaskCoder.encode": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "Variable": {
     "line number": [
      150
     ]
    },
    "pandas.isnull": {
     "line number": [
      147
     ]
    },
    "xarray.coding.variables.pop_to": {
     "line number": [
      146
     ]
    },
    "xarray.coding.variables.unpack_for_encoding": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.variables.CFScaleOffsetCoder": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": {
    "xarray.coding.variables.VariableCoder": {
     "line number": [
      208
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.coding.variables.CFScaleOffsetCoder.decode": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": {
    "Variable": {
     "line number": [
      241
     ]
    },
    "functools.partial": {
     "line number": [
      235
     ]
    },
    "xarray.coding.variables._choose_float_dtype": {
     "line number": [
      234
     ]
    },
    "xarray.coding.variables._scale_offset_decoding": {
     "line number": [
      235
     ]
    },
    "xarray.coding.variables.lazy_elemwise_func": {
     "line number": [
      239
     ]
    },
    "xarray.coding.variables.pop_to": {
     "line number": [
      232,
      233
     ]
    },
    "xarray.coding.variables.unpack_for_decoding": {
     "line number": [
      229
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.variables.CFScaleOffsetCoder.encode": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "Variable": {
     "line number": [
      226
     ]
    },
    "xarray.coding.variables._choose_float_dtype": {
     "line number": [
      219
     ]
    },
    "xarray.coding.variables.pop_to": {
     "line number": [
      222,
      224
     ]
    },
    "xarray.coding.variables.unpack_for_encoding": {
     "line number": [
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.variables.SerializationWarning": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.coding.variables.UnsignedIntegerCoder": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": {
    "xarray.coding.variables.VariableCoder": {
     "line number": [
      244
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.coding.variables.UnsignedIntegerCoder.decode": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": {
    "Variable": {
     "line number": [
      278
     ]
    },
    "functools.partial": {
     "line number": [
      268
     ]
    },
    "numpy.asarray": {
     "line number": [
      268
     ]
    },
    "numpy.dtype": {
     "line number": [
      267
     ]
    },
    "xarray.coding.variables.SerializationWarning": {
     "line number": [
      276
     ]
    },
    "xarray.coding.variables.lazy_elemwise_func": {
     "line number": [
      269
     ]
    },
    "xarray.coding.variables.pop_to": {
     "line number": [
      263
     ]
    },
    "xarray.coding.variables.unpack_for_decoding": {
     "line number": [
      260
     ]
    },
    "xarray.coding.variables.warnings": {
     "line number": [
      274
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.variables.UnsignedIntegerCoder.encode": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": {
    "Variable": {
     "line number": [
      257
     ]
    },
    "numpy.dtype": {
     "line number": [
      251
     ]
    },
    "xarray.coding.variables.pop_to": {
     "line number": [
      250
     ]
    },
    "xarray.coding.variables.unpack_for_encoding": {
     "line number": [
      247
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.variables.VariableCoder": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "object": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.coding.variables.VariableCoder.decode": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.variables.VariableCoder.encode": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.variables._ElementwiseFunctionArray": {
  "data": {
   "lineno": 47
  },
  "type": "class"
 },
 "xarray.coding.variables._ElementwiseFunctionArray.__getitem__": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "xarray.coding.variables._ElementwiseFunctionArray.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.variables._ElementwiseFunctionArray.__repr__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "type": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.variables._ElementwiseFunctionArray.dtype": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "numpy.dtype": {
     "line number": [
      63
     ]
    },
    "property": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.variables._apply_mask": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      135
     ]
    },
    "numpy.where": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.variables._choose_float_dtype": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "numpy.float32": {
     "line number": [
      194,
      202
     ]
    },
    "numpy.float64": {
     "line number": [
      205
     ]
    },
    "numpy.floating": {
     "line number": [
      193
     ]
    },
    "numpy.integer": {
     "line number": [
      196
     ]
    },
    "numpy.issubdtype": {
     "line number": [
      193,
      196
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.variables._scale_offset_decoding": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      181
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.variables.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.coding.variables.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.coding.variables.lazy_elemwise_func": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      89
     ]
    },
    "xarray.coding.variables._ElementwiseFunctionArray": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.variables.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.coding.variables.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "xarray.coding.variables.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.coding.variables.pop_to": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "xarray.coding.variables.safe_setitem": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.variables.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.coding.variables.safe_setitem": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.coding.variables.unpack_for_decoding": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "xarray.coding.variables.unpack_for_encoding": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "xarray.coding.variables.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.conventions": {
  "data": {},
  "type": "module"
 },
 "xarray.conventions.BoolTypeArray": {
  "data": {
   "lineno": 133
  },
  "type": "class"
 },
 "xarray.conventions.BoolTypeArray.__getitem__": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions.BoolTypeArray.__init__": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "xarray.conventions.BoolTypeArray.dtype": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "numpy.dtype": {
     "line number": [
      156
     ]
    },
    "property": {
     "line number": [
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions.BytesToStringArray": {
  "data": {
   "lineno": 63
  },
  "type": "class"
 },
 "xarray.conventions.BytesToStringArray.__getitem__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "xarray.conventions.decode_bytes_array": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions.BytesToStringArray.__init__": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "xarray.conventions.BytesToStringArray.__repr__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "type": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions.BytesToStringArray.__str__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      91
     ]
    },
    "repr": {
     "line number": [
      93
     ]
    },
    "str": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions.BytesToStringArray.dtype": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "numpy.dtype": {
     "line number": [
      86
     ]
    },
    "object": {
     "line number": [
      86
     ]
    },
    "property": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions.NativeEndiannessArray": {
  "data": {
   "lineno": 103
  },
  "type": "class"
 },
 "xarray.conventions.NativeEndiannessArray.__getitem__": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions.NativeEndiannessArray.__init__": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "xarray.conventions.NativeEndiannessArray.dtype": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "numpy.dtype": {
     "line number": [
      127
     ]
    },
    "property": {
     "line number": [
      125
     ]
    },
    "str": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions.StackedBytesArray": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "xarray.conventions.StackedBytesArray.__getitem__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      59
     ]
    },
    "slice": {
     "line number": [
      58
     ]
    },
    "type": {
     "line number": [
      57
     ]
    },
    "xarray.conventions.char_to_bytes": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions.StackedBytesArray.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions.StackedBytesArray.__repr__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "type": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions.StackedBytesArray.__str__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      48
     ]
    },
    "repr": {
     "line number": [
      50
     ]
    },
    "str": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions.StackedBytesArray.dtype": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "numpy.dtype": {
     "line number": [
      39
     ]
    },
    "property": {
     "line number": [
      37
     ]
    },
    "str": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions.StackedBytesArray.shape": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "property": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions._encode_coordinates": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      671,
      690
     ]
    },
    "ValueError": {
     "line number": [
      678,
      692
     ]
    },
    "collections.defaultdict": {
     "line number": [
      662
     ]
    },
    "isinstance": {
     "line number": [
      653
     ]
    },
    "list": {
     "line number": [
      652
     ]
    },
    "map": {
     "line number": [
      681,
      694
     ]
    },
    "set": {
     "line number": [
      650,
      662,
      667,
      667
     ]
    },
    "str": {
     "line number": [
      681,
      694
     ]
    },
    "xarray.conventions.warnings": {
     "line number": [
      654
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions._infer_dtype": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      318
     ]
    },
    "float": {
     "line number": [
      310
     ]
    },
    "numpy.array": {
     "line number": [
      312
     ]
    },
    "numpy.dtype": {
     "line number": [
      310,
      316
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions._var_as_tuple": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "xarray.conventions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.conventions.bytes_to_char": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      169
     ]
    },
    "numpy.array": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions.cf_decoder": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": {
    "xarray.conventions.decode_cf_variables": {
     "line number": [
      643
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions.cf_encoder": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      747
     ]
    },
    "iteritems": {
     "line number": [
      748
     ]
    },
    "xarray.conventions.encode_cf_variable": {
     "line number": [
      747
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions.char_to_bytes": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      181
     ]
    },
    "numpy.array": {
     "line number": [
      177
     ]
    },
    "numpy.zeros": {
     "line number": [
      190
     ]
    },
    "str": {
     "line number": [
      192
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions.decode_bytes_array": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      200
     ]
    },
    "numpy.asarray": {
     "line number": [
      198
     ]
    },
    "object": {
     "line number": [
      200
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions.decode_cf": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": {
    "Dataset": {
     "line number": [
      605
     ]
    },
    "TypeError": {
     "line number": [
      600
     ]
    },
    "isinstance": {
     "line number": [
      588,
      594
     ]
    },
    "set": {
     "line number": [
      591,
      596
     ]
    },
    "vars": {
     "line number": [
      589,
      595,
      602,
      603,
      605,
      606
     ]
    },
    "xarray.conventions.decode_cf_variables": {
     "line number": [
      602
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions.decode_cf_variable": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": {
    "Variable": {
     "line number": [
      461,
      495
     ]
    },
    "as_variable": {
     "line number": [
      443
     ]
    },
    "isinstance": {
     "line number": [
      493
     ]
    },
    "xarray.conventions.BoolTypeArray": {
     "line number": [
      491
     ]
    },
    "xarray.conventions.BytesToStringArray": {
     "line number": [
      458
     ]
    },
    "xarray.conventions.NativeEndiannessArray": {
     "line number": [
      479
     ]
    },
    "xarray.conventions.StackedBytesArray": {
     "line number": [
      454
     ]
    },
    "xarray.conventions.pop_to": {
     "line number": [
      456
     ]
    },
    "xarray.conventions.warnings": {
     "line number": [
      484
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions.decode_cf_variables": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      528,
      549
     ]
    },
    "all": {
     "line number": [
      543
     ]
    },
    "collections.defaultdict": {
     "line number": [
      506
     ]
    },
    "isinstance": {
     "line number": [
      522
     ]
    },
    "iteritems": {
     "line number": [
      529
     ]
    },
    "list": {
     "line number": [
      506
     ]
    },
    "set": {
     "line number": [
      520,
      526
     ]
    },
    "stackable": {
     "line number": [
      533
     ]
    },
    "xarray.conventions.decode_cf_variable": {
     "line number": [
      534
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions.decode_cf_variables.stackable": {
  "data": {
   "lineno": 511
  },
  "type": "function"
 },
 "xarray.conventions.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "xarray.conventions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.conventions.encode_cf_variable": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": {
    "xarray.conventions.ensure_dtype_not_object": {
     "line number": [
      399
     ]
    },
    "xarray.conventions.ensure_not_multiindex": {
     "line number": [
      386
     ]
    },
    "xarray.conventions.maybe_default_fill_value": {
     "line number": [
      397
     ]
    },
    "xarray.conventions.maybe_encode_bools": {
     "line number": [
      398
     ]
    },
    "xarray.conventions.maybe_encode_nonstring_dtype": {
     "line number": [
      396
     ]
    },
    "xarray.conventions.maybe_encode_string_dtype": {
     "line number": [
      400
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions.encode_dataset_coordinates": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": {
    "set": {
     "line number": [
      715,
      715
     ]
    },
    "xarray.conventions._encode_coordinates": {
     "line number": [
      716
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions.encode_string_array": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": {
    "bytes": {
     "line number": [
      206
     ]
    },
    "numpy.array": {
     "line number": [
      206
     ]
    },
    "numpy.asarray": {
     "line number": [
      204
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions.ensure_dtype_not_object": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": {
    "Variable": {
     "line number": [
      362
     ]
    },
    "float": {
     "line number": [
      355
     ]
    },
    "numpy.array": {
     "line number": [
      358
     ]
    },
    "numpy.dtype": {
     "line number": [
      355
     ]
    },
    "numpy.floating": {
     "line number": [
      354
     ]
    },
    "numpy.issubdtype": {
     "line number": [
      354
     ]
    },
    "numpy.nan": {
     "line number": [
      356
     ]
    },
    "pandas.isnull": {
     "line number": [
      339
     ]
    },
    "xarray.conventions._infer_dtype": {
     "line number": [
      343,
      361
     ]
    },
    "xarray.conventions._var_as_tuple": {
     "line number": [
      338
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions.ensure_not_multiindex": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      327
     ]
    },
    "isinstance": {
     "line number": [
      325,
      326
     ]
    },
    "pandas.MultiIndex": {
     "line number": [
      326
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions.maybe_default_fill_value": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": {
    "numpy.floating": {
     "line number": [
      290
     ]
    },
    "numpy.issubdtype": {
     "line number": [
      290
     ]
    },
    "numpy.nan": {
     "line number": [
      291
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions.maybe_encode_as_char_array": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      241
     ]
    },
    "Variable": {
     "line number": [
      255
     ]
    },
    "xarray.conventions._var_as_tuple": {
     "line number": [
      238
     ]
    },
    "xarray.conventions.bytes_to_char": {
     "line number": [
      252
     ]
    },
    "xarray.conventions.encode_string_array": {
     "line number": [
      249
     ]
    },
    "xarray.conventions.safe_setitem": {
     "line number": [
      248
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions.maybe_encode_bools": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": {
    "Variable": {
     "line number": [
      301
     ]
    },
    "numpy.bool": {
     "line number": [
      296
     ]
    },
    "xarray.conventions._var_as_tuple": {
     "line number": [
      298
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions.maybe_encode_nonstring_dtype": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "Variable": {
     "line number": [
      282
     ]
    },
    "numpy.dtype": {
     "line number": [
      271
     ]
    },
    "numpy.floating": {
     "line number": [
      274
     ]
    },
    "numpy.integer": {
     "line number": [
      273
     ]
    },
    "numpy.issubdtype": {
     "line number": [
      273,
      274
     ]
    },
    "xarray.conventions._var_as_tuple": {
     "line number": [
      270
     ]
    },
    "xarray.conventions.warnings": {
     "line number": [
      276
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions.maybe_encode_string_dtype": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": {
    "xarray.conventions.maybe_encode_as_char_array": {
     "line number": [
      263
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.conventions.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.conventions.pop_to": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": {
    "xarray.conventions.safe_setitem": {
     "line number": [
      228
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.conventions.safe_setitem": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.conventions.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.convert": {
  "data": {},
  "type": "module"
 },
 "xarray.convert._filter_attrs": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.convert._get_iris_args": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "xarray.convert._filter_attrs": {
     "line number": [
      82
     ]
    },
    "xarray.convert._pick_attrs": {
     "line number": [
      83,
      84
     ]
    },
    "xarray.convert.cf_units": {
     "line number": [
      86
     ]
    },
    "xarray.convert.iris_forbidden_keys": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.convert._iris_cell_methods_to_str": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "xarray.convert._iris_obj_to_attrs": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.convert._pick_attrs": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.convert.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.convert.cdms2": {
  "data": {
   "shadows": "cdms2"
  },
  "type": "import"
 },
 "xarray.convert.cdms2_ignored_attrs": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "xarray.convert.cell_methods_strings": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "xarray.convert.cf_units": {
  "data": {
   "shadows": "cf_units"
  },
  "type": "import"
 },
 "xarray.convert.dask_array_type": {
  "data": {
   "shadows": "xarray.core.pycompat.dask_array_type"
  },
  "type": "import"
 },
 "xarray.convert.dask_ma": {
  "data": {
   "shadows": "dask.array.ma"
  },
  "type": "import"
 },
 "xarray.convert.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.convert.encode": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "CFDatetimeCoder": {
     "line number": [
      26
     ]
    },
    "CFTimedeltaCoder": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.convert.from_cdms2": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "DataArray": {
     "line number": [
      44
     ]
    },
    "decode_cf": {
     "line number": [
      45
     ]
    },
    "numpy.asarray": {
     "line number": [
      38,
      40
     ]
    },
    "xarray.convert._filter_attrs": {
     "line number": [
      41,
      43
     ]
    },
    "xarray.convert.cdms2_ignored_attrs": {
     "line number": [
      41,
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.convert.from_iris": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "DataArray": {
     "line number": [
      212
     ]
    },
    "OrderedDict": {
     "line number": [
      181
     ]
    },
    "ValueError": {
     "line number": [
      187
     ]
    },
    "dask.array.ma.filled": {
     "line number": [
      206
     ]
    },
    "decode_cf": {
     "line number": [
      214
     ]
    },
    "get_fill_value": {
     "line number": [
      206,
      208
     ]
    },
    "hasattr": {
     "line number": [
      201
     ]
    },
    "isinstance": {
     "line number": [
      204,
      207
     ]
    },
    "numpy.asscalar": {
     "line number": [
      193
     ]
    },
    "numpy.ma.MaskedArray": {
     "line number": [
      207
     ]
    },
    "numpy.ma.filled": {
     "line number": [
      208
     ]
    },
    "range": {
     "line number": [
      174
     ]
    },
    "xarray.convert._iris_cell_methods_to_str": {
     "line number": [
      196
     ]
    },
    "xarray.convert._iris_obj_to_attrs": {
     "line number": [
      184,
      195
     ]
    },
    "xarray.convert.iris": {
     "line number": [
      178
     ]
    },
    "xarray.core.pycompat.dask_array_type": {
     "line number": [
      204
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.convert.iris": {
  "data": {
   "shadows": "iris"
  },
  "type": "import"
 },
 "xarray.convert.iris.exceptions": {
  "data": {
   "shadows": "iris.exceptions"
  },
  "type": "import"
 },
 "xarray.convert.iris_forbidden_keys": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "xarray.convert.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.convert.parse_cell_methods": {
  "data": {
   "shadows": "iris.fileformats.netcdf.parse_cell_methods"
  },
  "type": "import"
 },
 "xarray.convert.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.convert.to_cdms2": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "set_cdms2_attrs": {
     "line number": [
      62,
      67
     ]
    },
    "xarray.convert.cdms2": {
     "line number": [
      61,
      66
     ]
    },
    "xarray.convert.encode": {
     "line number": [
      60,
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.convert.to_cdms2.set_cdms2_attrs": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "setattr": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.convert.to_iris": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "dask.array.ma.masked_invalid": {
     "line number": [
      127
     ]
    },
    "iris.fileformats.netcdf.parse_cell_methods": {
     "line number": [
      122
     ]
    },
    "isinstance": {
     "line number": [
      125
     ]
    },
    "numpy.ma.masked_invalid": {
     "line number": [
      129
     ]
    },
    "xarray.convert._get_iris_args": {
     "line number": [
      104,
      116
     ]
    },
    "xarray.convert.encode": {
     "line number": [
      103
     ]
    },
    "xarray.convert.iris": {
     "line number": [
      110,
      113,
      131
     ]
    },
    "xarray.core.pycompat.dask_array_type": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core": {
  "data": {},
  "type": "module"
 },
 "xarray.core.accessors": {
  "data": {},
  "type": "module"
 },
 "xarray.core.accessors.DatetimeAccessor": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "_tslib_field_accessor": {
     "line number": [
      138,
      139,
      142,
      143,
      144,
      147,
      150,
      153,
      156,
      160,
      165,
      169,
      172,
      173,
      178,
      182
     ]
    },
    "numpy.int64": {
     "line number": [
      138,
      140,
      142,
      143,
      145,
      148,
      151,
      154,
      157,
      161,
      170,
      174
     ]
    },
    "object": {
     "line number": [
      96,
      166,
      179,
      183
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.accessors.DatetimeAccessor.__init__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      121
     ]
    },
    "is_datetime_like": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.accessors.DatetimeAccessor._tslib_field_accessor": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "property": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.accessors.DatetimeAccessor._tslib_field_accessor.f": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "obj_type": {
     "line number": [
      131
     ]
    },
    "type": {
     "line number": [
      129
     ]
    },
    "xarray.core.accessors._get_date_field": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.accessors.DatetimeAccessor._tslib_round_accessor": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": {
    "obj_type": {
     "line number": [
      187,
      189
     ]
    },
    "type": {
     "line number": [
      187
     ]
    },
    "xarray.core.accessors._round_field": {
     "line number": [
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.accessors.DatetimeAccessor.ceil": {
  "data": {
   "lineno": 209
  },
  "type": "function"
 },
 "xarray.core.accessors.DatetimeAccessor.floor": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "xarray.core.accessors.DatetimeAccessor.round": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "xarray.core.accessors._access_through_series": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      28
     ]
    },
    "pandas.Series": {
     "line number": [
      23
     ]
    },
    "xarray.core.accessors._season_from_months": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.accessors._get_date_field": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "dask.array.map_blocks": {
     "line number": [
      53
     ]
    },
    "isinstance": {
     "line number": [
      51
     ]
    },
    "xarray.core.accessors._access_through_series": {
     "line number": [
      53,
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.accessors._round_field": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "dask.array.map_blocks": {
     "line number": [
      90
     ]
    },
    "isinstance": {
     "line number": [
      88
     ]
    },
    "numpy.datetime64": {
     "line number": [
      91
     ]
    },
    "xarray.core.accessors._round_series": {
     "line number": [
      90,
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.accessors._round_series": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      64
     ]
    },
    "method": {
     "line number": [
      65
     ]
    },
    "pandas.Series": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.accessors._season_from_months": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      14
     ]
    },
    "numpy.asarray": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.accessors.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.accessors.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.accessors.map_blocks": {
  "data": {
   "shadows": "dask.array.map_blocks"
  },
  "type": "import"
 },
 "xarray.core.accessors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.accessors.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.accessors.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.alignment": {
  "data": {
   "symbols_in_volume": {
    "frozenset": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "module"
 },
 "xarray.core.alignment._DEFAULT_EXCLUDE": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "xarray.core.alignment._get_joiner": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      31
     ]
    },
    "xarray.core.alignment.functools": {
     "line number": [
      19,
      19,
      21,
      21
     ]
    },
    "xarray.core.alignment.operator": {
     "line number": [
      19,
      21,
      23,
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.alignment.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.alignment.align": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      106
     ]
    },
    "TypeError": {
     "line number": [
      91
     ]
    },
    "ValueError": {
     "line number": [
      129,
      141,
      151
     ]
    },
    "any": {
     "line number": [
      121,
      125
     ]
    },
    "collections.defaultdict": {
     "line number": [
      99,
      100
     ]
    },
    "iteritems": {
     "line number": [
      118
     ]
    },
    "joiner": {
     "line number": [
      132
     ]
    },
    "len": {
     "line number": [
      94,
      140,
      150
     ]
    },
    "list": {
     "line number": [
      92,
      99
     ]
    },
    "set": {
     "line number": [
      100
     ]
    },
    "tuple": {
     "line number": [
      168
     ]
    },
    "xarray.core.alignment._DEFAULT_EXCLUDE": {
     "line number": [
      87
     ]
    },
    "xarray.core.alignment._get_joiner": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.alignment.broadcast": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": {
    "DataArray": {
     "line number": [
      508
     ]
    },
    "Dataset": {
     "line number": [
      510
     ]
    },
    "OrderedDict": {
     "line number": [
      472,
      473
     ]
    },
    "TypeError": {
     "line number": [
      467
     ]
    },
    "ValueError": {
     "line number": [
      513
     ]
    },
    "_broadcast_array": {
     "line number": [
      509
     ]
    },
    "_broadcast_dataset": {
     "line number": [
      511
     ]
    },
    "isinstance": {
     "line number": [
      508,
      510
     ]
    },
    "list": {
     "line number": [
      468
     ]
    },
    "set": {
     "line number": [
      465
     ]
    },
    "tuple": {
     "line number": [
      515
     ]
    },
    "xarray.core.alignment.align": {
     "line number": [
      470
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.alignment.broadcast._broadcast_array": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": {
    "DataArray": {
     "line number": [
      495
     ]
    },
    "OrderedDict": {
     "line number": [
      493
     ]
    },
    "_set_dims": {
     "line number": [
      492
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.alignment.broadcast._broadcast_dataset": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": {
    "Dataset": {
     "line number": [
      504
     ]
    },
    "OrderedDict": {
     "line number": [
      499,
      502
     ]
    },
    "_set_dims": {
     "line number": [
      500
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.alignment.broadcast._set_dims": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      485
     ]
    },
    "suppress": {
     "line number": [
      485
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.alignment.broadcast_arrays": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      521
     ]
    },
    "xarray.core.alignment.broadcast": {
     "line number": [
      522
     ]
    },
    "xarray.core.alignment.warnings": {
     "line number": [
      520
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.alignment.deep_align": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      204
     ]
    },
    "ValueError": {
     "line number": [
      206
     ]
    },
    "all": {
     "line number": [
      222
     ]
    },
    "enumerate": {
     "line number": [
      189
     ]
    },
    "frozenset": {
     "line number": [
      172
     ]
    },
    "is_alignable": {
     "line number": [
      190,
      197
     ]
    },
    "is_dict_like": {
     "line number": [
      195
     ]
    },
    "object": {
     "line number": [
      187,
      188
     ]
    },
    "xarray.core.alignment.align": {
     "line number": [
      212
     ]
    },
    "zip": {
     "line number": [
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.alignment.deep_align.is_alignable": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      181,
      181
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.alignment.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "xarray.core.alignment.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.alignment.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.core.alignment.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.alignment.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "xarray.core.alignment.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.alignment.reindex_like_indexers": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      255
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.alignment.reindex_variables": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": {
    "FutureWarning": {
     "line number": [
      356
     ]
    },
    "IndexVariable": {
     "line number": [
      363
     ]
    },
    "OrderedDict": {
     "line number": [
      347
     ]
    },
    "ValueError": {
     "line number": [
      317,
      341
     ]
    },
    "all": {
     "line number": [
      375
     ]
    },
    "any": {
     "line number": [
      371
     ]
    },
    "get_indexer_nd": {
     "line number": [
      324
     ]
    },
    "is_full_slice": {
     "line number": [
      375
     ]
    },
    "isinstance": {
     "line number": [
      350
     ]
    },
    "iteritems": {
     "line number": [
      314,
      365
     ]
    },
    "len": {
     "line number": [
      322,
      330
     ]
    },
    "numpy.arange": {
     "line number": [
      330
     ]
    },
    "numpy.array_equal": {
     "line number": [
      330
     ]
    },
    "set": {
     "line number": [
      308,
      309
     ]
    },
    "slice": {
     "line number": [
      367,
      369
     ]
    },
    "str": {
     "line number": [
      355
     ]
    },
    "tuple": {
     "line number": [
      367
     ]
    },
    "xarray.core.alignment.warnings": {
     "line number": [
      351
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.alignment.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.core.arithmetic": {
  "data": {},
  "type": "module"
 },
 "xarray.core.arithmetic.SupportsArithmetic": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "numpy.generic": {
     "line number": [
      24
     ]
    },
    "numpy.ndarray": {
     "line number": [
      24
     ]
    },
    "object": {
     "line number": [
      13
     ]
    },
    "xarray.core.arithmetic.numbers": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.arithmetic.SupportsArithmetic.__array_ufunc__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "NotImplemented": {
     "line number": [
      34
     ]
    },
    "NotImplementedError": {
     "line number": [
      37,
      46,
      56
     ]
    },
    "any": {
     "line number": [
      53
     ]
    },
    "apply_ufunc": {
     "line number": [
      64
     ]
    },
    "isinstance": {
     "line number": [
      33,
      53
     ]
    },
    "numpy.nan": {
     "line number": [
      69
     ]
    },
    "xarray.core.arithmetic.SupportsArithmetic": {
     "line number": [
      33,
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.arithmetic.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.arithmetic.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.arithmetic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.arithmetic.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "xarray.core.arithmetic.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.combine": {
  "data": {},
  "type": "module"
 },
 "xarray.core.combine._CONCAT_DIM_DEFAULT": {
  "data": {
   "lineno": 368
  },
  "type": "constant"
 },
 "xarray.core.combine._auto_concat": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      358,
      361
     ]
    },
    "len": {
     "line number": [
      343,
      354,
      357,
      360
     ]
    },
    "set": {
     "line number": [
      350,
      352,
      352,
      353,
      355
     ]
    },
    "xarray.core.combine.concat": {
     "line number": [
      365
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.combine._calc_concat_dim_coord": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "IndexVariable": {
     "line number": [
      135
     ]
    },
    "as_variable": {
     "line number": [
      138
     ]
    },
    "getattr": {
     "line number": [
      132
     ]
    },
    "hasattr": {
     "line number": [
      130,
      137
     ]
    },
    "isinstance": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.combine._calc_concat_over": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "process_subset_opt": {
     "line number": [
      209,
      210
     ]
    },
    "set": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.combine._calc_concat_over.process_subset_opt": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      194,
      200,
      204
     ]
    },
    "getattr": {
     "line number": [
      165,
      189,
      197
     ]
    },
    "isinstance": {
     "line number": [
      162
     ]
    },
    "set": {
     "line number": [
      189,
      190
     ]
    },
    "zip": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.combine._dataarray_concat": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      323,
      332
     ]
    },
    "enumerate": {
     "line number": [
      327
     ]
    },
    "list": {
     "line number": [
      320
     ]
    },
    "xarray.core.combine._dataset_concat": {
     "line number": [
      337
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.combine._dataset_concat": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "Dataset": {
     "line number": [
      307
     ]
    },
    "KeyError": {
     "line number": [
      271
     ]
    },
    "OrderedDict": {
     "line number": [
      238
     ]
    },
    "ValueError": {
     "line number": [
      221,
      252,
      255,
      257,
      264,
      275
     ]
    },
    "align": {
     "line number": [
      227
     ]
    },
    "ensure_common_dims": {
     "line number": [
      303
     ]
    },
    "insert_result_variable": {
     "line number": [
      245,
      305
     ]
    },
    "iteritems": {
     "line number": [
      253
     ]
    },
    "set": {
     "line number": [
      239
     ]
    },
    "vars": {
     "line number": [
      303,
      304
     ]
    },
    "xarray.core.combine._calc_concat_dim_coord": {
     "line number": [
      224
     ]
    },
    "xarray.core.combine._calc_concat_over": {
     "line number": [
      229
     ]
    },
    "xarray.core.combine.concat": {
     "line number": [
      304
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.combine._dataset_concat.ensure_common_dims": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": {
    "pandas.unique": {
     "line number": [
      290
     ]
    },
    "tuple": {
     "line number": [
      290,
      295
     ]
    },
    "vars": {
     "line number": [
      290,
      293
     ]
    },
    "zip": {
     "line number": [
      293
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.combine._dataset_concat.insert_result_variable": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.combine.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.combine.auto_combine": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": {
    "merge": {
     "line number": [
      439
     ]
    },
    "sorted": {
     "line number": [
      432
     ]
    },
    "toolz.itertoolz.groupby": {
     "line number": [
      432
     ]
    },
    "tuple": {
     "line number": [
      432
     ]
    },
    "xarray.core.combine._CONCAT_DIM_DEFAULT": {
     "line number": [
      372,
      431
     ]
    },
    "xarray.core.combine._auto_concat": {
     "line number": [
      434
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.combine.concat": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "FutureWarning": {
     "line number": [
      95,
      101
     ]
    },
    "StopIteration": {
     "line number": [
      88
     ]
    },
    "TypeError": {
     "line number": [
      118
     ]
    },
    "ValueError": {
     "line number": [
      89,
      105,
      109
     ]
    },
    "f": {
     "line number": [
      120
     ]
    },
    "isinstance": {
     "line number": [
      113,
      115
     ]
    },
    "type": {
     "line number": [
      119
     ]
    },
    "xarray.core.combine.warnings": {
     "line number": [
      92,
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.combine.concat_vars": {
  "data": {
   "shadows": "concat"
  },
  "type": "import"
 },
 "xarray.core.combine.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.combine.itertoolz": {
  "data": {
   "shadows": "toolz.itertoolz"
  },
  "type": "import"
 },
 "xarray.core.combine.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.combine.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.combine.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.core.common": {
  "data": {},
  "type": "module"
 },
 "xarray.core.common.AbstractArray": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "xarray.core.common.ImplementsArrayReduce": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.common.AbstractArray.T": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "property": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray.__array__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray.__bool__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray.__complex__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray.__float__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "float": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray.__int__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "int": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray.__iter__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray.__long__": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "long": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray.__repr__": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray._get_axis_num": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      136,
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray._iter": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "len": {
     "line number": [
      103
     ]
    },
    "range": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray.get_axis_num": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      128
     ]
    },
    "tuple": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.common.AbstractArray.sizes": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "Frozen": {
     "line number": [
      150
     ]
    },
    "OrderedDict": {
     "line number": [
      150
     ]
    },
    "property": {
     "line number": [
      140
     ]
    },
    "zip": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.common.AttrAccessMixin": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "object": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.common.AttrAccessMixin.__dir__": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "dir": {
     "line number": [
      200
     ]
    },
    "isinstance": {
     "line number": [
      199
     ]
    },
    "set": {
     "line number": [
      200
     ]
    },
    "sorted": {
     "line number": [
      200
     ]
    },
    "type": {
     "line number": [
      200
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.common.AttrAccessMixin.__getattr__": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      175
     ]
    },
    "KeyError": {
     "line number": [
      173
     ]
    },
    "suppress": {
     "line number": [
      173
     ]
    },
    "type": {
     "line number": [
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.common.AttrAccessMixin.__setattr__": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      185,
      186
     ]
    },
    "object.__setattr__": {
     "line number": [
      190
     ]
    },
    "type": {
     "line number": [
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.common.AttrAccessMixin._attr_sources": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "property": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.common.AttrAccessMixin._ipython_key_completions_": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      210
     ]
    },
    "list": {
     "line number": [
      211
     ]
    },
    "set": {
     "line number": [
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.common.AttrAccessMixin._item_sources": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "property": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": {
    "xarray.core.common.AttrAccessMixin": {
     "line number": [
      240
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.common.DataWithCoords.__enter__": {
  "data": {
   "lineno": 797
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.__exit__": {
  "data": {
   "lineno": 800
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords._calc_assign_results": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": {
    "SortedKeysDict": {
     "line number": [
      284
     ]
    },
    "callable": {
     "line number": [
      286
     ]
    },
    "v": {
     "line number": [
      287,
      289
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords._resample_immediately": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": {
    "DataArray": {
     "line number": [
      638
     ]
    },
    "DeprecationWarning": {
     "line number": [
      634
     ]
    },
    "f": {
     "line number": [
      645,
      647,
      649
     ]
    },
    "getattr": {
     "line number": [
      643
     ]
    },
    "isinstance": {
     "line number": [
      636,
      642
     ]
    },
    "pandas.Grouper": {
     "line number": [
      639
     ]
    },
    "xarray.core.common.warnings": {
     "line number": [
      629
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.assign_attrs": {
  "data": {
   "lineno": 329
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.assign_coords": {
  "data": {
   "lineno": 292
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.close": {
  "data": {
   "lineno": 741
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.get_index": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      275,
      279
     ]
    },
    "numpy.int64": {
     "line number": [
      281
     ]
    },
    "pandas.Index": {
     "line number": [
      281
     ]
    },
    "range": {
     "line number": [
      281
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.groupby": {
  "data": {
   "lineno": 411
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.groupby_bins": {
  "data": {
   "lineno": 437
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.isin": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": {
    "DataArray": {
     "line number": [
      785
     ]
    },
    "TypeError": {
     "line number": [
      782
     ]
    },
    "apply_ufunc": {
     "line number": [
      790
     ]
    },
    "dict": {
     "line number": [
      793
     ]
    },
    "isinstance": {
     "line number": [
      781,
      785
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.pipe": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      405
     ]
    },
    "func": {
     "line number": [
      407,
      409
     ]
    },
    "isinstance": {
     "line number": [
      401
     ]
    },
    "tuple": {
     "line number": [
      401
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.resample": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": {
    "DataArray": {
     "line number": [
      614
     ]
    },
    "TypeError": {
     "line number": [
      597,
      612
     ]
    },
    "ValueError": {
     "line number": [
      603
     ]
    },
    "isinstance": {
     "line number": [
      608
     ]
    },
    "len": {
     "line number": [
      602
     ]
    },
    "pandas.Grouper": {
     "line number": [
      615
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.rolling": {
  "data": {
   "lineno": 489
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.squeeze": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "xarray.core.common.get_squeeze_dims": {
     "line number": [
      268
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.common.DataWithCoords.where": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": {
    "DataArray": {
     "line number": [
      719,
      721
     ]
    },
    "TypeError": {
     "line number": [
      720
     ]
    },
    "ValueError": {
     "line number": [
      717
     ]
    },
    "align": {
     "line number": [
      724
     ]
    },
    "isinstance": {
     "line number": [
      719,
      727
     ]
    },
    "numpy.nonzero": {
     "line number": [
      733
     ]
    },
    "numpy.unique": {
     "line number": [
      734
     ]
    },
    "v": {
     "line number": [
      734,
      734
     ]
    },
    "zip": {
     "line number": [
      733
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.common.ImplementsArrayReduce": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "object": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.common.ImplementsArrayReduce._reduce_method": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.common.ImplementsArrayReduce._reduce_method.wrapped_func": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "xarray.core.common.ImplementsDatasetReduce": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "object": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.common.ImplementsDatasetReduce._reduce_method": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.common.ImplementsDatasetReduce._reduce_method.wrapped_func": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "xarray.core.common.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.core.common._full_like_variable": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": {
    "Variable": {
     "line number": [
      858
     ]
    },
    "isinstance": {
     "line number": [
      849
     ]
    },
    "numpy.full_like": {
     "line number": [
      856
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.common.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.common.dask.array": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.core.common.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.common.full_like": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": {
    "DataArray": {
     "line number": [
      833,
      834
     ]
    },
    "Dataset": {
     "line number": [
      832
     ]
    },
    "OrderedDict": {
     "line number": [
      829
     ]
    },
    "TypeError": {
     "line number": [
      841
     ]
    },
    "isinstance": {
     "line number": [
      828,
      833,
      838
     ]
    },
    "v": {
     "line number": [
      830,
      831
     ]
    },
    "xarray.core.common._full_like_variable": {
     "line number": [
      830,
      835,
      839
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.common.get_squeeze_dims": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      218,
      230,
      235
     ]
    },
    "any": {
     "line number": [
      234
     ]
    },
    "int": {
     "line number": [
      225,
      229
     ]
    },
    "isinstance": {
     "line number": [
      223,
      225,
      227,
      229
     ]
    },
    "list": {
     "line number": [
      232
     ]
    },
    "tuple": {
     "line number": [
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.common.ones_like": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": {
    "xarray.core.common.full_like": {
     "line number": [
      870
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.common.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.common.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.common.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.core.common.zeros_like": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": {
    "xarray.core.common.full_like": {
     "line number": [
      864
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.computation": {
  "data": {
   "symbols_in_volume": {
    "frozenset": {
     "line number": [
      19,
      22
     ]
    },
    "slice": {
     "line number": [
      466
     ]
    },
    "xarray.core.computation.assert_and_return_exact_match": {
     "line number": [
      260
     ]
    },
    "xarray.core.computation.operator": {
     "line number": [
      258,
      259
     ]
    },
    "xarray.core.computation.ordered_set_intersection": {
     "line number": [
      256
     ]
    },
    "xarray.core.computation.ordered_set_union": {
     "line number": [
      257
     ]
    }
   }
  },
  "type": "module"
 },
 "xarray.core.computation.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "xarray.core.computation.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.core.computation.SLICE_NONE": {
  "data": {
   "lineno": 466
  },
  "type": "constant"
 },
 "xarray.core.computation._DEFAULT_FROZEN_SET": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "xarray.core.computation._DEFAULT_NAME": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "xarray.core.computation._JOINERS": {
  "data": {
   "lineno": 255
  },
  "type": "constant"
 },
 "xarray.core.computation._JOINS_WITHOUT_FILL_VALUES": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "xarray.core.computation._NO_FILL_VALUE": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "xarray.core.computation._UFuncSignature": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "object": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.computation._UFuncSignature.__eq__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.computation._UFuncSignature.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "tuple": {
     "line number": [
      39,
      39,
      40,
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.computation._UFuncSignature.__ne__": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "xarray.core.computation._UFuncSignature.__repr__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "list": {
     "line number": [
      87,
      88
     ]
    },
    "type": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.computation._UFuncSignature.__str__": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "xarray.core.computation._UFuncSignature.all_core_dims": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "property": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.computation._UFuncSignature.all_input_core_dims": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "frozenset": {
     "line number": [
      48
     ]
    },
    "property": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.computation._UFuncSignature.all_output_core_dims": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "frozenset": {
     "line number": [
      55
     ]
    },
    "property": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.computation._UFuncSignature.num_inputs": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "len": {
     "line number": [
      68
     ]
    },
    "property": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.computation._UFuncSignature.num_outputs": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "len": {
     "line number": [
      72
     ]
    },
    "property": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.computation._UFuncSignature.to_gufunc_string": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      104
     ]
    },
    "len": {
     "line number": [
      104
     ]
    },
    "range": {
     "line number": [
      104
     ]
    },
    "sorted": {
     "line number": [
      104
     ]
    },
    "str": {
     "line number": [
      110
     ]
    },
    "type": {
     "line number": [
      109
     ]
    },
    "zip": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.computation._apply_with_dask_atop": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      582
     ]
    },
    "TypeError": {
     "line number": [
      589
     ]
    },
    "ValueError": {
     "line number": [
      586,
      592,
      602,
      613
     ]
    },
    "any": {
     "line number": [
      601
     ]
    },
    "dask.array.atop": {
     "line number": [
      631
     ]
    },
    "enumerate": {
     "line number": [
      607,
      611
     ]
    },
    "func": {
     "line number": [
      631
     ]
    },
    "getattr": {
     "line number": [
      627
     ]
    },
    "isinstance": {
     "line number": [
      588,
      609
     ]
    },
    "len": {
     "line number": [
      591,
      594,
      611,
      612
     ]
    },
    "list": {
     "line number": [
      588
     ]
    },
    "zip": {
     "line number": [
      608,
      625
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.computation._as_variables_or_variable": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      283,
      286
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.computation._fast_dataset": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": {
    "set": {
     "line number": [
      335
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.computation._get_coord_variables": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      131
     ]
    },
    "getattr": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.computation._iter_over_selections": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      399
     ]
    },
    "KeyError": {
     "line number": [
      399
     ]
    },
    "_dummy_copy": {
     "line number": [
      401
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.computation._unpack_dict_tuples": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      295
     ]
    },
    "range": {
     "line number": [
      295
     ]
    },
    "tuple": {
     "line number": [
      295
     ]
    },
    "zip": {
     "line number": [
      297
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.computation.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.computation.apply_array_ufunc": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      640
     ]
    },
    "ValueError": {
     "line number": [
      645,
      651,
      656
     ]
    },
    "any": {
     "line number": [
      643
     ]
    },
    "func": {
     "line number": [
      658
     ]
    },
    "isinstance": {
     "line number": [
      643
     ]
    },
    "list": {
     "line number": [
      641
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.computation.apply_dataarray_ufunc": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "DataArray": {
     "line number": [
      214,
      218,
      220
     ]
    },
    "TypeError": {
     "line number": [
      200
     ]
    },
    "deep_align": {
     "line number": [
      204
     ]
    },
    "func": {
     "line number": [
      211
     ]
    },
    "getattr": {
     "line number": [
      210
     ]
    },
    "isinstance": {
     "line number": [
      220,
      221
     ]
    },
    "len": {
     "line number": [
      203
     ]
    },
    "list": {
     "line number": [
      201
     ]
    },
    "tuple": {
     "line number": [
      214,
      221,
      222
     ]
    },
    "xarray.core.computation._DEFAULT_FROZEN_SET": {
     "line number": [
      197
     ]
    },
    "xarray.core.computation.build_output_coords": {
     "line number": [
      208
     ]
    },
    "xarray.core.computation.result_name": {
     "line number": [
      207
     ]
    },
    "zip": {
     "line number": [
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.computation.apply_dataset_ufunc": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      358,
      363
     ]
    },
    "deep_align": {
     "line number": [
      366
     ]
    },
    "func": {
     "line number": [
      373
     ]
    },
    "getattr": {
     "line number": [
      370
     ]
    },
    "isinstance": {
     "line number": [
      383,
      384
     ]
    },
    "len": {
     "line number": [
      365
     ]
    },
    "list": {
     "line number": [
      364
     ]
    },
    "tuple": {
     "line number": [
      377,
      384,
      385
     ]
    },
    "xarray.core.computation._DEFAULT_FROZEN_SET": {
     "line number": [
      352
     ]
    },
    "xarray.core.computation._JOINS_WITHOUT_FILL_VALUES": {
     "line number": [
      356
     ]
    },
    "xarray.core.computation._NO_FILL_VALUE": {
     "line number": [
      357
     ]
    },
    "xarray.core.computation._fast_dataset": {
     "line number": [
      377,
      381
     ]
    },
    "xarray.core.computation.apply_dict_of_variables_ufunc": {
     "line number": [
      372
     ]
    },
    "xarray.core.computation.build_output_coords": {
     "line number": [
      369
     ]
    },
    "zip": {
     "line number": [
      378
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.computation.apply_dict_of_variables_ufunc": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      317
     ]
    },
    "TypeError": {
     "line number": [
      310
     ]
    },
    "func": {
     "line number": [
      319
     ]
    },
    "list": {
     "line number": [
      311
     ]
    },
    "xarray.core.computation._as_variables_or_variable": {
     "line number": [
      313
     ]
    },
    "xarray.core.computation._unpack_dict_tuples": {
     "line number": [
      322
     ]
    },
    "xarray.core.computation.collect_dict_values": {
     "line number": [
      315
     ]
    },
    "xarray.core.computation.join_dict_keys": {
     "line number": [
      314
     ]
    },
    "zip": {
     "line number": [
      318
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.computation.apply_groupby_ufunc": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      414,
      427
     ]
    },
    "any": {
     "line number": [
      413
     ]
    },
    "combine": {
     "line number": [
      440,
      442
     ]
    },
    "func": {
     "line number": [
      436
     ]
    },
    "hasattr": {
     "line number": [
      425
     ]
    },
    "isinstance": {
     "line number": [
      410,
      423,
      426,
      439
     ]
    },
    "peek_at": {
     "line number": [
      437
     ]
    },
    "tuple": {
     "line number": [
      439,
      440
     ]
    },
    "xarray.core.computation._iter_over_selections": {
     "line number": [
      431
     ]
    },
    "xarray.core.computation.itertools": {
     "line number": [
      433
     ]
    },
    "zip": {
     "line number": [
      436,
      440
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.computation.apply_ufunc": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": {
    "DataArray": {
     "line number": [
      929
     ]
    },
    "NotImplementedError": {
     "line number": [
      889
     ]
    },
    "TypeError": {
     "line number": [
      870
     ]
    },
    "ValueError": {
     "line number": [
      879
     ]
    },
    "Variable": {
     "line number": [
      935
     ]
    },
    "any": {
     "line number": [
      909,
      921,
      929,
      935
     ]
    },
    "distutils.version.LooseVersion": {
     "line number": [
      888
     ]
    },
    "frozenset": {
     "line number": [
      863
     ]
    },
    "func": {
     "line number": [
      883,
      883,
      893,
      893,
      898,
      898,
      902,
      911,
      938
     ]
    },
    "is_dict_like": {
     "line number": [
      921
     ]
    },
    "isinstance": {
     "line number": [
      909,
      929,
      935
     ]
    },
    "len": {
     "line number": [
      874
     ]
    },
    "list": {
     "line number": [
      871
     ]
    },
    "numpy.__version__": {
     "line number": [
      888
     ]
    },
    "numpy.vectorize": {
     "line number": [
      893,
      898
     ]
    },
    "set": {
     "line number": [
      896,
      900
     ]
    },
    "variables_ufunc": {
     "line number": [
      936
     ]
    },
    "xarray.core.computation._NO_FILL_VALUE": {
     "line number": [
      864
     ]
    },
    "xarray.core.computation._UFuncSignature": {
     "line number": [
      876
     ]
    },
    "xarray.core.computation.apply_array_ufunc": {
     "line number": [
      938
     ]
    },
    "xarray.core.computation.apply_dataarray_ufunc": {
     "line number": [
      930
     ]
    },
    "xarray.core.computation.apply_dataset_ufunc": {
     "line number": [
      922
     ]
    },
    "xarray.core.computation.apply_groupby_ufunc": {
     "line number": [
      920
     ]
    },
    "xarray.core.computation.apply_variable_ufunc": {
     "line number": [
      902
     ]
    },
    "xarray.core.computation.functools": {
     "line number": [
      883,
      902,
      911
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.computation.apply_variable_ufunc": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      530
     ]
    },
    "ValueError": {
     "line number": [
      546,
      563
     ]
    },
    "Variable": {
     "line number": [
      570,
      574
     ]
    },
    "any": {
     "line number": [
      544
     ]
    },
    "func": {
     "line number": [
      554,
      565
     ]
    },
    "hasattr": {
     "line number": [
      533
     ]
    },
    "isinstance": {
     "line number": [
      540,
      544
     ]
    },
    "list": {
     "line number": [
      531
     ]
    },
    "tuple": {
     "line number": [
      535,
      571
     ]
    },
    "xarray.core.computation._DEFAULT_FROZEN_SET": {
     "line number": [
      525
     ]
    },
    "xarray.core.computation.broadcast_compat_data": {
     "line number": [
      539
     ]
    },
    "xarray.core.computation.unified_dim_sizes": {
     "line number": [
      533
     ]
    },
    "zip": {
     "line number": [
      542,
      569
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.computation.apply_variable_ufunc.func": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": {
    "xarray.core.computation._apply_with_dask_atop": {
     "line number": [
      557
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.computation.assert_and_return_exact_match": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      249
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.computation.broadcast_compat_data": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      485,
      493
     ]
    },
    "list": {
     "line number": [
      488
     ]
    },
    "numpy.newaxis": {
     "line number": [
      513
     ]
    },
    "set": {
     "line number": [
      482,
      490
     ]
    },
    "tuple": {
     "line number": [
      499,
      502,
      514
     ]
    },
    "xarray.core.computation.SLICE_NONE": {
     "line number": [
      509
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.computation.build_output_coords": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      165,
      172,
      180
     ]
    },
    "expand_and_merge_variables": {
     "line number": [
      174
     ]
    },
    "frozenset": {
     "line number": [
      142
     ]
    },
    "len": {
     "line number": [
      169
     ]
    },
    "set": {
     "line number": [
      178
     ]
    },
    "xarray.core.computation._get_coord_variables": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.computation.collect_dict_values": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": {
    "is_dict_like": {
     "line number": [
      274
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.computation.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.core.computation.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.computation.dot": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": {
    "DataArray": {
     "line number": [
      982
     ]
    },
    "TypeError": {
     "line number": [
      979,
      983,
      987
     ]
    },
    "Variable": {
     "line number": [
      982
     ]
    },
    "any": {
     "line number": [
      982
     ]
    },
    "collections.Counter": {
     "line number": [
      1002
     ]
    },
    "enumerate": {
     "line number": [
      998
     ]
    },
    "func": {
     "line number": [
      1038,
      1039
     ]
    },
    "isinstance": {
     "line number": [
      982,
      989
     ]
    },
    "len": {
     "line number": [
      978,
      986,
      1018,
      1018
     ]
    },
    "list": {
     "line number": [
      980
     ]
    },
    "numpy.einsum": {
     "line number": [
      1038
     ]
    },
    "set": {
     "line number": [
      992
     ]
    },
    "set.intersection": {
     "line number": [
      992
     ]
    },
    "tuple": {
     "line number": [
      1005,
      1007,
      1010,
      1014
     ]
    },
    "type": {
     "line number": [
      984
     ]
    },
    "xarray.core.computation.apply_ufunc": {
     "line number": [
      1021,
      1039
     ]
    },
    "xarray.core.computation.functools": {
     "line number": [
      1038
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.computation.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.core.computation.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "xarray.core.computation.join_dict_keys": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      267
     ]
    },
    "joiner": {
     "line number": [
      268
     ]
    },
    "xarray.core.computation._JOINERS": {
     "line number": [
      266
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.computation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.computation.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "xarray.core.computation.ordered_set_intersection": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": {
    "set": {
     "line number": [
      239
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.computation.ordered_set_union": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.computation.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.computation.result_name": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      117
     ]
    },
    "len": {
     "line number": [
      119
     ]
    },
    "xarray.core.computation._DEFAULT_NAME": {
     "line number": [
      117,
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.computation.unified_dim_sizes": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      448
     ]
    },
    "ValueError": {
     "line number": [
      452,
      459
     ]
    },
    "frozenset": {
     "line number": [
      446
     ]
    },
    "len": {
     "line number": [
      451,
      451
     ]
    },
    "list": {
     "line number": [
      453
     ]
    },
    "set": {
     "line number": [
      451
     ]
    },
    "zip": {
     "line number": [
      454
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.computation.where": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": {
    "xarray.core.computation.apply_ufunc": {
     "line number": [
      1081
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.coordinates": {
  "data": {},
  "type": "module"
 },
 "xarray.core.coordinates.AbstractCoordinates": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "collections.Mapping": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.coordinates.AbstractCoordinates.__contains__": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "xarray.core.coordinates.AbstractCoordinates.__getitem__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.coordinates.AbstractCoordinates.__iter__": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "xarray.core.coordinates.AbstractCoordinates.__len__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "len": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.coordinates.AbstractCoordinates.__setitem__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "xarray.core.coordinates.AbstractCoordinates.__unicode__": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "xarray.core.coordinates.AbstractCoordinates._merge_inplace": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      109
     ]
    },
    "contextlib.contextmanager": {
     "line number": [
      101
     ]
    },
    "merge_coords_for_inplace_math": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.coordinates.AbstractCoordinates._merge_raw": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      94
     ]
    },
    "expand_and_merge_variables": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.coordinates.AbstractCoordinates._update_coords": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.coordinates.AbstractCoordinates.dims": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "property": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.coordinates.AbstractCoordinates.indexes": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "property": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.coordinates.AbstractCoordinates.merge": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "expand_and_merge_variables": {
     "line number": [
      144
     ]
    },
    "getattr": {
     "line number": [
      143
     ]
    },
    "set": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.coordinates.AbstractCoordinates.to_index": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      72,
      76
     ]
    },
    "len": {
     "line number": [
      75,
      77
     ]
    },
    "list": {
     "line number": [
      82
     ]
    },
    "pandas.MultiIndex.from_product": {
     "line number": [
      83
     ]
    },
    "set": {
     "line number": [
      71,
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.coordinates.AbstractCoordinates.update": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      86
     ]
    },
    "merge_coords": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.coordinates.AbstractCoordinates.variables": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      29
     ]
    },
    "property": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.coordinates.DataArrayCoordinates": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": {
    "xarray.core.coordinates.AbstractCoordinates": {
     "line number": [
      208
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.coordinates.DataArrayCoordinates.__delitem__": {
  "data": {
   "lineno": 247
  },
  "type": "function"
 },
 "xarray.core.coordinates.DataArrayCoordinates.__getitem__": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "xarray.core.coordinates.DataArrayCoordinates.__init__": {
  "data": {
   "lineno": 215
  },
  "type": "function"
 },
 "xarray.core.coordinates.DataArrayCoordinates._ipython_key_completions_": {
  "data": {
   "lineno": 250
  },
  "type": "function"
 },
 "xarray.core.coordinates.DataArrayCoordinates._names": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "property": {
     "line number": [
      218
     ]
    },
    "set": {
     "line number": [
      220
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.coordinates.DataArrayCoordinates._to_dataset": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      240
     ]
    },
    "set": {
     "line number": [
      242
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.coordinates.DataArrayCoordinates._update_coords": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      230
     ]
    },
    "calculate_dimensions": {
     "line number": [
      228
     ]
    },
    "set": {
     "line number": [
      229,
      229
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.coordinates.DataArrayCoordinates.to_dataset": {
  "data": {
   "lineno": 244
  },
  "type": "function"
 },
 "xarray.core.coordinates.DataArrayCoordinates.variables": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "Frozen": {
     "line number": [
      236
     ]
    },
    "property": {
     "line number": [
      234
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.coordinates.DatasetCoordinates": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "xarray.core.coordinates.AbstractCoordinates": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.coordinates.DatasetCoordinates.__delitem__": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      200
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.coordinates.DatasetCoordinates.__getitem__": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      171
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.coordinates.DatasetCoordinates.__init__": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "xarray.core.coordinates.DatasetCoordinates._ipython_key_completions_": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "xarray.core.coordinates.DatasetCoordinates._names": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "property": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.coordinates.DatasetCoordinates._update_coords": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "calculate_dimensions": {
     "line number": [
      186
     ]
    },
    "dict": {
     "line number": [
      194
     ]
    },
    "set": {
     "line number": [
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.coordinates.DatasetCoordinates.to_dataset": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "xarray.core.coordinates.DatasetCoordinates.variables": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "Frozen": {
     "line number": [
      165
     ]
    },
    "OrderedDict": {
     "line number": [
      165
     ]
    },
    "property": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.coordinates.Indexes": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": {
    "collections.Mapping": {
     "line number": [
      273
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.coordinates.Indexes.__contains__": {
  "data": {
   "lineno": 299
  },
  "type": "function"
 },
 "xarray.core.coordinates.Indexes.__getitem__": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      304
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.coordinates.Indexes.__init__": {
  "data": {
   "lineno": 277
  },
  "type": "function"
 },
 "xarray.core.coordinates.Indexes.__iter__": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "xarray.core.coordinates.Indexes.__len__": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": {
    "sum": {
     "line number": [
      297
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.coordinates.Indexes.__unicode__": {
  "data": {
   "lineno": 307
  },
  "type": "function"
 },
 "xarray.core.coordinates.LevelCoordinatesSource": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "object": {
     "line number": [
      255
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.coordinates.LevelCoordinatesSource.__getitem__": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      267
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.coordinates.LevelCoordinatesSource.__init__": {
  "data": {
   "lineno": 262
  },
  "type": "function"
 },
 "xarray.core.coordinates.LevelCoordinatesSource.__iter__": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      270
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.coordinates.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "xarray.core.coordinates.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.coordinates.assert_coordinate_consistent": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      322
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.coordinates.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "xarray.core.coordinates.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.coordinates.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.coordinates.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.coordinates.remap_label_indexers": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": {
    "DataArray": {
     "line number": [
      357
     ]
    },
    "OrderedDict": {
     "line number": [
      355
     ]
    },
    "Variable": {
     "line number": [
      351
     ]
    },
    "isinstance": {
     "line number": [
      342,
      350,
      352
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dask_array_compat": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "module"
 },
 "xarray.core.dask_array_compat._isin_kernel": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "numpy.in1d": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dask_array_compat.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.dask_array_compat.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.core.dask_array_compat.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.dask_array_compat.isin": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      27
     ]
    },
    "dask.array.asarray": {
     "line number": [
      18,
      19
     ]
    },
    "dask.array.atop": {
     "line number": [
      22
     ]
    },
    "range": {
     "line number": [
      20,
      21
     ]
    },
    "tuple": {
     "line number": [
      20,
      21
     ]
    },
    "xarray.core.dask_array_compat._isin_kernel": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dask_array_compat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.dask_array_compat.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.dask_array_ops": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "module"
 },
 "xarray.core.dask_array_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.dask_array_ops.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.core.dask_array_ops.dask_rolling_wrapper": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "dask.array.ghost.ghost": {
     "line number": [
      22
     ]
    },
    "dask.array.ghost.trim_internal": {
     "line number": [
      27
     ]
    },
    "numpy.nan": {
     "line number": [
      20
     ]
    },
    "range": {
     "line number": [
      18,
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dask_array_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.dask_array_ops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.dask_array_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.dask_array_ops.rolling_window": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      43
     ]
    },
    "dask.array.concatenate": {
     "line number": [
      74
     ]
    },
    "dask.array.full": {
     "line number": [
      73
     ]
    },
    "dask.array.ghost.ghost": {
     "line number": [
      79
     ]
    },
    "int": {
     "line number": [
      38,
      54
     ]
    },
    "list": {
     "line number": [
      69,
      71,
      87
     ]
    },
    "max": {
     "line number": [
      58
     ]
    },
    "min": {
     "line number": [
      42,
      48
     ]
    },
    "range": {
     "line number": [
      37,
      76
     ]
    },
    "slice": {
     "line number": [
      93,
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dask_array_ops.rolling_window.func": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      83
     ]
    },
    "slice": {
     "line number": [
      85,
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray": {
  "data": {
   "symbols_in_volume": {
    "xarray.core.dataarray.DataArray": {
     "line number": [
      2118
     ]
    }
   }
  },
  "type": "module"
 },
 "xarray.core.dataarray.DataArray": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "object": {
     "line number": [
      241,
      1698
     ]
    },
    "property": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.dataarray.DataArray.__array_wrap__": {
  "data": {
   "lineno": 1709
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__contains__": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": {
    "FutureWarning": {
     "line number": [
      508
     ]
    },
    "xarray.core.dataarray.warnings": {
     "line number": [
      505
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__copy__": {
  "data": {
   "lineno": 691
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__dask_graph__": {
  "data": {
   "lineno": 585
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__dask_keys__": {
  "data": {
   "lineno": 588
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__dask_optimize__": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": {
    "property": {
     "line number": [
      591
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__dask_postcompute__": {
  "data": {
   "lineno": 599
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__dask_postpersist__": {
  "data": {
   "lineno": 603
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__dask_scheduler__": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": {
    "property": {
     "line number": [
      595
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__deepcopy__": {
  "data": {
   "lineno": 694
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__delitem__": {
  "data": {
   "lineno": 490
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__getitem__": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      469
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__init__": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "Variable": {
     "line number": [
      227
     ]
    },
    "as_compatible_data": {
     "line number": [
      225
     ]
    },
    "getattr": {
     "line number": [
      207,
      217,
      217,
      219,
      221,
      223
     ]
    },
    "isinstance": {
     "line number": [
      208,
      210,
      212,
      214
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      210
     ]
    },
    "pandas.Index": {
     "line number": [
      212
     ]
    },
    "pandas.Panel": {
     "line number": [
      214
     ]
    },
    "pandas.Series": {
     "line number": [
      208
     ]
    },
    "xarray.core.dataarray._infer_coords_and_dims": {
     "line number": [
      226
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__len__": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": {
    "len": {
     "line number": [
      390
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.__setitem__": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": {
    "assert_coordinate_consistent": {
     "line number": [
      484
     ]
    },
    "isinstance": {
     "line number": [
      476,
      483,
      486
     ]
    },
    "xarray.core.dataarray.DataArray": {
     "line number": [
      483,
      486
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._all_compat": {
  "data": {
   "lineno": 1639,
   "symbols_in_volume": {
    "compat": {
     "line number": [
      1646
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._all_compat.compat": {
  "data": {
   "lineno": 1642,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      1643
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._attr_sources": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": {
    "property": {
     "line number": [
      493
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._binary_op": {
  "data": {
   "lineno": 1723,
   "symbols_in_volume": {
    "func": {
     "line number": [
      1744
     ]
    },
    "staticmethod": {
     "line number": [
      1723
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._binary_op.func": {
  "data": {
   "lineno": 1725,
   "symbols_in_volume": {
    "Dataset": {
     "line number": [
      1727
     ]
    },
    "NotImplemented": {
     "line number": [
      1728
     ]
    },
    "align": {
     "line number": [
      1732
     ]
    },
    "f": {
     "line number": [
      1736,
      1738,
      1725
     ]
    },
    "getattr": {
     "line number": [
      1733,
      1734
     ]
    },
    "hasattr": {
     "line number": [
      1729
     ]
    },
    "isinstance": {
     "line number": [
      1727
     ]
    },
    "xarray.core.dataarray.functools": {
     "line number": [
      1725
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._copy_attrs_from": {
  "data": {
   "lineno": 1765
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._dask_finalize": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": {
    "func": {
     "line number": [
      609
     ]
    },
    "staticmethod": {
     "line number": [
      607
     ]
    },
    "xarray.core.dataarray.DataArray": {
     "line number": [
      612
     ]
    },
    "xarray.core.dataarray._THIS_ARRAY": {
     "line number": [
      610
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._from_temp_dataset": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": {
    "xarray.core.dataarray._THIS_ARRAY": {
     "line number": [
      283
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._getitem_coord": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      461
     ]
    },
    "_get_virtual_variable": {
     "line number": [
      463
     ]
    },
    "dict": {
     "line number": [
      462
     ]
    },
    "zip": {
     "line number": [
      462
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._in_memory": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": {
    "property": {
     "line number": [
      410
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._inplace_binary_op": {
  "data": {
   "lineno": 1746,
   "symbols_in_volume": {
    "func": {
     "line number": [
      1763
     ]
    },
    "staticmethod": {
     "line number": [
      1746
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._inplace_binary_op.func": {
  "data": {
   "lineno": 1748,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1751
     ]
    },
    "f": {
     "line number": [
      1760,
      1748
     ]
    },
    "getattr": {
     "line number": [
      1757,
      1758
     ]
    },
    "isinstance": {
     "line number": [
      1750
     ]
    },
    "xarray.core.dataarray.functools": {
     "line number": [
      1748
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._item_key_to_dict": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      440
     ]
    },
    "zip": {
     "line number": [
      440
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._item_sources": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": {
    "LevelCoordinatesSource": {
     "line number": [
      502
     ]
    },
    "property": {
     "line number": [
      498
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._level_coords": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": {
    "IndexVariable": {
     "line number": [
      449
     ]
    },
    "OrderedDict": {
     "line number": [
      447
     ]
    },
    "isinstance": {
     "line number": [
      449
     ]
    },
    "property": {
     "line number": [
      442
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._replace": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "type": {
     "line number": [
      250
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._replace_indexes": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": {
    "IndexVariable": {
     "line number": [
      266
     ]
    },
    "isinstance": {
     "line number": [
      272
     ]
    },
    "len": {
     "line number": [
      262
     ]
    },
    "pandas.MultiIndex": {
     "line number": [
      272
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._replace_maybe_drop_dims": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      257
     ]
    },
    "set": {
     "line number": [
      256,
      258
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._result_name": {
  "data": {
   "lineno": 1700,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      1703
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._title_for_slice": {
  "data": {
   "lineno": 1785,
   "symbols_in_volume": {
    "format_item": {
     "line number": [
      1805
     ]
    },
    "iteritems": {
     "line number": [
      1802
     ]
    },
    "len": {
     "line number": [
      1808
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._to_dataset_split": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": {
    "Dataset": {
     "line number": [
      300
     ]
    },
    "OrderedDict": {
     "line number": [
      295
     ]
    },
    "subset": {
     "line number": [
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._to_dataset_split.subset": {
  "data": {
   "lineno": 288
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._to_dataset_whole": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": {
    "Dataset._from_vars_and_coord_names": {
     "line number": [
      319
     ]
    },
    "ValueError": {
     "line number": [
      306,
      309
     ]
    },
    "set": {
     "line number": [
      318
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._to_temp_dataset": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": {
    "xarray.core.dataarray._THIS_ARRAY": {
     "line number": [
      279
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._unary_op": {
  "data": {
   "lineno": 1713,
   "symbols_in_volume": {
    "func": {
     "line number": [
      1721
     ]
    },
    "staticmethod": {
     "line number": [
      1713
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray._unary_op.func": {
  "data": {
   "lineno": 1715,
   "symbols_in_volume": {
    "f": {
     "line number": [
      1718,
      1715
     ]
    },
    "numpy.errstate": {
     "line number": [
      1717
     ]
    },
    "xarray.core.dataarray.functools": {
     "line number": [
      1715
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.attrs": {
  "data": {
   "lineno": 522
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.bfill": {
  "data": {
   "lineno": 1291,
   "symbols_in_volume": {
    "bfill": {
     "line number": [
      1312
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.broadcast_equals": {
  "data": {
   "lineno": 1648,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      1660
     ]
    },
    "TypeError": {
     "line number": [
      1660
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.chunk": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      739
     ]
    },
    "isinstance": {
     "line number": [
      738
     ]
    },
    "list": {
     "line number": [
      738
     ]
    },
    "tuple": {
     "line number": [
      738
     ]
    },
    "zip": {
     "line number": [
      739
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.chunks": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": {
    "property": {
     "line number": [
      702
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.combine_first": {
  "data": {
   "lineno": 1314
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.compute": {
  "data": {
   "lineno": 638
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.coords": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": {
    "DataArrayCoordinates": {
     "line number": [
      546
     ]
    },
    "property": {
     "line number": [
      542
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.copy": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      687
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.data": {
  "data": {
   "lineno": 397
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.diff": {
  "data": {
   "lineno": 1813
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.dims": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      432
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.dot": {
  "data": {
   "lineno": 1930,
   "symbols_in_volume": {
    "Dataset": {
     "line number": [
      1970
     ]
    },
    "NotImplementedError": {
     "line number": [
      1971
     ]
    },
    "TypeError": {
     "line number": [
      1974
     ]
    },
    "isinstance": {
     "line number": [
      1970,
      1973
     ]
    },
    "xarray.core.dataarray.DataArray": {
     "line number": [
      1973
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.drop": {
  "data": {
   "lineno": 1156
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.dropna": {
  "data": {
   "lineno": 1176
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.dtype": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": {
    "property": {
     "line number": [
      369
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.encoding": {
  "data": {
   "lineno": 532
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.equals": {
  "data": {
   "lineno": 1663,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      1680
     ]
    },
    "TypeError": {
     "line number": [
      1680
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.expand_dims": {
  "data": {
   "lineno": 937
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.ffill": {
  "data": {
   "lineno": 1268,
   "symbols_in_volume": {
    "ffill": {
     "line number": [
      1289
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.fillna": {
  "data": {
   "lineno": 1198,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1218
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.from_cdms2": {
  "data": {
   "lineno": 1619,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1619
     ]
    },
    "from_cdms2": {
     "line number": [
      1624
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.from_dict": {
  "data": {
   "lineno": 1546,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      1585,
      1591
     ]
    },
    "OrderedDict": {
     "line number": [
      1581
     ]
    },
    "ValueError": {
     "line number": [
      1586,
      1592
     ]
    },
    "classmethod": {
     "line number": [
      1546
     ]
    },
    "cls": {
     "line number": [
      1594
     ]
    },
    "str": {
     "line number": [
      1588
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.from_iris": {
  "data": {
   "lineno": 1632,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1632
     ]
    },
    "from_iris": {
     "line number": [
      1637
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.from_series": {
  "data": {
   "lineno": 1598,
   "symbols_in_volume": {
    "Dataset.from_dataframe": {
     "line number": [
      1610
     ]
    },
    "classmethod": {
     "line number": [
      1598
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      1609
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.identical": {
  "data": {
   "lineno": 1683,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      1695
     ]
    },
    "TypeError": {
     "line number": [
      1695
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.imag": {
  "data": {
   "lineno": 1926,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1926
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.indexes": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": {
    "Indexes": {
     "line number": [
      540
     ]
    },
    "property": {
     "line number": [
      536
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.interpolate_na": {
  "data": {
   "lineno": 1223,
   "symbols_in_volume": {
    "interp_na": {
     "line number": [
      1265
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.isel": {
  "data": {
   "lineno": 745
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.isel_points": {
  "data": {
   "lineno": 770
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.load": {
  "data": {
   "lineno": 614
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.loc": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": {
    "property": {
     "line number": [
      511
     ]
    },
    "xarray.core.dataarray._LocIndexer": {
     "line number": [
      515
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.name": {
  "data": {
   "lineno": 360
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.nbytes": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": {
    "property": {
     "line number": [
      381
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.ndim": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": {
    "property": {
     "line number": [
      385
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.persist": {
  "data": {
   "lineno": 660
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.plot": {
  "data": {
   "lineno": 1768,
   "symbols_in_volume": {
    "_PlotMethods": {
     "line number": [
      1783
     ]
    },
    "property": {
     "line number": [
      1768
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.quantile": {
  "data": {
   "lineno": 2031
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.rank": {
  "data": {
   "lineno": 2077
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.real": {
  "data": {
   "lineno": 1922,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1922
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.reduce": {
  "data": {
   "lineno": 1332,
   "symbols_in_volume": {
    "func": {
     "line number": [
      1361
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.reindex": {
  "data": {
   "lineno": 841
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.reindex_like": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": {
    "reindex_like_indexers": {
     "line number": [
      837
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.rename": {
  "data": {
   "lineno": 885
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.reorder_levels": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": {
    "IndexVariable": {
     "line number": [
      1053
     ]
    },
    "ValueError": {
     "line number": [
      1052
     ]
    },
    "isinstance": {
     "line number": [
      1051
     ]
    },
    "pandas.MultiIndex": {
     "line number": [
      1051
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.reset_coords": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      568,
      580
     ]
    },
    "set": {
     "line number": [
      571,
      571
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.reset_index": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": {
    "set": {
     "line number": [
      1021
     ]
    },
    "split_indexes": {
     "line number": [
      1021
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.roll": {
  "data": {
   "lineno": 1888
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.sel": {
  "data": {
   "lineno": 757
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.sel_points": {
  "data": {
   "lineno": 781
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.set_index": {
  "data": {
   "lineno": 964,
   "symbols_in_volume": {
    "merge_indexes": {
     "line number": [
      990
     ]
    },
    "set": {
     "line number": [
      990
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.shape": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": {
    "property": {
     "line number": [
      373
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.shift": {
  "data": {
   "lineno": 1851
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.size": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": {
    "property": {
     "line number": [
      377
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.sortby": {
  "data": {
   "lineno": 1978
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.stack": {
  "data": {
   "lineno": 1062
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.swap_dims": {
  "data": {
   "lineno": 913
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.to_cdms2": {
  "data": {
   "lineno": 1613,
   "symbols_in_volume": {
    "to_cdms2": {
     "line number": [
      1617
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.to_dataframe": {
  "data": {
   "lineno": 1392,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      1406
     ]
    },
    "ValueError": {
     "line number": [
      1403
     ]
    },
    "zip": {
     "line number": [
      1406
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.to_dataset": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": {
    "FutureWarning": {
     "line number": [
      343
     ]
    },
    "TypeError": {
     "line number": [
      349
     ]
    },
    "xarray.core.dataarray.warnings": {
     "line number": [
      340
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.to_dict": {
  "data": {
   "lineno": 1519,
   "symbols_in_volume": {
    "decode_numpy_dict_values": {
     "line number": [
      1532,
      1540
     ]
    },
    "ensure_us_time_resolution": {
     "line number": [
      1536,
      1542
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.to_index": {
  "data": {
   "lineno": 414
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.to_iris": {
  "data": {
   "lineno": 1626,
   "symbols_in_volume": {
    "to_iris": {
     "line number": [
      1630
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.to_masked_array": {
  "data": {
   "lineno": 1428,
   "symbols_in_volume": {
    "numpy.ma.MaskedArray": {
     "line number": [
      1443
     ]
    },
    "pandas.isnull": {
     "line number": [
      1442
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.to_netcdf": {
  "data": {
   "lineno": 1445
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.to_pandas": {
  "data": {
   "lineno": 1364,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      1386
     ]
    },
    "ValueError": {
     "line number": [
      1387
     ]
    },
    "constructor": {
     "line number": [
      1390
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      1382
     ]
    },
    "pandas.Panel": {
     "line number": [
      1383
     ]
    },
    "pandas.Series": {
     "line number": [
      1381
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.to_series": {
  "data": {
   "lineno": 1419,
   "symbols_in_volume": {
    "pandas.Series": {
     "line number": [
      1426
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.transpose": {
  "data": {
   "lineno": 1129
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.unstack": {
  "data": {
   "lineno": 1105
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.values": {
  "data": {
   "lineno": 406
  },
  "type": "function"
 },
 "xarray.core.dataarray.DataArray.variable": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": {
    "property": {
     "line number": [
      364
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray._LocIndexer": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "object": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.dataarray._LocIndexer.__getitem__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      102
     ]
    },
    "zip": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray._LocIndexer.__init__": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "xarray.core.dataarray._LocIndexer.__setitem__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      109
     ]
    },
    "remap_label_indexers": {
     "line number": [
      111
     ]
    },
    "zip": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray._THIS_ARRAY": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "xarray.core.dataarray._infer_coords_and_dims": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      59
     ]
    },
    "TypeError": {
     "line number": [
      57
     ]
    },
    "ValueError": {
     "line number": [
      32,
      45,
      73,
      79,
      84
     ]
    },
    "any": {
     "line number": [
      72
     ]
    },
    "as_variable": {
     "line number": [
      50,
      63,
      66
     ]
    },
    "assert_unique_multiindex_level_names": {
     "line number": [
      89
     ]
    },
    "dict": {
     "line number": [
      70
     ]
    },
    "enumerate": {
     "line number": [
      49
     ]
    },
    "isinstance": {
     "line number": [
      36,
      56
     ]
    },
    "len": {
     "line number": [
      31,
      31,
      34,
      34,
      40,
      41,
      41
     ]
    },
    "range": {
     "line number": [
      40
     ]
    },
    "tuple": {
     "line number": [
      53
     ]
    },
    "zip": {
     "line number": [
      49,
      65,
      70,
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataarray.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.dataarray.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.dataarray.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.core.dataarray.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.dataarray.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.dataarray.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.dataarray.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.core.dataset": {
  "data": {
   "symbols_in_volume": {
    "xarray.core.dataset.Dataset": {
     "line number": [
      3501
     ]
    }
   }
  },
  "type": "module"
 },
 "xarray.core.dataset.DataVariables": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": {
    "collections.Mapping": {
     "line number": [
      256
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.dataset.DataVariables.__contains__": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "xarray.core.dataset.DataVariables.__getitem__": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      275
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.DataVariables.__init__": {
  "data": {
   "lineno": 257
  },
  "type": "function"
 },
 "xarray.core.dataset.DataVariables.__iter__": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "xarray.core.dataset.DataVariables.__len__": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": {
    "len": {
     "line number": [
      265,
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.DataVariables.__unicode__": {
  "data": {
   "lineno": 277
  },
  "type": "function"
 },
 "xarray.core.dataset.DataVariables._ipython_key_completions_": {
  "data": {
   "lineno": 285
  },
  "type": "function"
 },
 "xarray.core.dataset.DataVariables.variables": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": {
    "Frozen": {
     "line number": [
      283
     ]
    },
    "OrderedDict": {
     "line number": [
      283
     ]
    },
    "property": {
     "line number": [
      280
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": {
    "collections.Mapping": {
     "line number": [
      301
     ]
    },
    "object": {
     "line number": [
      648
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.dataset.Dataset.T": {
  "data": {
   "lineno": 2329,
   "symbols_in_volume": {
    "FutureWarning": {
     "line number": [
      2333
     ]
    },
    "property": {
     "line number": [
      2329
     ]
    },
    "xarray.core.dataset.warnings": {
     "line number": [
      2331
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__array__": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      853
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__bool__": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": {
    "FutureWarning": {
     "line number": [
      840
     ]
    },
    "bool": {
     "line number": [
      841
     ]
    },
    "xarray.core.dataset.warnings": {
     "line number": [
      835
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__contains__": {
  "data": {
   "lineno": 818
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__copy__": {
  "data": {
   "lineno": 792
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__dask_graph__": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": {
    "dask.sharedict.merge": {
     "line number": [
      509
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__dask_keys__": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": {
    "xarray.core.dataset.dask": {
     "line number": [
      514
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__dask_optimize__": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": {
    "dask.array.Array.__dask_optimize__": {
     "line number": [
      519
     ]
    },
    "property": {
     "line number": [
      516
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__dask_postcompute__": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": {
    "xarray.core.dataset.dask": {
     "line number": [
      529
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__dask_postpersist__": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": {
    "xarray.core.dataset.dask": {
     "line number": [
      538
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__dask_scheduler__": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": {
    "dask.array.Array.__dask_scheduler__": {
     "line number": [
      524
     ]
    },
    "property": {
     "line number": [
      521
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__deepcopy__": {
  "data": {
   "lineno": 795
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__delitem__": {
  "data": {
   "lineno": 900
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__dir__": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": {
    "super": {
     "line number": [
      814
     ]
    },
    "xarray.core.dataset.Dataset": {
     "line number": [
      814
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__getitem__": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": {
    "hashable": {
     "line number": [
      878
     ]
    },
    "numpy.asarray": {
     "line number": [
      881
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__init__": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      354
     ]
    },
    "set": {
     "line number": [
      355
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__iter__": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": {
    "FutureWarning": {
     "line number": [
      849
     ]
    },
    "iter": {
     "line number": [
      850
     ]
    },
    "xarray.core.dataset.warnings": {
     "line number": [
      844
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__len__": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": {
    "FutureWarning": {
     "line number": [
      831
     ]
    },
    "len": {
     "line number": [
      832
     ]
    },
    "xarray.core.dataset.warnings": {
     "line number": [
      825
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__setitem__": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      895
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.__unicode__": {
  "data": {
   "lineno": 1173
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._all_compat": {
  "data": {
   "lineno": 909
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._all_compat.compat": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      915
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._assert_all_in_dataset": {
  "data": {
   "lineno": 2246,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2251
     ]
    },
    "set": {
     "line number": [
      2247,
      2247
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._attr_sources": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": {
    "property": {
     "line number": [
      800
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._attrs_copy": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      412
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._binary_op": {
  "data": {
   "lineno": 2962,
   "symbols_in_volume": {
    "func": {
     "line number": [
      2975
     ]
    },
    "staticmethod": {
     "line number": [
      2962
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._binary_op.func": {
  "data": {
   "lineno": 2964,
   "symbols_in_volume": {
    "NotImplemented": {
     "line number": [
      2967
     ]
    },
    "align": {
     "line number": [
      2970
     ]
    },
    "f": {
     "line number": [
      2971,
      2971,
      2964
     ]
    },
    "hasattr": {
     "line number": [
      2969
     ]
    },
    "isinstance": {
     "line number": [
      2966
     ]
    },
    "xarray.core.dataset.functools": {
     "line number": [
      2964
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._calculate_binary_op": {
  "data": {
   "lineno": 2996,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      3032
     ]
    },
    "apply_over_both": {
     "line number": [
      3020,
      3028
     ]
    },
    "f": {
     "line number": [
      3032
     ]
    },
    "getattr": {
     "line number": [
      3024,
      3031
     ]
    },
    "isinstance": {
     "line number": [
      3017,
      3027
     ]
    },
    "xarray.core.dataset.Dataset": {
     "line number": [
      3017,
      3022,
      3027
     ]
    },
    "xarray.core.dataset.calculate_dimensions": {
     "line number": [
      3035
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._calculate_binary_op.apply_over_both": {
  "data": {
   "lineno": 2999,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      3005
     ]
    },
    "ValueError": {
     "line number": [
      3001
     ]
    },
    "f": {
     "line number": [
      3009,
      3011,
      3014
     ]
    },
    "list": {
     "line number": [
      3003,
      3003
     ]
    },
    "numpy.nan": {
     "line number": [
      3011,
      3014
     ]
    },
    "set": {
     "line number": [
      3000,
      3000
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._construct_dataarray": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": {
    "DataArray": {
     "line number": [
      790
     ]
    },
    "KeyError": {
     "line number": [
      780
     ]
    },
    "OrderedDict": {
     "line number": [
      784
     ]
    },
    "set": {
     "line number": [
      785,
      787
     ]
    },
    "xarray.core.dataset._get_virtual_variable": {
     "line number": [
      781
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._construct_direct": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      632
     ]
    },
    "cls": {
     "line number": [
      638
     ]
    },
    "object.__new__": {
     "line number": [
      638
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._copy_attrs_from": {
  "data": {
   "lineno": 3038
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._copy_listed": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      763
     ]
    },
    "OrderedDict": {
     "line number": [
      757
     ]
    },
    "set": {
     "line number": [
      758
     ]
    },
    "xarray.core.dataset._get_virtual_variable": {
     "line number": [
      764
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._dask_postcompute": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      546
     ]
    },
    "func": {
     "line number": [
      552
     ]
    },
    "list": {
     "line number": [
      547
     ]
    },
    "staticmethod": {
     "line number": [
      544
     ]
    },
    "xarray.core.dataset.Dataset": {
     "line number": [
      557
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._dask_postpersist": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      562
     ]
    },
    "func": {
     "line number": [
      565,
      566
     ]
    },
    "staticmethod": {
     "line number": [
      560
     ]
    },
    "xarray.core.dataset.Dataset": {
     "line number": [
      571
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._drop_vars": {
  "data": {
   "lineno": 2282,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      2285
     ]
    },
    "iteritems": {
     "line number": [
      2285
     ]
    },
    "set": {
     "line number": [
      2284,
      2287
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._from_vars_and_coord_names": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      650
     ]
    },
    "cls._construct_direct": {
     "line number": [
      653
     ]
    },
    "dict": {
     "line number": [
      652
     ]
    },
    "xarray.core.dataset.calculate_dimensions": {
     "line number": [
      652
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._get_indexers_coordinates": {
  "data": {
   "lineno": 1318,
   "symbols_in_volume": {
    "DataArray": {
     "line number": [
      1330
     ]
    },
    "OrderedDict": {
     "line number": [
      1349
     ]
    },
    "ValueError": {
     "line number": [
      1334
     ]
    },
    "assert_coordinate_consistent": {
     "line number": [
      1347
     ]
    },
    "isinstance": {
     "line number": [
      1330
     ]
    },
    "merge_variables": {
     "line number": [
      1346
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._inplace_binary_op": {
  "data": {
   "lineno": 2977,
   "symbols_in_volume": {
    "func": {
     "line number": [
      2994
     ]
    },
    "staticmethod": {
     "line number": [
      2977
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._inplace_binary_op.func": {
  "data": {
   "lineno": 2979,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      2982
     ]
    },
    "f": {
     "line number": [
      2988,
      2979
     ]
    },
    "hasattr": {
     "line number": [
      2986
     ]
    },
    "isinstance": {
     "line number": [
      2981
     ]
    },
    "xarray.core.dataset.functools": {
     "line number": [
      2979
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._item_sources": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": {
    "LevelCoordinatesSource": {
     "line number": [
      809
     ]
    },
    "property": {
     "line number": [
      805
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._level_coords": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": {
    "IndexVariable": {
     "line number": [
      746
     ]
    },
    "OrderedDict": {
     "line number": [
      743
     ]
    },
    "isinstance": {
     "line number": [
      746
     ]
    },
    "property": {
     "line number": [
      738
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._persist_inplace": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      599
     ]
    },
    "xarray.core.dataset.dask": {
     "line number": [
      604
     ]
    },
    "zip": {
     "line number": [
      606
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._replace_indexes": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": {
    "IndexVariable": {
     "line number": [
      699
     ]
    },
    "isinstance": {
     "line number": [
      705
     ]
    },
    "len": {
     "line number": [
      695
     ]
    },
    "pandas.MultiIndex": {
     "line number": [
      705
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._replace_vars_and_dims": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": {
    "xarray.core.dataset.calculate_dimensions": {
     "line number": [
      677
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._set_init_vars_and_dims": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      375
     ]
    },
    "isinstance": {
     "line number": [
      378
     ]
    },
    "merge_data_and_coords": {
     "line number": [
      381
     ]
    },
    "xarray.core.dataset.Dataset": {
     "line number": [
      378
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._stack_once": {
  "data": {
   "lineno": 2053,
   "symbols_in_volume": {
    "IndexVariable": {
     "line number": [
      2077
     ]
    },
    "OrderedDict": {
     "line number": [
      2054
     ]
    },
    "any": {
     "line number": [
      2057
     ]
    },
    "hasattr": {
     "line number": [
      2069
     ]
    },
    "isinstance": {
     "line number": [
      2073
     ]
    },
    "list": {
     "line number": [
      2059
     ]
    },
    "pandas": {
     "line number": [
      2069
     ]
    },
    "pandas.Int64Index": {
     "line number": [
      2072
     ]
    },
    "pandas.RangeIndex": {
     "line number": [
      2073
     ]
    },
    "set": {
     "line number": [
      2079,
      2079,
      2079
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._subset_with_all_valid_coords": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      734
     ]
    },
    "set": {
     "line number": [
      727,
      731
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._to_dataframe": {
  "data": {
   "lineno": 2722,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      2727
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      2727
     ]
    },
    "zip": {
     "line number": [
      2727
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._unary_op": {
  "data": {
   "lineno": 2949,
   "symbols_in_volume": {
    "func": {
     "line number": [
      2960
     ]
    },
    "staticmethod": {
     "line number": [
      2949
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._unary_op.func": {
  "data": {
   "lineno": 2951,
   "symbols_in_volume": {
    "f": {
     "line number": [
      2955,
      2951
     ]
    },
    "xarray.core.dataset.functools": {
     "line number": [
      2951
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset._validate_indexers": {
  "data": {
   "lineno": 1291,
   "symbols_in_volume": {
    "DataArray": {
     "line number": [
      1307
     ]
    },
    "TypeError": {
     "line number": [
      1312
     ]
    },
    "ValueError": {
     "line number": [
      1300
     ]
    },
    "Variable": {
     "line number": [
      1305
     ]
    },
    "as_variable": {
     "line number": [
      1310
     ]
    },
    "isinstance": {
     "line number": [
      1305,
      1307,
      1309,
      1311
     ]
    },
    "iteritems": {
     "line number": [
      1304
     ]
    },
    "numpy.asarray": {
     "line number": [
      1314
     ]
    },
    "slice": {
     "line number": [
      1305
     ]
    },
    "tuple": {
     "line number": [
      1309
     ]
    },
    "xarray.core.dataset.Dataset": {
     "line number": [
      1311
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.apply": {
  "data": {
   "lineno": 2606,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      2648
     ]
    },
    "func": {
     "line number": [
      2649
     ]
    },
    "iteritems": {
     "line number": [
      2650
     ]
    },
    "maybe_wrap_array": {
     "line number": [
      2649
     ]
    },
    "type": {
     "line number": [
      2652
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.assign": {
  "data": {
   "lineno": 2654
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.attrs": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      424
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.bfill": {
  "data": {
   "lineno": 2494,
   "symbols_in_volume": {
    "_apply_over_vars_with_dim": {
     "line number": [
      2516
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.broadcast_equals": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      936
     ]
    },
    "TypeError": {
     "line number": [
      936
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.chunk": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      1258,
      1260
     ]
    },
    "OrderedDict": {
     "line number": [
      1287
     ]
    },
    "ValueError": {
     "line number": [
      1268
     ]
    },
    "dict.fromkeys": {
     "line number": [
      1263
     ]
    },
    "isinstance": {
     "line number": [
      1262
     ]
    },
    "maybe_chunk": {
     "line number": [
      1287
     ]
    },
    "numbers.Number": {
     "line number": [
      1262
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.chunk.maybe_chunk": {
  "data": {
   "lineno": 1276,
   "symbols_in_volume": {
    "dask.base.tokenize": {
     "line number": [
      1281
     ]
    },
    "selkeys": {
     "line number": [
      1277
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.chunk.selkeys": {
  "data": {
   "lineno": 1271,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      1274
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.chunks": {
  "data": {
   "lineno": 1213,
   "symbols_in_volume": {
    "Frozen": {
     "line number": [
      1225
     ]
    },
    "SortedKeysDict": {
     "line number": [
      1225
     ]
    },
    "ValueError": {
     "line number": [
      1223
     ]
    },
    "property": {
     "line number": [
      1213
     ]
    },
    "zip": {
     "line number": [
      1221
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.combine_first": {
  "data": {
   "lineno": 2519
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.compute": {
  "data": {
   "lineno": 573
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.coords": {
  "data": {
   "lineno": 980,
   "symbols_in_volume": {
    "DatasetCoordinates": {
     "line number": [
      985
     ]
    },
    "property": {
     "line number": [
      980
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.copy": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      719
     ]
    },
    "iteritems": {
     "line number": [
      720
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.data_vars": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": {
    "property": {
     "line number": [
      987
     ]
    },
    "xarray.core.dataset.DataVariables": {
     "line number": [
      991
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.diff": {
  "data": {
   "lineno": 3044,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      3102
     ]
    },
    "ValueError": {
     "line number": [
      3086,
      3099
     ]
    },
    "iteritems": {
     "line number": [
      3104
     ]
    },
    "slice": {
     "line number": [
      3090,
      3091
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.dims": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": {
    "Frozen": {
     "line number": [
      448
     ]
    },
    "SortedKeysDict": {
     "line number": [
      448
     ]
    },
    "property": {
     "line number": [
      438
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.drop": {
  "data": {
   "lineno": 2254,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      2276
     ]
    },
    "ValueError": {
     "line number": [
      2277
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.dropna": {
  "data": {
   "lineno": 2336,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      2387
     ]
    },
    "ValueError": {
     "line number": [
      2363,
      2385
     ]
    },
    "list": {
     "line number": [
      2366
     ]
    },
    "numpy.asarray": {
     "line number": [
      2375
     ]
    },
    "numpy.int64": {
     "line number": [
      2368
     ]
    },
    "numpy.prod": {
     "line number": [
      2376
     ]
    },
    "numpy.zeros": {
     "line number": [
      2368
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.dump_to_store": {
  "data": {
   "lineno": 1056,
   "symbols_in_volume": {
    "encoder": {
     "line number": [
      1071
     ]
    },
    "set": {
     "line number": [
      1063
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.encoding": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      436
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.equals": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      956
     ]
    },
    "TypeError": {
     "line number": [
      956
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.expand_dims": {
  "data": {
   "lineno": 1876,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      1935
     ]
    },
    "OrderedDict": {
     "line number": [
      1926
     ]
    },
    "ValueError": {
     "line number": [
      1901,
      1912,
      1915,
      1919,
      1924,
      1943
     ]
    },
    "int": {
     "line number": [
      1900
     ]
    },
    "isinstance": {
     "line number": [
      1900,
      1903,
      1905
     ]
    },
    "iteritems": {
     "line number": [
      1927
     ]
    },
    "len": {
     "line number": [
      1909,
      1911,
      1911,
      1923,
      1923,
      1932,
      1932,
      1942,
      1942
     ]
    },
    "list": {
     "line number": [
      1905,
      1909,
      1949
     ]
    },
    "range": {
     "line number": [
      1909
     ]
    },
    "set": {
     "line number": [
      1923,
      1942
     ]
    },
    "sorted": {
     "line number": [
      1947
     ]
    },
    "tuple": {
     "line number": [
      1905
     ]
    },
    "zip": {
     "line number": [
      1947
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.ffill": {
  "data": {
   "lineno": 2469,
   "symbols_in_volume": {
    "_apply_over_vars_with_dim": {
     "line number": [
      2491
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.fillna": {
  "data": {
   "lineno": 2391,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2415
     ]
    },
    "getattr": {
     "line number": [
      2413
     ]
    },
    "set": {
     "line number": [
      2414,
      2414
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.filter_by_attrs": {
  "data": {
   "lineno": 3416,
   "symbols_in_volume": {
    "callable": {
     "line number": [
      3495
     ]
    },
    "pattern": {
     "line number": [
      3495,
      3496
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.from_dataframe": {
  "data": {
   "lineno": 2738,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2755
     ]
    },
    "classmethod": {
     "line number": [
      2738
     ]
    },
    "cls": {
     "line number": [
      2759
     ]
    },
    "enumerate": {
     "line number": [
      2767
     ]
    },
    "isinstance": {
     "line number": [
      2761
     ]
    },
    "iteritems": {
     "line number": [
      2776
     ]
    },
    "numpy.asarray": {
     "line number": [
      2777
     ]
    },
    "pandas.MultiIndex": {
     "line number": [
      2761
     ]
    },
    "pandas.MultiIndex.from_product": {
     "line number": [
      2764
     ]
    },
    "zip": {
     "line number": [
      2768
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.from_dict": {
  "data": {
   "lineno": 2887,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      2935
     ]
    },
    "OrderedDict": {
     "line number": [
      2931
     ]
    },
    "ValueError": {
     "line number": [
      2936
     ]
    },
    "classmethod": {
     "line number": [
      2887
     ]
    },
    "cls": {
     "line number": [
      2939
     ]
    },
    "set": {
     "line number": [
      2924,
      2924,
      2942,
      2942
     ]
    },
    "str": {
     "line number": [
      2938
     ]
    },
    "xarray.core.dataset.itertools": {
     "line number": [
      2928
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.identical": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      971
     ]
    },
    "TypeError": {
     "line number": [
      971
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.imag": {
  "data": {
   "lineno": 3412,
   "symbols_in_volume": {
    "property": {
     "line number": [
      3412
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.indexes": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": {
    "Indexes": {
     "line number": [
      978
     ]
    },
    "property": {
     "line number": [
      974
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.info": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": {
    "dask.array": {
     "line number": [
      1199
     ]
    },
    "dask.array.attrs.items": {
     "line number": [
      1203
     ]
    },
    "dask.array.dims": {
     "line number": [
      1200
     ]
    },
    "dask.array.dtype": {
     "line number": [
      1202
     ]
    },
    "xarray.core.dataset.sys": {
     "line number": [
      1191
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.interpolate_na": {
  "data": {
   "lineno": 2420,
   "symbols_in_volume": {
    "_apply_over_vars_with_dim": {
     "line number": [
      2463
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.isel": {
  "data": {
   "lineno": 1355,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      1393
     ]
    },
    "iteritems": {
     "line number": [
      1394
     ]
    },
    "set": {
     "line number": [
      1400,
      1407
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.isel_points": {
  "data": {
   "lineno": 1476,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      1515
     ]
    },
    "OrderedDict": {
     "line number": [
      1584
     ]
    },
    "TypeError": {
     "line number": [
      1547
     ]
    },
    "ValueError": {
     "line number": [
      1545,
      1549,
      1554,
      1560,
      1567
     ]
    },
    "any": {
     "line number": [
      1587
     ]
    },
    "as_variable": {
     "line number": [
      1575
     ]
    },
    "dict": {
     "line number": [
      1537
     ]
    },
    "hasattr": {
     "line number": [
      1563,
      1574
     ]
    },
    "isinstance": {
     "line number": [
      1557
     ]
    },
    "iteritems": {
     "line number": [
      1536
     ]
    },
    "len": {
     "line number": [
      1552,
      1553
     ]
    },
    "list": {
     "line number": [
      1582,
      1582
     ]
    },
    "numpy.asarray": {
     "line number": [
      1536
     ]
    },
    "relevant_keys": {
     "line number": [
      1535
     ]
    },
    "set": {
     "line number": [
      1517,
      1538,
      1539,
      1539,
      1552,
      1603,
      1603
     ]
    },
    "slice": {
     "line number": [
      1592
     ]
    },
    "take": {
     "line number": [
      1596
     ]
    },
    "tuple": {
     "line number": [
      1596
     ]
    },
    "type": {
     "line number": [
      1597
     ]
    },
    "xarray.core.dataset.warnings": {
     "line number": [
      1514
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.isel_points.relevant_keys": {
  "data": {
   "lineno": 1531,
   "symbols_in_volume": {
    "any": {
     "line number": [
      1533
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.isel_points.take": {
  "data": {
   "lineno": 1519,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      1522
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.load": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": {
    "dask.array.compute": {
     "line number": [
      490
     ]
    },
    "isinstance": {
     "line number": [
      485
     ]
    },
    "zip": {
     "line number": [
      492
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.load_store": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      388
     ]
    },
    "cls": {
     "line number": [
      396
     ]
    },
    "decoder": {
     "line number": [
      395
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.loc": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": {
    "property": {
     "line number": [
      862
     ]
    },
    "xarray.core.dataset._LocIndexer": {
     "line number": [
      867
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.merge": {
  "data": {
   "lineno": 2188,
   "symbols_in_volume": {
    "dataset_merge_method": {
     "line number": [
      2239
     ]
    },
    "frozenset": {
     "line number": [
      2188
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.nbytes": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": {
    "property": {
     "line number": [
      858
     ]
    },
    "sum": {
     "line number": [
      860
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.persist": {
  "data": {
   "lineno": 611
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.quantile": {
  "data": {
   "lineno": 3278,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      3336
     ]
    },
    "Variable": {
     "line number": [
      3360
     ]
    },
    "isinstance": {
     "line number": [
      3324
     ]
    },
    "iteritems": {
     "line number": [
      3337
     ]
    },
    "len": {
     "line number": [
      3344
     ]
    },
    "numpy.asarray": {
     "line number": [
      3334
     ]
    },
    "numpy.bool_": {
     "line number": [
      3343
     ]
    },
    "numpy.float64": {
     "line number": [
      3334
     ]
    },
    "numpy.issubdtype": {
     "line number": [
      3342
     ]
    },
    "numpy.number": {
     "line number": [
      3342
     ]
    },
    "set": {
     "line number": [
      3325,
      3327,
      3329,
      3356
     ]
    },
    "xarray.core.dataset._assert_empty": {
     "line number": [
      3331
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.rank": {
  "data": {
   "lineno": 3365,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      3396
     ]
    },
    "ValueError": {
     "line number": [
      3393
     ]
    },
    "iteritems": {
     "line number": [
      3397
     ]
    },
    "set": {
     "line number": [
      3404
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.real": {
  "data": {
   "lineno": 3408,
   "symbols_in_volume": {
    "property": {
     "line number": [
      3408
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.reduce": {
  "data": {
   "lineno": 2538,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      2578
     ]
    },
    "ValueError": {
     "line number": [
      2575
     ]
    },
    "func": {
     "line number": [
      2595
     ]
    },
    "isinstance": {
     "line number": [
      2566
     ]
    },
    "iteritems": {
     "line number": [
      2579
     ]
    },
    "len": {
     "line number": [
      2586,
      2590
     ]
    },
    "numpy.bool_": {
     "line number": [
      2585
     ]
    },
    "numpy.issubdtype": {
     "line number": [
      2584
     ]
    },
    "numpy.number": {
     "line number": [
      2584
     ]
    },
    "set": {
     "line number": [
      2567,
      2569,
      2571,
      2602
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.reindex": {
  "data": {
   "lineno": 1720,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1769
     ]
    },
    "set": {
     "line number": [
      1774
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.reindex_like": {
  "data": {
   "lineno": 1673
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.rename": {
  "data": {
   "lineno": 1778,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      1805,
      1818
     ]
    },
    "ValueError": {
     "line number": [
      1802,
      1813
     ]
    },
    "iteritems": {
     "line number": [
      1807
     ]
    },
    "set": {
     "line number": [
      1806
     ]
    },
    "tuple": {
     "line number": [
      1809
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.reorder_levels": {
  "data": {
   "lineno": 2022,
   "symbols_in_volume": {
    "IndexVariable": {
     "line number": [
      2047
     ]
    },
    "ValueError": {
     "line number": [
      2046
     ]
    },
    "isinstance": {
     "line number": [
      2045
     ]
    },
    "pandas.MultiIndex": {
     "line number": [
      2045
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.reset_coords": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1046
     ]
    },
    "isinstance": {
     "line number": [
      1041
     ]
    },
    "set": {
     "line number": [
      1039,
      1044,
      1044
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.reset_index": {
  "data": {
   "lineno": 1992,
   "symbols_in_volume": {
    "xarray.core.dataset.split_indexes": {
     "line number": [
      2016
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.roll": {
  "data": {
   "lineno": 3171,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      3209
     ]
    },
    "ValueError": {
     "line number": [
      3207
     ]
    },
    "dict": {
     "line number": [
      3211
     ]
    },
    "iteritems": {
     "line number": [
      3210
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.sel": {
  "data": {
   "lineno": 1412,
   "symbols_in_volume": {
    "remap_label_indexers": {
     "line number": [
      1471
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.sel_points": {
  "data": {
   "lineno": 1613,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      1666
     ]
    },
    "xarray.core.dataset.warnings": {
     "line number": [
      1665
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.set_coords": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1012
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.set_index": {
  "data": {
   "lineno": 1960,
   "symbols_in_volume": {
    "xarray.core.dataset.merge_indexes": {
     "line number": [
      1986
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.shift": {
  "data": {
   "lineno": 3121,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      3160
     ]
    },
    "ValueError": {
     "line number": [
      3158
     ]
    },
    "dict": {
     "line number": [
      3163
     ]
    },
    "iteritems": {
     "line number": [
      3161
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.sizes": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": {
    "property": {
     "line number": [
      450
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.sortby": {
  "data": {
   "lineno": 3217,
   "symbols_in_volume": {
    "DataArray": {
     "line number": [
      3255
     ]
    },
    "NotImplementedError": {
     "line number": [
      3266
     ]
    },
    "ValueError": {
     "line number": [
      3263
     ]
    },
    "align": {
     "line number": [
      3257
     ]
    },
    "collections.defaultdict": {
     "line number": [
      3260
     ]
    },
    "distutils.version.LooseVersion": {
     "line number": [
      3265,
      3265
     ]
    },
    "isinstance": {
     "line number": [
      3251,
      3255
     ]
    },
    "list": {
     "line number": [
      3251,
      3260
     ]
    },
    "numpy.__version__": {
     "line number": [
      3265
     ]
    },
    "numpy.lexsort": {
     "line number": [
      3274
     ]
    },
    "object": {
     "line number": [
      3264
     ]
    },
    "reversed": {
     "line number": [
      3274
     ]
    },
    "tuple": {
     "line number": [
      3274
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.stack": {
  "data": {
   "lineno": 2083
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.swap_dims": {
  "data": {
   "lineno": 1824,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      1859
     ]
    },
    "ValueError": {
     "line number": [
      1850,
      1853
     ]
    },
    "iteritems": {
     "line number": [
      1864
     ]
    },
    "set": {
     "line number": [
      1857
     ]
    },
    "tuple": {
     "line number": [
      1865
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.to_array": {
  "data": {
   "lineno": 2691,
   "symbols_in_volume": {
    "DataArray": {
     "line number": [
      2720
     ]
    },
    "broadcast_variables": {
     "line number": [
      2712
     ]
    },
    "dict": {
     "line number": [
      2715
     ]
    },
    "list": {
     "line number": [
      2716
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.to_dask_dataframe": {
  "data": {
   "lineno": 2781,
   "symbols_in_volume": {
    "IndexVariable": {
     "line number": [
      2837
     ]
    },
    "KeyError": {
     "line number": [
      2830
     ]
    },
    "OrderedDict": {
     "line number": [
      2820
     ]
    },
    "ValueError": {
     "line number": [
      2816
     ]
    },
    "Variable": {
     "line number": [
      2834
     ]
    },
    "dask.array.arange": {
     "line number": [
      2833
     ]
    },
    "dask.dataframe.concat": {
     "line number": [
      2844
     ]
    },
    "dask.dataframe.from_array": {
     "line number": [
      2841
     ]
    },
    "isinstance": {
     "line number": [
      2837
     ]
    },
    "len": {
     "line number": [
      2847
     ]
    },
    "list": {
     "line number": [
      2814,
      2818,
      2822
     ]
    },
    "numpy.int64": {
     "line number": [
      2833
     ]
    },
    "set": {
     "line number": [
      2815,
      2815
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.to_dataframe": {
  "data": {
   "lineno": 2729
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.to_dict": {
  "data": {
   "lineno": 2857,
   "symbols_in_volume": {
    "decode_numpy_dict_values": {
     "line number": [
      2870,
      2878,
      2884
     ]
    },
    "dict": {
     "line number": [
      2871
     ]
    },
    "ensure_us_time_resolution": {
     "line number": [
      2874,
      2880
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.to_netcdf": {
  "data": {
   "lineno": 1078,
   "symbols_in_volume": {
    "format": {
     "line number": [
      1135
     ]
    },
    "to_netcdf": {
     "line number": [
      1135
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.to_zarr": {
  "data": {
   "lineno": 1139,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1167
     ]
    },
    "to_zarr": {
     "line number": [
      1170
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.transpose": {
  "data": {
   "lineno": 2290,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2320
     ]
    },
    "iteritems": {
     "line number": [
      2324
     ]
    },
    "set": {
     "line number": [
      2319,
      2319
     ]
    },
    "tuple": {
     "line number": [
      2322,
      2325
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.unstack": {
  "data": {
   "lineno": 2110,
   "symbols_in_volume": {
    "IndexVariable": {
     "line number": [
      2155
     ]
    },
    "OrderedDict": {
     "line number": [
      2145,
      2149
     ]
    },
    "ValueError": {
     "line number": [
      2132,
      2136
     ]
    },
    "isinstance": {
     "line number": [
      2135
     ]
    },
    "pandas.MultiIndex": {
     "line number": [
      2135
     ]
    },
    "pandas.MultiIndex.from_product": {
     "line number": [
      2139
     ]
    },
    "set": {
     "line number": [
      2157,
      2157,
      2157
     ]
    },
    "zip": {
     "line number": [
      2149,
      2154
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.update": {
  "data": {
   "lineno": 2161,
   "symbols_in_volume": {
    "dataset_update_method": {
     "line number": [
      2183
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.Dataset.variables": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": {
    "Frozen": {
     "line number": [
      409
     ]
    },
    "property": {
     "line number": [
      400
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.core.dataset.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "xarray.core.dataset.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "xarray.core.dataset._DATETIMEINDEX_COMPONENTS": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "xarray.core.dataset._LocIndexer": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": {
    "object": {
     "line number": [
      291
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.dataset._LocIndexer.__getitem__": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      297
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset._LocIndexer.__init__": {
  "data": {
   "lineno": 292
  },
  "type": "function"
 },
 "xarray.core.dataset._assert_empty": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      240
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset._get_virtual_variable": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "IndexVariable": {
     "line number": [
      54
     ]
    },
    "KeyError": {
     "line number": [
      58,
      66
     ]
    },
    "Variable": {
     "line number": [
      83
     ]
    },
    "getattr": {
     "line number": [
      80,
      82
     ]
    },
    "is_datetime_like": {
     "line number": [
      78
     ]
    },
    "isinstance": {
     "line number": [
      57
     ]
    },
    "len": {
     "line number": [
      61,
      63
     ]
    },
    "pandas.Index": {
     "line number": [
      53
     ]
    },
    "range": {
     "line number": [
      53
     ]
    },
    "xarray.DataArray": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.dataset.as_dataset": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      249
     ]
    },
    "isinstance": {
     "line number": [
      251
     ]
    },
    "xarray.core.dataset.Dataset": {
     "line number": [
      252
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.calculate_dimensions": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      94
     ]
    },
    "ValueError": {
     "line number": [
      100,
      106
     ]
    },
    "iteritems": {
     "line number": [
      96,
      97
     ]
    },
    "set": {
     "line number": [
      96
     ]
    },
    "zip": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.core.dataset.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "xarray.core.dataset.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "xarray.core.dataset.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "xarray.core.dataset.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.dataset.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.core.dataset.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "xarray.core.dataset.merge_indexes": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "IndexVariable": {
     "line number": [
      167
     ]
    },
    "OrderedDict": {
     "line number": [
      170
     ]
    },
    "ValueError": {
     "line number": [
      138
     ]
    },
    "isinstance": {
     "line number": [
      128,
      144
     ]
    },
    "iteritems": {
     "line number": [
      170
     ]
    },
    "len": {
     "line number": [
      154,
      154
     ]
    },
    "pandas.Categorical": {
     "line number": [
      150,
      161
     ]
    },
    "pandas.Index": {
     "line number": [
      155
     ]
    },
    "pandas.MultiIndex": {
     "line number": [
      144,
      165
     ]
    },
    "set": {
     "line number": [
      173,
      174
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.dataset.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.dataset.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.dataset.sharedict": {
  "data": {
   "shadows": "dask.sharedict"
  },
  "type": "import"
 },
 "xarray.core.dataset.split_indexes": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "IndexVariable": {
     "line number": [
      221
     ]
    },
    "OrderedDict": {
     "line number": [
      204
     ]
    },
    "Variable": {
     "line number": [
      214,
      226
     ]
    },
    "collections.defaultdict": {
     "line number": [
      195
     ]
    },
    "isinstance": {
     "line number": [
      192,
      209
     ]
    },
    "len": {
     "line number": [
      218
     ]
    },
    "list": {
     "line number": [
      195
     ]
    },
    "pandas.MultiIndex": {
     "line number": [
      209
     ]
    },
    "set": {
     "line number": [
      229,
      233,
      233
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dataset.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "xarray.core.dataset.tokenize": {
  "data": {
   "shadows": "dask.base.tokenize"
  },
  "type": "import"
 },
 "xarray.core.dataset.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.core.dataset.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.core.dtypes": {
  "data": {
   "symbols_in_volume": {
    "numpy.bool_": {
     "line number": [
      40
     ]
    },
    "numpy.bytes_": {
     "line number": [
      41
     ]
    },
    "numpy.character": {
     "line number": [
      39,
      40
     ]
    },
    "numpy.number": {
     "line number": [
      39
     ]
    },
    "numpy.unicode_": {
     "line number": [
      41
     ]
    },
    "xarray.core.dtypes.AlwaysGreaterThan": {
     "line number": [
      30,
      64
     ]
    },
    "xarray.core.dtypes.AlwaysLessThan": {
     "line number": [
      31,
      65
     ]
    }
   }
  },
  "type": "module"
 },
 "xarray.core.dtypes.AlwaysGreaterThan": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "object": {
     "line number": [
      46
     ]
    },
    "xarray.core.dtypes.functools": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.dtypes.AlwaysGreaterThan.__eq__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      51
     ]
    },
    "type": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dtypes.AlwaysGreaterThan.__gt__": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "xarray.core.dtypes.AlwaysLessThan": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "object": {
     "line number": [
      55
     ]
    },
    "xarray.core.dtypes.functools": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.dtypes.AlwaysLessThan.__eq__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      60
     ]
    },
    "type": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dtypes.AlwaysLessThan.__lt__": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "xarray.core.dtypes.INF": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "xarray.core.dtypes.NA": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "xarray.core.dtypes.NINF": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "xarray.core.dtypes.PROMOTE_TO_OBJECT": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "xarray.core.dtypes.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.core.dtypes.get_fill_value": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "xarray.core.dtypes.maybe_promote": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dtypes.get_neg_infinity": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "issubclass": {
     "line number": [
      147,
      150
     ]
    },
    "numpy.complexfloating": {
     "line number": [
      150
     ]
    },
    "numpy.floating": {
     "line number": [
      147
     ]
    },
    "numpy.inf": {
     "line number": [
      148,
      151,
      151
     ]
    },
    "numpy.integer": {
     "line number": [
      147
     ]
    },
    "xarray.core.dtypes.NINF": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dtypes.get_pos_infinity": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "issubclass": {
     "line number": [
      127,
      130
     ]
    },
    "numpy.complexfloating": {
     "line number": [
      130
     ]
    },
    "numpy.floating": {
     "line number": [
      127
     ]
    },
    "numpy.inf": {
     "line number": [
      128,
      131,
      131
     ]
    },
    "numpy.integer": {
     "line number": [
      127
     ]
    },
    "xarray.core.dtypes.INF": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dtypes.is_datetime_like": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "numpy.datetime64": {
     "line number": [
      159
     ]
    },
    "numpy.issubdtype": {
     "line number": [
      159,
      160
     ]
    },
    "numpy.timedelta64": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dtypes.maybe_promote": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "numpy.complexfloating": {
     "line number": [
      89
     ]
    },
    "numpy.datetime64": {
     "line number": [
      91,
      92
     ]
    },
    "numpy.dtype": {
     "line number": [
      98
     ]
    },
    "numpy.float32": {
     "line number": [
      85
     ]
    },
    "numpy.float64": {
     "line number": [
      87
     ]
    },
    "numpy.floating": {
     "line number": [
      81
     ]
    },
    "numpy.integer": {
     "line number": [
      83
     ]
    },
    "numpy.issubdtype": {
     "line number": [
      81,
      83,
      89,
      91,
      93
     ]
    },
    "numpy.nan": {
     "line number": [
      82,
      88,
      90,
      90,
      97
     ]
    },
    "numpy.timedelta64": {
     "line number": [
      93,
      94
     ]
    },
    "object": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.dtypes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.dtypes.result_type": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "any": {
     "line number": [
      182,
      183
     ]
    },
    "issubclass": {
     "line number": [
      182,
      183
     ]
    },
    "numpy.dtype": {
     "line number": [
      184
     ]
    },
    "numpy.result_type": {
     "line number": [
      179,
      186
     ]
    },
    "object": {
     "line number": [
      184
     ]
    },
    "xarray.core.dtypes.PROMOTE_TO_OBJECT": {
     "line number": [
      181
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.extensions": {
  "data": {},
  "type": "module"
 },
 "xarray.core.extensions.AccessorRegistrationWarning": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "Warning": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.extensions._CachedAccessor": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "object": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.extensions._CachedAccessor.__get__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      28
     ]
    },
    "RuntimeError": {
     "line number": [
      35
     ]
    },
    "object.__setattr__": {
     "line number": [
      40
     ]
    },
    "xarray.core.extensions.traceback": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.extensions._CachedAccessor.__init__": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "xarray.core.extensions._register_accessor": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "xarray.core.extensions._register_accessor.decorator": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      46
     ]
    },
    "setattr": {
     "line number": [
      53
     ]
    },
    "xarray.core.extensions.AccessorRegistrationWarning": {
     "line number": [
      51
     ]
    },
    "xarray.core.extensions._CachedAccessor": {
     "line number": [
      53
     ]
    },
    "xarray.core.extensions.warnings": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.extensions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.extensions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.extensions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.extensions.register_dataarray_accessor": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "xarray.core.extensions._register_accessor": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.extensions.register_dataset_accessor": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "xarray.core.extensions._register_accessor": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.extensions.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "xarray.core.extensions.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.core.formatting": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      21
     ]
    },
    "xarray.core.formatting._mapping_repr": {
     "line number": [
      303,
      307
     ]
    },
    "xarray.core.formatting.functools": {
     "line number": [
      303,
      307
     ]
    },
    "xarray.core.formatting.summarize_attr": {
     "line number": [
      308
     ]
    },
    "xarray.core.formatting.summarize_datavar": {
     "line number": [
      304
     ]
    }
   }
  },
  "type": "module"
 },
 "xarray.core.formatting.EMPTY_REPR": {
  "data": {
   "lineno": 265
  },
  "type": "constant"
 },
 "xarray.core.formatting.OutOfBoundsDatetime": {
  "data": {
   "shadows": "pandas.tslib.OutOfBoundsDatetime"
  },
  "type": "import"
 },
 "xarray.core.formatting.ReprMixin": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "object": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.formatting.ReprMixin.__repr__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "xarray.core.formatting.ensure_valid_repr": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.formatting._calculate_col_width": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": {
    "len": {
     "line number": [
      286
     ]
    },
    "max": {
     "line number": [
      286,
      288
     ]
    },
    "unicode_type": {
     "line number": [
      286
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.formatting._get_col_items": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      277
     ]
    },
    "isinstance": {
     "line number": [
      278
     ]
    },
    "list": {
     "line number": [
      281
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.formatting._get_indexer_at_least_n_items": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "float": {
     "line number": [
      71
     ]
    },
    "int": {
     "line number": [
      71
     ]
    },
    "len": {
     "line number": [
      72
     ]
    },
    "numpy.argmax": {
     "line number": [
      70
     ]
    },
    "numpy.ceil": {
     "line number": [
      71
     ]
    },
    "numpy.cumprod": {
     "line number": [
      69
     ]
    },
    "numpy.prod": {
     "line number": [
      68
     ]
    },
    "numpy.r_": {
     "line number": [
      71
     ]
    },
    "slice": {
     "line number": [
      73,
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.formatting._mapping_repr": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": {
    "summarizer": {
     "line number": [
      297
     ]
    },
    "xarray.core.formatting.EMPTY_REPR": {
     "line number": [
      299
     ]
    },
    "xarray.core.formatting._calculate_col_width": {
     "line number": [
      294
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.formatting._summarize_coord_levels": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": {
    "xarray.core.formatting.summarize_variable": {
     "line number": [
      228
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.formatting._summarize_coord_multiindex": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": {
    "unicode_type": {
     "line number": [
      222
     ]
    },
    "xarray.core.formatting.pretty_print": {
     "line number": [
      221
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.formatting.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.formatting.array_repr": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      390
     ]
    },
    "hasattr": {
     "line number": [
      382,
      397
     ]
    },
    "isinstance": {
     "line number": [
      390
     ]
    },
    "repr": {
     "line number": [
      399
     ]
    },
    "type": {
     "line number": [
      388
     ]
    },
    "xarray.core.formatting.attrs_repr": {
     "line number": [
      406
     ]
    },
    "xarray.core.formatting.dim_summary": {
     "line number": [
      388
     ]
    },
    "xarray.core.formatting.short_array_repr": {
     "line number": [
      393
     ]
    },
    "xarray.core.formatting.short_dask_repr": {
     "line number": [
      391
     ]
    },
    "xarray.core.formatting.unindexed_dims_repr": {
     "line number": [
      401
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.formatting.attrs_repr": {
  "data": {
   "lineno": 307
  },
  "type": "constant"
 },
 "xarray.core.formatting.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "xarray.core.formatting.coords_repr": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "xarray.core.formatting._calculate_col_width": {
     "line number": [
      313
     ]
    },
    "xarray.core.formatting._get_col_items": {
     "line number": [
      313
     ]
    },
    "xarray.core.formatting._mapping_repr": {
     "line number": [
      314
     ]
    },
    "xarray.core.formatting.summarize_coord": {
     "line number": [
      315
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.formatting.data_vars_repr": {
  "data": {
   "lineno": 303
  },
  "type": "constant"
 },
 "xarray.core.formatting.dataset_repr": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": {
    "type": {
     "line number": [
      412
     ]
    },
    "xarray.core.formatting._calculate_col_width": {
     "line number": [
      414
     ]
    },
    "xarray.core.formatting._get_col_items": {
     "line number": [
      414
     ]
    },
    "xarray.core.formatting.attrs_repr": {
     "line number": [
      429
     ]
    },
    "xarray.core.formatting.coords_repr": {
     "line number": [
      420
     ]
    },
    "xarray.core.formatting.data_vars_repr": {
     "line number": [
      426
     ]
    },
    "xarray.core.formatting.dim_summary": {
     "line number": [
      417
     ]
    },
    "xarray.core.formatting.pretty_print": {
     "line number": [
      416
     ]
    },
    "xarray.core.formatting.unindexed_dims_repr": {
     "line number": [
      422
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.formatting.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "xarray.core.formatting.dim_summary": {
  "data": {
   "lineno": 325
  },
  "type": "function"
 },
 "xarray.core.formatting.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.formatting.ensure_valid_repr": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      55
     ]
    },
    "unicode_type": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.formatting.first_n_items": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      85
     ]
    },
    "numpy.asarray": {
     "line number": [
      94
     ]
    },
    "xarray.core.formatting._get_indexer_at_least_n_items": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.formatting.format_array_flat": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "int": {
     "line number": [
      184
     ]
    },
    "len": {
     "line number": [
      188,
      191
     ]
    },
    "max": {
     "line number": [
      184,
      191
     ]
    },
    "numpy.argmax": {
     "line number": [
      191
     ]
    },
    "numpy.ceil": {
     "line number": [
      184
     ]
    },
    "numpy.cumsum": {
     "line number": [
      188
     ]
    },
    "xarray.core.formatting.first_n_items": {
     "line number": [
      185
     ]
    },
    "xarray.core.formatting.format_items": {
     "line number": [
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.formatting.format_item": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "datetime.datetime": {
     "line number": [
      146
     ]
    },
    "datetime.timedelta": {
     "line number": [
      148
     ]
    },
    "float": {
     "line number": [
      152
     ]
    },
    "isinstance": {
     "line number": [
      146,
      148,
      150,
      152
     ]
    },
    "numpy.datetime64": {
     "line number": [
      146
     ]
    },
    "numpy.float": {
     "line number": [
      152
     ]
    },
    "numpy.timedelta64": {
     "line number": [
      148
     ]
    },
    "repr": {
     "line number": [
      151
     ]
    },
    "unicode_type": {
     "line number": [
      150,
      155
     ]
    },
    "xarray.core.formatting.format_timedelta": {
     "line number": [
      149
     ]
    },
    "xarray.core.formatting.format_timestamp": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.formatting.format_items": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      160,
      163
     ]
    },
    "numpy.issubdtype": {
     "line number": [
      162
     ]
    },
    "numpy.logical_not": {
     "line number": [
      169,
      171
     ]
    },
    "numpy.timedelta64": {
     "line number": [
      162,
      168
     ]
    },
    "pandas.isnull": {
     "line number": [
      164
     ]
    },
    "xarray.core.formatting.format_item": {
     "line number": [
      174
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.formatting.format_timedelta": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      132
     ]
    },
    "pandas.Timedelta": {
     "line number": [
      129
     ]
    },
    "unicode_type": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.formatting.format_timestamp": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      117
     ]
    },
    "pandas.Timestamp": {
     "line number": [
      111
     ]
    },
    "pandas.tslib.OutOfBoundsDatetime": {
     "line number": [
      112
     ]
    },
    "unicode_type": {
     "line number": [
      111,
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.formatting.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.core.formatting.indexes_repr": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": {
    "repr": {
     "line number": [
      321
     ]
    },
    "xarray.core.formatting.wrap_indent": {
     "line number": [
      321
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.formatting.last_item": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "numpy.ravel": {
     "line number": [
      104
     ]
    },
    "slice": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.formatting.maybe_truncate": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "len": {
     "line number": [
      37
     ]
    },
    "unicode_type": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.formatting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.formatting.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.formatting.pretty_print": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "len": {
     "line number": [
      32
     ]
    },
    "max": {
     "line number": [
      32
     ]
    },
    "xarray.core.formatting.maybe_truncate": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.formatting.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.formatting.set_numpy_options": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": {
    "numpy.get_printoptions": {
     "line number": [
      341
     ]
    },
    "numpy.set_printoptions": {
     "line number": [
      342,
      344
     ]
    },
    "xarray.core.formatting.contextlib": {
     "line number": [
      339
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.formatting.short_array_repr": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      348
     ]
    },
    "repr": {
     "line number": [
      364
     ]
    },
    "xarray.core.formatting.set_numpy_options": {
     "line number": [
      363
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.formatting.short_dask_repr": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": {
    "tuple": {
     "line number": [
      372
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.formatting.summarize_attr": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": {
    "unicode_type": {
     "line number": [
      260
     ]
    },
    "xarray.core.formatting.maybe_truncate": {
     "line number": [
      262
     ]
    },
    "xarray.core.formatting.pretty_print": {
     "line number": [
      258
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.formatting.summarize_coord": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": {
    "xarray.core.formatting._summarize_coord_levels": {
     "line number": [
      248
     ]
    },
    "xarray.core.formatting._summarize_coord_multiindex": {
     "line number": [
      247
     ]
    },
    "xarray.core.formatting.summarize_variable": {
     "line number": [
      249
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.formatting.summarize_datavar": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "xarray.core.formatting.summarize_variable": {
     "line number": [
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.formatting.summarize_variable": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      212
     ]
    },
    "len": {
     "line number": [
      211
     ]
    },
    "map": {
     "line number": [
      206
     ]
    },
    "unicode_type": {
     "line number": [
      206
     ]
    },
    "xarray.core.formatting.format_array_flat": {
     "line number": [
      211
     ]
    },
    "xarray.core.formatting.pretty_print": {
     "line number": [
      204
     ]
    },
    "xarray.core.formatting.short_dask_repr": {
     "line number": [
      213
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.formatting.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "xarray.core.formatting.unindexed_dims_repr": {
  "data": {
   "lineno": 330
  },
  "type": "function"
 },
 "xarray.core.formatting.wrap_indent": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "len": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.groupby": {
  "data": {
   "symbols_in_volume": {
    "xarray.core.groupby.DataArrayGroupBy": {
     "line number": [
      575,
      576
     ]
    },
    "xarray.core.groupby.DatasetGroupBy": {
     "line number": [
      666,
      667
     ]
    }
   }
  },
  "type": "module"
 },
 "xarray.core.groupby.DataArrayGroupBy": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": {
    "xarray.core.groupby.GroupBy": {
     "line number": [
      438
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.groupby.DataArrayGroupBy._combine": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": {
    "as_variable": {
     "line number": [
      533
     ]
    },
    "concat": {
     "line number": [
      525
     ]
    },
    "isinstance": {
     "line number": [
      528
     ]
    },
    "peek_at": {
     "line number": [
      520
     ]
    },
    "type": {
     "line number": [
      528
     ]
    },
    "xarray.core.groupby._maybe_reorder": {
     "line number": [
      526
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.groupby.DataArrayGroupBy._concat_shortcut": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": {
    "xarray.core.groupby._maybe_reorder": {
     "line number": [
      456
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.groupby.DataArrayGroupBy._iter_grouped_shortcut": {
  "data": {
   "lineno": 442
  },
  "type": "function"
 },
 "xarray.core.groupby.DataArrayGroupBy._restore_dim_order": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": {
    "sorted": {
     "line number": [
      470
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.groupby.DataArrayGroupBy._restore_dim_order.lookup_order": {
  "data": {
   "lineno": 461
  },
  "type": "function"
 },
 "xarray.core.groupby.DataArrayGroupBy.apply": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": {
    "func": {
     "line number": [
      514
     ]
    },
    "maybe_wrap_array": {
     "line number": [
      514
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.groupby.DataArrayGroupBy.reduce": {
  "data": {
   "lineno": 540
  },
  "type": "function"
 },
 "xarray.core.groupby.DataArrayGroupBy.reduce.reduce_array": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": {
    "func": {
     "line number": [
      571
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.groupby.DatasetGroupBy": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": {
    "xarray.core.groupby.GroupBy": {
     "line number": [
      579
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.groupby.DatasetGroupBy._combine": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": {
    "concat": {
     "line number": [
      615
     ]
    },
    "peek_at": {
     "line number": [
      613
     ]
    },
    "xarray.core.groupby._maybe_reorder": {
     "line number": [
      616
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.groupby.DatasetGroupBy.apply": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": {
    "func": {
     "line number": [
      608
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.groupby.DatasetGroupBy.assign": {
  "data": {
   "lineno": 656
  },
  "type": "function"
 },
 "xarray.core.groupby.DatasetGroupBy.reduce": {
  "data": {
   "lineno": 623
  },
  "type": "function"
 },
 "xarray.core.groupby.DatasetGroupBy.reduce.reduce_dataset": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": {
    "func": {
     "line number": [
      653
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy": {
  "data": {
   "lineno": 155
  },
  "type": "class"
 },
 "xarray.core.groupby.GroupBy.__init__": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "DataArray": {
     "line number": [
      200,
      226
     ]
    },
    "IndexVariable": {
     "line number": [
      243,
      256
     ]
    },
    "TypeError": {
     "line number": [
      198,
      202
     ]
    },
    "ValueError": {
     "line number": [
      210,
      217,
      233
     ]
    },
    "getattr": {
     "line number": [
      209
     ]
    },
    "hashable": {
     "line number": [
      201
     ]
    },
    "isinstance": {
     "line number": [
      200
     ]
    },
    "numpy.arange": {
     "line number": [
      234,
      246
     ]
    },
    "numpy.int64": {
     "line number": [
      239
     ]
    },
    "pandas.Series": {
     "line number": [
      234
     ]
    },
    "pandas.cut": {
     "line number": [
      224
     ]
    },
    "safe_cast_to_index": {
     "line number": [
      230,
      255
     ]
    },
    "slice": {
     "line number": [
      240,
      242,
      250
     ]
    },
    "xarray.core.groupby._DummyGroup": {
     "line number": [
      207
     ]
    },
    "xarray.core.groupby._ensure_1d": {
     "line number": [
      212
     ]
    },
    "xarray.core.groupby._unique_and_monotonic": {
     "line number": [
      244
     ]
    },
    "xarray.core.groupby.unique_value_groups": {
     "line number": [
      254
     ]
    },
    "zip": {
     "line number": [
      241
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy.__iter__": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": {
    "zip": {
     "line number": [
      283
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy.__len__": {
  "data": {
   "lineno": 279
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy._binary_op": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      302
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy._binary_op.func": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": {
    "f": {
     "line number": [
      306,
      304
     ]
    },
    "xarray.core.groupby.functools": {
     "line number": [
      304
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy._first_or_last": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      402
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy._infer_concat_args": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      298
     ]
    },
    "xarray.core.groupby._DummyGroup": {
     "line number": [
      298
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy._iter_grouped": {
  "data": {
   "lineno": 285
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy._maybe_restore_empty_groups": {
  "data": {
   "lineno": 335
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy._maybe_unstack": {
  "data": {
   "lineno": 345
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy._yield_binary_applied": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      318
     ]
    },
    "KeyError": {
     "line number": [
      322
     ]
    },
    "TypeError": {
     "line number": [
      319
     ]
    },
    "ValueError": {
     "line number": [
      322,
      324
     ]
    },
    "func": {
     "line number": [
      332
     ]
    },
    "xarray.core.groupby._dummy_copy": {
     "line number": [
      329
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy.assign_coords": {
  "data": {
   "lineno": 419
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy.fillna": {
  "data": {
   "lineno": 355
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy.first": {
  "data": {
   "lineno": 409
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy.groups": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      275
     ]
    },
    "property": {
     "line number": [
      271
     ]
    },
    "zip": {
     "line number": [
      275
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy.last": {
  "data": {
   "lineno": 414
  },
  "type": "function"
 },
 "xarray.core.groupby.GroupBy.where": {
  "data": {
   "lineno": 380
  },
  "type": "function"
 },
 "xarray.core.groupby._DummyGroup": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "object": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.groupby._DummyGroup.__init__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "range": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.groupby._consolidate_slices": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      78
     ]
    },
    "isinstance": {
     "line number": [
      77
     ]
    },
    "slice": {
     "line number": [
      75,
      77,
      82
     ]
    },
    "xarray.core.groupby._is_one_or_none": {
     "line number": [
      80,
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.groupby._dummy_copy": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      63
     ]
    },
    "DataArray": {
     "line number": [
      55
     ]
    },
    "Dataset": {
     "line number": [
      48
     ]
    },
    "dict": {
     "line number": [
      48,
      50,
      56
     ]
    },
    "isinstance": {
     "line number": [
      47,
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.groupby._ensure_1d": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "xarray.core.groupby._inverse_permutation_indices": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      105
     ]
    },
    "numpy.arange": {
     "line number": [
      109
     ]
    },
    "numpy.concatenate": {
     "line number": [
      111
     ]
    },
    "slice": {
     "line number": [
      105,
      107
     ]
    },
    "xarray.core.groupby._consolidate_slices": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.groupby._is_one_or_none": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "xarray.core.groupby._maybe_reorder": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": {
    "xarray.core.groupby._inverse_permutation_indices": {
     "line number": [
      430
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.groupby._unique_and_monotonic": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      148
     ]
    },
    "safe_cast_to_index": {
     "line number": [
      151
     ]
    },
    "xarray.core.groupby._DummyGroup": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.groupby.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.groupby.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.groupby.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.core.groupby.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.groupby.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.groupby.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.groupby.unique_value_groups": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      37
     ]
    },
    "len": {
     "line number": [
      36
     ]
    },
    "pandas.factorize": {
     "line number": [
      35
     ]
    },
    "range": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.merge": {
  "data": {
   "symbols_in_volume": {
    "Frozen": {
     "line number": [
      12
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      10
     ]
    },
    "pandas.Panel": {
     "line number": [
      10
     ]
    },
    "pandas.Series": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "module"
 },
 "xarray.core.merge.MergeError": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.merge.OrderedDefaultDict": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.merge.OrderedDefaultDict.__init__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "super": {
     "line number": [
      103
     ]
    },
    "xarray.core.merge.OrderedDefaultDict": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.merge.OrderedDefaultDict.__missing__": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "xarray.core.merge.PANDAS_TYPES": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "xarray.core.merge._VALID_COMPAT": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "xarray.core.merge._assert_compat_valid": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      94
     ]
    },
    "set": {
     "line number": [
      95
     ]
    },
    "xarray.core.merge._VALID_COMPAT": {
     "line number": [
      93,
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.merge._get_priority_vars": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "xarray.core.merge.expand_variable_dicts": {
     "line number": [
      323
     ]
    },
    "xarray.core.merge.merge_variables": {
     "line number": [
      324
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.merge.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.merge.assert_valid_explicit_coords": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": {
    "xarray.core.merge.MergeError": {
     "line number": [
      374
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.merge.broadcast_dimension_size": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      25
     ]
    },
    "ValueError": {
     "line number": [
      29
     ]
    },
    "zip": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.merge.coerce_pandas_values": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": {
    "DataArray": {
     "line number": [
      281
     ]
    },
    "OrderedDict": {
     "line number": [
      276,
      278
     ]
    },
    "isinstance": {
     "line number": [
      273,
      277,
      280
     ]
    },
    "xarray.core.merge.PANDAS_TYPES": {
     "line number": [
      277,
      280
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.merge.dataset_merge_method": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      536,
      537
     ]
    },
    "isinstance": {
     "line number": [
      525
     ]
    },
    "set": {
     "line number": [
      526,
      527,
      532
     ]
    },
    "xarray.core.merge.merge_core": {
     "line number": [
      546
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.merge.dataset_update_method": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": {
    "xarray.core.merge.merge_core": {
     "line number": [
      551
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.merge.determine_coords": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      239,
      239,
      245
     ]
    },
    "set": {
     "line number": [
      235,
      236,
      246
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.merge.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.merge.expand_and_merge_variables": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": {
    "xarray.core.merge._get_priority_vars": {
     "line number": [
      334
     ]
    },
    "xarray.core.merge.expand_variable_dicts": {
     "line number": [
      333
     ]
    },
    "xarray.core.merge.merge_variables": {
     "line number": [
      335
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.merge.expand_variable_dicts": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      201
     ]
    },
    "as_variable": {
     "line number": [
      211
     ]
    },
    "hasattr": {
     "line number": [
      196,
      204
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.merge.merge": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": {
    "DataArray": {
     "line number": [
      509
     ]
    },
    "isinstance": {
     "line number": [
      509
     ]
    },
    "xarray.core.merge.merge_core": {
     "line number": [
      512
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.merge.merge_coords": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": {
    "assert_unique_multiindex_level_names": {
     "line number": [
      353
     ]
    },
    "deep_align": {
     "line number": [
      349
     ]
    },
    "xarray.core.merge._assert_compat_valid": {
     "line number": [
      347
     ]
    },
    "xarray.core.merge._get_priority_vars": {
     "line number": [
      351
     ]
    },
    "xarray.core.merge.coerce_pandas_values": {
     "line number": [
      348
     ]
    },
    "xarray.core.merge.expand_variable_dicts": {
     "line number": [
      350
     ]
    },
    "xarray.core.merge.merge_variables": {
     "line number": [
      352
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.merge.merge_coords_for_inplace_math": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": {
    "assert_unique_multiindex_level_names": {
     "line number": [
      294
     ]
    },
    "xarray.core.merge.expand_variable_dicts": {
     "line number": [
      292
     ]
    },
    "xarray.core.merge.merge_variables": {
     "line number": [
      293
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.merge.merge_core": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": {
    "assert_unique_multiindex_level_names": {
     "line number": [
      431
     ]
    },
    "calculate_dimensions": {
     "line number": [
      433
     ]
    },
    "deep_align": {
     "line number": [
      424
     ]
    },
    "dict": {
     "line number": [
      449
     ]
    },
    "xarray.core.merge.MergeError": {
     "line number": [
      445
     ]
    },
    "xarray.core.merge._assert_compat_valid": {
     "line number": [
      421
     ]
    },
    "xarray.core.merge._get_priority_vars": {
     "line number": [
      429
     ]
    },
    "xarray.core.merge.assert_valid_explicit_coords": {
     "line number": [
      436
     ]
    },
    "xarray.core.merge.coerce_pandas_values": {
     "line number": [
      423
     ]
    },
    "xarray.core.merge.determine_coords": {
     "line number": [
      427
     ]
    },
    "xarray.core.merge.expand_variable_dicts": {
     "line number": [
      425
     ]
    },
    "xarray.core.merge.merge_variables": {
     "line number": [
      430
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.merge.merge_data_and_coords": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": {
    "xarray.core.merge.merge_core": {
     "line number": [
      363
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.merge.merge_variables": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      148
     ]
    },
    "list": {
     "line number": [
      141
     ]
    },
    "min": {
     "line number": [
      139
     ]
    },
    "xarray.core.merge.MergeError": {
     "line number": [
      165
     ]
    },
    "xarray.core.merge.OrderedDefaultDict": {
     "line number": [
      141
     ]
    },
    "xarray.core.merge._VALID_COMPAT": {
     "line number": [
      139
     ]
    },
    "xarray.core.merge._assert_compat_valid": {
     "line number": [
      138
     ]
    },
    "xarray.core.merge.unique_variable": {
     "line number": [
      161,
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.merge.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.merge.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.merge.unique_variable": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      79,
      86
     ]
    },
    "len": {
     "line number": [
      65
     ]
    },
    "xarray.core.merge.MergeError": {
     "line number": [
      80
     ]
    },
    "xarray.core.merge.broadcast_dimension_size": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.missing": {
  "data": {},
  "type": "module"
 },
 "xarray.core.missing.BaseInterpolator": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "object": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.missing.BaseInterpolator.__call__": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "xarray.core.missing.BaseInterpolator.__init__": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "xarray.core.missing.BaseInterpolator.__repr__": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "xarray.core.missing.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "xarray.core.missing.NumpyInterpolator": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "xarray.core.missing.BaseInterpolator": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.missing.NumpyInterpolator.__call__": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "xarray.core.missing.NumpyInterpolator.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      46,
      58,
      71
     ]
    },
    "collections.Iterable": {
     "line number": [
      64
     ]
    },
    "is_scalar": {
     "line number": [
      67
     ]
    },
    "isinstance": {
     "line number": [
      64
     ]
    },
    "len": {
     "line number": [
      64
     ]
    },
    "numpy.interp": {
     "line number": [
      50
     ]
    },
    "numpy.nan": {
     "line number": [
      62,
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.missing.ScipyInterpolator": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "xarray.core.missing.BaseInterpolator": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.missing.ScipyInterpolator.__init__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      91,
      97
     ]
    },
    "numpy.nan": {
     "line number": [
      105,
      105,
      107
     ]
    },
    "scipy.interpolate.interp1d": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.missing.SplineInterpolator": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "xarray.core.missing.BaseInterpolator": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.missing.SplineInterpolator.__init__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      127,
      136
     ]
    },
    "scipy.interpolate.UnivariateSpline": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.missing.UnivariateSpline": {
  "data": {
   "shadows": "scipy.interpolate.UnivariateSpline"
  },
  "type": "import"
 },
 "xarray.core.missing._apply_over_vars_with_dim": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "func": {
     "line number": [
      148
     ]
    },
    "iteritems": {
     "line number": [
      146
     ]
    },
    "type": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.missing._bfill": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": {
    "bottleneck.push": {
     "line number": [
      248
     ]
    },
    "flip": {
     "line number": [
      245,
      251
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.missing._get_interpolator": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      301,
      302
     ]
    },
    "ValueError": {
     "line number": [
      319,
      321
     ]
    },
    "functools.partial": {
     "line number": [
      323
     ]
    },
    "scipy.interpolate.Akima1DInterpolator": {
     "line number": [
      317
     ]
    },
    "scipy.interpolate.BarycentricInterpolator": {
     "line number": [
      308
     ]
    },
    "scipy.interpolate.KroghInterpolator": {
     "line number": [
      310
     ]
    },
    "scipy.interpolate.PchipInterpolator": {
     "line number": [
      312
     ]
    },
    "xarray.core.missing.NumpyInterpolator": {
     "line number": [
      297
     ]
    },
    "xarray.core.missing.ScipyInterpolator": {
     "line number": [
      306
     ]
    },
    "xarray.core.missing.SplineInterpolator": {
     "line number": [
      315
     ]
    },
    "xarray.core.missing.wrap_interpolator": {
     "line number": [
      323
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.missing._get_valid_fill_mask": {
  "data": {
   "lineno": 326
  },
  "type": "function"
 },
 "xarray.core.missing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.missing.bfill": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": {
    "apply_ufunc": {
     "line number": [
      277
     ]
    },
    "dict": {
     "line number": [
      281
     ]
    },
    "xarray.core.missing._bfill": {
     "line number": [
      277
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.missing.bn": {
  "data": {
   "shadows": "bottleneck"
  },
  "type": "import"
 },
 "xarray.core.missing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.missing.ffill": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": {
    "apply_ufunc": {
     "line number": [
      263
     ]
    },
    "bottleneck.push": {
     "line number": [
      263
     ]
    },
    "dict": {
     "line number": [
      267
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.missing.get_clean_interp_index": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      178,
      181
     ]
    },
    "ValueError": {
     "line number": [
      171,
      178,
      185
     ]
    },
    "numpy.arange": {
     "line number": [
      188
     ]
    },
    "numpy.diff": {
     "line number": [
      184
     ]
    },
    "numpy.float64": {
     "line number": [
      177,
      188
     ]
    },
    "type": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.missing.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "xarray.core.missing.interp_na": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      198
     ]
    },
    "apply_ufunc": {
     "line number": [
      208
     ]
    },
    "xarray.core.missing._get_interpolator": {
     "line number": [
      206
     ]
    },
    "xarray.core.missing._get_valid_fill_mask": {
     "line number": [
      201
     ]
    },
    "xarray.core.missing.get_clean_interp_index": {
     "line number": [
      204
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.missing.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "xarray.core.missing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.missing.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "xarray.core.missing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.missing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.missing.wrap_interpolator": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "f": {
     "line number": [
      237
     ]
    },
    "interpolator": {
     "line number": [
      236
     ]
    },
    "len": {
     "line number": [
      233
     ]
    },
    "pandas.isnull": {
     "line number": [
      228
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.npcompat": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      18,
      261
     ]
    },
    "distutils.version.LooseVersion": {
     "line number": [
      7,
      7
     ]
    },
    "numpy.__version__": {
     "line number": [
      7
     ]
    },
    "numpy.lib.stride_tricks.as_strided": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "module"
 },
 "xarray.core.npcompat.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.core.npcompat._replace_nan": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      50
     ]
    },
    "issubclass": {
     "line number": [
      53
     ]
    },
    "numpy.array": {
     "line number": [
      52,
      57
     ]
    },
    "numpy.copyto": {
     "line number": [
      60
     ]
    },
    "numpy.inexact": {
     "line number": [
      53
     ]
    },
    "numpy.isnan": {
     "line number": [
      59
     ]
    },
    "numpy.ndarray": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.npcompat.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.npcompat.as_strided": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "numpy.lib.stride_tricks.as_strided": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.npcompat.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.npcompat.flip": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      254
     ]
    },
    "ValueError": {
     "line number": [
      255
     ]
    },
    "hasattr": {
     "line number": [
      249
     ]
    },
    "numpy.asarray": {
     "line number": [
      250
     ]
    },
    "slice": {
     "line number": [
      251,
      253
     ]
    },
    "tuple": {
     "line number": [
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.npcompat.isin": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      351
     ]
    },
    "numpy.in1d": {
     "line number": [
      352
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.npcompat.nancumprod": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "numpy.cumprod": {
     "line number": [
      186
     ]
    },
    "xarray.core.npcompat._replace_nan": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.npcompat.nancumsum": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "numpy.cumsum": {
     "line number": [
      125
     ]
    },
    "xarray.core.npcompat._replace_nan": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.npcompat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.npcompat.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.nputils": {
  "data": {},
  "type": "module"
 },
 "xarray.core.nputils.NumpyVIndexAdapter": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "object": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.nputils.NumpyVIndexAdapter.__getitem__": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "numpy.moveaxis": {
     "line number": [
      131
     ]
    },
    "xarray.core.nputils._advanced_indexer_subspaces": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.nputils.NumpyVIndexAdapter.__init__": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "xarray.core.nputils.NumpyVIndexAdapter.__setitem__": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "numpy.moveaxis": {
     "line number": [
      136
     ]
    },
    "xarray.core.nputils._advanced_indexer_subspaces": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.nputils._advanced_indexer_subspaces": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      101
     ]
    },
    "isinstance": {
     "line number": [
      99,
      102,
      112
     ]
    },
    "len": {
     "line number": [
      113
     ]
    },
    "numpy.arange": {
     "line number": [
      114,
      115
     ]
    },
    "numpy.broadcast": {
     "line number": [
      113
     ]
    },
    "slice": {
     "line number": [
      102,
      112
     ]
    },
    "tuple": {
     "line number": [
      99
     ]
    },
    "xarray.core.nputils._is_contiguous": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.nputils._ensure_bool_is_ndarray": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      67,
      70
     ]
    },
    "constructor": {
     "line number": [
      70
     ]
    },
    "isinstance": {
     "line number": [
      67
     ]
    },
    "numpy.broadcast": {
     "line number": [
      68
     ]
    },
    "numpy.ones": {
     "line number": [
      69
     ]
    },
    "numpy.zeros": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.nputils._is_contiguous": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "xarray.core.nputils._rolling_window": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      190,
      193
     ]
    },
    "numpy.swapaxes": {
     "line number": [
      187,
      199
     ]
    },
    "xarray.core.nputils._validate_axis": {
     "line number": [
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.nputils._select_along_axis": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      22
     ]
    },
    "numpy.ix_": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.nputils._validate_axis": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.nputils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.nputils.array_eq": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "xarray.core.nputils._ensure_bool_is_ndarray": {
     "line number": [
      77
     ]
    },
    "xarray.core.nputils.warnings": {
     "line number": [
      75,
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.nputils.array_ne": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "xarray.core.nputils._ensure_bool_is_ndarray": {
     "line number": [
      83
     ]
    },
    "xarray.core.nputils.warnings": {
     "line number": [
      81,
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.nputils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.nputils.inverse_permutation": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "len": {
     "line number": [
      55,
      56
     ]
    },
    "numpy.arange": {
     "line number": [
      56
     ]
    },
    "numpy.empty": {
     "line number": [
      55
     ]
    },
    "numpy.intp": {
     "line number": [
      55,
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.nputils.nanfirst": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "numpy.argmax": {
     "line number": [
      29
     ]
    },
    "pandas.isnull": {
     "line number": [
      29
     ]
    },
    "xarray.core.nputils._select_along_axis": {
     "line number": [
      30
     ]
    },
    "xarray.core.nputils._validate_axis": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.nputils.nanlast": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "numpy.argmax": {
     "line number": [
      36
     ]
    },
    "pandas.isnull": {
     "line number": [
      36
     ]
    },
    "slice": {
     "line number": [
      35,
      35
     ]
    },
    "xarray.core.nputils._select_along_axis": {
     "line number": [
      37
     ]
    },
    "xarray.core.nputils._validate_axis": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.nputils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.nputils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.nputils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.nputils.rolling_window": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "int": {
     "line number": [
      144
     ]
    },
    "numpy.pad": {
     "line number": [
      149
     ]
    },
    "xarray.core.nputils._rolling_window": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.nputils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.core.ops": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      21
     ]
    },
    "bottleneck": {
     "line number": [
      23
     ]
    },
    "dict": {
     "line number": [
      268
     ]
    },
    "numpy": {
     "line number": [
      23
     ]
    },
    "xarray.core.ops.NUM_BINARY_OPS": {
     "line number": [
      32,
      269
     ]
    },
    "xarray.core.ops.get_op": {
     "line number": [
      268,
      268
     ]
    }
   }
  },
  "type": "module"
 },
 "xarray.core.ops.BOTTLENECK_ROLLING_METHODS": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "xarray.core.ops.CMP_BINARY_OPS": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "xarray.core.ops.NAN_CUM_METHODS": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "xarray.core.ops.NAN_REDUCE_METHODS": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "xarray.core.ops.NON_INPLACE_OP": {
  "data": {
   "lineno": 268
  },
  "type": "constant"
 },
 "xarray.core.ops.NUMPY_SAME_METHODS": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "xarray.core.ops.NUMPY_UNARY_METHODS": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "xarray.core.ops.NUM_BINARY_OPS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "xarray.core.ops.PANDAS_UNARY_FUNCTIONS": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "xarray.core.ops.REDUCE_METHODS": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "xarray.core.ops.UNARY_OPS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "xarray.core.ops._CUM_DOCSTRING_TEMPLATE": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "xarray.core.ops._REDUCE_DOCSTRING_TEMPLATE": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "xarray.core.ops._ROLLING_REDUCE_DOCSTRING_TEMPLATE": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "xarray.core.ops._call_possibly_missing_method": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      182
     ]
    },
    "getattr": {
     "line number": [
      181
     ]
    },
    "hasattr": {
     "line number": [
      184
     ]
    },
    "method": {
     "line number": [
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.ops._func_slash_method_wrapper": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "f.__doc__": {
     "line number": [
      220
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.ops._func_slash_method_wrapper.func": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      217
     ]
    },
    "f": {
     "line number": [
      218
     ]
    },
    "getattr": {
     "line number": [
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.ops._method_wrapper": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      203
     ]
    },
    "numpy.ndarray": {
     "line number": [
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.ops._method_wrapper.func": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "xarray.core.ops._call_possibly_missing_method": {
     "line number": [
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.ops._values_method_wrapper": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      195
     ]
    },
    "numpy.ndarray": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.ops._values_method_wrapper.func": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "xarray.core.ops._call_possibly_missing_method": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.ops.bn": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "xarray.core.ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.ops.fillna": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "apply_ufunc": {
     "line number": [
      145
     ]
    },
    "numpy.nan": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.ops.get_op": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      265
     ]
    },
    "xarray.core.ops.op_str": {
     "line number": [
      265
     ]
    },
    "xarray.core.ops.operator": {
     "line number": [
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.ops.has_bottleneck": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "xarray.core.ops.inject_all_ops_and_reduce_methods": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": {
    "f": {
     "line number": [
      307,
      309,
      311,
      312
     ]
    },
    "getattr": {
     "line number": [
      308
     ]
    },
    "setattr": {
     "line number": [
      299,
      304,
      309,
      312,
      318
     ]
    },
    "xarray.core.ops.NUMPY_SAME_METHODS": {
     "line number": [
      317
     ]
    },
    "xarray.core.ops.NUMPY_UNARY_METHODS": {
     "line number": [
      303
     ]
    },
    "xarray.core.ops.PANDAS_UNARY_FUNCTIONS": {
     "line number": [
      306
     ]
    },
    "xarray.core.ops.UNARY_OPS": {
     "line number": [
      298
     ]
    },
    "xarray.core.ops._func_slash_method_wrapper": {
     "line number": [
      307,
      311
     ]
    },
    "xarray.core.ops._method_wrapper": {
     "line number": [
      304
     ]
    },
    "xarray.core.ops._values_method_wrapper": {
     "line number": [
      318
     ]
    },
    "xarray.core.ops.get_op": {
     "line number": [
      299
     ]
    },
    "xarray.core.ops.inject_binary_ops": {
     "line number": [
      300
     ]
    },
    "xarray.core.ops.inject_cum_methods": {
     "line number": [
      321
     ]
    },
    "xarray.core.ops.inject_reduce_methods": {
     "line number": [
      320
     ]
    },
    "xarray.core.ops.op_str": {
     "line number": [
      299
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.ops.inject_binary_ops": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": {
    "f": {
     "line number": [
      280,
      281
     ]
    },
    "setattr": {
     "line number": [
      278,
      281,
      285,
      288
     ]
    },
    "xarray.core.ops.CMP_BINARY_OPS": {
     "line number": [
      277
     ]
    },
    "xarray.core.ops.NUM_BINARY_OPS": {
     "line number": [
      277,
      283
     ]
    },
    "xarray.core.ops.get_op": {
     "line number": [
      278,
      286,
      289
     ]
    },
    "xarray.core.ops.op_str": {
     "line number": [
      278,
      281,
      285,
      288
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.ops.inject_bottleneck_rolling_methods": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": {
    "bottleneck": {
     "line number": [
      347
     ]
    },
    "f": {
     "line number": [
      328,
      329,
      347,
      348
     ]
    },
    "getattr": {
     "line number": [
      326,
      347
     ]
    },
    "setattr": {
     "line number": [
      333,
      340,
      352
     ]
    },
    "xarray.core.ops.BOTTLENECK_ROLLING_METHODS": {
     "line number": [
      346
     ]
    },
    "xarray.core.ops.NAN_REDUCE_METHODS": {
     "line number": [
      327
     ]
    },
    "xarray.core.ops._ROLLING_REDUCE_DOCSTRING_TEMPLATE": {
     "line number": [
      331,
      338,
      350
     ]
    },
    "xarray.core.ops.has_bottleneck": {
     "line number": [
      343
     ]
    },
    "xarray.core.ops.rolling_count": {
     "line number": [
      336
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.ops.inject_cum_methods": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": {
    "f": {
     "line number": [
      250,
      251,
      252
     ]
    },
    "getattr": {
     "line number": [
      248,
      251
     ]
    },
    "setattr": {
     "line number": [
      257
     ]
    },
    "xarray.core.ops.NAN_CUM_METHODS": {
     "line number": [
      249
     ]
    },
    "xarray.core.ops._CUM_DOCSTRING_TEMPLATE": {
     "line number": [
      254
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.ops.inject_datasetrolling_methods": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": {
    "f": {
     "line number": [
      359,
      360
     ]
    },
    "getattr": {
     "line number": [
      357
     ]
    },
    "setattr": {
     "line number": [
      364,
      370
     ]
    },
    "xarray.core.ops.NAN_REDUCE_METHODS": {
     "line number": [
      358
     ]
    },
    "xarray.core.ops._ROLLING_REDUCE_DOCSTRING_TEMPLATE": {
     "line number": [
      362,
      368
     ]
    },
    "xarray.core.ops.rolling_count": {
     "line number": [
      366
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.ops.inject_reduce_methods": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": {
    "f": {
     "line number": [
      237,
      238,
      239
     ]
    },
    "getattr": {
     "line number": [
      232,
      234,
      238
     ]
    },
    "setattr": {
     "line number": [
      244
     ]
    },
    "xarray.core.ops.NAN_REDUCE_METHODS": {
     "line number": [
      235
     ]
    },
    "xarray.core.ops.REDUCE_METHODS": {
     "line number": [
      233
     ]
    },
    "xarray.core.ops._REDUCE_DOCSTRING_TEMPLATE": {
     "line number": [
      241
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.ops.inplace_to_noninplace_op": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": {
    "f": {
     "line number": [
      273
     ]
    },
    "xarray.core.ops.NON_INPLACE_OP": {
     "line number": [
      273
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.ops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.ops.op_str": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "xarray.core.ops.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "xarray.core.ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.ops.rolling_count": {
  "data": {
   "lineno": 224
  },
  "type": "function"
 },
 "xarray.core.ops.where_method": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "apply_ufunc": {
     "line number": [
      171
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.options": {
  "data": {},
  "type": "module"
 },
 "xarray.core.options.OPTIONS": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "xarray.core.options.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.options.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.options.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.options.set_options": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "object": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.options.set_options.__enter__": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "xarray.core.options.set_options.__exit__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "xarray.core.options.OPTIONS": {
     "line number": [
      48,
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.options.set_options.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      39
     ]
    },
    "set": {
     "line number": [
      40
     ]
    },
    "xarray.core.options.OPTIONS": {
     "line number": [
      37,
      40,
      41,
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.pycompat": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      54,
      57,
      64,
      70,
      73,
      79,
      114
     ]
    },
    "bytes": {
     "line number": [
      15
     ]
    },
    "functools.reduce": {
     "line number": [
      45,
      45
     ]
    },
    "int": {
     "line number": [
      16,
      35
     ]
    },
    "numpy.integer": {
     "line number": [
      50
     ]
    },
    "pathlib2.Path": {
     "line number": [
      72
     ]
    },
    "str": {
     "line number": [
      13,
      14,
      34
     ]
    },
    "xarray.core.pycompat.PY3": {
     "line number": [
      12
     ]
    },
    "xarray.core.pycompat.native_int_types": {
     "line number": [
      50
     ]
    },
    "xarray.core.pycompat.sys": {
     "line number": [
      9,
      10
     ]
    }
   }
  },
  "type": "module"
 },
 "xarray.core.pycompat.ExitStack": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "object": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.pycompat.ExitStack.__enter__": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "xarray.core.pycompat.ExitStack.__exit__": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": {
    "BaseException": {
     "line number": [
      235,
      247
     ]
    },
    "_fix_exception_context": {
     "line number": [
      238
     ]
    },
    "cb": {
     "line number": [
      231
     ]
    },
    "xarray.core.pycompat.sys": {
     "line number": [
      208,
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.pycompat.ExitStack.__exit__._fix_exception_context": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "xarray.core.pycompat.ExitStack.__init__": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "collections.deque": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.pycompat.ExitStack._push_cm_exit": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "xarray.core.pycompat.ExitStack._push_cm_exit._exit_wrapper": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "cm_exit": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.pycompat.ExitStack.callback": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "callback": {
     "line number": [
      178,
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.pycompat.ExitStack.callback._exit_wrapper": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "callback": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.pycompat.ExitStack.close": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "xarray.core.pycompat.ExitStack.enter_context": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "type": {
     "line number": [
      190
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.pycompat.ExitStack.pop_all": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "collections.deque": {
     "line number": [
      139
     ]
    },
    "type": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.pycompat.ExitStack.push": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      162
     ]
    },
    "type": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.pycompat.OrderedDict": {
  "data": {
   "shadows": "ordereddict.OrderedDict"
  },
  "type": "import"
 },
 "xarray.core.pycompat.PY2": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "xarray.core.pycompat.PY3": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "xarray.core.pycompat.Path": {
  "data": {
   "shadows": "pathlib2.Path"
  },
  "type": "import"
 },
 "xarray.core.pycompat.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.pycompat.basestring": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "xarray.core.pycompat.builtins": {
  "data": {
   "shadows": "__builtin__"
  },
  "type": "import"
 },
 "xarray.core.pycompat.bytes_type": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "xarray.core.pycompat.dask.array": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.core.pycompat.dask_array_type": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "xarray.core.pycompat.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "xarray.core.pycompat.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.pycompat.getargspec": {
  "data": {
   "shadows": "inspect.getargspec"
  },
  "type": "import"
 },
 "xarray.core.pycompat.integer_types": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "xarray.core.pycompat.iteritems": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "xarray.core.pycompat.itervalues": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "xarray.core.pycompat.map": {
  "data": {
   "shadows": "itertools.imap"
  },
  "type": "import"
 },
 "xarray.core.pycompat.native_int_types": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "xarray.core.pycompat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.pycompat.path_type": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "xarray.core.pycompat.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.pycompat.range": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "xarray.core.pycompat.reduce": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "xarray.core.pycompat.suppress": {
  "data": {
   "lineno": 83
  },
  "type": "class"
 },
 "xarray.core.pycompat.suppress.__enter__": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "xarray.core.pycompat.suppress.__exit__": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "issubclass": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.pycompat.suppress.__init__": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "xarray.core.pycompat.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "xarray.core.pycompat.unicode_type": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "xarray.core.pycompat.urlretrieve": {
  "data": {
   "shadows": "urllib.urlretrieve"
  },
  "type": "import"
 },
 "xarray.core.pycompat.zip": {
  "data": {
   "shadows": "itertools.izip"
  },
  "type": "import"
 },
 "xarray.core.resample": {
  "data": {
   "symbols_in_volume": {
    "xarray.core.resample.DataArrayResample": {
     "line number": [
      224,
      225
     ]
    },
    "xarray.core.resample.DatasetResample": {
     "line number": [
      350,
      351
     ]
    }
   }
  },
  "type": "module"
 },
 "xarray.core.resample.DataArrayResample": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "xarray.core.resample.Resample": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.resample.DataArrayResample.__init__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      127
     ]
    },
    "super": {
     "line number": [
      130
     ]
    },
    "xarray.core.resample.DataArrayResample": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.resample.DataArrayResample._interpolate": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "DataArray": {
     "line number": [
      220
     ]
    },
    "OrderedDict": {
     "line number": [
      212
     ]
    },
    "TypeError": {
     "line number": [
      189
     ]
    },
    "f": {
     "line number": [
      220
     ]
    },
    "isinstance": {
     "line number": [
      188
     ]
    },
    "scipy.interpolate.interp1d": {
     "line number": [
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.resample.DataArrayResample.apply": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "super": {
     "line number": [
      169
     ]
    },
    "xarray.core.resample.DataArrayResample": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.resample.DatasetResample": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": {
    "xarray.core.resample.Resample": {
     "line number": [
      228
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.resample.DatasetResample.__init__": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      238
     ]
    },
    "super": {
     "line number": [
      241
     ]
    },
    "xarray.core.resample.DatasetResample": {
     "line number": [
      241
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.resample.DatasetResample._interpolate": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": {
    "Dataset": {
     "line number": [
      347
     ]
    },
    "OrderedDict": {
     "line number": [
      314,
      315
     ]
    },
    "TypeError": {
     "line number": [
      326
     ]
    },
    "Variable": {
     "line number": [
      343
     ]
    },
    "f": {
     "line number": [
      340,
      343
     ]
    },
    "float": {
     "line number": [
      311,
      312
     ]
    },
    "isinstance": {
     "line number": [
      325
     ]
    },
    "scipy.interpolate.interp1d": {
     "line number": [
      340
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.resample.DatasetResample.apply": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "func": {
     "line number": [
      271
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.resample.DatasetResample.reduce": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": {
    "func": {
     "line number": [
      303
     ]
    },
    "super": {
     "line number": [
      302
     ]
    },
    "xarray.core.resample.DatasetResample": {
     "line number": [
      302
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.resample.RESAMPLE_DIM": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "xarray.core.resample.Resample": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "object": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.resample.Resample._interpolate": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.resample.Resample._upsample": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.resample.Resample.asfreq": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "xarray.core.resample.Resample.backfill": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "xarray.core.resample.Resample.interpolate": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "xarray.core.resample.Resample.nearest": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "xarray.core.resample.Resample.pad": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "xarray.core.resample.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.resample.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.resample.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "xarray.core.resample.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.rolling": {
  "data": {
   "symbols_in_volume": {
    "inject_bottleneck_rolling_methods": {
     "line number": [
      450
     ]
    },
    "inject_datasetrolling_methods": {
     "line number": [
      451
     ]
    },
    "xarray.core.rolling.DataArrayRolling": {
     "line number": [
      450
     ]
    },
    "xarray.core.rolling.DatasetRolling": {
     "line number": [
      451
     ]
    }
   }
  },
  "type": "module"
 },
 "xarray.core.rolling.DataArrayRolling": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "xarray.core.rolling.Rolling": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.rolling.DataArrayRolling.__init__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "super": {
     "line number": [
      152
     ]
    },
    "xarray.core.rolling.DataArrayRolling": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.rolling.DataArrayRolling.__iter__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "int": {
     "line number": [
      159,
      160
     ]
    },
    "len": {
     "line number": [
      158
     ]
    },
    "numpy.arange": {
     "line number": [
      158
     ]
    },
    "slice": {
     "line number": [
      162
     ]
    },
    "zip": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.rolling.DataArrayRolling._bottleneck_reduce": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      267
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.rolling.DataArrayRolling._bottleneck_reduce.wrapped_func": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": {
    "DataArray": {
     "line number": [
      309
     ]
    },
    "dask_rolling_wrapper": {
     "line number": [
      299
     ]
    },
    "distutils.version.LooseVersion": {
     "line number": [
      290,
      290
     ]
    },
    "float": {
     "line number": [
      294
     ]
    },
    "func": {
     "line number": [
      304
     ]
    },
    "isinstance": {
     "line number": [
      298
     ]
    },
    "numpy.__version__": {
     "line number": [
      290
     ]
    },
    "slice": {
     "line number": [
      296,
      296
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.rolling.DataArrayRolling._counts": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": {
    "xarray.core.rolling._get_new_dimname": {
     "line number": [
      245
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.rolling.DataArrayRolling._reduce_method": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      256
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.rolling.DataArrayRolling._reduce_method.wrapped_func": {
  "data": {
   "lineno": 263
  },
  "type": "function"
 },
 "xarray.core.rolling.DataArrayRolling.construct": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "DataArray": {
     "line number": [
      212
     ]
    },
    "slice": {
     "line number": [
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.rolling.DataArrayRolling.reduce": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": {
    "xarray.core.rolling._get_new_dimname": {
     "line number": [
      234
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.rolling.DatasetRolling": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": {
    "xarray.core.rolling.Rolling": {
     "line number": [
      315
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.rolling.DatasetRolling.__init__": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      353
     ]
    },
    "OrderedDict": {
     "line number": [
      355
     ]
    },
    "super": {
     "line number": [
      350
     ]
    },
    "xarray.core.rolling.DataArrayRolling": {
     "line number": [
      359
     ]
    },
    "xarray.core.rolling.DatasetRolling": {
     "line number": [
      350
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.rolling.DatasetRolling._counts": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": {
    "Dataset": {
     "line number": [
      397
     ]
    },
    "OrderedDict": {
     "line number": [
      391
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.rolling.DatasetRolling._reduce_method": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      399
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.rolling.DatasetRolling._reduce_method.wrapped_func": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": {
    "Dataset": {
     "line number": [
      415
     ]
    },
    "OrderedDict": {
     "line number": [
      408
     ]
    },
    "func.__name__": {
     "line number": [
      412
     ]
    },
    "getattr": {
     "line number": [
      411
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.rolling.DatasetRolling.construct": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": {
    "Dataset": {
     "line number": [
      446
     ]
    },
    "OrderedDict": {
     "line number": [
      439
     ]
    },
    "slice": {
     "line number": [
      447
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.rolling.DatasetRolling.reduce": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": {
    "Dataset": {
     "line number": [
      387
     ]
    },
    "OrderedDict": {
     "line number": [
      381
     ]
    },
    "func": {
     "line number": [
      384
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.rolling.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.core.rolling.Rolling": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "object": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.rolling.Rolling.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      81,
      86,
      97
     ]
    },
    "distutils.version.LooseVersion": {
     "line number": [
      74,
      74
     ]
    },
    "iter": {
     "line number": [
      83
     ]
    },
    "len": {
     "line number": [
      80
     ]
    },
    "next": {
     "line number": [
      83
     ]
    },
    "xarray.core.rolling.warnings": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.rolling.Rolling.__len__": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "xarray.core.rolling.Rolling.__repr__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      107,
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.rolling._get_new_dimname": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "xarray.core.rolling.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.rolling.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.rolling.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.rolling.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.rolling.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.core.utils": {
  "data": {},
  "type": "module"
 },
 "xarray.core.utils.ChainMap": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": {
    "collections.MutableMapping": {
     "line number": [
      346
     ]
    },
    "xarray.core.utils.SingleSlotPickleMixin": {
     "line number": [
      346
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.utils.ChainMap.__delitem__": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      369
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.ChainMap.__getitem__": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      361,
      363
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.ChainMap.__init__": {
  "data": {
   "lineno": 354
  },
  "type": "function"
 },
 "xarray.core.utils.ChainMap.__iter__": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": {
    "set": {
     "line number": [
      372
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.ChainMap.__len__": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      380
     ]
    },
    "len": {
     "line number": [
      380
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.ChainMap.__setitem__": {
  "data": {
   "lineno": 365
  },
  "type": "function"
 },
 "xarray.core.utils.Frozen": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": {
    "collections.Mapping": {
     "line number": [
      281
     ]
    },
    "xarray.core.utils.SingleSlotPickleMixin": {
     "line number": [
      281
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.utils.Frozen.__contains__": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "xarray.core.utils.Frozen.__getitem__": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "xarray.core.utils.Frozen.__init__": {
  "data": {
   "lineno": 288
  },
  "type": "function"
 },
 "xarray.core.utils.Frozen.__iter__": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.Frozen.__len__": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": {
    "len": {
     "line number": [
      298
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.Frozen.__repr__": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": {
    "type": {
     "line number": [
      304
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.FrozenOrderedDict": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      308
     ]
    },
    "xarray.core.utils.Frozen": {
     "line number": [
      308
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.HiddenKeyDict": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": {
    "collections.MutableMapping": {
     "line number": [
      539
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.utils.HiddenKeyDict.__delitem__": {
  "data": {
   "lineno": 564
  },
  "type": "function"
 },
 "xarray.core.utils.HiddenKeyDict.__getitem__": {
  "data": {
   "lineno": 560
  },
  "type": "function"
 },
 "xarray.core.utils.HiddenKeyDict.__init__": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      548
     ]
    },
    "list": {
     "line number": [
      547
     ]
    },
    "tuple": {
     "line number": [
      547
     ]
    },
    "type": {
     "line number": [
      547
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.HiddenKeyDict.__iter__": {
  "data": {
   "lineno": 568
  },
  "type": "function"
 },
 "xarray.core.utils.HiddenKeyDict.__len__": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": {
    "len": {
     "line number": [
      575
     ]
    },
    "sum": {
     "line number": [
      574
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.HiddenKeyDict.__setitem__": {
  "data": {
   "lineno": 556
  },
  "type": "function"
 },
 "xarray.core.utils.HiddenKeyDict._raise_if_hidden": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      553
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "xarray.core.utils.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "xarray.core.utils.MutableMapping": {
  "data": {
   "shadows": "collections.MutableMapping"
  },
  "type": "import"
 },
 "xarray.core.utils.MutableSet": {
  "data": {
   "shadows": "collections.MutableSet"
  },
  "type": "import"
 },
 "xarray.core.utils.NDArrayMixin": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": {
    "xarray.core.utils.NdimSizeLenMixin": {
     "line number": [
      441
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.utils.NDArrayMixin.__getitem__": {
  "data": {
   "lineno": 456
  },
  "type": "function"
 },
 "xarray.core.utils.NDArrayMixin.__repr__": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": {
    "type": {
     "line number": [
      460
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.NDArrayMixin.dtype": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": {
    "property": {
     "line number": [
      448
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.NDArrayMixin.shape": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": {
    "property": {
     "line number": [
      452
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.NdimSizeLenMixin": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": {
    "object": {
     "line number": [
      421
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.utils.NdimSizeLenMixin.__len__": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      437
     ]
    },
    "TypeError": {
     "line number": [
      438
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.NdimSizeLenMixin.ndim": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": {
    "len": {
     "line number": [
      427
     ]
    },
    "property": {
     "line number": [
      425
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.NdimSizeLenMixin.size": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": {
    "int": {
     "line number": [
      432
     ]
    },
    "numpy.prod": {
     "line number": [
      432
     ]
    },
    "property": {
     "line number": [
      429
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.OrderedSet": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": {
    "collections.MutableSet": {
     "line number": [
      383
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.utils.OrderedSet.__contains__": {
  "data": {
   "lineno": 397
  },
  "type": "function"
 },
 "xarray.core.utils.OrderedSet.__init__": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      391
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.OrderedSet.__iter__": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      401
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.OrderedSet.__len__": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": {
    "len": {
     "line number": [
      404
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.OrderedSet.__repr__": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": {
    "list": {
     "line number": [
      418
     ]
    },
    "type": {
     "line number": [
      418
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.OrderedSet.add": {
  "data": {
   "lineno": 406
  },
  "type": "function"
 },
 "xarray.core.utils.OrderedSet.discard": {
  "data": {
   "lineno": 409
  },
  "type": "function"
 },
 "xarray.core.utils.OrderedSet.update": {
  "data": {
   "lineno": 414
  },
  "type": "function"
 },
 "xarray.core.utils.ReprObject": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": {
    "object": {
     "line number": [
      463
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.utils.ReprObject.__init__": {
  "data": {
   "lineno": 466
  },
  "type": "function"
 },
 "xarray.core.utils.ReprObject.__repr__": {
  "data": {
   "lineno": 469
  },
  "type": "function"
 },
 "xarray.core.utils.SingleSlotPickleMixin": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": {
    "object": {
     "line number": [
      269
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.utils.SingleSlotPickleMixin.__getstate__": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      275
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.SingleSlotPickleMixin.__setstate__": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": {
    "setattr": {
     "line number": [
      278
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.SortedKeysDict": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "collections.MutableMapping": {
     "line number": [
      311
     ]
    },
    "xarray.core.utils.SingleSlotPickleMixin": {
     "line number": [
      311
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.core.utils.SortedKeysDict.__contains__": {
  "data": {
   "lineno": 336
  },
  "type": "function"
 },
 "xarray.core.utils.SortedKeysDict.__delitem__": {
  "data": {
   "lineno": 327
  },
  "type": "function"
 },
 "xarray.core.utils.SortedKeysDict.__getitem__": {
  "data": {
   "lineno": 321
  },
  "type": "function"
 },
 "xarray.core.utils.SortedKeysDict.__init__": {
  "data": {
   "lineno": 318
  },
  "type": "function"
 },
 "xarray.core.utils.SortedKeysDict.__iter__": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      331
     ]
    },
    "sorted": {
     "line number": [
      331
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.SortedKeysDict.__len__": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": {
    "len": {
     "line number": [
      334
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.SortedKeysDict.__repr__": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": {
    "type": {
     "line number": [
      340
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.SortedKeysDict.__setitem__": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "xarray.core.utils.SortedKeysDict.copy": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": {
    "type": {
     "line number": [
      343
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.core.utils.alias": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      29
     ]
    },
    "obj.__name__": {
     "line number": [
      35
     ]
    },
    "xarray.core.utils.alias_message": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.alias.wrapper": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "obj": {
     "line number": [
      34,
      31
     ]
    },
    "xarray.core.utils.alias_warning": {
     "line number": [
      33
     ]
    },
    "xarray.core.utils.functools": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.alias_message": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "xarray.core.utils.alias_warning": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "FutureWarning": {
     "line number": [
      24
     ]
    },
    "xarray.core.utils.alias_message": {
     "line number": [
      24
     ]
    },
    "xarray.core.utils.warnings": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.close_on_error": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      480
     ]
    },
    "xarray.core.utils.contextlib": {
     "line number": [
      473
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.combine_pos_and_kw_args": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      173,
      176
     ]
    },
    "xarray.core.utils.is_dict_like": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "xarray.core.utils.decode_numpy_dict_values": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      520
     ]
    },
    "isinstance": {
     "line number": [
      522,
      524
     ]
    },
    "numpy.asscalar": {
     "line number": [
      525
     ]
    },
    "numpy.generic": {
     "line number": [
      524
     ]
    },
    "numpy.ndarray": {
     "line number": [
      522
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.dict_equiv": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": {
    "compat": {
     "line number": [
      237
     ]
    },
    "xarray.core.utils.equivalent": {
     "line number": [
      219
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.core.utils.ensure_us_time_resolution": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": {
    "numpy.datetime64": {
     "line number": [
      532
     ]
    },
    "numpy.issubdtype": {
     "line number": [
      532,
      534
     ]
    },
    "numpy.timedelta64": {
     "line number": [
      534
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.equivalent": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      102,
      102
     ]
    },
    "numpy.ndarray": {
     "line number": [
      102,
      102
     ]
    },
    "pandas.isnull": {
     "line number": [
      107,
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.core.utils.hashable": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      508
     ]
    },
    "hash": {
     "line number": [
      507
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.is_dict_like": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      163,
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.is_full_slice": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      167
     ]
    },
    "slice": {
     "line number": [
      167,
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.is_remote_uri": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      486
     ]
    },
    "xarray.core.utils.re": {
     "line number": [
      486
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.is_scalar": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "collections.Iterable": {
     "line number": [
      191
     ]
    },
    "getattr": {
     "line number": [
      189
     ]
    },
    "isinstance": {
     "line number": [
      190,
      191
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.is_uniform_spaced": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": {
    "float": {
     "line number": [
      499
     ]
    },
    "numpy.array": {
     "line number": [
      499
     ]
    },
    "numpy.diff": {
     "line number": [
      500
     ]
    },
    "numpy.isclose": {
     "line number": [
      501
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.is_valid_numpy_dtype": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      197
     ]
    },
    "ValueError": {
     "line number": [
      197
     ]
    },
    "numpy.dtype": {
     "line number": [
      196
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "xarray.core.utils.maybe_wrap_array": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      90
     ]
    },
    "numpy.ndarray": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.multiindex_from_product_levels": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "len": {
     "line number": [
      77
     ]
    },
    "numpy.arange": {
     "line number": [
      77
     ]
    },
    "numpy.meshgrid": {
     "line number": [
      77
     ]
    },
    "pandas.MultiIndex": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.not_implemented": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": {
    "NotImplemented": {
     "line number": [
      514
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.core.utils.ordered_dict_intersection": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": {
    "OrderedDict": {
     "line number": [
      264
     ]
    },
    "compat": {
     "line number": [
      265
     ]
    },
    "xarray.core.utils.equivalent": {
     "line number": [
      245
     ]
    },
    "xarray.core.utils.remove_incompatible_items": {
     "line number": [
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.core.utils.peek_at": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      114
     ]
    },
    "next": {
     "line number": [
      115
     ]
    },
    "xarray.core.utils.itertools": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.core.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "xarray.core.utils.remove_incompatible_items": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "compat": {
     "line number": [
      158
     ]
    },
    "list": {
     "line number": [
      155
     ]
    },
    "xarray.core.utils.equivalent": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.safe_cast_to_index": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      50,
      54
     ]
    },
    "isinstance": {
     "line number": [
      48
     ]
    },
    "numpy.asarray": {
     "line number": [
      56
     ]
    },
    "object": {
     "line number": [
      55
     ]
    },
    "pandas.Index": {
     "line number": [
      48,
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.to_0d_array": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      212
     ]
    },
    "numpy.array": {
     "line number": [
      214
     ]
    },
    "numpy.isscalar": {
     "line number": [
      212
     ]
    },
    "numpy.ndarray": {
     "line number": [
      212
     ]
    },
    "xarray.core.utils.to_0d_object_array": {
     "line number": [
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.to_0d_object_array": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": {
    "numpy.empty": {
     "line number": [
      205
     ]
    },
    "object": {
     "line number": [
      205
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.update_safety_check": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      137
     ]
    },
    "compat": {
     "line number": [
      136
     ]
    },
    "iteritems": {
     "line number": [
      135
     ]
    },
    "xarray.core.utils.equivalent": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.core.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.plot": {
  "data": {},
  "type": "module"
 },
 "xarray.plot.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "xarray.plot.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.plot.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.plot.facetgrid": {
  "data": {},
  "type": "module"
 },
 "xarray.plot.facetgrid.FacetGrid": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "object": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.plot.facetgrid.FacetGrid.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      108,
      125
     ]
    },
    "import_matplotlib_pyplot": {
     "line number": [
      102
     ]
    },
    "int": {
     "line number": [
      139
     ]
    },
    "len": {
     "line number": [
      114,
      115,
      130,
      161
     ]
    },
    "list": {
     "line number": [
      155,
      156
     ]
    },
    "numpy.array": {
     "line number": [
      167
     ]
    },
    "numpy.ceil": {
     "line number": [
      139
     ]
    },
    "range": {
     "line number": [
      161
     ]
    },
    "xarray.plot.facetgrid.itertools": {
     "line number": [
      164
     ]
    },
    "xarray.plot.facetgrid.warnings": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid._bottom_axes": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "property": {
     "line number": [
      196
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid._finalize_grid": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": {
    "zip": {
     "line number": [
      275
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid._left_axes": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "property": {
     "line number": [
      192
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid.add_colorbar": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      285
     ]
    },
    "list": {
     "line number": [
      288
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid.map": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": {
    "func": {
     "line number": [
      430
     ]
    },
    "import_matplotlib_pyplot": {
     "line number": [
      422
     ]
    },
    "zip": {
     "line number": [
      424
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid.map_dataarray": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      227
     ]
    },
    "_determine_cmap_params": {
     "line number": [
      239
     ]
    },
    "_infer_xy_labels": {
     "line number": [
      250
     ]
    },
    "func": {
     "line number": [
      258
     ]
    },
    "getargspec": {
     "line number": [
      236
     ]
    },
    "zip": {
     "line number": [
      254
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid.set_axis_labels": {
  "data": {
   "lineno": 292
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid.set_ticks": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": {
    "matplotlib.ticker.MaxNLocator": {
     "line number": [
      387,
      388
     ]
    },
    "xarray.plot.facetgrid._FONTSIZE": {
     "line number": [
      368
     ]
    },
    "xarray.plot.facetgrid._NTICKS": {
     "line number": [
      367,
      367
     ]
    },
    "xarray.plot.facetgrid.itertools": {
     "line number": [
      393
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid.set_titles": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": {
    "list": {
     "line number": [
      348
     ]
    },
    "matplotlib.rcParams": {
     "line number": [
      339
     ]
    },
    "nicetitle": {
     "line number": [
      349,
      354,
      361
     ]
    },
    "xarray.plot.facetgrid._nicetitle": {
     "line number": [
      341
     ]
    },
    "xarray.plot.facetgrid.functools": {
     "line number": [
      341
     ]
    },
    "zip": {
     "line number": [
      345,
      353,
      360
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid.set_xlabels": {
  "data": {
   "lineno": 302
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.FacetGrid.set_ylabels": {
  "data": {
   "lineno": 310
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.MaxNLocator": {
  "data": {
   "shadows": "matplotlib.ticker.MaxNLocator"
  },
  "type": "import"
 },
 "xarray.plot.facetgrid._FONTSIZE": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "xarray.plot.facetgrid._NTICKS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "xarray.plot.facetgrid._nicetitle": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "format_item": {
     "line number": [
      25
     ]
    },
    "len": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.facetgrid.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.plot.facetgrid.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.plot.facetgrid.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.plot.facetgrid.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "xarray.plot.facetgrid.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "xarray.plot.facetgrid.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.plot.facetgrid.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.plot.facetgrid.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.plot.plot": {
  "data": {},
  "type": "module"
 },
 "xarray.plot.plot._PlotMethods": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": {
    "object": {
     "line number": [
      343
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.plot.plot._PlotMethods.__call__": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": {
    "xarray.plot.plot.plot": {
     "line number": [
      353
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.plot._PlotMethods.__init__": {
  "data": {
   "lineno": 349
  },
  "type": "function"
 },
 "xarray.plot.plot._PlotMethods.hist": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": {
    "xarray.plot.plot.functools": {
     "line number": [
      355
     ]
    },
    "xarray.plot.plot.hist": {
     "line number": [
      357,
      355
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.plot._PlotMethods.line": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": {
    "xarray.plot.plot.functools": {
     "line number": [
      359
     ]
    },
    "xarray.plot.plot.line": {
     "line number": [
      361,
      359
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.plot._easy_facetgrid": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "FacetGrid": {
     "line number": [
      78
     ]
    },
    "ValueError": {
     "line number": [
      70,
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.plot._ensure_plottable": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      55
     ]
    },
    "datetime.datetime": {
     "line number": [
      50
     ]
    },
    "numpy.array": {
     "line number": [
      53,
      54
     ]
    },
    "numpy.datetime64": {
     "line number": [
      49
     ]
    },
    "numpy.floating": {
     "line number": [
      49
     ]
    },
    "numpy.integer": {
     "line number": [
      49
     ]
    },
    "numpy.timedelta64": {
     "line number": [
      49
     ]
    },
    "xarray.plot.plot._valid_numpy_subdtype": {
     "line number": [
      53
     ]
    },
    "xarray.plot.plot._valid_other_type": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.plot._infer_interval_breaks": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      814
     ]
    },
    "numpy.array": {
     "line number": [
      823
     ]
    },
    "numpy.asarray": {
     "line number": [
      811
     ]
    },
    "numpy.concatenate": {
     "line number": [
      828
     ]
    },
    "numpy.diff": {
     "line number": [
      821
     ]
    },
    "numpy.take": {
     "line number": [
      824,
      824,
      825,
      825
     ]
    },
    "range": {
     "line number": [
      827
     ]
    },
    "slice": {
     "line number": [
      826,
      826
     ]
    },
    "tuple": {
     "line number": [
      826
     ]
    },
    "xarray.plot.plot._is_monotonic": {
     "line number": [
      813
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.plot._is_monotonic": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      800,
      800
     ]
    },
    "numpy.arange": {
     "line number": [
      796,
      797,
      798,
      799
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.plot._plot2d": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": {
    "newplotfunc": {
     "line number": [
      686
     ]
    },
    "plotfunc.__doc__": {
     "line number": [
      497,
      497
     ]
    },
    "setattr": {
     "line number": [
      684
     ]
    },
    "xarray.plot.plot._PlotMethods": {
     "line number": [
      684
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.plot._plot2d.newplotfunc": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      551
     ]
    },
    "ValueError": {
     "line number": [
      541,
      545,
      558,
      560,
      623,
      650
     ]
    },
    "_determine_cmap_params": {
     "line number": [
      606
     ]
    },
    "_infer_xy_labels": {
     "line number": [
      554
     ]
    },
    "dict": {
     "line number": [
      639
     ]
    },
    "get_axis": {
     "line number": [
      626
     ]
    },
    "globals": {
     "line number": [
      533
     ]
    },
    "import_matplotlib_pyplot": {
     "line number": [
      537
     ]
    },
    "isinstance": {
     "line number": [
      548,
      621
     ]
    },
    "list": {
     "line number": [
      548
     ]
    },
    "locals": {
     "line number": [
      528
     ]
    },
    "numpy.broadcast_to": {
     "line number": [
      569,
      572
     ]
    },
    "numpy.datetime64": {
     "line number": [
      656
     ]
    },
    "numpy.issubdtype": {
     "line number": [
      656
     ]
    },
    "plotfunc": {
     "line number": [
      627,
      499
     ]
    },
    "plotfunc.__name__": {
     "line number": [
      513,
      515,
      533,
      544,
      557,
      592,
      603,
      608,
      615,
      621
     ]
    },
    "tuple": {
     "line number": [
      548,
      581
     ]
    },
    "xarray.core.pycompat.basestring": {
     "line number": [
      621
     ]
    },
    "xarray.plot.plot._easy_facetgrid": {
     "line number": [
      535
     ]
    },
    "xarray.plot.plot._ensure_plottable": {
     "line number": [
      590
     ]
    },
    "xarray.plot.plot._rescale_imshow_rgb": {
     "line number": [
      523
     ]
    },
    "xarray.plot.plot._update_axes_limits": {
     "line number": [
      653
     ]
    },
    "xarray.plot.plot.functools": {
     "line number": [
      499
     ]
    },
    "xarray.plot.plot.warnings": {
     "line number": [
      549
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.plot._plot2d.plotmethod": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": {
    "locals": {
     "line number": [
      676
     ]
    },
    "newplotfunc": {
     "line number": [
      681,
      662
     ]
    },
    "xarray.plot.plot.functools": {
     "line number": [
      662
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.plot._rescale_imshow_rgb": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      380,
      386
     ]
    },
    "numpy.integer": {
     "line number": [
      378
     ]
    },
    "numpy.issubdtype": {
     "line number": [
      378
     ]
    },
    "numpy.nanpercentile": {
     "line number": [
      372,
      374
     ]
    },
    "xarray.ufuncs.maximum": {
     "line number": [
      394
     ]
    },
    "xarray.ufuncs.minimum": {
     "line number": [
      394
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.plot._update_axes_limits": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": {
    "sorted": {
     "line number": [
      329,
      331,
      336,
      338
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.plot._valid_numpy_subdtype": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "any": {
     "line number": [
      34
     ]
    },
    "numpy.generic": {
     "line number": [
      32
     ]
    },
    "numpy.issubdtype": {
     "line number": [
      32,
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.plot._valid_other_type": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "all": {
     "line number": [
      41
     ]
    },
    "any": {
     "line number": [
      41
     ]
    },
    "isinstance": {
     "line number": [
      41
     ]
    },
    "numpy.ravel": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.plot.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.plot.plot.basestring": {
  "data": {
   "shadows": "xarray.core.pycompat.basestring"
  },
  "type": "import"
 },
 "xarray.plot.plot.contour": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": {
    "xarray.plot.plot._plot2d": {
     "line number": [
      761
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.plot.contourf": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": {
    "xarray.plot.plot._plot2d": {
     "line number": [
      772
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.plot.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "xarray.plot.plot.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.plot.plot.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.plot.plot.hist": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": {
    "get_axis": {
     "line number": [
      306
     ]
    },
    "numpy.ravel": {
     "line number": [
      308
     ]
    },
    "pandas.notnull": {
     "line number": [
      309
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.plot.imshow": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      721,
      726
     ]
    },
    "ValueError": {
     "line number": [
      715
     ]
    },
    "hasattr": {
     "line number": [
      736
     ]
    },
    "numpy.any": {
     "line number": [
      754
     ]
    },
    "numpy.integer": {
     "line number": [
      749
     ]
    },
    "numpy.issubdtype": {
     "line number": [
      749
     ]
    },
    "numpy.ma.concatenate": {
     "line number": [
      751
     ]
    },
    "numpy.ma.ones": {
     "line number": [
      748
     ]
    },
    "xarray.plot.plot._plot2d": {
     "line number": [
      689
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.plot.line": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      194,
      214,
      217,
      220,
      240
     ]
    },
    "_infer_xy_labels": {
     "line number": [
      243,
      249
     ]
    },
    "get_axis": {
     "line number": [
      208
     ]
    },
    "len": {
     "line number": [
      192
     ]
    },
    "list": {
     "line number": [
      268
     ]
    },
    "numpy.datetime64": {
     "line number": [
      272
     ]
    },
    "numpy.issubdtype": {
     "line number": [
      272
     ]
    },
    "repr": {
     "line number": [
      211
     ]
    },
    "xarray.plot.plot._ensure_plottable": {
     "line number": [
      254
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.plot.maximum": {
  "data": {
   "shadows": "xarray.ufuncs.maximum"
  },
  "type": "import"
 },
 "xarray.plot.plot.minimum": {
  "data": {
   "shadows": "xarray.ufuncs.minimum"
  },
  "type": "import"
 },
 "xarray.plot.plot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.plot.plot.pcolormesh": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      842,
      865
     ]
    },
    "len": {
     "line number": [
      843,
      851
     ]
    },
    "numpy.asarray": {
     "line number": [
      840
     ]
    },
    "xarray.plot.plot._infer_interval_breaks": {
     "line number": [
      852,
      853,
      856,
      857,
      858,
      859
     ]
    },
    "xarray.plot.plot._plot2d": {
     "line number": [
      831
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.plot.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.plot.plot.plot": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      134,
      146
     ]
    },
    "len": {
     "line number": [
      127
     ]
    },
    "plotfunc": {
     "line number": [
      151
     ]
    },
    "set": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.plot.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.plot.plot.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.plot.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.plot.utils": {
  "data": {},
  "type": "module"
 },
 "xarray.plot.utils.LinearSegmentedColormap": {
  "data": {
   "shadows": "matplotlib.colors.LinearSegmentedColormap"
  },
  "type": "import"
 },
 "xarray.plot.utils.ListedColormap": {
  "data": {
   "shadows": "matplotlib.colors.ListedColormap"
  },
  "type": "import"
 },
 "xarray.plot.utils.ROBUST_PERCENTILE": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "xarray.plot.utils._build_discrete_cmap": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      105
     ]
    },
    "len": {
     "line number": [
      99
     ]
    },
    "matplotlib.colors.from_levels_and_colors": {
     "line number": [
      102
     ]
    },
    "xarray.plot.utils._color_palette": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.utils._color_palette": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      129
     ]
    },
    "ValueError": {
     "line number": [
      124,
      129
     ]
    },
    "cmap": {
     "line number": [
      117,
      118,
      122,
      122,
      123,
      128,
      131,
      131,
      132,
      135
     ]
    },
    "isinstance": {
     "line number": [
      114,
      118
     ]
    },
    "list": {
     "line number": [
      114
     ]
    },
    "matplotlib.colors.ListedColormap": {
     "line number": [
      116,
      131
     ]
    },
    "matplotlib.pyplot.get_cmap": {
     "line number": [
      122
     ]
    },
    "numpy.linspace": {
     "line number": [
      113
     ]
    },
    "seaborn.apionly.color_palette": {
     "line number": [
      128
     ]
    },
    "tuple": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.utils._determine_cmap_params": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      194,
      202,
      213,
      213
     ]
    },
    "cmap": {
     "line number": [
      221,
      223,
      225,
      228,
      229,
      246,
      246,
      248
     ]
    },
    "dict": {
     "line number": [
      248
     ]
    },
    "is_scalar": {
     "line number": [
      233
     ]
    },
    "matplotlib.ticker.MaxNLocator": {
     "line number": [
      238
     ]
    },
    "max": {
     "line number": [
      213
     ]
    },
    "numpy.array": {
     "line number": [
      167
     ]
    },
    "numpy.linspace": {
     "line number": [
      235
     ]
    },
    "numpy.percentile": {
     "line number": [
      190,
      198
     ]
    },
    "numpy.ravel": {
     "line number": [
      162
     ]
    },
    "pandas.isnull": {
     "line number": [
      162
     ]
    },
    "xarray.plot.utils.ROBUST_PERCENTILE": {
     "line number": [
      190,
      198
     ]
    },
    "xarray.plot.utils._build_discrete_cmap": {
     "line number": [
      246
     ]
    },
    "xarray.plot.utils._determine_extend": {
     "line number": [
      243
     ]
    },
    "xarray.plot.utils._load_default_cmap": {
     "line number": [
      229
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.utils._determine_extend": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "xarray.plot.utils._infer_xy_labels": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      314,
      318,
      322,
      325
     ]
    },
    "any": {
     "line number": [
      324
     ]
    },
    "xarray.plot.utils._infer_xy_labels_3d": {
     "line number": [
      310
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.utils._infer_xy_labels_3d": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      265,
      270,
      276,
      283
     ]
    },
    "len": {
     "line number": [
      264,
      264,
      280,
      289
     ]
    },
    "set": {
     "line number": [
      264
     ]
    },
    "xarray.plot.utils._infer_xy_labels": {
     "line number": [
      299
     ]
    },
    "xarray.plot.utils.warnings": {
     "line number": [
      291
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.utils._load_default_cmap": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      22
     ]
    },
    "matplotlib.colors.LinearSegmentedColormap.from_list": {
     "line number": [
      25
     ]
    },
    "pandas.read_csv": {
     "line number": [
      23
     ]
    },
    "xarray.plot.utils.pkg_resources": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.utils._registered": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "xarray.plot.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.plot.utils.color_palette": {
  "data": {
   "shadows": "seaborn.apionly.color_palette"
  },
  "type": "import"
 },
 "xarray.plot.utils.converter": {
  "data": {
   "shadows": "pandas.tseries.converter"
  },
  "type": "import"
 },
 "xarray.plot.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.plot.utils.get_axis": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      335,
      338,
      343,
      350
     ]
    },
    "matplotlib.pyplot.gca": {
     "line number": [
      353
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      340,
      348
     ]
    },
    "matplotlib.rcParams": {
     "line number": [
      345
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.utils.import_matplotlib_pyplot": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "matplotlib.pyplot": {
     "line number": [
      65
     ]
    },
    "xarray.plot.utils.register_pandas_datetime_converter_if_needed": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.utils.import_seaborn": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      36,
      37
     ]
    },
    "UserWarning": {
     "line number": [
      34
     ]
    },
    "issubclass": {
     "line number": [
      34
     ]
    },
    "seaborn": {
     "line number": [
      41
     ]
    },
    "str": {
     "line number": [
      35
     ]
    },
    "xarray.plot.utils.warnings": {
     "line number": [
      30,
      31,
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.utils.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "xarray.plot.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.plot.utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.plot.utils.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "xarray.plot.utils.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "xarray.plot.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.plot.utils.register_matplotlib_converters": {
  "data": {
   "shadows": "pandas.plotting.register_matplotlib_converters"
  },
  "type": "import"
 },
 "xarray.plot.utils.register_pandas_datetime_converter_if_needed": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      54
     ]
    },
    "pandas.plotting.register_matplotlib_converters": {
     "line number": [
      53
     ]
    },
    "pandas.tseries.converter.register": {
     "line number": [
      57
     ]
    },
    "xarray.plot.utils._registered": {
     "line number": [
      50,
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.plot.utils.sns": {
  "data": {
   "shadows": "seaborn"
  },
  "type": "import"
 },
 "xarray.plot.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.testing": {
  "data": {},
  "type": "module"
 },
 "xarray.testing._data_allclose_or_equiv": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "any": {
     "line number": [
      17,
      21
     ]
    },
    "xarray.core.duck_array_ops.allclose_or_equiv": {
     "line number": [
      24
     ]
    },
    "xarray.core.duck_array_ops.array_equiv": {
     "line number": [
      22
     ]
    },
    "xarray.testing._decode_string_data": {
     "line number": [
      18,
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.testing._decode_string_data": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "numpy.core.defchararray.decode": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.testing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.testing.assert_allclose": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      139
     ]
    },
    "dict": {
     "line number": [
      117
     ]
    },
    "isinstance": {
     "line number": [
      118,
      122,
      132
     ]
    },
    "list": {
     "line number": [
      135,
      135
     ]
    },
    "set": {
     "line number": [
      124,
      124,
      133,
      133,
      134,
      134
     ]
    },
    "type": {
     "line number": [
      116,
      116,
      140
     ]
    },
    "xarray.DataArray": {
     "line number": [
      122
     ]
    },
    "xarray.Dataset": {
     "line number": [
      132
     ]
    },
    "xarray.Variable": {
     "line number": [
      118
     ]
    },
    "xarray.testing._data_allclose_or_equiv": {
     "line number": [
      120,
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.testing.assert_equal": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      55
     ]
    },
    "isinstance": {
     "line number": [
      52
     ]
    },
    "type": {
     "line number": [
      51,
      51,
      56
     ]
    },
    "xarray.DataArray": {
     "line number": [
      52
     ]
    },
    "xarray.Dataset": {
     "line number": [
      52
     ]
    },
    "xarray.Variable": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.testing.assert_identical": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      85
     ]
    },
    "isinstance": {
     "line number": [
      79,
      82
     ]
    },
    "type": {
     "line number": [
      78,
      78,
      86
     ]
    },
    "xarray.DataArray": {
     "line number": [
      79
     ]
    },
    "xarray.Dataset": {
     "line number": [
      82
     ]
    },
    "xarray.Variable": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.testing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.testing.duck_array_ops": {
  "data": {
   "shadows": "xarray.core.duck_array_ops"
  },
  "type": "import"
 },
 "xarray.testing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.testing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.testing.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests": {
  "data": {
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      98
     ]
    },
    "ImportError": {
     "line number": [
      24,
      30,
      35,
      44,
      91
     ]
    },
    "ValueError": {
     "line number": [
      98
     ]
    },
    "matplotlib.use": {
     "line number": [
      43
     ]
    },
    "unittest2.skipUnless": {
     "line number": [
      81,
      93
     ]
    },
    "xarray.plot.utils.import_seaborn": {
     "line number": [
      89
     ]
    },
    "xarray.tests._SKIP_FLAKY": {
     "line number": [
      106
     ]
    },
    "xarray.tests._SKIP_NETWORK_TESTS": {
     "line number": [
      108
     ]
    },
    "xarray.tests._importorskip": {
     "line number": [
      65,
      66,
      67,
      68,
      69,
      70,
      71,
      72,
      73,
      74,
      75,
      76,
      77,
      84
     ]
    },
    "xarray.tests.dask": {
     "line number": [
      87,
      87
     ]
    },
    "xarray.tests.has_scipy_or_netCDF4": {
     "line number": [
      82
     ]
    },
    "xarray.tests.has_seaborn": {
     "line number": [
      93
     ]
    },
    "xarray.tests.pytest": {
     "line number": [
      96,
      97,
      105,
      107
     ]
    }
   }
  },
  "type": "module"
 },
 "xarray.tests.ExplicitlyIndexed": {
  "data": {
   "shadows": "xarray.core.indexing.ExplicitlyIndexed"
  },
  "type": "import"
 },
 "xarray.tests.InaccessibleArray": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "xarray.core.indexing.ExplicitlyIndexed": {
     "line number": [
      161
     ]
    },
    "xarray.core.utils.NDArrayMixin": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.tests.InaccessibleArray.__getitem__": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "xarray.tests.UnexpectedDataAccess": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.InaccessibleArray.__init__": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "xarray.tests.IndexerMaker": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "object": {
     "line number": [
      176
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.tests.IndexerMaker.__getitem__": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      182
     ]
    },
    "tuple": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.IndexerMaker.__init__": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "xarray.tests.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.tests.PY3": {
  "data": {
   "shadows": "xarray.core.pycompat.PY3"
  },
  "type": "import"
 },
 "xarray.tests.ReturnItem": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "object": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.tests.ReturnItem.__getitem__": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "xarray.tests.TestCase": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "unittest2.TestCase": {
     "line number": [
      113
     ]
    },
    "xarray.core.pycompat.PY3": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.tests.TestCase.assertAllClose": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "xarray.core.duck_array_ops.allclose_or_equiv": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.TestCase.assertEqual": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "xarray.tests.TestCase.assertItemsEqual": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "xarray.tests.TestCase.assertVariableNotEqual": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "xarray.tests.TestCase.assertWarns": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "any": {
     "line number": [
      131
     ]
    },
    "contextlib.contextmanager": {
     "line number": [
      124
     ]
    },
    "len": {
     "line number": [
      130
     ]
    },
    "str": {
     "line number": [
      131
     ]
    },
    "xarray.tests.warnings": {
     "line number": [
      127,
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.UnexpectedDataAccess": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.tests._SKIP_FLAKY": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "xarray.tests._SKIP_NETWORK_TESTS": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "xarray.tests._importorskip": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      54,
      55
     ]
    },
    "distutils.version.LooseVersion": {
     "line number": [
      53,
      53
     ]
    },
    "unittest2.skipUnless": {
     "line number": [
      61
     ]
    },
    "xarray.tests.importlib": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.allclose_or_equiv": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.allclose_or_equiv"
  },
  "type": "import"
 },
 "xarray.tests.assert_allclose": {
  "data": {
   "shadows": "xarray.testing.assert_allclose"
  },
  "type": "import"
 },
 "xarray.tests.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "xarray.tests.assert_equal": {
  "data": {
   "shadows": "xarray.testing.assert_equal"
  },
  "type": "import"
 },
 "xarray.tests.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "xarray.tests.assert_identical": {
  "data": {
   "shadows": "xarray.testing.assert_identical"
  },
  "type": "import"
 },
 "xarray.tests.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "xarray.tests.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "xarray.tests.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.flaky": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "xarray.tests.has_scipy_or_netCDF4": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "xarray.tests.has_seaborn": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "xarray.tests.import_seaborn": {
  "data": {
   "shadows": "xarray.plot.utils.import_seaborn"
  },
  "type": "import"
 },
 "xarray.tests.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "xarray.tests.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "xarray.tests.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "xarray.tests.network": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "xarray.tests.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.raises_regex": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      153
     ]
    },
    "contextlib.contextmanager": {
     "line number": [
      146
     ]
    },
    "str": {
     "line number": [
      151
     ]
    },
    "xarray.tests.pytest": {
     "line number": [
      149
     ]
    },
    "xarray.tests.re": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "xarray.tests.requires_scipy_or_netCDF4": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "xarray.tests.requires_seaborn": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "xarray.tests.source_ndarray": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      191
     ]
    },
    "numpy.asarray": {
     "line number": [
      191
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_accessors": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_accessors.TestDatetimeAccessor": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "xarray.tests.test_accessors.TestDatetimeAccessor.setUp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "numpy.linspace": {
     "line number": [
      16,
      17
     ]
    },
    "numpy.random.choice": {
     "line number": [
      23
     ]
    },
    "numpy.random.rand": {
     "line number": [
      15
     ]
    },
    "pandas.date_range": {
     "line number": [
      18
     ]
    },
    "xarray.DataArray": {
     "line number": [
      20,
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_accessors.TestDatetimeAccessor.test_dask_field_access": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      90,
      91,
      92,
      93,
      94,
      95,
      96
     ]
    },
    "dask.array.Array": {
     "line number": [
      77,
      78,
      79,
      80
     ]
    },
    "dask.array.from_array": {
     "line number": [
      63
     ]
    },
    "isinstance": {
     "line number": [
      77,
      78,
      79,
      80
     ]
    },
    "round": {
     "line number": [
      61,
      96
     ]
    },
    "xarray.DataArray": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_accessors.TestDatetimeAccessor.test_field_access": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      39,
      40,
      41,
      42
     ]
    },
    "xarray.DataArray": {
     "line number": [
      30,
      32,
      34,
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_accessors.TestDatetimeAccessor.test_not_datetime_type": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      48
     ]
    },
    "len": {
     "line number": [
      46
     ]
    },
    "numpy.arange": {
     "line number": [
      46
     ]
    },
    "raises_regex": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_accessors.TestDatetimeAccessor.test_rounders": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      111,
      113,
      115
     ]
    },
    "len": {
     "line number": [
      109
     ]
    },
    "numpy.arange": {
     "line number": [
      109
     ]
    },
    "pandas.date_range": {
     "line number": [
      108
     ]
    },
    "xarray.DataArray": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_accessors.TestDatetimeAccessor.test_seasons": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      105
     ]
    },
    "pandas.date_range": {
     "line number": [
      99
     ]
    },
    "xarray.DataArray": {
     "line number": [
      100,
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_accessors.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_accessors.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.tests.test_accessors.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_accessors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_accessors.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_accessors.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_accessors.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_coding": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      10
     ]
    },
    "xarray.core.pycompat.suppress": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "module"
 },
 "xarray.tests.test_coding.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.tests.test_coding.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_coding.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_coding.suppress": {
  "data": {
   "shadows": "xarray.core.pycompat.suppress"
  },
  "type": "import"
 },
 "xarray.tests.test_coding.test_CFMaskCoder_decode": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      19
     ]
    },
    "numpy.nan": {
     "line number": [
      16
     ]
    },
    "xarray.Variable": {
     "line number": [
      15,
      16
     ]
    },
    "xarray.coding.variables.CFMaskCoder": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_coding.test_CFMaskCoder_decode_dask": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      29
     ]
    },
    "dask.array.Array": {
     "line number": [
      28
     ]
    },
    "isinstance": {
     "line number": [
      28
     ]
    },
    "numpy.nan": {
     "line number": [
      25
     ]
    },
    "xarray.Variable": {
     "line number": [
      24,
      25
     ]
    },
    "xarray.coding.variables.CFMaskCoder": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_coding.test_coder_roundtrip": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      39
     ]
    },
    "numpy.nan": {
     "line number": [
      36
     ]
    },
    "xarray.Variable": {
     "line number": [
      36
     ]
    },
    "xarray.coding.variables.CFMaskCoder": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_coding.test_scaling_converts_to_float32": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      50
     ]
    },
    "dict": {
     "line number": [
      45
     ]
    },
    "numpy.arange": {
     "line number": [
      44
     ]
    },
    "numpy.float32": {
     "line number": [
      48,
      51
     ]
    },
    "xarray.Variable": {
     "line number": [
      44
     ]
    },
    "xarray.coding.variables.CFScaleOffsetCoder": {
     "line number": [
      46
     ]
    },
    "xarray.tests.test_coding.pytest": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_coding.variables": {
  "data": {
   "shadows": "xarray.coding.variables"
  },
  "type": "import"
 },
 "xarray.tests.test_coding.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_coding_times.TestDatetime": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "xarray.tests.test_coding_times.TestDatetime.test_cf_datetime": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      73,
      81,
      89
     ]
    },
    "hasattr": {
     "line number": [
      82
     ]
    },
    "isinstance": {
     "line number": [
      63
     ]
    },
    "numpy.arange": {
     "line number": [
      28,
      29,
      30,
      31,
      32,
      35,
      36,
      37,
      46,
      47
     ]
    },
    "numpy.around": {
     "line number": [
      81,
      89
     ]
    },
    "numpy.array": {
     "line number": [
      42
     ]
    },
    "numpy.datetime64": {
     "line number": [
      64
     ]
    },
    "numpy.int32": {
     "line number": [
      52
     ]
    },
    "numpy.issubdtype": {
     "line number": [
      64
     ]
    },
    "numpy.ndarray": {
     "line number": [
      63
     ]
    },
    "pandas.Index": {
     "line number": [
      88
     ]
    },
    "print": {
     "line number": [
      57
     ]
    },
    "xarray.coding.times._import_netcdftime": {
     "line number": [
      26
     ]
    },
    "xarray.coding.times.decode_cf_datetime": {
     "line number": [
      61
     ]
    },
    "xarray.coding.times.encode_cf_datetime": {
     "line number": [
      74,
      87
     ]
    },
    "xarray.tests.test_coding_times._ensure_naive_tz": {
     "line number": [
      55
     ]
    },
    "xarray.tests.test_coding_times.warnings": {
     "line number": [
      58,
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.TestDatetime.test_cf_datetime_nan": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      244
     ]
    },
    "numpy.array": {
     "line number": [
      243
     ]
    },
    "numpy.nan": {
     "line number": [
      234,
      235,
      237
     ]
    },
    "xarray.coding.times.decode_cf_datetime": {
     "line number": [
      242
     ]
    },
    "xarray.tests.test_coding_times.warnings": {
     "line number": [
      240,
      241
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.TestDatetime.test_cf_timedelta": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      297,
      303,
      308
     ]
    },
    "numpy.array": {
     "line number": [
      281,
      293,
      307
     ]
    },
    "numpy.int64": {
     "line number": [
      280,
      282,
      283,
      284
     ]
    },
    "numpy.nan": {
     "line number": [
      285,
      287,
      288,
      288,
      307
     ]
    },
    "numpy.timedelta64": {
     "line number": [
      287,
      306
     ]
    },
    "pandas.to_timedelta": {
     "line number": [
      292
     ]
    },
    "xarray.coding.times.decode_cf_timedelta": {
     "line number": [
      302,
      307
     ]
    },
    "xarray.coding.times.encode_cf_timedelta": {
     "line number": [
      296
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.TestDatetime.test_cf_timedelta_2d": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      319
     ]
    },
    "numpy.atleast_2d": {
     "line number": [
      313,
      315
     ]
    },
    "pandas.to_timedelta": {
     "line number": [
      315
     ]
    },
    "xarray.coding.times.decode_cf_timedelta": {
     "line number": [
      318
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.TestDatetime.test_decode_cf_datetime_non_iso_strings": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      126
     ]
    },
    "numpy.arange": {
     "line number": [
      121,
      122,
      123
     ]
    },
    "pandas.date_range": {
     "line number": [
      120
     ]
    },
    "xarray.coding.times.decode_cf_datetime": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.TestDatetime.test_decode_cf_datetime_non_standard_units": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      114
     ]
    },
    "numpy.arange": {
     "line number": [
      113
     ]
    },
    "pandas.date_range": {
     "line number": [
      109
     ]
    },
    "xarray.coding.times.decode_cf_datetime": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.TestDatetime.test_decode_cf_datetime_overflow": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "datetime.datetime": {
     "line number": [
      102,
      102
     ]
    },
    "enumerate": {
     "line number": [
      104
     ]
    },
    "xarray.coding.times.decode_cf_datetime": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.TestDatetime.test_decode_non_standard_calendar": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      145
     ]
    },
    "numpy.dtype": {
     "line number": [
      144
     ]
    },
    "numpy.timedelta64": {
     "line number": [
      149
     ]
    },
    "pandas.date_range": {
     "line number": [
      135
     ]
    },
    "xarray.coding.times._import_netcdftime": {
     "line number": [
      130
     ]
    },
    "xarray.coding.times.decode_cf_datetime": {
     "line number": [
      142
     ]
    },
    "xarray.tests.test_coding_times.warnings": {
     "line number": [
      140,
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.TestDatetime.test_decode_non_standard_calendar_fallback": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      229
     ]
    },
    "len": {
     "line number": [
      224
     ]
    },
    "numpy.arange": {
     "line number": [
      217
     ]
    },
    "numpy.dtype": {
     "line number": [
      228
     ]
    },
    "str": {
     "line number": [
      226
     ]
    },
    "xarray.coding.times._import_netcdftime": {
     "line number": [
      211
     ]
    },
    "xarray.coding.times.decode_cf_datetime": {
     "line number": [
      222
     ]
    },
    "xarray.tests.test_coding_times.warnings": {
     "line number": [
      220,
      221
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.TestDatetime.test_decode_non_standard_calendar_multidim_time": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      206,
      207
     ]
    },
    "len": {
     "line number": [
      195
     ]
    },
    "numpy.dtype": {
     "line number": [
      205
     ]
    },
    "numpy.empty": {
     "line number": [
      195
     ]
    },
    "pandas.date_range": {
     "line number": [
      189,
      190
     ]
    },
    "xarray.coding.times._import_netcdftime": {
     "line number": [
      185
     ]
    },
    "xarray.coding.times.decode_cf_datetime": {
     "line number": [
      203
     ]
    },
    "xarray.tests.test_coding_times.warnings": {
     "line number": [
      201,
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.TestDatetime.test_decode_non_standard_calendar_single_element": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "numpy.dtype": {
     "line number": [
      162
     ]
    },
    "xarray.coding.times.decode_cf_datetime": {
     "line number": [
      160
     ]
    },
    "xarray.tests.test_coding_times.warnings": {
     "line number": [
      157,
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.TestDatetime.test_decode_non_standard_calendar_single_element_fallback": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      171
     ]
    },
    "Warning": {
     "line number": [
      176
     ]
    },
    "numpy.asarray": {
     "line number": [
      179
     ]
    },
    "numpy.dtype": {
     "line number": [
      180
     ]
    },
    "xarray.coding.times._import_netcdftime": {
     "line number": [
      166
     ]
    },
    "xarray.coding.times.decode_cf_datetime": {
     "line number": [
      177
     ]
    },
    "xarray.tests.test_coding_times.pytest": {
     "line number": [
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.TestDatetime.test_decoded_cf_datetime_array_2d": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      254
     ]
    },
    "numpy.array": {
     "line number": [
      249
     ]
    },
    "numpy.asarray": {
     "line number": [
      254
     ]
    },
    "pandas.date_range": {
     "line number": [
      253
     ]
    },
    "xarray.Variable": {
     "line number": [
      249
     ]
    },
    "xarray.coding.times.CFDatetimeCoder": {
     "line number": [
      251
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.TestDatetime.test_infer_datetime_units": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": {
    "pandas.date_range": {
     "line number": [
      257,
      259
     ]
    },
    "pandas.to_datetime": {
     "line number": [
      265,
      268,
      271,
      273
     ]
    },
    "xarray.coding.times.infer_datetime_units": {
     "line number": [
      276
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.TestDatetime.test_infer_timedelta_units": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      326
     ]
    },
    "pandas.to_timedelta": {
     "line number": [
      324,
      325,
      326,
      327
     ]
    },
    "xarray.coding.times.infer_timedelta_units": {
     "line number": [
      328
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times.Variable": {
  "data": {
   "shadows": "xarray.Variable"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times._ensure_naive_tz": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      17
     ]
    },
    "numpy.vectorize": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_coding_times._import_netcdftime": {
  "data": {
   "shadows": "xarray.coding.times._import_netcdftime"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.coding": {
  "data": {
   "shadows": "xarray.coding"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_coding_times.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.tests.test_combine": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_combine.DataArray": {
  "data": {
   "shadows": "xarray.DataArray"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.Dataset": {
  "data": {
   "shadows": "xarray.Dataset"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.OrderedDict": {
  "data": {
   "shadows": "xarray.core.pycompat.OrderedDict"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.TestAutoCombine": {
  "data": {
   "lineno": 298
  },
  "type": "class"
 },
 "xarray.tests.test_combine.TestAutoCombine.test_auto_combine": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      331
     ]
    },
    "ValueError": {
     "line number": [
      323,
      327
     ]
    },
    "assert_identical": {
     "line number": [
      305,
      308,
      313,
      320
     ]
    },
    "raises_regex": {
     "line number": [
      323,
      327
     ]
    },
    "xarray.Dataset": {
     "line number": [
      302,
      302,
      304,
      310,
      310,
      312,
      316,
      317,
      319,
      322,
      322,
      326,
      326,
      330,
      330
     ]
    },
    "xarray.auto_combine": {
     "line number": [
      303,
      307,
      311,
      318,
      324,
      328,
      332
     ]
    },
    "xarray.core.pycompat.OrderedDict": {
     "line number": [
      316,
      317
     ]
    },
    "xarray.tests.test_combine.pytest": {
     "line number": [
      331
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestAutoCombine.test_auto_combine_no_concat": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      370,
      375,
      379,
      388,
      398
     ]
    },
    "numpy.nan": {
     "line number": [
      372
     ]
    },
    "xarray.DataArray": {
     "line number": [
      384,
      393
     ]
    },
    "xarray.Dataset": {
     "line number": [
      367,
      367,
      369,
      372,
      372,
      374,
      377,
      383,
      386,
      392,
      395
     ]
    },
    "xarray.auto_combine": {
     "line number": [
      368,
      373,
      378,
      385,
      394
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestAutoCombine.test_auto_combine_previously_failed": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      344,
      354
     ]
    },
    "numpy.nan": {
     "line number": [
      341,
      351,
      351
     ]
    },
    "xarray.Dataset": {
     "line number": [
      338,
      339,
      340,
      341,
      348,
      349,
      350
     ]
    },
    "xarray.auto_combine": {
     "line number": [
      343,
      353
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestAutoCombine.test_auto_combine_still_fails": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      362
     ]
    },
    "xarray.Dataset": {
     "line number": [
      360,
      361
     ]
    },
    "xarray.auto_combine": {
     "line number": [
      363
     ]
    },
    "xarray.tests.test_combine.pytest": {
     "line number": [
      362
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestConcatDataArray": {
  "data": {
   "lineno": 238
  },
  "type": "class"
 },
 "xarray.tests.test_combine.TestConcatDataArray.test_concat": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      268,
      271
     ]
    },
    "assert_equal": {
     "line number": [
      250
     ]
    },
    "assert_identical": {
     "line number": [
      254,
      257,
      262,
      266
     ]
    },
    "numpy.array": {
     "line number": [
      247
     ]
    },
    "numpy.random.random": {
     "line number": [
      240,
      241
     ]
    },
    "pandas.Index": {
     "line number": [
      259
     ]
    },
    "raises_regex": {
     "line number": [
      268,
      271
     ]
    },
    "xarray.DataArray": {
     "line number": [
      247
     ]
    },
    "xarray.Dataset": {
     "line number": [
      240
     ]
    },
    "xarray.concat": {
     "line number": [
      249,
      253,
      256,
      259,
      264,
      269,
      272
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestConcatDataArray.test_concat_encoding": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      276,
      277
     ]
    },
    "xarray.Dataset": {
     "line number": [
      276
     ]
    },
    "xarray.concat": {
     "line number": [
      282,
      283
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestConcatDataArray.test_concat_lazy": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": {
    "InaccessibleArray": {
     "line number": [
      290
     ]
    },
    "dask.array.from_array": {
     "line number": [
      290
     ]
    },
    "numpy.zeros": {
     "line number": [
      290
     ]
    },
    "range": {
     "line number": [
      291
     ]
    },
    "xarray.DataArray": {
     "line number": [
      289
     ]
    },
    "xarray.concat": {
     "line number": [
      293
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestConcatDataset": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "xarray.tests.test_combine.TestConcatDataset.test_concat": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      65
     ]
    },
    "assert_equal": {
     "line number": [
      68,
      70
     ]
    },
    "assert_identical": {
     "line number": [
      30,
      41,
      44,
      46,
      53,
      56,
      78
     ]
    },
    "create_test_data": {
     "line number": [
      23
     ]
    },
    "list": {
     "line number": [
      24
     ]
    },
    "numpy.arange": {
     "line number": [
      59
     ]
    },
    "numpy.array": {
     "line number": [
      63
     ]
    },
    "range": {
     "line number": [
      64
     ]
    },
    "rectify_dim_order": {
     "line number": [
      53,
      56
     ]
    },
    "slice": {
     "line number": [
      28,
      29
     ]
    },
    "xarray.concat": {
     "line number": [
      30,
      41,
      45,
      47,
      52,
      55,
      62,
      67,
      69,
      78
     ]
    },
    "xarray.core.pycompat.iteritems": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestConcatDataset.test_concat.rectify_dim_order": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      35
     ]
    },
    "xarray.Dataset": {
     "line number": [
      35
     ]
    },
    "xarray.core.pycompat.iteritems": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestConcatDataset.test_concat_autoalign": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      126
     ]
    },
    "numpy.nan": {
     "line number": [
      123,
      123
     ]
    },
    "xarray.DataArray": {
     "line number": [
      120,
      121,
      123
     ]
    },
    "xarray.Dataset": {
     "line number": [
      120,
      121,
      123
     ]
    },
    "xarray.concat": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestConcatDataset.test_concat_constant_index": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      107
     ]
    },
    "assert_identical": {
     "line number": [
      106
     ]
    },
    "raises_regex": {
     "line number": [
      107
     ]
    },
    "xarray.Dataset": {
     "line number": [
      101,
      102,
      103
     ]
    },
    "xarray.concat": {
     "line number": [
      105,
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestConcatDataset.test_concat_coords": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      96
     ]
    },
    "assert_identical": {
     "line number": [
      94
     ]
    },
    "numpy.random.randn": {
     "line number": [
      88
     ]
    },
    "raises_regex": {
     "line number": [
      96
     ]
    },
    "slice": {
     "line number": [
      90,
      91
     ]
    },
    "xarray.Dataset": {
     "line number": [
      88
     ]
    },
    "xarray.concat": {
     "line number": [
      93,
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestConcatDataset.test_concat_data_vars": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      85
     ]
    },
    "numpy.random.randn": {
     "line number": [
      81
     ]
    },
    "slice": {
     "line number": [
      82,
      82
     ]
    },
    "xarray.Dataset": {
     "line number": [
      81
     ]
    },
    "xarray.concat": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestConcatDataset.test_concat_dim_is_variable": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      227
     ]
    },
    "xarray.Dataset": {
     "line number": [
      223,
      223,
      225
     ]
    },
    "xarray.Variable": {
     "line number": [
      224
     ]
    },
    "xarray.concat": {
     "line number": [
      226
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestConcatDataset.test_concat_do_not_promote": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      219
     ]
    },
    "assert_identical": {
     "line number": [
      215
     ]
    },
    "xarray.Dataset": {
     "line number": [
      211,
      212,
      213,
      217,
      218
     ]
    },
    "xarray.concat": {
     "line number": [
      214,
      220
     ]
    },
    "xarray.tests.test_combine.pytest": {
     "line number": [
      219
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestConcatDataset.test_concat_errors": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      133,
      136,
      139,
      146,
      151,
      154,
      158,
      162,
      165,
      167
     ]
    },
    "assert_identical": {
     "line number": [
      143
     ]
    },
    "copy.deepcopy": {
     "line number": [
      140,
      147
     ]
    },
    "create_test_data": {
     "line number": [
      129
     ]
    },
    "numpy.random.randn": {
     "line number": [
      148
     ]
    },
    "raises_regex": {
     "line number": [
      133,
      136,
      139,
      146,
      151,
      154,
      157,
      161,
      165,
      167
     ]
    },
    "slice": {
     "line number": [
      130,
      131
     ]
    },
    "xarray.Dataset": {
     "line number": [
      159,
      159,
      163,
      163
     ]
    },
    "xarray.concat": {
     "line number": [
      134,
      137,
      142,
      144,
      149,
      152,
      155,
      159,
      163,
      166,
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestConcatDataset.test_concat_multiindex": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      235
     ]
    },
    "pandas.MultiIndex": {
     "line number": [
      235
     ]
    },
    "pandas.MultiIndex.from_product": {
     "line number": [
      230
     ]
    },
    "slice": {
     "line number": [
      232,
      233
     ]
    },
    "xarray.Dataset": {
     "line number": [
      231
     ]
    },
    "xarray.concat": {
     "line number": [
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestConcatDataset.test_concat_promote_shape": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      175,
      179,
      185,
      192,
      199,
      207
     ]
    },
    "xarray.Dataset": {
     "line number": [
      172,
      172,
      174,
      177,
      177,
      182,
      182,
      184,
      188,
      189,
      191,
      195,
      196,
      198,
      202,
      203,
      205
     ]
    },
    "xarray.concat": {
     "line number": [
      173,
      178,
      183,
      190,
      197,
      204
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_combine.TestConcatDataset.test_concat_size0": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      114,
      117
     ]
    },
    "create_test_data": {
     "line number": [
      111
     ]
    },
    "slice": {
     "line number": [
      112
     ]
    },
    "xarray.concat": {
     "line number": [
      113,
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_combine.Variable": {
  "data": {
   "shadows": "xarray.Variable"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.auto_combine": {
  "data": {
   "shadows": "xarray.auto_combine"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.concat": {
  "data": {
   "shadows": "xarray.concat"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.iteritems": {
  "data": {
   "shadows": "xarray.core.pycompat.iteritems"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_combine.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_computation": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_computation.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "xarray.tests.test_computation._UFuncSignature": {
  "data": {
   "shadows": "xarray.core.computation._UFuncSignature"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.add": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "xarray.core.computation.apply_ufunc": {
     "line number": [
      108
     ]
    },
    "xarray.tests.test_computation.operator": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.apply_ufunc": {
  "data": {
   "shadows": "xarray.core.computation.apply_ufunc"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.assert_identical": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      21
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.broadcast_compat_data": {
  "data": {
   "shadows": "xarray.core.computation.broadcast_compat_data"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.collect_dict_values": {
  "data": {
   "shadows": "xarray.core.computation.collect_dict_values"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.identity": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "xarray.tests.test_computation.join_dict_keys": {
  "data": {
   "shadows": "xarray.core.computation.join_dict_keys"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.ordered_set_intersection": {
  "data": {
   "shadows": "xarray.core.computation.ordered_set_intersection"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.ordered_set_union": {
  "data": {
   "shadows": "xarray.core.computation.ordered_set_union"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.pandas_median": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": {
    "pandas.Series": {
     "line number": [
      717
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.result_name": {
  "data": {
   "shadows": "xarray.core.computation.result_name"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.test_apply_1d_and_0d": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      159
     ]
    },
    "xarray.DataArray": {
     "line number": [
      161,
      166
     ]
    },
    "xarray.Dataset": {
     "line number": [
      162,
      167
     ]
    },
    "xarray.Variable": {
     "line number": [
      160,
      165
     ]
    },
    "xarray.tests.test_computation.add": {
     "line number": [
      169,
      170,
      172,
      173,
      174,
      175,
      177,
      178,
      179,
      180,
      181,
      182,
      184,
      185,
      186,
      187,
      188,
      189,
      190,
      191,
      193,
      194,
      196,
      197,
      199,
      200,
      201,
      202
     ]
    },
    "xarray.tests.test_computation.assert_identical": {
     "line number": [
      169,
      170,
      172,
      173,
      174,
      175,
      177,
      178,
      179,
      180,
      181,
      182,
      184,
      185,
      186,
      187,
      188,
      189,
      190,
      191,
      193,
      194,
      196,
      197,
      199,
      200,
      201,
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      552,
      554,
      556,
      558,
      562
     ]
    },
    "dask.array.Array": {
     "line number": [
      571,
      575,
      579
     ]
    },
    "dask.array.ones": {
     "line number": [
      545
     ]
    },
    "dask_safe_identity": {
     "line number": [
      568,
      570,
      574,
      578
     ]
    },
    "isinstance": {
     "line number": [
      571,
      575,
      579
     ]
    },
    "xarray.DataArray": {
     "line number": [
      547,
      548
     ]
    },
    "xarray.Dataset": {
     "line number": [
      549
     ]
    },
    "xarray.Variable": {
     "line number": [
      546
     ]
    },
    "xarray.core.computation.apply_ufunc": {
     "line number": [
      553,
      555,
      557,
      559,
      563
     ]
    },
    "xarray.tests.test_computation.assert_identical": {
     "line number": [
      572,
      576,
      580
     ]
    },
    "xarray.tests.test_computation.identity": {
     "line number": [
      553,
      555,
      557,
      559,
      563
     ]
    },
    "xarray.tests.test_computation.pytest": {
     "line number": [
      552,
      554,
      556,
      558,
      562
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask.dask_safe_identity": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": {
    "xarray.core.computation.apply_ufunc": {
     "line number": [
      566
     ]
    },
    "xarray.tests.test_computation.identity": {
     "line number": [
      566
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_multiple_inputs": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": {
    "dask.array.Array": {
     "line number": [
      683,
      689
     ]
    },
    "dask.array.from_array": {
     "line number": [
      672,
      673
     ]
    },
    "float": {
     "line number": [
      688
     ]
    },
    "isinstance": {
     "line number": [
      683,
      689
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      671
     ]
    },
    "xarray.DataArray": {
     "line number": [
      674,
      675
     ]
    },
    "xarray.core.computation.apply_ufunc": {
     "line number": [
      677,
      680,
      686
     ]
    },
    "xarray.testing.assert_allclose": {
     "line number": [
      684,
      690
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_multiple_inputs.covariance": {
  "data": {
   "lineno": 667
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_new_output_dimension": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": {
    "dask.array.Array": {
     "line number": [
      712
     ]
    },
    "dask.array.ones": {
     "line number": [
      697
     ]
    },
    "isinstance": {
     "line number": [
      712
     ]
    },
    "stack_negative": {
     "line number": [
      707,
      709
     ]
    },
    "xarray.DataArray": {
     "line number": [
      698
     ]
    },
    "xarray.tests.test_computation.assert_identical": {
     "line number": [
      713
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_new_output_dimension.stack_negative": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": {
    "xarray.core.computation.apply_ufunc": {
     "line number": [
      703
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_new_output_dimension.stack_negative.func": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": {
    "numpy.stack": {
     "line number": [
      702
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_parallelized_errors": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      639
     ]
    },
    "TypeError": {
     "line number": [
      644
     ]
    },
    "ValueError": {
     "line number": [
      642,
      647,
      650,
      653,
      656
     ]
    },
    "dask.array.ones": {
     "line number": [
      636
     ]
    },
    "float": {
     "line number": [
      646,
      649,
      649,
      652,
      658
     ]
    },
    "raises_regex": {
     "line number": [
      642,
      644,
      647,
      650,
      653,
      656
     ]
    },
    "xarray.DataArray": {
     "line number": [
      637
     ]
    },
    "xarray.core.computation.apply_ufunc": {
     "line number": [
      640,
      643,
      645,
      648,
      651,
      654,
      657
     ]
    },
    "xarray.tests.test_computation.identity": {
     "line number": [
      640,
      643,
      645,
      648,
      651,
      654,
      657
     ]
    },
    "xarray.tests.test_computation.pytest": {
     "line number": [
      639
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_parallelized_one_arg": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": {
    "dask.array.Array": {
     "line number": [
      595
     ]
    },
    "dask.array.ones": {
     "line number": [
      587
     ]
    },
    "isinstance": {
     "line number": [
      595
     ]
    },
    "parallel_identity": {
     "line number": [
      594,
      600
     ]
    },
    "xarray.DataArray": {
     "line number": [
      588
     ]
    },
    "xarray.tests.test_computation.assert_identical": {
     "line number": [
      597,
      601
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_parallelized_one_arg.parallel_identity": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": {
    "xarray.core.computation.apply_ufunc": {
     "line number": [
      591
     ]
    },
    "xarray.tests.test_computation.identity": {
     "line number": [
      591
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_parallelized_two_args": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": {
    "check": {
     "line number": [
      623,
      624,
      625,
      626,
      627,
      628,
      629
     ]
    },
    "dask.array.ones": {
     "line number": [
      608
     ]
    },
    "numpy.int64": {
     "line number": [
      608
     ]
    },
    "xarray.DataArray": {
     "line number": [
      609,
      625
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_parallelized_two_args.check": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": {
    "dask.array.Array": {
     "line number": [
      619
     ]
    },
    "isinstance": {
     "line number": [
      619
     ]
    },
    "parallel_add": {
     "line number": [
      618
     ]
    },
    "xarray.tests.test_computation.assert_identical": {
     "line number": [
      621
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_dask_parallelized_two_args.parallel_add": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": {
    "numpy.int64": {
     "line number": [
      615
     ]
    },
    "xarray.core.computation.apply_ufunc": {
     "line number": [
      613
     ]
    },
    "xarray.tests.test_computation.operator": {
     "line number": [
      613
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_exclude": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      372
     ]
    },
    "concatenate": {
     "line number": [
      366,
      367,
      368,
      369
     ]
    },
    "len": {
     "line number": [
      357
     ]
    },
    "list": {
     "line number": [
      363
     ]
    },
    "numpy.array": {
     "line number": [
      355,
      355,
      361
     ]
    },
    "range": {
     "line number": [
      357
     ]
    },
    "xarray.DataArray": {
     "line number": [
      357,
      363
     ]
    },
    "xarray.Dataset": {
     "line number": [
      359,
      364
     ]
    },
    "xarray.Variable": {
     "line number": [
      356,
      362
     ]
    },
    "xarray.core.computation.apply_ufunc": {
     "line number": [
      373
     ]
    },
    "xarray.tests.test_computation.assert_identical": {
     "line number": [
      366,
      367,
      368,
      369
     ]
    },
    "xarray.tests.test_computation.identity": {
     "line number": [
      373
     ]
    },
    "xarray.tests.test_computation.pytest": {
     "line number": [
      372
     ]
    },
    "zip": {
     "line number": [
      358
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_exclude.concatenate": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      349
     ]
    },
    "len": {
     "line number": [
      346
     ]
    },
    "numpy.concatenate": {
     "line number": [
      351
     ]
    },
    "xarray.DataArray": {
     "line number": [
      349
     ]
    },
    "xarray.Dataset": {
     "line number": [
      349
     ]
    },
    "xarray.core.computation.apply_ufunc": {
     "line number": [
      345
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_exclude.concatenate.func": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": {
    "numpy.concatenate": {
     "line number": [
      344
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_groupby_add": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      401,
      405,
      407,
      409,
      411
     ]
    },
    "numpy.arange": {
     "line number": [
      377
     ]
    },
    "numpy.nan": {
     "line number": [
      387
     ]
    },
    "xarray.DataArray": {
     "line number": [
      380,
      384,
      388
     ]
    },
    "xarray.Dataset": {
     "line number": [
      381,
      385,
      389
     ]
    },
    "xarray.Variable": {
     "line number": [
      378,
      383,
      387
     ]
    },
    "xarray.tests.test_computation.add": {
     "line number": [
      392,
      394,
      396,
      398,
      402,
      406,
      408,
      410,
      412
     ]
    },
    "xarray.tests.test_computation.assert_identical": {
     "line number": [
      391,
      393,
      395,
      397
     ]
    },
    "xarray.tests.test_computation.pytest": {
     "line number": [
      401,
      405,
      407,
      409,
      411
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_identity": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "apply_identity": {
     "line number": [
      99,
      100,
      101,
      102,
      103,
      104
     ]
    },
    "numpy.arange": {
     "line number": [
      92
     ]
    },
    "xarray.DataArray": {
     "line number": [
      94
     ]
    },
    "xarray.Dataset": {
     "line number": [
      95
     ]
    },
    "xarray.Variable": {
     "line number": [
      93
     ]
    },
    "xarray.core.computation.apply_ufunc": {
     "line number": [
      97
     ]
    },
    "xarray.tests.test_computation.assert_identical": {
     "line number": [
      99,
      100,
      101,
      102,
      103,
      104
     ]
    },
    "xarray.tests.test_computation.functools": {
     "line number": [
      97
     ]
    },
    "xarray.tests.test_computation.identity": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_input_core_dimension": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": {
    "first_element": {
     "line number": [
      262,
      263,
      265,
      266,
      268,
      269,
      272,
      274
     ]
    },
    "numpy.array": {
     "line number": [
      248
     ]
    },
    "xarray.DataArray": {
     "line number": [
      250,
      254,
      258
     ]
    },
    "xarray.Dataset": {
     "line number": [
      251,
      255,
      260
     ]
    },
    "xarray.Variable": {
     "line number": [
      249,
      253,
      257
     ]
    },
    "xarray.tests.test_computation.assert_identical": {
     "line number": [
      262,
      263,
      265,
      266,
      268,
      269,
      271,
      273
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_input_core_dimension.first_element": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "xarray.core.computation.apply_ufunc": {
     "line number": [
      246
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_input_core_dimension.first_element.func": {
  "data": {
   "lineno": 244
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_output_core_dimension": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      287,
      292
     ]
    },
    "original_and_stack_negative": {
     "line number": [
      315,
      319,
      323,
      327,
      331,
      335
     ]
    },
    "stack_negative": {
     "line number": [
      298,
      299,
      300,
      301,
      303,
      305
     ]
    },
    "xarray.DataArray": {
     "line number": [
      289,
      295
     ]
    },
    "xarray.Dataset": {
     "line number": [
      290,
      296
     ]
    },
    "xarray.Variable": {
     "line number": [
      288,
      293
     ]
    },
    "xarray.tests.test_computation.assert_identical": {
     "line number": [
      298,
      299,
      300,
      301,
      302,
      304,
      316,
      317,
      320,
      321,
      324,
      325,
      328,
      329,
      332,
      333,
      336,
      337
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_output_core_dimension.original_and_stack_negative": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      311
     ]
    },
    "xarray.DataArray": {
     "line number": [
      311
     ]
    },
    "xarray.Dataset": {
     "line number": [
      311
     ]
    },
    "xarray.core.computation.apply_ufunc": {
     "line number": [
      310
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_output_core_dimension.original_and_stack_negative.func": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": {
    "numpy.stack": {
     "line number": [
      309
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_output_core_dimension.stack_negative": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      283
     ]
    },
    "xarray.DataArray": {
     "line number": [
      283
     ]
    },
    "xarray.Dataset": {
     "line number": [
      283
     ]
    },
    "xarray.core.computation.apply_ufunc": {
     "line number": [
      282
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_output_core_dimension.stack_negative.func": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": {
    "numpy.stack": {
     "line number": [
      281
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_two_inputs": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      112
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      117
     ]
    },
    "xarray.DataArray": {
     "line number": [
      114,
      119
     ]
    },
    "xarray.Dataset": {
     "line number": [
      115,
      120
     ]
    },
    "xarray.Variable": {
     "line number": [
      113,
      118
     ]
    },
    "xarray.tests.test_computation.add": {
     "line number": [
      122,
      123,
      125,
      126,
      127,
      128,
      130,
      131,
      132,
      133,
      134,
      135,
      137,
      138,
      139,
      140,
      141,
      142,
      143,
      144,
      146,
      147,
      149,
      150,
      152,
      153,
      154,
      155
     ]
    },
    "xarray.tests.test_computation.assert_identical": {
     "line number": [
      122,
      123,
      125,
      126,
      127,
      128,
      130,
      131,
      132,
      133,
      134,
      135,
      137,
      138,
      139,
      140,
      141,
      142,
      143,
      144,
      146,
      147,
      149,
      150,
      152,
      153,
      154,
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_two_outputs": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      206
     ]
    },
    "twice": {
     "line number": [
      216,
      220,
      224,
      228,
      232,
      236
     ]
    },
    "xarray.DataArray": {
     "line number": [
      208
     ]
    },
    "xarray.Dataset": {
     "line number": [
      209
     ]
    },
    "xarray.Variable": {
     "line number": [
      207
     ]
    },
    "xarray.tests.test_computation.assert_identical": {
     "line number": [
      217,
      218,
      221,
      222,
      225,
      226,
      229,
      230,
      233,
      234,
      237,
      238
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_two_outputs.twice": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "xarray.core.computation.apply_ufunc": {
     "line number": [
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_apply_two_outputs.twice.func": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_broadcast_compat_data_1d": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      448,
      451
     ]
    },
    "numpy.arange": {
     "line number": [
      439
     ]
    },
    "xarray.Variable": {
     "line number": [
      440
     ]
    },
    "xarray.core.computation.broadcast_compat_data": {
     "line number": [
      442,
      443,
      444,
      446,
      449,
      452
     ]
    },
    "xarray.tests.test_computation.assert_identical": {
     "line number": [
      442,
      443,
      444,
      445
     ]
    },
    "xarray.tests.test_computation.pytest": {
     "line number": [
      448,
      451
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_broadcast_compat_data_2d": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      456
     ]
    },
    "xarray.Variable": {
     "line number": [
      457
     ]
    },
    "xarray.core.computation.broadcast_compat_data": {
     "line number": [
      459,
      460,
      461,
      462,
      463,
      464,
      465,
      466,
      468,
      470
     ]
    },
    "xarray.tests.test_computation.assert_identical": {
     "line number": [
      459,
      460,
      461,
      462,
      463,
      464,
      465,
      466,
      467,
      469
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_collect_dict_values": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "xarray.core.computation.collect_dict_values": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_dataset_join": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      509
     ]
    },
    "ValueError": {
     "line number": [
      507,
      525
     ]
    },
    "numpy.nan": {
     "line number": [
      518,
      518,
      535,
      535,
      535,
      536,
      536,
      536
     ]
    },
    "raises_regex": {
     "line number": [
      507,
      509,
      525
     ]
    },
    "xarray.Dataset": {
     "line number": [
      503,
      504,
      518,
      526,
      528,
      530,
      535
     ]
    },
    "xarray.core.computation.apply_ufunc": {
     "line number": [
      508,
      510,
      526
     ]
    },
    "xarray.tests.test_computation.add": {
     "line number": [
      517,
      522,
      529,
      534
     ]
    },
    "xarray.tests.test_computation.assert_identical": {
     "line number": [
      520,
      523,
      531,
      538
     ]
    },
    "xarray.tests.test_computation.operator": {
     "line number": [
      508,
      510,
      526
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_dataset_join.add": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      515
     ]
    },
    "xarray.core.computation.apply_ufunc": {
     "line number": [
      513
     ]
    },
    "xarray.tests.test_computation.operator": {
     "line number": [
      513
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_dot": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      833,
      835,
      837
     ]
    },
    "isinstance": {
     "line number": [
      768,
      773,
      784,
      792
     ]
    },
    "numpy.arange": {
     "line number": [
      752,
      753,
      754
     ]
    },
    "numpy.einsum": {
     "line number": [
      767,
      772,
      783,
      791,
      800,
      804,
      808,
      812,
      816,
      821,
      826,
      831
     ]
    },
    "numpy.linspace": {
     "line number": [
      756,
      758
     ]
    },
    "type": {
     "line number": [
      768,
      773,
      784,
      792
     ]
    },
    "xarray.DataArray": {
     "line number": [
      755,
      757,
      759
     ]
    },
    "xarray.dot": {
     "line number": [
      765,
      770,
      777,
      781,
      789,
      798,
      802,
      806,
      810,
      814,
      819,
      824,
      829,
      834,
      836,
      838
     ]
    },
    "xarray.tests.test_computation.pytest": {
     "line number": [
      750,
      794,
      833,
      835,
      837,
      747
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_join_dict_keys": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      76
     ]
    },
    "ValueError": {
     "line number": [
      74
     ]
    },
    "collections.OrderedDict.fromkeys": {
     "line number": [
      69
     ]
    },
    "list": {
     "line number": [
      70,
      71,
      72,
      73
     ]
    },
    "xarray.core.computation.join_dict_keys": {
     "line number": [
      70,
      71,
      72,
      73,
      75,
      77
     ]
    },
    "xarray.tests.test_computation.pytest": {
     "line number": [
      74,
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_keep_attrs": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": {
    "xarray.DataArray": {
     "line number": [
      481,
      483
     ]
    },
    "xarray.Dataset": {
     "line number": [
      490,
      493
     ]
    },
    "xarray.tests.test_computation.add": {
     "line number": [
      485,
      487,
      495,
      497
     ]
    },
    "xarray.tests.test_computation.assert_identical": {
     "line number": [
      488,
      498,
      499
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_keep_attrs.add": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": {
    "xarray.core.computation.apply_ufunc": {
     "line number": [
      477,
      479
     ]
    },
    "xarray.tests.test_computation.operator": {
     "line number": [
      477,
      479
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_ordered_set_intersection": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "list": {
     "line number": [
      62,
      63,
      64,
      65
     ]
    },
    "xarray.core.computation.ordered_set_intersection": {
     "line number": [
      62,
      63,
      64,
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_ordered_set_union": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "list": {
     "line number": [
      56,
      57,
      58
     ]
    },
    "xarray.core.computation.ordered_set_union": {
     "line number": [
      56,
      57,
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_result_name": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "Named": {
     "line number": [
      49,
      50,
      51,
      51,
      52,
      52
     ]
    },
    "xarray.core.computation.result_name": {
     "line number": [
      48,
      49,
      50,
      51,
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_result_name.Named": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "object": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.tests.test_computation.test_result_name.Named.__init__": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_signature_properties": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "frozenset": {
     "line number": [
      32,
      33
     ]
    },
    "str": {
     "line number": [
      36
     ]
    },
    "xarray.core.computation._UFuncSignature": {
     "line number": [
      29,
      39,
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_unified_dim_sizes": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      429,
      433
     ]
    },
    "collections.OrderedDict": {
     "line number": [
      416,
      419,
      422,
      426
     ]
    },
    "xarray.Variable": {
     "line number": [
      416,
      417,
      418,
      420,
      421,
      423,
      424,
      430,
      435,
      435
     ]
    },
    "xarray.core.computation.unified_dim_sizes": {
     "line number": [
      416,
      417,
      420,
      423,
      430,
      434
     ]
    },
    "xarray.tests.test_computation.pytest": {
     "line number": [
      429,
      433
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_vectorize": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": {
    "distutils.version.LooseVersion": {
     "line number": [
      721,
      721
     ]
    },
    "numpy.__version__": {
     "line number": [
      721
     ]
    },
    "xarray.DataArray": {
     "line number": [
      724,
      725
     ]
    },
    "xarray.core.computation.apply_ufunc": {
     "line number": [
      726
     ]
    },
    "xarray.tests.test_computation.assert_identical": {
     "line number": [
      729
     ]
    },
    "xarray.tests.test_computation.pandas_median": {
     "line number": [
      726
     ]
    },
    "xarray.tests.test_computation.pytest": {
     "line number": [
      722
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_vectorize_dask": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": {
    "distutils.version.LooseVersion": {
     "line number": [
      734,
      734
     ]
    },
    "float": {
     "line number": [
      743
     ]
    },
    "numpy.__version__": {
     "line number": [
      734
     ]
    },
    "xarray.DataArray": {
     "line number": [
      737,
      738
     ]
    },
    "xarray.core.computation.apply_ufunc": {
     "line number": [
      739
     ]
    },
    "xarray.tests.test_computation.assert_identical": {
     "line number": [
      744
     ]
    },
    "xarray.tests.test_computation.pandas_median": {
     "line number": [
      739
     ]
    },
    "xarray.tests.test_computation.pytest": {
     "line number": [
      735
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.test_where": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": {
    "xarray.DataArray": {
     "line number": [
      842,
      844
     ]
    },
    "xarray.tests.test_computation.assert_identical": {
     "line number": [
      845
     ]
    },
    "xarray.where": {
     "line number": [
      843
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_computation.unified_dim_sizes": {
  "data": {
   "shadows": "xarray.core.computation.unified_dim_sizes"
  },
  "type": "import"
 },
 "xarray.tests.test_computation.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions": {
  "data": {
   "symbols_in_volume": {
    "IndexerMaker": {
     "line number": [
      24,
      25
     ]
    },
    "xarray.core.indexing.BasicIndexer": {
     "line number": [
      24
     ]
    },
    "xarray.core.indexing.VectorizedIndexer": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "module"
 },
 "xarray.tests.test_conventions.B": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "xarray.tests.test_conventions.CFEncodedInMemoryStore": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": {
    "xarray.backends.common.WritableCFDataStore": {
     "line number": [
      347
     ]
    },
    "xarray.backends.memory.InMemoryDataStore": {
     "line number": [
      347
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.tests.test_conventions.Dataset": {
  "data": {
   "shadows": "xarray.Dataset"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.InMemoryDataStore": {
  "data": {
   "shadows": "xarray.backends.memory.InMemoryDataStore"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.NullWrapper": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": {
    "xarray.core.utils.NDArrayMixin": {
     "line number": [
      351
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.tests.test_conventions.NullWrapper.__getitem__": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": {
    "xarray.core.indexing.orthogonal_indexer": {
     "line number": [
      361
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.NullWrapper.__init__": {
  "data": {
   "lineno": 357
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestBoolTypeArray": {
  "data": {
   "lineno": 139
  },
  "type": "class"
 },
 "xarray.tests.test_conventions.TestBoolTypeArray.test_booltype_array": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      144
     ]
    },
    "numpy.array": {
     "line number": [
      141,
      144
     ]
    },
    "numpy.bool": {
     "line number": [
      143,
      145
     ]
    },
    "xarray.conventions.BoolTypeArray": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestBytesToStringArray": {
  "data": {
   "lineno": 101
  },
  "type": "class"
 },
 "xarray.tests.test_conventions.TestBytesToStringArray.test_decode_bytes_array": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      133,
      134
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      136
     ]
    },
    "object": {
     "line number": [
      134
     ]
    },
    "xarray.conventions.decode_bytes_array": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestBytesToStringArray.test_encoding": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      113,
      114
     ]
    },
    "numpy.array": {
     "line number": [
      105,
      107
     ]
    },
    "object": {
     "line number": [
      107
     ]
    },
    "xarray.conventions.BytesToStringArray": {
     "line number": [
      106
     ]
    },
    "xarray.tests.test_conventions.B": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestBytesToStringArray.test_scalar": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      127
     ]
    },
    "TypeError": {
     "line number": [
      124
     ]
    },
    "len": {
     "line number": [
      125
     ]
    },
    "numpy.array": {
     "line number": [
      117,
      119
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      126
     ]
    },
    "object": {
     "line number": [
      117
     ]
    },
    "str": {
     "line number": [
      129,
      129
     ]
    },
    "xarray.conventions.BytesToStringArray": {
     "line number": [
      118
     ]
    },
    "xarray.tests.test_conventions.B": {
     "line number": [
      128
     ]
    },
    "xarray.tests.test_conventions.pytest": {
     "line number": [
      124,
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestCFEncodedDataStore": {
  "data": {
   "lineno": 374
  },
  "type": "class"
 },
 "xarray.tests.test_conventions.TestCFEncodedDataStore.create_store": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": {
    "xarray.tests.test_conventions.CFEncodedInMemoryStore": {
     "line number": [
      378
     ]
    },
    "xarray.tests.test_conventions.contextlib": {
     "line number": [
      376
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestCFEncodedDataStore.roundtrip": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": {
    "xarray.open_dataset": {
     "line number": [
      385
     ]
    },
    "xarray.tests.test_conventions.CFEncodedInMemoryStore": {
     "line number": [
      383
     ]
    },
    "xarray.tests.test_conventions.contextlib": {
     "line number": [
      380
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestCFEncodedDataStore.test_encoding_kwarg": {
  "data": {
   "lineno": 394
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestCFEncodedDataStore.test_invalid_dataarray_names_raise": {
  "data": {
   "lineno": 391
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestCFEncodedDataStore.test_roundtrip_coordinates": {
  "data": {
   "lineno": 387
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestDecodeCF": {
  "data": {
   "lineno": 242
  },
  "type": "class"
 },
 "xarray.tests.test_conventions.TestDecodeCF.test_0d_int32_encoding": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": {
    "numpy.int32": {
     "line number": [
      270
     ]
    },
    "numpy.int64": {
     "line number": [
      271
     ]
    },
    "xarray.Variable": {
     "line number": [
      270,
      271
     ]
    },
    "xarray.conventions.maybe_encode_nonstring_dtype": {
     "line number": [
      272
     ]
    },
    "xarray.testing.assert_identical": {
     "line number": [
      273
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestDecodeCF.test_dataset": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      252
     ]
    },
    "pandas.date_range": {
     "line number": [
      251
     ]
    },
    "xarray.Dataset": {
     "line number": [
      245,
      250
     ]
    },
    "xarray.conventions.decode_cf": {
     "line number": [
      253
     ]
    },
    "xarray.testing.assert_identical": {
     "line number": [
      254
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestDecodeCF.test_dataset_repr_with_netcdf4_datetimes": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": {
    "repr": {
     "line number": [
      315,
      319
     ]
    },
    "xarray.Dataset": {
     "line number": [
      314,
      318
     ]
    },
    "xarray.conventions.decode_cf": {
     "line number": [
      314,
      318
     ]
    },
    "xarray.tests.test_conventions.warnings": {
     "line number": [
      312,
      313
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestDecodeCF.test_decode_cf_datetime_transition_to_invalid": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      333
     ]
    },
    "datetime.datetime": {
     "line number": [
      330,
      331
     ]
    },
    "dict": {
     "line number": [
      327
     ]
    },
    "xarray.Dataset": {
     "line number": [
      325
     ]
    },
    "xarray.conventions.decode_cf": {
     "line number": [
      328
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestDecodeCF.test_decode_cf_with_dask": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": {
    "xarray.Dataset": {
     "line number": [
      338
     ]
    },
    "xarray.conventions.decode_cf": {
     "line number": [
      343
     ]
    },
    "xarray.tests.test_conventions.dask": {
     "line number": [
      344
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestDecodeCF.test_decode_cf_with_drop_variables": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      296
     ]
    },
    "pandas.date_range": {
     "line number": [
      293
     ]
    },
    "xarray.Dataset": {
     "line number": [
      285,
      292
     ]
    },
    "xarray.conventions.decode_cf": {
     "line number": [
      298,
      299
     ]
    },
    "xarray.testing.assert_identical": {
     "line number": [
      300,
      301
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestDecodeCF.test_decode_cf_with_multiple_missing_values": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      277
     ]
    },
    "numpy.nan": {
     "line number": [
      278,
      278
     ]
    },
    "str": {
     "line number": [
      282
     ]
    },
    "xarray.Variable": {
     "line number": [
      276,
      278
     ]
    },
    "xarray.conventions.decode_cf_variable": {
     "line number": [
      280
     ]
    },
    "xarray.testing.assert_identical": {
     "line number": [
      281
     ]
    },
    "xarray.tests.test_conventions.warnings": {
     "line number": [
      279
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestDecodeCF.test_decode_coordinates": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": {
    "xarray.Dataset": {
     "line number": [
      264
     ]
    },
    "xarray.conventions.decode_cf": {
     "line number": [
      266
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestDecodeCF.test_invalid_coordinates": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": {
    "xarray.Dataset": {
     "line number": [
      258
     ]
    },
    "xarray.conventions.decode_cf": {
     "line number": [
      259
     ]
    },
    "xarray.testing.assert_identical": {
     "line number": [
      260
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestDecodeCF.test_invalid_time_units_raises_eagerly": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      305
     ]
    },
    "raises_regex": {
     "line number": [
      305
     ]
    },
    "xarray.Dataset": {
     "line number": [
      304
     ]
    },
    "xarray.conventions.decode_cf": {
     "line number": [
      306
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestEncodeCFVariable": {
  "data": {
   "lineno": 186
  },
  "type": "class"
 },
 "xarray.tests.test_conventions.TestEncodeCFVariable.test_incompatible_attributes": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      197
     ]
    },
    "pandas.date_range": {
     "line number": [
      190
     ]
    },
    "pandas.to_timedelta": {
     "line number": [
      192
     ]
    },
    "xarray.Variable": {
     "line number": [
      190,
      192,
      193,
      194
     ]
    },
    "xarray.conventions.encode_cf_variable": {
     "line number": [
      198
     ]
    },
    "xarray.tests.test_conventions.pytest": {
     "line number": [
      197
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestEncodeCFVariable.test_missing_fillvalue": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "Warning": {
     "line number": [
      203
     ]
    },
    "numpy.array": {
     "line number": [
      201
     ]
    },
    "numpy.nan": {
     "line number": [
      201
     ]
    },
    "xarray.Variable": {
     "line number": [
      201
     ]
    },
    "xarray.conventions.encode_cf_variable": {
     "line number": [
      204
     ]
    },
    "xarray.tests.test_conventions.pytest": {
     "line number": [
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestEncodeCFVariable.test_multidimensional_coordinates": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      210,
      211,
      212
     ]
    },
    "set": {
     "line number": [
      235,
      235,
      236,
      236,
      237,
      237
     ]
    },
    "xarray.Dataset": {
     "line number": [
      213
     ]
    },
    "xarray.conventions.decode_cf": {
     "line number": [
      228
     ]
    },
    "xarray.conventions.encode_dataset_coordinates": {
     "line number": [
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestNativeEndiannessArray": {
  "data": {
   "lineno": 148
  },
  "type": "class"
 },
 "xarray.tests.test_conventions.TestNativeEndiannessArray.test": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      155
     ]
    },
    "numpy.arange": {
     "line number": [
      150,
      151
     ]
    },
    "xarray.conventions.NativeEndiannessArray": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestStackedBytesArray": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "xarray.tests.test_conventions.TestStackedBytesArray.test_bytes_to_char": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      85,
      90
     ]
    },
    "numpy.array": {
     "line number": [
      81,
      82,
      87
     ]
    },
    "xarray.conventions.bytes_to_char": {
     "line number": [
      84,
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestStackedBytesArray.test_char_to_bytes": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      63,
      67
     ]
    },
    "numpy.array": {
     "line number": [
      60,
      61,
      65
     ]
    },
    "xarray.conventions.char_to_bytes": {
     "line number": [
      62,
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestStackedBytesArray.test_char_to_bytes_ndim_zero": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      72
     ]
    },
    "numpy.array": {
     "line number": [
      70
     ]
    },
    "xarray.conventions.char_to_bytes": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestStackedBytesArray.test_char_to_bytes_size_zero": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      78
     ]
    },
    "numpy.array": {
     "line number": [
      76
     ]
    },
    "numpy.zeros": {
     "line number": [
      75
     ]
    },
    "xarray.conventions.char_to_bytes": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestStackedBytesArray.test_scalar": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      55
     ]
    },
    "TypeError": {
     "line number": [
      52
     ]
    },
    "len": {
     "line number": [
      53
     ]
    },
    "numpy.array": {
     "line number": [
      44,
      47
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      54
     ]
    },
    "str": {
     "line number": [
      57,
      57
     ]
    },
    "xarray.conventions.StackedBytesArray": {
     "line number": [
      45
     ]
    },
    "xarray.tests.test_conventions.B": {
     "line number": [
      56
     ]
    },
    "xarray.tests.test_conventions.pytest": {
     "line number": [
      52,
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestStackedBytesArray.test_vectorized_indexing": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      98
     ]
    },
    "numpy.array": {
     "line number": [
      93,
      95,
      96
     ]
    },
    "xarray.conventions.StackedBytesArray": {
     "line number": [
      94
     ]
    },
    "xarray.tests.test_conventions.V": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.TestStackedBytesArray.test_wrapper_class": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      40
     ]
    },
    "assert_array_equal": {
     "line number": [
      38,
      39
     ]
    },
    "len": {
     "line number": [
      37,
      37
     ]
    },
    "numpy.array": {
     "line number": [
      30,
      32
     ]
    },
    "xarray.conventions.StackedBytesArray": {
     "line number": [
      31
     ]
    },
    "xarray.tests.test_conventions.B": {
     "line number": [
      39,
      41
     ]
    },
    "xarray.tests.test_conventions.pytest": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.V": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "xarray.tests.test_conventions.Variable": {
  "data": {
   "shadows": "xarray.Variable"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.WritableCFDataStore": {
  "data": {
   "shadows": "xarray.backends.common.WritableCFDataStore"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.assert_identical": {
  "data": {
   "shadows": "xarray.testing.assert_identical"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.conventions": {
  "data": {
   "shadows": "xarray.conventions"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.decode_cf": {
  "data": {
   "shadows": "xarray.conventions.decode_cf"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.indexing": {
  "data": {
   "shadows": "xarray.core.indexing"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.iteritems": {
  "data": {
   "shadows": "xarray.core.pycompat.iteritems"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.null_wrap": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      369
     ]
    },
    "xarray.Variable": {
     "line number": [
      369
     ]
    },
    "xarray.backends.memory.InMemoryDataStore": {
     "line number": [
      371
     ]
    },
    "xarray.core.pycompat.iteritems": {
     "line number": [
      370
     ]
    },
    "xarray.tests.test_conventions.NullWrapper": {
     "line number": [
      369
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.open_dataset": {
  "data": {
   "shadows": "xarray.open_dataset"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.test_decode_cf_with_conflicting_fill_missing_value": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      160,
      169,
      171,
      178
     ]
    },
    "numpy.float32": {
     "line number": [
      180,
      181
     ]
    },
    "numpy.nan": {
     "line number": [
      159,
      159,
      173,
      174,
      180,
      181
     ]
    },
    "str": {
     "line number": [
      167
     ]
    },
    "xarray.Variable": {
     "line number": [
      159,
      160,
      169,
      171,
      178
     ]
    },
    "xarray.conventions.decode_cf_variable": {
     "line number": [
      165,
      175,
      182
     ]
    },
    "xarray.testing.assert_identical": {
     "line number": [
      166,
      176,
      183
     ]
    },
    "xarray.tests.test_conventions.warnings": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_conventions.utils": {
  "data": {
   "shadows": "xarray.core.utils"
  },
  "type": "import"
 },
 "xarray.tests.test_conventions.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_dataarray.CFDatetimeCoder": {
  "data": {
   "shadows": "xarray.coding.times.CFDatetimeCoder"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.DataArray": {
  "data": {
   "shadows": "xarray.DataArray"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.Dataset": {
  "data": {
   "shadows": "xarray.Dataset"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.IndexVariable": {
  "data": {
   "shadows": "xarray.IndexVariable"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.OrderedDict": {
  "data": {
   "shadows": "xarray.core.pycompat.OrderedDict"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.ReturnItem": {
  "data": {
   "shadows": "xarray.tests.ReturnItem"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.TestCase": {
  "data": {
   "shadows": "xarray.tests.TestCase"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.TestDataArray": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "xarray.tests.TestCase": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.tests.test_dataarray.TestDataArray.make_groupby_example_array": {
  "data": {
   "lineno": 1922,
   "symbols_in_volume": {
    "dask.array": {
     "line number": [
      1923,
      1925,
      1926
     ]
    },
    "dask.array.coords": {
     "line number": [
      1924,
      1925
     ]
    },
    "numpy.array": {
     "line number": [
      1924
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.make_groupby_multidim_example_array": {
  "data": {
   "lineno": 2122,
   "symbols_in_volume": {
    "xarray.DataArray": {
     "line number": [
      2123
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.setUp": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      27
     ]
    },
    "pandas.MultiIndex.from_product": {
     "line number": [
      33
     ]
    },
    "xarray.DataArray": {
     "line number": [
      35
     ]
    },
    "xarray.Dataset": {
     "line number": [
      30
     ]
    },
    "xarray.Variable": {
     "line number": [
      28,
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test__title_for_slice": {
  "data": {
   "lineno": 3095,
   "symbols_in_volume": {
    "numpy.ones": {
     "line number": [
      3096,
      3103
     ]
    },
    "range": {
     "line number": [
      3097,
      3097,
      3097
     ]
    },
    "xarray.DataArray": {
     "line number": [
      3096,
      3103
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test__title_for_slice_truncate": {
  "data": {
   "lineno": 3106,
   "symbols_in_volume": {
    "len": {
     "line number": [
      3114
     ]
    },
    "numpy.ones": {
     "line number": [
      3107
     ]
    },
    "xarray.DataArray": {
     "line number": [
      3107
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_align": {
  "data": {
   "lineno": 2474,
   "symbols_in_volume": {
    "list": {
     "line number": [
      2476
     ]
    },
    "numpy.random.random": {
     "line number": [
      2475
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2475
     ]
    },
    "xarray.align": {
     "line number": [
      2477
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      2478,
      2479
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_align_copy": {
  "data": {
   "lineno": 2490,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      2495
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2491,
      2492,
      2495,
      2508
     ]
    },
    "xarray.align": {
     "line number": [
      2497,
      2502,
      2509,
      2513
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      2498,
      2499,
      2503,
      2504,
      2510,
      2514
     ]
    },
    "xarray.tests.source_ndarray": {
     "line number": [
      2500,
      2500,
      2505,
      2505,
      2511,
      2511,
      2515,
      2515
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_align_dtype": {
  "data": {
   "lineno": 2481,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      2483,
      2484
     ]
    },
    "numpy.float32": {
     "line number": [
      2485,
      2486,
      2488
     ]
    },
    "numpy.random.random": {
     "line number": [
      2485,
      2486
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2485,
      2486
     ]
    },
    "xarray.align": {
     "line number": [
      2487
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_align_exclude": {
  "data": {
   "lineno": 2517,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      2525,
      2525,
      2527,
      2527,
      2529,
      2529
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2518,
      2520,
      2522,
      2525,
      2527,
      2529
     ]
    },
    "xarray.align": {
     "line number": [
      2524
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      2531,
      2532,
      2533
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_align_indexes": {
  "data": {
   "lineno": 2535,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      2541,
      2546
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2536,
      2537,
      2540,
      2541,
      2546
     ]
    },
    "xarray.align": {
     "line number": [
      2539,
      2545
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      2542,
      2543,
      2548
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_align_mixed_indexes": {
  "data": {
   "lineno": 2557,
   "symbols_in_volume": {
    "xarray.DataArray": {
     "line number": [
      2558,
      2559
     ]
    },
    "xarray.align": {
     "line number": [
      2560,
      2564
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      2561,
      2562,
      2566,
      2567
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_align_without_indexes_errors": {
  "data": {
   "lineno": 2569,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2570,
      2574
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2571,
      2572,
      2575,
      2576
     ]
    },
    "xarray.align": {
     "line number": [
      2571,
      2575
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      2570,
      2574
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_align_without_indexes_exclude": {
  "data": {
   "lineno": 2550,
   "symbols_in_volume": {
    "xarray.DataArray": {
     "line number": [
      2551,
      2552
     ]
    },
    "xarray.align": {
     "line number": [
      2553
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      2554,
      2555
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_array_interface": {
  "data": {
   "lineno": 1447,
   "symbols_in_volume": {
    "copy.deepcopy": {
     "line number": [
      1454
     ]
    },
    "float": {
     "line number": [
      1450,
      1450
     ]
    },
    "numpy.asarray": {
     "line number": [
      1448
     ]
    },
    "numpy.maximum": {
     "line number": [
      1457,
      1459
     ]
    },
    "numpy.sin": {
     "line number": [
      1455,
      1456
     ]
    },
    "numpy.zeros": {
     "line number": [
      1458
     ]
    },
    "xarray.Variable": {
     "line number": [
      1458
     ]
    },
    "xarray.tests.assert_array_equal": {
     "line number": [
      1448,
      1450,
      1451,
      1452,
      1457
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      1456,
      1459
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_assign_attrs": {
  "data": {
   "lineno": 1862,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      1863
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1863,
      1866,
      1867
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1868,
      1873
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_assign_coords": {
  "data": {
   "lineno": 1168,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1180
     ]
    },
    "range": {
     "line number": [
      1181
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1169,
      1171,
      1174
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1172,
      1178
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      1180
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_attr_sources_multiindex": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      622
     ]
    },
    "xarray.DataArray": {
     "line number": [
      622
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_binary_op_join_setting": {
  "data": {
   "lineno": 3220,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      3231,
      3231
     ]
    },
    "xarray.DataArray": {
     "line number": [
      3224,
      3225,
      3231
     ]
    },
    "xarray.align": {
     "line number": [
      3228
     ]
    },
    "xarray.set_options": {
     "line number": [
      3226
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      3232
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_broadcast_arrays": {
  "data": {
   "lineno": 2578,
   "symbols_in_volume": {
    "numpy.random.randn": {
     "line number": [
      2588,
      2589
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2579,
      2580,
      2583,
      2584,
      2588,
      2589
     ]
    },
    "xarray.broadcast": {
     "line number": [
      2581,
      2590
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      2585,
      2586,
      2593,
      2594
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_broadcast_arrays_exclude": {
  "data": {
   "lineno": 2627,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      2634,
      2634,
      2636
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2628,
      2630,
      2631,
      2634,
      2636,
      2637
     ]
    },
    "xarray.broadcast": {
     "line number": [
      2633
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      2639,
      2640,
      2641
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_broadcast_arrays_misaligned": {
  "data": {
   "lineno": 2596,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      2601,
      2601,
      2603,
      2603
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2598,
      2600,
      2601,
      2603
     ]
    },
    "xarray.broadcast": {
     "line number": [
      2605
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      2606,
      2607
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_broadcast_arrays_nocopy": {
  "data": {
   "lineno": 2609,
   "symbols_in_volume": {
    "xarray.DataArray": {
     "line number": [
      2612,
      2613,
      2614,
      2615
     ]
    },
    "xarray.broadcast": {
     "line number": [
      2617,
      2623
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      2618,
      2619,
      2624
     ]
    },
    "xarray.tests.source_ndarray": {
     "line number": [
      2620,
      2620,
      2625,
      2625
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_broadcast_coordinates": {
  "data": {
   "lineno": 2643,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      2649,
      2649
     ]
    },
    "numpy.meshgrid": {
     "line number": [
      2649
     ]
    },
    "numpy.ones": {
     "line number": [
      2645
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2650,
      2651
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2645
     ]
    },
    "xarray.broadcast": {
     "line number": [
      2646
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      2647,
      2652,
      2653
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_broadcast_equals": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": {
    "xarray.DataArray": {
     "line number": [
      419,
      420,
      426
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_chunk": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": {
    "dask.array.Array": {
     "line number": [
      648
     ]
    },
    "isinstance": {
     "line number": [
      648
     ]
    },
    "numpy.ones": {
     "line number": [
      631
     ]
    },
    "xarray.DataArray": {
     "line number": [
      631
     ]
    },
    "xarray.tests.requires_dask": {
     "line number": [
      629
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_combine_first": {
  "data": {
   "lineno": 3234,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      3240,
      3240,
      3245,
      3245
     ]
    },
    "xarray.DataArray": {
     "line number": [
      3235,
      3236,
      3237,
      3240,
      3245,
      3250
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      3242,
      3247,
      3252
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_constructor": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      213
     ]
    },
    "pandas.Index": {
     "line number": [
      225,
      226,
      236,
      237
     ]
    },
    "xarray.DataArray": {
     "line number": [
      215,
      219,
      225,
      233,
      238,
      242,
      246,
      251,
      254,
      258,
      262,
      266,
      270
     ]
    },
    "xarray.Dataset": {
     "line number": [
      216,
      220,
      227,
      249,
      255,
      259,
      263,
      267,
      271
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      217,
      223,
      230,
      234,
      239,
      243,
      247,
      252,
      256,
      260,
      264,
      268,
      272
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_constructor_dask_coords": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": {
    "dask.array.arange": {
     "line number": [
      357
     ]
    },
    "dask.array.random.random": {
     "line number": [
      358
     ]
    },
    "numpy.arange": {
     "line number": [
      362
     ]
    },
    "xarray.DataArray": {
     "line number": [
      359,
      363
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      365
     ]
    },
    "xarray.tests.requires_dask": {
     "line number": [
      352
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_constructor_from_0d": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": {
    "xarray.DataArray": {
     "line number": [
      349
     ]
    },
    "xarray.Dataset": {
     "line number": [
      348
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      350
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_constructor_from_self_described": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": {
    "pandas.DataFrame": {
     "line number": [
      315
     ]
    },
    "pandas.Index": {
     "line number": [
      315,
      316,
      320,
      341
     ]
    },
    "pandas.Panel": {
     "line number": [
      324
     ]
    },
    "pandas.Series": {
     "line number": [
      320
     ]
    },
    "xarray.DataArray": {
     "line number": [
      305,
      309,
      312,
      317,
      321,
      325,
      326,
      330,
      334,
      337,
      341,
      344
     ]
    },
    "xarray.Dataset": {
     "line number": [
      340
     ]
    },
    "xarray.IndexVariable": {
     "line number": [
      344
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      313,
      318,
      322
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      310,
      328,
      335,
      338,
      342,
      345
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_constructor_invalid": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      285
     ]
    },
    "ValueError": {
     "line number": [
      277,
      280,
      282,
      288,
      290,
      293,
      296,
      300
     ]
    },
    "numpy.random.rand": {
     "line number": [
      294,
      297
     ]
    },
    "numpy.random.randn": {
     "line number": [
      275
     ]
    },
    "range": {
     "line number": [
      298
     ]
    },
    "xarray.DataArray": {
     "line number": [
      278,
      281,
      283,
      286,
      289,
      291,
      294,
      297,
      301
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      277,
      280,
      282,
      285,
      288,
      290,
      293,
      296,
      300
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_contains": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": {
    "FutureWarning": {
     "line number": [
      616
     ]
    },
    "xarray.DataArray": {
     "line number": [
      615
     ]
    },
    "xarray.tests.test_dataarray.pytest": {
     "line number": [
      616
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_coord_coords": {
  "data": {
   "lineno": 1096,
   "symbols_in_volume": {
    "xarray.DataArray": {
     "line number": [
      1097,
      1102,
      1112
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1105,
      1108,
      1115
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_coordinate_diff": {
  "data": {
   "lineno": 3123,
   "symbols_in_volume": {
    "range": {
     "line number": [
      3125,
      3125,
      3127
     ]
    },
    "xarray.DataArray": {
     "line number": [
      3125,
      3127
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      3130
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_coords": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      1052,
      1054
     ]
    },
    "ValueError": {
     "line number": [
      1069
     ]
    },
    "dask.array": {
     "line number": [
      1039,
      1067
     ]
    },
    "dask.array.coords": {
     "line number": [
      1041,
      1043,
      1045,
      1046,
      1048,
      1049,
      1050,
      1053,
      1055,
      1061,
      1064
     ]
    },
    "dask.array.values": {
     "line number": [
      1065
     ]
    },
    "len": {
     "line number": [
      1041
     ]
    },
    "list": {
     "line number": [
      1043
     ]
    },
    "numpy.arange": {
     "line number": [
      1070,
      1071
     ]
    },
    "numpy.array": {
     "line number": [
      1037,
      1038
     ]
    },
    "numpy.random.randn": {
     "line number": [
      1039
     ]
    },
    "repr": {
     "line number": [
      1061
     ]
    },
    "textwrap.dedent": {
     "line number": [
      1057
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1039,
      1065
     ]
    },
    "xarray.IndexVariable": {
     "line number": [
      1037,
      1038
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1067
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      1069
     ]
    },
    "xarray.tests.test_dataarray.pytest": {
     "line number": [
      1052,
      1054
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_coords_alignment": {
  "data": {
   "lineno": 1183,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      1189
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1184,
      1185,
      1188
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1192
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_coords_non_string": {
  "data": {
   "lineno": 1202,
   "symbols_in_volume": {
    "xarray.DataArray": {
     "line number": [
      1203,
      1205
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1206
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_coords_replacement_alignment": {
  "data": {
   "lineno": 1194,
   "symbols_in_volume": {
    "xarray.DataArray": {
     "line number": [
      1196,
      1197,
      1199
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1200
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_coords_to_index": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1076,
      1093
     ]
    },
    "dask.array": {
     "line number": [
      1074
     ]
    },
    "dask.array.coords.to_index": {
     "line number": [
      1077,
      1080,
      1085,
      1090,
      1094
     ]
    },
    "list": {
     "line number": [
      1074
     ]
    },
    "numpy.zeros": {
     "line number": [
      1074
     ]
    },
    "pandas.Index": {
     "line number": [
      1079
     ]
    },
    "pandas.MultiIndex.from_product": {
     "line number": [
      1083,
      1088
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1074
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      1076,
      1093
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_cumops": {
  "data": {
   "lineno": 1756,
   "symbols_in_volume": {
    "xarray.DataArray": {
     "line number": [
      1760,
      1764,
      1769,
      1774,
      1779
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1766,
      1771,
      1776,
      1780
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_data_property": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "numpy.ones": {
     "line number": [
      86,
      87,
      88,
      89
     ]
    },
    "numpy.zeros": {
     "line number": [
      84
     ]
    },
    "xarray.DataArray": {
     "line number": [
      84
     ]
    },
    "xarray.tests.assert_array_equal": {
     "line number": [
      87,
      89,
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_dataarray_diff_n1": {
  "data": {
   "lineno": 3117,
   "symbols_in_volume": {
    "dask.array": {
     "line number": [
      3118
     ]
    },
    "dask.array.diff": {
     "line number": [
      3119
     ]
    },
    "dask.array.values": {
     "line number": [
      3120
     ]
    },
    "numpy.diff": {
     "line number": [
      3120
     ]
    },
    "numpy.random.randn": {
     "line number": [
      3118
     ]
    },
    "xarray.DataArray": {
     "line number": [
      3118,
      3120
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      3121
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_dataset_getitem": {
  "data": {
   "lineno": 1443,
   "symbols_in_volume": {
    "xarray.tests.assert_identical": {
     "line number": [
      1445
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_dataset_math": {
  "data": {
   "lineno": 1604,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      1606,
      1607,
      1608,
      1612,
      1619,
      1620,
      1622
     ]
    },
    "numpy.ones": {
     "line number": [
      1616,
      1625,
      1637
     ]
    },
    "range": {
     "line number": [
      1609
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1612,
      1616,
      1625
     ]
    },
    "xarray.Dataset": {
     "line number": [
      1606,
      1619,
      1637
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1613,
      1617,
      1626,
      1629,
      1633,
      1640,
      1644
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_dims": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      192
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      192
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_dot": {
  "data": {
   "lineno": 3183,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      3215
     ]
    },
    "TypeError": {
     "line number": [
      3217
     ]
    },
    "dask.array": {
     "line number": [
      3188,
      3200
     ]
    },
    "dask.array.dot": {
     "line number": [
      3194,
      3200,
      3210,
      3216,
      3218
     ]
    },
    "numpy.arange": {
     "line number": [
      3187,
      3207
     ]
    },
    "numpy.linspace": {
     "line number": [
      3184,
      3185,
      3208
     ]
    },
    "numpy.tensordot": {
     "line number": [
      3195,
      3201,
      3211
     ]
    },
    "range": {
     "line number": [
      3186,
      3190
     ]
    },
    "xarray.DataArray": {
     "line number": [
      3188,
      3191,
      3196,
      3203,
      3209,
      3212
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      3197,
      3204,
      3213
     ]
    },
    "xarray.tests.test_dataarray.pytest": {
     "line number": [
      3215,
      3217
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_drop_coordinates": {
  "data": {
   "lineno": 1701,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1708,
      1711,
      1715
     ]
    },
    "numpy.random.randn": {
     "line number": [
      1702
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1702
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1706
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      1711,
      1715
     ]
    },
    "xarray.tests.test_dataarray.pytest": {
     "line number": [
      1708
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_drop_index_labels": {
  "data": {
   "lineno": 1718,
   "symbols_in_volume": {
    "numpy.random.randn": {
     "line number": [
      1719
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1719
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1723
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_dropna": {
  "data": {
   "lineno": 1725,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      1727
     ]
    },
    "numpy.random.randn": {
     "line number": [
      1726
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1728
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1732,
      1735,
      1738,
      1742
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_empty_dataarrays_return_empty_result": {
  "data": {
   "lineno": 1498,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1502
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1500
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_encoding": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_equals_and_identical": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      368,
      389
     ]
    },
    "numpy.nan": {
     "line number": [
      398,
      403
     ]
    },
    "xarray.DataArray": {
     "line number": [
      368
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_equals_failures": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      413,
      414
     ]
    },
    "xarray.DataArray": {
     "line number": [
      413
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_expand_dims": {
  "data": {
   "lineno": 1302,
   "symbols_in_volume": {
    "numpy.expand_dims": {
     "line number": [
      1308,
      1318,
      1318,
      1329,
      1329,
      1342,
      1342
     ]
    },
    "numpy.linspace": {
     "line number": [
      1304,
      1310,
      1321,
      1332,
      1345
     ]
    },
    "numpy.random.randn": {
     "line number": [
      1303
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1303,
      1308,
      1318,
      1329,
      1342
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1312,
      1314,
      1323,
      1325,
      1334,
      1338,
      1347,
      1350
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_expand_dims_error": {
  "data": {
   "lineno": 1272,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      1294,
      1296
     ]
    },
    "ValueError": {
     "line number": [
      1277,
      1279,
      1282,
      1286,
      1288,
      1290
     ]
    },
    "numpy.linspace": {
     "line number": [
      1274
     ]
    },
    "numpy.random.randn": {
     "line number": [
      1273
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1273
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      1277,
      1279,
      1282,
      1286,
      1288,
      1290
     ]
    },
    "xarray.tests.test_dataarray.pytest": {
     "line number": [
      1294,
      1296
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_expand_dims_with_scalar_coordinate": {
  "data": {
   "lineno": 1352,
   "symbols_in_volume": {
    "numpy.expand_dims": {
     "line number": [
      1357
     ]
    },
    "numpy.linspace": {
     "line number": [
      1354,
      1359
     ]
    },
    "numpy.ones": {
     "line number": [
      1360
     ]
    },
    "numpy.random.randn": {
     "line number": [
      1353
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1353,
      1357
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1362,
      1364
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_fillna": {
  "data": {
   "lineno": 1876,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1896
     ]
    },
    "ValueError": {
     "line number": [
      1899
     ]
    },
    "numpy.nan": {
     "line number": [
      1877,
      1877
     ]
    },
    "range": {
     "line number": [
      1877,
      1879,
      1882,
      1882,
      1887,
      1905
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1877,
      1879,
      1882,
      1902,
      1904,
      1911
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1880,
      1885,
      1888,
      1891,
      1894,
      1906,
      1912
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      1896,
      1899
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_full_like": {
  "data": {
   "lineno": 3164,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      3178,
      3180
     ]
    },
    "dask.array": {
     "line number": [
      3166,
      3172,
      3178
     ]
    },
    "dask.array.copy": {
     "line number": [
      3173
     ]
    },
    "numpy.random.random": {
     "line number": [
      3166
     ]
    },
    "xarray.DataArray": {
     "line number": [
      3166
     ]
    },
    "xarray.core.common.full_like": {
     "line number": [
      3172,
      3178
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      3175,
      3181
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_get_index": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      106
     ]
    },
    "numpy.zeros": {
     "line number": [
      102
     ]
    },
    "pandas.Index": {
     "line number": [
      104,
      105
     ]
    },
    "xarray.DataArray": {
     "line number": [
      102
     ]
    },
    "xarray.tests.test_dataarray.pytest": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_get_index_size_zero": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "numpy.int64": {
     "line number": [
      112
     ]
    },
    "numpy.zeros": {
     "line number": [
      110
     ]
    },
    "pandas.Index": {
     "line number": [
      112
     ]
    },
    "xarray.DataArray": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_getitem": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": {
    "xarray.tests.ReturnItem": {
     "line number": [
      438
     ]
    },
    "xarray.tests.assert_array_equal": {
     "line number": [
      448
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      442
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      432,
      435,
      436
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_getitem_coords": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": {
    "xarray.DataArray": {
     "line number": [
      456,
      470,
      475,
      482
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      463,
      464,
      465,
      466,
      467,
      472,
      479,
      486
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_getitem_dataarray": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": {
    "dask.array": {
     "line number": [
      490,
      492,
      495,
      498,
      505,
      505,
      506,
      506,
      507,
      507
     ]
    },
    "dask.array.values": {
     "line number": [
      493,
      499
     ]
    },
    "numpy.arange": {
     "line number": [
      490,
      495
     ]
    },
    "xarray.DataArray": {
     "line number": [
      490,
      491,
      495,
      497,
      504
     ]
    },
    "xarray.tests.assert_array_equal": {
     "line number": [
      493,
      500
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      505,
      506,
      507
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_getitem_dict": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": {
    "slice": {
     "line number": [
      451,
      452
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      453
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_apply_center": {
  "data": {
   "lineno": 2002,
   "symbols_in_volume": {
    "center": {
     "line number": [
      2010,
      2011,
      2012,
      2015
     ]
    },
    "numpy.hstack": {
     "line number": [
      2010
     ]
    },
    "xarray.tests.assert_allclose": {
     "line number": [
      2015
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_apply_center.center": {
  "data": {
   "lineno": 2003,
   "symbols_in_volume": {
    "numpy.mean": {
     "line number": [
      2004
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_apply_changes_metadata": {
  "data": {
   "lineno": 2024,
   "symbols_in_volume": {
    "change_metadata": {
     "line number": [
      2034
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      2035
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_apply_changes_metadata.change_metadata": {
  "data": {
   "lineno": 2025
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_apply_identity": {
  "data": {
   "lineno": 1936,
   "symbols_in_volume": {
    "xarray.tests.assert_identical": {
     "line number": [
      1948
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_apply_identity.identity": {
  "data": {
   "lineno": 1940
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_apply_ndarray": {
  "data": {
   "lineno": 2017,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      2021
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      2022
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_bins": {
  "data": {
   "lineno": 2145,
   "symbols_in_volume": {
    "len": {
     "line number": [
      2160
     ]
    },
    "numpy.arange": {
     "line number": [
      2146
     ]
    },
    "pandas.cut": {
     "line number": [
      2152
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2146,
      2153
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      2158
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_bins_empty": {
  "data": {
   "lineno": 2162,
   "symbols_in_volume": {
    "len": {
     "line number": [
      2173
     ]
    },
    "numpy.arange": {
     "line number": [
      2163
     ]
    },
    "numpy.nan": {
     "line number": [
      2168
     ]
    },
    "pandas.cut": {
     "line number": [
      2166
     ]
    },
    "range": {
     "line number": [
      2163
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2163,
      2168
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      2170
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_bins_multidim": {
  "data": {
   "lineno": 2175,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      2184
     ]
    },
    "pandas.cut": {
     "line number": [
      2178
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2179,
      2185
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      2182,
      2188
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_bins_sort": {
  "data": {
   "lineno": 2190,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      2192
     ]
    },
    "numpy.linspace": {
     "line number": [
      2193
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2191
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_count": {
  "data": {
   "lineno": 1978,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      1980,
      1980
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1979,
      1984
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1985
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_first_and_last": {
  "data": {
   "lineno": 2101,
   "symbols_in_volume": {
    "numpy.random.randn": {
     "line number": [
      2113
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2102,
      2103,
      2105,
      2109,
      2113,
      2114
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      2107,
      2111,
      2116,
      2120
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_iter": {
  "data": {
   "lineno": 1914,
   "symbols_in_volume": {
    "xarray.tests.assert_identical": {
     "line number": [
      1918,
      1920
     ]
    },
    "zip": {
     "line number": [
      1916,
      1919
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_math": {
  "data": {
   "lineno": 2037,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      2063,
      2065,
      2067
     ]
    },
    "numpy.arange": {
     "line number": [
      2058
     ]
    },
    "range": {
     "line number": [
      2059
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2059
     ]
    },
    "xarray.tests.assert_allclose": {
     "line number": [
      2061
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      2044,
      2047,
      2052,
      2055
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      2063,
      2065,
      2067
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_math_not_aligned": {
  "data": {
   "lineno": 2070,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      2076,
      2076,
      2081,
      2086,
      2086
     ]
    },
    "range": {
     "line number": [
      2071
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2071,
      2074,
      2076,
      2079
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2084,
      2086
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      2077,
      2082,
      2088
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_multidim": {
  "data": {
   "lineno": 2128,
   "symbols_in_volume": {
    "xarray.DataArray": {
     "line number": [
      2131,
      2133
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      2135
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_multidim_apply": {
  "data": {
   "lineno": 2137,
   "symbols_in_volume": {
    "xarray.DataArray": {
     "line number": [
      2140
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      2143
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_properties": {
  "data": {
   "lineno": 1928,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1934
     ]
    },
    "range": {
     "line number": [
      1930,
      1930
     ]
    },
    "xarray.tests.assert_array_equal": {
     "line number": [
      1933
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_reduce_attrs": {
  "data": {
   "lineno": 1987,
   "symbols_in_volume": {
    "numpy.mean": {
     "line number": [
      1996
     ]
    },
    "print": {
     "line number": [
      1994
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      2000
     ]
    },
    "xarray.tests.unittest.skip": {
     "line number": [
      1987
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_restore_dim_order": {
  "data": {
   "lineno": 2090,
   "symbols_in_volume": {
    "numpy.random.randn": {
     "line number": [
      2091
     ]
    },
    "range": {
     "line number": [
      2092,
      2092
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2091
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_groupby_sum": {
  "data": {
   "lineno": 1950,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1955,
      1958,
      1971,
      1974
     ]
    },
    "numpy.sum": {
     "line number": [
      1959,
      1965,
      1975
     ]
    },
    "slice": {
     "line number": [
      1963,
      1963,
      1963
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1962
     ]
    },
    "xarray.Dataset": {
     "line number": [
      1954,
      1970
     ]
    },
    "xarray.Variable": {
     "line number": [
      1955,
      1958,
      1974
     ]
    },
    "xarray.tests.assert_allclose": {
     "line number": [
      1959,
      1960,
      1966,
      1968,
      1975,
      1976
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_index_math": {
  "data": {
   "lineno": 1590,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      1593
     ]
    },
    "range": {
     "line number": [
      1591
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1591,
      1593,
      1598
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1594,
      1599,
      1602
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_indexes": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      93
     ]
    },
    "pandas.Index": {
     "line number": [
      95,
      96
     ]
    },
    "xarray.DataArray": {
     "line number": [
      93
     ]
    },
    "xarray.core.pycompat.OrderedDict": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_inplace_math_automatic_alignment": {
  "data": {
   "lineno": 1515,
   "symbols_in_volume": {
    "range": {
     "line number": [
      1516,
      1516,
      1517,
      1517
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1516,
      1517
     ]
    },
    "xarray.MergeError": {
     "line number": [
      1518,
      1520
     ]
    },
    "xarray.tests.test_dataarray.pytest": {
     "line number": [
      1518,
      1520
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_inplace_math_basics": {
  "data": {
   "lineno": 1504,
   "symbols_in_volume": {
    "xarray.tests.assert_array_equal": {
     "line number": [
      1512
     ]
    },
    "xarray.tests.source_ndarray": {
     "line number": [
      1513
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_is_null": {
  "data": {
   "lineno": 1461,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      1464,
      1464,
      1465,
      1465
     ]
    },
    "numpy.nan": {
     "line number": [
      1463
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      1462
     ]
    },
    "pandas.isnull": {
     "line number": [
      1465
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1464,
      1465
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1467,
      1468
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_isel": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": {
    "slice": {
     "line number": [
      653,
      654,
      655,
      655
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      652,
      653,
      654,
      655
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_isel_drop": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": {
    "xarray.DataArray": {
     "line number": [
      834,
      835,
      839
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      837,
      841
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_isel_fancy": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      706
     ]
    },
    "ValueError": {
     "line number": [
      721
     ]
    },
    "dask.array": {
     "line number": [
      673
     ]
    },
    "dask.array.isel": {
     "line number": [
      680,
      688,
      693,
      697,
      702,
      703,
      708,
      716,
      722,
      734
     ]
    },
    "dask.array.isel_points": {
     "line number": [
      691
     ]
    },
    "dask.array.values": {
     "line number": [
      678,
      696
     ]
    },
    "dask.array.variable": {
     "line number": [
      741
     ]
    },
    "len": {
     "line number": [
      681
     ]
    },
    "list": {
     "line number": [
      682
     ]
    },
    "numpy.arange": {
     "line number": [
      674
     ]
    },
    "numpy.random.random": {
     "line number": [
      672
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      690
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      685,
      698
     ]
    },
    "xarray.DataArray": {
     "line number": [
      673,
      722,
      724
     ]
    },
    "xarray.Dataset": {
     "line number": [
      711,
      728
     ]
    },
    "xarray.tests.assert_array_equal": {
     "line number": [
      743
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      701,
      719,
      739,
      740
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      706,
      721
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_isel_points": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      889,
      891
     ]
    },
    "ValueError": {
     "line number": [
      883,
      886,
      893,
      896
     ]
    },
    "dask.array": {
     "line number": [
      846
     ]
    },
    "dask.array.isel_points": {
     "line number": [
      853,
      858,
      866,
      868,
      870,
      874,
      879,
      880,
      885,
      888,
      890,
      892,
      895,
      898,
      901
     ]
    },
    "dask.array.values": {
     "line number": [
      851,
      873
     ]
    },
    "len": {
     "line number": [
      854
     ]
    },
    "list": {
     "line number": [
      855
     ]
    },
    "numpy.arange": {
     "line number": [
      847
     ]
    },
    "numpy.random.random": {
     "line number": [
      845
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      867
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      863,
      875
     ]
    },
    "slice": {
     "line number": [
      892
     ]
    },
    "xarray.DataArray": {
     "line number": [
      846
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      878
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      883,
      886,
      889,
      891,
      893,
      896
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_isel_types": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": {
    "dask.array": {
     "line number": [
      659
     ]
    },
    "dask.array.isel": {
     "line number": [
      661,
      662,
      664,
      665,
      667,
      668
     ]
    },
    "numpy.array": {
     "line number": [
      661,
      662,
      664,
      665,
      667,
      668
     ]
    },
    "xarray.DataArray": {
     "line number": [
      659
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      661,
      664,
      667
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_loc": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": {
    "dask.array": {
     "line number": [
      906,
      907,
      908,
      909,
      910,
      911,
      912,
      913
     ]
    },
    "dask.array.loc": {
     "line number": [
      907,
      908,
      909,
      910,
      911,
      912,
      913
     ]
    },
    "list": {
     "line number": [
      905
     ]
    },
    "numpy.arange": {
     "line number": [
      912
     ]
    },
    "numpy.array": {
     "line number": [
      905
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      907,
      908,
      909,
      910,
      911,
      912,
      913
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_loc_assign": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": {
    "dask.array": {
     "line number": [
      917,
      928,
      933
     ]
    },
    "dask.array.loc": {
     "line number": [
      919,
      921,
      924,
      929,
      934
     ]
    },
    "dask.array.values": {
     "line number": [
      920,
      922,
      925,
      930,
      931,
      935,
      936
     ]
    },
    "list": {
     "line number": [
      916
     ]
    },
    "numpy.all": {
     "line number": [
      920,
      922,
      925,
      935
     ]
    },
    "numpy.arange": {
     "line number": [
      928,
      933
     ]
    },
    "numpy.array": {
     "line number": [
      916
     ]
    },
    "numpy.zeros": {
     "line number": [
      935
     ]
    },
    "slice": {
     "line number": [
      921,
      924
     ]
    },
    "xarray.DataArray": {
     "line number": [
      928,
      933
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_loc_assign_dataarray": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      948,
      964
     ]
    },
    "dask.array": {
     "line number": [
      944,
      956,
      957,
      959,
      973,
      974
     ]
    },
    "dask.array.loc": {
     "line number": [
      949,
      954,
      965,
      971
     ]
    },
    "dask.array.values": {
     "line number": [
      955,
      972
     ]
    },
    "dict": {
     "line number": [
      949,
      954,
      955,
      965,
      971,
      972
     ]
    },
    "get_data": {
     "line number": [
      944,
      956,
      957,
      959,
      973,
      974
     ]
    },
    "numpy.allclose": {
     "line number": [
      955,
      972
     ]
    },
    "numpy.arange": {
     "line number": [
      946,
      952,
      953
     ]
    },
    "numpy.random.randn": {
     "line number": [
      947
     ]
    },
    "numpy.zeros": {
     "line number": [
      961,
      968
     ]
    },
    "xarray.DataArray": {
     "line number": [
      946,
      952,
      961,
      968
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      956,
      957,
      973,
      974
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      948,
      964
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_loc_assign_dataarray.get_data": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      941
     ]
    },
    "numpy.ones": {
     "line number": [
      940
     ]
    },
    "xarray.DataArray": {
     "line number": [
      940
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_loc_single_boolean": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": {
    "xarray.DataArray": {
     "line number": [
      977
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_math": {
  "data": {
   "lineno": 1470,
   "symbols_in_volume": {
    "xarray.tests.assert_equal": {
     "line number": [
      1476,
      1477,
      1478,
      1479,
      1480,
      1481,
      1482,
      1483,
      1484
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_math_automatic_alignment": {
  "data": {
   "lineno": 1486,
   "symbols_in_volume": {
    "numpy.ones": {
     "line number": [
      1489
     ]
    },
    "range": {
     "line number": [
      1487,
      1487,
      1488,
      1488
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1487,
      1488,
      1489
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1490
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_math_name": {
  "data": {
   "lineno": 1523
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_math_with_coords": {
  "data": {
   "lineno": 1538,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      1552
     ]
    },
    "numpy.random.randn": {
     "line number": [
      1542
     ]
    },
    "numpy.zeros": {
     "line number": [
      1574
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1542,
      1545,
      1553,
      1561,
      1567,
      1574,
      1580
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1546,
      1549,
      1555,
      1558,
      1563,
      1568,
      1571,
      1575,
      1578,
      1585,
      1588
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_name": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "xarray.DataArray": {
     "line number": [
      183,
      185
     ]
    },
    "xarray.IndexVariable": {
     "line number": [
      183
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      181
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_non_overlapping_dataarrays_return_empty_result": {
  "data": {
   "lineno": 1492,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1496
     ]
    },
    "range": {
     "line number": [
      1494,
      1494
     ]
    },
    "slice": {
     "line number": [
      1495,
      1495
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1494
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_pickle": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      625
     ]
    },
    "xarray.DataArray": {
     "line number": [
      625
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      627
     ]
    },
    "xarray.tests.test_dataarray.pickle": {
     "line number": [
      626,
      626
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_properties": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      75,
      80
     ]
    },
    "ValueError": {
     "line number": [
      78
     ]
    },
    "getattr": {
     "line number": [
      69,
      69
     ]
    },
    "isinstance": {
     "line number": [
      77
     ]
    },
    "len": {
     "line number": [
      70,
      70
     ]
    },
    "pandas.Index": {
     "line number": [
      77
     ]
    },
    "set": {
     "line number": [
      72,
      72
     ]
    },
    "xarray.core.pycompat.iteritems": {
     "line number": [
      73
     ]
    },
    "xarray.tests.assert_array_equal": {
     "line number": [
      66,
      74
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      65,
      71
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      78
     ]
    },
    "xarray.tests.test_dataarray.pytest": {
     "line number": [
      75,
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_quantile": {
  "data": {
   "lineno": 1842,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1847
     ]
    },
    "numpy.nanpercentile": {
     "line number": [
      1847
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1849
     ]
    },
    "zip": {
     "line number": [
      1844
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_rank": {
  "data": {
   "lineno": 3296,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      3299,
      3300,
      3301,
      3311,
      3312
     ]
    },
    "xarray.DataArray": {
     "line number": [
      3299,
      3300,
      3301,
      3305,
      3308,
      3311,
      3312
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      3302,
      3303,
      3306,
      3309,
      3313
     ]
    },
    "xarray.tests.requires_bottleneck": {
     "line number": [
      3296
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_real_and_imag": {
  "data": {
   "lineno": 3150,
   "symbols_in_volume": {
    "xarray.DataArray": {
     "line number": [
      3151,
      3152,
      3153
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      3152,
      3153
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reduce": {
  "data": {
   "lineno": 1782,
   "symbols_in_volume": {
    "int": {
     "line number": [
      1819
     ]
    },
    "numpy.arange": {
     "line number": [
      1815
     ]
    },
    "numpy.mean": {
     "line number": [
      1806,
      1807
     ]
    },
    "numpy.nan": {
     "line number": [
      1809
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1786,
      1789,
      1796,
      1803,
      1809,
      1811,
      1815,
      1819
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      1806,
      1821
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1790,
      1793,
      1797,
      1800,
      1804,
      1812
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reduce_dtype": {
  "data": {
   "lineno": 1823,
   "symbols_in_volume": {
    "float": {
     "line number": [
      1830
     ]
    },
    "numpy.float16": {
     "line number": [
      1829
     ]
    },
    "numpy.float32": {
     "line number": [
      1829
     ]
    },
    "numpy.float64": {
     "line number": [
      1829
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1827
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reduce_keep_attrs": {
  "data": {
   "lineno": 1851,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1854,
      1859,
      1859
     ]
    },
    "xarray.core.pycompat.OrderedDict": {
     "line number": [
      1855
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reduce_out": {
  "data": {
   "lineno": 1832,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1838
     ]
    },
    "numpy.ones": {
     "line number": [
      1839
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1836
     ]
    },
    "xarray.tests.test_dataarray.pytest": {
     "line number": [
      1838
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reindex_like": {
  "data": {
   "lineno": 1208,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      1215
     ]
    },
    "numpy.random.randn": {
     "line number": [
      1209
     ]
    },
    "range": {
     "line number": [
      1210,
      1210
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1209
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1212,
      1217
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reindex_like_no_index": {
  "data": {
   "lineno": 1219,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1225
     ]
    },
    "numpy.random.randn": {
     "line number": [
      1220
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1220
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1221
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      1224
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reindex_method": {
  "data": {
   "lineno": 1242,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      1246,
      1246,
      1251
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1243,
      1246,
      1251
     ]
    },
    "xarray.Dataset": {
     "line number": [
      1249
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1247,
      1252
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reindex_regressions": {
  "data": {
   "lineno": 1228,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      1231
     ]
    },
    "numpy.array": {
     "line number": [
      1236
     ]
    },
    "numpy.complex": {
     "line number": [
      1236
     ]
    },
    "numpy.random.randn": {
     "line number": [
      1230
     ]
    },
    "range": {
     "line number": [
      1230
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1230,
      1231,
      1237,
      1238
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1233
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_rename": {
  "data": {
   "lineno": 1254,
   "symbols_in_volume": {
    "xarray.tests.assert_identical": {
     "line number": [
      1256,
      1261
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reorder_levels": {
  "data": {
   "lineno": 1424,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      1436
     ]
    },
    "ValueError": {
     "line number": [
      1440
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1426,
      1435
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1429,
      1433
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      1440
     ]
    },
    "xarray.tests.test_dataarray.pytest": {
     "line number": [
      1436
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_repr": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      39
     ]
    },
    "numpy.int64": {
     "line number": [
      39,
      40
     ]
    },
    "repr": {
     "line number": [
      52
     ]
    },
    "textwrap.dedent": {
     "line number": [
      42
     ]
    },
    "xarray.DataArray": {
     "line number": [
      41
     ]
    },
    "xarray.Variable": {
     "line number": [
      38
     ]
    },
    "xarray.core.pycompat.OrderedDict": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_repr_multiindex": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "repr": {
     "line number": [
      62
     ]
    },
    "textwrap.dedent": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_resample": {
  "data": {
   "lineno": 2197,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2208
     ]
    },
    "numpy.arange": {
     "line number": [
      2199
     ]
    },
    "numpy.mean": {
     "line number": [
      2205
     ]
    },
    "pandas.date_range": {
     "line number": [
      2198
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2199,
      2202
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      2203,
      2206
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      2208
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_resample_bad_resample_dim": {
  "data": {
   "lineno": 2244,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2247
     ]
    },
    "numpy.arange": {
     "line number": [
      2246
     ]
    },
    "pandas.date_range": {
     "line number": [
      2245
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2246
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      2247
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_resample_drop_nondim_coords": {
  "data": {
   "lineno": 2250,
   "symbols_in_volume": {
    "int": {
     "line number": [
      2257
     ]
    },
    "len": {
     "line number": [
      2257
     ]
    },
    "numpy.arange": {
     "line number": [
      2252,
      2253,
      2255,
      2257
     ]
    },
    "numpy.meshgrid": {
     "line number": [
      2256
     ]
    },
    "numpy.tile": {
     "line number": [
      2255
     ]
    },
    "pandas.date_range": {
     "line number": [
      2254
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2258,
      2261,
      2262,
      2263
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2264
     ]
    },
    "xarray.tests.requires_scipy": {
     "line number": [
      2250
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_resample_first": {
  "data": {
   "lineno": 2211,
   "symbols_in_volume": {
    "float": {
     "line number": [
      2225
     ]
    },
    "numpy.arange": {
     "line number": [
      2213
     ]
    },
    "numpy.nan": {
     "line number": [
      2226,
      2232
     ]
    },
    "pandas.date_range": {
     "line number": [
      2212
     ]
    },
    "pandas.to_datetime": {
     "line number": [
      2238
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2213,
      2216,
      2221,
      2228,
      2232,
      2240
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2236
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      2217,
      2222,
      2229,
      2233,
      2242
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_resample_old_vs_new_api": {
  "data": {
   "lineno": 2283,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      2288,
      2297,
      2308,
      2322,
      2327
     ]
    },
    "getattr": {
     "line number": [
      2321
     ]
    },
    "numpy.max": {
     "line number": [
      2325
     ]
    },
    "numpy.mean": {
     "line number": [
      2325
     ]
    },
    "numpy.min": {
     "line number": [
      2325
     ]
    },
    "numpy.nan": {
     "line number": [
      2306,
      2312
     ]
    },
    "numpy.ones": {
     "line number": [
      2285
     ]
    },
    "numpy.sum": {
     "line number": [
      2325
     ]
    },
    "pandas.date_range": {
     "line number": [
      2284
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2285,
      2312
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      2291,
      2302,
      2313,
      2314,
      2324,
      2329
     ]
    },
    "xarray.tests.test_dataarray.pytest": {
     "line number": [
      2288,
      2297,
      2308,
      2322,
      2327
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reset_coords": {
  "data": {
   "lineno": 1117,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1159,
      1161,
      1163,
      1165
     ]
    },
    "numpy.zeros": {
     "line number": [
      1118,
      1126,
      1136,
      1145,
      1154
     ]
    },
    "range": {
     "line number": [
      1120,
      1121,
      1128,
      1129,
      1138,
      1138,
      1145,
      1155,
      1155
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1118,
      1145,
      1154
     ]
    },
    "xarray.Dataset": {
     "line number": [
      1126,
      1136
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1130,
      1133,
      1139,
      1142,
      1147,
      1151,
      1157
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      1159,
      1161,
      1163,
      1165
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_reset_index": {
  "data": {
   "lineno": 1392,
   "symbols_in_volume": {
    "xarray.DataArray": {
     "line number": [
      1395,
      1406,
      1410,
      1419,
      1420
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1398,
      1400,
      1402,
      1408,
      1412,
      1416,
      1422
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_roll": {
  "data": {
   "lineno": 3144,
   "symbols_in_volume": {
    "range": {
     "line number": [
      3145
     ]
    },
    "xarray.DataArray": {
     "line number": [
      3145,
      3147
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      3148
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_sel": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": {
    "dask.array": {
     "line number": [
      747,
      748,
      749,
      750,
      751,
      752,
      755,
      756
     ]
    },
    "dask.array.sel": {
     "line number": [
      748,
      749,
      750,
      751,
      752,
      755,
      756
     ]
    },
    "list": {
     "line number": [
      746
     ]
    },
    "numpy.array": {
     "line number": [
      746
     ]
    },
    "slice": {
     "line number": [
      748,
      750,
      756
     ]
    },
    "xarray.DataArray": {
     "line number": [
      754
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      748,
      749,
      750,
      751,
      752,
      755,
      756
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_sel_dataarray": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": {
    "dask.array": {
     "line number": [
      761
     ]
    },
    "dask.array.isel": {
     "line number": [
      765,
      770,
      777
     ]
    },
    "dask.array.sel": {
     "line number": [
      764,
      769,
      776
     ]
    },
    "list": {
     "line number": [
      760
     ]
    },
    "numpy.array": {
     "line number": [
      760
     ]
    },
    "xarray.DataArray": {
     "line number": [
      763,
      768,
      774
     ]
    },
    "xarray.tests.assert_array_equal": {
     "line number": [
      770,
      777
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      780
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      765
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_sel_dataarray_datetime": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      790,
      794
     ]
    },
    "pandas.date_range": {
     "line number": [
      789
     ]
    },
    "slice": {
     "line number": [
      791,
      795
     ]
    },
    "xarray.DataArray": {
     "line number": [
      790,
      794
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      792,
      796
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_sel_drop": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": {
    "xarray.DataArray": {
     "line number": [
      819,
      820,
      824,
      828,
      829
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      822,
      826,
      831
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_sel_invalid_slice": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      784
     ]
    },
    "numpy.arange": {
     "line number": [
      783,
      783
     ]
    },
    "slice": {
     "line number": [
      785
     ]
    },
    "xarray.DataArray": {
     "line number": [
      783
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      784
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_sel_method": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": {
    "list": {
     "line number": [
      808
     ]
    },
    "numpy.random.randn": {
     "line number": [
      807
     ]
    },
    "xarray.DataArray": {
     "line number": [
      807
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      812,
      816
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_sel_no_index": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      799
     ]
    },
    "slice": {
     "line number": [
      801
     ]
    },
    "xarray.DataArray": {
     "line number": [
      799
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      800,
      801,
      802,
      803
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_selection_multiindex": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      1016
     ]
    },
    "pandas.MultiIndex.from_product": {
     "line number": [
      982
     ]
    },
    "range": {
     "line number": [
      984,
      1002,
      1003,
      1005,
      1006,
      1010
     ]
    },
    "slice": {
     "line number": [
      1005,
      1006
     ]
    },
    "test_sel": {
     "line number": [
      999,
      1000,
      1001,
      1002,
      1003,
      1004,
      1005,
      1006,
      1007,
      1008,
      1010
     ]
    },
    "xarray.DataArray": {
     "line number": [
      984
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1012,
      1013,
      1014,
      1019
     ]
    },
    "xarray.tests.test_dataarray.pytest": {
     "line number": [
      1016
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_selection_multiindex.test_sel": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": {
    "dask.array": {
     "line number": [
      988,
      991,
      995,
      997
     ]
    },
    "dask.array.dims": {
     "line number": [
      994
     ]
    },
    "dask.array.rename": {
     "line number": [
      995
     ]
    },
    "dask.array.variable": {
     "line number": [
      996
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      991,
      996
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_series_categorical_index": {
  "data": {
   "lineno": 2743,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      2745
     ]
    },
    "list": {
     "line number": [
      2748
     ]
    },
    "numpy.arange": {
     "line number": [
      2748
     ]
    },
    "pandas": {
     "line number": [
      2745
     ]
    },
    "pandas.CategoricalIndex": {
     "line number": [
      2748
     ]
    },
    "pandas.Series": {
     "line number": [
      2748
     ]
    },
    "repr": {
     "line number": [
      2750
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2749
     ]
    },
    "xarray.tests.unittest.SkipTest": {
     "line number": [
      2746
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_set_index": {
  "data": {
   "lineno": 1366,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1389
     ]
    },
    "numpy.random.rand": {
     "line number": [
      1385
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1369,
      1385
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1376,
      1380,
      1383
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      1389
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_setattr_raises": {
  "data": {
   "lineno": 3155,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      3157,
      3159,
      3161
     ]
    },
    "xarray.DataArray": {
     "line number": [
      3156
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      3157,
      3159,
      3161
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_setitem": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      517,
      518
     ]
    },
    "slice": {
     "line number": [
      511,
      512,
      512,
      513,
      514,
      515
     ]
    },
    "xarray.DataArray": {
     "line number": [
      518
     ]
    },
    "xarray.tests.assert_array_equal": {
     "line number": [
      525
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_setitem_dataarray": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      567,
      583,
      605
     ]
    },
    "dask.array": {
     "line number": [
      563,
      568,
      573,
      575,
      576,
      578,
      584,
      590,
      592,
      593,
      599,
      606,
      612
     ]
    },
    "dask.array.values": {
     "line number": [
      574,
      591
     ]
    },
    "dict": {
     "line number": [
      568,
      573,
      574,
      584,
      590,
      591,
      599,
      606,
      612
     ]
    },
    "get_data": {
     "line number": [
      563,
      575,
      576,
      578,
      592,
      593
     ]
    },
    "numpy.allclose": {
     "line number": [
      574,
      591
     ]
    },
    "numpy.arange": {
     "line number": [
      565,
      571,
      572
     ]
    },
    "numpy.random.randn": {
     "line number": [
      566
     ]
    },
    "numpy.zeros": {
     "line number": [
      580,
      587,
      596,
      602,
      609
     ]
    },
    "xarray.DataArray": {
     "line number": [
      565,
      571,
      580,
      587,
      596,
      602,
      609
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      575,
      576,
      592,
      593
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      567,
      583,
      605
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_setitem_dataarray.get_data": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      560
     ]
    },
    "numpy.ones": {
     "line number": [
      559
     ]
    },
    "xarray.DataArray": {
     "line number": [
      559
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_setitem_fancy": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": {
    "dask.array": {
     "line number": [
      529,
      531,
      533,
      535,
      537,
      539,
      541,
      544,
      547,
      549,
      551,
      553,
      555
     ]
    },
    "dict": {
     "line number": [
      531,
      535,
      539,
      547
     ]
    },
    "numpy.ones": {
     "line number": [
      529,
      544,
      551
     ]
    },
    "xarray.DataArray": {
     "line number": [
      529,
      532,
      536,
      540,
      544,
      545,
      546,
      548,
      551,
      554
     ]
    },
    "xarray.Variable": {
     "line number": [
      530,
      535,
      539,
      552
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      533,
      537,
      541,
      549,
      555
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_shift": {
  "data": {
   "lineno": 3132,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      3135
     ]
    },
    "xarray.DataArray": {
     "line number": [
      3133,
      3135,
      3138,
      3140
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      3136,
      3142
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_sizes": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      199
     ]
    },
    "numpy.zeros": {
     "line number": [
      196
     ]
    },
    "tuple": {
     "line number": [
      198
     ]
    },
    "xarray.DataArray": {
     "line number": [
      196
     ]
    },
    "xarray.tests.test_dataarray.pytest": {
     "line number": [
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_sortby": {
  "data": {
   "lineno": 3254,
   "symbols_in_volume": {
    "dask.array": {
     "line number": [
      3255,
      3271
     ]
    },
    "dask.array.sortby": {
     "line number": [
      3266,
      3270,
      3275,
      3282,
      3289,
      3293
     ]
    },
    "distutils.version.LooseVersion": {
     "line number": [
      3285,
      3285
     ]
    },
    "numpy.__version__": {
     "line number": [
      3285
     ]
    },
    "xarray.DataArray": {
     "line number": [
      3255,
      3258,
      3261,
      3265,
      3274,
      3280,
      3281
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      3267,
      3271,
      3276,
      3283,
      3290,
      3294
     ]
    },
    "xarray.tests.test_dataarray.pytest": {
     "line number": [
      3286
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_squeeze": {
  "data": {
   "lineno": 1673,
   "symbols_in_volume": {
    "xarray.tests.assert_equal": {
     "line number": [
      1674
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_squeeze_drop": {
  "data": {
   "lineno": 1676,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1698
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1677,
      1678,
      1682,
      1686,
      1687,
      1691,
      1693,
      1697
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1680,
      1684,
      1689,
      1695
     ]
    },
    "xarray.tests.test_dataarray.pytest": {
     "line number": [
      1698
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_stack_unstack": {
  "data": {
   "lineno": 1646,
   "symbols_in_volume": {
    "xarray.DataArray": {
     "line number": [
      1647
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1649
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_stack_unstack_decreasing_coordinate": {
  "data": {
   "lineno": 1651,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      1654,
      1655
     ]
    },
    "numpy.random.rand": {
     "line number": [
      1653
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1653
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1658
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_struct_array_dims": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      123,
      126,
      129,
      146,
      161
     ]
    },
    "numpy.nan": {
     "line number": [
      161
     ]
    },
    "object": {
     "line number": [
      124,
      127,
      130,
      147,
      162
     ]
    },
    "xarray.DataArray": {
     "line number": [
      132,
      135,
      140,
      149,
      154,
      164,
      169
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      143,
      157,
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_swap_dims": {
  "data": {
   "lineno": 1266,
   "symbols_in_volume": {
    "list": {
     "line number": [
      1267,
      1268
     ]
    },
    "numpy.random.randn": {
     "line number": [
      1267
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1267,
      1268
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1270
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_and_from_cdms2": {
  "data": {
   "lineno": 2874,
   "symbols_in_volume": {
    "len": {
     "line number": [
      2894
     ]
    },
    "numpy.arange": {
     "line number": [
      2878
     ]
    },
    "pandas.date_range": {
     "line number": [
      2880
     ]
    },
    "str": {
     "line number": [
      2895
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2877
     ]
    },
    "xarray.DataArray.from_cdms2": {
     "line number": [
      2897
     ]
    },
    "xarray.IndexVariable": {
     "line number": [
      2882,
      2883
     ]
    },
    "xarray.tests.assert_array_equal": {
     "line number": [
      2885,
      2890
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      2898
     ]
    },
    "xarray.tests.test_dataarray.pytest": {
     "line number": [
      2875
     ]
    },
    "zip": {
     "line number": [
      2888
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_and_from_dict": {
  "data": {
   "lineno": 2752,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2786,
      2793
     ]
    },
    "numpy.random.randn": {
     "line number": [
      2753
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2753
     ]
    },
    "xarray.DataArray.from_dict": {
     "line number": [
      2768,
      2775,
      2779,
      2788,
      2794
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      2768,
      2775,
      2779
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      2785,
      2792
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_and_from_dict_with_nan_nat": {
  "data": {
   "lineno": 2804,
   "symbols_in_volume": {
    "dask.array": {
     "line number": [
      2810,
      2812
     ]
    },
    "dask.array.to_dict": {
     "line number": [
      2811
     ]
    },
    "numpy.nan": {
     "line number": [
      2806,
      2808
     ]
    },
    "numpy.random.randn": {
     "line number": [
      2805
     ]
    },
    "pandas.Series": {
     "line number": [
      2807
     ]
    },
    "pandas.date_range": {
     "line number": [
      2807
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2810
     ]
    },
    "xarray.DataArray.from_dict": {
     "line number": [
      2811
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      2812
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_and_from_dict_with_time_dim": {
  "data": {
   "lineno": 2796,
   "symbols_in_volume": {
    "dask.array": {
     "line number": [
      2800,
      2802
     ]
    },
    "dask.array.to_dict": {
     "line number": [
      2801
     ]
    },
    "numpy.random.randn": {
     "line number": [
      2797
     ]
    },
    "pandas.date_range": {
     "line number": [
      2798
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2800
     ]
    },
    "xarray.DataArray.from_dict": {
     "line number": [
      2801
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      2802
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_and_from_iris": {
  "data": {
   "lineno": 2900,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      2904
     ]
    },
    "ValueError": {
     "line number": [
      2961
     ]
    },
    "numpy.NaN": {
     "line number": [
      2922
     ]
    },
    "numpy.arange": {
     "line number": [
      2914
     ]
    },
    "pandas.date_range": {
     "line number": [
      2909
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2914
     ]
    },
    "xarray.DataArray.from_iris": {
     "line number": [
      2953,
      2957,
      2962
     ]
    },
    "xarray.coding.times.CFDatetimeCoder": {
     "line number": [
      2941
     ]
    },
    "xarray.core.pycompat.OrderedDict": {
     "line number": [
      2907
     ]
    },
    "xarray.tests.assert_array_equal": {
     "line number": [
      2927,
      2940
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      2954
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      2961
     ]
    },
    "xarray.tests.test_dataarray.cf_units": {
     "line number": [
      2949
     ]
    },
    "xarray.tests.test_dataarray.iris": {
     "line number": [
      2931
     ]
    },
    "xarray.tests.unittest.SkipTest": {
     "line number": [
      2905
     ]
    },
    "zip": {
     "line number": [
      2937
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_and_from_iris_dask": {
  "data": {
   "lineno": 2964,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      2970
     ]
    },
    "ValueError": {
     "line number": [
      3040
     ]
    },
    "dask.array.from_array": {
     "line number": [
      2981
     ]
    },
    "dask.array.ma.masked_less": {
     "line number": [
      2990
     ]
    },
    "dict": {
     "line number": [
      2984
     ]
    },
    "hasattr": {
     "line number": [
      2998,
      3029
     ]
    },
    "numpy.arange": {
     "line number": [
      2981
     ]
    },
    "pandas.date_range": {
     "line number": [
      2975
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2980
     ]
    },
    "xarray.DataArray.from_iris": {
     "line number": [
      3025,
      3036,
      3041
     ]
    },
    "xarray.coding.times.CFDatetimeCoder": {
     "line number": [
      3013
     ]
    },
    "xarray.core.pycompat.OrderedDict": {
     "line number": [
      2973
     ]
    },
    "xarray.tests.assert_array_equal": {
     "line number": [
      2999,
      3012
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      3026
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      3040
     ]
    },
    "xarray.tests.requires_dask": {
     "line number": [
      2964
     ]
    },
    "xarray.tests.test_dataarray.cf_units": {
     "line number": [
      3021
     ]
    },
    "xarray.tests.test_dataarray.iris": {
     "line number": [
      3003
     ]
    },
    "xarray.tests.unittest.SkipTest": {
     "line number": [
      2971
     ]
    },
    "zip": {
     "line number": [
      3009
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_and_from_series": {
  "data": {
   "lineno": 2726,
   "symbols_in_volume": {
    "xarray.DataArray.from_series": {
     "line number": [
      2735,
      2741
     ]
    },
    "xarray.tests.assert_array_equal": {
     "line number": [
      2729,
      2730
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      2733,
      2739
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_dataframe": {
  "data": {
   "lineno": 2689,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2710
     ]
    },
    "list": {
     "line number": [
      2692
     ]
    },
    "numpy.random.randn": {
     "line number": [
      2691
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2691
     ]
    },
    "xarray.tests.assert_array_equal": {
     "line number": [
      2695,
      2696,
      2697,
      2705,
      2706,
      2707
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      2710
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_dataset_retains_keys": {
  "data": {
   "lineno": 3081,
   "symbols_in_volume": {
    "range": {
     "line number": [
      3085
     ]
    },
    "xarray.DataArray": {
     "line number": [
      3087
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      3093
     ]
    },
    "xarray.tests.test_dataarray.datetime": {
     "line number": [
      3085
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_dataset_split": {
  "data": {
   "lineno": 3062,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      3070
     ]
    },
    "list": {
     "line number": [
      3063
     ]
    },
    "xarray.DataArray": {
     "line number": [
      3063,
      3076
     ]
    },
    "xarray.Dataset": {
     "line number": [
      3065,
      3077
     ]
    },
    "xarray.core.pycompat.OrderedDict": {
     "line number": [
      3065,
      3077
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      3068,
      3074,
      3079
     ]
    },
    "xarray.tests.test_dataarray.pytest": {
     "line number": [
      3070
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_dataset_whole": {
  "data": {
   "lineno": 3043,
   "symbols_in_volume": {
    "FutureWarning": {
     "line number": [
      3058
     ]
    },
    "ValueError": {
     "line number": [
      3045
     ]
    },
    "xarray.DataArray": {
     "line number": [
      3044,
      3052
     ]
    },
    "xarray.Dataset": {
     "line number": [
      3049,
      3054,
      3057
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      3050,
      3055,
      3060
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      3045
     ]
    },
    "xarray.tests.test_dataarray.pytest": {
     "line number": [
      3058
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_dict_with_numpy_attrs": {
  "data": {
   "lineno": 2814,
   "symbols_in_volume": {
    "dask.array": {
     "line number": [
      2822
     ]
    },
    "dask.array.to_dict": {
     "line number": [
      2827
     ]
    },
    "list": {
     "line number": [
      2817
     ]
    },
    "numpy.array": {
     "line number": [
      2820
     ]
    },
    "numpy.asscalar": {
     "line number": [
      2824
     ]
    },
    "numpy.float64": {
     "line number": [
      2819
     ]
    },
    "numpy.random.randn": {
     "line number": [
      2816
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2822
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_masked_array": {
  "data": {
   "lineno": 2832,
   "symbols_in_volume": {
    "dask.array": {
     "line number": [
      2836,
      2842,
      2863,
      2870
     ]
    },
    "dask.array.to_masked_array": {
     "line number": [
      2839,
      2844,
      2854,
      2864,
      2871
     ]
    },
    "dask.array.values": {
     "line number": [
      2849,
      2857,
      2858
     ]
    },
    "isinstance": {
     "line number": [
      2845,
      2859,
      2865
     ]
    },
    "len": {
     "line number": [
      2872
     ]
    },
    "numpy.ma.MaskedArray": {
     "line number": [
      2845,
      2859,
      2865
     ]
    },
    "numpy.ma.masked_where": {
     "line number": [
      2835
     ]
    },
    "numpy.nan": {
     "line number": [
      2849,
      2851,
      2862
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      2833
     ]
    },
    "range": {
     "line number": [
      2869
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2836,
      2840,
      2863,
      2870
     ]
    },
    "xarray.tests.assert_array_equal": {
     "line number": [
      2841,
      2847,
      2849,
      2851
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      2842
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_pandas": {
  "data": {
   "lineno": 2655,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2686
     ]
    },
    "dask.array": {
     "line number": [
      2664,
      2672,
      2682,
      2684
     ]
    },
    "dask.array.to_pandas": {
     "line number": [
      2665,
      2674,
      2683
     ]
    },
    "len": {
     "line number": [
      2681
     ]
    },
    "list": {
     "line number": [
      2681
     ]
    },
    "numpy.array": {
     "line number": [
      2658
     ]
    },
    "numpy.random.randn": {
     "line number": [
      2662,
      2671,
      2682,
      2687
     ]
    },
    "pandas.Index": {
     "line number": [
      2663
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2657,
      2664,
      2672,
      2682,
      2683,
      2687
     ]
    },
    "xarray.tests.assert_array_equal": {
     "line number": [
      2659,
      2666,
      2667,
      2668,
      2675,
      2676,
      2677
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      2684
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      2686
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_to_pandas_name_matches_coordinate": {
  "data": {
   "lineno": 2713,
   "symbols_in_volume": {
    "xarray.DataArray": {
     "line number": [
      2715
     ]
    },
    "xarray.tests.assert_array_equal": {
     "line number": [
      2717,
      2718
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_transpose": {
  "data": {
   "lineno": 1669,
   "symbols_in_volume": {
    "xarray.tests.assert_equal": {
     "line number": [
      1670
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_unstack_pandas_consistency": {
  "data": {
   "lineno": 1660,
   "symbols_in_volume": {
    "pandas.DataFrame": {
     "line number": [
      1661
     ]
    },
    "range": {
     "line number": [
      1661
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1665,
      1666
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1667
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_upsample": {
  "data": {
   "lineno": 2331,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      2333
     ]
    },
    "pandas.date_range": {
     "line number": [
      2332
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2333,
      2337,
      2342,
      2347,
      2352,
      2359
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      2338,
      2343,
      2348,
      2353,
      2362
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_upsample_interpolate": {
  "data": {
   "lineno": 2416,
   "symbols_in_volume": {
    "f": {
     "line number": [
      2438
     ]
    },
    "len": {
     "line number": [
      2432,
      2432,
      2436
     ]
    },
    "numpy.arange": {
     "line number": [
      2419,
      2420,
      2423,
      2436
     ]
    },
    "numpy.linspace": {
     "line number": [
      2432
     ]
    },
    "numpy.tile": {
     "line number": [
      2424
     ]
    },
    "pandas.date_range": {
     "line number": [
      2421
     ]
    },
    "scipy.interpolate.interp1d": {
     "line number": [
      2436
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2425,
      2439
     ]
    },
    "xarray.tests.assert_allclose": {
     "line number": [
      2445
     ]
    },
    "xarray.tests.requires_scipy": {
     "line number": [
      2416
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_upsample_interpolate_dask": {
  "data": {
   "lineno": 2456,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      2470
     ]
    },
    "dask.array.from_array": {
     "line number": [
      2465
     ]
    },
    "numpy.arange": {
     "line number": [
      2461,
      2462,
      2464
     ]
    },
    "numpy.tile": {
     "line number": [
      2465
     ]
    },
    "pandas.date_range": {
     "line number": [
      2460
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2466
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      2470
     ]
    },
    "xarray.tests.requires_dask": {
     "line number": [
      2456
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_upsample_interpolate_regression_1605": {
  "data": {
   "lineno": 2447,
   "symbols_in_volume": {
    "len": {
     "line number": [
      2450
     ]
    },
    "numpy.random.random": {
     "line number": [
      2450
     ]
    },
    "pandas.date_range": {
     "line number": [
      2449
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2450
     ]
    },
    "xarray.tests.assert_allclose": {
     "line number": [
      2454
     ]
    },
    "xarray.tests.requires_scipy": {
     "line number": [
      2447
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_upsample_nd": {
  "data": {
   "lineno": 2364,
   "symbols_in_volume": {
    "float": {
     "line number": [
      2397
     ]
    },
    "len": {
     "line number": [
      2378,
      2389
     ]
    },
    "numpy.arange": {
     "line number": [
      2366,
      2367,
      2369
     ]
    },
    "numpy.flipud": {
     "line number": [
      2386,
      2387
     ]
    },
    "numpy.nan": {
     "line number": [
      2398
     ]
    },
    "numpy.repeat": {
     "line number": [
      2376,
      2386,
      2397,
      2407
     ]
    },
    "numpy.tile": {
     "line number": [
      2369
     ]
    },
    "pandas.date_range": {
     "line number": [
      2368
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2370,
      2379,
      2390,
      2400,
      2411
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      2382,
      2393,
      2403,
      2414
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_virtual_default_coords": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      1023
     ]
    },
    "range": {
     "line number": [
      1024
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1023,
      1024
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1025,
      1026
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_virtual_time_components": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": {
    "dask.array": {
     "line number": [
      1030,
      1032
     ]
    },
    "dask.array.coords": {
     "line number": [
      1033
     ]
    },
    "dask.array.values": {
     "line number": [
      1032,
      1033
     ]
    },
    "numpy.arange": {
     "line number": [
      1030
     ]
    },
    "pandas.date_range": {
     "line number": [
      1029
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1030
     ]
    },
    "xarray.tests.assert_array_equal": {
     "line number": [
      1032,
      1033
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_where": {
  "data": {
   "lineno": 1744,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      1745
     ]
    },
    "slice": {
     "line number": [
      1746
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1745
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1748
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.TestDataArray.test_where_string": {
  "data": {
   "lineno": 1750,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1752
     ]
    },
    "numpy.nan": {
     "line number": [
      1752
     ]
    },
    "object": {
     "line number": [
      1752
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1751,
      1752
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      1754
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.Variable": {
  "data": {
   "shadows": "xarray.Variable"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.align": {
  "data": {
   "shadows": "xarray.align"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.assert_allclose": {
  "data": {
   "shadows": "xarray.tests.assert_allclose"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.assert_array_equal": {
  "data": {
   "shadows": "xarray.tests.assert_array_equal"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.assert_equal": {
  "data": {
   "shadows": "xarray.tests.assert_equal"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.assert_identical": {
  "data": {
   "shadows": "xarray.tests.assert_identical"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.broadcast": {
  "data": {
   "shadows": "xarray.broadcast"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.cf_units": {
  "data": {
   "shadows": "cf_units"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.da": {
  "data": {
   "lineno": 3316,
   "symbols_in_volume": {
    "dask.array": {
     "line number": [
      3321,
      3322,
      3323
     ]
    },
    "list": {
     "line number": [
      3333,
      3334,
      3335
     ]
    },
    "numpy.arange": {
     "line number": [
      3332
     ]
    },
    "numpy.nan": {
     "line number": [
      3327,
      3327,
      3327
     ]
    },
    "numpy.random.random": {
     "line number": [
      3320
     ]
    },
    "numpy.tile": {
     "line number": [
      3332
     ]
    },
    "pandas.date_range": {
     "line number": [
      3319
     ]
    },
    "xarray.DataArray": {
     "line number": [
      3321,
      3326,
      3331
     ]
    },
    "xarray.tests.test_dataarray.pytest": {
     "line number": [
      3316
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.da_dask": {
  "data": {
   "lineno": 3339,
   "symbols_in_volume": {
    "dask.array": {
     "line number": [
      3345,
      3346,
      3347
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      3342
     ]
    },
    "pandas.date_range": {
     "line number": [
      3343
     ]
    },
    "xarray.DataArray": {
     "line number": [
      3345
     ]
    },
    "xarray.tests.test_dataarray.pytest": {
     "line number": [
      3341,
      3339
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.full_like": {
  "data": {
   "shadows": "xarray.core.common.full_like"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.iris": {
  "data": {
   "shadows": "iris"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.iteritems": {
  "data": {
   "shadows": "xarray.core.pycompat.iteritems"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.raises_regex": {
  "data": {
   "shadows": "xarray.tests.raises_regex"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.requires_bottleneck": {
  "data": {
   "shadows": "xarray.tests.requires_bottleneck"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.requires_dask": {
  "data": {
   "shadows": "xarray.tests.requires_dask"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.requires_scipy": {
  "data": {
   "shadows": "xarray.tests.requires_scipy"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.source_ndarray": {
  "data": {
   "shadows": "xarray.tests.source_ndarray"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.test_isin": {
  "data": {
   "lineno": 3350,
   "symbols_in_volume": {
    "dask.array.isin": {
     "line number": [
      3360,
      3369
     ]
    },
    "list": {
     "line number": [
      3355,
      3356,
      3357,
      3360,
      3365,
      3366,
      3367,
      3369
     ]
    },
    "numpy.asarray": {
     "line number": [
      3354,
      3364
     ]
    },
    "xarray.DataArray": {
     "line number": [
      3353,
      3363
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      3361,
      3370
     ]
    },
    "xarray.tests.test_dataarray.pytest": {
     "line number": [
      3350
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_raise_no_warning_for_nan_in_binary_ops": {
  "data": {
   "lineno": 3581,
   "symbols_in_volume": {
    "len": {
     "line number": [
      3584
     ]
    },
    "numpy.NaN": {
     "line number": [
      3583
     ]
    },
    "xarray.DataArray": {
     "line number": [
      3583
     ]
    },
    "xarray.tests.test_dataarray.pytest": {
     "line number": [
      3582
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_rolling_construct": {
  "data": {
   "lineno": 3483,
   "symbols_in_volume": {
    "center": {
     "line number": [
      3489,
      3490
     ]
    },
    "dask.array": {
     "line number": [
      3487
     ]
    },
    "dask.array.rolling": {
     "line number": [
      3490
     ]
    },
    "numpy.arange": {
     "line number": [
      3486
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      3493,
      3494,
      3499,
      3500
     ]
    },
    "pandas.Series": {
     "line number": [
      3486
     ]
    },
    "xarray.DataArray.from_series": {
     "line number": [
      3487
     ]
    },
    "xarray.tests.test_dataarray.pytest": {
     "line number": [
      3483,
      3484
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_rolling_count_correct": {
  "data": {
   "lineno": 3557,
   "symbols_in_volume": {
    "dask.array": {
     "line number": [
      3559
     ]
    },
    "dask.array.rolling": {
     "line number": [
      3574
     ]
    },
    "dask.array.to_dataset": {
     "line number": [
      3577
     ]
    },
    "numpy.nan": {
     "line number": [
      3560,
      3560,
      3560,
      3568,
      3568,
      3568,
      3568,
      3568,
      3568,
      3569,
      3569,
      3569,
      3569,
      3569,
      3571,
      3571
     ]
    },
    "xarray.DataArray": {
     "line number": [
      3559,
      3565,
      3567,
      3570
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      3575,
      3578
     ]
    },
    "zip": {
     "line number": [
      3573
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_rolling_doc": {
  "data": {
   "lineno": 3396,
   "symbols_in_volume": {
    "dask.array.rolling": {
     "line number": [
      3397
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_rolling_iter": {
  "data": {
   "lineno": 3373,
   "symbols_in_volume": {
    "dask.array": {
     "line number": [
      3379,
      3380
     ]
    },
    "dask.array.isel": {
     "line number": [
      3383
     ]
    },
    "dask.array.rolling": {
     "line number": [
      3376
     ]
    },
    "enumerate": {
     "line number": [
      3382
     ]
    },
    "len": {
     "line number": [
      3379,
      3379
     ]
    },
    "numpy.allclose": {
     "line number": [
      3392
     ]
    },
    "xarray.tests.assert_array_equal": {
     "line number": [
      3390
     ]
    },
    "xarray.tests.assert_identical": {
     "line number": [
      3380
     ]
    },
    "xarray.tests.test_dataarray.pytest": {
     "line number": [
      3373
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_rolling_pandas_compat": {
  "data": {
   "lineno": 3460,
   "symbols_in_volume": {
    "center": {
     "line number": [
      3470,
      3472,
      3474
     ]
    },
    "dask.array": {
     "line number": [
      3465
     ]
    },
    "dask.array.rolling": {
     "line number": [
      3472,
      3474
     ]
    },
    "numpy.arange": {
     "line number": [
      3464
     ]
    },
    "numpy.nanmean": {
     "line number": [
      3475
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      3477,
      3478,
      3479,
      3480
     ]
    },
    "pandas.Series": {
     "line number": [
      3464
     ]
    },
    "xarray.DataArray.from_series": {
     "line number": [
      3465
     ]
    },
    "xarray.tests.test_dataarray.pytest": {
     "line number": [
      3460,
      3461,
      3462
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_rolling_properties": {
  "data": {
   "lineno": 3403,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      3409,
      3412,
      3415
     ]
    },
    "dask.array.rolling": {
     "line number": [
      3404,
      3410,
      3413,
      3416
     ]
    },
    "str": {
     "line number": [
      3411,
      3414,
      3417
     ]
    },
    "xarray.tests.test_dataarray.pytest": {
     "line number": [
      3409,
      3412,
      3415
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_rolling_reduce": {
  "data": {
   "lineno": 3509,
   "symbols_in_volume": {
    "center": {
     "line number": [
      3523
     ]
    },
    "dask.array.isnull": {
     "line number": [
      3519
     ]
    },
    "dask.array.rolling": {
     "line number": [
      3523
     ]
    },
    "getattr": {
     "line number": [
      3527,
      3528
     ]
    },
    "numpy": {
     "line number": [
      3527
     ]
    },
    "xarray.tests.assert_allclose": {
     "line number": [
      3529
     ]
    },
    "xarray.tests.test_dataarray.pytest": {
     "line number": [
      3509,
      3510,
      3511,
      3512,
      3513
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_rolling_reduce_nonnumeric": {
  "data": {
   "lineno": 3533,
   "symbols_in_volume": {
    "center": {
     "line number": [
      3547
     ]
    },
    "dask.array": {
     "line number": [
      3541
     ]
    },
    "dask.array.rolling": {
     "line number": [
      3547
     ]
    },
    "distutils.version.LooseVersion": {
     "line number": [
      3533,
      3533
     ]
    },
    "getattr": {
     "line number": [
      3551,
      3552
     ]
    },
    "numpy": {
     "line number": [
      3551
     ]
    },
    "numpy.__version__": {
     "line number": [
      3533
     ]
    },
    "numpy.nan": {
     "line number": [
      3541,
      3541,
      3541
     ]
    },
    "xarray.DataArray": {
     "line number": [
      3541
     ]
    },
    "xarray.tests.assert_allclose": {
     "line number": [
      3553
     ]
    },
    "xarray.tests.test_dataarray.pytest": {
     "line number": [
      3533,
      3536,
      3537,
      3538,
      3539
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_rolling_wrapped_bottleneck": {
  "data": {
   "lineno": 3420,
   "symbols_in_volume": {
    "center": {
     "line number": [
      3437
     ]
    },
    "dask.array": {
     "line number": [
      3439
     ]
    },
    "dask.array.rolling": {
     "line number": [
      3428,
      3437
     ]
    },
    "dask.array.values": {
     "line number": [
      3432
     ]
    },
    "getattr": {
     "line number": [
      3431,
      3432,
      3438
     ]
    },
    "xarray.tests.assert_array_equal": {
     "line number": [
      3434
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      3439
     ]
    },
    "xarray.tests.test_dataarray.pytest": {
     "line number": [
      3425,
      3420,
      3422,
      3423
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.test_rolling_wrapped_bottleneck_dask": {
  "data": {
   "lineno": 3442,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      3450,
      3453
     ]
    },
    "xarray.tests.assert_allclose": {
     "line number": [
      3457
     ]
    },
    "xarray.tests.test_dataarray.da_dask": {
     "line number": [
      3449,
      3452
     ]
    },
    "xarray.tests.test_dataarray.pytest": {
     "line number": [
      3447,
      3442,
      3444,
      3445
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataarray.unittest": {
  "data": {
   "shadows": "xarray.tests.unittest"
  },
  "type": "import"
 },
 "xarray.tests.test_dataarray.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      29,
      33
     ]
    }
   }
  },
  "type": "module"
 },
 "xarray.tests.test_dataset.DataArray": {
  "data": {
   "shadows": "xarray.DataArray"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.Dataset": {
  "data": {
   "shadows": "xarray.Dataset"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.InaccessibleVariableDataStore": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "xarray.backends.InMemoryDataStore": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.tests.test_dataset.InaccessibleVariableDataStore.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "set": {
     "line number": [
      67
     ]
    },
    "super": {
     "line number": [
      66
     ]
    },
    "xarray.tests.test_dataset.InaccessibleVariableDataStore": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.InaccessibleVariableDataStore.get_variables": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      83
     ]
    },
    "lazy_inaccessible": {
     "line number": [
      83
     ]
    },
    "xarray.core.pycompat.iteritems": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.InaccessibleVariableDataStore.get_variables.lazy_inaccessible": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "InaccessibleArray": {
     "line number": [
      81
     ]
    },
    "xarray.Variable": {
     "line number": [
      82
     ]
    },
    "xarray.core.indexing.LazilyOuterIndexedArray": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.InaccessibleVariableDataStore.store": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      73
     ]
    },
    "super": {
     "line number": [
      70
     ]
    },
    "xarray.IndexVariable": {
     "line number": [
      73
     ]
    },
    "xarray.tests.test_dataset.InaccessibleVariableDataStore": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.IndexVariable": {
  "data": {
   "shadows": "xarray.IndexVariable"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.MergeError": {
  "data": {
   "shadows": "xarray.MergeError"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.OrderedDict": {
  "data": {
   "shadows": "xarray.core.pycompat.OrderedDict"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.TestDataset": {
  "data": {
   "lineno": 87
  },
  "type": "class"
 },
 "xarray.tests.test_dataset.TestDataset.make_example_math_dataset": {
  "data": {
   "lineno": 3497,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      3499,
      3500,
      3502
     ]
    },
    "numpy.nan": {
     "line number": [
      3504
     ]
    },
    "xarray.Dataset": {
     "line number": [
      3503
     ]
    },
    "xarray.core.pycompat.OrderedDict": {
     "line number": [
      3498
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_align": {
  "data": {
   "lineno": 1617,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1662
     ]
    },
    "ValueError": {
     "line number": [
      1660
     ]
    },
    "assert_array_equal": {
     "line number": [
      1630,
      1635
     ]
    },
    "assert_equal": {
     "line number": [
      1636,
      1644,
      1645,
      1652,
      1653
     ]
    },
    "assert_identical": {
     "line number": [
      1631,
      1638,
      1647,
      1655
     ]
    },
    "list": {
     "line number": [
      1620,
      1626,
      1627
     ]
    },
    "numpy.isnan": {
     "line number": [
      1640,
      1641,
      1649,
      1658
     ]
    },
    "numpy.random.randn": {
     "line number": [
      1622
     ]
    },
    "raises_regex": {
     "line number": [
      1660
     ]
    },
    "xarray.align": {
     "line number": [
      1629,
      1633,
      1643,
      1651,
      1661,
      1663
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      1618
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      1662
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_align_exact": {
  "data": {
   "lineno": 1665,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1673
     ]
    },
    "assert_identical": {
     "line number": [
      1670,
      1671
     ]
    },
    "raises_regex": {
     "line number": [
      1673
     ]
    },
    "xarray.Dataset": {
     "line number": [
      1666,
      1667
     ]
    },
    "xarray.align": {
     "line number": [
      1669,
      1674
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_align_exclude": {
  "data": {
   "lineno": 1676,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      1691,
      1692
     ]
    },
    "numpy.nan": {
     "line number": [
      1684,
      1684,
      1688,
      1688
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1677,
      1679,
      1684,
      1688
     ]
    },
    "xarray.Dataset": {
     "line number": [
      1677,
      1679,
      1683,
      1687
     ]
    },
    "xarray.align": {
     "line number": [
      1681
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_align_indexes": {
  "data": {
   "lineno": 1712,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      1719
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1713,
      1716
     ]
    },
    "xarray.Dataset": {
     "line number": [
      1713,
      1716
     ]
    },
    "xarray.align": {
     "line number": [
      1715
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_align_nocopy": {
  "data": {
   "lineno": 1694,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      1702,
      1703,
      1709,
      1710
     ]
    },
    "numpy.nan": {
     "line number": [
      1698
     ]
    },
    "source_ndarray": {
     "line number": [
      1704,
      1704,
      1707,
      1708
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1695,
      1696,
      1698
     ]
    },
    "xarray.Dataset": {
     "line number": [
      1695,
      1696,
      1698
     ]
    },
    "xarray.align": {
     "line number": [
      1701,
      1706
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_align_non_unique": {
  "data": {
   "lineno": 1721,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1727
     ]
    },
    "raises_regex": {
     "line number": [
      1727
     ]
    },
    "xarray.Dataset": {
     "line number": [
      1722,
      1726
     ]
    },
    "xarray.align": {
     "line number": [
      1723,
      1728
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_apply": {
  "data": {
   "lineno": 3473,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      3490,
      3495
     ]
    },
    "assert_identical": {
     "line number": [
      3477,
      3481,
      3483,
      3491
     ]
    },
    "numpy.asarray": {
     "line number": [
      3493
     ]
    },
    "numpy.mean": {
     "line number": [
      3477
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      3474
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_apply.scale": {
  "data": {
   "lineno": 3486
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_asarray": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      448
     ]
    },
    "numpy.asarray": {
     "line number": [
      449
     ]
    },
    "raises_regex": {
     "line number": [
      448
     ]
    },
    "xarray.Dataset": {
     "line number": [
      447
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_assign": {
  "data": {
   "lineno": 2338,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      2342,
      2344,
      2348,
      2352,
      2357,
      2361,
      2365
     ]
    },
    "list": {
     "line number": [
      2343
     ]
    },
    "range": {
     "line number": [
      2354
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2339,
      2341,
      2344,
      2347,
      2351,
      2354
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_assign_attrs": {
  "data": {
   "lineno": 2367,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      2371,
      2376
     ]
    },
    "dict": {
     "line number": [
      2368,
      2377
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2368,
      2369
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_assign_multiindex_level": {
  "data": {
   "lineno": 2379,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2381
     ]
    },
    "raises_regex": {
     "line number": [
      2381
     ]
    },
    "range": {
     "line number": [
      2382,
      2383
     ]
    },
    "xarray.tests.test_dataset.create_test_multiindex": {
     "line number": [
      2380
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_attr_access": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      462,
      463,
      474
     ]
    },
    "dir": {
     "line number": [
      468,
      469
     ]
    },
    "set": {
     "line number": [
      468,
      468,
      469
     ]
    },
    "xarray.Dataset": {
     "line number": [
      460
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_attribute_access": {
  "data": {
   "lineno": 3978,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      3982,
      3986
     ]
    },
    "dir": {
     "line number": [
      3983,
      3987,
      3990
     ]
    },
    "getattr": {
     "line number": [
      3982,
      3986
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      3979
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_attrs": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      761
     ]
    },
    "xarray.core.pycompat.OrderedDict": {
     "line number": [
      761
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      758
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_binary_op_join_setting": {
  "data": {
   "lineno": 3816,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      3823,
      3830,
      3835,
      3840,
      3845
     ]
    },
    "numpy.nan": {
     "line number": [
      3833,
      3833,
      3838,
      3843
     ]
    },
    "xarray.Dataset": {
     "line number": [
      3818,
      3819,
      3822,
      3826,
      3827,
      3828,
      3833,
      3838,
      3843
     ]
    },
    "xarray.set_options": {
     "line number": [
      3820,
      3832,
      3837,
      3842
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_broadcast": {
  "data": {
   "lineno": 1730,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      1738,
      1745,
      1746,
      1751,
      1752
     ]
    },
    "xarray.Dataset": {
     "line number": [
      1731,
      1733,
      1740,
      1741,
      1742,
      1743
     ]
    },
    "xarray.broadcast": {
     "line number": [
      1737,
      1744,
      1750
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_broadcast_equals": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": {
    "xarray.Dataset": {
     "line number": [
      751,
      752
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_broadcast_exclude": {
  "data": {
   "lineno": 1769,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      1791,
      1792
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1771,
      1773,
      1776,
      1782,
      1784,
      1788
     ]
    },
    "xarray.Dataset": {
     "line number": [
      1770,
      1775,
      1781,
      1787
     ]
    },
    "xarray.broadcast": {
     "line number": [
      1779
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_broadcast_misaligned": {
  "data": {
   "lineno": 1794,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      1808,
      1809
     ]
    },
    "numpy.nan": {
     "line number": [
      1801,
      1801,
      1806,
      1806,
      1806,
      1806
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1795,
      1797,
      1801,
      1805
     ]
    },
    "xarray.Dataset": {
     "line number": [
      1795,
      1797,
      1800,
      1804
     ]
    },
    "xarray.broadcast": {
     "line number": [
      1799
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_broadcast_nocopy": {
  "data": {
   "lineno": 1754,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      1760,
      1765
     ]
    },
    "source_ndarray": {
     "line number": [
      1761,
      1761,
      1766,
      1766
     ]
    },
    "xarray.Dataset": {
     "line number": [
      1756,
      1757
     ]
    },
    "xarray.broadcast": {
     "line number": [
      1759,
      1764
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_chunk": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      794
     ]
    },
    "assert_identical": {
     "line number": [
      792
     ]
    },
    "dask.array.Array": {
     "line number": [
      775
     ]
    },
    "isinstance": {
     "line number": [
      767,
      773,
      775
     ]
    },
    "numpy.ndarray": {
     "line number": [
      767,
      773
     ]
    },
    "raises_regex": {
     "line number": [
      794
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      765
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_combine_first": {
  "data": {
   "lineno": 3872,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      3880,
      3881,
      3888
     ]
    },
    "numpy.nan": {
     "line number": [
      3877,
      3878
     ]
    },
    "xarray.DataArray": {
     "line number": [
      3873,
      3874,
      3884
     ]
    },
    "xarray.Dataset": {
     "line number": [
      3877
     ]
    },
    "xarray.merge": {
     "line number": [
      3881,
      3887
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_constructor": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      242
     ]
    },
    "ValueError": {
     "line number": [
      238,
      240,
      244
     ]
    },
    "assert_identical": {
     "line number": [
      250
     ]
    },
    "numpy.arange": {
     "line number": [
      234,
      235,
      236
     ]
    },
    "raises_regex": {
     "line number": [
      238,
      240,
      242,
      244
     ]
    },
    "xarray.Dataset": {
     "line number": [
      239,
      241,
      243,
      245,
      248,
      249
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_constructor_0d": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": {
    "Arbitrary": {
     "line number": [
      278
     ]
    },
    "assert_identical": {
     "line number": [
      270,
      283
     ]
    },
    "numpy.array": {
     "line number": [
      268
     ]
    },
    "numpy.datetime64": {
     "line number": [
      277
     ]
    },
    "numpy.nan": {
     "line number": [
      276
     ]
    },
    "pandas.Timestamp": {
     "line number": [
      275
     ]
    },
    "print": {
     "line number": [
      280
     ]
    },
    "xarray.Dataset": {
     "line number": [
      267,
      269,
      281,
      282
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_constructor_0d.Arbitrary": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": {
    "object": {
     "line number": [
      272
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.tests.test_dataset.TestDataset.test_constructor_1d": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      261,
      264
     ]
    },
    "numpy.arange": {
     "line number": [
      259,
      260
     ]
    },
    "xarray.Dataset": {
     "line number": [
      259,
      260,
      263
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_constructor_auto_align": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      316
     ]
    },
    "assert_identical": {
     "line number": [
      298,
      307,
      313
     ]
    },
    "isinstance": {
     "line number": [
      301
     ]
    },
    "numpy.nan": {
     "line number": [
      294,
      295
     ]
    },
    "raises_regex": {
     "line number": [
      316
     ]
    },
    "xarray.DataArray": {
     "line number": [
      290,
      291
     ]
    },
    "xarray.Dataset": {
     "line number": [
      294,
      297,
      306,
      312,
      317
     ]
    },
    "xarray.IndexVariable": {
     "line number": [
      301
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_constructor_compat": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      357,
      359,
      364,
      376,
      385
     ]
    },
    "numpy.ones": {
     "line number": [
      366,
      368,
      369
     ]
    },
    "numpy.zeros": {
     "line number": [
      367,
      370
     ]
    },
    "xarray.DataArray": {
     "line number": [
      351,
      362,
      378,
      382
     ]
    },
    "xarray.Dataset": {
     "line number": [
      354,
      355,
      356,
      358,
      363,
      366,
      368,
      374,
      380,
      383,
      384
     ]
    },
    "xarray.MergeError": {
     "line number": [
      353,
      379
     ]
    },
    "xarray.core.pycompat.OrderedDict": {
     "line number": [
      351,
      361,
      374
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      353,
      379
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_constructor_deprecated": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      286
     ]
    },
    "raises_regex": {
     "line number": [
      286
     ]
    },
    "xarray.DataArray": {
     "line number": [
      287
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_constructor_invalid_dims": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      255,
      256
     ]
    },
    "xarray.DataArray": {
     "line number": [
      256
     ]
    },
    "xarray.Dataset": {
     "line number": [
      255
     ]
    },
    "xarray.MergeError": {
     "line number": [
      254
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      254
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_constructor_pandas_sequence": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      327,
      334
     ]
    },
    "reversed": {
     "line number": [
      330
     ]
    },
    "xarray.Dataset": {
     "line number": [
      325,
      332
     ]
    },
    "xarray.core.pycompat.OrderedDict": {
     "line number": [
      322
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_constructor_pandas_single": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      348
     ]
    },
    "numpy.random.rand": {
     "line number": [
      339,
      340,
      341
     ]
    },
    "xarray.DataArray": {
     "line number": [
      339,
      340,
      341
     ]
    },
    "xarray.Dataset": {
     "line number": [
      346
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_constructor_with_coords": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      388,
      397
     ]
    },
    "pandas.MultiIndex.from_product": {
     "line number": [
      395
     ]
    },
    "raises_regex": {
     "line number": [
      388,
      397
     ]
    },
    "range": {
     "line number": [
      399
     ]
    },
    "xarray.Dataset": {
     "line number": [
      389,
      391,
      398,
      399
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_convert_dataframe_with_many_types_and_multiindex": {
  "data": {
   "lineno": 2822,
   "symbols_in_volume": {
    "list": {
     "line number": [
      2824,
      2825,
      2829
     ]
    },
    "numpy.arange": {
     "line number": [
      2826,
      2827
     ]
    },
    "numpy.asarray": {
     "line number": [
      2839
     ]
    },
    "pandas.Categorical": {
     "line number": [
      2829
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      2824
     ]
    },
    "pandas.MultiIndex.from_product": {
     "line number": [
      2834
     ]
    },
    "pandas.date_range": {
     "line number": [
      2830,
      2831
     ]
    },
    "range": {
     "line number": [
      2825,
      2834
     ]
    },
    "xarray.Dataset.from_dataframe": {
     "line number": [
      2836
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_coords_merge": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      658,
      660,
      675,
      677,
      681,
      683
     ]
    },
    "numpy.nan": {
     "line number": [
      679
     ]
    },
    "range": {
     "line number": [
      673
     ]
    },
    "xarray.Dataset": {
     "line number": [
      651,
      652,
      654,
      662,
      665,
      668,
      672,
      673,
      679
     ]
    },
    "xarray.MergeError": {
     "line number": [
      663,
      666,
      669
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      663,
      666,
      669
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_coords_merge_mismatched_shape": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      690,
      695,
      698,
      704
     ]
    },
    "numpy.nan": {
     "line number": [
      700,
      701
     ]
    },
    "xarray.Dataset": {
     "line number": [
      686,
      687,
      692,
      693,
      700,
      701
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_coords_modify": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      579,
      582
     ]
    },
    "ValueError": {
     "line number": [
      570
     ]
    },
    "assert_array_equal": {
     "line number": [
      563,
      567
     ]
    },
    "assert_identical": {
     "line number": [
      572,
      577,
      588
     ]
    },
    "numpy.random.randn": {
     "line number": [
      558
     ]
    },
    "raises_regex": {
     "line number": [
      570
     ]
    },
    "xarray.Dataset": {
     "line number": [
      556
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      579,
      582
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_coords_properties": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      539,
      541
     ]
    },
    "assert_identical": {
     "line number": [
      531,
      532
     ]
    },
    "len": {
     "line number": [
      527
     ]
    },
    "list": {
     "line number": [
      529
     ]
    },
    "numpy.array": {
     "line number": [
      520,
      521,
      524
     ]
    },
    "numpy.int64": {
     "line number": [
      525
     ]
    },
    "numpy.random.randn": {
     "line number": [
      523
     ]
    },
    "repr": {
     "line number": [
      550
     ]
    },
    "textwrap.dedent": {
     "line number": [
      544
     ]
    },
    "xarray.Dataset": {
     "line number": [
      520
     ]
    },
    "xarray.core.pycompat.OrderedDict": {
     "line number": [
      520,
      524
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      539,
      541
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_coords_set": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      635
     ]
    },
    "assert_identical": {
     "line number": [
      613,
      615,
      618,
      621,
      624,
      626,
      628,
      631,
      633,
      640,
      642
     ]
    },
    "raises_regex": {
     "line number": [
      635
     ]
    },
    "xarray.Dataset": {
     "line number": [
      602,
      605,
      608
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_coords_setitem_multiindex": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      598
     ]
    },
    "raises_regex": {
     "line number": [
      598
     ]
    },
    "range": {
     "line number": [
      599
     ]
    },
    "xarray.tests.test_dataset.create_test_multiindex": {
     "line number": [
      597
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_coords_setitem_with_new_dimension": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      594
     ]
    },
    "xarray.Dataset": {
     "line number": [
      591,
      593
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_coords_to_dataset": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      648
     ]
    },
    "xarray.Dataset": {
     "line number": [
      645,
      646
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_copy": {
  "data": {
   "lineno": 1859,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      1863,
      1876
     ]
    },
    "copy.copy": {
     "line number": [
      1862
     ]
    },
    "copy.deepcopy": {
     "line number": [
      1875
     ]
    },
    "numpy.arange": {
     "line number": [
      1872
     ]
    },
    "source_ndarray": {
     "line number": [
      1871,
      1871
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      1860
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_count": {
  "data": {
   "lineno": 3467,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      3471
     ]
    },
    "numpy.nan": {
     "line number": [
      3468,
      3468
     ]
    },
    "xarray.Dataset": {
     "line number": [
      3468,
      3469
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dask_is_lazy": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": {
    "slice": {
     "line number": [
      811
     ]
    },
    "xarray.open_dataset": {
     "line number": [
      801
     ]
    },
    "xarray.tests.test_dataset.InaccessibleVariableDataStore": {
     "line number": [
      799
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      800
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      803,
      805
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_data_vars_properties": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      714
     ]
    },
    "repr": {
     "line number": [
      720
     ]
    },
    "set": {
     "line number": [
      711
     ]
    },
    "textwrap.dedent": {
     "line number": [
      716
     ]
    },
    "xarray.Dataset": {
     "line number": [
      707
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_array_math": {
  "data": {
   "lineno": 3539,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      3543,
      3544,
      3545,
      3546,
      3549,
      3552,
      3555,
      3558,
      3559
     ]
    },
    "numpy.arange": {
     "line number": [
      3557,
      3558,
      3559
     ]
    },
    "xarray.Dataset": {
     "line number": [
      3557
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_dataset_math": {
  "data": {
   "lineno": 3561,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      3564,
      3565,
      3568,
      3569,
      3570,
      3571,
      3576,
      3579,
      3583,
      3584
     ]
    },
    "dict": {
     "line number": [
      3571
     ]
    },
    "id": {
     "line number": [
      3574,
      3577
     ]
    },
    "slice": {
     "line number": [
      3581
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_diff_exception_label_str": {
  "data": {
   "lineno": 3729,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      3731
     ]
    },
    "raises_regex": {
     "line number": [
      3731
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      3730
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_diff_exception_n_neg": {
  "data": {
   "lineno": 3724,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      3726
     ]
    },
    "raises_regex": {
     "line number": [
      3726
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      3725
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_diff_n1": {
  "data": {
   "lineno": 3694,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      3707
     ]
    },
    "dict": {
     "line number": [
      3697
     ]
    },
    "numpy.diff": {
     "line number": [
      3698,
      3701
     ]
    },
    "xarray.DataArray": {
     "line number": [
      3698,
      3701
     ]
    },
    "xarray.Dataset": {
     "line number": [
      3705
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      3695
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_diff_n1_label": {
  "data": {
   "lineno": 3684,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      3688,
      3692
     ]
    },
    "xarray.Dataset": {
     "line number": [
      3685,
      3687,
      3691
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_diff_n1_simple": {
  "data": {
   "lineno": 3678,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      3682
     ]
    },
    "xarray.Dataset": {
     "line number": [
      3679,
      3681
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_diff_n2": {
  "data": {
   "lineno": 3709,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      3722
     ]
    },
    "dict": {
     "line number": [
      3712
     ]
    },
    "numpy.diff": {
     "line number": [
      3713,
      3716
     ]
    },
    "xarray.DataArray": {
     "line number": [
      3713,
      3716
     ]
    },
    "xarray.Dataset": {
     "line number": [
      3720
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      3710
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_math_auto_align": {
  "data": {
   "lineno": 3586,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      3595
     ]
    },
    "assert_identical": {
     "line number": [
      3591,
      3599,
      3601,
      3602,
      3605,
      3608,
      3614
     ]
    },
    "slice": {
     "line number": [
      3593,
      3593,
      3611
     ]
    },
    "xarray.Dataset": {
     "line number": [
      3601,
      3602,
      3602,
      3602,
      3604,
      3608,
      3608
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_math_errors": {
  "data": {
   "lineno": 3616,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      3619,
      3621,
      3631
     ]
    },
    "ValueError": {
     "line number": [
      3623
     ]
    },
    "assert_identical": {
     "line number": [
      3633
     ]
    },
    "numpy.datetime64": {
     "line number": [
      3629
     ]
    },
    "raises_regex": {
     "line number": [
      3623
     ]
    },
    "xarray.DataArray": {
     "line number": [
      3629
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      3619,
      3621,
      3631
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_number_math": {
  "data": {
   "lineno": 3507,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      3510,
      3511,
      3512,
      3513,
      3514,
      3518
     ]
    },
    "numpy.array": {
     "line number": [
      3513,
      3514
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_retains_period_index_on_transpose": {
  "data": {
   "lineno": 3669,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      3676
     ]
    },
    "pandas.PeriodIndex": {
     "line number": [
      3676
     ]
    },
    "pandas.period_range": {
     "line number": [
      3672
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      3671
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dataset_transpose": {
  "data": {
   "lineno": 3635,
   "symbols_in_volume": {
    "FutureWarning": {
     "line number": [
      3643
     ]
    },
    "ValueError": {
     "line number": [
      3662,
      3664
     ]
    },
    "assert_identical": {
     "line number": [
      3641,
      3645,
      3649
     ]
    },
    "dir": {
     "line number": [
      3667
     ]
    },
    "numpy.random.randn": {
     "line number": [
      3636,
      3637
     ]
    },
    "raises_regex": {
     "line number": [
      3662,
      3664
     ]
    },
    "tuple": {
     "line number": [
      3659
     ]
    },
    "xarray.Dataset": {
     "line number": [
      3636
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      3651
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      3643
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_delitem": {
  "data": {
   "lineno": 2419,
   "symbols_in_volume": {
    "set": {
     "line number": [
      2421,
      2424,
      2427
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      2420
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_drop_index_labels": {
  "data": {
   "lineno": 1839,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1851,
      1856
     ]
    },
    "assert_identical": {
     "line number": [
      1845,
      1849
     ]
    },
    "numpy.random.randn": {
     "line number": [
      1840
     ]
    },
    "raises_regex": {
     "line number": [
      1855
     ]
    },
    "slice": {
     "line number": [
      1848
     ]
    },
    "xarray.Dataset": {
     "line number": [
      1840
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      1851
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_drop_variables": {
  "data": {
   "lineno": 1824,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1836
     ]
    },
    "assert_identical": {
     "line number": [
      1827,
      1832,
      1834
     ]
    },
    "dict": {
     "line number": [
      1829
     ]
    },
    "raises_regex": {
     "line number": [
      1836
     ]
    },
    "xarray.Dataset": {
     "line number": [
      1829
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      1825
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_dropna": {
  "data": {
   "lineno": 2974,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      3031
     ]
    },
    "ValueError": {
     "line number": [
      3027,
      3029
     ]
    },
    "assert_identical": {
     "line number": [
      2983,
      2987,
      2990,
      2994,
      2998,
      3001,
      3004,
      3007,
      3011,
      3014,
      3017,
      3021,
      3025
     ]
    },
    "numpy.nan": {
     "line number": [
      2976,
      2978
     ]
    },
    "numpy.random.randn": {
     "line number": [
      2975,
      2977
     ]
    },
    "raises_regex": {
     "line number": [
      3027,
      3029,
      3031
     ]
    },
    "slice": {
     "line number": [
      2981,
      2985,
      2992,
      2996
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2979
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_equals_and_identical": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": {
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      724,
      728,
      736
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_equals_failures": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": {
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      745
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_expand_dims": {
  "data": {
   "lineno": 1984,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      1999,
      2002,
      2012,
      2015
     ]
    },
    "numpy.linspace": {
     "line number": [
      1987,
      1988,
      1989,
      1995,
      1996,
      1997,
      2008,
      2009,
      2010
     ]
    },
    "numpy.random.randn": {
     "line number": [
      1985,
      1986
     ]
    },
    "xarray.Dataset": {
     "line number": [
      1985,
      1993,
      2006
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_expand_dims_error": {
  "data": {
   "lineno": 1966,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1975,
      1981
     ]
    },
    "numpy.linspace": {
     "line number": [
      1970,
      1971,
      1972
     ]
    },
    "numpy.random.randn": {
     "line number": [
      1967,
      1968,
      1969
     ]
    },
    "raises_regex": {
     "line number": [
      1975,
      1981
     ]
    },
    "xarray.Dataset": {
     "line number": [
      1967
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_fillna": {
  "data": {
   "lineno": 3034,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      3076
     ]
    },
    "assert_identical": {
     "line number": [
      3041,
      3044,
      3048,
      3051,
      3057,
      3060,
      3063,
      3066,
      3073,
      3081,
      3085,
      3092,
      3095
     ]
    },
    "dask.array": {
     "line number": [
      3105,
      3110
     ]
    },
    "dask.array.attrs": {
     "line number": [
      3108
     ]
    },
    "dask.array.fillna": {
     "line number": [
      3106
     ]
    },
    "numpy.nan": {
     "line number": [
      3035,
      3035,
      3069,
      3071
     ]
    },
    "raises_regex": {
     "line number": [
      3076
     ]
    },
    "range": {
     "line number": [
      3054,
      3054,
      3062,
      3088,
      3105
     ]
    },
    "xarray.DataArray": {
     "line number": [
      3054,
      3091,
      3105
     ]
    },
    "xarray.Dataset": {
     "line number": [
      3035,
      3040,
      3046,
      3071,
      3083,
      3088,
      3094,
      3100,
      3110
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_filter_by_attrs": {
  "data": {
   "lineno": 3777,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      3797
     ]
    },
    "bool": {
     "line number": [
      3789
     ]
    },
    "dict": {
     "line number": [
      3778,
      3779,
      3780,
      3784
     ]
    },
    "len": {
     "line number": [
      3801,
      3807,
      3812
     ]
    },
    "xarray.Dataset": {
     "line number": [
      3781
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_from_dataframe_non_unique_columns": {
  "data": {
   "lineno": 2815,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2819
     ]
    },
    "numpy.zeros": {
     "line number": [
      2817
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      2817
     ]
    },
    "raises_regex": {
     "line number": [
      2819
     ]
    },
    "xarray.Dataset.from_dataframe": {
     "line number": [
      2820
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_full_like": {
  "data": {
   "lineno": 3847,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      3861,
      3870
     ]
    },
    "bool": {
     "line number": [
      3864,
      3868,
      3869
     ]
    },
    "float": {
     "line number": [
      3860
     ]
    },
    "int": {
     "line number": [
      3859
     ]
    },
    "xarray.DataArray": {
     "line number": [
      3851,
      3852
     ]
    },
    "xarray.Dataset": {
     "line number": [
      3850
     ]
    },
    "xarray.core.common.full_like": {
     "line number": [
      3854,
      3864
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_get_index": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      456
     ]
    },
    "numpy.zeros": {
     "line number": [
      452
     ]
    },
    "pandas.Index": {
     "line number": [
      454,
      455
     ]
    },
    "xarray.Dataset": {
     "line number": [
      452
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      456
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_getitem": {
  "data": {
   "lineno": 2156,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      2160,
      2162
     ]
    },
    "assert_equal": {
     "line number": [
      2159,
      2167
     ]
    },
    "assert_identical": {
     "line number": [
      2174,
      2178
     ]
    },
    "dict": {
     "line number": [
      2176
     ]
    },
    "isinstance": {
     "line number": [
      2158
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2158,
      2170
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2166
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      2157
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      2160,
      2162
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_getitem_hashable": {
  "data": {
   "lineno": 2180,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      2186
     ]
    },
    "assert_identical": {
     "line number": [
      2185
     ]
    },
    "raises_regex": {
     "line number": [
      2186
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      2181
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_groupby": {
  "data": {
   "lineno": 2466,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      2480,
      2487
     ]
    },
    "len": {
     "line number": [
      2472
     ]
    },
    "list": {
     "line number": [
      2468
     ]
    },
    "numpy.random.randn": {
     "line number": [
      2467
     ]
    },
    "range": {
     "line number": [
      2470
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2467
     ]
    },
    "zip": {
     "line number": [
      2478
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_groupby.identity": {
  "data": {
   "lineno": 2482
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_groupby_errors": {
  "data": {
   "lineno": 2508,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      2510,
      2514
     ]
    },
    "ValueError": {
     "line number": [
      2512
     ]
    },
    "numpy.arange": {
     "line number": [
      2511
     ]
    },
    "raises_regex": {
     "line number": [
      2510,
      2512,
      2514
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      2509
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_groupby_iter": {
  "data": {
   "lineno": 2500,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      2504,
      2505,
      2506
     ]
    },
    "enumerate": {
     "line number": [
      2502
     ]
    },
    "list": {
     "line number": [
      2502
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      2501
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_groupby_math": {
  "data": {
   "lineno": 2539,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      2577,
      2579,
      2581
     ]
    },
    "ValueError": {
     "line number": [
      2573,
      2575,
      2586
     ]
    },
    "assert_equal": {
     "line number": [
      2568,
      2571
     ]
    },
    "assert_identical": {
     "line number": [
      2550,
      2553,
      2558,
      2561
     ]
    },
    "numpy.arange": {
     "line number": [
      2584
     ]
    },
    "numpy.zeros": {
     "line number": [
      2565
     ]
    },
    "pandas.date_range": {
     "line number": [
      2585
     ]
    },
    "raises_regex": {
     "line number": [
      2573,
      2575,
      2577,
      2579,
      2581,
      2586
     ]
    },
    "range": {
     "line number": [
      2564
     ]
    },
    "reorder_dims": {
     "line number": [
      2548,
      2550,
      2553,
      2556,
      2558,
      2561
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2564
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2584
     ]
    },
    "xarray.Variable": {
     "line number": [
      2565
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      2543
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_groupby_math.reorder_dims": {
  "data": {
   "lineno": 2540
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_groupby_math_virtual": {
  "data": {
   "lineno": 2589,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      2596
     ]
    },
    "pandas.date_range": {
     "line number": [
      2591
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2590,
      2594
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_groupby_nan": {
  "data": {
   "lineno": 2598,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      2604
     ]
    },
    "numpy.nan": {
     "line number": [
      2601
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2600,
      2603
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_groupby_order": {
  "data": {
   "lineno": 2606,
   "symbols_in_volume": {
    "list": {
     "line number": [
      2612,
      2614
     ]
    },
    "numpy.arange": {
     "line number": [
      2611
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2611
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2609
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_groupby_reduce": {
  "data": {
   "lineno": 2517,
   "symbols_in_volume": {
    "assert_allclose": {
     "line number": [
      2526,
      2529,
      2537
     ]
    },
    "numpy.random.randn": {
     "line number": [
      2518,
      2519,
      2520
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2518,
      2532
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_groupby_returns_new_type": {
  "data": {
   "lineno": 2489,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      2494,
      2498
     ]
    },
    "numpy.random.randn": {
     "line number": [
      2490
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2490
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_info": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": {
    "io.StringIO": {
     "line number": [
      203
     ]
    },
    "textwrap.dedent": {
     "line number": [
      206
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      198
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_ipython_key_completion": {
  "data": {
   "lineno": 3992,
   "symbols_in_volume": {
    "sorted": {
     "line number": [
      3999,
      3999,
      4006,
      4006,
      4015,
      4015,
      4022,
      4022,
      4028,
      4028,
      4035,
      4035
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      3993
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_isel": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      846
     ]
    },
    "list": {
     "line number": [
      865
     ]
    },
    "numpy.arange": {
     "line number": [
      829
     ]
    },
    "numpy.array": {
     "line number": [
      839
     ]
    },
    "numpy.nonzero": {
     "line number": [
      839
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      844
     ]
    },
    "slice": {
     "line number": [
      821,
      821,
      836,
      847,
      855,
      855,
      861
     ]
    },
    "xarray.core.pycompat.iteritems": {
     "line number": [
      837
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      820
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      846
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_isel_dataarray": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      1010,
      1013,
      1015,
      1071
     ]
    },
    "assert_identical": {
     "line number": [
      1004,
      1005,
      1022,
      1029,
      1036,
      1046,
      1048,
      1050
     ]
    },
    "numpy.arange": {
     "line number": [
      1001,
      1008,
      1019,
      1025,
      1027,
      1032,
      1039,
      1054
     ]
    },
    "numpy.random.randn": {
     "line number": [
      1002,
      1009,
      1042,
      1056
     ]
    },
    "raises_regex": {
     "line number": [
      1010,
      1013,
      1015,
      1070
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1001,
      1008,
      1019,
      1025,
      1032,
      1039,
      1054,
      1062
     ]
    },
    "xarray.Dataset": {
     "line number": [
      1069
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      999
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_isel_drop": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      1229,
      1233
     ]
    },
    "xarray.Dataset": {
     "line number": [
      1226,
      1227,
      1231
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_isel_fancy": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      938
     ]
    },
    "TypeError": {
     "line number": [
      942
     ]
    },
    "ValueError": {
     "line number": [
      963
     ]
    },
    "assert_array_equal": {
     "line number": [
      993,
      994,
      995
     ]
    },
    "assert_equal": {
     "line number": [
      992
     ]
    },
    "assert_identical": {
     "line number": [
      889,
      908,
      923,
      933,
      948,
      960,
      983,
      985
     ]
    },
    "len": {
     "line number": [
      878,
      885
     ]
    },
    "numpy.random.randn": {
     "line number": [
      892,
      893,
      894,
      910
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      930
     ]
    },
    "raises_regex": {
     "line number": [
      938,
      942,
      963
     ]
    },
    "slice": {
     "line number": [
      990
     ]
    },
    "xarray.DataArray": {
     "line number": [
      881,
      892,
      893,
      894,
      910,
      911,
      912,
      964,
      966
     ]
    },
    "xarray.Dataset": {
     "line number": [
      943,
      946,
      951,
      970
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      869
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_isel_points": {
  "data": {
   "lineno": 1235,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1263,
      1265
     ]
    },
    "ValueError": {
     "line number": [
      1257,
      1260,
      1267,
      1270
     ]
    },
    "assert_identical": {
     "line number": [
      1253,
      1277,
      1290
     ]
    },
    "len": {
     "line number": [
      1244
     ]
    },
    "numpy.array": {
     "line number": [
      1310
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1250
     ]
    },
    "pandas.Index": {
     "line number": [
      1303
     ]
    },
    "raises_regex": {
     "line number": [
      1257,
      1260,
      1263,
      1265,
      1267,
      1270
     ]
    },
    "slice": {
     "line number": [
      1266
     ]
    },
    "xarray.Dataset": {
     "line number": [
      1275,
      1280
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      1236
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_lazy_load": {
  "data": {
   "lineno": 2959,
   "symbols_in_volume": {
    "slice": {
     "line number": [
      2972
     ]
    },
    "xarray.open_dataset": {
     "line number": [
      2964
     ]
    },
    "xarray.tests.test_dataset.InaccessibleVariableDataStore": {
     "line number": [
      2960
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      2961
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      2965,
      2967
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_loc": {
  "data": {
   "lineno": 1444,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1449,
      1451
     ]
    },
    "assert_identical": {
     "line number": [
      1448
     ]
    },
    "dict": {
     "line number": [
      1447,
      1452
     ]
    },
    "raises_regex": {
     "line number": [
      1449
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      1445
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      1451
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_modify_inplace": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      505,
      510,
      512
     ]
    },
    "assert_identical": {
     "line number": [
      497,
      500
     ]
    },
    "isinstance": {
     "line number": [
      496
     ]
    },
    "numpy.arange": {
     "line number": [
      504
     ]
    },
    "numpy.array": {
     "line number": [
      509
     ]
    },
    "numpy.random.random": {
     "line number": [
      492,
      508
     ]
    },
    "pandas.Index": {
     "line number": [
      496
     ]
    },
    "xarray.Dataset": {
     "line number": [
      491,
      498
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      505,
      510,
      512
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_pickle": {
  "data": {
   "lineno": 2952,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      2955
     ]
    },
    "cPickle.dumps": {
     "line number": [
      2954
     ]
    },
    "cPickle.loads": {
     "line number": [
      2954
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      2953
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_properties": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": {
    "FutureWarning": {
     "line number": [
      414,
      416,
      420,
      422
     ]
    },
    "bool": {
     "line number": [
      423
     ]
    },
    "dict": {
     "line number": [
      412
     ]
    },
    "isinstance": {
     "line number": [
      410,
      411
     ]
    },
    "len": {
     "line number": [
      421,
      430,
      433,
      441
     ]
    },
    "list": {
     "line number": [
      405,
      415,
      417
     ]
    },
    "numpy.float32": {
     "line number": [
      444
     ]
    },
    "numpy.int64": {
     "line number": [
      443
     ]
    },
    "repr": {
     "line number": [
      419,
      434
     ]
    },
    "sorted": {
     "line number": [
      405
     ]
    },
    "type": {
     "line number": [
      412
     ]
    },
    "xarray.Dataset": {
     "line number": [
      443
     ]
    },
    "xarray.core.utils.Frozen": {
     "line number": [
      410
     ]
    },
    "xarray.core.utils.SortedKeysDict": {
     "line number": [
      411
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      402
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      414,
      416,
      420,
      422
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_quantile": {
  "data": {
   "lineno": 3433,
   "symbols_in_volume": {
    "all": {
     "line number": [
      3448
     ]
    },
    "assert_identical": {
     "line number": [
      3443
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      3435
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_rank": {
  "data": {
   "lineno": 3450,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      3464
     ]
    },
    "assert_equal": {
     "line number": [
      3459
     ]
    },
    "list": {
     "line number": [
      3455,
      3461,
      3461,
      3462,
      3462
     ]
    },
    "raises_regex": {
     "line number": [
      3464
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      3452
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_real_and_imag": {
  "data": {
   "lineno": 3758,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      3763,
      3766
     ]
    },
    "xarray.Dataset": {
     "line number": [
      3760,
      3762,
      3765
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce": {
  "data": {
   "lineno": 3263,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      3271,
      3273,
      3284
     ]
    },
    "assert_identical": {
     "line number": [
      3293
     ]
    },
    "dict": {
     "line number": [
      3269
     ]
    },
    "len": {
     "line number": [
      3266
     ]
    },
    "numpy.arange": {
     "line number": [
      3288
     ]
    },
    "numpy.array": {
     "line number": [
      3289
     ]
    },
    "numpy.nan": {
     "line number": [
      3289
     ]
    },
    "print": {
     "line number": [
      3281
     ]
    },
    "xarray.Dataset": {
     "line number": [
      3269,
      3287,
      3291
     ]
    },
    "xarray.core.pycompat.iteritems": {
     "line number": [
      3270
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      3264
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_argmin": {
  "data": {
   "lineno": 3399,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      3404,
      3407
     ]
    },
    "xarray.Dataset": {
     "line number": [
      3401,
      3402
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_bad_dim": {
  "data": {
   "lineno": 3295,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      3297
     ]
    },
    "raises_regex": {
     "line number": [
      3297
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      3296
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_cumsum_test_dims": {
  "data": {
   "lineno": 3300,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      3303,
      3306,
      3309
     ]
    },
    "getattr": {
     "line number": [
      3305,
      3308,
      3310,
      3319
     ]
    },
    "print": {
     "line number": [
      3320
     ]
    },
    "raises_regex": {
     "line number": [
      3303,
      3306,
      3309
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      3301
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_dtypes": {
  "data": {
   "lineno": 3365,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      3369,
      3374,
      3378
     ]
    },
    "numpy.array": {
     "line number": [
      3373
     ]
    },
    "xarray.Dataset": {
     "line number": [
      3367,
      3368,
      3372,
      3373,
      3376,
      3377
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_keep_attrs": {
  "data": {
   "lineno": 3380,
   "symbols_in_volume": {
    "xarray.core.pycompat.OrderedDict": {
     "line number": [
      3384
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      3381
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_non_numeric": {
  "data": {
   "lineno": 3323,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      3333,
      3334
     ]
    },
    "numpy.random.randint": {
     "line number": [
      3329
     ]
    },
    "numpy.str_": {
     "line number": [
      3329
     ]
    },
    "sorted": {
     "line number": [
      3327
     ]
    },
    "tuple": {
     "line number": [
      3328
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      3324,
      3325
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_only_one_axis": {
  "data": {
   "lineno": 3415,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      3427,
      3430
     ]
    },
    "assert_identical": {
     "line number": [
      3425
     ]
    },
    "raises_regex": {
     "line number": [
      3427,
      3430
     ]
    },
    "xarray.Dataset": {
     "line number": [
      3422,
      3423
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_only_one_axis.mean_only_one_axis": {
  "data": {
   "lineno": 3417,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      3419
     ]
    },
    "isinstance": {
     "line number": [
      3418
     ]
    },
    "xarray.core.pycompat.integer_types": {
     "line number": [
      3418
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_scalars": {
  "data": {
   "lineno": 3409,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      3413
     ]
    },
    "xarray.Dataset": {
     "line number": [
      3410,
      3411
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reduce_strings": {
  "data": {
   "lineno": 3337,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      3341,
      3345,
      3349,
      3353,
      3358,
      3363
     ]
    },
    "numpy.array": {
     "line number": [
      3356,
      3361
     ]
    },
    "xarray.Dataset": {
     "line number": [
      3338,
      3339,
      3343,
      3347,
      3351,
      3355,
      3356,
      3360,
      3361
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reindex": {
  "data": {
   "lineno": 1519,
   "symbols_in_volume": {
    "FutureWarning": {
     "line number": [
      1563
     ]
    },
    "ValueError": {
     "line number": [
      1534,
      1545,
      1547,
      1551
     ]
    },
    "assert_identical": {
     "line number": [
      1521,
      1525,
      1528,
      1531,
      1539,
      1544,
      1557,
      1565,
      1574
     ]
    },
    "numpy.arange": {
     "line number": [
      1562
     ]
    },
    "numpy.nan": {
     "line number": [
      1572
     ]
    },
    "numpy.random.randn": {
     "line number": [
      1560
     ]
    },
    "numpy.zeros": {
     "line number": [
      1568,
      1570
     ]
    },
    "raises_regex": {
     "line number": [
      1533,
      1545,
      1547,
      1551
     ]
    },
    "range": {
     "line number": [
      1561,
      1569,
      1569
     ]
    },
    "slice": {
     "line number": [
      1537
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1562
     ]
    },
    "xarray.Dataset": {
     "line number": [
      1560,
      1568,
      1570
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      1520
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      1563
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reindex_like": {
  "data": {
   "lineno": 1499,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      1505,
      1517
     ]
    },
    "float": {
     "line number": [
      1513
     ]
    },
    "list": {
     "line number": [
      1508
     ]
    },
    "numpy.nan": {
     "line number": [
      1510,
      1512,
      1515
     ]
    },
    "object": {
     "line number": [
      1511
     ]
    },
    "slice": {
     "line number": [
      1503,
      1503
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      1500
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reindex_method": {
  "data": {
   "lineno": 1598,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      1603,
      1607,
      1611,
      1615
     ]
    },
    "numpy.nan": {
     "line number": [
      1602,
      1606,
      1610
     ]
    },
    "xarray.Dataset": {
     "line number": [
      1599,
      1602,
      1606,
      1610,
      1613
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reindex_variables_copied": {
  "data": {
   "lineno": 1592,
   "symbols_in_volume": {
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      1593
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reindex_warning": {
  "data": {
   "lineno": 1576,
   "symbols_in_volume": {
    "FutureWarning": {
     "line number": [
      1579
     ]
    },
    "any": {
     "line number": [
      1583
     ]
    },
    "len": {
     "line number": [
      1590
     ]
    },
    "str": {
     "line number": [
      1584
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1581,
      1587
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      1577
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      1579,
      1588
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_rename": {
  "data": {
   "lineno": 1881,
   "symbols_in_volume": {
    "InaccessibleArray": {
     "line number": [
      1912
     ]
    },
    "ValueError": {
     "line number": [
      1904,
      1907
     ]
    },
    "assert_equal": {
     "line number": [
      1896
     ]
    },
    "list": {
     "line number": [
      1891
     ]
    },
    "raises_regex": {
     "line number": [
      1904,
      1907
     ]
    },
    "type": {
     "line number": [
      1899,
      1899
     ]
    },
    "xarray.Variable": {
     "line number": [
      1896
     ]
    },
    "xarray.core.pycompat.OrderedDict": {
     "line number": [
      1886
     ]
    },
    "xarray.core.pycompat.iteritems": {
     "line number": [
      1887,
      1890,
      1892
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      1882
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      1914
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_rename_inplace": {
  "data": {
   "lineno": 1933,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      1943
     ]
    },
    "assert_identical": {
     "line number": [
      1939
     ]
    },
    "pandas.date_range": {
     "line number": [
      1934
     ]
    },
    "xarray.Dataset": {
     "line number": [
      1935
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_rename_old_name": {
  "data": {
   "lineno": 1917,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1921
     ]
    },
    "raises_regex": {
     "line number": [
      1921
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      1919
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_rename_same_name": {
  "data": {
   "lineno": 1927,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      1931
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      1928
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reorder_levels": {
  "data": {
   "lineno": 2049,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2062
     ]
    },
    "assert_identical": {
     "line number": [
      2056,
      2059
     ]
    },
    "raises_regex": {
     "line number": [
      2062
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2053,
      2061
     ]
    },
    "xarray.tests.test_dataset.create_test_multiindex": {
     "line number": [
      2050
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_repr": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "len": {
     "line number": [
      112,
      137
     ]
    },
    "map": {
     "line number": [
      112
     ]
    },
    "max": {
     "line number": [
      112
     ]
    },
    "numpy.ones": {
     "line number": [
      125
     ]
    },
    "print": {
     "line number": [
      108,
      121,
      132
     ]
    },
    "repr": {
     "line number": [
      107,
      112,
      120,
      131,
      137
     ]
    },
    "textwrap.dedent": {
     "line number": [
      92,
      115,
      126
     ]
    },
    "xarray.Dataset": {
     "line number": [
      120,
      125,
      136
     ]
    },
    "xarray.set_options": {
     "line number": [
      111
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_repr_multiindex": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "pandas.MultiIndex.from_product": {
     "line number": [
      155
     ]
    },
    "print": {
     "line number": [
      151,
      169
     ]
    },
    "repr": {
     "line number": [
      150,
      168
     ]
    },
    "textwrap.dedent": {
     "line number": [
      141,
      159
     ]
    },
    "xarray.Dataset": {
     "line number": [
      158
     ]
    },
    "xarray.tests.test_dataset.create_test_multiindex": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_repr_period_index": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "pandas.period_range": {
     "line number": [
      174
     ]
    },
    "repr": {
     "line number": [
      178
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_resample_and_first": {
  "data": {
   "lineno": 2621,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      2638,
      2641
     ]
    },
    "assert_identical": {
     "line number": [
      2629
     ]
    },
    "getattr": {
     "line number": [
      2636
     ]
    },
    "method": {
     "line number": [
      2637,
      2639,
      2640
     ]
    },
    "numpy.mean": {
     "line number": [
      2639
     ]
    },
    "numpy.random.randn": {
     "line number": [
      2623,
      2624
     ]
    },
    "pandas.date_range": {
     "line number": [
      2622,
      2632
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2623
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_resample_by_last_discarding_attrs": {
  "data": {
   "lineno": 2671,
   "symbols_in_volume": {
    "numpy.random.randn": {
     "line number": [
      2673,
      2674
     ]
    },
    "pandas.date_range": {
     "line number": [
      2672
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2673
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_resample_by_mean_discarding_attrs": {
  "data": {
   "lineno": 2659,
   "symbols_in_volume": {
    "numpy.random.randn": {
     "line number": [
      2661,
      2662
     ]
    },
    "pandas.date_range": {
     "line number": [
      2660
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2661
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_resample_by_mean_with_keep_attrs": {
  "data": {
   "lineno": 2643,
   "symbols_in_volume": {
    "numpy.random.randn": {
     "line number": [
      2645,
      2646
     ]
    },
    "pandas.date_range": {
     "line number": [
      2644
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2645
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_resample_drop_nondim_coords": {
  "data": {
   "lineno": 2683,
   "symbols_in_volume": {
    "int": {
     "line number": [
      2690
     ]
    },
    "len": {
     "line number": [
      2690
     ]
    },
    "numpy.arange": {
     "line number": [
      2685,
      2686,
      2688,
      2690
     ]
    },
    "numpy.meshgrid": {
     "line number": [
      2689
     ]
    },
    "numpy.tile": {
     "line number": [
      2688
     ]
    },
    "pandas.date_range": {
     "line number": [
      2687
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2691,
      2694,
      2695,
      2696
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2697
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_resample_old_vs_new_api": {
  "data": {
   "lineno": 2713,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      2726
     ]
    },
    "assert_identical": {
     "line number": [
      2728
     ]
    },
    "getattr": {
     "line number": [
      2725
     ]
    },
    "method": {
     "line number": [
      2721,
      2725,
      2727
     ]
    },
    "numpy.random.randn": {
     "line number": [
      2716,
      2717
     ]
    },
    "pandas.date_range": {
     "line number": [
      2715
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2716
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      2726
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_reset_index": {
  "data": {
   "lineno": 2036,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      2044,
      2047
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2041
     ]
    },
    "xarray.tests.test_dataset.create_test_multiindex": {
     "line number": [
      2037
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_roll": {
  "data": {
   "lineno": 3745,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      3755
     ]
    },
    "assert_identical": {
     "line number": [
      3753
     ]
    },
    "list": {
     "line number": [
      3746,
      3751
     ]
    },
    "raises_regex": {
     "line number": [
      3755
     ]
    },
    "xarray.Dataset": {
     "line number": [
      3748,
      3752
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_sel": {
  "data": {
   "lineno": 1074,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1082,
      1085,
      1087,
      1090,
      1092,
      1094,
      1099,
      1100,
      1101,
      1103,
      1105
     ]
    },
    "numpy.arange": {
     "line number": [
      1097,
      1098
     ]
    },
    "pandas.Timedelta": {
     "line number": [
      1102,
      1104
     ]
    },
    "pandas.date_range": {
     "line number": [
      1084,
      1091
     ]
    },
    "pandas.to_timedelta": {
     "line number": [
      1097
     ]
    },
    "slice": {
     "line number": [
      1076,
      1077,
      1078,
      1079,
      1080,
      1081,
      1087,
      1088,
      1090,
      1092,
      1094,
      1100,
      1105,
      1106
     ]
    },
    "xarray.Dataset": {
     "line number": [
      1098
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      1075
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_sel_dataarray": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1113,
      1120,
      1129,
      1138,
      1140,
      1148,
      1155,
      1159,
      1170
     ]
    },
    "numpy.allclose": {
     "line number": [
      1171
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1111,
      1116,
      1123,
      1132,
      1144,
      1151,
      1164
     ]
    },
    "xarray.Variable": {
     "line number": [
      1118,
      1125
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      1109
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_sel_dataarray_mindex": {
  "data": {
   "lineno": 1173,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1201,
      1204
     ]
    },
    "assert_identical": {
     "line number": [
      1183,
      1189,
      1198
     ]
    },
    "list": {
     "line number": [
      1174
     ]
    },
    "numpy.arange": {
     "line number": [
      1179,
      1185,
      1192
     ]
    },
    "numpy.array": {
     "line number": [
      1207,
      1207
     ]
    },
    "numpy.random.rand": {
     "line number": [
      1176
     ]
    },
    "pandas.MultiIndex.from_product": {
     "line number": [
      1174
     ]
    },
    "raises_regex": {
     "line number": [
      1201,
      1204
     ]
    },
    "range": {
     "line number": [
      1177
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1179,
      1180,
      1185,
      1192,
      1194,
      1207
     ]
    },
    "xarray.Dataset": {
     "line number": [
      1176
     ]
    },
    "xarray.Variable": {
     "line number": [
      1186
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_sel_drop": {
  "data": {
   "lineno": 1210,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      1214,
      1218,
      1223
     ]
    },
    "xarray.Dataset": {
     "line number": [
      1211,
      1212,
      1216,
      1220,
      1221
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_sel_fancy": {
  "data": {
   "lineno": 1342,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      1413
     ]
    },
    "assert_array_equal": {
     "line number": [
      1409
     ]
    },
    "assert_identical": {
     "line number": [
      1357,
      1371,
      1385,
      1396,
      1403,
      1410,
      1411
     ]
    },
    "numpy.arange": {
     "line number": [
      1388
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1360,
      1362,
      1364,
      1373,
      1375,
      1377,
      1405,
      1406
     ]
    },
    "xarray.Dataset": {
     "line number": [
      1388,
      1391
     ]
    },
    "xarray.Variable": {
     "line number": [
      1351,
      1352,
      1353,
      1354,
      1355,
      1356,
      1367,
      1368,
      1369,
      1380,
      1381,
      1382,
      1392,
      1393,
      1394,
      1395,
      1400,
      1401
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      1343
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      1413
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_sel_method": {
  "data": {
   "lineno": 1416,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      1426
     ]
    },
    "NotImplementedError": {
     "line number": [
      1433
     ]
    },
    "TypeError": {
     "line number": [
      1436
     ]
    },
    "ValueError": {
     "line number": [
      1441
     ]
    },
    "assert_identical": {
     "line number": [
      1421,
      1424,
      1431
     ]
    },
    "numpy.pi": {
     "line number": [
      1427
     ]
    },
    "raises_regex": {
     "line number": [
      1433,
      1436,
      1441
     ]
    },
    "slice": {
     "line number": [
      1434
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      1417
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      1426
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_sel_points": {
  "data": {
   "lineno": 1312,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      1339
     ]
    },
    "assert_identical": {
     "line number": [
      1325,
      1330,
      1337
     ]
    },
    "numpy.arange": {
     "line number": [
      1327
     ]
    },
    "xarray.Dataset": {
     "line number": [
      1327,
      1328
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      1313
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      1339
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_selection_multiindex": {
  "data": {
   "lineno": 1454,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      1487,
      1489,
      1491,
      1493,
      1496
     ]
    },
    "pandas.MultiIndex.from_product": {
     "line number": [
      1455
     ]
    },
    "range": {
     "line number": [
      1457,
      1477,
      1478,
      1480,
      1481,
      1485
     ]
    },
    "slice": {
     "line number": [
      1480,
      1481
     ]
    },
    "test_sel": {
     "line number": [
      1474,
      1475,
      1476,
      1477,
      1478,
      1479,
      1480,
      1481,
      1482,
      1483,
      1485
     ]
    },
    "xarray.Dataset": {
     "line number": [
      1457
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_selection_multiindex.test_sel": {
  "data": {
   "lineno": 1460,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      1465,
      1470
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_set_index": {
  "data": {
   "lineno": 2017,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      2025,
      2028,
      2034
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2022,
      2032,
      2033
     ]
    },
    "xarray.tests.test_dataset.create_test_multiindex": {
     "line number": [
      2018
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_setattr_raises": {
  "data": {
   "lineno": 3768,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      3770,
      3772,
      3774
     ]
    },
    "raises_regex": {
     "line number": [
      3770,
      3772,
      3774
     ]
    },
    "xarray.Dataset": {
     "line number": [
      3769
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_setitem": {
  "data": {
   "lineno": 2260,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      2295
     ]
    },
    "ValueError": {
     "line number": [
      2274,
      2286,
      2289
     ]
    },
    "assert_equal": {
     "line number": [
      2293
     ]
    },
    "assert_identical": {
     "line number": [
      2267,
      2272,
      2280,
      2284
     ]
    },
    "numpy.random.randn": {
     "line number": [
      2262
     ]
    },
    "raises_regex": {
     "line number": [
      2274,
      2286,
      2289
     ]
    },
    "xarray.Variable": {
     "line number": [
      2262
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      2263
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      2295
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_setitem_align_new_indexes": {
  "data": {
   "lineno": 2330,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      2336
     ]
    },
    "numpy.nan": {
     "line number": [
      2334
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2332
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2331,
      2333
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_setitem_auto_align": {
  "data": {
   "lineno": 2307,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      2312,
      2316,
      2320,
      2324,
      2328
     ]
    },
    "numpy.arange": {
     "line number": [
      2310,
      2311
     ]
    },
    "numpy.nan": {
     "line number": [
      2319
     ]
    },
    "range": {
     "line number": [
      2309,
      2311,
      2314,
      2315,
      2315,
      2319,
      2323,
      2327
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2314,
      2318,
      2326
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2308,
      2311,
      2315,
      2319,
      2323,
      2327
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_setitem_both_non_unique_index": {
  "data": {
   "lineno": 2403,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      2412
     ]
    },
    "numpy.random.randint": {
     "line number": [
      2406
     ]
    },
    "range": {
     "line number": [
      2408,
      2408
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2407
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2409
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_setitem_multiindex_level": {
  "data": {
   "lineno": 2414,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2416
     ]
    },
    "raises_regex": {
     "line number": [
      2416
     ]
    },
    "range": {
     "line number": [
      2417
     ]
    },
    "xarray.tests.test_dataset.create_test_multiindex": {
     "line number": [
      2415
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_setitem_original_non_unique_index": {
  "data": {
   "lineno": 2385,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      2393,
      2397,
      2401
     ]
    },
    "list": {
     "line number": [
      2392,
      2396,
      2400
     ]
    },
    "numpy.arange": {
     "line number": [
      2387,
      2389
     ]
    },
    "range": {
     "line number": [
      2389,
      2392,
      2396,
      2400
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2387,
      2389
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_setitem_pandas": {
  "data": {
   "lineno": 2298,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      2305
     ]
    },
    "numpy.arange": {
     "line number": [
      2301
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_shift": {
  "data": {
   "lineno": 3734,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      3742
     ]
    },
    "assert_identical": {
     "line number": [
      3740
     ]
    },
    "list": {
     "line number": [
      3735
     ]
    },
    "numpy.nan": {
     "line number": [
      3739
     ]
    },
    "raises_regex": {
     "line number": [
      3742
     ]
    },
    "xarray.Dataset": {
     "line number": [
      3737,
      3739
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_slice_virtual_variable": {
  "data": {
   "lineno": 2253,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      2255,
      2257
     ]
    },
    "numpy.arange": {
     "line number": [
      2256
     ]
    },
    "xarray.Variable": {
     "line number": [
      2256,
      2258
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      2254
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_sortby": {
  "data": {
   "lineno": 3890,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      3938
     ]
    },
    "ValueError": {
     "line number": [
      3941
     ]
    },
    "assert_equal": {
     "line number": [
      3912,
      3916,
      3921,
      3929,
      3935,
      3950,
      3967,
      3972,
      3976
     ]
    },
    "distutils.version.LooseVersion": {
     "line number": [
      3945,
      3945
     ]
    },
    "numpy.__version__": {
     "line number": [
      3945
     ]
    },
    "pandas.MultiIndex.from_tuples": {
     "line number": [
      3954,
      3960
     ]
    },
    "reversed": {
     "line number": [
      3960
     ]
    },
    "str": {
     "line number": [
      3943
     ]
    },
    "tuple": {
     "line number": [
      3960
     ]
    },
    "xarray.DataArray": {
     "line number": [
      3891,
      3894,
      3897,
      3900,
      3903,
      3906,
      3910,
      3919,
      3926,
      3927,
      3933,
      3955,
      3957,
      3962,
      3965
     ]
    },
    "xarray.Dataset": {
     "line number": [
      3891,
      3897,
      3903,
      3955,
      3962
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      3938,
      3941,
      3946
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_squeeze": {
  "data": {
   "lineno": 2430,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2440
     ]
    },
    "assert_identical": {
     "line number": [
      2438
     ]
    },
    "dict": {
     "line number": [
      2435
     ]
    },
    "get_args": {
     "line number": [
      2435
     ]
    },
    "raises_regex": {
     "line number": [
      2440
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2431,
      2435
     ]
    },
    "xarray.core.pycompat.iteritems": {
     "line number": [
      2436
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_squeeze.get_args": {
  "data": {
   "lineno": 2433,
   "symbols_in_volume": {
    "set": {
     "line number": [
      2434,
      2434
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_squeeze_drop": {
  "data": {
   "lineno": 2443,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      2447,
      2451,
      2456,
      2460,
      2464
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2444,
      2445,
      2449,
      2453,
      2454,
      2458,
      2462
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_stack": {
  "data": {
   "lineno": 2065,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      2076,
      2084
     ]
    },
    "pandas.MultiIndex.from_product": {
     "line number": [
      2070,
      2078
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2066,
      2072,
      2080
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_stack_unstack": {
  "data": {
   "lineno": 2103,
   "symbols_in_volume": {
    "xarray.Dataset": {
     "line number": [
      2104
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_swap_dims": {
  "data": {
   "lineno": 1945,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1961,
      1963
     ]
    },
    "assert_identical": {
     "line number": [
      1950,
      1955,
      1959
     ]
    },
    "isinstance": {
     "line number": [
      1951,
      1952
     ]
    },
    "list": {
     "line number": [
      1946,
      1948
     ]
    },
    "raises_regex": {
     "line number": [
      1961,
      1963
     ]
    },
    "xarray.Dataset": {
     "line number": [
      1946,
      1947
     ]
    },
    "xarray.IndexVariable": {
     "line number": [
      1951
     ]
    },
    "xarray.Variable": {
     "line number": [
      1952
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_time_season": {
  "data": {
   "lineno": 2248,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      2251
     ]
    },
    "pandas.date_range": {
     "line number": [
      2249
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2249
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_to_and_from_dataframe": {
  "data": {
   "lineno": 2744,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      2762,
      2776,
      2783,
      2788,
      2795
     ]
    },
    "list": {
     "line number": [
      2747,
      2767
     ]
    },
    "numpy.array": {
     "line number": [
      2751,
      2801,
      2808,
      2809
     ]
    },
    "numpy.random.randn": {
     "line number": [
      2745,
      2746,
      2765
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      2751,
      2771,
      2780,
      2785,
      2791,
      2804,
      2812
     ]
    },
    "pandas.Index": {
     "line number": [
      2752,
      2800,
      2804
     ]
    },
    "pandas.MultiIndex.from_arrays": {
     "line number": [
      2768,
      2811
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2793
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2748,
      2766,
      2782,
      2787,
      2793,
      2800,
      2808
     ]
    },
    "xarray.Dataset.from_dataframe": {
     "line number": [
      2762,
      2777,
      2781,
      2786,
      2792
     ]
    },
    "xarray.core.pycompat.OrderedDict": {
     "line number": [
      2748
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_to_and_from_dict": {
  "data": {
   "lineno": 2842,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2902
     ]
    },
    "assert_identical": {
     "line number": [
      2874,
      2880,
      2890,
      2896
     ]
    },
    "list": {
     "line number": [
      2852
     ]
    },
    "numpy.random.randn": {
     "line number": [
      2850,
      2851
     ]
    },
    "raises_regex": {
     "line number": [
      2902
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2853
     ]
    },
    "xarray.Dataset.from_dict": {
     "line number": [
      2874,
      2878,
      2890,
      2896,
      2904
     ]
    },
    "xarray.core.pycompat.OrderedDict": {
     "line number": [
      2853
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_to_and_from_dict_with_nan_nat": {
  "data": {
   "lineno": 2918,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      2931
     ]
    },
    "numpy.nan": {
     "line number": [
      2921,
      2923
     ]
    },
    "numpy.random.randn": {
     "line number": [
      2919,
      2920
     ]
    },
    "pandas.Series": {
     "line number": [
      2922
     ]
    },
    "pandas.date_range": {
     "line number": [
      2922
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2926
     ]
    },
    "xarray.Dataset.from_dict": {
     "line number": [
      2930
     ]
    },
    "xarray.core.pycompat.OrderedDict": {
     "line number": [
      2926
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_to_and_from_dict_with_time_dim": {
  "data": {
   "lineno": 2906,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      2916
     ]
    },
    "numpy.random.randn": {
     "line number": [
      2907,
      2908
     ]
    },
    "pandas.date_range": {
     "line number": [
      2909
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2911
     ]
    },
    "xarray.Dataset.from_dict": {
     "line number": [
      2915
     ]
    },
    "xarray.core.pycompat.OrderedDict": {
     "line number": [
      2911
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_to_array": {
  "data": {
   "lineno": 2730,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      2738,
      2742
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2736
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2731
     ]
    },
    "xarray.core.pycompat.OrderedDict": {
     "line number": [
      2731
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_to_dict_with_numpy_attrs": {
  "data": {
   "lineno": 2933,
   "symbols_in_volume": {
    "list": {
     "line number": [
      2937
     ]
    },
    "numpy.array": {
     "line number": [
      2939
     ]
    },
    "numpy.asscalar": {
     "line number": [
      2944
     ]
    },
    "numpy.float64": {
     "line number": [
      2938
     ]
    },
    "numpy.random.randn": {
     "line number": [
      2935,
      2936
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2941
     ]
    },
    "xarray.core.pycompat.OrderedDict": {
     "line number": [
      2941
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_unary_ops": {
  "data": {
   "lineno": 3520,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      3534,
      3536
     ]
    },
    "abs": {
     "line number": [
      3523,
      3523
     ]
    },
    "assert_identical": {
     "line number": [
      3523,
      3524,
      3529,
      3531
     ]
    },
    "func": {
     "line number": [
      3529
     ]
    },
    "int": {
     "line number": [
      3528
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      3534,
      3536
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_unicode_data": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "repr": {
     "line number": [
      183
     ]
    },
    "textwrap.dedent": {
     "line number": [
      185
     ]
    },
    "xarray.Dataset": {
     "line number": [
      182
     ]
    },
    "xarray.core.pycompat.unicode_type": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_unstack": {
  "data": {
   "lineno": 2086,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      2094
     ]
    },
    "pandas.MultiIndex.from_product": {
     "line number": [
      2087
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2089,
      2090
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_unstack_errors": {
  "data": {
   "lineno": 2096,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2098,
      2100
     ]
    },
    "raises_regex": {
     "line number": [
      2098,
      2100
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2097
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_update": {
  "data": {
   "lineno": 2114,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      2120,
      2125,
      2130,
      2135
     ]
    },
    "numpy.arange": {
     "line number": [
      2117
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2132
     ]
    },
    "xarray.Variable": {
     "line number": [
      2117
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      2115
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_update_auto_align": {
  "data": {
   "lineno": 2137,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2144
     ]
    },
    "assert_identical": {
     "line number": [
      2147,
      2154
     ]
    },
    "numpy.nan": {
     "line number": [
      2140,
      2152
     ]
    },
    "raises_regex": {
     "line number": [
      2144
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2138,
      2140,
      2146,
      2150,
      2152
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_variable": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      487
     ]
    },
    "assert_array_equal": {
     "line number": [
      485
     ]
    },
    "list": {
     "line number": [
      484
     ]
    },
    "numpy.random.random": {
     "line number": [
      478
     ]
    },
    "xarray.Dataset": {
     "line number": [
      477
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      487
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_variable_indexing": {
  "data": {
   "lineno": 1811,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1816,
      1817,
      1818,
      1819,
      1820,
      1821,
      1822
     ]
    },
    "range": {
     "line number": [
      1821,
      1821
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      1812
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_virtual_variable_multiindex": {
  "data": {
   "lineno": 2229,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      2234,
      2243,
      2246
     ]
    },
    "pandas.MultiIndex.from_arrays": {
     "line number": [
      2238
     ]
    },
    "pandas.date_range": {
     "line number": [
      2237
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2232,
      2241
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2240
     ]
    },
    "xarray.tests.test_dataset.create_test_multiindex": {
     "line number": [
      2231
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_virtual_variable_same_name": {
  "data": {
   "lineno": 2221,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      2227
     ]
    },
    "pandas.date_range": {
     "line number": [
      2223
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2226
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2224
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_virtual_variables_default_coords": {
  "data": {
   "lineno": 2189,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      2193,
      2198
     ]
    },
    "isinstance": {
     "line number": [
      2194
     ]
    },
    "range": {
     "line number": [
      2190,
      2191,
      2197
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2191
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2190
     ]
    },
    "xarray.IndexVariable": {
     "line number": [
      2194
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_virtual_variables_time": {
  "data": {
   "lineno": 2200,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      2206,
      2208,
      2210,
      2211
     ]
    },
    "assert_equal": {
     "line number": [
      2216
     ]
    },
    "numpy.arange": {
     "line number": [
      2203,
      2210,
      2212
     ]
    },
    "numpy.sin": {
     "line number": [
      2211,
      2212
     ]
    },
    "pandas.date_range": {
     "line number": [
      2218
     ]
    },
    "xarray.DataArray": {
     "line number": [
      2203
     ]
    },
    "xarray.Dataset": {
     "line number": [
      2214,
      2218
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      2202
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_where": {
  "data": {
   "lineno": 3116,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      3120,
      3123,
      3126,
      3129,
      3134,
      3140,
      3148
     ]
    },
    "dask.array": {
     "line number": [
      3159,
      3164
     ]
    },
    "dask.array.attrs": {
     "line number": [
      3162
     ]
    },
    "dask.array.values": {
     "line number": [
      3160
     ]
    },
    "dask.array.where": {
     "line number": [
      3160
     ]
    },
    "numpy.nan": {
     "line number": [
      3118,
      3118,
      3132,
      3138,
      3146
     ]
    },
    "range": {
     "line number": [
      3117,
      3143,
      3159
     ]
    },
    "xarray.DataArray": {
     "line number": [
      3159
     ]
    },
    "xarray.Dataset": {
     "line number": [
      3117,
      3118,
      3137,
      3138,
      3143,
      3144,
      3164
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_where_drop": {
  "data": {
   "lineno": 3186,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      3206
     ]
    },
    "assert_identical": {
     "line number": [
      3194,
      3201,
      3204,
      3215,
      3222,
      3228,
      3238,
      3246
     ]
    },
    "numpy.arange": {
     "line number": [
      3207
     ]
    },
    "numpy.array": {
     "line number": [
      3210,
      3211,
      3212,
      3212
     ]
    },
    "numpy.e": {
     "line number": [
      3233,
      3233
     ]
    },
    "numpy.nan": {
     "line number": [
      3219,
      3220,
      3226,
      3243
     ]
    },
    "numpy.pi": {
     "line number": [
      3233,
      3233,
      3233,
      3236
     ]
    },
    "raises_regex": {
     "line number": [
      3206
     ]
    },
    "range": {
     "line number": [
      3191,
      3191,
      3192,
      3192
     ]
    },
    "xarray.DataArray": {
     "line number": [
      3191,
      3192,
      3210,
      3212
     ]
    },
    "xarray.Dataset": {
     "line number": [
      3197,
      3198,
      3218,
      3219,
      3225,
      3226,
      3231,
      3234,
      3241,
      3243
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_where_drop_empty": {
  "data": {
   "lineno": 3248,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      3255
     ]
    },
    "numpy.random.rand": {
     "line number": [
      3250
     ]
    },
    "numpy.zeros": {
     "line number": [
      3252,
      3254
     ]
    },
    "xarray.DataArray": {
     "line number": [
      3250,
      3252,
      3254
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_where_drop_no_indexes": {
  "data": {
   "lineno": 3257,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      3261
     ]
    },
    "xarray.Dataset": {
     "line number": [
      3258,
      3259
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.TestDataset.test_where_other": {
  "data": {
   "lineno": 3170,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      3177,
      3180,
      3183
     ]
    },
    "assert_equal": {
     "line number": [
      3174
     ]
    },
    "int": {
     "line number": [
      3175
     ]
    },
    "raises_regex": {
     "line number": [
      3177,
      3180,
      3183
     ]
    },
    "range": {
     "line number": [
      3171,
      3171,
      3172
     ]
    },
    "slice": {
     "line number": [
      3181
     ]
    },
    "xarray.Dataset": {
     "line number": [
      3171,
      3172
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.Variable": {
  "data": {
   "shadows": "xarray.Variable"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.align": {
  "data": {
   "shadows": "xarray.align"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.backends": {
  "data": {
   "shadows": "xarray.backends"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.broadcast": {
  "data": {
   "shadows": "xarray.broadcast"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.create_test_data": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "all": {
     "line number": [
      54
     ]
    },
    "list": {
     "line number": [
      47
     ]
    },
    "numpy.arange": {
     "line number": [
      46
     ]
    },
    "numpy.array": {
     "line number": [
      51
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      38
     ]
    },
    "pandas.date_range": {
     "line number": [
      45
     ]
    },
    "sorted": {
     "line number": [
      48
     ]
    },
    "tuple": {
     "line number": [
      49
     ]
    },
    "xarray.Dataset": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.create_test_multiindex": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "pandas.MultiIndex.from_product": {
     "line number": [
      59
     ]
    },
    "xarray.Dataset": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.data_set": {
  "data": {
   "lineno": 4040,
   "symbols_in_volume": {
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      4042
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      4040
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.ds": {
  "data": {
   "lineno": 4123,
   "symbols_in_volume": {
    "numpy.linspace": {
     "line number": [
      4128,
      4129,
      4137,
      4138
     ]
    },
    "numpy.random.randn": {
     "line number": [
      4126,
      4127,
      4134,
      4135,
      4136
     ]
    },
    "range": {
     "line number": [
      4131,
      4140
     ]
    },
    "xarray.Dataset": {
     "line number": [
      4126,
      4134
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      4123
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.full_like": {
  "data": {
   "shadows": "xarray.core.common.full_like"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.indexing": {
  "data": {
   "shadows": "xarray.core.indexing"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.integer_types": {
  "data": {
   "shadows": "xarray.core.pycompat.integer_types"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.iteritems": {
  "data": {
   "shadows": "xarray.core.pycompat.iteritems"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.open_dataset": {
  "data": {
   "shadows": "xarray.open_dataset"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.set_options": {
  "data": {
   "shadows": "xarray.set_options"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.test_dir_expected_attrs": {
  "data": {
   "lineno": 4102,
   "symbols_in_volume": {
    "dir": {
     "line number": [
      4106
     ]
    },
    "set": {
     "line number": [
      4107
     ]
    },
    "xarray.tests.test_dataset.data_set": {
     "line number": [
      4106
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_dir_non_string": {
  "data": {
   "lineno": 4110,
   "symbols_in_volume": {
    "dir": {
     "line number": [
      4113
     ]
    },
    "xarray.tests.test_dataset.data_set": {
     "line number": [
      4112,
      4113
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_dir_unicode": {
  "data": {
   "lineno": 4117,
   "symbols_in_volume": {
    "dir": {
     "line number": [
      4119
     ]
    },
    "xarray.tests.test_dataset.data_set": {
     "line number": [
      4118,
      4119
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_isin": {
  "data": {
   "lineno": 4045,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      4067
     ]
    },
    "numpy.array": {
     "line number": [
      4047
     ]
    },
    "xarray.DataArray": {
     "line number": [
      4048
     ]
    },
    "xarray.Dataset": {
     "line number": [
      4051,
      4059
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      4045
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_isin_dask": {
  "data": {
   "lineno": 4070,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      4093
     ]
    },
    "numpy.array": {
     "line number": [
      4073
     ]
    },
    "xarray.DataArray": {
     "line number": [
      4074
     ]
    },
    "xarray.Dataset": {
     "line number": [
      4077,
      4085
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      4070,
      4071
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_isin_dataset": {
  "data": {
   "lineno": 4096,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      4098
     ]
    },
    "xarray.Dataset": {
     "line number": [
      4097
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      4098
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_raise_no_warning_for_nan_in_binary_ops": {
  "data": {
   "lineno": 4263,
   "symbols_in_volume": {
    "len": {
     "line number": [
      4266
     ]
    },
    "numpy.NaN": {
     "line number": [
      4265
     ]
    },
    "xarray.Dataset": {
     "line number": [
      4265
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      4264
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_rolling_construct": {
  "data": {
   "lineno": 4205,
   "symbols_in_volume": {
    "numpy.linspace": {
     "line number": [
      4209
     ]
    },
    "numpy.random.randn": {
     "line number": [
      4208,
      4208
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      4216,
      4218,
      4222,
      4224
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      4208
     ]
    },
    "xarray.Dataset.from_dataframe": {
     "line number": [
      4211
     ]
    },
    "xarray.tests.test_dataset.ds": {
     "line number": [
      4211,
      4213
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      4205,
      4206
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_rolling_pandas_compat": {
  "data": {
   "lineno": 4185,
   "symbols_in_volume": {
    "numpy.linspace": {
     "line number": [
      4190
     ]
    },
    "numpy.random.randn": {
     "line number": [
      4189,
      4189
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      4201,
      4202
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      4189
     ]
    },
    "xarray.Dataset.from_dataframe": {
     "line number": [
      4191
     ]
    },
    "xarray.tests.test_dataset.ds": {
     "line number": [
      4191,
      4198
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      4185,
      4186,
      4187
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_rolling_properties": {
  "data": {
   "lineno": 4143,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      4154
     ]
    },
    "ValueError": {
     "line number": [
      4145,
      4148,
      4151
     ]
    },
    "str": {
     "line number": [
      4147,
      4150,
      4153,
      4156
     ]
    },
    "xarray.tests.test_dataset.ds": {
     "line number": [
      4146,
      4149,
      4152,
      4155
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      4145,
      4148,
      4151,
      4154
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_rolling_reduce": {
  "data": {
   "lineno": 4232,
   "symbols_in_volume": {
    "assert_allclose": {
     "line number": [
      4253
     ]
    },
    "getattr": {
     "line number": [
      4251,
      4252
     ]
    },
    "list": {
     "line number": [
      4256,
      4256
     ]
    },
    "numpy": {
     "line number": [
      4251
     ]
    },
    "xarray.tests.test_dataset.ds": {
     "line number": [
      4247,
      4254,
      4256,
      4259
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      4245,
      4232,
      4233,
      4234,
      4235,
      4236,
      4237
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.test_rolling_wrapped_bottleneck": {
  "data": {
   "lineno": 4159,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      4177
     ]
    },
    "assert_equal": {
     "line number": [
      4182
     ]
    },
    "getattr": {
     "line number": [
      4171,
      4175,
      4181
     ]
    },
    "xarray.tests.test_dataset.ds": {
     "line number": [
      4168,
      4173,
      4175,
      4180,
      4182
     ]
    },
    "xarray.tests.test_dataset.pytest": {
     "line number": [
      4165,
      4159,
      4161,
      4162,
      4163
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dataset.unicode_type": {
  "data": {
   "shadows": "xarray.core.pycompat.unicode_type"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.utils": {
  "data": {
   "shadows": "xarray.core.utils"
  },
  "type": "import"
 },
 "xarray.tests.test_dataset.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed": {
  "data": {
   "symbols_in_volume": {
    "xarray.tests.test_distributed.ENGINES": {
     "line number": [
      37,
      39,
      41
     ]
    },
    "xarray.tests.test_distributed.pytest": {
     "line number": [
      10,
      11,
      32
     ]
    }
   }
  },
  "type": "module"
 },
 "xarray.tests.test_distributed.Client": {
  "data": {
   "shadows": "dask.distributed.Client"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.CombinedLock": {
  "data": {
   "shadows": "xarray.backends.common.CombinedLock"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.ENGINES": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "xarray.tests.test_distributed.HDF5_LOCK": {
  "data": {
   "shadows": "xarray.backends.common.HDF5_LOCK"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.Lock": {
  "data": {
   "shadows": "dask.distributed.Lock"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.NC_FORMATS": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "xarray.tests.test_distributed.ON_WINDOWS": {
  "data": {
   "shadows": "xarray.tests.test_backends.ON_WINDOWS"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.TEST_FORMATS": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "xarray.tests.test_distributed.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.array": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.cluster": {
  "data": {
   "shadows": "distributed.utils_test.cluster"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.create_test_data": {
  "data": {
   "shadows": "xarray.tests.test_dataset.create_test_data"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.create_tmp_file": {
  "data": {
   "shadows": "xarray.tests.test_backends.create_tmp_file"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.da": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "xarray.tests.test_distributed.dask": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "xarray.tests.test_distributed.distributed": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "xarray.tests.test_distributed.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.futures_of": {
  "data": {
   "shadows": "distributed.client.futures_of"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.gen_cluster": {
  "data": {
   "shadows": "distributed.utils_test.gen_cluster"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.loop": {
  "data": {
   "shadows": "distributed.utils_test.loop"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "xarray.tests.test_distributed.test_async": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "assert_allclose": {
     "line number": [
      164
     ]
    },
    "distributed.client.futures_of": {
     "line number": [
      158,
      159
     ]
    },
    "distributed.utils_test.gen_cluster": {
     "line number": [
      141
     ]
    },
    "len": {
     "line number": [
      156,
      156
     ]
    },
    "str": {
     "line number": [
      151
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      143
     ]
    },
    "xarray.tests.test_distributed.dask": {
     "line number": [
      144,
      146,
      147,
      148,
      153,
      154,
      155,
      163
     ]
    },
    "xarray.tests.test_distributed.distributed": {
     "line number": [
      139
     ]
    },
    "xarray.tests.test_distributed.pytest": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_distributed.test_dask_distributed_netcdf_integration_test_not_implemented": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      120
     ]
    },
    "dask.distributed.Client": {
     "line number": [
      116
     ]
    },
    "distributed.utils_test.cluster": {
     "line number": [
      115
     ]
    },
    "distributed.utils_test.loop": {
     "line number": [
      116
     ]
    },
    "raises_regex": {
     "line number": [
      120
     ]
    },
    "xarray.tests.test_backends.ON_WINDOWS": {
     "line number": [
      114
     ]
    },
    "xarray.tests.test_backends.create_tmp_file": {
     "line number": [
      114
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      118
     ]
    },
    "xarray.tests.test_distributed.pytest": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_distributed.test_dask_distributed_netcdf_roundtrip": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "assert_allclose": {
     "line number": [
      75
     ]
    },
    "dask.distributed.Client": {
     "line number": [
      64
     ]
    },
    "distributed.utils_test.cluster": {
     "line number": [
      63
     ]
    },
    "distributed.utils_test.loop": {
     "line number": [
      64
     ]
    },
    "isinstance": {
     "line number": [
      73
     ]
    },
    "xarray.open_dataset": {
     "line number": [
      69
     ]
    },
    "xarray.tests.test_backends.ON_WINDOWS": {
     "line number": [
      62
     ]
    },
    "xarray.tests.test_backends.create_tmp_file": {
     "line number": [
      62
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      66
     ]
    },
    "xarray.tests.test_distributed.TEST_FORMATS": {
     "line number": [
      54
     ]
    },
    "xarray.tests.test_distributed.da": {
     "line number": [
      73
     ]
    },
    "xarray.tests.test_distributed.pytest": {
     "line number": [
      50,
      52,
      53,
      54
     ]
    },
    "xarray.tests.test_distributed.sys": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_distributed.test_dask_distributed_read_netcdf_integration_test": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "assert_allclose": {
     "line number": [
      107
     ]
    },
    "dask.distributed.Client": {
     "line number": [
      96
     ]
    },
    "distributed.utils_test.cluster": {
     "line number": [
      95
     ]
    },
    "distributed.utils_test.loop": {
     "line number": [
      96
     ]
    },
    "isinstance": {
     "line number": [
      105
     ]
    },
    "xarray.open_dataset": {
     "line number": [
      101
     ]
    },
    "xarray.tests.test_backends.ON_WINDOWS": {
     "line number": [
      94
     ]
    },
    "xarray.tests.test_backends.create_tmp_file": {
     "line number": [
      94
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      98
     ]
    },
    "xarray.tests.test_distributed.ENGINES": {
     "line number": [
      80
     ]
    },
    "xarray.tests.test_distributed.NC_FORMATS": {
     "line number": [
      89
     ]
    },
    "xarray.tests.test_distributed.TEST_FORMATS": {
     "line number": [
      82
     ]
    },
    "xarray.tests.test_distributed.da": {
     "line number": [
      105
     ]
    },
    "xarray.tests.test_distributed.pytest": {
     "line number": [
      87,
      90,
      78,
      80,
      81,
      82
     ]
    },
    "xarray.tests.test_distributed.sys": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_distributed.test_dask_distributed_zarr_integration_test": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "assert_allclose": {
     "line number": [
      136
     ]
    },
    "dask.distributed.Client": {
     "line number": [
      128
     ]
    },
    "distributed.utils_test.cluster": {
     "line number": [
      127
     ]
    },
    "distributed.utils_test.loop": {
     "line number": [
      128
     ]
    },
    "isinstance": {
     "line number": [
      134
     ]
    },
    "xarray.open_zarr": {
     "line number": [
      133
     ]
    },
    "xarray.tests.test_backends.ON_WINDOWS": {
     "line number": [
      130
     ]
    },
    "xarray.tests.test_backends.create_tmp_file": {
     "line number": [
      130
     ]
    },
    "xarray.tests.test_dataset.create_test_data": {
     "line number": [
      129
     ]
    },
    "xarray.tests.test_distributed.da": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_distributed.test_hdf5_lock": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      170
     ]
    },
    "xarray.backends.common.HDF5_LOCK": {
     "line number": [
      170
     ]
    },
    "xarray.tests.test_distributed.dask": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_distributed.test_serializable_locks": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "dask.distributed.Lock": {
     "line number": [
      180,
      180,
      182
     ]
    },
    "distributed.utils_test.gen_cluster": {
     "line number": [
      173
     ]
    },
    "list": {
     "line number": [
      184
     ]
    },
    "range": {
     "line number": [
      184
     ]
    },
    "type": {
     "line number": [
      188,
      188
     ]
    },
    "xarray.backends.common.CombinedLock": {
     "line number": [
      181,
      182
     ]
    },
    "xarray.backends.common.HDF5_LOCK": {
     "line number": [
      180,
      181,
      182
     ]
    },
    "xarray.tests.test_distributed.pickle": {
     "line number": [
      187,
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_distributed.test_serializable_locks.f": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "xarray.tests.test_distributed.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_dtypes": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_dtypes.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_dtypes.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_dtypes.dtypes": {
  "data": {
   "shadows": "xarray.core.dtypes"
  },
  "type": "import"
 },
 "xarray.tests.test_dtypes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_dtypes.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_dtypes.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_dtypes.test_inf": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "numpy.inf": {
     "line number": [
      49
     ]
    },
    "xarray.core.dtypes.INF": {
     "line number": [
      51
     ]
    },
    "xarray.core.dtypes.NINF": {
     "line number": [
      52
     ]
    },
    "xarray.tests.test_dtypes.pytest": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dtypes.test_result_type": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "numpy.bool": {
     "line number": [
      10,
      10,
      11
     ]
    },
    "numpy.bytes_": {
     "line number": [
      16
     ]
    },
    "numpy.float32": {
     "line number": [
      12,
      13
     ]
    },
    "numpy.float64": {
     "line number": [
      12,
      12
     ]
    },
    "numpy.int64": {
     "line number": [
      14
     ]
    },
    "numpy.object_": {
     "line number": [
      11,
      13,
      14,
      16
     ]
    },
    "numpy.string_": {
     "line number": [
      11,
      13
     ]
    },
    "numpy.unicode_": {
     "line number": [
      14,
      15,
      15,
      15,
      16
     ]
    },
    "xarray.core.dtypes.result_type": {
     "line number": [
      19
     ]
    },
    "xarray.tests.test_dtypes.pytest": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dtypes.test_result_type_dask_array": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      37
     ]
    },
    "numpy.array": {
     "line number": [
      45
     ]
    },
    "numpy.float32": {
     "line number": [
      45
     ]
    },
    "numpy.float64": {
     "line number": [
      36,
      41,
      46
     ]
    },
    "xarray.core.dtypes.result_type": {
     "line number": [
      40,
      45
     ]
    },
    "xarray.tests.test_dtypes.pytest": {
     "line number": [
      30,
      31,
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dtypes.test_result_type_dask_array.error": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_dtypes.test_result_type_scalar": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      24
     ]
    },
    "numpy.float32": {
     "line number": [
      24,
      25
     ]
    },
    "numpy.nan": {
     "line number": [
      24
     ]
    },
    "xarray.core.dtypes.result_type": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_duck_array_ops.DataArray": {
  "data": {
   "shadows": "xarray.DataArray"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.TestArrayNotNullEquiv": {
  "data": {
   "lineno": 106
  },
  "type": "class"
 },
 "xarray.tests.test_duck_array_ops.TestArrayNotNullEquiv.test_equal": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      108,
      108,
      109,
      109,
      110,
      110
     ]
    },
    "numpy.nan": {
     "line number": [
      109,
      109,
      110,
      110,
      110,
      110
     ]
    },
    "xarray.core.duck_array_ops.array_notnull_equiv": {
     "line number": [
      113
     ]
    },
    "xarray.tests.test_duck_array_ops.pytest": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.TestArrayNotNullEquiv.test_some_not_equal": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      116,
      117
     ]
    },
    "numpy.nan": {
     "line number": [
      117
     ]
    },
    "xarray.core.duck_array_ops.array_notnull_equiv": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.TestArrayNotNullEquiv.test_types": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      132,
      133
     ]
    },
    "numpy.nan": {
     "line number": [
      127
     ]
    },
    "xarray.core.duck_array_ops.array_notnull_equiv": {
     "line number": [
      134
     ]
    },
    "xarray.tests.test_duck_array_ops.pytest": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.TestArrayNotNullEquiv.test_wrong_shape": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      121,
      122
     ]
    },
    "numpy.nan": {
     "line number": [
      121,
      121,
      122
     ]
    },
    "xarray.core.duck_array_ops.array_notnull_equiv": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.TestOps": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "xarray.tests.test_duck_array_ops.TestOps.setUp": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      24
     ]
    },
    "numpy.nan": {
     "line number": [
      24,
      24,
      24,
      25,
      25,
      26,
      28,
      29,
      29,
      30,
      30,
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.TestOps.test_all_nan_arrays": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "numpy.isnan": {
     "line number": [
      103
     ]
    },
    "numpy.nan": {
     "line number": [
      103,
      103
     ]
    },
    "xarray.core.duck_array_ops.mean": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.TestOps.test_concatenate_type_promotion": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      100
     ]
    },
    "numpy.array": {
     "line number": [
      100
     ]
    },
    "object": {
     "line number": [
      100
     ]
    },
    "xarray.core.duck_array_ops.concatenate": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.TestOps.test_count": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      84
     ]
    },
    "numpy.array": {
     "line number": [
      83
     ]
    },
    "xarray.core.duck_array_ops.count": {
     "line number": [
      81,
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.TestOps.test_first": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      53
     ]
    },
    "assert_array_equal": {
     "line number": [
      43,
      47,
      51
     ]
    },
    "numpy.array": {
     "line number": [
      33,
      36,
      38
     ]
    },
    "numpy.nan": {
     "line number": [
      33,
      34,
      34,
      35,
      36,
      37
     ]
    },
    "raises_regex": {
     "line number": [
      53
     ]
    },
    "xarray.core.duck_array_ops.first": {
     "line number": [
      42,
      46,
      50,
      54
     ]
    },
    "zip": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.TestOps.test_last": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      77
     ]
    },
    "assert_array_equal": {
     "line number": [
      67,
      71,
      75
     ]
    },
    "numpy.array": {
     "line number": [
      57,
      60,
      62
     ]
    },
    "numpy.nan": {
     "line number": [
      57,
      58,
      58,
      59,
      60,
      61
     ]
    },
    "raises_regex": {
     "line number": [
      77
     ]
    },
    "xarray.core.duck_array_ops.last": {
     "line number": [
      66,
      70,
      74,
      78
     ]
    },
    "zip": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.TestOps.test_stack_type_promotion": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      96
     ]
    },
    "numpy.array": {
     "line number": [
      96
     ]
    },
    "object": {
     "line number": [
      96
     ]
    },
    "xarray.core.duck_array_ops.stack": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.TestOps.test_where_type_promotion": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      88,
      92
     ]
    },
    "numpy.array": {
     "line number": [
      88,
      90,
      92
     ]
    },
    "numpy.float32": {
     "line number": [
      90,
      91,
      92
     ]
    },
    "numpy.nan": {
     "line number": [
      90,
      92
     ]
    },
    "object": {
     "line number": [
      88
     ]
    },
    "xarray.core.duck_array_ops.where": {
     "line number": [
      87,
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.array_notnull_equiv": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.array_notnull_equiv"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.assert_allclose": {
  "data": {
   "shadows": "xarray.testing.assert_allclose"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.assert_equal": {
  "data": {
   "shadows": "xarray.testing.assert_equal"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.concat": {
  "data": {
   "shadows": "xarray.concat"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.concatenate": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.concatenate"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.construct_dataarray": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      152
     ]
    },
    "numpy.arange": {
     "line number": [
      153,
      156
     ]
    },
    "numpy.array": {
     "line number": [
      144,
      146,
      148,
      150,
      153
     ]
    },
    "numpy.bool_": {
     "line number": [
      147
     ]
    },
    "numpy.floating": {
     "line number": [
      143
     ]
    },
    "numpy.integer": {
     "line number": [
      145
     ]
    },
    "numpy.issubdtype": {
     "line number": [
      143,
      145,
      147
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      139
     ]
    },
    "str": {
     "line number": [
      149
     ]
    },
    "xarray.DataArray": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.count": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.count"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.dask_array_type": {
  "data": {
   "shadows": "xarray.core.pycompat.dask_array_type"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.first": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.first"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.from_series_or_scalar": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      167
     ]
    },
    "xarray.DataArray": {
     "line number": [
      168
     ]
    },
    "xarray.DataArray.from_series": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.last": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.last"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.mean": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.mean"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.rolling_window": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.rolling_window"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.series_reduce": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      176
     ]
    },
    "len": {
     "line number": [
      182
     ]
    },
    "list": {
     "line number": [
      179
     ]
    },
    "range": {
     "line number": [
      182
     ]
    },
    "xarray.concat": {
     "line number": [
      186,
      187
     ]
    },
    "xarray.tests.test_duck_array_ops.from_series_or_scalar": {
     "line number": [
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.stack": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.stack"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.test_argmin_max": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      296
     ]
    },
    "float": {
     "line number": [
      267
     ]
    },
    "getattr": {
     "line number": [
      298,
      302,
      304
     ]
    },
    "int": {
     "line number": [
      267
     ]
    },
    "numpy.bool_": {
     "line number": [
      267
     ]
    },
    "numpy.dtype": {
     "line number": [
      287
     ]
    },
    "numpy.float32": {
     "line number": [
      267
     ]
    },
    "str": {
     "line number": [
      267
     ]
    },
    "xarray.testing.assert_allclose": {
     "line number": [
      305
     ]
    },
    "xarray.tests.test_duck_array_ops.construct_dataarray": {
     "line number": [
      289
     ]
    },
    "xarray.tests.test_duck_array_ops.pytest": {
     "line number": [
      278,
      281,
      285,
      288,
      296,
      266,
      267,
      268,
      269,
      270,
      271,
      272
     ]
    },
    "xarray.tests.test_duck_array_ops.warnings": {
     "line number": [
      292,
      293
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_argmin_max_error": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      311
     ]
    },
    "numpy.bool_": {
     "line number": [
      310
     ]
    },
    "xarray.tests.test_duck_array_ops.construct_dataarray": {
     "line number": [
      310
     ]
    },
    "xarray.tests.test_duck_array_ops.pytest": {
     "line number": [
      311
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_dask_rolling": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      342
     ]
    },
    "assert_array_equal": {
     "line number": [
      337
     ]
    },
    "dask.array.Array": {
     "line number": [
      336
     ]
    },
    "dask.array.from_array": {
     "line number": [
      330
     ]
    },
    "float": {
     "line number": [
      329
     ]
    },
    "isinstance": {
     "line number": [
      336
     ]
    },
    "numpy.array": {
     "line number": [
      329
     ]
    },
    "numpy.nan": {
     "line number": [
      333,
      335,
      344
     ]
    },
    "numpy.random.randn": {
     "line number": [
      329
     ]
    },
    "xarray.core.duck_array_ops.rolling_window": {
     "line number": [
      332,
      334,
      343
     ]
    },
    "xarray.tests.test_duck_array_ops.pytest": {
     "line number": [
      342,
      322,
      323,
      324,
      325
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_isnull_with_dask": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      318
     ]
    },
    "numpy.float32": {
     "line number": [
      317
     ]
    },
    "xarray.core.pycompat.dask_array_type": {
     "line number": [
      318
     ]
    },
    "xarray.testing.assert_equal": {
     "line number": [
      319
     ]
    },
    "xarray.tests.test_duck_array_ops.construct_dataarray": {
     "line number": [
      317
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.test_reduce": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      231
     ]
    },
    "TypeError": {
     "line number": [
      231
     ]
    },
    "ZeroDivisionError": {
     "line number": [
      231
     ]
    },
    "distutils.version.LooseVersion": {
     "line number": [
      218,
      218
     ]
    },
    "float": {
     "line number": [
      253,
      254,
      191
     ]
    },
    "getattr": {
     "line number": [
      223,
      226,
      228,
      237,
      243,
      253,
      258,
      259
     ]
    },
    "int": {
     "line number": [
      191
     ]
    },
    "numpy": {
     "line number": [
      223,
      226,
      259
     ]
    },
    "numpy.__version__": {
     "line number": [
      218
     ]
    },
    "numpy.allclose": {
     "line number": [
      229,
      263
     ]
    },
    "numpy.array": {
     "line number": [
      229,
      261,
      263
     ]
    },
    "numpy.bool_": {
     "line number": [
      201,
      191
     ]
    },
    "numpy.float32": {
     "line number": [
      207,
      191
     ]
    },
    "object": {
     "line number": [
      260
     ]
    },
    "xarray.testing.assert_allclose": {
     "line number": [
      241,
      246,
      249
     ]
    },
    "xarray.tests.test_duck_array_ops.construct_dataarray": {
     "line number": [
      209,
      257
     ]
    },
    "xarray.tests.test_duck_array_ops.pytest": {
     "line number": [
      199,
      202,
      205,
      190,
      191,
      192,
      193,
      194,
      195
     ]
    },
    "xarray.tests.test_duck_array_ops.series_reduce": {
     "line number": [
      239,
      244,
      248
     ]
    },
    "xarray.tests.test_duck_array_ops.warnings": {
     "line number": [
      214,
      215,
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_duck_array_ops.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.tests.test_duck_array_ops.where": {
  "data": {
   "shadows": "xarray.core.duck_array_ops.where"
  },
  "type": "import"
 },
 "xarray.tests.test_extensions": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "module"
 },
 "xarray.tests.test_extensions.ExampleAccessor": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "object": {
     "line number": [
      17
     ]
    },
    "xarray.register_dataarray_accessor": {
     "line number": [
      16
     ]
    },
    "xarray.register_dataset_accessor": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.tests.test_extensions.ExampleAccessor.__init__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "xarray.tests.test_extensions.TestAccessor": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "xarray.tests.test_extensions.TestAccessor.test_broken_accessor": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      92
     ]
    },
    "raises_regex": {
     "line number": [
      92
     ]
    },
    "xarray.Dataset": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_extensions.TestAccessor.test_broken_accessor.BrokenAccessor": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "object": {
     "line number": [
      88
     ]
    },
    "xarray.register_dataset_accessor": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.tests.test_extensions.TestAccessor.test_broken_accessor.BrokenAccessor.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_extensions.TestAccessor.test_pickle_dataarray": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "cPickle.dumps": {
     "line number": [
      81
     ]
    },
    "cPickle.loads": {
     "line number": [
      81
     ]
    },
    "xarray.Dataset": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_extensions.TestAccessor.test_pickle_dataset": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "cPickle.dumps": {
     "line number": [
      68,
      74
     ]
    },
    "cPickle.loads": {
     "line number": [
      68,
      74
     ]
    },
    "xarray.Dataset": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_extensions.TestAccessor.test_register": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "Warning": {
     "line number": [
      58
     ]
    },
    "hasattr": {
     "line number": [
      56,
      64
     ]
    },
    "isinstance": {
     "line number": [
      51
     ]
    },
    "xarray.DataArray": {
     "line number": [
      42
     ]
    },
    "xarray.Dataset": {
     "line number": [
      39,
      56,
      64
     ]
    },
    "xarray.Dataset.demo": {
     "line number": [
      52,
      55
     ]
    },
    "xarray.Dataset.demo.__doc__": {
     "line number": [
      50
     ]
    },
    "xarray.tests.test_extensions.pytest": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_extensions.TestAccessor.test_register.DemoAccessor": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "object": {
     "line number": [
      29
     ]
    },
    "xarray.register_dataarray_accessor": {
     "line number": [
      28
     ]
    },
    "xarray.register_dataset_accessor": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.tests.test_extensions.TestAccessor.test_register.DemoAccessor.__init__": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "xarray.tests.test_extensions.TestAccessor.test_register.DemoAccessor.foo": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "property": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_extensions.TestAccessor.test_register.Foo": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "object": {
     "line number": [
      60
     ]
    },
    "xarray.register_dataarray_accessor": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.tests.test_extensions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_extensions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_extensions.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "xarray.tests.test_extensions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_extensions.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_extensions.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_formatting": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_formatting.PY3": {
  "data": {
   "shadows": "xarray.core.pycompat.PY3"
  },
  "type": "import"
 },
 "xarray.tests.test_formatting.TestFormatting": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "xarray.tests.test_formatting.TestFormatting.test_attribute_repr": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "len": {
     "line number": [
      139
     ]
    },
    "xarray.core.formatting.summarize_attr": {
     "line number": [
      134,
      135,
      136,
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.TestFormatting.test_first_n_items": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      39
     ]
    },
    "numpy.arange": {
     "line number": [
      33
     ]
    },
    "raises_regex": {
     "line number": [
      39
     ]
    },
    "xarray.core.formatting.first_n_items": {
     "line number": [
      35,
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.TestFormatting.test_format_array_flat": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      90,
      94,
      98,
      102,
      106,
      110
     ]
    },
    "xarray.core.formatting.format_array_flat": {
     "line number": [
      90,
      94,
      98,
      102,
      106,
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.TestFormatting.test_format_item": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "pandas.Timedelta": {
     "line number": [
      57,
      58,
      59,
      60
     ]
    },
    "pandas.Timestamp": {
     "line number": [
      54,
      55,
      56
     ]
    },
    "xarray.core.formatting.format_item": {
     "line number": [
      68
     ]
    },
    "xarray.core.pycompat.PY3": {
     "line number": [
      62,
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.TestFormatting.test_format_items": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      73,
      75,
      77
     ]
    },
    "numpy.timedelta64": {
     "line number": [
      73,
      75,
      77
     ]
    },
    "pandas.to_timedelta": {
     "line number": [
      79,
      81
     ]
    },
    "xarray.core.formatting.format_items": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.TestFormatting.test_format_timestamp_out_of_bounds": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "datetime.datetime": {
     "line number": [
      123,
      128
     ]
    },
    "xarray.core.formatting.format_timestamp": {
     "line number": [
      125,
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.TestFormatting.test_get_indexer_at_least_n_items": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "slice": {
     "line number": [
      17,
      18,
      19,
      20,
      20,
      21,
      21,
      22,
      22,
      23,
      23,
      24,
      24,
      24,
      25,
      25,
      26,
      26,
      26
     ]
    },
    "xarray.core.formatting._get_indexer_at_least_n_items": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.TestFormatting.test_last_item": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      43
     ]
    },
    "numpy.array": {
     "line number": [
      46
     ]
    },
    "xarray.core.formatting.last_item": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.TestFormatting.test_maybe_truncate": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "xarray.core.formatting.maybe_truncate": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.TestFormatting.test_pretty_print": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "xarray.core.formatting.pretty_print": {
     "line number": [
      115,
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_formatting.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "xarray.tests.test_formatting.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_formatting.formatting": {
  "data": {
   "shadows": "xarray.core.formatting"
  },
  "type": "import"
 },
 "xarray.tests.test_formatting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_formatting.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_formatting.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_formatting.test_set_numpy_options": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "len": {
     "line number": [
      148
     ]
    },
    "numpy.arange": {
     "line number": [
      148
     ]
    },
    "numpy.get_printoptions": {
     "line number": [
      146,
      150
     ]
    },
    "repr": {
     "line number": [
      148
     ]
    },
    "xarray.core.formatting.set_numpy_options": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_formatting.test_short_array_repr": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "numpy.random.randn": {
     "line number": [
      155,
      156,
      157,
      158
     ]
    },
    "xarray.core.formatting.short_array_repr": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_groupby": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_groupby._consolidate_slices": {
  "data": {
   "shadows": "xarray.core.groupby._consolidate_slices"
  },
  "type": "import"
 },
 "xarray.tests.test_groupby.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_groupby.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_groupby.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_groupby.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_groupby.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_groupby.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_groupby.test_consolidate_slices": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      21
     ]
    },
    "slice": {
     "line number": [
      13,
      13,
      13,
      14,
      14,
      14,
      15,
      15,
      16,
      18,
      18,
      22
     ]
    },
    "xarray.core.groupby._consolidate_slices": {
     "line number": [
      13,
      14,
      15,
      19,
      22
     ]
    },
    "xarray.tests.test_groupby.pytest": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_groupby_da_datetime": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      53,
      58,
      63
     ]
    },
    "pandas.date_range": {
     "line number": [
      52
     ]
    },
    "xarray.DataArray": {
     "line number": [
      53,
      58,
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_groupby_duplicate_coordinate_labels": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "xarray.DataArray": {
     "line number": [
      70,
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_multi_index_groupby_apply": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "numpy.random.randn": {
     "line number": [
      27
     ]
    },
    "xarray.Dataset": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.test_multi_index_groupby_sum": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "numpy.ones": {
     "line number": [
      39
     ]
    },
    "xarray.Dataset": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_groupby.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing": {
  "data": {
   "symbols_in_volume": {
    "IndexerMaker": {
     "line number": [
      16
     ]
    },
    "xarray.core.indexing.BasicIndexer": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "module"
 },
 "xarray.tests.test_indexing.B": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "xarray.tests.test_indexing.DataArray": {
  "data": {
   "shadows": "xarray.DataArray"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.Dataset": {
  "data": {
   "shadows": "xarray.Dataset"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.TestCopyOnWriteArray": {
  "data": {
   "lineno": 251
  },
  "type": "class"
 },
 "xarray.tests.test_indexing.TestCopyOnWriteArray.test_index_scalar": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      271,
      272
     ]
    },
    "xarray.core.indexing.CopyOnWriteArray": {
     "line number": [
      271
     ]
    },
    "xarray.tests.test_indexing.B": {
     "line number": [
      272,
      272
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestCopyOnWriteArray.test_setitem": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      256,
      257
     ]
    },
    "numpy.arange": {
     "line number": [
      253,
      256
     ]
    },
    "numpy.zeros": {
     "line number": [
      257
     ]
    },
    "xarray.core.indexing.CopyOnWriteArray": {
     "line number": [
      254
     ]
    },
    "xarray.tests.test_indexing.B": {
     "line number": [
      255
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestCopyOnWriteArray.test_sub_array": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      265,
      266,
      267
     ]
    },
    "isinstance": {
     "line number": [
      263
     ]
    },
    "numpy.arange": {
     "line number": [
      260,
      265,
      266
     ]
    },
    "numpy.zeros": {
     "line number": [
      267
     ]
    },
    "xarray.core.indexing.CopyOnWriteArray": {
     "line number": [
      261,
      263
     ]
    },
    "xarray.tests.test_indexing.B": {
     "line number": [
      262,
      264
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestIndexers": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "xarray.tests.test_indexing.TestIndexers.set_to_zero": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestIndexers.test_asarray_tuplesafe": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      41
     ]
    },
    "numpy.ndarray": {
     "line number": [
      41
     ]
    },
    "xarray.core.indexing._asarray_tuplesafe": {
     "line number": [
      40,
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestIndexers.test_convert_label_indexer": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      68
     ]
    },
    "KeyError": {
     "line number": [
      53,
      55,
      62,
      64,
      68
     ]
    },
    "ValueError": {
     "line number": [
      57,
      66
     ]
    },
    "pandas.Index": {
     "line number": [
      52
     ]
    },
    "pandas.MultiIndex.from_product": {
     "line number": [
      60
     ]
    },
    "raises_regex": {
     "line number": [
      53,
      57,
      62
     ]
    },
    "slice": {
     "line number": [
      71
     ]
    },
    "xarray.core.indexing.convert_label_indexer": {
     "line number": [
      54,
      56,
      58,
      63,
      65,
      67,
      70
     ]
    },
    "xarray.tests.test_indexing.pytest": {
     "line number": [
      55,
      64,
      66,
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestIndexers.test_convert_unsorted_datetime_index_raises": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      75
     ]
    },
    "pandas.to_datetime": {
     "line number": [
      74
     ]
    },
    "slice": {
     "line number": [
      79
     ]
    },
    "xarray.core.indexing.convert_label_indexer": {
     "line number": [
      79
     ]
    },
    "xarray.tests.test_indexing.pytest": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestIndexers.test_expanded_indexer": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      36
     ]
    },
    "ReturnItem": {
     "line number": [
      28
     ]
    },
    "assert_array_equal": {
     "line number": [
      33,
      34
     ]
    },
    "numpy.arange": {
     "line number": [
      27
     ]
    },
    "numpy.random.randn": {
     "line number": [
      26
     ]
    },
    "raises_regex": {
     "line number": [
      36
     ]
    },
    "xarray.core.indexing.expanded_indexer": {
     "line number": [
      32,
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestIndexers.test_get_dim_indexers": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      89,
      92,
      95
     ]
    },
    "pandas.MultiIndex.from_product": {
     "line number": [
      82
     ]
    },
    "raises_regex": {
     "line number": [
      89,
      92,
      95
     ]
    },
    "range": {
     "line number": [
      84
     ]
    },
    "xarray.DataArray": {
     "line number": [
      84
     ]
    },
    "xarray.core.indexing.get_dim_indexers": {
     "line number": [
      86,
      90,
      93,
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestIndexers.test_remap_label_indexers": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "numpy.int32": {
     "line number": [
      110
     ]
    },
    "pandas.MultiIndex.from_product": {
     "line number": [
      105,
      117,
      120,
      133
     ]
    },
    "range": {
     "line number": [
      107
     ]
    },
    "slice": {
     "line number": [
      116,
      122,
      122,
      123,
      123
     ]
    },
    "test_indexer": {
     "line number": [
      109,
      110,
      111,
      112,
      113,
      116,
      118,
      121,
      122,
      123,
      124,
      125,
      128,
      131
     ]
    },
    "xarray.DataArray": {
     "line number": [
      107
     ]
    },
    "xarray.Dataset": {
     "line number": [
      104
     ]
    },
    "xarray.Variable": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestIndexers.test_remap_label_indexers.test_indexer": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      101,
      102
     ]
    },
    "xarray.core.indexing.remap_label_indexers": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestLazyArray": {
  "data": {
   "lineno": 136
  },
  "type": "class"
 },
 "xarray.tests.test_indexing.TestLazyArray.test_lazily_indexed_array": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "ReturnItem": {
     "line number": [
      158
     ]
    },
    "all": {
     "line number": [
      178
     ]
    },
    "assert_array_equal": {
     "line number": [
      173,
      193,
      200
     ]
    },
    "isinstance": {
     "line number": [
      164,
      166,
      174,
      178,
      180,
      183,
      201,
      205,
      206
     ]
    },
    "numpy.arange": {
     "line number": [
      160,
      165,
      167
     ]
    },
    "numpy.array": {
     "line number": [
      198
     ]
    },
    "numpy.asarray": {
     "line number": [
      168
     ]
    },
    "numpy.ndarray": {
     "line number": [
      164,
      166
     ]
    },
    "numpy.random.choice": {
     "line number": [
      197
     ]
    },
    "numpy.random.rand": {
     "line number": [
      153
     ]
    },
    "slice": {
     "line number": [
      178
     ]
    },
    "xarray.Variable": {
     "line number": [
      155,
      157
     ]
    },
    "xarray.core.indexing.BasicIndexer": {
     "line number": [
      181
     ]
    },
    "xarray.core.indexing.LazilyOuterIndexedArray": {
     "line number": [
      156,
      175,
      203,
      205
     ]
    },
    "xarray.core.indexing.LazilyVectorizedIndexedArray": {
     "line number": [
      202
     ]
    },
    "xarray.core.indexing.NumpyIndexingAdapter": {
     "line number": [
      154,
      207
     ]
    },
    "xarray.core.indexing.OuterIndexer": {
     "line number": [
      184
     ]
    },
    "xarray.core.pycompat.native_int_types": {
     "line number": [
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestLazyArray.test_slice_slice": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "ReturnItem": {
     "line number": [
      138
     ]
    },
    "assert_array_equal": {
     "line number": [
      150
     ]
    },
    "numpy.arange": {
     "line number": [
      141
     ]
    },
    "xarray.core.indexing.slice_slice": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestLazyArray.test_vectorized_lazily_indexed_array": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "ReturnItem": {
     "line number": [
      215
     ]
    },
    "check_indexing": {
     "line number": [
      231,
      237,
      243,
      248
     ]
    },
    "numpy.random.rand": {
     "line number": [
      210
     ]
    },
    "slice": {
     "line number": [
      235,
      236,
      240,
      240
     ]
    },
    "xarray.Variable": {
     "line number": [
      212,
      214,
      230,
      235,
      235,
      241,
      241,
      242,
      246,
      246,
      247
     ]
    },
    "xarray.core.indexing.LazilyOuterIndexedArray": {
     "line number": [
      213
     ]
    },
    "xarray.core.indexing.NumpyIndexingAdapter": {
     "line number": [
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestLazyArray.test_vectorized_lazily_indexed_array.check_indexing": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      225
     ]
    },
    "isinstance": {
     "line number": [
      222
     ]
    },
    "xarray.core.indexing.LazilyOuterIndexedArray": {
     "line number": [
      224
     ]
    },
    "xarray.core.indexing.LazilyVectorizedIndexedArray": {
     "line number": [
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestMemoryCachedArray": {
  "data": {
   "lineno": 275
  },
  "type": "class"
 },
 "xarray.tests.test_indexing.TestMemoryCachedArray.test_index_scalar": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      299,
      300
     ]
    },
    "xarray.core.indexing.MemoryCachedArray": {
     "line number": [
      299
     ]
    },
    "xarray.tests.test_indexing.B": {
     "line number": [
      300,
      300
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestMemoryCachedArray.test_setitem": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      295
     ]
    },
    "numpy.arange": {
     "line number": [
      292
     ]
    },
    "numpy.zeros": {
     "line number": [
      295
     ]
    },
    "xarray.core.indexing.MemoryCachedArray": {
     "line number": [
      293
     ]
    },
    "xarray.tests.test_indexing.B": {
     "line number": [
      294
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestMemoryCachedArray.test_sub_array": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      287
     ]
    },
    "isinstance": {
     "line number": [
      286,
      288,
      289
     ]
    },
    "numpy.arange": {
     "line number": [
      283,
      287
     ]
    },
    "xarray.core.indexing.LazilyOuterIndexedArray": {
     "line number": [
      283,
      289
     ]
    },
    "xarray.core.indexing.MemoryCachedArray": {
     "line number": [
      284,
      286
     ]
    },
    "xarray.core.indexing.NumpyIndexingAdapter": {
     "line number": [
      288
     ]
    },
    "xarray.tests.test_indexing.B": {
     "line number": [
      285
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.TestMemoryCachedArray.test_wrapper": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      279
     ]
    },
    "isinstance": {
     "line number": [
      280
     ]
    },
    "numpy.arange": {
     "line number": [
      277,
      279
     ]
    },
    "xarray.core.indexing.LazilyOuterIndexedArray": {
     "line number": [
      277
     ]
    },
    "xarray.core.indexing.MemoryCachedArray": {
     "line number": [
      278
     ]
    },
    "xarray.core.indexing.NumpyIndexingAdapter": {
     "line number": [
      280
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.Test_vectorized_indexer": {
  "data": {
   "lineno": 388
  },
  "type": "class"
 },
 "xarray.tests.test_indexing.Test_vectorized_indexer.setUp": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      391,
      392
     ]
    },
    "numpy.random.randn": {
     "line number": [
      390
     ]
    },
    "slice": {
     "line number": [
      393,
      393,
      393
     ]
    },
    "xarray.core.indexing.NumpyIndexingAdapter": {
     "line number": [
      390
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.Test_vectorized_indexer.test_arrayize_vectorized_indexer": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      405,
      408,
      409,
      413,
      416,
      417,
      420,
      423,
      424
     ]
    },
    "numpy.newaxis": {
     "line number": [
      416,
      417,
      423,
      424
     ]
    },
    "numpy.stack": {
     "line number": [
      409,
      410
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      400,
      405,
      410,
      416,
      417,
      423,
      424
     ]
    },
    "slice": {
     "line number": [
      404,
      413,
      420
     ]
    },
    "xarray.core.indexing.VectorizedIndexer": {
     "line number": [
      397,
      404,
      408,
      413,
      420
     ]
    },
    "xarray.core.indexing._arrayize_vectorized_indexer": {
     "line number": [
      398,
      403,
      407,
      412,
      419
     ]
    },
    "xarray.tests.test_indexing.itertools": {
     "line number": [
      396
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.Variable": {
  "data": {
   "shadows": "xarray.Variable"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.check_array1d": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": {
    "indexer_cls": {
     "line number": [
      348
     ]
    },
    "numpy.arange": {
     "line number": [
      348
     ]
    },
    "numpy.int32": {
     "line number": [
      348
     ]
    },
    "numpy.int64": {
     "line number": [
      349
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      350
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.check_array2d": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": {
    "indexer_cls": {
     "line number": [
      355
     ]
    },
    "numpy.array": {
     "line number": [
      354
     ]
    },
    "numpy.int64": {
     "line number": [
      354,
      356
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      357
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.check_integer": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": {
    "all": {
     "line number": [
      337
     ]
    },
    "indexer_cls": {
     "line number": [
      336
     ]
    },
    "int": {
     "line number": [
      337
     ]
    },
    "isinstance": {
     "line number": [
      337
     ]
    },
    "numpy.uint64": {
     "line number": [
      336
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.check_slice": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": {
    "indexer_cls": {
     "line number": [
      342
     ]
    },
    "isinstance": {
     "line number": [
      344
     ]
    },
    "numpy.int64": {
     "line number": [
      342
     ]
    },
    "slice": {
     "line number": [
      342,
      343
     ]
    },
    "xarray.core.pycompat.native_int_types": {
     "line number": [
      344
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.get_indexers": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": {
    "len": {
     "line number": [
      440,
      444,
      461,
      467
     ]
    },
    "numpy.random.randint": {
     "line number": [
      430,
      435,
      439,
      443,
      448
     ]
    },
    "slice": {
     "line number": [
      439,
      443,
      447,
      452,
      464,
      465,
      466
     ]
    },
    "tuple": {
     "line number": [
      430,
      435,
      449,
      454,
      461,
      467
     ]
    },
    "xarray.core.indexing.BasicIndexer": {
     "line number": [
      454,
      457,
      461,
      467
     ]
    },
    "xarray.core.indexing.OuterIndexer": {
     "line number": [
      436,
      440,
      444,
      449
     ]
    },
    "xarray.core.indexing.VectorizedIndexer": {
     "line number": [
      432
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.indexing": {
  "data": {
   "shadows": "xarray.core.indexing"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.native_int_types": {
  "data": {
   "shadows": "xarray.core.pycompat.native_int_types"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.nputils": {
  "data": {
   "shadows": "xarray.core.nputils"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_indexing.test_base_explicit_indexer": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": {
    "Subclass": {
     "line number": [
      310
     ]
    },
    "TypeError": {
     "line number": [
      304
     ]
    },
    "repr": {
     "line number": [
      312
     ]
    },
    "xarray.core.indexing.ExplicitIndexer": {
     "line number": [
      305
     ]
    },
    "xarray.tests.test_indexing.pytest": {
     "line number": [
      304
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_base_explicit_indexer.Subclass": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": {
    "xarray.core.indexing.ExplicitIndexer": {
     "line number": [
      307
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.tests.test_indexing.test_basic_indexer": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      363,
      365
     ]
    },
    "xarray.core.indexing.BasicIndexer": {
     "line number": [
      361,
      362,
      364,
      366
     ]
    },
    "xarray.tests.test_indexing.check_array1d": {
     "line number": [
      364
     ]
    },
    "xarray.tests.test_indexing.check_array2d": {
     "line number": [
      366
     ]
    },
    "xarray.tests.test_indexing.check_integer": {
     "line number": [
      361
     ]
    },
    "xarray.tests.test_indexing.check_slice": {
     "line number": [
      362
     ]
    },
    "xarray.tests.test_indexing.pytest": {
     "line number": [
      363,
      365
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_create_mask_basic_indexer": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": {
    "numpy.testing.assert_array_equal": {
     "line number": [
      580,
      584
     ]
    },
    "xarray.core.indexing.BasicIndexer": {
     "line number": [
      578,
      582
     ]
    },
    "xarray.core.indexing.create_mask": {
     "line number": [
      579,
      583
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_create_mask_dask": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      604
     ]
    },
    "isinstance": {
     "line number": [
      601
     ]
    },
    "numpy.array": {
     "line number": [
      590,
      591,
      598,
      598,
      599
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      595,
      602
     ]
    },
    "slice": {
     "line number": [
      590,
      598
     ]
    },
    "xarray.core.indexing.OuterIndexer": {
     "line number": [
      590
     ]
    },
    "xarray.core.indexing.VectorizedIndexer": {
     "line number": [
      597
     ]
    },
    "xarray.core.indexing.create_mask": {
     "line number": [
      592,
      600,
      605
     ]
    },
    "xarray.tests.test_indexing.pytest": {
     "line number": [
      588,
      604
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_create_mask_error": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      609
     ]
    },
    "raises_regex": {
     "line number": [
      609
     ]
    },
    "xarray.core.indexing.create_mask": {
     "line number": [
      610
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_create_mask_outer_indexer": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      552,
      553,
      557,
      558
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      555,
      560
     ]
    },
    "slice": {
     "line number": [
      557
     ]
    },
    "xarray.core.indexing.OuterIndexer": {
     "line number": [
      552,
      557
     ]
    },
    "xarray.core.indexing.create_mask": {
     "line number": [
      554,
      559
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_create_mask_vectorized_indexer": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      565,
      565,
      566,
      571,
      571,
      572
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      568,
      574
     ]
    },
    "slice": {
     "line number": [
      571
     ]
    },
    "xarray.core.indexing.VectorizedIndexer": {
     "line number": [
      564,
      570
     ]
    },
    "xarray.core.indexing.create_mask": {
     "line number": [
      567,
      573
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_decompose_indexers": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": {
    "all": {
     "line number": [
      504
     ]
    },
    "isinstance": {
     "line number": [
      504
     ]
    },
    "len": {
     "line number": [
      500
     ]
    },
    "numpy.random.randn": {
     "line number": [
      492
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      502,
      507
     ]
    },
    "xarray.core.indexing.IndexingSupport.BASIC": {
     "line number": [
      487
     ]
    },
    "xarray.core.indexing.IndexingSupport.OUTER": {
     "line number": [
      488
     ]
    },
    "xarray.core.indexing.IndexingSupport.OUTER_1VECTOR": {
     "line number": [
      489
     ]
    },
    "xarray.core.indexing.IndexingSupport.VECTORIZED": {
     "line number": [
      490
     ]
    },
    "xarray.core.indexing.NumpyIndexingAdapter": {
     "line number": [
      498,
      499,
      501,
      506
     ]
    },
    "xarray.core.indexing._combine_indexers": {
     "line number": [
      505
     ]
    },
    "xarray.core.indexing.decompose_indexer": {
     "line number": [
      495
     ]
    },
    "xarray.core.indexing.integer_types": {
     "line number": [
      504
     ]
    },
    "xarray.tests.test_indexing.get_indexers": {
     "line number": [
      493
     ]
    },
    "xarray.tests.test_indexing.pytest": {
     "line number": [
      481,
      482,
      486
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_decompose_slice": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      478
     ]
    },
    "numpy.arange": {
     "line number": [
      474
     ]
    },
    "slice": {
     "line number": [
      471,
      471,
      472,
      472
     ]
    },
    "xarray.core.indexing._decompose_slice": {
     "line number": [
      475
     ]
    },
    "xarray.tests.test_indexing.pytest": {
     "line number": [
      470,
      471
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_implicit_indexing_adapter": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      511
     ]
    },
    "numpy.asarray": {
     "line number": [
      514
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      514,
      515
     ]
    },
    "xarray.core.indexing.BasicIndexer": {
     "line number": [
      513
     ]
    },
    "xarray.core.indexing.ImplicitToExplicitIndexingAdapter": {
     "line number": [
      512
     ]
    },
    "xarray.core.indexing.NumpyIndexingAdapter": {
     "line number": [
      513
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_invalid_for_all": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      319,
      321,
      323,
      325,
      327,
      329,
      331
     ]
    },
    "indexer_cls": {
     "line number": [
      320,
      322,
      324,
      326,
      328,
      330,
      332
     ]
    },
    "numpy.array": {
     "line number": [
      332
     ]
    },
    "slice": {
     "line number": [
      330
     ]
    },
    "xarray.core.indexing.BasicIndexer": {
     "line number": [
      315
     ]
    },
    "xarray.core.indexing.OuterIndexer": {
     "line number": [
      316
     ]
    },
    "xarray.core.indexing.VectorizedIndexer": {
     "line number": [
      317
     ]
    },
    "xarray.tests.test_indexing.pytest": {
     "line number": [
      319,
      321,
      323,
      325,
      327,
      329,
      331,
      315
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_outer_indexer": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      373
     ]
    },
    "xarray.core.indexing.OuterIndexer": {
     "line number": [
      370,
      371,
      372,
      374
     ]
    },
    "xarray.tests.test_indexing.check_array1d": {
     "line number": [
      372
     ]
    },
    "xarray.tests.test_indexing.check_array2d": {
     "line number": [
      374
     ]
    },
    "xarray.tests.test_indexing.check_integer": {
     "line number": [
      370
     ]
    },
    "xarray.tests.test_indexing.check_slice": {
     "line number": [
      371
     ]
    },
    "xarray.tests.test_indexing.pytest": {
     "line number": [
      373
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_outer_indexer_consistency_with_broadcast_indexes_vectorized": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": {
    "ReturnItem": {
     "line number": [
      526
     ]
    },
    "isinstance": {
     "line number": [
      532,
      534
     ]
    },
    "len": {
     "line number": [
      540
     ]
    },
    "nonzero": {
     "line number": [
      544,
      544,
      545
     ]
    },
    "numpy.arange": {
     "line number": [
      529,
      533,
      535
     ]
    },
    "numpy.array": {
     "line number": [
      528,
      528
     ]
    },
    "numpy.moveaxis": {
     "line number": [
      541
     ]
    },
    "numpy.ndarray": {
     "line number": [
      532,
      534
     ]
    },
    "numpy.random.rand": {
     "line number": [
      524
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      548
     ]
    },
    "range": {
     "line number": [
      540
     ]
    },
    "xarray.Variable": {
     "line number": [
      525
     ]
    },
    "xarray.core.indexing.OuterIndexer": {
     "line number": [
      544
     ]
    },
    "xarray.core.indexing._outer_to_numpy_indexer": {
     "line number": [
      546
     ]
    },
    "xarray.core.nputils.NumpyVIndexAdapter": {
     "line number": [
      538
     ]
    },
    "xarray.tests.test_indexing.itertools": {
     "line number": [
      530
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_outer_indexer_consistency_with_broadcast_indexes_vectorized.nonzero": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      520
     ]
    },
    "numpy.ndarray": {
     "line number": [
      520
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_posify_mask_subindexer": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      614,
      614
     ]
    },
    "numpy.array": {
     "line number": [
      615,
      615,
      616,
      616,
      617,
      617,
      618,
      618,
      619,
      619,
      620,
      620
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      624
     ]
    },
    "xarray.core.indexing._posify_mask_subindexer": {
     "line number": [
      623
     ]
    },
    "xarray.tests.test_indexing.pytest": {
     "line number": [
      613
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_indexing.test_vectorized_indexer": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      378
     ]
    },
    "ValueError": {
     "line number": [
      383
     ]
    },
    "numpy.arange": {
     "line number": [
      385
     ]
    },
    "numpy.array": {
     "line number": [
      384
     ]
    },
    "numpy.int64": {
     "line number": [
      384,
      385
     ]
    },
    "raises_regex": {
     "line number": [
      383
     ]
    },
    "xarray.core.indexing.VectorizedIndexer": {
     "line number": [
      379,
      380,
      381,
      382,
      384
     ]
    },
    "xarray.tests.test_indexing.check_array1d": {
     "line number": [
      381
     ]
    },
    "xarray.tests.test_indexing.check_array2d": {
     "line number": [
      382
     ]
    },
    "xarray.tests.test_indexing.check_integer": {
     "line number": [
      379
     ]
    },
    "xarray.tests.test_indexing.check_slice": {
     "line number": [
      380
     ]
    },
    "xarray.tests.test_indexing.pytest": {
     "line number": [
      378
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_merge": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_merge.TestMergeFunction": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_alignment_error": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      69
     ]
    },
    "raises_regex": {
     "line number": [
      69
     ]
    },
    "xarray.Dataset": {
     "line number": [
      67,
      68
     ]
    },
    "xarray.merge": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_arrays": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "create_test_data": {
     "line number": [
      30
     ]
    },
    "xarray.merge": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_dataarray_unnamed": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      48
     ]
    },
    "raises_regex": {
     "line number": [
      47
     ]
    },
    "xarray.DataArray": {
     "line number": [
      46
     ]
    },
    "xarray.merge": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_datasets": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "create_test_data": {
     "line number": [
      36
     ]
    },
    "xarray.merge": {
     "line number": [
      38,
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_dicts_dims": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "xarray.Dataset": {
     "line number": [
      58
     ]
    },
    "xarray.merge": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_dicts_simple": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "xarray.Dataset": {
     "line number": [
      53
     ]
    },
    "xarray.merge": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_error": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "xarray.Dataset": {
     "line number": [
      62
     ]
    },
    "xarray.MergeError": {
     "line number": [
      63
     ]
    },
    "xarray.merge": {
     "line number": [
      64
     ]
    },
    "xarray.tests.test_merge.pytest": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_no_conflicts_broadcast": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      123,
      128
     ]
    },
    "xarray.Dataset": {
     "line number": [
      123,
      123,
      125,
      128,
      128
     ]
    },
    "xarray.merge": {
     "line number": [
      124,
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_no_conflicts_multi_var": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "create_test_data": {
     "line number": [
      100
     ]
    },
    "numpy.nan": {
     "line number": [
      108,
      109,
      110,
      111
     ]
    },
    "xarray.merge": {
     "line number": [
      105,
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_no_conflicts_preserve_attrs": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "xarray.Dataset": {
     "line number": [
      118
     ]
    },
    "xarray.merge": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeFunction.test_merge_no_conflicts_single_var": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "xarray.Dataset": {
     "line number": [
      73,
      74,
      75,
      86,
      92,
      96
     ]
    },
    "xarray.MergeError": {
     "line number": [
      91,
      95
     ]
    },
    "xarray.merge": {
     "line number": [
      76,
      78,
      80,
      83,
      87,
      93,
      97
     ]
    },
    "xarray.tests.test_merge.pytest": {
     "line number": [
      91,
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeInternals": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "xarray.tests.test_merge.TestMergeInternals.test_broadcast_dimension_size": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      23
     ]
    },
    "xarray.Variable": {
     "line number": [
      16,
      16,
      20,
      20,
      25,
      25
     ]
    },
    "xarray.core.merge.broadcast_dimension_size": {
     "line number": [
      15,
      19,
      24
     ]
    },
    "xarray.tests.test_merge.pytest": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeMethod": {
  "data": {
   "lineno": 133
  },
  "type": "class"
 },
 "xarray.tests.test_merge.TestMergeMethod.test_merge": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      153,
      156,
      159
     ]
    },
    "create_test_data": {
     "line number": [
      136
     ]
    },
    "raises_regex": {
     "line number": [
      155,
      158
     ]
    },
    "xarray.tests.test_merge.pytest": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeMethod.test_merge_auto_align": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      204,
      205
     ]
    },
    "slice": {
     "line number": [
      210,
      214
     ]
    },
    "xarray.Dataset": {
     "line number": [
      202,
      203,
      204
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeMethod.test_merge_broadcast_equals": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      175,
      176,
      176
     ]
    },
    "xarray.Dataset": {
     "line number": [
      163,
      164,
      175,
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeMethod.test_merge_compat": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      191,
      198
     ]
    },
    "raises_regex": {
     "line number": [
      190,
      198
     ]
    },
    "xarray.Dataset": {
     "line number": [
      181,
      182,
      188,
      194
     ]
    },
    "xarray.MergeError": {
     "line number": [
      185,
      195
     ]
    },
    "xarray.tests.test_merge.pytest": {
     "line number": [
      185,
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_merge.TestMergeMethod.test_merge_no_conflicts": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "xarray.Dataset": {
     "line number": [
      219,
      220,
      221,
      232,
      237,
      241
     ]
    },
    "xarray.MergeError": {
     "line number": [
      236,
      240
     ]
    },
    "xarray.tests.test_merge.pytest": {
     "line number": [
      236,
      240
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_merge.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_merge.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_merge.merge": {
  "data": {
   "shadows": "xarray.core.merge"
  },
  "type": "import"
 },
 "xarray.tests.test_merge.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_merge.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_merge.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_merge.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_missing": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_missing.NumpyInterpolator": {
  "data": {
   "shadows": "xarray.core.missing.NumpyInterpolator"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.ScipyInterpolator": {
  "data": {
   "shadows": "xarray.core.missing.ScipyInterpolator"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.SplineInterpolator": {
  "data": {
   "shadows": "xarray.core.missing.SplineInterpolator"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.assert_array_equal": {
  "data": {
   "shadows": "xarray.tests.assert_array_equal"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.assert_equal": {
  "data": {
   "shadows": "xarray.tests.assert_equal"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.da": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      20,
      20,
      20
     ]
    },
    "xarray.DataArray": {
     "line number": [
      20
     ]
    },
    "xarray.tests.test_missing.pytest": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_missing.dask_array_type": {
  "data": {
   "shadows": "xarray.core.pycompat.dask_array_type"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.ds": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      27,
      27,
      27,
      29,
      29,
      29
     ]
    },
    "xarray.DataArray": {
     "line number": [
      27,
      29
     ]
    },
    "xarray.Dataset": {
     "line number": [
      26
     ]
    },
    "xarray.tests.test_missing.pytest": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_missing.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.make_interpolate_example_data": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "int": {
     "line number": [
      43
     ]
    },
    "numpy.arange": {
     "line number": [
      45,
      46
     ]
    },
    "numpy.nan": {
     "line number": [
      39,
      54
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      36
     ]
    },
    "numpy.random.shuffle": {
     "line number": [
      48,
      51
     ]
    },
    "pandas.TimedeltaIndex": {
     "line number": [
      58
     ]
    },
    "pandas.Timestamp": {
     "line number": [
      60
     ]
    },
    "pandas.date_range": {
     "line number": [
      62
     ]
    },
    "xarray.DataArray": {
     "line number": [
      64
     ]
    },
    "xarray.tests.test_missing.da": {
     "line number": [
      64,
      65,
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_missing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.raises_regex": {
  "data": {
   "shadows": "xarray.tests.raises_regex"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.requires_bottleneck": {
  "data": {
   "shadows": "xarray.tests.requires_bottleneck"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.requires_dask": {
  "data": {
   "shadows": "xarray.tests.requires_dask"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.requires_np112": {
  "data": {
   "shadows": "xarray.tests.requires_np112"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.requires_scipy": {
  "data": {
   "shadows": "xarray.tests.requires_scipy"
  },
  "type": "import"
 },
 "xarray.tests.test_missing.test_bfill_dask": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      375,
      382
     ]
    },
    "xarray.core.pycompat.dask_array_type": {
     "line number": [
      375,
      382
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      376,
      383
     ]
    },
    "xarray.tests.requires_bottleneck": {
     "line number": [
      368
     ]
    },
    "xarray.tests.requires_dask": {
     "line number": [
      369
     ]
    },
    "xarray.tests.test_missing.da": {
     "line number": [
      371,
      372,
      372,
      373,
      374,
      379,
      379,
      380,
      381
     ]
    },
    "xarray.tests.test_missing.make_interpolate_example_data": {
     "line number": [
      371
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_bfill_dataset": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": {
    "xarray.tests.requires_bottleneck": {
     "line number": [
      452
     ]
    },
    "xarray.tests.requires_np112": {
     "line number": [
      453
     ]
    },
    "xarray.tests.test_missing.ds": {
     "line number": [
      455
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_ffill": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      343,
      344
     ]
    },
    "numpy.float64": {
     "line number": [
      343,
      344
     ]
    },
    "numpy.nan": {
     "line number": [
      343
     ]
    },
    "xarray.DataArray": {
     "line number": [
      343,
      344
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      346
     ]
    },
    "xarray.tests.requires_bottleneck": {
     "line number": [
      341
     ]
    },
    "xarray.tests.requires_np112": {
     "line number": [
      340
     ]
    },
    "xarray.tests.test_missing.da": {
     "line number": [
      343,
      345
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_ffill_bfill_allnans": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": {
    "numpy.float64": {
     "line number": [
      404
     ]
    },
    "numpy.full": {
     "line number": [
      404
     ]
    },
    "numpy.nan": {
     "line number": [
      404
     ]
    },
    "xarray.DataArray": {
     "line number": [
      405
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      408,
      411
     ]
    },
    "xarray.tests.requires_bottleneck": {
     "line number": [
      400
     ]
    },
    "xarray.tests.requires_np112": {
     "line number": [
      401
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_ffill_bfill_nonans": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      390
     ]
    },
    "numpy.float64": {
     "line number": [
      390
     ]
    },
    "xarray.DataArray": {
     "line number": [
      391
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      394,
      397
     ]
    },
    "xarray.tests.requires_bottleneck": {
     "line number": [
      386
     ]
    },
    "xarray.tests.requires_np112": {
     "line number": [
      387
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_ffill_dask": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      357,
      364
     ]
    },
    "xarray.core.pycompat.dask_array_type": {
     "line number": [
      357,
      364
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      358,
      365
     ]
    },
    "xarray.tests.requires_bottleneck": {
     "line number": [
      350
     ]
    },
    "xarray.tests.requires_dask": {
     "line number": [
      351
     ]
    },
    "xarray.tests.requires_np112": {
     "line number": [
      349
     ]
    },
    "xarray.tests.test_missing.da": {
     "line number": [
      353,
      354,
      354,
      355,
      356,
      361,
      361,
      362,
      363
     ]
    },
    "xarray.tests.test_missing.make_interpolate_example_data": {
     "line number": [
      353
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_ffill_dataset": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": {
    "xarray.tests.requires_bottleneck": {
     "line number": [
      446
     ]
    },
    "xarray.tests.requires_np112": {
     "line number": [
      447
     ]
    },
    "xarray.tests.test_missing.ds": {
     "line number": [
      449
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_ffill_functions": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": {
    "xarray.tests.requires_bottleneck": {
     "line number": [
      414
     ]
    },
    "xarray.tests.requires_np112": {
     "line number": [
      415
     ]
    },
    "xarray.tests.test_missing.da": {
     "line number": [
      417
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_ffill_limit": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      425,
      425,
      425,
      425,
      425,
      433,
      433,
      433
     ]
    },
    "xarray.DataArray": {
     "line number": [
      424,
      428,
      432
     ]
    },
    "xarray.tests.assert_array_equal": {
     "line number": [
      429
     ]
    },
    "xarray.tests.requires_bottleneck": {
     "line number": [
      421
     ]
    },
    "xarray.tests.requires_np112": {
     "line number": [
      422
     ]
    },
    "xarray.tests.test_missing.da": {
     "line number": [
      424,
      427,
      431
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      214
     ]
    },
    "numpy.float64": {
     "line number": [
      214
     ]
    },
    "numpy.nan": {
     "line number": [
      217
     ]
    },
    "xarray.DataArray": {
     "line number": [
      215,
      218
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      222
     ]
    },
    "xarray.tests.requires_np112": {
     "line number": [
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_2d_coord_raises": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      194
     ]
    },
    "numpy.arange": {
     "line number": [
      188,
      189
     ]
    },
    "numpy.nan": {
     "line number": [
      192
     ]
    },
    "numpy.random.randn": {
     "line number": [
      191
     ]
    },
    "xarray.DataArray": {
     "line number": [
      193
     ]
    },
    "xarray.Variable": {
     "line number": [
      188,
      189
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      194
     ]
    },
    "xarray.tests.test_missing.da": {
     "line number": [
      193,
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_allnans": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "numpy.float64": {
     "line number": [
      237
     ]
    },
    "numpy.full": {
     "line number": [
      237
     ]
    },
    "numpy.nan": {
     "line number": [
      237
     ]
    },
    "xarray.DataArray": {
     "line number": [
      238
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      241
     ]
    },
    "xarray.tests.requires_np112": {
     "line number": [
      234
     ]
    },
    "xarray.tests.requires_scipy": {
     "line number": [
      235
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_dask": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      320,
      327
     ]
    },
    "xarray.core.pycompat.dask_array_type": {
     "line number": [
      320,
      327
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      321,
      328
     ]
    },
    "xarray.tests.requires_dask": {
     "line number": [
      314
     ]
    },
    "xarray.tests.requires_np112": {
     "line number": [
      313
     ]
    },
    "xarray.tests.test_missing.da": {
     "line number": [
      316,
      317,
      317,
      318,
      319,
      324,
      324,
      325,
      326
     ]
    },
    "xarray.tests.test_missing.make_interpolate_example_data": {
     "line number": [
      316
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_dask_raises_for_invalid_chunk_dim": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      336
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      336
     ]
    },
    "xarray.tests.requires_dask": {
     "line number": [
      332
     ]
    },
    "xarray.tests.requires_np112": {
     "line number": [
      331
     ]
    },
    "xarray.tests.test_missing.da": {
     "line number": [
      334,
      335,
      335,
      337
     ]
    },
    "xarray.tests.test_missing.make_interpolate_example_data": {
     "line number": [
      334
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_dataset": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": {
    "xarray.tests.assert_array_equal": {
     "line number": [
      443
     ]
    },
    "xarray.tests.requires_np112": {
     "line number": [
      436
     ]
    },
    "xarray.tests.test_missing.ds": {
     "line number": [
      438,
      443
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_invalid_interpolator_raises": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      174
     ]
    },
    "numpy.array": {
     "line number": [
      173
     ]
    },
    "numpy.float64": {
     "line number": [
      173
     ]
    },
    "numpy.nan": {
     "line number": [
      173
     ]
    },
    "xarray.DataArray": {
     "line number": [
      173
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      174
     ]
    },
    "xarray.tests.test_missing.da": {
     "line number": [
      173,
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_kwargs": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      201,
      202,
      206
     ]
    },
    "numpy.float64": {
     "line number": [
      201,
      202,
      206
     ]
    },
    "numpy.nan": {
     "line number": [
      201
     ]
    },
    "xarray.DataArray": {
     "line number": [
      201,
      202,
      206
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      204,
      208
     ]
    },
    "xarray.tests.requires_np112": {
     "line number": [
      198
     ]
    },
    "xarray.tests.requires_scipy": {
     "line number": [
      199
     ]
    },
    "xarray.tests.test_missing.da": {
     "line number": [
      201,
      203,
      207
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_limits": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      247,
      254
     ]
    },
    "numpy.float64": {
     "line number": [
      248,
      255
     ]
    },
    "numpy.nan": {
     "line number": [
      247,
      247,
      247,
      254
     ]
    },
    "xarray.DataArray": {
     "line number": [
      247,
      254
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      257
     ]
    },
    "xarray.tests.requires_bottleneck": {
     "line number": [
      245
     ]
    },
    "xarray.tests.requires_np112": {
     "line number": [
      244
     ]
    },
    "xarray.tests.test_missing.da": {
     "line number": [
      247,
      250,
      253
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_methods": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      266
     ]
    },
    "numpy.float64": {
     "line number": [
      267
     ]
    },
    "numpy.nan": {
     "line number": [
      266,
      266,
      266
     ]
    },
    "xarray.DataArray": {
     "line number": [
      266
     ]
    },
    "xarray.tests.requires_np112": {
     "line number": [
      260
     ]
    },
    "xarray.tests.requires_scipy": {
     "line number": [
      261
     ]
    },
    "xarray.tests.test_missing.da": {
     "line number": [
      266,
      268,
      271
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_multiindex_raises": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      183
     ]
    },
    "numpy.nan": {
     "line number": [
      180
     ]
    },
    "numpy.random.randn": {
     "line number": [
      179
     ]
    },
    "xarray.DataArray": {
     "line number": [
      181
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      183
     ]
    },
    "xarray.tests.test_missing.da": {
     "line number": [
      181,
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_no_dim_raises": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      168
     ]
    },
    "numpy.array": {
     "line number": [
      167
     ]
    },
    "numpy.float64": {
     "line number": [
      167
     ]
    },
    "numpy.nan": {
     "line number": [
      167
     ]
    },
    "xarray.DataArray": {
     "line number": [
      167
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      168
     ]
    },
    "xarray.tests.test_missing.da": {
     "line number": [
      167,
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_nonans": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      228
     ]
    },
    "numpy.float64": {
     "line number": [
      228
     ]
    },
    "xarray.DataArray": {
     "line number": [
      229
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      231
     ]
    },
    "xarray.tests.requires_np112": {
     "line number": [
      225
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_pd_compat": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      84,
      86,
      86,
      91
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      93
     ]
    },
    "pandas.isnull": {
     "line number": [
      91
     ]
    },
    "xarray.tests.requires_np112": {
     "line number": [
      70
     ]
    },
    "xarray.tests.requires_scipy": {
     "line number": [
      71
     ]
    },
    "xarray.tests.test_missing.da": {
     "line number": [
      80,
      83,
      85
     ]
    },
    "xarray.tests.test_missing.itertools": {
     "line number": [
      77
     ]
    },
    "xarray.tests.test_missing.make_interpolate_example_data": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_pd_compat_non_uniform_index": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      124,
      126,
      132
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      134
     ]
    },
    "pandas.isnull": {
     "line number": [
      132
     ]
    },
    "xarray.tests.requires_np112": {
     "line number": [
      108
     ]
    },
    "xarray.tests.requires_scipy": {
     "line number": [
      109
     ]
    },
    "xarray.tests.test_missing.da": {
     "line number": [
      118,
      123,
      125
     ]
    },
    "xarray.tests.test_missing.itertools": {
     "line number": [
      115
     ]
    },
    "xarray.tests.test_missing.make_interpolate_example_data": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_pd_compat_polynomial": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      154
     ]
    },
    "xarray.tests.requires_np112": {
     "line number": [
      137
     ]
    },
    "xarray.tests.requires_scipy": {
     "line number": [
      138
     ]
    },
    "xarray.tests.test_missing.da": {
     "line number": [
      147,
      150,
      153
     ]
    },
    "xarray.tests.test_missing.itertools": {
     "line number": [
      144
     ]
    },
    "xarray.tests.test_missing.make_interpolate_example_data": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_unsorted_index_raises": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      162
     ]
    },
    "numpy.array": {
     "line number": [
      160
     ]
    },
    "numpy.float64": {
     "line number": [
      160
     ]
    },
    "xarray.DataArray": {
     "line number": [
      161
     ]
    },
    "xarray.tests.raises_regex": {
     "line number": [
      162
     ]
    },
    "xarray.tests.requires_np112": {
     "line number": [
      157
     ]
    },
    "xarray.tests.requires_scipy": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolate_use_coordinate": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      293
     ]
    },
    "numpy.float64": {
     "line number": [
      294
     ]
    },
    "numpy.nan": {
     "line number": [
      293,
      293,
      293
     ]
    },
    "xarray.DataArray": {
     "line number": [
      293
     ]
    },
    "xarray.Variable": {
     "line number": [
      292
     ]
    },
    "xarray.tests.assert_equal": {
     "line number": [
      300,
      305,
      310
     ]
    },
    "xarray.tests.requires_np112": {
     "line number": [
      290
     ]
    },
    "xarray.tests.test_missing.da": {
     "line number": [
      293,
      298,
      299,
      303,
      304,
      308,
      309
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_interpolators": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": {
    "f": {
     "line number": [
      286
     ]
    },
    "interpolator": {
     "line number": [
      285
     ]
    },
    "numpy.array": {
     "line number": [
      281,
      282,
      283
     ]
    },
    "numpy.float64": {
     "line number": [
      281,
      282,
      283
     ]
    },
    "pandas.isnull": {
     "line number": [
      287
     ]
    },
    "xarray.core.missing.NumpyInterpolator": {
     "line number": [
      278
     ]
    },
    "xarray.core.missing.ScipyInterpolator": {
     "line number": [
      279
     ]
    },
    "xarray.core.missing.SplineInterpolator": {
     "line number": [
      280
     ]
    },
    "xarray.tests.requires_np112": {
     "line number": [
      276
     ]
    },
    "xarray.tests.requires_scipy": {
     "line number": [
      275
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_missing.test_scipy_methods_function": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "xarray.tests.requires_np112": {
     "line number": [
      96
     ]
    },
    "xarray.tests.requires_scipy": {
     "line number": [
      97
     ]
    },
    "xarray.tests.test_missing.da": {
     "line number": [
      103,
      104,
      105
     ]
    },
    "xarray.tests.test_missing.make_interpolate_example_data": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_missing.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_nputils": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_nputils.NumpyVIndexAdapter": {
  "data": {
   "shadows": "xarray.core.nputils.NumpyVIndexAdapter"
  },
  "type": "import"
 },
 "xarray.tests.test_nputils._is_contiguous": {
  "data": {
   "shadows": "xarray.core.nputils._is_contiguous"
  },
  "type": "import"
 },
 "xarray.tests.test_nputils.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "xarray.tests.test_nputils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_nputils.rolling_window": {
  "data": {
   "shadows": "xarray.core.nputils.rolling_window"
  },
  "type": "import"
 },
 "xarray.tests.test_nputils.test_is_contiguous": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "xarray.core.nputils._is_contiguous": {
     "line number": [
      9,
      10,
      11
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_nputils.test_rolling": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "float": {
     "line number": [
      35,
      42,
      49
     ]
    },
    "numpy.array": {
     "line number": [
      35,
      39,
      46
     ]
    },
    "numpy.nan": {
     "line number": [
      38,
      39,
      42
     ]
    },
    "numpy.stack": {
     "line number": [
      52,
      54
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      43,
      50,
      55
     ]
    },
    "xarray.core.nputils.rolling_window": {
     "line number": [
      37,
      45,
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_nputils.test_vindex": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      15
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      19,
      20,
      27
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      27
     ]
    },
    "xarray.core.nputils.NumpyVIndexAdapter": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_options": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_options.OPTIONS": {
  "data": {
   "shadows": "xarray.core.options.OPTIONS"
  },
  "type": "import"
 },
 "xarray.tests.test_options.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_options.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_options.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_options.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_options.test_invalid_option_raises": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      10
     ]
    },
    "xarray.tests.test_options.pytest": {
     "line number": [
      10
     ]
    },
    "xarray.tests.test_options.xarray": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_options.test_nested_options": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "xarray.core.options.OPTIONS": {
     "line number": [
      15,
      17,
      19,
      20,
      21
     ]
    },
    "xarray.tests.test_options.xarray": {
     "line number": [
      16,
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_options.xarray": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_plot": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "module"
 },
 "xarray.tests.test_plot.Common2dMixin": {
  "data": {
   "lineno": 631
  },
  "type": "class"
 },
 "xarray.tests.test_plot.Common2dMixin.setUp": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      649
     ]
    },
    "numpy.meshgrid": {
     "line number": [
      643
     ]
    },
    "xarray.DataArray": {
     "line number": [
      640,
      644,
      645
     ]
    },
    "xarray.tests.test_plot.easy_array": {
     "line number": [
      640
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_1d_raises_valueerror": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      657
     ]
    },
    "raises_regex": {
     "line number": [
      657
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_2d_function_and_method_signature_same": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": {
    "xarray.tests.test_plot.inspect": {
     "line number": [
      885,
      886
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_3d_raises_valueerror": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      664
     ]
    },
    "raises_regex": {
     "line number": [
      664
     ]
    },
    "xarray.DataArray": {
     "line number": [
      661
     ]
    },
    "xarray.tests.test_plot.easy_array": {
     "line number": [
      661
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      663
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_bad_x_string_exception": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      762,
      764,
      767
     ]
    },
    "raises_regex": {
     "line number": [
      762,
      764,
      767
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_can_change_default_cmap": {
  "data": {
   "lineno": 735
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_can_pass_in_axis": {
  "data": {
   "lineno": 672
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_can_plot_all_nans": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": {
    "numpy.full": {
     "line number": [
      708
     ]
    },
    "numpy.nan": {
     "line number": [
      708
     ]
    },
    "xarray.DataArray": {
     "line number": [
      708
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_can_plot_axis_size_one": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": {
    "numpy.ones": {
     "line number": [
      712
     ]
    },
    "xarray.DataArray": {
     "line number": [
      712
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_cmap_and_color_both": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      942
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      942
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_colorbar_default_label": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": {
    "xarray.tests.test_plot.text_in_fig": {
     "line number": [
      814
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_colorbar_kwargs": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      869
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      837,
      851
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      868
     ]
    },
    "xarray.tests.test_plot.text_in_fig": {
     "line number": [
      827,
      833,
      847,
      861,
      866
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_convenient_facetgrid": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      896,
      910
     ]
    },
    "numpy.ndenumerate": {
     "line number": [
      897,
      911
     ]
    },
    "xarray.DataArray": {
     "line number": [
      893
     ]
    },
    "xarray.tests.test_plot.easy_array": {
     "line number": [
      892
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_convenient_facetgrid_4d": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      927
     ]
    },
    "xarray.DataArray": {
     "line number": [
      924
     ]
    },
    "xarray.tests.test_plot.easy_array": {
     "line number": [
      923
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_coord_strings": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": {
    "set": {
     "line number": [
      774
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_default_cmap": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      727
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_default_title": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": {
    "matplotlib.pyplot.gca": {
     "line number": [
      808
     ]
    },
    "xarray.DataArray": {
     "line number": [
      804
     ]
    },
    "xarray.tests.test_plot.easy_array": {
     "line number": [
      804
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_disallows_rgb_arg": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      715
     ]
    },
    "numpy.ones": {
     "line number": [
      717
     ]
    },
    "xarray.DataArray": {
     "line number": [
      717
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      715
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_diverging_color_limits": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      742
     ]
    },
    "round": {
     "line number": [
      742
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_facetgrid_cmap": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": {
    "len": {
     "line number": [
      937,
      939
     ]
    },
    "numpy.linspace": {
     "line number": [
      933
     ]
    },
    "numpy.random.random": {
     "line number": [
      933
     ]
    },
    "set": {
     "line number": [
      937,
      939
     ]
    },
    "xarray.DataArray": {
     "line number": [
      934
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_label_names": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": {
    "matplotlib.pyplot.gca": {
     "line number": [
      653,
      654
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_no_labels": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": {
    "xarray.tests.test_plot.text_in_fig": {
     "line number": [
      819
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_non_linked_coords": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": {
    "matplotlib.pyplot.gca": {
     "line number": [
      782
     ]
    },
    "numpy.min": {
     "line number": [
      787
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_non_linked_coords_transpose": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": {
    "matplotlib.pyplot.gca": {
     "line number": [
      796
     ]
    },
    "numpy.min": {
     "line number": [
      801
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_nonnumeric_index_raises_typeerror": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      669
     ]
    },
    "raises_regex": {
     "line number": [
      669
     ]
    },
    "xarray.DataArray": {
     "line number": [
      668
     ]
    },
    "xarray.tests.test_plot.easy_array": {
     "line number": [
      668
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_plot_nans": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      700
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_positional_coord_string": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": {
    "matplotlib.pyplot.gca": {
     "line number": [
      752,
      757
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_seaborn_palette_as_cmap": {
  "data": {
   "lineno": 730
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_verbose_facetgrid": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": {
    "xarray.DataArray": {
     "line number": [
      878
     ]
    },
    "xarray.plot.FacetGrid": {
     "line number": [
      879
     ]
    },
    "xarray.tests.test_plot.easy_array": {
     "line number": [
      877
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_viridis_cmap": {
  "data": {
   "lineno": 719
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_x_ticks_are_rotated_for_time": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": {
    "len": {
     "line number": [
      692
     ]
    },
    "matplotlib.pyplot.gca": {
     "line number": [
      694
     ]
    },
    "numpy.random.randn": {
     "line number": [
      692
     ]
    },
    "pandas.date_range": {
     "line number": [
      690
     ]
    },
    "xarray.DataArray": {
     "line number": [
      691
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_xy_strings": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": {
    "matplotlib.pyplot.gca": {
     "line number": [
      746
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_xyincrease_false_changes_axes": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      680
     ]
    },
    "all": {
     "line number": [
      680
     ]
    },
    "matplotlib.pyplot.gca": {
     "line number": [
      677,
      678
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.Common2dMixin.test_xyincrease_true_changes_axes": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      687
     ]
    },
    "all": {
     "line number": [
      687
     ]
    },
    "matplotlib.pyplot.gca": {
     "line number": [
      684,
      685
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.DataArray": {
  "data": {
   "shadows": "xarray.DataArray"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.PlotTestCase": {
  "data": {
   "lineno": 64
  },
  "type": "class"
 },
 "xarray.tests.test_plot.PlotTestCase.contourf_called": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "len": {
     "line number": [
      84
     ]
    },
    "matplotlib.collections.PathCollection": {
     "line number": [
      83
     ]
    },
    "matplotlib.pyplot.gca": {
     "line number": [
      83
     ]
    },
    "plotmethod": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.PlotTestCase.imshow_called": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "len": {
     "line number": [
      79
     ]
    },
    "matplotlib.image.AxesImage": {
     "line number": [
      78
     ]
    },
    "matplotlib.pyplot.gca": {
     "line number": [
      78
     ]
    },
    "plotmethod": {
     "line number": [
      77
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.PlotTestCase.pass_in_axis": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "matplotlib.pyplot.subplots": {
     "line number": [
      71
     ]
    },
    "plotmethod": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.PlotTestCase.tearDown": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "matplotlib.pyplot.close": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestContour": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      999
     ]
    },
    "xarray.plot.contour": {
     "line number": [
      999
     ]
    },
    "xarray.tests.test_plot.Common2dMixin": {
     "line number": [
      997
     ]
    },
    "xarray.tests.test_plot.PlotTestCase": {
     "line number": [
      997
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      996
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestContour.list_of_colors_in_cmap_deprecated": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      1030
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1030
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestContour.test_2d_coord_names": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": {
    "matplotlib.pyplot.gca": {
     "line number": [
      1037
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1033
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestContour.test_cmap_and_color_both": {
  "data": {
   "lineno": 1025,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1026
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1026
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestContour.test_colors": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": {
    "_color_as_tuple": {
     "line number": [
      1008,
      1012,
      1017,
      1019,
      1022
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestContour.test_colors._color_as_tuple": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": {
    "tuple": {
     "line number": [
      1005
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestContour.test_single_level": {
  "data": {
   "lineno": 1041
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestContourf": {
  "data": {
   "lineno": 946,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      949
     ]
    },
    "xarray.plot.contourf": {
     "line number": [
      949
     ]
    },
    "xarray.tests.test_plot.Common2dMixin": {
     "line number": [
      947
     ]
    },
    "xarray.tests.test_plot.PlotTestCase": {
     "line number": [
      947
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      946
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestContourf.test_2d_coord_names": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": {
    "matplotlib.pyplot.gca": {
     "line number": [
      983
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      979
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestContourf.test_contourf_called": {
  "data": {
   "lineno": 951,
   "symbols_in_volume": {
    "xarray.tests.test_plot.pytest": {
     "line number": [
      951
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestContourf.test_extend": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": {
    "xarray.tests.test_plot.pytest": {
     "line number": [
      961
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestContourf.test_levels": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": {
    "xarray.tests.test_plot.pytest": {
     "line number": [
      987
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestContourf.test_primitive_artist_returned": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      959
     ]
    },
    "matplotlib.contour.QuadContourSet": {
     "line number": [
      959
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDatetimePlot": {
  "data": {
   "lineno": 1459,
   "symbols_in_volume": {
    "xarray.tests.test_plot.PlotTestCase": {
     "line number": [
      1459
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestDatetimePlot.setUp": {
  "data": {
   "lineno": 1460,
   "symbols_in_volume": {
    "datetime.datetime": {
     "line number": [
      1468
     ]
    },
    "numpy.arange": {
     "line number": [
      1464
     ]
    },
    "numpy.array": {
     "line number": [
      1468
     ]
    },
    "numpy.pi": {
     "line number": [
      1465
     ]
    },
    "numpy.sin": {
     "line number": [
      1465
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1467
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDatetimePlot.test_datetime_line_plot": {
  "data": {
   "lineno": 1472
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDetermineCmapParams": {
  "data": {
   "lineno": 400
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestDetermineCmapParams.setUp": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": {
    "numpy.linspace": {
     "line number": [
      403
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDetermineCmapParams.test_center": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": {
    "xarray.plot.utils._determine_cmap_params": {
     "line number": [
      415
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDetermineCmapParams.test_divergentcontrol": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": {
    "xarray.plot.utils._determine_cmap_params": {
     "line number": [
      481,
      487,
      493,
      497,
      503,
      509,
      515,
      519,
      523,
      529,
      533,
      537,
      543
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDetermineCmapParams.test_integer_levels": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": {
    "int": {
     "line number": [
      427
     ]
    },
    "numpy.arange": {
     "line number": [
      427
     ]
    },
    "xarray.plot.utils._determine_cmap_params": {
     "line number": [
      428,
      434,
      445,
      450,
      454
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      422
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDetermineCmapParams.test_list_levels": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      474
     ]
    },
    "list": {
     "line number": [
      471
     ]
    },
    "numpy.array": {
     "line number": [
      471
     ]
    },
    "pandas.Index": {
     "line number": [
      471
     ]
    },
    "wrap_levels": {
     "line number": [
      473
     ]
    },
    "xarray.DataArray": {
     "line number": [
      471
     ]
    },
    "xarray.plot.utils._determine_cmap_params": {
     "line number": [
      464,
      472
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDetermineCmapParams.test_robust": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": {
    "numpy.percentile": {
     "line number": [
      407,
      408
     ]
    },
    "xarray.plot.utils._determine_cmap_params": {
     "line number": [
      406
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDiscreteColorMap": {
  "data": {
   "lineno": 549
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestDiscreteColorMap.setUp": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": {
    "list": {
     "line number": [
      556
     ]
    },
    "numpy.arange": {
     "line number": [
      552,
      553
     ]
    },
    "numpy.dstack": {
     "line number": [
      554
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      555
     ]
    },
    "numpy.meshgrid": {
     "line number": [
      554
     ]
    },
    "xarray.DataArray": {
     "line number": [
      556
     ]
    },
    "zip": {
     "line number": [
      556
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDiscreteColorMap.test_build_discrete_cmap": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      574
     ]
    },
    "len": {
     "line number": [
      571,
      572,
      572,
      573
     ]
    },
    "max": {
     "line number": [
      575
     ]
    },
    "min": {
     "line number": [
      576
     ]
    },
    "xarray.plot.utils._build_discrete_cmap": {
     "line number": [
      570
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      566
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDiscreteColorMap.test_discrete_colormap_int_levels": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      606
     ]
    },
    "len": {
     "line number": [
      609,
      622
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      599
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDiscreteColorMap.test_discrete_colormap_list_levels_and_vmin_or_vmax": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": {
    "max": {
     "line number": [
      627
     ]
    },
    "min": {
     "line number": [
      628
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDiscreteColorMap.test_discrete_colormap_list_of_levels": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      590
     ]
    },
    "getattr": {
     "line number": [
      589
     ]
    },
    "len": {
     "line number": [
      597,
      597
     ]
    },
    "max": {
     "line number": [
      591
     ]
    },
    "min": {
     "line number": [
      592
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      582
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestDiscreteColorMap.test_recover_from_seaborn_jet_exception": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": {
    "len": {
     "line number": [
      564
     ]
    },
    "numpy.ndarray": {
     "line number": [
      563
     ]
    },
    "type": {
     "line number": [
      563
     ]
    },
    "xarray.plot.utils._color_palette": {
     "line number": [
      562
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      560
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid": {
  "data": {
   "lineno": 1206,
   "symbols_in_volume": {
    "xarray.tests.test_plot.PlotTestCase": {
     "line number": [
      1206
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestFacetGrid.setUp": {
  "data": {
   "lineno": 1207,
   "symbols_in_volume": {
    "xarray.DataArray": {
     "line number": [
      1209
     ]
    },
    "xarray.plot.FacetGrid": {
     "line number": [
      1213
     ]
    },
    "xarray.tests.test_plot.easy_array": {
     "line number": [
      1208
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_can_set_norm": {
  "data": {
   "lineno": 1331,
   "symbols_in_volume": {
    "matplotlib.colors.SymLogNorm": {
     "line number": [
      1333
     ]
    },
    "matplotlib.image.AxesImage": {
     "line number": [
      1335
     ]
    },
    "matplotlib.pyplot.gcf": {
     "line number": [
      1335
     ]
    },
    "xarray.plot.imshow": {
     "line number": [
      1334
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1331
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_can_set_vmin_vmax": {
  "data": {
   "lineno": 1321,
   "symbols_in_volume": {
    "matplotlib.image.AxesImage": {
     "line number": [
      1327
     ]
    },
    "matplotlib.pyplot.gcf": {
     "line number": [
      1327
     ]
    },
    "numpy.allclose": {
     "line number": [
      1329
     ]
    },
    "numpy.array": {
     "line number": [
      1324,
      1328
     ]
    },
    "xarray.plot.imshow": {
     "line number": [
      1325
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1321
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_colorbar": {
  "data": {
   "lineno": 1250,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1262
     ]
    },
    "matplotlib.image.AxesImage": {
     "line number": [
      1258
     ]
    },
    "matplotlib.pyplot.gcf": {
     "line number": [
      1258
     ]
    },
    "numpy.allclose": {
     "line number": [
      1260
     ]
    },
    "numpy.array": {
     "line number": [
      1254,
      1259
     ]
    },
    "xarray.plot.imshow": {
     "line number": [
      1256
     ]
    },
    "xarray.tests.test_plot.find_possible_colorbars": {
     "line number": [
      1262
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1250
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_empty_cell": {
  "data": {
   "lineno": 1264,
   "symbols_in_volume": {
    "xarray.plot.FacetGrid": {
     "line number": [
      1266
     ]
    },
    "xarray.plot.imshow": {
     "line number": [
      1267
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1264
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_facetgrid_colorbar": {
  "data": {
   "lineno": 1408,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1414,
      1417,
      1420
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1411
     ]
    },
    "xarray.tests.test_plot.easy_array": {
     "line number": [
      1410
     ]
    },
    "xarray.tests.test_plot.find_possible_colorbars": {
     "line number": [
      1414,
      1417,
      1420
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1408
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_facetgrid_polar": {
  "data": {
   "lineno": 1422,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      1427
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1422
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_figure_size": {
  "data": {
   "lineno": 1338,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1355,
      1358
     ]
    },
    "assert_array_equal": {
     "line number": [
      1341,
      1344,
      1347,
      1350,
      1353
     ]
    },
    "matplotlib.pyplot.gca": {
     "line number": [
      1359
     ]
    },
    "raises_regex": {
     "line number": [
      1355,
      1358
     ]
    },
    "xarray.plot.FacetGrid": {
     "line number": [
      1343,
      1349,
      1352
     ]
    },
    "xarray.plot.plot": {
     "line number": [
      1356,
      1359
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1338
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_float_index": {
  "data": {
   "lineno": 1287,
   "symbols_in_volume": {
    "xarray.plot.FacetGrid": {
     "line number": [
      1290
     ]
    },
    "xarray.plot.imshow": {
     "line number": [
      1291
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1287
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_groups": {
  "data": {
   "lineno": 1278,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      1285
     ]
    },
    "xarray.plot.imshow": {
     "line number": [
      1280
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1278
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_map": {
  "data": {
   "lineno": 1376,
   "symbols_in_volume": {
    "Ellipsis": {
     "line number": [
      1378
     ]
    },
    "matplotlib.pyplot.contourf": {
     "line number": [
      1378
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1376
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_map_dataset": {
  "data": {
   "lineno": 1381,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1394,
      1398
     ]
    },
    "matplotlib.pyplot.contourf": {
     "line number": [
      1384
     ]
    },
    "xarray.plot.FacetGrid": {
     "line number": [
      1383
     ]
    },
    "xarray.tests.test_plot.find_possible_colorbars": {
     "line number": [
      1394,
      1398
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1381
     ]
    },
    "xarray.tests.test_plot.text_in_fig": {
     "line number": [
      1386,
      1397
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_names_appear_somewhere": {
  "data": {
   "lineno": 1226,
   "symbols_in_volume": {
    "xarray.plot.contourf": {
     "line number": [
      1229
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1226
     ]
    },
    "xarray.tests.test_plot.text_in_fig": {
     "line number": [
      1233
     ]
    },
    "zip": {
     "line number": [
      1230
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_no_args": {
  "data": {
   "lineno": 1215,
   "symbols_in_volume": {
    "xarray.plot.contourf": {
     "line number": [
      1217
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1215
     ]
    },
    "xarray.tests.test_plot.text_in_fig": {
     "line number": [
      1220
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_nonunique_index_error": {
  "data": {
   "lineno": 1293,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1296
     ]
    },
    "raises_regex": {
     "line number": [
      1296
     ]
    },
    "xarray.plot.FacetGrid": {
     "line number": [
      1297
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1293
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_norow_nocol_error": {
  "data": {
   "lineno": 1273,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1275
     ]
    },
    "raises_regex": {
     "line number": [
      1275
     ]
    },
    "xarray.plot.FacetGrid": {
     "line number": [
      1276
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1273
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_num_ticks": {
  "data": {
   "lineno": 1361,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1369,
      1370
     ]
    },
    "xarray.plot.imshow": {
     "line number": [
      1365
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1361
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_robust": {
  "data": {
   "lineno": 1299,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1316
     ]
    },
    "abs": {
     "line number": [
      1318
     ]
    },
    "float": {
     "line number": [
      1315
     ]
    },
    "max": {
     "line number": [
      1318
     ]
    },
    "numpy.zeros": {
     "line number": [
      1301
     ]
    },
    "set": {
     "line number": [
      1311
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1302
     ]
    },
    "xarray.plot.FacetGrid": {
     "line number": [
      1306
     ]
    },
    "xarray.plot.imshow": {
     "line number": [
      1307
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1299
     ]
    },
    "xarray.tests.test_plot.text_in_fig": {
     "line number": [
      1312
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_set_axis_labels": {
  "data": {
   "lineno": 1400,
   "symbols_in_volume": {
    "xarray.plot.contourf": {
     "line number": [
      1402
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1400
     ]
    },
    "xarray.tests.test_plot.text_in_fig": {
     "line number": [
      1404
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid.test_text_not_super_long": {
  "data": {
   "lineno": 1238,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1244
     ]
    },
    "max": {
     "line number": [
      1244
     ]
    },
    "xarray.plot.FacetGrid": {
     "line number": [
      1241
     ]
    },
    "xarray.plot.contour": {
     "line number": [
      1242
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1238
     ]
    },
    "xarray.tests.test_plot.text_in_fig": {
     "line number": [
      1243
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid4d": {
  "data": {
   "lineno": 1432,
   "symbols_in_volume": {
    "xarray.tests.test_plot.PlotTestCase": {
     "line number": [
      1432
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestFacetGrid4d.setUp": {
  "data": {
   "lineno": 1433,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1436,
      1438
     ]
    },
    "str": {
     "line number": [
      1437,
      1439
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1435
     ]
    },
    "xarray.tests.test_plot.easy_array": {
     "line number": [
      1434
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestFacetGrid4d.test_default_labels": {
  "data": {
   "lineno": 1443,
   "symbols_in_volume": {
    "xarray.plot.FacetGrid": {
     "line number": [
      1445
     ]
    },
    "xarray.plot.imshow": {
     "line number": [
      1448
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1443
     ]
    },
    "xarray.tests.test_plot.substring_in_axes": {
     "line number": [
      1452,
      1456
     ]
    },
    "zip": {
     "line number": [
      1451,
      1455
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow": {
  "data": {
   "lineno": 1079,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      1082
     ]
    },
    "xarray.plot.imshow": {
     "line number": [
      1082
     ]
    },
    "xarray.tests.test_plot.Common2dMixin": {
     "line number": [
      1080
     ]
    },
    "xarray.tests.test_plot.PlotTestCase": {
     "line number": [
      1080
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1079
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestImshow.test_2d_coord_names": {
  "data": {
   "lineno": 1121,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1122
     ]
    },
    "raises_regex": {
     "line number": [
      1122
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_cannot_change_mpl_aspect": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1102
     ]
    },
    "matplotlib.pyplot.gca": {
     "line number": [
      1107
     ]
    },
    "matplotlib.pyplot.gcf": {
     "line number": [
      1108
     ]
    },
    "raises_regex": {
     "line number": [
      1102
     ]
    },
    "tuple": {
     "line number": [
      1108
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1099
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_default_aspect_is_auto": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": {
    "matplotlib.pyplot.gca": {
     "line number": [
      1097
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_imshow_called": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": {
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1084
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_imshow_rgb_values_in_valid_range": {
  "data": {
   "lineno": 1193,
   "symbols_in_volume": {
    "matplotlib.pyplot.subplots": {
     "line number": [
      1195
     ]
    },
    "numpy.arange": {
     "line number": [
      1194
     ]
    },
    "numpy.uint8": {
     "line number": [
      1197
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1194
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_normalize_rgb_imshow": {
  "data": {
   "lineno": 1173,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      1175,
      1175,
      1176,
      1176,
      1177,
      1177
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1179
     ]
    },
    "xarray.tests.test_plot.easy_array": {
     "line number": [
      1179
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_normalize_rgb_one_arg_error": {
  "data": {
   "lineno": 1183,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1187
     ]
    },
    "dict": {
     "line number": [
      1186,
      1186,
      1190,
      1190
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1184
     ]
    },
    "xarray.tests.test_plot.easy_array": {
     "line number": [
      1184
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1187
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_plot_rgb_faceted": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1146
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1141
     ]
    },
    "xarray.tests.test_plot.easy_array": {
     "line number": [
      1142
     ]
    },
    "xarray.tests.test_plot.find_possible_colorbars": {
     "line number": [
      1146
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_plot_rgb_image": {
  "data": {
   "lineno": 1125,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1130
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1126
     ]
    },
    "xarray.tests.test_plot.easy_array": {
     "line number": [
      1127
     ]
    },
    "xarray.tests.test_plot.find_possible_colorbars": {
     "line number": [
      1130
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_plot_rgb_image_explicit": {
  "data": {
   "lineno": 1132,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1138
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1133
     ]
    },
    "xarray.tests.test_plot.easy_array": {
     "line number": [
      1134
     ]
    },
    "xarray.tests.test_plot.find_possible_colorbars": {
     "line number": [
      1138
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_plot_rgba_image_transposed": {
  "data": {
   "lineno": 1148,
   "symbols_in_volume": {
    "xarray.DataArray": {
     "line number": [
      1150
     ]
    },
    "xarray.tests.test_plot.easy_array": {
     "line number": [
      1151
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_primitive_artist_returned": {
  "data": {
   "lineno": 1110,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1113
     ]
    },
    "matplotlib.image.AxesImage": {
     "line number": [
      1113
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1110
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_regression_rgb_imshow_dim_size_one": {
  "data": {
   "lineno": 1200,
   "symbols_in_volume": {
    "xarray.DataArray": {
     "line number": [
      1202
     ]
    },
    "xarray.tests.test_plot.easy_array": {
     "line number": [
      1202
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_rgb_errors_bad_dim_sizes": {
  "data": {
   "lineno": 1168,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1170
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1169
     ]
    },
    "xarray.tests.test_plot.easy_array": {
     "line number": [
      1169
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1170
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_rgb_errors_too_many_dims": {
  "data": {
   "lineno": 1163,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1165
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1164
     ]
    },
    "xarray.tests.test_plot.easy_array": {
     "line number": [
      1164
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1165
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_seaborn_palette_needs_levels": {
  "data": {
   "lineno": 1115,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1118
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1118,
      1115
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_warns_ambigious_dim": {
  "data": {
   "lineno": 1155,
   "symbols_in_volume": {
    "UserWarning": {
     "line number": [
      1157
     ]
    },
    "xarray.DataArray": {
     "line number": [
      1156
     ]
    },
    "xarray.tests.test_plot.easy_array": {
     "line number": [
      1156
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1157
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestImshow.test_xy_pixel_centered": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": {
    "matplotlib.pyplot.gca": {
     "line number": [
      1092,
      1093
     ]
    },
    "numpy.allclose": {
     "line number": [
      1092,
      1093
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPcolormesh": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      1050
     ]
    },
    "xarray.plot.pcolormesh": {
     "line number": [
      1050
     ]
    },
    "xarray.tests.test_plot.Common2dMixin": {
     "line number": [
      1048
     ]
    },
    "xarray.tests.test_plot.PlotTestCase": {
     "line number": [
      1048
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestPcolormesh.test_2d_coord_names": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": {
    "matplotlib.pyplot.gca": {
     "line number": [
      1064
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1060
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPcolormesh.test_dont_infer_interval_breaks_for_cartopy": {
  "data": {
   "lineno": 1068,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1074
     ]
    },
    "matplotlib.collections.QuadMesh": {
     "line number": [
      1074
     ]
    },
    "matplotlib.pyplot.gca": {
     "line number": [
      1070
     ]
    },
    "setattr": {
     "line number": [
      1072
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPcolormesh.test_everything_plotted": {
  "data": {
   "lineno": 1056
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPcolormesh.test_primitive_artist_returned": {
  "data": {
   "lineno": 1052,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1054
     ]
    },
    "matplotlib.collections.QuadMesh": {
     "line number": [
      1054
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "xarray.tests.test_plot.PlotTestCase": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestPlot.setUp": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "xarray.DataArray": {
     "line number": [
      89
     ]
    },
    "xarray.tests.test_plot.easy_array": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test1d": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      94
     ]
    },
    "raises_regex": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test2d_1d_2d_coordinates_contourf": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "numpy.linspace": {
     "line number": [
      178
     ]
    },
    "xarray.DataArray": {
     "line number": [
      173
     ]
    },
    "xarray.tests.test_plot.easy_array": {
     "line number": [
      172,
      174
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test2d_nonuniform_calls_contourf": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "xarray.tests.test_plot.pytest": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test2d_uniform_calls_imshow": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test3d": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_1d_x_y_kw": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      109,
      112,
      115
     ]
    },
    "enumerate": {
     "line number": [
      106
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      105
     ]
    },
    "numpy.arange": {
     "line number": [
      98
     ]
    },
    "numpy.cos": {
     "line number": [
      99
     ]
    },
    "raises_regex": {
     "line number": [
      109,
      112,
      115
     ]
    },
    "xarray.DataArray": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_2d_before_squeeze": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "xarray.DataArray": {
     "line number": [
      158
     ]
    },
    "xarray.tests.test_plot.easy_array": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_2d_line": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      119,
      128
     ]
    },
    "raises_regex": {
     "line number": [
      119,
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_2d_line_accepts_hue_kw": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "matplotlib.pyplot.cla": {
     "line number": [
      152
     ]
    },
    "matplotlib.pyplot.gca": {
     "line number": [
      150,
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_2d_line_accepts_legend_kw": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "matplotlib.pyplot.cla": {
     "line number": [
      134
     ]
    },
    "matplotlib.pyplot.gca": {
     "line number": [
      133,
      136,
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_2d_line_accepts_x_kw": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "matplotlib.pyplot.cla": {
     "line number": [
      144
     ]
    },
    "matplotlib.pyplot.gca": {
     "line number": [
      143,
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test__infer_interval_breaks": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      209
     ]
    },
    "assert_array_equal": {
     "line number": [
      190,
      191,
      193
     ]
    },
    "numpy.arange": {
     "line number": [
      198,
      198
     ]
    },
    "numpy.array": {
     "line number": [
      210
     ]
    },
    "numpy.meshgrid": {
     "line number": [
      198
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      205,
      206
     ]
    },
    "numpy.timedelta64": {
     "line number": [
      194
     ]
    },
    "pandas.date_range": {
     "line number": [
      194,
      195
     ]
    },
    "xarray.plot.plot._infer_interval_breaks": {
     "line number": [
      190,
      192,
      195,
      201,
      202,
      203,
      204,
      210
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      209
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_can_pass_in_axis": {
  "data": {
   "lineno": 186
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_convenient_facetgrid": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      234,
      237
     ]
    },
    "assert_array_equal": {
     "line number": [
      230
     ]
    },
    "list": {
     "line number": [
      227
     ]
    },
    "matplotlib.pyplot.gca": {
     "line number": [
      235,
      238
     ]
    },
    "raises_regex": {
     "line number": [
      234,
      237
     ]
    },
    "xarray.DataArray": {
     "line number": [
      226
     ]
    },
    "xarray.tests.test_plot.easy_array": {
     "line number": [
      225
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_convenient_facetgrid_4d": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      296
     ]
    },
    "assert_array_equal": {
     "line number": [
      292
     ]
    },
    "matplotlib.pyplot.gca": {
     "line number": [
      297
     ]
    },
    "raises_regex": {
     "line number": [
      296
     ]
    },
    "xarray.DataArray": {
     "line number": [
      289
     ]
    },
    "xarray.tests.test_plot.easy_array": {
     "line number": [
      288
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      286
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_datetime_dimension": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": {
    "matplotlib.pyplot.gca": {
     "line number": [
      220
     ]
    },
    "pandas.date_range": {
     "line number": [
      215
     ]
    },
    "range": {
     "line number": [
      218
     ]
    },
    "xarray.DataArray": {
     "line number": [
      216
     ]
    },
    "xarray.tests.test_plot.easy_array": {
     "line number": [
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_plot_size": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      274,
      277,
      280,
      283
     ]
    },
    "matplotlib.pyplot.gca": {
     "line number": [
      275,
      281
     ]
    },
    "matplotlib.pyplot.gcf": {
     "line number": [
      263,
      266,
      269,
      272
     ]
    },
    "raises_regex": {
     "line number": [
      274,
      277,
      280,
      283
     ]
    },
    "tuple": {
     "line number": [
      263,
      266,
      272
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      260
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot.test_subplot_kws": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      257
     ]
    },
    "dict": {
     "line number": [
      251
     ]
    },
    "list": {
     "line number": [
      244
     ]
    },
    "matplotlib.colors.to_rgb": {
     "line number": [
      256
     ]
    },
    "xarray.DataArray": {
     "line number": [
      243
     ]
    },
    "xarray.tests.test_plot.easy_array": {
     "line number": [
      242
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      240
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": {
    "xarray.tests.test_plot.PlotTestCase": {
     "line number": [
      300
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestPlot1D.setUp": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": {
    "len": {
     "line number": [
      304
     ]
    },
    "range": {
     "line number": [
      304
     ]
    },
    "xarray.DataArray": {
     "line number": [
      303
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_can_pass_in_axis": {
  "data": {
   "lineno": 331
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_format_string": {
  "data": {
   "lineno": 328
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_no_label_name_on_x_axis": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": {
    "matplotlib.pyplot.gca": {
     "line number": [
      312
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_no_label_name_on_y_axis": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": {
    "matplotlib.pyplot.gca": {
     "line number": [
      316
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_nonnumeric_index_raises_typeerror": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      336
     ]
    },
    "raises_regex": {
     "line number": [
      336
     ]
    },
    "xarray.DataArray": {
     "line number": [
      335
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_plot_nans": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      345
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      343
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_primitive_returned": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      341
     ]
    },
    "matplotlib.lines.Line2D": {
     "line number": [
      341
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_slice_in_title": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": {
    "matplotlib.pyplot.gca": {
     "line number": [
      358
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_x_ticks_are_rotated_for_time": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": {
    "len": {
     "line number": [
      350
     ]
    },
    "matplotlib.pyplot.gca": {
     "line number": [
      352
     ]
    },
    "numpy.arange": {
     "line number": [
      350
     ]
    },
    "pandas.date_range": {
     "line number": [
      349
     ]
    },
    "xarray.DataArray": {
     "line number": [
      350
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_xlabel_is_data_name": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": {
    "matplotlib.pyplot.gca": {
     "line number": [
      326
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_xlabel_is_index_name": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": {
    "matplotlib.pyplot.gca": {
     "line number": [
      308
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlot1D.test_ylabel_is_data_name": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": {
    "matplotlib.pyplot.gca": {
     "line number": [
      321
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotHistogram": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": {
    "xarray.tests.test_plot.PlotTestCase": {
     "line number": [
      362
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.tests.test_plot.TestPlotHistogram.setUp": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": {
    "xarray.DataArray": {
     "line number": [
      364
     ]
    },
    "xarray.tests.test_plot.easy_array": {
     "line number": [
      364
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotHistogram.test_3d_array": {
  "data": {
   "lineno": 366
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotHistogram.test_can_pass_in_axis": {
  "data": {
   "lineno": 387
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotHistogram.test_can_pass_in_kwargs": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": {
    "len": {
     "line number": [
      385
     ]
    },
    "matplotlib.pyplot.gca": {
     "line number": [
      385
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotHistogram.test_plot_nans": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      396
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      394
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotHistogram.test_primitive_returned": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      392
     ]
    },
    "matplotlib.patches.Rectangle": {
     "line number": [
      392
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotHistogram.test_title_no_name": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": {
    "matplotlib.pyplot.gca": {
     "line number": [
      371
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotHistogram.test_title_uses_name": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": {
    "matplotlib.pyplot.gca": {
     "line number": [
      376
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.TestPlotHistogram.test_ylabel_is_count": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": {
    "matplotlib.pyplot.gca": {
     "line number": [
      380
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot._build_discrete_cmap": {
  "data": {
   "shadows": "xarray.plot.utils._build_discrete_cmap"
  },
  "type": "import"
 },
 "xarray.tests.test_plot._color_palette": {
  "data": {
   "shadows": "xarray.plot.utils._color_palette"
  },
  "type": "import"
 },
 "xarray.tests.test_plot._determine_cmap_params": {
  "data": {
   "shadows": "xarray.plot.utils._determine_cmap_params"
  },
  "type": "import"
 },
 "xarray.tests.test_plot._infer_interval_breaks": {
  "data": {
   "shadows": "xarray.plot.plot._infer_interval_breaks"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.easy_array": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "numpy.linspace": {
     "line number": [
      60
     ]
    },
    "numpy.prod": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.find_possible_colorbars": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "matplotlib.collections.QuadMesh": {
     "line number": [
      40
     ]
    },
    "matplotlib.pyplot.gcf": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.import_seaborn": {
  "data": {
   "shadows": "xarray.plot.utils.import_seaborn"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_plot.substring_in_axes": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "matplotlib.text.Text": {
     "line number": [
      47
     ]
    },
    "set": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.test_import_seaborn_no_warning": {
  "data": {
   "lineno": 1477,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1482
     ]
    },
    "xarray.plot.utils.import_seaborn": {
     "line number": [
      1481
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1480
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.test_plot_seaborn_no_import_warning": {
  "data": {
   "lineno": 1485,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1490
     ]
    },
    "xarray.plot.utils._color_palette": {
     "line number": [
      1489
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      1488
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.text_in_fig": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "matplotlib.pyplot.gcf": {
     "line number": [
      35
     ]
    },
    "matplotlib.text.Text": {
     "line number": [
      35
     ]
    },
    "xarray.tests.test_plot.pytest": {
     "line number": [
      29,
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_plot.xplt": {
  "data": {
   "shadows": "xarray.plot"
  },
  "type": "import"
 },
 "xarray.tests.test_testing": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_testing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_testing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_testing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_testing.test_allclose_regression": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": {
    "xarray.DataArray": {
     "line number": [
      7,
      8
     ]
    },
    "xarray.testing.assert_allclose": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_testing.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_tutorial": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_tutorial.DataArray": {
  "data": {
   "shadows": "xarray.DataArray"
  },
  "type": "import"
 },
 "xarray.tests.test_tutorial.TestLoadDataset": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "xarray.tests.test_tutorial.TestLoadDataset.setUp": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "OSError": {
     "line number": [
      18,
      20
     ]
    },
    "xarray.core.pycompat.suppress": {
     "line number": [
      18,
      20
     ]
    },
    "xarray.tests.test_tutorial.os": {
     "line number": [
      16,
      16,
      19,
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_tutorial.TestLoadDataset.test_download_from_github": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      26
     ]
    },
    "range": {
     "line number": [
      25
     ]
    },
    "xarray.DataArray": {
     "line number": [
      25
     ]
    },
    "xarray.tutorial.load_dataset": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_tutorial.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_tutorial.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_tutorial.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "xarray.tests.test_tutorial.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_tutorial.suppress": {
  "data": {
   "shadows": "xarray.core.pycompat.suppress"
  },
  "type": "import"
 },
 "xarray.tests.test_tutorial.tutorial": {
  "data": {
   "shadows": "xarray.tutorial"
  },
  "type": "import"
 },
 "xarray.tests.test_ufuncs": {
  "data": {
   "symbols_in_volume": {
    "distutils.version.LooseVersion": {
     "line number": [
      18
     ]
    },
    "numpy.__version__": {
     "line number": [
      18
     ]
    },
    "xarray.tests.test_ufuncs.pytest": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "module"
 },
 "xarray.tests.test_ufuncs.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.tests.test_ufuncs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_ufuncs.assert_identical": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      27
     ]
    },
    "float": {
     "line number": [
      23,
      23
     ]
    },
    "isinstance": {
     "line number": [
      24
     ]
    },
    "type": {
     "line number": [
      23,
      23
     ]
    },
    "xarray.DataArray": {
     "line number": [
      24
     ]
    },
    "xarray.Dataset": {
     "line number": [
      24
     ]
    },
    "xarray.Variable": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.assert_identical_": {
  "data": {
   "shadows": "assert_identical"
  },
  "type": "import"
 },
 "xarray.tests.test_ufuncs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_ufuncs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_ufuncs.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "xarray.tests.test_ufuncs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_ufuncs.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_ufuncs.requires_numpy113": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "xarray.tests.test_ufuncs.test_alignment": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "numpy.add": {
     "line number": [
      97,
      102
     ]
    },
    "numpy.nan": {
     "line number": [
      103,
      103,
      103
     ]
    },
    "xarray.Dataset": {
     "line number": [
      94,
      95,
      98,
      103
     ]
    },
    "xarray.set_options": {
     "line number": [
      101
     ]
    },
    "xarray.tests.test_ufuncs.assert_identical": {
     "line number": [
      99,
      105
     ]
    },
    "xarray.tests.test_ufuncs.requires_numpy113": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_binary": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      48
     ]
    },
    "numpy.maximum": {
     "line number": [
      50,
      51,
      52,
      53
     ]
    },
    "numpy.zeros": {
     "line number": [
      44
     ]
    },
    "xarray.DataArray": {
     "line number": [
      46
     ]
    },
    "xarray.Dataset": {
     "line number": [
      47
     ]
    },
    "xarray.Variable": {
     "line number": [
      45
     ]
    },
    "xarray.tests.test_ufuncs.assert_identical": {
     "line number": [
      50,
      51,
      52,
      53
     ]
    },
    "xarray.tests.test_ufuncs.requires_numpy113": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_binary_out": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "numpy.frexp": {
     "line number": [
      64
     ]
    },
    "numpy.ones": {
     "line number": [
      59
     ]
    },
    "xarray.DataArray": {
     "line number": [
      61
     ]
    },
    "xarray.Dataset": {
     "line number": [
      62
     ]
    },
    "xarray.Variable": {
     "line number": [
      60
     ]
    },
    "xarray.tests.test_ufuncs.assert_identical": {
     "line number": [
      65,
      66
     ]
    },
    "xarray.tests.test_ufuncs.requires_numpy113": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_dask_defers_to_xarray": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      145
     ]
    },
    "numpy.add": {
     "line number": [
      143
     ]
    },
    "numpy.ones": {
     "line number": [
      141
     ]
    },
    "xarray.DataArray": {
     "line number": [
      141,
      145
     ]
    },
    "xarray.tests.test_ufuncs.pytest": {
     "line number": [
      140
     ]
    },
    "xarray.tests.test_ufuncs.requires_numpy113": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_groupby": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      88
     ]
    },
    "numpy.maximum": {
     "line number": [
      76,
      77,
      79,
      80,
      82,
      83,
      85,
      86,
      89
     ]
    },
    "raises_regex": {
     "line number": [
      88
     ]
    },
    "xarray.Dataset": {
     "line number": [
      71
     ]
    },
    "xarray.tests.test_ufuncs.assert_identical": {
     "line number": [
      76,
      77,
      79,
      80,
      82,
      83,
      85,
      86
     ]
    },
    "xarray.tests.test_ufuncs.requires_numpy113": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_gufunc_methods": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      151
     ]
    },
    "numpy.add.reduce": {
     "line number": [
      152
     ]
    },
    "raises_regex": {
     "line number": [
      151
     ]
    },
    "xarray.DataArray": {
     "line number": [
      150
     ]
    },
    "xarray.tests.test_ufuncs.requires_numpy113": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_gufuncs": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      173
     ]
    },
    "numpy.sin": {
     "line number": [
      172
     ]
    },
    "raises_regex": {
     "line number": [
      173
     ]
    },
    "xarray.DataArray": {
     "line number": [
      171
     ]
    },
    "xarray.tests.test_ufuncs.requires_numpy113": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_kwargs": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "numpy.add": {
     "line number": [
      111
     ]
    },
    "numpy.float64": {
     "line number": [
      111,
      112
     ]
    },
    "xarray.DataArray": {
     "line number": [
      110
     ]
    },
    "xarray.tests.test_ufuncs.requires_numpy113": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_out": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      160
     ]
    },
    "numpy.add": {
     "line number": [
      161,
      165
     ]
    },
    "numpy.array": {
     "line number": [
      166
     ]
    },
    "numpy.zeros": {
     "line number": [
      164
     ]
    },
    "raises_regex": {
     "line number": [
      160
     ]
    },
    "xarray.DataArray": {
     "line number": [
      157
     ]
    },
    "xarray.tests.test_ufuncs.assert_identical": {
     "line number": [
      166
     ]
    },
    "xarray.tests.test_ufuncs.requires_numpy113": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_unary": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "numpy.cos": {
     "line number": [
      38
     ]
    },
    "numpy.zeros": {
     "line number": [
      33
     ]
    },
    "xarray.DataArray": {
     "line number": [
      35
     ]
    },
    "xarray.Dataset": {
     "line number": [
      36
     ]
    },
    "xarray.Variable": {
     "line number": [
      34
     ]
    },
    "xarray.tests.test_ufuncs.assert_identical": {
     "line number": [
      38
     ]
    },
    "xarray.tests.test_ufuncs.requires_numpy113": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_xarray_defers_to_unrecognized_type": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "Other": {
     "line number": [
      123
     ]
    },
    "numpy.maximum": {
     "line number": [
      124
     ]
    },
    "numpy.sin": {
     "line number": [
      125
     ]
    },
    "xarray.DataArray": {
     "line number": [
      122
     ]
    },
    "xarray.tests.test_ufuncs.requires_numpy113": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_xarray_defers_to_unrecognized_type.Other": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "object": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.tests.test_ufuncs.test_xarray_defers_to_unrecognized_type.Other.__array_ufunc__": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_xarray_handles_dask": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      135
     ]
    },
    "numpy.add": {
     "line number": [
      133
     ]
    },
    "numpy.ones": {
     "line number": [
      131
     ]
    },
    "xarray.DataArray": {
     "line number": [
      131,
      135
     ]
    },
    "xarray.tests.test_ufuncs.pytest": {
     "line number": [
      130
     ]
    },
    "xarray.tests.test_ufuncs.requires_numpy113": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_xarray_ufuncs_deprecation": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "PendingDeprecationWarning": {
     "line number": [
      178
     ]
    },
    "xarray.DataArray": {
     "line number": [
      179
     ]
    },
    "xarray.tests.test_ufuncs.pytest": {
     "line number": [
      178
     ]
    },
    "xarray.ufuncs.cos": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.test_xarray_ufuncs_pickle": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "cos_pickled": {
     "line number": [
      185
     ]
    },
    "xarray.tests.test_ufuncs.assert_identical": {
     "line number": [
      185
     ]
    },
    "xarray.tests.test_ufuncs.pickle": {
     "line number": [
      184,
      184
     ]
    },
    "xarray.ufuncs.cos": {
     "line number": [
      184,
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_ufuncs.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xarray.tests.test_ufuncs.xu": {
  "data": {
   "shadows": "xarray.ufuncs"
  },
  "type": "import"
 },
 "xarray.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_utils.OrderedDict": {
  "data": {
   "shadows": "xarray.core.pycompat.OrderedDict"
  },
  "type": "import"
 },
 "xarray.tests.test_utils.TestAlias": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "xarray.tests.test_utils.TestAlias.test": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "Warning": {
     "line number": [
      19
     ]
    },
    "old_method": {
     "line number": [
      20
     ]
    },
    "xarray.core.utils.alias": {
     "line number": [
      17
     ]
    },
    "xarray.tests.test_utils.pytest": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_utils.TestAlias.test.new_method": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "xarray.tests.test_utils.TestArrayEquiv": {
  "data": {
   "lineno": 50
  },
  "type": "class"
 },
 "xarray.tests.test_utils.TestArrayEquiv.test_0d": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      54,
      56,
      57
     ]
    },
    "numpy.nan": {
     "line number": [
      55,
      56
     ]
    },
    "object": {
     "line number": [
      54,
      56,
      57
     ]
    },
    "xarray.core.duck_array_ops.array_equiv": {
     "line number": [
      54,
      55,
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_utils.TestDictionaries": {
  "data": {
   "lineno": 60
  },
  "type": "class"
 },
 "xarray.tests.test_utils.TestDictionaries.setUp": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "xarray.tests.test_utils.TestDictionaries.test_chain_map": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "xarray.core.utils.ChainMap": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_utils.TestDictionaries.test_dict_equiv": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      108
     ]
    },
    "numpy.arange": {
     "line number": [
      110
     ]
    },
    "numpy.array": {
     "line number": [
      91,
      93
     ]
    },
    "numpy.inf": {
     "line number": [
      105,
      106
     ]
    },
    "numpy.nan": {
     "line number": [
      102,
      103
     ]
    },
    "xarray.core.pycompat.OrderedDict": {
     "line number": [
      89,
      92
     ]
    },
    "xarray.core.utils.dict_equiv": {
     "line number": [
      95,
      97,
      99,
      101,
      104,
      107,
      109,
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_utils.TestDictionaries.test_equivalent": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      72,
      72
     ]
    },
    "numpy.array": {
     "line number": [
      69,
      70,
      71
     ]
    },
    "numpy.nan": {
     "line number": [
      68,
      68
     ]
    },
    "numpy.zeros": {
     "line number": [
      73
     ]
    },
    "xarray.core.utils.equivalent": {
     "line number": [
      67,
      68,
      69,
      70,
      71,
      72,
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_utils.TestDictionaries.test_frozen": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      119
     ]
    },
    "TypeError": {
     "line number": [
      115,
      117
     ]
    },
    "repr": {
     "line number": [
      122
     ]
    },
    "xarray.core.utils.Frozen": {
     "line number": [
      114
     ]
    },
    "xarray.tests.test_utils.pytest": {
     "line number": [
      115,
      117,
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_utils.TestDictionaries.test_ordered_dict_intersection": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "xarray.core.utils.ordered_dict_intersection": {
     "line number": [
      85,
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_utils.TestDictionaries.test_safe": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "xarray.core.utils.update_safety_check": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_utils.TestDictionaries.test_sorted_keys_dict": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "repr": {
     "line number": [
      129
     ]
    },
    "xarray.core.utils.SortedKeysDict": {
     "line number": [
      127,
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_utils.TestDictionaries.test_unsafe": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      80
     ]
    },
    "xarray.core.utils.update_safety_check": {
     "line number": [
      81
     ]
    },
    "xarray.tests.test_utils.pytest": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_utils.TestSafeCastToIndex": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "xarray.tests.test_utils.TestSafeCastToIndex.test": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      35
     ]
    },
    "numpy.arange": {
     "line number": [
      26
     ]
    },
    "numpy.timedelta64": {
     "line number": [
      27
     ]
    },
    "object": {
     "line number": [
      30,
      30,
      32,
      32
     ]
    },
    "pandas.Index": {
     "line number": [
      30,
      31,
      32
     ]
    },
    "pandas.date_range": {
     "line number": [
      25
     ]
    },
    "xarray.core.utils.safe_cast_to_index": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_utils.Test_hashable": {
  "data": {
   "lineno": 172
  },
  "type": "class"
 },
 "xarray.tests.test_utils.Test_hashable.test_hashable": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "xarray.core.utils.hashable": {
     "line number": [
      176,
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_utils.Test_is_uniform_and_sorted": {
  "data": {
   "lineno": 151
  },
  "type": "class"
 },
 "xarray.tests.test_utils.Test_is_uniform_and_sorted.test_not_sorted_not_uniform": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "xarray.core.utils.is_uniform_spaced": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_utils.Test_is_uniform_and_sorted.test_not_sorted_uniform": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "xarray.core.utils.is_uniform_spaced": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_utils.Test_is_uniform_and_sorted.test_relative_tolerance": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "xarray.core.utils.is_uniform_spaced": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_utils.Test_is_uniform_and_sorted.test_sorted_not_uniform": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "xarray.core.utils.is_uniform_spaced": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_utils.Test_is_uniform_and_sorted.test_sorted_uniform": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      154
     ]
    },
    "xarray.core.utils.is_uniform_spaced": {
     "line number": [
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_utils.Test_is_uniform_and_sorted.test_two_numbers": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "xarray.core.utils.is_uniform_spaced": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_utils.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.tests.test_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_utils.duck_array_ops": {
  "data": {
   "shadows": "xarray.core.duck_array_ops"
  },
  "type": "import"
 },
 "xarray.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_utils.test_dask_array_is_scalar": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "dask.array.arange": {
     "line number": [
      186
     ]
    },
    "xarray.core.utils.is_scalar": {
     "line number": [
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_utils.test_hidden_key_dict": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      199,
      201
     ]
    },
    "len": {
     "line number": [
      195
     ]
    },
    "xarray.core.utils.HiddenKeyDict": {
     "line number": [
      194
     ]
    },
    "xarray.tests.test_utils.pytest": {
     "line number": [
      199,
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_utils.test_multiindex_from_product_levels": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "numpy.testing.assert_array_equal": {
     "line number": [
      41,
      43,
      44,
      47
     ]
    },
    "pandas.MultiIndex.from_product": {
     "line number": [
      46
     ]
    },
    "xarray.core.utils.multiindex_from_product_levels": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_utils.test_repr_object": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "repr": {
     "line number": [
      148
     ]
    },
    "xarray.core.utils.ReprObject": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_utils.utils": {
  "data": {
   "shadows": "xarray.core.utils"
  },
  "type": "import"
 },
 "xarray.tests.test_variable": {
  "data": {},
  "type": "module"
 },
 "xarray.tests.test_variable.BasicIndexer": {
  "data": {
   "shadows": "xarray.core.indexing.BasicIndexer"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.Coordinate": {
  "data": {
   "shadows": "xarray.Coordinate"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.CopyOnWriteArray": {
  "data": {
   "shadows": "xarray.core.indexing.CopyOnWriteArray"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.DaskIndexingAdapter": {
  "data": {
   "shadows": "xarray.core.indexing.DaskIndexingAdapter"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.Dataset": {
  "data": {
   "shadows": "xarray.Dataset"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.IndexVariable": {
  "data": {
   "shadows": "xarray.IndexVariable"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.LazilyOuterIndexedArray": {
  "data": {
   "shadows": "xarray.core.indexing.LazilyOuterIndexedArray"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.MemoryCachedArray": {
  "data": {
   "shadows": "xarray.core.indexing.MemoryCachedArray"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.NDArrayMixin": {
  "data": {
   "shadows": "xarray.core.utils.NDArrayMixin"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.NumpyIndexingAdapter": {
  "data": {
   "shadows": "xarray.core.indexing.NumpyIndexingAdapter"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.OrderedDict": {
  "data": {
   "shadows": "xarray.core.pycompat.OrderedDict"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.OuterIndexer": {
  "data": {
   "shadows": "xarray.core.indexing.OuterIndexer"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.PY3": {
  "data": {
   "shadows": "xarray.core.pycompat.PY3"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.PandasIndexAdapter": {
  "data": {
   "shadows": "xarray.core.indexing.PandasIndexAdapter"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.TestAsCompatibleData": {
  "data": {
   "lineno": 1797
  },
  "type": "class"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_converted_types": {
  "data": {
   "lineno": 1808,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      1811
     ]
    },
    "numpy.asarray": {
     "line number": [
      1811,
      1813
     ]
    },
    "numpy.ndarray": {
     "line number": [
      1812
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      1809
     ]
    },
    "type": {
     "line number": [
      1812
     ]
    },
    "xarray.core.variable.as_compatible_data": {
     "line number": [
      1810
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_datetime": {
  "data": {
   "lineno": 1829,
   "symbols_in_volume": {
    "datetime.datetime": {
     "line number": [
      1850
     ]
    },
    "numpy.array": {
     "line number": [
      1836,
      1842
     ]
    },
    "numpy.asarray": {
     "line number": [
      1838,
      1844,
      1847,
      1851
     ]
    },
    "numpy.datetime64": {
     "line number": [
      1830,
      1836,
      1842,
      1849
     ]
    },
    "numpy.dtype": {
     "line number": [
      1834,
      1840,
      1846,
      1853
     ]
    },
    "numpy.ndarray": {
     "line number": [
      1833,
      1839,
      1845,
      1852
     ]
    },
    "source_ndarray": {
     "line number": [
      1847
     ]
    },
    "type": {
     "line number": [
      1833,
      1839,
      1845,
      1852
     ]
    },
    "xarray.core.variable.as_compatible_data": {
     "line number": [
      1831,
      1837,
      1843,
      1850
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_full_like": {
  "data": {
   "lineno": 1855,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      1862,
      1867
     ]
    },
    "bool": {
     "line number": [
      1866,
      1867
     ]
    },
    "xarray.Variable": {
     "line number": [
      1857
     ]
    },
    "xarray.core.common.full_like": {
     "line number": [
      1862,
      1867
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_full_like_dask": {
  "data": {
   "lineno": 1869,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      1885,
      1886,
      1886
     ]
    },
    "check": {
     "line number": [
      1882,
      1885
     ]
    },
    "isinstance": {
     "line number": [
      1892,
      1894,
      1896
     ]
    },
    "numpy.full_like": {
     "line number": [
      1883,
      1886
     ]
    },
    "numpy.ndarray": {
     "line number": [
      1894,
      1896
     ]
    },
    "tuple": {
     "line number": [
      1892
     ]
    },
    "xarray.Variable": {
     "line number": [
      1871
     ]
    },
    "xarray.core.common.full_like": {
     "line number": [
      1882,
      1885,
      1890
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_full_like_dask.check": {
  "data": {
   "lineno": 1874,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      1880
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_masked_array": {
  "data": {
   "lineno": 1815,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      1819,
      1826
     ]
    },
    "float": {
     "line number": [
      1827
     ]
    },
    "int": {
     "line number": [
      1820
     ]
    },
    "numpy.arange": {
     "line number": [
      1816,
      1817,
      1822,
      1823
     ]
    },
    "numpy.dtype": {
     "line number": [
      1820,
      1827
     ]
    },
    "numpy.ma.MaskedArray": {
     "line number": [
      1816,
      1822
     ]
    },
    "numpy.nan": {
     "line number": [
      1824
     ]
    },
    "xarray.core.variable.as_compatible_data": {
     "line number": [
      1818,
      1825
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_ones_like": {
  "data": {
   "lineno": 1906,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      1909,
      1911
     ]
    },
    "int": {
     "line number": [
      1911,
      1912
     ]
    },
    "xarray.Variable": {
     "line number": [
      1907
     ]
    },
    "xarray.core.common.full_like": {
     "line number": [
      1910,
      1912
     ]
    },
    "xarray.core.common.ones_like": {
     "line number": [
      1909,
      1911
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_unchanged_types": {
  "data": {
   "lineno": 1798,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      1801
     ]
    },
    "numpy.asarray": {
     "line number": [
      1799
     ]
    },
    "pandas.date_range": {
     "line number": [
      1802,
      1803
     ]
    },
    "source_ndarray": {
     "line number": [
      1805,
      1806
     ]
    },
    "t": {
     "line number": [
      1804
     ]
    },
    "xarray.core.indexing.LazilyOuterIndexedArray": {
     "line number": [
      1799
     ]
    },
    "xarray.core.indexing.PandasIndexAdapter": {
     "line number": [
      1799
     ]
    },
    "xarray.core.variable.as_compatible_data": {
     "line number": [
      1806
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_unsupported_type": {
  "data": {
   "lineno": 1914,
   "symbols_in_volume": {
    "CustomArray": {
     "line number": [
      1923
     ]
    },
    "CustomIndexable": {
     "line number": [
      1927,
      1929
     ]
    },
    "isinstance": {
     "line number": [
      1925,
      1929
     ]
    },
    "numpy.arange": {
     "line number": [
      1923,
      1927
     ]
    },
    "numpy.ndarray": {
     "line number": [
      1925
     ]
    },
    "xarray.Variable": {
     "line number": [
      1924,
      1928
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_unsupported_type.CustomArray": {
  "data": {
   "lineno": 1916,
   "symbols_in_volume": {
    "xarray.core.utils.NDArrayMixin": {
     "line number": [
      1916
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_unsupported_type.CustomArray.__init__": {
  "data": {
   "lineno": 1917
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_unsupported_type.CustomIndexable": {
  "data": {
   "lineno": 1920,
   "symbols_in_volume": {
    "xarray.core.indexing.ExplicitlyIndexed": {
     "line number": [
      1920
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.tests.test_variable.TestAsCompatibleData.test_zeros_like": {
  "data": {
   "lineno": 1898,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      1901,
      1903
     ]
    },
    "int": {
     "line number": [
      1903,
      1904
     ]
    },
    "xarray.Variable": {
     "line number": [
      1899
     ]
    },
    "xarray.core.common.full_like": {
     "line number": [
      1902,
      1904
     ]
    },
    "xarray.core.common.zeros_like": {
     "line number": [
      1901,
      1903
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestBackendIndexing": {
  "data": {
   "lineno": 1938
  },
  "type": "class"
 },
 "xarray.tests.test_variable.TestBackendIndexing.check_orthogonal_indexing": {
  "data": {
   "lineno": 1944,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      1945
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestBackendIndexing.check_vectorized_indexing": {
  "data": {
   "lineno": 1948,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      1951
     ]
    },
    "xarray.Variable": {
     "line number": [
      1949,
      1950
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestBackendIndexing.setUp": {
  "data": {
   "lineno": 1941,
   "symbols_in_volume": {
    "numpy.float64": {
     "line number": [
      1942
     ]
    },
    "numpy.random.random": {
     "line number": [
      1942
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestBackendIndexing.test_CopyOnWriteArray": {
  "data": {
   "lineno": 1977,
   "symbols_in_volume": {
    "xarray.Variable": {
     "line number": [
      1978,
      1982
     ]
    },
    "xarray.core.indexing.CopyOnWriteArray": {
     "line number": [
      1978,
      1984
     ]
    },
    "xarray.core.indexing.LazilyOuterIndexedArray": {
     "line number": [
      1984
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestBackendIndexing.test_DaskIndexingAdapter": {
  "data": {
   "lineno": 1998,
   "symbols_in_volume": {
    "dask.array": {
     "line number": [
      2001,
      2002,
      2007
     ]
    },
    "dask.array.asarray": {
     "line number": [
      2001
     ]
    },
    "xarray.Variable": {
     "line number": [
      2002,
      2006
     ]
    },
    "xarray.core.indexing.CopyOnWriteArray": {
     "line number": [
      2007
     ]
    },
    "xarray.core.indexing.DaskIndexingAdapter": {
     "line number": [
      2002,
      2007
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestBackendIndexing.test_LazilyOuterIndexedArray": {
  "data": {
   "lineno": 1962,
   "symbols_in_volume": {
    "xarray.Variable": {
     "line number": [
      1963,
      1967,
      1972
     ]
    },
    "xarray.core.indexing.LazilyOuterIndexedArray": {
     "line number": [
      1963,
      1969,
      1969,
      1974
     ]
    },
    "xarray.core.indexing.NumpyIndexingAdapter": {
     "line number": [
      1974
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestBackendIndexing.test_MemoryCachedArray": {
  "data": {
   "lineno": 1988,
   "symbols_in_volume": {
    "xarray.Variable": {
     "line number": [
      1989,
      1993
     ]
    },
    "xarray.core.indexing.CopyOnWriteArray": {
     "line number": [
      1994
     ]
    },
    "xarray.core.indexing.MemoryCachedArray": {
     "line number": [
      1989,
      1994
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestBackendIndexing.test_NumpyIndexingAdapter": {
  "data": {
   "lineno": 1953,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1958
     ]
    },
    "raises_regex": {
     "line number": [
      1958
     ]
    },
    "xarray.Variable": {
     "line number": [
      1954,
      1959
     ]
    },
    "xarray.core.indexing.NumpyIndexingAdapter": {
     "line number": [
      1954,
      1959,
      1960
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable": {
  "data": {
   "lineno": 1684,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      1685
     ]
    },
    "xarray.IndexVariable": {
     "line number": [
      1685
     ]
    },
    "xarray.tests.test_variable.VariableSubclassTestCases": {
     "line number": [
      1684
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_concat_multiindex": {
  "data": {
   "lineno": 1750,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1756
     ]
    },
    "pandas.MultiIndex": {
     "line number": [
      1756
     ]
    },
    "pandas.MultiIndex.from_product": {
     "line number": [
      1751
     ]
    },
    "xarray.IndexVariable": {
     "line number": [
      1752,
      1752,
      1753
     ]
    },
    "xarray.IndexVariable.concat": {
     "line number": [
      1754
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_concat_periods": {
  "data": {
   "lineno": 1736,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1743,
      1748
     ]
    },
    "list": {
     "line number": [
      1745,
      1745
     ]
    },
    "pandas.PeriodIndex": {
     "line number": [
      1743,
      1748
     ]
    },
    "pandas.period_range": {
     "line number": [
      1737
     ]
    },
    "range": {
     "line number": [
      1745,
      1745
     ]
    },
    "xarray.IndexVariable": {
     "line number": [
      1738,
      1739,
      1740
     ]
    },
    "xarray.IndexVariable.concat": {
     "line number": [
      1741,
      1746
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_coordinate_alias": {
  "data": {
   "lineno": 1758,
   "symbols_in_volume": {
    "Warning": {
     "line number": [
      1759
     ]
    },
    "isinstance": {
     "line number": [
      1761
     ]
    },
    "xarray.Coordinate": {
     "line number": [
      1760
     ]
    },
    "xarray.IndexVariable": {
     "line number": [
      1761
     ]
    },
    "xarray.tests.test_variable.pytest": {
     "line number": [
      1759
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_data": {
  "data": {
   "lineno": 1701,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1708
     ]
    },
    "assert_array_equal": {
     "line number": [
      1706
     ]
    },
    "float": {
     "line number": [
      1705,
      1707
     ]
    },
    "isinstance": {
     "line number": [
      1703,
      1704
     ]
    },
    "numpy.arange": {
     "line number": [
      1702,
      1706
     ]
    },
    "numpy.ndarray": {
     "line number": [
      1704
     ]
    },
    "raises_regex": {
     "line number": [
      1708
     ]
    },
    "xarray.IndexVariable": {
     "line number": [
      1702
     ]
    },
    "xarray.core.indexing.PandasIndexAdapter": {
     "line number": [
      1703
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_datetime64": {
  "data": {
   "lineno": 1763,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1765
     ]
    },
    "xarray.IndexVariable": {
     "line number": [
      1767
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_get_level_variable": {
  "data": {
   "lineno": 1726,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1733
     ]
    },
    "assert_identical": {
     "line number": [
      1731
     ]
    },
    "pandas.MultiIndex.from_product": {
     "line number": [
      1727
     ]
    },
    "raises_regex": {
     "line number": [
      1733
     ]
    },
    "xarray.IndexVariable": {
     "line number": [
      1729,
      1730,
      1734
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_getitem_advanced": {
  "data": {
   "lineno": 1776,
   "symbols_in_volume": {
    "super": {
     "line number": [
      1778
     ]
    },
    "xarray.tests.test_variable.TestIndexVariable": {
     "line number": [
      1778
     ]
    },
    "xarray.tests.test_variable.pytest": {
     "line number": [
      1776
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_getitem_error": {
  "data": {
   "lineno": 1772,
   "symbols_in_volume": {
    "super": {
     "line number": [
      1774
     ]
    },
    "xarray.tests.test_variable.TestIndexVariable": {
     "line number": [
      1774
     ]
    },
    "xarray.tests.test_variable.pytest": {
     "line number": [
      1772
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_getitem_fancy": {
  "data": {
   "lineno": 1780,
   "symbols_in_volume": {
    "super": {
     "line number": [
      1782
     ]
    },
    "xarray.tests.test_variable.TestIndexVariable": {
     "line number": [
      1782
     ]
    },
    "xarray.tests.test_variable.pytest": {
     "line number": [
      1780
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_getitem_uint": {
  "data": {
   "lineno": 1784,
   "symbols_in_volume": {
    "super": {
     "line number": [
      1786
     ]
    },
    "xarray.tests.test_variable.TestIndexVariable": {
     "line number": [
      1786
     ]
    },
    "xarray.tests.test_variable.pytest": {
     "line number": [
      1784
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_init": {
  "data": {
   "lineno": 1687,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1688
     ]
    },
    "raises_regex": {
     "line number": [
      1688
     ]
    },
    "xarray.IndexVariable": {
     "line number": [
      1689
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_level_names": {
  "data": {
   "lineno": 1718,
   "symbols_in_volume": {
    "pandas.MultiIndex.from_product": {
     "line number": [
      1719
     ]
    },
    "xarray.IndexVariable": {
     "line number": [
      1721,
      1724
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_multiindex_default_level_names": {
  "data": {
   "lineno": 1696,
   "symbols_in_volume": {
    "pandas.MultiIndex.from_product": {
     "line number": [
      1697
     ]
    },
    "xarray.IndexVariable": {
     "line number": [
      1698
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_name": {
  "data": {
   "lineno": 1711,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      1715
     ]
    },
    "xarray.IndexVariable": {
     "line number": [
      1712
     ]
    },
    "xarray.tests.test_variable.pytest": {
     "line number": [
      1715
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_pad": {
  "data": {
   "lineno": 1788,
   "symbols_in_volume": {
    "super": {
     "line number": [
      1790
     ]
    },
    "xarray.tests.test_variable.TestIndexVariable": {
     "line number": [
      1790
     ]
    },
    "xarray.tests.test_variable.pytest": {
     "line number": [
      1788
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_rolling_window": {
  "data": {
   "lineno": 1792,
   "symbols_in_volume": {
    "super": {
     "line number": [
      1794
     ]
    },
    "xarray.tests.test_variable.TestIndexVariable": {
     "line number": [
      1794
     ]
    },
    "xarray.tests.test_variable.pytest": {
     "line number": [
      1792
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestIndexVariable.test_to_index": {
  "data": {
   "lineno": 1691,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      1692
     ]
    },
    "pandas.Index": {
     "line number": [
      1694
     ]
    },
    "xarray.IndexVariable": {
     "line number": [
      1693
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      788
     ]
    },
    "xarray.Variable": {
     "line number": [
      788
     ]
    },
    "xarray.tests.test_variable.VariableSubclassTestCases": {
     "line number": [
      787
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.tests.test_variable.TestVariable.setUp": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": {
    "numpy.float64": {
     "line number": [
      791
     ]
    },
    "numpy.random.random": {
     "line number": [
      791
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_0d_datetime": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": {
    "numpy.datetime64": {
     "line number": [
      852
     ]
    },
    "numpy.dtype": {
     "line number": [
      851
     ]
    },
    "pandas.Timestamp": {
     "line number": [
      850
     ]
    },
    "xarray.Variable": {
     "line number": [
      850
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_0d_str": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": {
    "bytes": {
     "line number": [
      847
     ]
    },
    "numpy.dtype": {
     "line number": [
      842,
      846
     ]
    },
    "numpy.string_": {
     "line number": [
      845
     ]
    },
    "xarray.Variable": {
     "line number": [
      841,
      845
     ]
    },
    "xarray.core.pycompat.PY3": {
     "line number": [
      847
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_0d_timedelta": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": {
    "numpy.dtype": {
     "line number": [
      857
     ]
    },
    "numpy.timedelta64": {
     "line number": [
      855,
      858
     ]
    },
    "pandas.to_timedelta": {
     "line number": [
      855
     ]
    },
    "xarray.Variable": {
     "line number": [
      856
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_as_variable": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": {
    "FakeVariable": {
     "line number": [
      939,
      942,
      943,
      946,
      948
     ]
    },
    "TypeError": {
     "line number": [
      957,
      960
     ]
    },
    "ValueError": {
     "line number": [
      973,
      976
     ]
    },
    "assert_identical": {
     "line number": [
      930,
      934,
      940,
      944,
      951,
      955,
      964,
      968
     ]
    },
    "collections.namedtuple": {
     "line number": [
      938,
      942,
      946
     ]
    },
    "isinstance": {
     "line number": [
      935,
      936
     ]
    },
    "numpy.arange": {
     "line number": [
      925,
      970
     ]
    },
    "raises_regex": {
     "line number": [
      957,
      959,
      972,
      975
     ]
    },
    "tuple": {
     "line number": [
      958
     ]
    },
    "xarray.Dataset": {
     "line number": [
      932
     ]
    },
    "xarray.Variable": {
     "line number": [
      926,
      927,
      935,
      936,
      967,
      971
     ]
    },
    "xarray.core.variable.as_variable": {
     "line number": [
      930,
      933,
      936,
      940,
      944,
      951,
      955,
      958,
      961,
      963,
      966,
      974,
      977
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_big_endian_reduce": {
  "data": {
   "lineno": 1476,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      1481
     ]
    },
    "numpy.ones": {
     "line number": [
      1478
     ]
    },
    "xarray.Variable": {
     "line number": [
      1479,
      1480
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_broadcast_equals": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      888,
      889,
      889,
      894,
      901
     ]
    },
    "xarray.Variable": {
     "line number": [
      888,
      889,
      894,
      901
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_broadcasting_failures": {
  "data": {
   "lineno": 1385,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1389,
      1391
     ]
    },
    "numpy.arange": {
     "line number": [
      1386,
      1387,
      1388
     ]
    },
    "raises_regex": {
     "line number": [
      1389,
      1391
     ]
    },
    "xarray.Variable": {
     "line number": [
      1386,
      1387,
      1388
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_broadcasting_math": {
  "data": {
   "lineno": 1356,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      1360,
      1363,
      1366,
      1369,
      1375,
      1378,
      1381
     ]
    },
    "numpy.einsum": {
     "line number": [
      1362,
      1365,
      1368,
      1371,
      1377,
      1380,
      1383
     ]
    },
    "numpy.random.randn": {
     "line number": [
      1357,
      1373
     ]
    },
    "xarray.Variable": {
     "line number": [
      1358,
      1362,
      1365,
      1368,
      1371,
      1374,
      1376,
      1379,
      1382
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_count": {
  "data": {
   "lineno": 1528,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      1531,
      1535,
      1538,
      1543
     ]
    },
    "int": {
     "line number": [
      1539
     ]
    },
    "numpy.array": {
     "line number": [
      1533
     ]
    },
    "numpy.nan": {
     "line number": [
      1530,
      1533,
      1542
     ]
    },
    "object": {
     "line number": [
      1533
     ]
    },
    "xarray.Variable": {
     "line number": [
      1529,
      1530,
      1533,
      1537,
      1541,
      1542
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_data_and_values": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      798
     ]
    },
    "assert_array_equal": {
     "line number": [
      795,
      796
     ]
    },
    "numpy.random.random": {
     "line number": [
      800,
      801,
      804
     ]
    },
    "source_ndarray": {
     "line number": [
      797,
      803,
      806
     ]
    },
    "xarray.Variable": {
     "line number": [
      794
     ]
    },
    "xarray.tests.test_variable.pytest": {
     "line number": [
      798
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_datetime64_conversion_scalar": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": {
    "datetime.datetime": {
     "line number": [
      821
     ]
    },
    "numpy.datetime64": {
     "line number": [
      817,
      819
     ]
    },
    "numpy.dtype": {
     "line number": [
      824,
      826
     ]
    },
    "pandas.Timestamp": {
     "line number": [
      820
     ]
    },
    "xarray.Variable": {
     "line number": [
      823
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_detect_indexer_type": {
  "data": {
   "lineno": 995,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      997
     ]
    },
    "slice": {
     "line number": [
      1003,
      1015,
      1019
     ]
    },
    "type": {
     "line number": [
      1001,
      1004,
      1007,
      1010,
      1013,
      1016,
      1020,
      1024,
      1028,
      1032
     ]
    },
    "xarray.Variable": {
     "line number": [
      998,
      1018,
      1022,
      1026,
      1030
     ]
    },
    "xarray.core.indexing.BasicIndexer": {
     "line number": [
      1001,
      1004
     ]
    },
    "xarray.core.indexing.OuterIndexer": {
     "line number": [
      1007,
      1010,
      1013,
      1016,
      1020,
      1024
     ]
    },
    "xarray.core.indexing.VectorizedIndexer": {
     "line number": [
      1028,
      1032
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_equals_and_identical": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": {
    "copy.deepcopy": {
     "line number": [
      877
     ]
    },
    "numpy.nan": {
     "line number": [
      862
     ]
    },
    "numpy.random.rand": {
     "line number": [
      861,
      878
     ]
    },
    "xarray.Variable": {
     "line number": [
      863,
      865,
      870,
      873
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_get_axis_num": {
  "data": {
   "lineno": 1253,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1259
     ]
    },
    "numpy.random.randn": {
     "line number": [
      1254
     ]
    },
    "raises_regex": {
     "line number": [
      1259
     ]
    },
    "xarray.Variable": {
     "line number": [
      1254
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_getitem_basic": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      1104,
      1108,
      1112,
      1116,
      1121
     ]
    },
    "dict": {
     "line number": [
      1102,
      1106,
      1110,
      1114
     ]
    },
    "slice": {
     "line number": [
      1106,
      1119
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_getitem_with_mask_2d_input": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      1125,
      1127
     ]
    },
    "numpy.nan": {
     "line number": [
      1126,
      1126,
      1126
     ]
    },
    "slice": {
     "line number": [
      1127
     ]
    },
    "xarray.Variable": {
     "line number": [
      1124,
      1126
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_index_0d_numpy_string": {
  "data": {
   "lineno": 1138,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      1141,
      1144
     ]
    },
    "numpy.string_": {
     "line number": [
      1140
     ]
    },
    "numpy.unicode_": {
     "line number": [
      1143
     ]
    },
    "xarray.Variable": {
     "line number": [
      1140,
      1143
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_indexer_type": {
  "data": {
   "lineno": 1034,
   "symbols_in_volume": {
    "assert_indexer_type": {
     "line number": [
      1044,
      1045,
      1046,
      1047,
      1050,
      1051,
      1052,
      1053,
      1055,
      1059,
      1061,
      1063
     ]
    },
    "numpy.random.random": {
     "line number": [
      1036
     ]
    },
    "slice": {
     "line number": [
      1045,
      1046,
      1053
     ]
    },
    "xarray.Variable": {
     "line number": [
      1037,
      1046,
      1047,
      1047,
      1052,
      1053,
      1055,
      1055,
      1059,
      1061,
      1061,
      1063,
      1064
     ]
    },
    "xarray.core.indexing.BasicIndexer": {
     "line number": [
      1044,
      1045,
      1046,
      1047
     ]
    },
    "xarray.core.indexing.OuterIndexer": {
     "line number": [
      1050,
      1051,
      1052,
      1054,
      1056
     ]
    },
    "xarray.core.indexing.VectorizedIndexer": {
     "line number": [
      1060,
      1062,
      1065
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_indexer_type.assert_indexer_type": {
  "data": {
   "lineno": 1039,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1041
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_indexing_0d_unicode": {
  "data": {
   "lineno": 1146,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      1150
     ]
    },
    "xarray.Variable": {
     "line number": [
      1148,
      1149
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_inplace_math": {
  "data": {
   "lineno": 1394,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1404
     ]
    },
    "assert_array_equal": {
     "line number": [
      1402
     ]
    },
    "numpy.arange": {
     "line number": [
      1395,
      1402,
      1405
     ]
    },
    "raises_regex": {
     "line number": [
      1404
     ]
    },
    "source_ndarray": {
     "line number": [
      1401
     ]
    },
    "xarray.Variable": {
     "line number": [
      1396,
      1405
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_isel": {
  "data": {
   "lineno": 1129,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1135
     ]
    },
    "assert_identical": {
     "line number": [
      1131,
      1132,
      1133,
      1134
     ]
    },
    "raises_regex": {
     "line number": [
      1135
     ]
    },
    "slice": {
     "line number": [
      1131,
      1133
     ]
    },
    "xarray.Variable": {
     "line number": [
      1130
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_items": {
  "data": {
   "lineno": 1067,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1090
     ]
    },
    "assert_array_equal": {
     "line number": [
      1097
     ]
    },
    "assert_identical": {
     "line number": [
      1071,
      1072,
      1073,
      1074,
      1075,
      1080,
      1081,
      1082,
      1083,
      1084,
      1085,
      1086,
      1089
     ]
    },
    "enumerate": {
     "line number": [
      1088
     ]
    },
    "iter": {
     "line number": [
      1091
     ]
    },
    "numpy.all": {
     "line number": [
      1094
     ]
    },
    "numpy.arange": {
     "line number": [
      1078,
      1079
     ]
    },
    "numpy.ones": {
     "line number": [
      1097
     ]
    },
    "numpy.random.random": {
     "line number": [
      1068
     ]
    },
    "raises_regex": {
     "line number": [
      1090
     ]
    },
    "range": {
     "line number": [
      1086,
      1086,
      1096,
      1096
     ]
    },
    "xarray.Variable": {
     "line number": [
      1069,
      1073,
      1074,
      1075,
      1078,
      1079,
      1089,
      1091
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_no_conflicts": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      917
     ]
    },
    "numpy.nan": {
     "line number": [
      905,
      905,
      906,
      906,
      914,
      914,
      917,
      917
     ]
    },
    "xarray.Variable": {
     "line number": [
      905,
      906,
      914,
      921
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_numpy_same_methods": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": {
    "float": {
     "line number": [
      811
     ]
    },
    "numpy.arange": {
     "line number": [
      813
     ]
    },
    "numpy.float32": {
     "line number": [
      809
     ]
    },
    "type": {
     "line number": [
      811
     ]
    },
    "xarray.IndexVariable": {
     "line number": [
      813
     ]
    },
    "xarray.Variable": {
     "line number": [
      809
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_quantile": {
  "data": {
   "lineno": 1425,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1432
     ]
    },
    "numpy.nanpercentile": {
     "line number": [
      1432
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1434
     ]
    },
    "xarray.Variable": {
     "line number": [
      1426
     ]
    },
    "zip": {
     "line number": [
      1428
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_quantile_dask_raises": {
  "data": {
   "lineno": 1436,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1441
     ]
    },
    "raises_regex": {
     "line number": [
      1441
     ]
    },
    "xarray.Variable": {
     "line number": [
      1439
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_rank": {
  "data": {
   "lineno": 1451,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1473
     ]
    },
    "assert_equal": {
     "line number": [
      1471
     ]
    },
    "bottleneck.nanrankdata": {
     "line number": [
      1456,
      1457
     ]
    },
    "bottleneck.rankdata": {
     "line number": [
      1462,
      1466
     ]
    },
    "numpy.nan": {
     "line number": [
      1455,
      1469,
      1470
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1458,
      1459,
      1463,
      1467
     ]
    },
    "raises_regex": {
     "line number": [
      1473
     ]
    },
    "xarray.Variable": {
     "line number": [
      1455,
      1461,
      1465,
      1469,
      1470
     ]
    },
    "xarray.tests.requires_bottleneck": {
     "line number": [
      1451
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_rank_dask_raises": {
  "data": {
   "lineno": 1444,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1448
     ]
    },
    "numpy.nan": {
     "line number": [
      1447
     ]
    },
    "raises_regex": {
     "line number": [
      1448
     ]
    },
    "xarray.Variable": {
     "line number": [
      1447
     ]
    },
    "xarray.tests.requires_bottleneck": {
     "line number": [
      1445
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_reduce": {
  "data": {
   "lineno": 1407,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1422
     ]
    },
    "assert_allclose": {
     "line number": [
      1420
     ]
    },
    "assert_identical": {
     "line number": [
      1409,
      1411,
      1413,
      1415,
      1417
     ]
    },
    "numpy.mean": {
     "line number": [
      1418,
      1420
     ]
    },
    "numpy.std": {
     "line number": [
      1409,
      1411,
      1412,
      1413,
      1415,
      1418
     ]
    },
    "raises_regex": {
     "line number": [
      1422
     ]
    },
    "xarray.Variable": {
     "line number": [
      1408,
      1410,
      1414,
      1416,
      1419
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_reduce_funcs": {
  "data": {
   "lineno": 1483,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      1498,
      1508
     ]
    },
    "assert_identical": {
     "line number": [
      1485,
      1486,
      1487,
      1488,
      1490,
      1491,
      1493,
      1495,
      1501,
      1504,
      1505,
      1510
     ]
    },
    "distutils.version.LooseVersion": {
     "line number": [
      1497
     ]
    },
    "numpy.__version__": {
     "line number": [
      1497
     ]
    },
    "numpy.array": {
     "line number": [
      1484,
      1492,
      1494
     ]
    },
    "numpy.mean": {
     "line number": [
      1488
     ]
    },
    "numpy.nan": {
     "line number": [
      1484,
      1487
     ]
    },
    "pandas.Timestamp": {
     "line number": [
      1511
     ]
    },
    "pandas.date_range": {
     "line number": [
      1507
     ]
    },
    "xarray.Variable": {
     "line number": [
      1484,
      1485,
      1486,
      1487,
      1488,
      1490,
      1492,
      1494,
      1495,
      1501,
      1503,
      1504,
      1505,
      1507,
      1511
     ]
    },
    "xarray.tests.test_variable.pytest": {
     "line number": [
      1498,
      1508
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_reduce_keep_attrs": {
  "data": {
   "lineno": 1513,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1520,
      1525,
      1525
     ]
    },
    "xarray.Variable": {
     "line number": [
      1516
     ]
    },
    "xarray.core.pycompat.OrderedDict": {
     "line number": [
      1521
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_repr": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": {
    "repr": {
     "line number": [
      988
     ]
    },
    "textwrap.dedent": {
     "line number": [
      981
     ]
    },
    "xarray.Variable": {
     "line number": [
      980
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_repr_lazy_data": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      993
     ]
    },
    "numpy.arange": {
     "line number": [
      991
     ]
    },
    "repr": {
     "line number": [
      992
     ]
    },
    "xarray.Variable": {
     "line number": [
      991
     ]
    },
    "xarray.core.indexing.LazilyOuterIndexedArray": {
     "line number": [
      991,
      993
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_roll": {
  "data": {
   "lineno": 1185,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1200
     ]
    },
    "assert_identical": {
     "line number": [
      1188,
      1192,
      1193,
      1194,
      1197,
      1198
     ]
    },
    "raises_regex": {
     "line number": [
      1200
     ]
    },
    "xarray.Variable": {
     "line number": [
      1186,
      1191,
      1196
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_roll_consistency": {
  "data": {
   "lineno": 1203,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      1210
     ]
    },
    "numpy.random.randn": {
     "line number": [
      1204
     ]
    },
    "numpy.roll": {
     "line number": [
      1208
     ]
    },
    "xarray.Variable": {
     "line number": [
      1204
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_set_dims": {
  "data": {
   "lineno": 1262,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1280
     ]
    },
    "assert_identical": {
     "line number": [
      1266,
      1269,
      1273,
      1278
     ]
    },
    "raises_regex": {
     "line number": [
      1280
     ]
    },
    "xarray.Variable": {
     "line number": [
      1263,
      1265,
      1272,
      1275
     ]
    },
    "xarray.core.pycompat.OrderedDict": {
     "line number": [
      1271
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_set_dims_object_dtype": {
  "data": {
   "lineno": 1283,
   "symbols_in_volume": {
    "numpy.empty": {
     "line number": [
      1286
     ]
    },
    "object": {
     "line number": [
      1286
     ]
    },
    "range": {
     "line number": [
      1287
     ]
    },
    "xarray.Variable": {
     "line number": [
      1284,
      1289
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_setitem": {
  "data": {
   "lineno": 1545,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      1552,
      1558
     ]
    },
    "dict": {
     "line number": [
      1551,
      1556,
      1560
     ]
    },
    "numpy.ones_like": {
     "line number": [
      1552,
      1558
     ]
    },
    "xarray.Variable": {
     "line number": [
      1546,
      1550,
      1555,
      1559
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_setitem_fancy": {
  "data": {
   "lineno": 1563,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1620
     ]
    },
    "assert_array_equal": {
     "line number": [
      1626,
      1627
     ]
    },
    "assert_assigned_2d": {
     "line number": [
      1573,
      1577,
      1581,
      1585,
      1591,
      1595,
      1599
     ]
    },
    "assert_identical": {
     "line number": [
      1611,
      1618,
      1635,
      1640
     ]
    },
    "dict": {
     "line number": [
      1607,
      1625,
      1633,
      1638
     ]
    },
    "int": {
     "line number": [
      1625
     ]
    },
    "numpy.arange": {
     "line number": [
      1631
     ]
    },
    "numpy.ones": {
     "line number": [
      1605,
      1608,
      1614,
      1625
     ]
    },
    "numpy.ones_like": {
     "line number": [
      1626,
      1627
     ]
    },
    "numpy.random.randn": {
     "line number": [
      1573,
      1577,
      1581,
      1585,
      1591,
      1595,
      1599
     ]
    },
    "numpy.zeros": {
     "line number": [
      1621
     ]
    },
    "raises_regex": {
     "line number": [
      1620
     ]
    },
    "slice": {
     "line number": [
      1586
     ]
    },
    "xarray.Variable": {
     "line number": [
      1574,
      1575,
      1578,
      1579,
      1580,
      1582,
      1583,
      1584,
      1587,
      1588,
      1592,
      1593,
      1596,
      1597,
      1600,
      1601,
      1605,
      1606,
      1608,
      1614,
      1615,
      1617,
      1623,
      1624,
      1625,
      1631,
      1632,
      1634,
      1637,
      1639
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_setitem_fancy.assert_assigned_2d": {
  "data": {
   "lineno": 1565,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      1570
     ]
    },
    "dict": {
     "line number": [
      1569
     ]
    },
    "xarray.Variable": {
     "line number": [
      1568
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_shift": {
  "data": {
   "lineno": 1152,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1171
     ]
    },
    "assert_identical": {
     "line number": [
      1155,
      1159,
      1162,
      1165,
      1168,
      1169,
      1175,
      1178
     ]
    },
    "numpy.nan": {
     "line number": [
      1158,
      1161,
      1161,
      1164,
      1167,
      1177
     ]
    },
    "raises_regex": {
     "line number": [
      1171
     ]
    },
    "xarray.Variable": {
     "line number": [
      1153,
      1158,
      1161,
      1164,
      1167,
      1174,
      1177
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_shift2d": {
  "data": {
   "lineno": 1180,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      1183
     ]
    },
    "numpy.nan": {
     "line number": [
      1182,
      1182,
      1182
     ]
    },
    "xarray.Variable": {
     "line number": [
      1181,
      1182
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_squeeze": {
  "data": {
   "lineno": 1239,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1250
     ]
    },
    "assert_identical": {
     "line number": [
      1241,
      1242,
      1243,
      1244,
      1245,
      1248,
      1249
     ]
    },
    "raises_regex": {
     "line number": [
      1250
     ]
    },
    "xarray.Variable": {
     "line number": [
      1240,
      1241,
      1242,
      1243,
      1244,
      1245,
      1247,
      1248,
      1249
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_stack": {
  "data": {
   "lineno": 1292,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      1296,
      1300,
      1303,
      1307
     ]
    },
    "xarray.Variable": {
     "line number": [
      1293,
      1295,
      1299,
      1306
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_stack_errors": {
  "data": {
   "lineno": 1309,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1312,
      1314
     ]
    },
    "raises_regex": {
     "line number": [
      1312,
      1314
     ]
    },
    "xarray.Variable": {
     "line number": [
      1310
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_stack_unstack_consistency": {
  "data": {
   "lineno": 1350,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      1354
     ]
    },
    "xarray.Variable": {
     "line number": [
      1351
     ]
    },
    "xarray.core.pycompat.OrderedDict": {
     "line number": [
      1353
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_timedelta64_conversion_scalar": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": {
    "datetime.timedelta": {
     "line number": [
      833
     ]
    },
    "numpy.dtype": {
     "line number": [
      836,
      838
     ]
    },
    "numpy.timedelta64": {
     "line number": [
      829,
      831
     ]
    },
    "pandas.Timedelta": {
     "line number": [
      832
     ]
    },
    "xarray.Variable": {
     "line number": [
      835
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_transpose": {
  "data": {
   "lineno": 1212,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      1215,
      1216,
      1221,
      1222,
      1224
     ]
    },
    "numpy.einsum": {
     "line number": [
      1219,
      1223
     ]
    },
    "numpy.random.randn": {
     "line number": [
      1217
     ]
    },
    "xarray.Variable": {
     "line number": [
      1213,
      1214,
      1218,
      1219,
      1223
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_transpose_0d": {
  "data": {
   "lineno": 1226,
   "symbols_in_volume": {
    "numpy.datetime64": {
     "line number": [
      1230
     ]
    },
    "numpy.timedelta64": {
     "line number": [
      1231
     ]
    },
    "object": {
     "line number": [
      1233
     ]
    },
    "xarray.Variable": {
     "line number": [
      1235
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_unstack": {
  "data": {
   "lineno": 1317,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      1321,
      1325,
      1329
     ]
    },
    "xarray.Variable": {
     "line number": [
      1318,
      1320,
      1324,
      1328
     ]
    },
    "xarray.core.pycompat.OrderedDict": {
     "line number": [
      1319,
      1323,
      1327
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_unstack_2d": {
  "data": {
   "lineno": 1340,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      1344,
      1348
     ]
    },
    "xarray.Variable": {
     "line number": [
      1341,
      1343,
      1347
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariable.test_unstack_errors": {
  "data": {
   "lineno": 1331,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1333,
      1335,
      1337
     ]
    },
    "raises_regex": {
     "line number": [
      1333,
      1335,
      1337
     ]
    },
    "xarray.Variable": {
     "line number": [
      1332
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariableWithDask": {
  "data": {
   "lineno": 1643,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      1645
     ]
    },
    "xarray.Variable": {
     "line number": [
      1645
     ]
    },
    "xarray.tests.test_variable.VariableSubclassTestCases": {
     "line number": [
      1644
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.tests.test_variable.TestVariableWithDask.test_0d_object_array_with_list": {
  "data": {
   "lineno": 1647,
   "symbols_in_volume": {
    "super": {
     "line number": [
      1649
     ]
    },
    "xarray.tests.test_variable.TestVariableWithDask": {
     "line number": [
      1649
     ]
    },
    "xarray.tests.test_variable.pytest": {
     "line number": [
      1647
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariableWithDask.test_array_interface": {
  "data": {
   "lineno": 1651,
   "symbols_in_volume": {
    "super": {
     "line number": [
      1654
     ]
    },
    "xarray.tests.test_variable.TestVariableWithDask": {
     "line number": [
      1654
     ]
    },
    "xarray.tests.test_variable.pytest": {
     "line number": [
      1651
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariableWithDask.test_copy_index": {
  "data": {
   "lineno": 1656,
   "symbols_in_volume": {
    "super": {
     "line number": [
      1658
     ]
    },
    "xarray.tests.test_variable.TestVariableWithDask": {
     "line number": [
      1658
     ]
    },
    "xarray.tests.test_variable.pytest": {
     "line number": [
      1656
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariableWithDask.test_eq_all_dtypes": {
  "data": {
   "lineno": 1660,
   "symbols_in_volume": {
    "super": {
     "line number": [
      1662
     ]
    },
    "xarray.tests.test_variable.TestVariableWithDask": {
     "line number": [
      1662
     ]
    },
    "xarray.tests.test_variable.pytest": {
     "line number": [
      1660
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariableWithDask.test_getitem_1d_fancy": {
  "data": {
   "lineno": 1670,
   "symbols_in_volume": {
    "distutils.version.LooseVersion": {
     "line number": [
      1672,
      1672
     ]
    },
    "super": {
     "line number": [
      1674
     ]
    },
    "xarray.tests.test_variable.TestVariableWithDask": {
     "line number": [
      1674
     ]
    },
    "xarray.tests.test_variable.dask": {
     "line number": [
      1672
     ]
    },
    "xarray.tests.test_variable.pytest": {
     "line number": [
      1673
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariableWithDask.test_getitem_fancy": {
  "data": {
   "lineno": 1664,
   "symbols_in_volume": {
    "distutils.version.LooseVersion": {
     "line number": [
      1666,
      1666
     ]
    },
    "super": {
     "line number": [
      1668
     ]
    },
    "xarray.tests.test_variable.TestVariableWithDask": {
     "line number": [
      1668
     ]
    },
    "xarray.tests.test_variable.dask": {
     "line number": [
      1666
     ]
    },
    "xarray.tests.test_variable.pytest": {
     "line number": [
      1667
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.TestVariableWithDask.test_getitem_with_mask_nd_indexer": {
  "data": {
   "lineno": 1676,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      1680
     ]
    },
    "dask.array.arange": {
     "line number": [
      1678
     ]
    },
    "xarray.Variable": {
     "line number": [
      1678,
      1679
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.Variable": {
  "data": {
   "shadows": "xarray.Variable"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "object": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases._assertIndexedLikeNDArray": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "type": {
     "line number": [
      146,
      146,
      147,
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.example_1d_objects": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      360,
      361
     ]
    },
    "numpy.array": {
     "line number": [
      363
     ]
    },
    "numpy.float32": {
     "line number": [
      361
     ]
    },
    "object": {
     "line number": [
      363
     ]
    },
    "pandas.date_range": {
     "line number": [
      362
     ]
    },
    "range": {
     "line number": [
      359
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_0d_object_array_with_list": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      220,
      221,
      222
     ]
    },
    "numpy.empty": {
     "line number": [
      217
     ]
    },
    "object": {
     "line number": [
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_0d_time_data": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": {
    "numpy.datetime64": {
     "line number": [
      240
     ]
    },
    "pandas.date_range": {
     "line number": [
      239
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_1d_math": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      301
     ]
    },
    "assert_array_equal": {
     "line number": [
      302,
      308,
      309,
      310,
      311,
      316,
      319,
      322
     ]
    },
    "assert_identical": {
     "line number": [
      300,
      301,
      304,
      305,
      306,
      314,
      318
     ]
    },
    "float": {
     "line number": [
      324,
      325,
      326,
      327
     ]
    },
    "isinstance": {
     "line number": [
      329,
      330,
      331,
      332
     ]
    },
    "numpy.arange": {
     "line number": [
      292
     ]
    },
    "numpy.ones": {
     "line number": [
      293
     ]
    },
    "xarray.IndexVariable": {
     "line number": [
      330,
      332
     ]
    },
    "xarray.Variable": {
     "line number": [
      329,
      331
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_1d_reduce": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      339
     ]
    },
    "numpy.arange": {
     "line number": [
      335
     ]
    },
    "type": {
     "line number": [
      340
     ]
    },
    "xarray.Variable": {
     "line number": [
      338,
      340
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test___array__": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      368,
      369
     ]
    },
    "numpy.asarray": {
     "line number": [
      368,
      369,
      369,
      370,
      371,
      371
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_aggregate_complex": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": {
    "assert_allclose": {
     "line number": [
      522
     ]
    },
    "numpy.nan": {
     "line number": [
      520
     ]
    },
    "xarray.Variable": {
     "line number": [
      521
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_array_interface": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      345,
      347
     ]
    },
    "assert_identical": {
     "line number": [
      349,
      350,
      353
     ]
    },
    "float": {
     "line number": [
      347,
      347
     ]
    },
    "isinstance": {
     "line number": [
      355,
      356
     ]
    },
    "numpy.arange": {
     "line number": [
      343
     ]
    },
    "numpy.asarray": {
     "line number": [
      345
     ]
    },
    "numpy.sin": {
     "line number": [
      353,
      354,
      355,
      356
     ]
    },
    "xarray.IndexVariable": {
     "line number": [
      356
     ]
    },
    "xarray.Variable": {
     "line number": [
      355
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_attrs": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      53
     ]
    },
    "numpy.arange": {
     "line number": [
      48
     ]
    },
    "xarray.core.pycompat.OrderedDict": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_concat": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      421,
      437
     ]
    },
    "assert_identical": {
     "line number": [
      415,
      417,
      419,
      429,
      432,
      433,
      434,
      436
     ]
    },
    "numpy.arange": {
     "line number": [
      411,
      412,
      426,
      426
     ]
    },
    "numpy.array": {
     "line number": [
      415,
      417,
      419,
      428
     ]
    },
    "numpy.random.random": {
     "line number": [
      431
     ]
    },
    "raises_regex": {
     "line number": [
      421,
      437
     ]
    },
    "xarray.Variable": {
     "line number": [
      415,
      417,
      419,
      422,
      428,
      431
     ]
    },
    "xarray.Variable.concat": {
     "line number": [
      416,
      418,
      420,
      422,
      424,
      432,
      433,
      434,
      436,
      438
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_concat_attrs": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      446,
      448,
      451
     ]
    },
    "numpy.arange": {
     "line number": [
      442,
      445
     ]
    },
    "numpy.concatenate": {
     "line number": [
      445
     ]
    },
    "numpy.ones": {
     "line number": [
      443,
      445
     ]
    },
    "xarray.Variable.concat": {
     "line number": [
      446,
      448,
      451
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_concat_fixed_len_str": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": {
    "assert_equal": {
     "line number": [
      461
     ]
    },
    "numpy.array": {
     "line number": [
      456,
      457,
      460
     ]
    },
    "xarray.Variable": {
     "line number": [
      459
     ]
    },
    "xarray.Variable.concat": {
     "line number": [
      458
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_concat_mixed_dtypes": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      477
     ]
    },
    "numpy.array": {
     "line number": [
      476
     ]
    },
    "object": {
     "line number": [
      476,
      478
     ]
    },
    "xarray.Variable": {
     "line number": [
      476
     ]
    },
    "xarray.Variable.concat": {
     "line number": [
      475
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_concat_number_strings": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      469
     ]
    },
    "numpy.arange": {
     "line number": [
      468
     ]
    },
    "str": {
     "line number": [
      468
     ]
    },
    "xarray.Variable": {
     "line number": [
      468
     ]
    },
    "xarray.Variable.concat": {
     "line number": [
      467
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_copy": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      485,
      494
     ]
    },
    "copy.copy": {
     "line number": [
      494
     ]
    },
    "numpy.arange": {
     "line number": [
      481
     ]
    },
    "source_ndarray": {
     "line number": [
      489,
      490,
      492,
      493
     ]
    },
    "type": {
     "line number": [
      484,
      484
     ]
    },
    "xarray.Variable": {
     "line number": [
      487
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_copy_index": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      504
     ]
    },
    "isinstance": {
     "line number": [
      502,
      503
     ]
    },
    "pandas.MultiIndex": {
     "line number": [
      503
     ]
    },
    "pandas.MultiIndex.from_product": {
     "line number": [
      497
     ]
    },
    "xarray.core.indexing.PandasIndexAdapter": {
     "line number": [
      502
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_datetime64_conversion": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      253
     ]
    },
    "numpy.dtype": {
     "line number": [
      252,
      254
     ]
    },
    "pandas.date_range": {
     "line number": [
      244
     ]
    },
    "source_ndarray": {
     "line number": [
      255,
      255
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_encoding_preserved": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      406
     ]
    },
    "range": {
     "line number": [
      397
     ]
    },
    "slice": {
     "line number": [
      401
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_eq_all_dtypes": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      392,
      394
     ]
    },
    "xarray.Variable": {
     "line number": [
      389
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_equals_all_dtypes": {
  "data": {
   "lineno": 373
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_getitem_0d_array": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      625,
      628,
      631
     ]
    },
    "numpy.array": {
     "line number": [
      624,
      627,
      630
     ]
    },
    "xarray.Variable": {
     "line number": [
      630
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_getitem_1d": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      69,
      73,
      77,
      81,
      86
     ]
    },
    "dict": {
     "line number": [
      67,
      71,
      75,
      79
     ]
    },
    "numpy.array": {
     "line number": [
      64
     ]
    },
    "slice": {
     "line number": [
      71,
      84
     ]
    },
    "xarray.Variable": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_getitem_1d_fancy": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      104
     ]
    },
    "assert_array_equal": {
     "line number": [
      95
     ]
    },
    "assert_identical": {
     "line number": [
      100,
      102
     ]
    },
    "numpy.array": {
     "line number": [
      94
     ]
    },
    "raises_regex": {
     "line number": [
      104
     ]
    },
    "xarray.Variable": {
     "line number": [
      91,
      98,
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_getitem_advanced": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      588,
      593
     ]
    },
    "assert_array_equal": {
     "line number": [
      563,
      567,
      573,
      578,
      584
     ]
    },
    "dict": {
     "line number": [
      571,
      576,
      582,
      583,
      594
     ]
    },
    "numpy.array": {
     "line number": [
      587
     ]
    },
    "raises_regex": {
     "line number": [
      588,
      593
     ]
    },
    "xarray.Variable": {
     "line number": [
      570,
      581,
      589,
      592
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_getitem_dict": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      61
     ]
    },
    "numpy.random.randn": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_getitem_error": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      723,
      728,
      732,
      737
     ]
    },
    "dict": {
     "line number": [
      733
     ]
    },
    "numpy.arange": {
     "line number": [
      735
     ]
    },
    "raises_regex": {
     "line number": [
      723,
      728,
      732,
      737
     ]
    },
    "xarray.Variable": {
     "line number": [
      726,
      727,
      731,
      735,
      736
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_getitem_fancy": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      640,
      647,
      652,
      657,
      663,
      669,
      670,
      676,
      681,
      686,
      692
     ]
    },
    "assert_identical": {
     "line number": [
      699,
      705,
      715
     ]
    },
    "dict": {
     "line number": [
      650,
      655,
      667,
      674,
      679,
      684
     ]
    },
    "numpy.arange": {
     "line number": [
      708
     ]
    },
    "numpy.newaxis": {
     "line number": [
      698
     ]
    },
    "numpy.zeros": {
     "line number": [
      711
     ]
    },
    "slice": {
     "line number": [
      674,
      679,
      684,
      686
     ]
    },
    "xarray.Variable": {
     "line number": [
      637,
      644,
      649,
      654,
      660,
      666,
      673,
      678,
      683,
      689,
      696,
      698,
      701,
      702,
      704,
      708,
      709,
      711
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_getitem_uint": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      612,
      614,
      617
     ]
    },
    "numpy.array": {
     "line number": [
      611,
      613
     ]
    },
    "numpy.uint64": {
     "line number": [
      616
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_getitem_uint_1d": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      602,
      604
     ]
    },
    "numpy.array": {
     "line number": [
      601,
      603
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_getitem_with_mask": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      110,
      111,
      113,
      115
     ]
    },
    "numpy.nan": {
     "line number": [
      110,
      112
     ]
    },
    "slice": {
     "line number": [
      113
     ]
    },
    "xarray.Variable": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_getitem_with_mask_nd_indexer": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      127
     ]
    },
    "xarray.Variable": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_getitem_with_mask_size_zero": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      120,
      121
     ]
    },
    "numpy.nan": {
     "line number": [
      120,
      122,
      122,
      122
     ]
    },
    "xarray.Variable": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_index_0d_datetime": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "datetime.datetime": {
     "line number": [
      171
     ]
    },
    "numpy.datetime64": {
     "line number": [
      173,
      175,
      176,
      179
     ]
    },
    "pandas.DatetimeIndex": {
     "line number": [
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_index_0d_float": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "numpy.float32": {
     "line number": [
      160,
      160
     ]
    },
    "numpy.float_": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_index_0d_int": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "numpy.int32": {
     "line number": [
      154,
      154
     ]
    },
    "numpy.int_": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_index_0d_not_a_time": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "numpy.datetime64": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_index_0d_object": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": {
    "HashableItemWrapper": {
     "line number": [
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_index_0d_object.HashableItemWrapper": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "object": {
     "line number": [
      199
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_index_0d_object.HashableItemWrapper.__eq__": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_index_0d_object.HashableItemWrapper.__hash__": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": {
    "hash": {
     "line number": [
      207
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_index_0d_object.HashableItemWrapper.__init__": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_index_0d_object.HashableItemWrapper.__repr__": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "type": {
     "line number": [
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_index_0d_string": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "numpy.dtype": {
     "line number": [
      165,
      166
     ]
    },
    "xarray.core.pycompat.PY3": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_index_0d_timedelta64": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "datetime.timedelta": {
     "line number": [
      182
     ]
    },
    "numpy.timedelta64": {
     "line number": [
      184,
      186,
      190
     ]
    },
    "pandas.to_timedelta": {
     "line number": [
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_index_and_concat_datetime": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      235
     ]
    },
    "pandas.date_range": {
     "line number": [
      226
     ]
    },
    "range": {
     "line number": [
      230,
      231,
      232
     ]
    },
    "xarray.Variable.concat": {
     "line number": [
      233
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_load": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      554
     ]
    },
    "numpy.arange": {
     "line number": [
      547
     ]
    },
    "type": {
     "line number": [
      552,
      552,
      553,
      553
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_multiindex": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      543,
      544
     ]
    },
    "list": {
     "line number": [
      541
     ]
    },
    "pandas.MultiIndex.from_product": {
     "line number": [
      541
     ]
    },
    "xarray.Variable": {
     "line number": [
      543
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_object_conversion": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      274
     ]
    },
    "object": {
     "line number": [
      274
     ]
    },
    "str": {
     "line number": [
      274
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_pad": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      751,
      761
     ]
    },
    "bool": {
     "line number": [
      755
     ]
    },
    "float": {
     "line number": [
      749
     ]
    },
    "isinstance": {
     "line number": [
      752
     ]
    },
    "numpy.arange": {
     "line number": [
      741
     ]
    },
    "numpy.array": {
     "line number": [
      749,
      759
     ]
    },
    "numpy.full_like": {
     "line number": [
      755
     ]
    },
    "numpy.nan": {
     "line number": [
      750
     ]
    },
    "numpy.pad": {
     "line number": [
      749,
      759
     ]
    },
    "type": {
     "line number": [
      752
     ]
    },
    "zip": {
     "line number": [
      747,
      757
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_pandas_cateogrical_dtype": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      525
     ]
    },
    "pandas.Categorical": {
     "line number": [
      525
     ]
    },
    "print": {
     "line number": [
      527
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_pandas_data": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": {
    "assert_identical": {
     "line number": [
      280
     ]
    },
    "pandas.Index": {
     "line number": [
      281
     ]
    },
    "pandas.Series": {
     "line number": [
      279
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_pandas_datetime64_with_tz": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": {
    "pandas.date_range": {
     "line number": [
      531
     ]
    },
    "print": {
     "line number": [
      535
     ]
    },
    "str": {
     "line number": [
      536
     ]
    },
    "xarray.tests.test_variable.pytz": {
     "line number": [
      532
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_pandas_period_index": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": {
    "pandas.Period": {
     "line number": [
      288
     ]
    },
    "pandas.period_range": {
     "line number": [
      285
     ]
    },
    "repr": {
     "line number": [
      289
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_properties": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      37
     ]
    },
    "float": {
     "line number": [
      38
     ]
    },
    "len": {
     "line number": [
      44
     ]
    },
    "numpy.arange": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_real_and_imag": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      516
     ]
    },
    "assert_allclose": {
     "line number": [
      516
     ]
    },
    "assert_identical": {
     "line number": [
      509,
      512
     ]
    },
    "numpy.arange": {
     "line number": [
      507,
      507,
      508,
      511,
      515
     ]
    },
    "numpy.sqrt": {
     "line number": [
      515
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_rolling_window": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      783
     ]
    },
    "assert_array_equal": {
     "line number": [
      779
     ]
    },
    "isinstance": {
     "line number": [
      782
     ]
    },
    "numpy.arange": {
     "line number": [
      766
     ]
    },
    "numpy.ndarray": {
     "line number": [
      782
     ]
    },
    "xarray.tests.test_variable.pytest": {
     "line number": [
      783
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VariableSubclassTestCases.test_timedelta64_conversion": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": {
    "assert_array_equal": {
     "line number": [
      268
     ]
    },
    "numpy.dtype": {
     "line number": [
      267,
      269
     ]
    },
    "pandas.timedelta_range": {
     "line number": [
      259
     ]
    },
    "source_ndarray": {
     "line number": [
      270,
      270
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.VectorizedIndexer": {
  "data": {
   "shadows": "xarray.core.indexing.VectorizedIndexer"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.as_compatible_data": {
  "data": {
   "shadows": "xarray.core.variable.as_compatible_data"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.as_variable": {
  "data": {
   "shadows": "xarray.core.variable.as_variable"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.bn": {
  "data": {
   "shadows": "bottleneck"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.full_like": {
  "data": {
   "shadows": "xarray.core.common.full_like"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.indexing": {
  "data": {
   "shadows": "xarray.core.indexing"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.ones_like": {
  "data": {
   "shadows": "xarray.core.common.ones_like"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.requires_bottleneck": {
  "data": {
   "shadows": "xarray.tests.requires_bottleneck"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.test_raise_no_warning_for_nan_in_binary_ops": {
  "data": {
   "lineno": 1932,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1935
     ]
    },
    "numpy.NaN": {
     "line number": [
      1934
     ]
    },
    "xarray.Variable": {
     "line number": [
      1934
     ]
    },
    "xarray.tests.test_variable.pytest": {
     "line number": [
      1933
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tests.test_variable.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "xarray.tests.test_variable.zeros_like": {
  "data": {
   "shadows": "xarray.core.common.zeros_like"
  },
  "type": "import"
 },
 "xarray.tests.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "xarray.tests.utils": {
  "data": {
   "shadows": "xarray.core.utils"
  },
  "type": "import"
 },
 "xarray.tests.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.tutorial": {
  "data": {
   "symbols_in_volume": {
    "os.sep.join": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "module"
 },
 "xarray.tutorial._default_cache_dir": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "xarray.tutorial._open_dataset": {
  "data": {
   "shadows": "open_dataset"
  },
  "type": "import"
 },
 "xarray.tutorial._os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "xarray.tutorial._urlretrieve": {
  "data": {
   "shadows": "urlretrieve"
  },
  "type": "import"
 },
 "xarray.tutorial.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.tutorial.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.tutorial.file_md5_checksum": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "open": {
     "line number": [
      21
     ]
    },
    "xarray.tutorial.hashlib": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tutorial.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "xarray.tutorial.load_dataset": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      78
     ]
    },
    "open": {
     "line number": [
      71
     ]
    },
    "os.mkdir": {
     "line number": [
      63
     ]
    },
    "os.path.exists": {
     "line number": [
      58
     ]
    },
    "os.path.expanduser": {
     "line number": [
      52
     ]
    },
    "os.path.isdir": {
     "line number": [
      62
     ]
    },
    "os.remove": {
     "line number": [
      74,
      83
     ]
    },
    "os.sep.join": {
     "line number": [
      54,
      56
     ]
    },
    "xarray.tutorial._default_cache_dir": {
     "line number": [
      27
     ]
    },
    "xarray.tutorial.file_md5_checksum": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.tutorial.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.ufuncs": {
  "data": {
   "symbols_in_volume": {
    "globals": {
     "line number": [
      98
     ]
    },
    "numpy.ndarray": {
     "line number": [
      30
     ]
    },
    "xarray.ufuncs.__all__": {
     "line number": [
      97
     ]
    },
    "xarray.ufuncs._create_op": {
     "line number": [
      98
     ]
    },
    "xarray.ufuncs._xarray_types": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "module"
 },
 "xarray.ufuncs._DataArray": {
  "data": {
   "shadows": "DataArray"
  },
  "type": "import"
 },
 "xarray.ufuncs._Dataset": {
  "data": {
   "shadows": "Dataset"
  },
  "type": "import"
 },
 "xarray.ufuncs._GroupBy": {
  "data": {
   "shadows": "GroupBy"
  },
  "type": "import"
 },
 "xarray.ufuncs._UFuncDispatcher": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "object": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "class"
 },
 "xarray.ufuncs._UFuncDispatcher.__call__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "NotImplemented": {
     "line number": [
      70
     ]
    },
    "PendingDeprecationWarning": {
     "line number": [
      50
     ]
    },
    "TypeError": {
     "line number": [
      55,
      71
     ]
    },
    "_dask_or_eager_func": {
     "line number": [
      53
     ]
    },
    "f": {
     "line number": [
      69
     ]
    },
    "isinstance": {
     "line number": [
      58,
      63,
      66
     ]
    },
    "len": {
     "line number": [
      53,
      54,
      54,
      56,
      57
     ]
    },
    "map": {
     "line number": [
      61
     ]
    },
    "reversed": {
     "line number": [
      68
     ]
    },
    "tuple": {
     "line number": [
      68
     ]
    },
    "type": {
     "line number": [
      72,
      72
     ]
    },
    "warnings.warn": {
     "line number": [
      47
     ]
    },
    "xarray.ufuncs._dispatch_priority": {
     "line number": [
      61
     ]
    },
    "xarray.ufuncs._xarray_types": {
     "line number": [
      58,
      63,
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.ufuncs._UFuncDispatcher.__init__": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "xarray.ufuncs._Variable": {
  "data": {
   "shadows": "Variable"
  },
  "type": "import"
 },
 "xarray.ufuncs.__all__": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "xarray.ufuncs._create_op": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      79
     ]
    },
    "numpy": {
     "line number": [
      79
     ]
    },
    "xarray.ufuncs._UFuncDispatcher": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.ufuncs._dask_array_type": {
  "data": {
   "shadows": "dask_array_type"
  },
  "type": "import"
 },
 "xarray.ufuncs._dispatch_order": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "xarray.ufuncs._dispatch_priority": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      34
     ]
    },
    "isinstance": {
     "line number": [
      35
     ]
    },
    "xarray.ufuncs._dispatch_order": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.ufuncs._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xarray.ufuncs._warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xarray.ufuncs._xarray_types": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "xarray.ufuncs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.ufuncs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "xarray.ufuncs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "xarray.util": {
  "data": {},
  "type": "module"
 },
 "xarray.util.print_versions": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      155
     ]
    },
    "xarray.util.print_versions.main": {
     "line number": [
      156
     ]
    },
    "xarray.util.print_versions.sys": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "module"
 },
 "xarray.util.print_versions.OptionParser": {
  "data": {
   "shadows": "optparse.OptionParser"
  },
  "type": "import"
 },
 "xarray.util.print_versions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "xarray.util.print_versions.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "xarray.util.print_versions.get_sys_info": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      30,
      60
     ]
    },
    "ValueError": {
     "line number": [
      37
     ]
    },
    "xarray.util.print_versions.locale": {
     "line number": [
      57
     ]
    },
    "xarray.util.print_versions.os": {
     "line number": [
      24,
      24,
      55,
      56
     ]
    },
    "xarray.util.print_versions.platform": {
     "line number": [
      45
     ]
    },
    "xarray.util.print_versions.struct": {
     "line number": [
      48
     ]
    },
    "xarray.util.print_versions.subprocess": {
     "line number": [
      26,
      27,
      28
     ]
    },
    "xarray.util.print_versions.sys": {
     "line number": [
      47,
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.util.print_versions.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "xarray.util.print_versions.json": {
  "data": {
   "shadows": "simplejson"
  },
  "type": "import"
 },
 "xarray.util.print_versions.locale": {
  "data": {
   "shadows": "locale"
  },
  "type": "import"
 },
 "xarray.util.print_versions.main": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "optparse.OptionParser": {
     "line number": [
      140
     ]
    },
    "xarray.util.print_versions.show_versions": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.util.print_versions.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "xarray.util.print_versions.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "xarray.util.print_versions.show_versions": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      108,
      114
     ]
    },
    "dict": {
     "line number": [
      117,
      117,
      117
     ]
    },
    "list": {
     "line number": [
      99
     ]
    },
    "print": {
     "line number": [
      120,
      127,
      128,
      131,
      133,
      135
     ]
    },
    "simplejson.dump": {
     "line number": [
      123
     ]
    },
    "ver_f": {
     "line number": [
      106
     ]
    },
    "xarray.util.print_versions.codecs": {
     "line number": [
      122
     ]
    },
    "xarray.util.print_versions.get_sys_info": {
     "line number": [
      67
     ]
    },
    "xarray.util.print_versions.importlib": {
     "line number": [
      105
     ]
    },
    "xarray.util.print_versions.sys": {
     "line number": [
      102,
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "xarray.util.print_versions.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "xarray.util.print_versions.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "xarray.util.print_versions.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "xarray.version": {
  "data": {},
  "type": "module"
 },
 "xarray.version.short_version": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "xarray.version.version": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 }
}