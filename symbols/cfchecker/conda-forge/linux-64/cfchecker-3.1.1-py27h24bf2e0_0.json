{
 "cfchecker": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "cfchecker.cfchecks": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "cfchecker.cfchecks.CFChecker": {
  "lineno": 376,
  "symbols_in_volume": [],
  "type": "class"
 },
 "cfchecker.cfchecks.CFChecker.__init__": {
  "lineno": 378,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker._add_debug": {
  "lineno": 550,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker._add_error": {
  "lineno": 524,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker._add_info": {
  "lineno": 542,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker._add_message": {
  "lineno": 559,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker._add_version": {
  "lineno": 546,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker._add_warn": {
  "lineno": 538,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker._checker": {
  "lineno": 648,
  "symbols_in_volume": [
   "netCDF4.VLType",
   "numpy.character",
   "numpy.double",
   "numpy.dtype",
   "numpy.float32",
   "numpy.int32",
   "re.I",
   "re.match"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker._fatal": {
  "lineno": 514,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker._get_empty_results": {
  "lineno": 506,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker._get_zero_counts": {
  "lineno": 605,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker._init_results": {
  "lineno": 496,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker._init_var_results": {
  "lineno": 509,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker._join_strings": {
  "lineno": 588,
  "symbols_in_volume": [
   "string.join"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker._update_counts": {
  "lineno": 623,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.checker": {
  "lineno": 406,
  "symbols_in_volume": [
   "cfchecker.__version__",
   "netCDF4.Dataset",
   "re.compile",
   "string.split",
   "xml.sax.handler.feature_namespaces",
   "xml.sax.make_parser"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.chkActualRange": {
  "lineno": 2373,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.chkAttribute": {
  "lineno": 1754,
  "symbols_in_volume": [
   "cfunits.Units",
   "numpy.float",
   "numpy.int",
   "numpy.issubdtype",
   "numpy.ndarray",
   "types.NoneType",
   "warnings.resetwarnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.chkAxisAttribute": {
  "lineno": 2511,
  "symbols_in_volume": [
   "re.I",
   "re.match"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.chkBADCUnits": {
  "lineno": 2335,
  "symbols_in_volume": [
   "string.split"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.chkCFRole": {
  "lineno": 1863,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.chkCellMeasures": {
  "lineno": 2040,
  "symbols_in_volume": [
   "cfunits.Units",
   "re.match",
   "re.search",
   "re.sub",
   "string.split"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.chkCellMethods": {
  "lineno": 1933,
  "symbols_in_volume": [
   "cfunits.Units",
   "re.compile",
   "re.findall",
   "re.match",
   "re.split"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.chkCompressAttr": {
  "lineno": 2696,
  "symbols_in_volume": [
   "re.search",
   "string.split"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.chkComputedStandardName": {
  "lineno": 2363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.chkDescription": {
  "lineno": 2602,
  "symbols_in_volume": [
   "re.I",
   "re.match",
   "string.split"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.chkDimensions": {
  "lineno": 1635,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.chkFlags": {
  "lineno": 2760,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.chkFormulaTerms": {
  "lineno": 2103,
  "symbols_in_volume": [
   "re.search",
   "re.sub"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.chkGlobalAttributes": {
  "lineno": 1510,
  "symbols_in_volume": [
   "re.I",
   "re.match",
   "string.split"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.chkGridMappingAttribute": {
  "lineno": 1210,
  "symbols_in_volume": [
   "re.finditer",
   "re.match"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.chkGridMappingVar": {
  "lineno": 1296,
  "symbols_in_volume": [
   "numpy.float",
   "numpy.int",
   "numpy.issubdtype",
   "numpy.ndarray",
   "warnings.resetwarnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.chkMultiDimCoord": {
  "lineno": 2859,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.chkPackedData": {
  "lineno": 2729,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.chkPositiveAttribute": {
  "lineno": 2547,
  "symbols_in_volume": [
   "re.I",
   "re.match"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.chkRaggedArray": {
  "lineno": 1878,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.chkTimeVariableAttributes": {
  "lineno": 2556,
  "symbols_in_volume": [
   "cfunits.Units",
   "re.I",
   "re.match"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.chkUnits": {
  "lineno": 2220,
  "symbols_in_volume": [
   "cfunits.Units",
   "re.compile",
   "re.search"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.chkValidMinMaxRange": {
  "lineno": 2352,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.chkValuesMonotonic": {
  "lineno": 2873,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.chk_FillValue": {
  "lineno": 2467,
  "symbols_in_volume": [
   "numpy.isnan",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.commaOrBlankSeparatedList": {
  "lineno": 1499,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.equalNumOfValues": {
  "lineno": 2841,
  "symbols_in_volume": [
   "numpy.size"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.extendedBlankSeparatedList": {
  "lineno": 1489,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.getCoordinateDataVars": {
  "lineno": 981,
  "symbols_in_volume": [
   "re.search",
   "string.split"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.getFileCFVersion": {
  "lineno": 1580,
  "symbols_in_volume": [
   "re.match",
   "string.split"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.getInterpretation": {
  "lineno": 945,
  "symbols_in_volume": [
   "cfunits.Units",
   "re.I",
   "re.match"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.getStdName": {
  "lineno": 922,
  "symbols_in_volume": [
   "string.split"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.getStringValue": {
  "lineno": 2665,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.masked",
   "numpy.ma.resize",
   "numpy.ma.where",
   "operator.mul"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.getTypeCode": {
  "lineno": 1723,
  "symbols_in_volume": [
   "netCDF4.VLType",
   "netCDF4.Variable"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.get_counts": {
  "lineno": 608,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.get_total_counts": {
  "lineno": 594,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.isNumeric": {
  "lineno": 882,
  "symbols_in_volume": [
   "types"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.isStrictlyMonotonic": {
  "lineno": 2884,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.diff"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.isTime": {
  "lineno": 893,
  "symbols_in_volume": [
   "cfunits.Units"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.isValidCellMethodTypeValue": {
  "lineno": 1901,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.parseBlankSeparatedList": {
  "lineno": 1479,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.setUpAttributeList": {
  "lineno": 803,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.setUpFormulas": {
  "lineno": 1372,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.show_counts": {
  "lineno": 628,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.subst": {
  "lineno": 1204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.uniqueList": {
  "lineno": 867,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.validGridMappingAttributes": {
  "lineno": 1260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.CFChecker.validName": {
  "lineno": 1622,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.CFVersion": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "class"
 },
 "cfchecker.cfchecks.CFVersion.__cmp__": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.CFVersion.__init__": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.CFVersion.__nonzero__": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.CFVersion.__str__": {
  "lineno": 108,
  "symbols_in_volume": [
   "string.join"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.ConstructDict": {
  "lineno": 143,
  "symbols_in_volume": [
   "xml.sax.ContentHandler"
  ],
  "type": "class"
 },
 "cfchecker.cfchecks.ConstructDict.__init__": {
  "lineno": 152,
  "symbols_in_volume": [
   "os.path.isfile",
   "os.path.join",
   "shelve.open",
   "time.time"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.ConstructDict.characters": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.ConstructDict.close": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.ConstructDict.endElement": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.ConstructDict.startElement": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.ConstructList": {
  "lineno": 257,
  "symbols_in_volume": [
   "xml.sax.ContentHandler"
  ],
  "type": "class"
 },
 "cfchecker.cfchecks.ConstructList.__init__": {
  "lineno": 261,
  "symbols_in_volume": [
   "os.path.isfile",
   "os.path.join",
   "shelve.open",
   "time.time"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.ConstructList.characters": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.ConstructList.close": {
  "lineno": 290,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.ConstructList.endElement": {
  "lineno": 319,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.ConstructList.startElement": {
  "lineno": 295,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cfchecker.cfchecks.FatalCheckerError": {
  "lineno": 370,
  "symbols_in_volume": [],
  "type": "class"
 },
 "cfchecker.cfchecks.chkDerivedName": {
  "lineno": 331,
  "symbols_in_volume": [
   "re.search"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.getargs": {
  "lineno": 2899,
  "symbols_in_volume": [
   "getopt.GetoptError",
   "getopt.getopt",
   "os.environ",
   "os.environ.has_key",
   "sys.exit",
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.main": {
  "lineno": 3003,
  "symbols_in_volume": [
   "sys.argv",
   "sys.exit"
  ],
  "type": "function"
 },
 "cfchecker.cfchecks.normalize_whitespace": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 }
}