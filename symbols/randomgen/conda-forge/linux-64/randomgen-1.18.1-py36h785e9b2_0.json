{
 "randomgen": {
  "data": {
   "symbols_in_volume": {
    "get_versions": {
     "line number": [
      32,
      33
     ]
    }
   }
  },
  "type": "module"
 },
 "randomgen.AESCounter": {
  "data": {
   "shadows": "randomgen.aes.AESCounter"
  },
  "type": "import"
 },
 "randomgen.ChaCha": {
  "data": {
   "shadows": "randomgen.chacha.ChaCha"
  },
  "type": "import"
 },
 "randomgen.DSFMT": {
  "data": {
   "shadows": "randomgen.dsfmt.DSFMT"
  },
  "type": "import"
 },
 "randomgen.Generator": {
  "data": {
   "shadows": "randomgen.generator.Generator"
  },
  "type": "import"
 },
 "randomgen.HC128": {
  "data": {
   "shadows": "randomgen.hc128.HC128"
  },
  "type": "import"
 },
 "randomgen.JSF": {
  "data": {
   "shadows": "randomgen.jsf.JSF"
  },
  "type": "import"
 },
 "randomgen.MT19937": {
  "data": {
   "shadows": "randomgen.mt19937.MT19937"
  },
  "type": "import"
 },
 "randomgen.MT64": {
  "data": {
   "shadows": "randomgen.mt64.MT64"
  },
  "type": "import"
 },
 "randomgen.PCG32": {
  "data": {
   "shadows": "randomgen.pcg32.PCG32"
  },
  "type": "import"
 },
 "randomgen.PCG64": {
  "data": {
   "shadows": "randomgen.pcg64.PCG64"
  },
  "type": "import"
 },
 "randomgen.Philox": {
  "data": {
   "shadows": "randomgen.philox.Philox"
  },
  "type": "import"
 },
 "randomgen.RDRAND": {
  "data": {
   "shadows": "randomgen.rdrand.RDRAND"
  },
  "type": "import"
 },
 "randomgen.RandomState": {
  "data": {
   "shadows": "randomgen.mtrand.RandomState"
  },
  "type": "import"
 },
 "randomgen.SFMT": {
  "data": {
   "shadows": "randomgen.sfmt.SFMT"
  },
  "type": "import"
 },
 "randomgen.SPECK128": {
  "data": {
   "shadows": "randomgen.speck128.SPECK128"
  },
  "type": "import"
 },
 "randomgen.SeedSequence": {
  "data": {
   "shadows": "randomgen.seed_sequence.SeedSequence"
  },
  "type": "import"
 },
 "randomgen.SeedlessSeedSequence": {
  "data": {
   "shadows": "randomgen.seed_sequence.SeedlessSeedSequence"
  },
  "type": "import"
 },
 "randomgen.ThreeFry": {
  "data": {
   "shadows": "randomgen.threefry.ThreeFry"
  },
  "type": "import"
 },
 "randomgen.Xoroshiro128": {
  "data": {
   "shadows": "randomgen.xoroshiro128.Xoroshiro128"
  },
  "type": "import"
 },
 "randomgen.Xorshift1024": {
  "data": {
   "shadows": "randomgen.xorshift1024.Xorshift1024"
  },
  "type": "import"
 },
 "randomgen.Xoshiro256": {
  "data": {
   "shadows": "randomgen.xoshiro256.Xoshiro256"
  },
  "type": "import"
 },
 "randomgen.Xoshiro512": {
  "data": {
   "shadows": "randomgen.xoshiro512.Xoshiro512"
  },
  "type": "import"
 },
 "randomgen.__all__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "randomgen.__version__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "randomgen._pickle": {
  "data": {
   "symbols_in_volume": {
    "randomgen.aes.AESCounter": {
     "line number": [
      24
     ]
    },
    "randomgen.chacha.ChaCha": {
     "line number": [
      25
     ]
    },
    "randomgen.dsfmt.DSFMT": {
     "line number": [
      26
     ]
    },
    "randomgen.hc128.HC128": {
     "line number": [
      27
     ]
    },
    "randomgen.jsf.JSF": {
     "line number": [
      28
     ]
    },
    "randomgen.mt19937.MT19937": {
     "line number": [
      29
     ]
    },
    "randomgen.mt64.MT64": {
     "line number": [
      30
     ]
    },
    "randomgen.pcg32.PCG32": {
     "line number": [
      31
     ]
    },
    "randomgen.pcg64.PCG64": {
     "line number": [
      32
     ]
    },
    "randomgen.philox.Philox": {
     "line number": [
      33
     ]
    },
    "randomgen.rdrand.RDRAND": {
     "line number": [
      41
     ]
    },
    "randomgen.sfmt.SFMT": {
     "line number": [
      40
     ]
    },
    "randomgen.speck128.SPECK128": {
     "line number": [
      39
     ]
    },
    "randomgen.threefry.ThreeFry": {
     "line number": [
      34
     ]
    },
    "randomgen.xoroshiro128.Xoroshiro128": {
     "line number": [
      36
     ]
    },
    "randomgen.xorshift1024.Xorshift1024": {
     "line number": [
      35
     ]
    },
    "randomgen.xoshiro256.Xoshiro256": {
     "line number": [
      37
     ]
    },
    "randomgen.xoshiro512.Xoshiro512": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "module"
 },
 "randomgen._pickle.AESCounter": {
  "data": {
   "shadows": "randomgen.aes.AESCounter"
  },
  "type": "import"
 },
 "randomgen._pickle.BitGenerators": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "randomgen._pickle.ChaCha": {
  "data": {
   "shadows": "randomgen.chacha.ChaCha"
  },
  "type": "import"
 },
 "randomgen._pickle.DSFMT": {
  "data": {
   "shadows": "randomgen.dsfmt.DSFMT"
  },
  "type": "import"
 },
 "randomgen._pickle.Generator": {
  "data": {
   "shadows": "randomgen.generator.Generator"
  },
  "type": "import"
 },
 "randomgen._pickle.HC128": {
  "data": {
   "shadows": "randomgen.hc128.HC128"
  },
  "type": "import"
 },
 "randomgen._pickle.JSF": {
  "data": {
   "shadows": "randomgen.jsf.JSF"
  },
  "type": "import"
 },
 "randomgen._pickle.MT19937": {
  "data": {
   "shadows": "randomgen.mt19937.MT19937"
  },
  "type": "import"
 },
 "randomgen._pickle.MT64": {
  "data": {
   "shadows": "randomgen.mt64.MT64"
  },
  "type": "import"
 },
 "randomgen._pickle.PCG32": {
  "data": {
   "shadows": "randomgen.pcg32.PCG32"
  },
  "type": "import"
 },
 "randomgen._pickle.PCG64": {
  "data": {
   "shadows": "randomgen.pcg64.PCG64"
  },
  "type": "import"
 },
 "randomgen._pickle.Philox": {
  "data": {
   "shadows": "randomgen.philox.Philox"
  },
  "type": "import"
 },
 "randomgen._pickle.RDRAND": {
  "data": {
   "shadows": "randomgen.rdrand.RDRAND"
  },
  "type": "import"
 },
 "randomgen._pickle.RandomState": {
  "data": {
   "shadows": "randomgen.mtrand.RandomState"
  },
  "type": "import"
 },
 "randomgen._pickle.SFMT": {
  "data": {
   "shadows": "randomgen.sfmt.SFMT"
  },
  "type": "import"
 },
 "randomgen._pickle.SPECK128": {
  "data": {
   "shadows": "randomgen.speck128.SPECK128"
  },
  "type": "import"
 },
 "randomgen._pickle.ThreeFry": {
  "data": {
   "shadows": "randomgen.threefry.ThreeFry"
  },
  "type": "import"
 },
 "randomgen._pickle.Xoroshiro128": {
  "data": {
   "shadows": "randomgen.xoroshiro128.Xoroshiro128"
  },
  "type": "import"
 },
 "randomgen._pickle.Xorshift1024": {
  "data": {
   "shadows": "randomgen.xorshift1024.Xorshift1024"
  },
  "type": "import"
 },
 "randomgen._pickle.Xoshiro256": {
  "data": {
   "shadows": "randomgen.xoshiro256.Xoshiro256"
  },
  "type": "import"
 },
 "randomgen._pickle.Xoshiro512": {
  "data": {
   "shadows": "randomgen.xoshiro512.Xoshiro512"
  },
  "type": "import"
 },
 "randomgen._pickle.__bit_generator_ctor": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      91
     ]
    },
    "FutureWarning": {
     "line number": [
      99
     ]
    },
    "ValueError": {
     "line number": [
      96
     ]
    },
    "bit_generator": {
     "line number": [
      94,
      100
     ]
    },
    "randomgen._pickle.BitGenerators": {
     "line number": [
      93,
      94
     ]
    },
    "randomgen._pickle.warnings": {
     "line number": [
      98,
      99
     ]
    },
    "str": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen._pickle.__generator_ctor": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      62
     ]
    },
    "FutureWarning": {
     "line number": [
      70
     ]
    },
    "ValueError": {
     "line number": [
      67
     ]
    },
    "bit_generator": {
     "line number": [
      71
     ]
    },
    "randomgen._pickle.BitGenerators": {
     "line number": [
      64,
      65
     ]
    },
    "randomgen._pickle.warnings": {
     "line number": [
      69,
      70
     ]
    },
    "randomgen.generator.Generator": {
     "line number": [
      72
     ]
    },
    "str": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen._pickle.__randomstate_ctor": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      120
     ]
    },
    "FutureWarning": {
     "line number": [
      128
     ]
    },
    "ValueError": {
     "line number": [
      125
     ]
    },
    "bit_generator": {
     "line number": [
      123,
      129
     ]
    },
    "randomgen._pickle.BitGenerators": {
     "line number": [
      122,
      123
     ]
    },
    "randomgen._pickle.warnings": {
     "line number": [
      127,
      128
     ]
    },
    "randomgen.mtrand.RandomState": {
     "line number": [
      130
     ]
    },
    "str": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen._pickle.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "randomgen._testing": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "module"
 },
 "randomgen._testing.WarningMessage": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "object": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen._testing.WarningMessage.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "locals": {
     "line number": [
      28
     ]
    },
    "setattr": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen._testing.WarningMessage.__str__": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "randomgen._testing.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "randomgen._testing.suppress_warnings": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "object": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen._testing.suppress_warnings.__call__": {
  "data": {
   "lineno": 305
  },
  "type": "function"
 },
 "randomgen._testing.suppress_warnings.__call__.new_func": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": {
    "func": {
     "line number": [
      313,
      310
     ]
    },
    "functools.wraps": {
     "line number": [
      310
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen._testing.suppress_warnings.__enter__": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      205
     ]
    },
    "hasattr": {
     "line number": [
      208,
      233
     ]
    },
    "randomgen._testing.warnings": {
     "line number": [
      207,
      208,
      209,
      210,
      211,
      224,
      228,
      232,
      233,
      234
     ]
    },
    "set": {
     "line number": [
      215,
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen._testing.suppress_warnings.__exit__": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      241
     ]
    },
    "randomgen._testing.warnings": {
     "line number": [
      240,
      241,
      242,
      243
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen._testing.suppress_warnings.__init__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen._testing.suppress_warnings._clear_registries": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      117,
      125
     ]
    },
    "randomgen._testing.warnings": {
     "line number": [
      117,
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen._testing.suppress_warnings._filter": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "Warning": {
     "line number": [
      128
     ]
    },
    "randomgen._testing.re": {
     "line number": [
      147,
      147,
      151,
      151
     ]
    },
    "randomgen._testing.warnings": {
     "line number": [
      136,
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen._testing.suppress_warnings._showwarning": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": {
    "issubclass": {
     "line number": [
      258
     ]
    },
    "randomgen._testing.WarningMessage": {
     "line number": [
      263,
      273
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen._testing.suppress_warnings._showwarnmsg": {
  "data": {
   "lineno": 249
  },
  "type": "function"
 },
 "randomgen._testing.suppress_warnings.filter": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "Warning": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen._testing.suppress_warnings.record": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "Warning": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen._testing.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "randomgen._testing.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "randomgen._version": {
  "data": {},
  "type": "module"
 },
 "randomgen._version.get_versions": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "randomgen._version.json": {
     "line number": [
      21
     ]
    },
    "randomgen._version.version_json": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen._version.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "randomgen._version.version_json": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "randomgen.legacy": {
  "data": {},
  "type": "module"
 },
 "randomgen.legacy.LegacyGenerator": {
  "data": {
   "shadows": "randomgen.mtrand.RandomState"
  },
  "type": "import"
 },
 "randomgen.legacy.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "randomgen.random_entropy": {
  "data": {
   "shadows": "randomgen.entropy.random_entropy"
  },
  "type": "import"
 },
 "randomgen.seed_sequence": {
  "data": {
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      6,
      12
     ]
    },
    "ImportError": {
     "line number": [
      6,
      12
     ]
    }
   }
  },
  "type": "module"
 },
 "randomgen.seed_sequence.ISeedSequence": {
  "data": {
   "shadows": "randomgen._seed_sequence.ISeedSequence"
  },
  "type": "import"
 },
 "randomgen.seed_sequence.ISpawnableSeedSequence": {
  "data": {
   "shadows": "randomgen._seed_sequence.ISpawnableSeedSequence"
  },
  "type": "import"
 },
 "randomgen.seed_sequence.SeedSequence": {
  "data": {
   "shadows": "randomgen._seed_sequence.SeedSequence"
  },
  "type": "import"
 },
 "randomgen.seed_sequence.SeedlessSeedSequence": {
  "data": {
   "shadows": "randomgen._seed_sequence.SeedlessSeedSequence"
  },
  "type": "import"
 },
 "randomgen.seed_sequence.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "randomgen.tests": {
  "data": {},
  "type": "module"
 },
 "randomgen.tests.data": {
  "data": {},
  "type": "module"
 },
 "randomgen.tests.test_direct": {
  "data": {
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      52,
      57
     ]
    },
    "ImportError": {
     "line number": [
      19,
      38,
      45
     ]
    },
    "RuntimeError": {
     "line number": [
      25
     ]
    },
    "numpy.random._bit_generator.ISeedSequence": {
     "line number": [
      56
     ]
    },
    "numpy.random.bit_generator.ISeedSequence": {
     "line number": [
      51
     ]
    },
    "randomgen.AESCounter": {
     "line number": [
      29
     ]
    },
    "randomgen.RDRAND": {
     "line number": [
      24
     ]
    },
    "randomgen.seed_sequence.ISeedSequence": {
     "line number": [
      48
     ]
    },
    "randomgen.tests.test_direct.HAS_AESNI": {
     "line number": [
      32
     ]
    },
    "randomgen.tests.test_direct.ISEED_SEQUENCES": {
     "line number": [
      51,
      56
     ]
    },
    "randomgen.tests.test_direct.aes": {
     "line number": [
      30
     ]
    },
    "randomgen.tests.test_direct.os": {
     "line number": [
      60,
      60
     ]
    }
   }
  },
  "type": "module"
 },
 "randomgen.tests.test_direct.AESCounter": {
  "data": {
   "shadows": "randomgen.AESCounter"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.Base": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "numpy.uint64": {
     "line number": [
      170
     ]
    },
    "object": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_direct.Base._read_csv": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      182
     ]
    },
    "int": {
     "line number": [
      187,
      190
     ]
    },
    "numpy.array": {
     "line number": [
      191
     ]
    },
    "open": {
     "line number": [
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Base.setup_bitgenerator": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Base.setup_class": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      178
     ]
    },
    "classmethod": {
     "line number": [
      173
     ]
    },
    "numpy.uint64": {
     "line number": [
      177
     ]
    },
    "randomgen.Xoroshiro128": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Base.test_benchmark": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      365
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      365
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Base.test_cffi": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      372
     ]
    },
    "randomgen.common.interface": {
     "line number": [
      372
     ]
    },
    "randomgen.tests.test_direct.MISSING_CFFI": {
     "line number": [
      368
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      368
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Base.test_ctypes": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      380
     ]
    },
    "randomgen.common.interface": {
     "line number": [
      380
     ]
    },
    "randomgen.tests.test_direct.MISSING_CTYPES": {
     "line number": [
      376
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      376
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Base.test_default": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "int": {
     "line number": [
      199
     ]
    },
    "isinstance": {
     "line number": [
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Base.test_default_sequence": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": {
    "int": {
     "line number": [
      205
     ]
    },
    "isinstance": {
     "line number": [
      205,
      206
     ]
    },
    "randomgen.tests.test_direct.ISEED_SEQUENCES": {
     "line number": [
      206
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Base.test_gauss_inv": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      232
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      233,
      239
     ]
    },
    "randomgen.RandomState": {
     "line number": [
      230,
      237
     ]
    },
    "randomgen.tests.test_direct.gauss_from_uint": {
     "line number": [
      234,
      240
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Base.test_generator": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      321
     ]
    },
    "dir": {
     "line number": [
      319
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      320,
      321
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Base.test_getstate": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.assert_state_equal": {
     "line number": [
      388
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Base.test_invalid_seed_type": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      352
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      352
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Base.test_invalid_seed_values": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      358
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      358
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Base.test_invalid_state_type": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      339
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      339
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Base.test_invalid_state_value": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      346
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      346
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Base.test_pickle": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": {
    "numpy.testing.assert_array_equal": {
     "line number": [
      332
     ]
    },
    "randomgen.Generator": {
     "line number": [
      330,
      331
     ]
    },
    "randomgen.tests.test_direct.assert_state_equal": {
     "line number": [
      335
     ]
    },
    "randomgen.tests.test_direct.pickle": {
     "line number": [
      328,
      329
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Base.test_random_raw": {
  "data": {
   "lineno": 221
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Base.test_raw": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      211,
      215,
      219
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Base.test_repr": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": {
    "id": {
     "line number": [
      309
     ]
    },
    "randomgen.Generator": {
     "line number": [
      307
     ]
    },
    "repr": {
     "line number": [
      308,
      309
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Base.test_seed_float": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": {
    "numpy.pi": {
     "line number": [
      273,
      274
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      273,
      274
     ]
    },
    "randomgen.Generator": {
     "line number": [
      272
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Base.test_seed_float_array": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      281,
      283,
      285,
      287,
      289
     ]
    },
    "ValueError": {
     "line number": [
      281,
      283,
      285
     ]
    },
    "numpy.array": {
     "line number": [
      280,
      282,
      284,
      286
     ]
    },
    "numpy.pi": {
     "line number": [
      280,
      282,
      284,
      284,
      286,
      288,
      290
     ]
    },
    "randomgen.Generator": {
     "line number": [
      278
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      279,
      281,
      283,
      285,
      287,
      289
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Base.test_seed_out_of_range": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      295,
      297
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      295,
      297
     ]
    },
    "randomgen.Generator": {
     "line number": [
      294
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Base.test_seed_out_of_range_array": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      302,
      304
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      302,
      304
     ]
    },
    "randomgen.Generator": {
     "line number": [
      301
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Base.test_seed_sequence": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      438,
      439
     ]
    },
    "randomgen.SeedSequence": {
     "line number": [
      439,
      444
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Base.test_seed_sequence_error": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      449
     ]
    },
    "randomgen.SeedSequence": {
     "line number": [
      450
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      449
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Base.test_str": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "id": {
     "line number": [
      315
     ]
    },
    "randomgen.Generator": {
     "line number": [
      312
     ]
    },
    "str": {
     "line number": [
      313,
      314,
      314,
      315
     ]
    },
    "type": {
     "line number": [
      314
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Base.test_uinteger_reset_advance": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      418
     ]
    },
    "isinstance": {
     "line number": [
      423
     ]
    },
    "numpy.uint32": {
     "line number": [
      421,
      431,
      433
     ]
    },
    "randomgen.Generator": {
     "line number": [
      420
     ]
    },
    "randomgen.Philox": {
     "line number": [
      423
     ]
    },
    "randomgen.ThreeFry": {
     "line number": [
      423
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      419
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Base.test_uinteger_reset_jump": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      403
     ]
    },
    "numpy.uint32": {
     "line number": [
      406,
      412,
      413
     ]
    },
    "randomgen.Generator": {
     "line number": [
      405,
      407
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      404
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Base.test_uinteger_reset_seed": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": {
    "numpy.uint32": {
     "line number": [
      393
     ]
    },
    "randomgen.Generator": {
     "line number": [
      392
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      396
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Base.test_uniform_double": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      245
     ]
    },
    "len": {
     "line number": [
      247,
      253
     ]
    },
    "numpy.float64": {
     "line number": [
      249,
      255
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      248,
      254
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      249,
      255
     ]
    },
    "randomgen.Generator": {
     "line number": [
      244,
      251
     ]
    },
    "randomgen.tests.test_direct.uniform_from_uint": {
     "line number": [
      246,
      252
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Base.test_uniform_float": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": {
    "len": {
     "line number": [
      260,
      266
     ]
    },
    "numpy.float32": {
     "line number": [
      260,
      262,
      266,
      268
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      261,
      267
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      262,
      268
     ]
    },
    "randomgen.Generator": {
     "line number": [
      258,
      264
     ]
    },
    "randomgen.tests.test_direct.uniform32_from_uint": {
     "line number": [
      259,
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.ChaCha": {
  "data": {
   "shadows": "randomgen.ChaCha"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.DSFMT": {
  "data": {
   "shadows": "randomgen.DSFMT"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.Generator": {
  "data": {
   "shadows": "randomgen.Generator"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.HAS_AESNI": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "randomgen.tests.test_direct.HC128": {
  "data": {
   "shadows": "randomgen.HC128"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.ISEED_SEQUENCES": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "randomgen.tests.test_direct.ISeedSequence": {
  "data": {
   "shadows": "randomgen.seed_sequence.ISeedSequence"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.JSF": {
  "data": {
   "shadows": "randomgen.JSF"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.MISSING_CFFI": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "randomgen.tests.test_direct.MISSING_CTYPES": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "randomgen.tests.test_direct.MISSING_RDRAND": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "randomgen.tests.test_direct.MT19937": {
  "data": {
   "shadows": "randomgen.MT19937"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.MT64": {
  "data": {
   "shadows": "randomgen.MT64"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.PCG32": {
  "data": {
   "shadows": "randomgen.PCG32"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.PCG64": {
  "data": {
   "shadows": "randomgen.PCG64"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.Philox": {
  "data": {
   "shadows": "randomgen.Philox"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.RDRAND": {
  "data": {
   "shadows": "randomgen.RDRAND"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.Random123": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.Base": {
     "line number": [
      453
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_direct.Random123.setup_bitgenerator": {
  "data": {
   "lineno": 461
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Random123.setup_class": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      454
     ]
    },
    "randomgen.Philox": {
     "line number": [
      457
     ]
    },
    "randomgen.tests.test_direct.Random123": {
     "line number": [
      456
     ]
    },
    "super": {
     "line number": [
      456
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Random123.test_0d_array": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      522
     ]
    },
    "numpy.uint64": {
     "line number": [
      522
     ]
    },
    "randomgen.tests.test_direct.assert_state_equal": {
     "line number": [
      524
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Random123.test_advance": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      479
     ]
    },
    "numpy.isin": {
     "line number": [
      479
     ]
    },
    "randomgen.tests.test_direct.counter_only": {
     "line number": [
      469,
      474,
      476
     ]
    },
    "randomgen.tests.test_direct.step": {
     "line number": [
      469,
      469,
      474,
      476
     ]
    },
    "randomgen.tests.test_direct.warmup": {
     "line number": [
      466
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Random123.test_advance_deprecated": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": {
    "FutureWarning": {
     "line number": [
      518
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      518
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Random123.test_advance_large": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      492,
      500,
      507,
      514
     ]
    },
    "numpy.iinfo": {
     "line number": [
      498
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      491,
      499,
      506,
      513
     ]
    },
    "numpy.uint32": {
     "line number": [
      486
     ]
    },
    "numpy.uint64": {
     "line number": [
      486
     ]
    },
    "randomgen.tests.test_direct.step": {
     "line number": [
      488,
      489,
      495,
      496,
      503,
      504,
      510,
      511
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Random123.test_empty_seed": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      527
     ]
    },
    "numpy.array": {
     "line number": [
      528
     ]
    },
    "numpy.uint64": {
     "line number": [
      528
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      527
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.Random123.test_seed_key": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      531
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      531
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.RandomState": {
  "data": {
   "shadows": "randomgen.RandomState"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.SFMT": {
  "data": {
   "shadows": "randomgen.SFMT"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.SPECK128": {
  "data": {
   "shadows": "randomgen.SPECK128"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.SeedSequence": {
  "data": {
   "shadows": "randomgen.SeedSequence"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.TestAESCounter": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.TestPhilox": {
     "line number": [
      847
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_direct.TestAESCounter.set_use_aesni": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.USE_AESNI": {
     "line number": [
      862
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      862
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestAESCounter.setup_bitgenerator": {
  "data": {
   "lineno": 866
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestAESCounter.setup_class": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      857
     ]
    },
    "classmethod": {
     "line number": [
      848
     ]
    },
    "numpy.uint64": {
     "line number": [
      852
     ]
    },
    "os.path.join": {
     "line number": [
      854,
      856
     ]
    },
    "randomgen.AESCounter": {
     "line number": [
      850
     ]
    },
    "randomgen.tests.test_direct.pwd": {
     "line number": [
      854,
      856
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestAESCounter.test_advance": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.step": {
     "line number": [
      908,
      911
     ]
    },
    "randomgen.tests.test_direct.warmup": {
     "line number": [
      906
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestAESCounter.test_advance_deprecated": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      961
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestAESCounter.test_advance_large": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      932,
      939,
      947,
      952
     ]
    },
    "numpy.iinfo": {
     "line number": [
      945
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      931,
      938,
      946,
      951
     ]
    },
    "numpy.uint64": {
     "line number": [
      932,
      939,
      945,
      948,
      952
     ]
    },
    "randomgen.tests.test_direct.assert_state_equal": {
     "line number": [
      959
     ]
    },
    "randomgen.tests.test_direct.step": {
     "line number": [
      928,
      929,
      935,
      936,
      942,
      943,
      956,
      957
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestAESCounter.test_advance_one_repeat": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": {
    "range": {
     "line number": [
      921
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestAESCounter.test_bad_state": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      897,
      901
     ]
    },
    "numpy.empty": {
     "line number": [
      896
     ]
    },
    "numpy.uint64": {
     "line number": [
      896
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      897,
      901
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestAESCounter.test_no_aesni": {
  "data": {
   "lineno": 965,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      968
     ]
    },
    "randomgen.tests.test_direct.HAS_AESNI": {
     "line number": [
      965
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      968,
      965
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestAESCounter.test_seed_float_array": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      889,
      890,
      891
     ]
    },
    "numpy.array": {
     "line number": [
      884,
      886,
      888,
      889
     ]
    },
    "numpy.pi": {
     "line number": [
      884,
      886,
      888,
      888,
      889,
      890,
      891
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      883,
      885,
      887,
      889,
      890,
      891
     ]
    },
    "randomgen.Generator": {
     "line number": [
      882
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestAESCounter.test_seed_key": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      972
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      972
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestAESCounter.test_set_key": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": {
    "int": {
     "line number": [
      875,
      875
     ]
    },
    "randomgen.tests.test_direct.assert_state_equal": {
     "line number": [
      878
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestChaCha": {
  "data": {
   "lineno": 1370,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.Base": {
     "line number": [
      1370
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_direct.TestChaCha.setup_bitgenerator": {
  "data": {
   "lineno": 1384
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestChaCha.setup_class": {
  "data": {
   "lineno": 1371,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1379
     ]
    },
    "classmethod": {
     "line number": [
      1371
     ]
    },
    "numpy.array": {
     "line number": [
      1380
     ]
    },
    "numpy.uint64": {
     "line number": [
      1376
     ]
    },
    "os.path.join": {
     "line number": [
      1377,
      1378
     ]
    },
    "randomgen.ChaCha": {
     "line number": [
      1373
     ]
    },
    "randomgen.tests.test_direct.pwd": {
     "line number": [
      1377,
      1378
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestChaCha.test_advance": {
  "data": {
   "lineno": 1404,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.step": {
     "line number": [
      1408,
      1412
     ]
    },
    "randomgen.tests.test_direct.warmup": {
     "line number": [
      1406
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestChaCha.test_advance_large": {
  "data": {
   "lineno": 1429,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1435,
      1443,
      1450,
      1457,
      1461
     ]
    },
    "numpy.iinfo": {
     "line number": [
      1441
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1434,
      1442,
      1449,
      1456,
      1460
     ]
    },
    "numpy.uint64": {
     "line number": [
      1435,
      1441,
      1443,
      1450,
      1457,
      1461
     ]
    },
    "randomgen.tests.test_direct.assert_state_equal": {
     "line number": [
      1468
     ]
    },
    "randomgen.tests.test_direct.step": {
     "line number": [
      1431,
      1432,
      1438,
      1439,
      1446,
      1447,
      1453,
      1454,
      1465,
      1466
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestChaCha.test_advance_one_repeat": {
  "data": {
   "lineno": 1416,
   "symbols_in_volume": {
    "range": {
     "line number": [
      1424
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestChaCha.test_invalid_rounds": {
  "data": {
   "lineno": 1398,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1399,
      1401
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      1399,
      1401
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestChaCha.test_seed_key": {
  "data": {
   "lineno": 1480,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1481
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      1481
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestChaCha.test_set_key": {
  "data": {
   "lineno": 1394,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1395
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      1395
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestChaCha.test_use_simd": {
  "data": {
   "lineno": 1470,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1473
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1478
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      1473
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestDSFMT": {
  "data": {
   "lineno": 1086,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.Base": {
     "line number": [
      1086
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_direct.TestDSFMT.setup_class": {
  "data": {
   "lineno": 1087,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1094
     ]
    },
    "classmethod": {
     "line number": [
      1087
     ]
    },
    "numpy.array": {
     "line number": [
      1096,
      1097
     ]
    },
    "numpy.uint64": {
     "line number": [
      1091
     ]
    },
    "os.path.join": {
     "line number": [
      1092,
      1093
     ]
    },
    "randomgen.DSFMT": {
     "line number": [
      1089
     ]
    },
    "randomgen.tests.test_direct.pwd": {
     "line number": [
      1092,
      1093
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestDSFMT.test_buffer_reset": {
  "data": {
   "lineno": 1159,
   "symbols_in_volume": {
    "randomgen.Generator": {
     "line number": [
      1160
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestDSFMT.test_gauss_inv": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      1112,
      1117
     ]
    },
    "randomgen.RandomState": {
     "line number": [
      1110,
      1115
     ]
    },
    "randomgen.tests.test_direct.gauss_from_uint": {
     "line number": [
      1113,
      1118
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestDSFMT.test_negative_jump": {
  "data": {
   "lineno": 1166,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1168
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      1168
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestDSFMT.test_seed_float": {
  "data": {
   "lineno": 1129,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1132,
      1133
     ]
    },
    "numpy.pi": {
     "line number": [
      1132,
      1133
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1132,
      1133
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1131
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestDSFMT.test_seed_float_array": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1138,
      1139,
      1140,
      1142,
      1143,
      1144
     ]
    },
    "numpy.array": {
     "line number": [
      1138,
      1139,
      1141,
      1142
     ]
    },
    "numpy.pi": {
     "line number": [
      1138,
      1139,
      1141,
      1141,
      1142,
      1143,
      1144
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1138,
      1139,
      1140,
      1142,
      1143,
      1144
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1137
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestDSFMT.test_seed_out_of_range_array": {
  "data": {
   "lineno": 1120,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1126
     ]
    },
    "ValueError": {
     "line number": [
      1123,
      1125
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1123,
      1125,
      1126
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1122
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestDSFMT.test_uniform_double": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": {
    "numpy.testing.assert_array_equal": {
     "line number": [
      1101
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1105
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1100,
      1104
     ]
    },
    "randomgen.tests.test_direct.uniform_from_dsfmt": {
     "line number": [
      1101,
      1105
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestDSFMT.test_uniform_float": {
  "data": {
   "lineno": 1146,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1149,
      1155
     ]
    },
    "numpy.float32": {
     "line number": [
      1149,
      1151,
      1155,
      1157
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1150,
      1156
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1151,
      1157
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1147,
      1153
     ]
    },
    "randomgen.tests.test_direct.uniform32_from_uint": {
     "line number": [
      1148,
      1154
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestHC128": {
  "data": {
   "lineno": 1485,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.Base": {
     "line number": [
      1485
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_direct.TestHC128.setup_class": {
  "data": {
   "lineno": 1486,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1493
     ]
    },
    "classmethod": {
     "line number": [
      1486
     ]
    },
    "numpy.empty": {
     "line number": [
      1495
     ]
    },
    "numpy.int64": {
     "line number": [
      1495
     ]
    },
    "numpy.uint64": {
     "line number": [
      1490
     ]
    },
    "os.path.join": {
     "line number": [
      1491,
      1492
     ]
    },
    "randomgen.HC128": {
     "line number": [
      1488
     ]
    },
    "randomgen.tests.test_direct.pwd": {
     "line number": [
      1491,
      1492
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestHC128.test_invalid_seed_type": {
  "data": {
   "lineno": 1516,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1519
     ]
    },
    "ValueError": {
     "line number": [
      1519
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      1519
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestHC128.test_key_init": {
  "data": {
   "lineno": 1522,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1523,
      1525,
      1527
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      1523,
      1525,
      1527
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestHC128.test_seed_float_array": {
  "data": {
   "lineno": 1498,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1507,
      1508,
      1509
     ]
    },
    "numpy.array": {
     "line number": [
      1502,
      1504,
      1506,
      1507
     ]
    },
    "numpy.pi": {
     "line number": [
      1502,
      1504,
      1506,
      1506,
      1507,
      1508,
      1509
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1501,
      1503,
      1505,
      1507,
      1508,
      1509
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1500
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestHC128.test_seed_out_of_range": {
  "data": {
   "lineno": 1511,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1514
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1514
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1513
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestJSF32": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.TestJSF64": {
     "line number": [
      578
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_direct.TestJSF32.setup_class": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      590
     ]
    },
    "classmethod": {
     "line number": [
      579
     ]
    },
    "functools.partial": {
     "line number": [
      582
     ]
    },
    "numpy.empty": {
     "line number": [
      592
     ]
    },
    "numpy.int64": {
     "line number": [
      592
     ]
    },
    "numpy.uint32": {
     "line number": [
      585
     ]
    },
    "os.path.join": {
     "line number": [
      587,
      589
     ]
    },
    "randomgen.JSF": {
     "line number": [
      581,
      582
     ]
    },
    "randomgen.tests.test_direct.pwd": {
     "line number": [
      587,
      589
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestJSF32.test_seed_sequence": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      596,
      597
     ]
    },
    "randomgen.SeedSequence": {
     "line number": [
      597,
      602,
      606
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestJSF64": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.Base": {
     "line number": [
      535
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_direct.TestJSF64.setup_class": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      545
     ]
    },
    "classmethod": {
     "line number": [
      536
     ]
    },
    "numpy.empty": {
     "line number": [
      547
     ]
    },
    "numpy.int64": {
     "line number": [
      547
     ]
    },
    "numpy.uint64": {
     "line number": [
      540
     ]
    },
    "os.path.join": {
     "line number": [
      542,
      544
     ]
    },
    "randomgen.JSF": {
     "line number": [
      538
     ]
    },
    "randomgen.tests.test_direct.pwd": {
     "line number": [
      542,
      544
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestJSF64.test_bad_init": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      550,
      552,
      554
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      550,
      552,
      554
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestJSF64.test_invalid_seed_size": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      572,
      574
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      572,
      574
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestJSF64.test_number_seed": {
  "data": {
   "lineno": 557
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestMT19937": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.Base": {
     "line number": [
      976
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_direct.TestMT19937.setup_class": {
  "data": {
   "lineno": 978,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      986
     ]
    },
    "classmethod": {
     "line number": [
      978
     ]
    },
    "numpy.array": {
     "line number": [
      988
     ]
    },
    "numpy.uint32": {
     "line number": [
      983
     ]
    },
    "os.path.join": {
     "line number": [
      984,
      985
     ]
    },
    "randomgen.MT19937": {
     "line number": [
      980
     ]
    },
    "randomgen.tests.test_direct.pwd": {
     "line number": [
      984,
      985
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestMT19937.test_bad_legacy_state": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1056
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      1056
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestMT19937.test_invalid_state": {
  "data": {
   "lineno": 1042,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1046
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1043
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      1046
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestMT19937.test_negative_jump": {
  "data": {
   "lineno": 1049,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1051
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      1051
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestMT19937.test_seed_float": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1013,
      1014
     ]
    },
    "numpy.pi": {
     "line number": [
      1013,
      1014
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1013,
      1014
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1012
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestMT19937.test_seed_float_array": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1020,
      1021,
      1022,
      1023,
      1024,
      1025
     ]
    },
    "numpy.array": {
     "line number": [
      1020,
      1021,
      1022,
      1023
     ]
    },
    "numpy.pi": {
     "line number": [
      1020,
      1021,
      1022,
      1022,
      1023,
      1024,
      1025
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1020,
      1021,
      1022,
      1023,
      1024,
      1025
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1018
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestMT19937.test_seed_out_of_range": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      994,
      997,
      998
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      994,
      997,
      998
     ]
    },
    "randomgen.Generator": {
     "line number": [
      993
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestMT19937.test_seed_out_of_range_array": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1007
     ]
    },
    "ValueError": {
     "line number": [
      1004,
      1006
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1004,
      1006,
      1007
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1003
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestMT19937.test_state_tuple": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      1036,
      1040
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1028
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestMT64": {
  "data": {
   "lineno": 1250,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.Base": {
     "line number": [
      1250
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_direct.TestMT64.setup_class": {
  "data": {
   "lineno": 1251,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1258
     ]
    },
    "ValueError": {
     "line number": [
      1259
     ]
    },
    "classmethod": {
     "line number": [
      1251
     ]
    },
    "numpy.array": {
     "line number": [
      1261
     ]
    },
    "numpy.uint64": {
     "line number": [
      1255
     ]
    },
    "os.path.join": {
     "line number": [
      1256,
      1257
     ]
    },
    "randomgen.MT64": {
     "line number": [
      1253
     ]
    },
    "randomgen.tests.test_direct.pwd": {
     "line number": [
      1256,
      1257
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestMT64.test_empty_seed": {
  "data": {
   "lineno": 1275,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1276
     ]
    },
    "numpy.array": {
     "line number": [
      1277
     ]
    },
    "numpy.uint64": {
     "line number": [
      1277
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      1276
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestMT64.test_seed_float_array": {
  "data": {
   "lineno": 1263,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1267,
      1268,
      1269,
      1271,
      1272,
      1273
     ]
    },
    "numpy.array": {
     "line number": [
      1267,
      1268,
      1270,
      1271
     ]
    },
    "numpy.pi": {
     "line number": [
      1267,
      1268,
      1270,
      1270,
      1271,
      1272,
      1273
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1267,
      1268,
      1269,
      1271,
      1272,
      1273
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1265
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestPCG32": {
  "data": {
   "lineno": 1220,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.TestPCG64": {
     "line number": [
      1220
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_direct.TestPCG32.setup_class": {
  "data": {
   "lineno": 1221,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1228
     ]
    },
    "classmethod": {
     "line number": [
      1221
     ]
    },
    "numpy.array": {
     "line number": [
      1229
     ]
    },
    "numpy.uint32": {
     "line number": [
      1225
     ]
    },
    "numpy.zeros": {
     "line number": [
      1230
     ]
    },
    "os.path.join": {
     "line number": [
      1226,
      1227
     ]
    },
    "randomgen.PCG32": {
     "line number": [
      1223
     ]
    },
    "randomgen.tests.test_direct.pwd": {
     "line number": [
      1226,
      1227
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestPCG32.test_advance_symmetry": {
  "data": {
   "lineno": 1234,
   "symbols_in_volume": {
    "randomgen.Generator": {
     "line number": [
      1235
     ]
    },
    "randomgen.tests.test_direct.step": {
     "line number": [
      1237,
      1238,
      1241,
      1244
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestPCG64": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.Base": {
     "line number": [
      726
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_direct.TestPCG64.setup_class": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      734
     ]
    },
    "classmethod": {
     "line number": [
      727
     ]
    },
    "numpy.array": {
     "line number": [
      735
     ]
    },
    "numpy.uint64": {
     "line number": [
      731
     ]
    },
    "numpy.zeros": {
     "line number": [
      736
     ]
    },
    "os.path.join": {
     "line number": [
      732,
      733
     ]
    },
    "randomgen.PCG64": {
     "line number": [
      729
     ]
    },
    "randomgen.tests.test_direct.pwd": {
     "line number": [
      732,
      733
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestPCG64.test_advance_symmetry": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": {
    "randomgen.Generator": {
     "line number": [
      760
     ]
    },
    "randomgen.tests.test_direct.step": {
     "line number": [
      762,
      763,
      766,
      769
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestPCG64.test_inc_none": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": {
    "int": {
     "line number": [
      776,
      779
     ]
    },
    "isinstance": {
     "line number": [
      776,
      779
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestPCG64.test_seed_float_array": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      743,
      745,
      747,
      749
     ]
    },
    "numpy.pi": {
     "line number": [
      743,
      745,
      747,
      747,
      749,
      750,
      751
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      742,
      744,
      746,
      748,
      750,
      751
     ]
    },
    "randomgen.Generator": {
     "line number": [
      741
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestPCG64.test_seed_out_of_range_array": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": {
    "numpy.testing.assert_raises": {
     "line number": [
      755,
      757
     ]
    },
    "randomgen.Generator": {
     "line number": [
      754
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestPhilox": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.Random123": {
     "line number": [
      782
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_direct.TestPhilox.setup_class": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      795
     ]
    },
    "classmethod": {
     "line number": [
      783
     ]
    },
    "numpy.uint64": {
     "line number": [
      790
     ]
    },
    "os.path.join": {
     "line number": [
      792,
      794
     ]
    },
    "randomgen.Philox": {
     "line number": [
      786
     ]
    },
    "randomgen.tests.test_direct.TestPhilox": {
     "line number": [
      785
     ]
    },
    "randomgen.tests.test_direct.pwd": {
     "line number": [
      792,
      794
     ]
    },
    "super": {
     "line number": [
      785
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestPhilox.test_set_key": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.assert_state_equal": {
     "line number": [
      806
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestPhilox4x32": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.Random123": {
     "line number": [
      809
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_direct.TestPhilox4x32.setup_class": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      823
     ]
    },
    "classmethod": {
     "line number": [
      810
     ]
    },
    "functools.partial": {
     "line number": [
      814
     ]
    },
    "numpy.uint32": {
     "line number": [
      818
     ]
    },
    "os.path.join": {
     "line number": [
      820,
      822
     ]
    },
    "randomgen.Philox": {
     "line number": [
      813,
      814
     ]
    },
    "randomgen.tests.test_direct.TestPhilox4x32": {
     "line number": [
      812
     ]
    },
    "randomgen.tests.test_direct.pwd": {
     "line number": [
      820,
      822
     ]
    },
    "super": {
     "line number": [
      812
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestPhilox4x32.test_seed_sequence": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      831,
      832
     ]
    },
    "randomgen.SeedSequence": {
     "line number": [
      832,
      838,
      842
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestRDRAND": {
  "data": {
   "lineno": 1280,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.Base": {
     "line number": [
      1281
     ]
    },
    "randomgen.tests.test_direct.MISSING_RDRAND": {
     "line number": [
      1280
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      1280
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_direct.TestRDRAND.setup_bitgenerator": {
  "data": {
   "lineno": 1292
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestRDRAND.setup_class": {
  "data": {
   "lineno": 1282,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1287
     ]
    },
    "classmethod": {
     "line number": [
      1282
     ]
    },
    "numpy.array": {
     "line number": [
      1289
     ]
    },
    "numpy.uint64": {
     "line number": [
      1286
     ]
    },
    "randomgen.RDRAND": {
     "line number": [
      1284
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestRDRAND.test_default_sequence": {
  "data": {
   "lineno": 1359,
   "symbols_in_volume": {
    "int": {
     "line number": [
      1362
     ]
    },
    "isinstance": {
     "line number": [
      1362
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestRDRAND.test_gauss_inv": {
  "data": {
   "lineno": 1300,
   "symbols_in_volume": {
    "randomgen.RandomState": {
     "line number": [
      1302
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestRDRAND.test_generator": {
  "data": {
   "lineno": 1316,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      1316
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestRDRAND.test_jumped": {
  "data": {
   "lineno": 1341,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1344
     ]
    },
    "type": {
     "line number": [
      1344
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestRDRAND.test_pickle": {
  "data": {
   "lineno": 1320,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.assert_state_equal": {
     "line number": [
      1327
     ]
    },
    "randomgen.tests.test_direct.pickle": {
     "line number": [
      1324,
      1325
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestRDRAND.test_raw": {
  "data": {
   "lineno": 1295
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestRDRAND.test_seed_float_array": {
  "data": {
   "lineno": 1337,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      1337
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestRDRAND.test_seed_out_of_range": {
  "data": {
   "lineno": 1333,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      1333
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestRDRAND.test_seed_out_of_range_array": {
  "data": {
   "lineno": 1329,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      1329
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestRDRAND.test_seed_sequence": {
  "data": {
   "lineno": 1347,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1352,
      1356
     ]
    },
    "isinstance": {
     "line number": [
      1349
     ]
    },
    "randomgen.SeedSequence": {
     "line number": [
      1355
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      1352,
      1356
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestRDRAND.test_seed_sequence_error": {
  "data": {
   "lineno": 1365,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1366
     ]
    },
    "randomgen.SeedSequence": {
     "line number": [
      1367
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      1366
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestRDRAND.test_uniform_double": {
  "data": {
   "lineno": 1306,
   "symbols_in_volume": {
    "numpy.float64": {
     "line number": [
      1309
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1309
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1307
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestRDRAND.test_uniform_float": {
  "data": {
   "lineno": 1311,
   "symbols_in_volume": {
    "numpy.float32": {
     "line number": [
      1313,
      1314
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1314
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1312
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestSFMT": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.TestMT19937": {
     "line number": [
      1060
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_direct.TestSFMT.setup_class": {
  "data": {
   "lineno": 1061,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1071
     ]
    },
    "classmethod": {
     "line number": [
      1061
     ]
    },
    "numpy.array": {
     "line number": [
      1073,
      1074
     ]
    },
    "numpy.uint64": {
     "line number": [
      1066
     ]
    },
    "os.path.join": {
     "line number": [
      1068,
      1070
     ]
    },
    "randomgen.SFMT": {
     "line number": [
      1063
     ]
    },
    "randomgen.tests.test_direct.pwd": {
     "line number": [
      1068,
      1070
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestSFMT.test_bad_legacy_state": {
  "data": {
   "lineno": 1081,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      1081
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestSFMT.test_state_tuple": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      1077
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestSPECK128": {
  "data": {
   "lineno": 1531,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.TestHC128": {
     "line number": [
      1531
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_direct.TestSPECK128.setup_class": {
  "data": {
   "lineno": 1532,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1539
     ]
    },
    "classmethod": {
     "line number": [
      1532
     ]
    },
    "numpy.empty": {
     "line number": [
      1541
     ]
    },
    "numpy.int64": {
     "line number": [
      1541
     ]
    },
    "numpy.uint64": {
     "line number": [
      1536
     ]
    },
    "os.path.join": {
     "line number": [
      1537,
      1538
     ]
    },
    "randomgen.SPECK128": {
     "line number": [
      1534
     ]
    },
    "randomgen.tests.test_direct.pwd": {
     "line number": [
      1537,
      1538
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestSPECK128.test_advance": {
  "data": {
   "lineno": 1572,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.step": {
     "line number": [
      1576,
      1579
     ]
    },
    "randomgen.tests.test_direct.warmup": {
     "line number": [
      1574
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestSPECK128.test_advance_large": {
  "data": {
   "lineno": 1594,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1600,
      1608,
      1617,
      1623
     ]
    },
    "numpy.iinfo": {
     "line number": [
      1615
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1599,
      1607,
      1616,
      1622
     ]
    },
    "numpy.uint64": {
     "line number": [
      1601,
      1609,
      1615,
      1619,
      1624
     ]
    },
    "randomgen.tests.test_direct.assert_state_equal": {
     "line number": [
      1631
     ]
    },
    "randomgen.tests.test_direct.step": {
     "line number": [
      1596,
      1597,
      1604,
      1605,
      1612,
      1613,
      1628,
      1629
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestSPECK128.test_advance_one_repeat": {
  "data": {
   "lineno": 1583,
   "symbols_in_volume": {
    "range": {
     "line number": [
      1589
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestSPECK128.test_invalid_rounds": {
  "data": {
   "lineno": 1643,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1644,
      1646,
      1648
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      1644,
      1646,
      1648
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestSPECK128.test_invalid_seed_type": {
  "data": {
   "lineno": 1551,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1554
     ]
    },
    "ValueError": {
     "line number": [
      1554
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      1554
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestSPECK128.test_key_init": {
  "data": {
   "lineno": 1557,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1558,
      1560,
      1562
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      1558,
      1560,
      1562
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestSPECK128.test_seed_out_of_range": {
  "data": {
   "lineno": 1544,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1547,
      1549
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1547,
      1549
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1546
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestSPECK128.test_seed_out_of_range_array": {
  "data": {
   "lineno": 1565,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1568,
      1570
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1568,
      1570
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1567
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestSPECK128.test_use_sse41": {
  "data": {
   "lineno": 1633,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1636
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1641
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      1636
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestThreeFry": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.Random123": {
     "line number": [
      683
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_direct.TestThreeFry.setup_class": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      696
     ]
    },
    "classmethod": {
     "line number": [
      684
     ]
    },
    "numpy.uint64": {
     "line number": [
      691
     ]
    },
    "os.path.join": {
     "line number": [
      693,
      695
     ]
    },
    "randomgen.ThreeFry": {
     "line number": [
      687
     ]
    },
    "randomgen.tests.test_direct.TestThreeFry": {
     "line number": [
      686
     ]
    },
    "randomgen.tests.test_direct.pwd": {
     "line number": [
      693,
      695
     ]
    },
    "super": {
     "line number": [
      686
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestThreeFry.test_advance": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      713,
      716,
      719,
      723
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      712,
      715,
      718,
      722
     ]
    },
    "numpy.uint64": {
     "line number": [
      713,
      716,
      719,
      723
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestThreeFry.test_set_key": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.assert_state_equal": {
     "line number": [
      706
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestThreeFry4x32": {
  "data": {
   "lineno": 1172,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.Random123": {
     "line number": [
      1172
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_direct.TestThreeFry4x32.setup_class": {
  "data": {
   "lineno": 1173,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1184
     ]
    },
    "classmethod": {
     "line number": [
      1173
     ]
    },
    "functools.partial": {
     "line number": [
      1177
     ]
    },
    "numpy.uint32": {
     "line number": [
      1181
     ]
    },
    "os.path.join": {
     "line number": [
      1182,
      1183
     ]
    },
    "randomgen.ThreeFry": {
     "line number": [
      1176,
      1177
     ]
    },
    "randomgen.tests.test_direct.TestThreeFry4x32": {
     "line number": [
      1175
     ]
    },
    "randomgen.tests.test_direct.pwd": {
     "line number": [
      1182,
      1183
     ]
    },
    "super": {
     "line number": [
      1175
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestThreeFry4x32.test_seed_sequence": {
  "data": {
   "lineno": 1189,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1192,
      1193
     ]
    },
    "randomgen.SeedSequence": {
     "line number": [
      1193,
      1199,
      1203
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestThreeFry4x32.test_set_key": {
  "data": {
   "lineno": 1207,
   "symbols_in_volume": {
    "int": {
     "line number": [
      1212,
      1214
     ]
    },
    "len": {
     "line number": [
      1212,
      1215
     ]
    },
    "numpy.uint32": {
     "line number": [
      1211
     ]
    },
    "randomgen.tests.test_direct.assert_state_equal": {
     "line number": [
      1217
     ]
    },
    "range": {
     "line number": [
      1212,
      1215
     ]
    },
    "sum": {
     "line number": [
      1212,
      1214
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestXoroshiro128": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.Base": {
     "line number": [
      611
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_direct.TestXoroshiro128.setup_class": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      621
     ]
    },
    "classmethod": {
     "line number": [
      612
     ]
    },
    "numpy.empty": {
     "line number": [
      623
     ]
    },
    "numpy.int64": {
     "line number": [
      623
     ]
    },
    "numpy.uint64": {
     "line number": [
      616
     ]
    },
    "os.path.join": {
     "line number": [
      618,
      620
     ]
    },
    "randomgen.Xoroshiro128": {
     "line number": [
      614
     ]
    },
    "randomgen.tests.test_direct.pwd": {
     "line number": [
      618,
      620
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestXorshift1024": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.Base": {
     "line number": [
      668
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_direct.TestXorshift1024.setup_class": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      678
     ]
    },
    "classmethod": {
     "line number": [
      669
     ]
    },
    "numpy.empty": {
     "line number": [
      680
     ]
    },
    "numpy.int64": {
     "line number": [
      680
     ]
    },
    "numpy.uint64": {
     "line number": [
      673
     ]
    },
    "os.path.join": {
     "line number": [
      675,
      677
     ]
    },
    "randomgen.Xorshift1024": {
     "line number": [
      671
     ]
    },
    "randomgen.tests.test_direct.pwd": {
     "line number": [
      675,
      677
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestXoshiro256": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.Base": {
     "line number": [
      626
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_direct.TestXoshiro256.setup_class": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      636
     ]
    },
    "classmethod": {
     "line number": [
      627
     ]
    },
    "numpy.empty": {
     "line number": [
      638
     ]
    },
    "numpy.int64": {
     "line number": [
      638
     ]
    },
    "numpy.uint64": {
     "line number": [
      631
     ]
    },
    "os.path.join": {
     "line number": [
      633,
      635
     ]
    },
    "randomgen.Xoshiro256": {
     "line number": [
      629
     ]
    },
    "randomgen.tests.test_direct.pwd": {
     "line number": [
      633,
      635
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestXoshiro256.test_old_name": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      644
     ]
    },
    "randomgen.Xoshiro256": {
     "line number": [
      644
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      642
     ]
    },
    "randomgen.xoshiro256starstar.Xoshiro256StarStar": {
     "line number": [
      643
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestXoshiro512": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.Base": {
     "line number": [
      647
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_direct.TestXoshiro512.setup_class": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      657
     ]
    },
    "classmethod": {
     "line number": [
      648
     ]
    },
    "numpy.empty": {
     "line number": [
      659
     ]
    },
    "numpy.int64": {
     "line number": [
      659
     ]
    },
    "numpy.uint64": {
     "line number": [
      652
     ]
    },
    "os.path.join": {
     "line number": [
      654,
      656
     ]
    },
    "randomgen.Xoshiro512": {
     "line number": [
      650
     ]
    },
    "randomgen.tests.test_direct.pwd": {
     "line number": [
      654,
      656
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.TestXoshiro512.test_old_name": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      665
     ]
    },
    "randomgen.Xoshiro512": {
     "line number": [
      665
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      663
     ]
    },
    "randomgen.xoshiro512starstar.Xoshiro512StarStar": {
     "line number": [
      664
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.ThreeFry": {
  "data": {
   "shadows": "randomgen.ThreeFry"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.USE_AESNI": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "randomgen.tests.test_direct.Xoroshiro128": {
  "data": {
   "shadows": "randomgen.Xoroshiro128"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.Xorshift1024": {
  "data": {
   "shadows": "randomgen.Xorshift1024"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.Xoshiro256": {
  "data": {
   "shadows": "randomgen.Xoshiro256"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.Xoshiro256StarStar": {
  "data": {
   "shadows": "randomgen.xoshiro256starstar.Xoshiro256StarStar"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.Xoshiro512": {
  "data": {
   "shadows": "randomgen.Xoshiro512"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.Xoshiro512StarStar": {
  "data": {
   "shadows": "randomgen.xoshiro512starstar.Xoshiro512StarStar"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.aes": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "randomgen.tests.test_direct.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.assert_state_equal": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      80
     ]
    },
    "isinstance": {
     "line number": [
      80,
      82
     ]
    },
    "numpy.ndarray": {
     "line number": [
      82
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.cffi": {
  "data": {
   "shadows": "cffi"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.counter_only": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.ctypes": {
  "data": {
   "shadows": "ctypes"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.gauss_from_uint": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "len": {
     "line number": [
      154
     ]
    },
    "numpy.log": {
     "line number": [
      162
     ]
    },
    "numpy.sqrt": {
     "line number": [
      162
     ]
    },
    "randomgen.tests.test_direct.uniform_from_dsfmt": {
     "line number": [
      150
     ]
    },
    "randomgen.tests.test_direct.uniform_from_uint32": {
     "line number": [
      148
     ]
    },
    "randomgen.tests.test_direct.uniform_from_uint64": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.interface": {
  "data": {
   "shadows": "randomgen.common.interface"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.pwd": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "randomgen.tests.test_direct.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "randomgen.tests.test_direct.step": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.test_mode": {
  "data": {
   "lineno": 1652,
   "symbols_in_volume": {
    "FutureWarning": {
     "line number": [
      1653
     ]
    },
    "ValueError": {
     "line number": [
      1656
     ]
    },
    "randomgen.MT19937": {
     "line number": [
      1654,
      1657
     ]
    },
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      1653,
      1656
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.uniform32_from_uint": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      117
     ]
    },
    "randomgen.tests.test_direct.uniform32_from_uint32": {
     "line number": [
      115
     ]
    },
    "randomgen.tests.test_direct.uniform32_from_uint53": {
     "line number": [
      113
     ]
    },
    "randomgen.tests.test_direct.uniform32_from_uint64": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.uniform32_from_uint32": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "numpy.uint32": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.uniform32_from_uint53": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "numpy.float32": {
     "line number": [
      102
     ]
    },
    "numpy.uint32": {
     "line number": [
      100,
      101
     ]
    },
    "numpy.uint64": {
     "line number": [
      99,
      99,
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.uniform32_from_uint64": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      90,
      92
     ]
    },
    "numpy.column_stack": {
     "line number": [
      93
     ]
    },
    "numpy.float32": {
     "line number": [
      95
     ]
    },
    "numpy.uint32": {
     "line number": [
      90,
      92,
      94
     ]
    },
    "numpy.uint64": {
     "line number": [
      89,
      90,
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.uniform_from_dsfmt": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "numpy.double": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.uniform_from_uint": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.uniform_from_uint32": {
     "line number": [
      124
     ]
    },
    "randomgen.tests.test_direct.uniform_from_uint64": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.uniform_from_uint32": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "len": {
     "line number": [
      132,
      133
     ]
    },
    "numpy.empty": {
     "line number": [
      132
     ]
    },
    "range": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.uniform_from_uint64": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "numpy.uint64": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_direct.warmup": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.pytest": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_final_release_changes": {
  "data": {
   "symbols_in_volume": {
    "randomgen.DSFMT": {
     "line number": [
      9
     ]
    },
    "randomgen.Generator": {
     "line number": [
      7
     ]
    },
    "randomgen.MT19937": {
     "line number": [
      9
     ]
    },
    "randomgen.PCG32": {
     "line number": [
      9
     ]
    },
    "randomgen.PCG64": {
     "line number": [
      9
     ]
    },
    "randomgen.Philox": {
     "line number": [
      9
     ]
    },
    "randomgen.ThreeFry": {
     "line number": [
      9
     ]
    },
    "randomgen.Xoroshiro128": {
     "line number": [
      10
     ]
    },
    "randomgen.Xorshift1024": {
     "line number": [
      10
     ]
    },
    "randomgen.Xoshiro256": {
     "line number": [
      10
     ]
    },
    "randomgen.Xoshiro512": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "module"
 },
 "randomgen.tests.test_final_release_changes.DSFMT": {
  "data": {
   "shadows": "randomgen.DSFMT"
  },
  "type": "import"
 },
 "randomgen.tests.test_final_release_changes.Generator": {
  "data": {
   "shadows": "randomgen.Generator"
  },
  "type": "import"
 },
 "randomgen.tests.test_final_release_changes.MT19937": {
  "data": {
   "shadows": "randomgen.MT19937"
  },
  "type": "import"
 },
 "randomgen.tests.test_final_release_changes.PCG32": {
  "data": {
   "shadows": "randomgen.PCG32"
  },
  "type": "import"
 },
 "randomgen.tests.test_final_release_changes.PCG64": {
  "data": {
   "shadows": "randomgen.PCG64"
  },
  "type": "import"
 },
 "randomgen.tests.test_final_release_changes.Philox": {
  "data": {
   "shadows": "randomgen.Philox"
  },
  "type": "import"
 },
 "randomgen.tests.test_final_release_changes.ThreeFry": {
  "data": {
   "shadows": "randomgen.ThreeFry"
  },
  "type": "import"
 },
 "randomgen.tests.test_final_release_changes.Xoroshiro128": {
  "data": {
   "shadows": "randomgen.Xoroshiro128"
  },
  "type": "import"
 },
 "randomgen.tests.test_final_release_changes.Xorshift1024": {
  "data": {
   "shadows": "randomgen.Xorshift1024"
  },
  "type": "import"
 },
 "randomgen.tests.test_final_release_changes.Xoshiro256": {
  "data": {
   "shadows": "randomgen.Xoshiro256"
  },
  "type": "import"
 },
 "randomgen.tests.test_final_release_changes.Xoshiro512": {
  "data": {
   "shadows": "randomgen.Xoshiro512"
  },
  "type": "import"
 },
 "randomgen.tests.test_final_release_changes.bit_generator": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "randomgen.tests.test_final_release_changes.bit_generators": {
     "line number": [
      13
     ]
    },
    "randomgen.tests.test_final_release_changes.pytest": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_final_release_changes.bit_generators": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "randomgen.tests.test_final_release_changes.endpoint": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "randomgen.tests.test_final_release_changes.pytest": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_final_release_changes.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "randomgen.tests.test_final_release_changes.random_gen": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "randomgen.tests.test_final_release_changes.test_brng_deprecated": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "randomgen.tests.test_final_release_changes.pytest": {
     "line number": [
      44
     ]
    },
    "randomgen.tests.test_final_release_changes.random_gen": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_final_release_changes.test_generator_raises": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      50
     ]
    },
    "randomgen.tests.test_final_release_changes.bit_generator": {
     "line number": [
      49
     ]
    },
    "randomgen.tests.test_final_release_changes.pytest": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_final_release_changes.test_integers_closed": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "randomgen.tests.test_final_release_changes.pytest": {
     "line number": [
      55,
      57
     ]
    },
    "randomgen.tests.test_final_release_changes.random_gen": {
     "line number": [
      56,
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_final_release_changes.test_integers_large_negative_value": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      67,
      69
     ]
    },
    "randomgen.tests.test_final_release_changes.endpoint": {
     "line number": [
      68,
      70
     ]
    },
    "randomgen.tests.test_final_release_changes.pytest": {
     "line number": [
      67,
      69
     ]
    },
    "randomgen.tests.test_final_release_changes.random_gen": {
     "line number": [
      68,
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_final_release_changes.test_integers_use_masked": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "randomgen.tests.test_final_release_changes.pytest": {
     "line number": [
      62
     ]
    },
    "randomgen.tests.test_final_release_changes.random_gen": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_final_release_changes.test_rand_deprecated": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "randomgen.tests.test_final_release_changes.pytest": {
     "line number": [
      34
     ]
    },
    "randomgen.tests.test_final_release_changes.random_gen": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_final_release_changes.test_randint_deprecated": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "randomgen.tests.test_final_release_changes.pytest": {
     "line number": [
      29
     ]
    },
    "randomgen.tests.test_final_release_changes.random_gen": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_final_release_changes.test_randn_deprecated": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "randomgen.tests.test_final_release_changes.pytest": {
     "line number": [
      39
     ]
    },
    "randomgen.tests.test_final_release_changes.random_gen": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_final_release_changes.test_random_sample_deprecated": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "randomgen.tests.test_final_release_changes.pytest": {
     "line number": [
      24
     ]
    },
    "randomgen.tests.test_final_release_changes.random_gen": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_117": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      18
     ]
    },
    "distutils.version.LooseVersion": {
     "line number": [
      23,
      24,
      25,
      26
     ]
    },
    "enumerate": {
     "line number": [
      190
     ]
    },
    "numpy.__version__": {
     "line number": [
      25,
      26
     ]
    },
    "numpy.random.Generator": {
     "line number": [
      16,
      17
     ]
    },
    "numpy.random.PCG64": {
     "line number": [
      14
     ]
    },
    "print": {
     "line number": [
      189
     ]
    },
    "randomgen.tests.test_generator_117.NP_LT_1174": {
     "line number": [
      26
     ]
    },
    "randomgen.tests.test_generator_117.NP_LT_1174_OR_GT_118": {
     "line number": [
      28
     ]
    },
    "randomgen.tests.test_generator_117.above_1": {
     "line number": [
      181
     ]
    },
    "randomgen.tests.test_generator_117.dirichlet": {
     "line number": [
      150
     ]
    },
    "randomgen.tests.test_generator_117.distributions": {
     "line number": [
      185,
      186,
      188
     ]
    },
    "randomgen.tests.test_generator_117.ids": {
     "line number": [
      192
     ]
    },
    "randomgen.tests.test_generator_117.input_0": {
     "line number": [
      169,
      171,
      172,
      174
     ]
    },
    "randomgen.tests.test_generator_117.int_prob": {
     "line number": [
      147,
      162
     ]
    },
    "randomgen.tests.test_generator_117.length": {
     "line number": [
      148
     ]
    },
    "randomgen.tests.test_generator_117.loc_scale": {
     "line number": [
      156,
      157,
      158,
      165,
      178
     ]
    },
    "randomgen.tests.test_generator_117.multinomial": {
     "line number": [
      160
     ]
    },
    "randomgen.tests.test_generator_117.params": {
     "line number": [
      190
     ]
    },
    "randomgen.tests.test_generator_117.pcg": {
     "line number": [
      15,
      16,
      17
     ]
    },
    "randomgen.tests.test_generator_117.positive": {
     "line number": [
      146,
      149,
      151,
      152,
      153,
      155,
      163,
      164,
      166,
      167,
      168,
      170,
      173,
      175,
      179,
      180
     ]
    },
    "randomgen.tests.test_generator_117.prob": {
     "line number": [
      154,
      159
     ]
    },
    "randomgen.tests.test_generator_117.pytest": {
     "line number": [
      19,
      28
     ]
    },
    "randomgen.tests.test_generator_117.tests": {
     "line number": [
      191
     ]
    },
    "randomgen.tests.test_generator_117.triangular": {
     "line number": [
      176
     ]
    },
    "randomgen.tests.test_generator_117.uniform": {
     "line number": [
      177
     ]
    },
    "randomgen.tests.test_generator_117.v1174": {
     "line number": [
      25
     ]
    },
    "randomgen.tests.test_generator_117.v118": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "module"
 },
 "randomgen.tests.test_generator_117.Generator": {
  "data": {
   "shadows": "randomgen.Generator"
  },
  "type": "import"
 },
 "randomgen.tests.test_generator_117.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "randomgen.tests.test_generator_117.NPGenerator": {
  "data": {
   "shadows": "numpy.random.Generator"
  },
  "type": "import"
 },
 "randomgen.tests.test_generator_117.NP_LT_1174": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "randomgen.tests.test_generator_117.NP_LT_1174_OR_GT_118": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "randomgen.tests.test_generator_117.PCG64": {
  "data": {
   "shadows": "randomgen.PCG64"
  },
  "type": "import"
 },
 "randomgen.tests.test_generator_117.above_1": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "randomgen.tests.test_generator_117.positive_param": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_117.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "randomgen.tests.test_generator_117.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "randomgen.tests.test_generator_117.dirichlet": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "numpy.random.Generator": {
     "line number": [
      118
     ]
    },
    "randomgen.PCG64": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_117.distributions": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "randomgen.tests.test_generator_117.gen": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "randomgen.tests.test_generator_117.hypergeometric": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "int": {
     "line number": [
      131
     ]
    },
    "isinstance": {
     "line number": [
      131
     ]
    },
    "itertools.product": {
     "line number": [
      129
     ]
    },
    "max": {
     "line number": [
      132
     ]
    },
    "numpy.random.Generator": {
     "line number": [
      125
     ]
    },
    "randomgen.PCG64": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_117.ids": {
  "data": {
   "lineno": 184
  },
  "type": "constant"
 },
 "randomgen.tests.test_generator_117.initial_state": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "randomgen.tests.test_generator_117.input_0": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "tuple": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_117.int_prob": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "numpy.random.Generator": {
     "line number": [
      49
     ]
    },
    "randomgen.PCG64": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_117.integers": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "numpy.iinfo": {
     "line number": [
      108,
      109,
      110
     ]
    },
    "numpy.int16": {
     "line number": [
      99
     ]
    },
    "numpy.int32": {
     "line number": [
      99
     ]
    },
    "numpy.int64": {
     "line number": [
      99
     ]
    },
    "numpy.int8": {
     "line number": [
      99
     ]
    },
    "numpy.ones": {
     "line number": [
      106,
      107
     ]
    },
    "numpy.random.Generator": {
     "line number": [
      101
     ]
    },
    "numpy.uint16": {
     "line number": [
      100
     ]
    },
    "numpy.uint32": {
     "line number": [
      100
     ]
    },
    "numpy.uint64": {
     "line number": [
      100
     ]
    },
    "numpy.uint8": {
     "line number": [
      100
     ]
    },
    "randomgen.PCG64": {
     "line number": [
      101
     ]
    },
    "tuple": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_117.length": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_117.loc_scale": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "randomgen.tests.test_generator_117.positive": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_117.multinomial": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "numpy.random.Generator": {
     "line number": [
      140
     ]
    },
    "randomgen.PCG64": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_117.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "randomgen.tests.test_generator_117.np_gen": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "randomgen.tests.test_generator_117.params": {
  "data": {
   "lineno": 188
  },
  "type": "constant"
 },
 "randomgen.tests.test_generator_117.pcg": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "randomgen.tests.test_generator_117.positive": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "itertools.product": {
     "line number": [
      40
     ]
    },
    "list": {
     "line number": [
      40
     ]
    },
    "randomgen.tests.test_generator_117.positive_param": {
     "line number": [
      40
     ]
    },
    "range": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_117.positive.param_generator": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_117.positive_param": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "numpy.random.Generator": {
     "line number": [
      33
     ]
    },
    "randomgen.PCG64": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_117.prob": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "numpy.random.Generator": {
     "line number": [
      58
     ]
    },
    "randomgen.PCG64": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_117.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "randomgen.tests.test_generator_117.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "randomgen.tests.test_generator_117.pytestmark": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "randomgen.tests.test_generator_117.test_choice": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      249
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      254
     ]
    },
    "randomgen.tests.test_generator_117.gen": {
     "line number": [
      252,
      253
     ]
    },
    "randomgen.tests.test_generator_117.initial_state": {
     "line number": [
      248,
      252
     ]
    },
    "randomgen.tests.test_generator_117.np_gen": {
     "line number": [
      248,
      250
     ]
    },
    "randomgen.tests.test_generator_117.pytest": {
     "line number": [
      246
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_117.test_choice_with_p": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      236
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      243
     ]
    },
    "randomgen.tests.test_generator_117.gen": {
     "line number": [
      241,
      242
     ]
    },
    "randomgen.tests.test_generator_117.initial_state": {
     "line number": [
      237,
      241
     ]
    },
    "randomgen.tests.test_generator_117.np_gen": {
     "line number": [
      237,
      239
     ]
    },
    "randomgen.tests.test_generator_117.pytest": {
     "line number": [
      234
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_117.test_equivalence": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": {
    "float": {
     "line number": [
      204,
      206
     ]
    },
    "getattr": {
     "line number": [
      198,
      199,
      205
     ]
    },
    "isinstance": {
     "line number": [
      204,
      206
     ]
    },
    "np_rvs": {
     "line number": [
      200
     ]
    },
    "numpy.float32": {
     "line number": [
      206
     ]
    },
    "numpy.float64": {
     "line number": [
      206
     ]
    },
    "numpy.ndarray": {
     "line number": [
      204
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      207
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      209
     ]
    },
    "randomgen.tests.test_generator_117.gen": {
     "line number": [
      199,
      202
     ]
    },
    "randomgen.tests.test_generator_117.ids": {
     "line number": [
      195
     ]
    },
    "randomgen.tests.test_generator_117.initial_state": {
     "line number": [
      197,
      202
     ]
    },
    "randomgen.tests.test_generator_117.np_gen": {
     "line number": [
      197,
      198
     ]
    },
    "randomgen.tests.test_generator_117.pytest": {
     "line number": [
      195
     ]
    },
    "randomgen.tests.test_generator_117.tests": {
     "line number": [
      195
     ]
    },
    "rvs": {
     "line number": [
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_117.test_hypergeometric": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      275
     ]
    },
    "randomgen.tests.test_generator_117.gen": {
     "line number": [
      273,
      274
     ]
    },
    "randomgen.tests.test_generator_117.hypergeometric": {
     "line number": [
      268
     ]
    },
    "randomgen.tests.test_generator_117.initial_state": {
     "line number": [
      270,
      273
     ]
    },
    "randomgen.tests.test_generator_117.np_gen": {
     "line number": [
      270,
      271
     ]
    },
    "randomgen.tests.test_generator_117.pytest": {
     "line number": [
      268
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_117.test_integers": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": {
    "numpy.testing.assert_array_equal": {
     "line number": [
      265
     ]
    },
    "randomgen.tests.test_generator_117.NP_LT_1174": {
     "line number": [
      257
     ]
    },
    "randomgen.tests.test_generator_117.gen": {
     "line number": [
      263,
      264
     ]
    },
    "randomgen.tests.test_generator_117.initial_state": {
     "line number": [
      260,
      263
     ]
    },
    "randomgen.tests.test_generator_117.integers": {
     "line number": [
      258
     ]
    },
    "randomgen.tests.test_generator_117.np_gen": {
     "line number": [
      260,
      261
     ]
    },
    "randomgen.tests.test_generator_117.pytest": {
     "line number": [
      257,
      258
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_117.test_permutation": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": {
    "numpy.testing.assert_array_equal": {
     "line number": [
      231
     ]
    },
    "randomgen.tests.test_generator_117.gen": {
     "line number": [
      229,
      230
     ]
    },
    "randomgen.tests.test_generator_117.initial_state": {
     "line number": [
      226,
      229
     ]
    },
    "randomgen.tests.test_generator_117.np_gen": {
     "line number": [
      226,
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_117.test_shuffle": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      216,
      220
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      222
     ]
    },
    "randomgen.tests.test_generator_117.gen": {
     "line number": [
      219,
      221
     ]
    },
    "randomgen.tests.test_generator_117.initial_state": {
     "line number": [
      215,
      219
     ]
    },
    "randomgen.tests.test_generator_117.np_gen": {
     "line number": [
      215,
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_117.tests": {
  "data": {
   "lineno": 183
  },
  "type": "constant"
 },
 "randomgen.tests.test_generator_117.triangular": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "itertools.product": {
     "line number": [
      85
     ]
    },
    "randomgen.tests.test_generator_117.positive_param": {
     "line number": [
      85
     ]
    },
    "range": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_117.uniform": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "randomgen.tests.test_generator_117.positive_param": {
     "line number": [
      91,
      92,
      93
     ]
    },
    "zip": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_117.v1174": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "randomgen.tests.test_generator_117.v118": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "randomgen.tests.test_generator_mt19937": {
  "data": {
   "symbols_in_volume": {
    "randomgen.Generator": {
     "line number": [
      14
     ]
    },
    "randomgen.MT19937": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "module"
 },
 "randomgen.tests.test_generator_mt19937.Generator": {
  "data": {
   "shadows": "randomgen.Generator"
  },
  "type": "import"
 },
 "randomgen.tests.test_generator_mt19937.MT19937": {
  "data": {
   "shadows": "randomgen.MT19937"
  },
  "type": "import"
 },
 "randomgen.tests.test_generator_mt19937.TestBinomial": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "object": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_generator_mt19937.TestBinomial.test_n_zero": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "numpy.testing.assert_": {
     "line number": [
      63
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      64
     ]
    },
    "numpy.zeros": {
     "line number": [
      61
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      63,
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBinomial.test_p_is_nan": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      68
     ]
    },
    "numpy.nan": {
     "line number": [
      68
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      68
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast": {
  "data": {
   "lineno": 1460,
   "symbols_in_volume": {
    "object": {
     "line number": [
      1460
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast.set_seed": {
  "data": {
   "lineno": 1466,
   "symbols_in_volume": {
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1467
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast.setup": {
  "data": {
   "lineno": 1463
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast.test_beta": {
  "data": {
   "lineno": 1506,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1519,
      1520
     ]
    },
    "beta": {
     "line number": [
      1517,
      1519,
      1520,
      1523
     ]
    },
    "numpy.array": {
     "line number": [
      1512
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1518,
      1524
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1519,
      1520
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1511
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast.test_binomial": {
  "data": {
   "lineno": 1905,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1920,
      1921,
      1922,
      1927,
      1928,
      1929
     ]
    },
    "binom": {
     "line number": [
      1915,
      1918,
      1920,
      1921,
      1922,
      1925,
      1927,
      1928,
      1929
     ]
    },
    "numpy.array": {
     "line number": [
      1912
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1916,
      1919,
      1926
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1920,
      1921,
      1922,
      1927,
      1928,
      1929
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1911
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast.test_chisquare": {
  "data": {
   "lineno": 1637,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1648
     ]
    },
    "chisquare": {
     "line number": [
      1646,
      1648
     ]
    },
    "numpy.array": {
     "line number": [
      1641
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1647
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1648
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1640
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast.test_complex_normal": {
  "data": {
   "lineno": 2062,
   "symbols_in_volume": {
    "gamma": {
     "line number": [
      2065,
      2067
     ]
    },
    "numpy.array": {
     "line number": [
      2068
     ]
    },
    "numpy.ones": {
     "line number": [
      2064,
      2065,
      2066
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      2074,
      2079
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      2063,
      2067,
      2076,
      2077
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast.test_exponential": {
  "data": {
   "lineno": 1526,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1537
     ]
    },
    "exponential": {
     "line number": [
      1535,
      1537
     ]
    },
    "numpy.array": {
     "line number": [
      1530
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1536
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1537
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1529
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast.test_f": {
  "data": {
   "lineno": 1574,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1587,
      1588,
      1593,
      1594
     ]
    },
    "f": {
     "line number": [
      1585,
      1587,
      1588,
      1591,
      1593,
      1594
     ]
    },
    "numpy.array": {
     "line number": [
      1580
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1586,
      1592
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1587,
      1588,
      1593,
      1594
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1579
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast.test_gamma": {
  "data": {
   "lineno": 1552,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1565,
      1566,
      1571,
      1572
     ]
    },
    "gamma": {
     "line number": [
      1563,
      1565,
      1566,
      1569,
      1571,
      1572
     ]
    },
    "numpy.array": {
     "line number": [
      1558
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1564,
      1570
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1565,
      1566,
      1571,
      1572
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1557
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast.test_geometric": {
  "data": {
   "lineno": 1983,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1993,
      1994
     ]
    },
    "geom": {
     "line number": [
      1991,
      1993,
      1994
     ]
    },
    "numpy.array": {
     "line number": [
      1988
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1992
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1993,
      1994
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1987
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast.test_gumbel": {
  "data": {
   "lineno": 1766,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1778,
      1783
     ]
    },
    "gumbel": {
     "line number": [
      1776,
      1778,
      1781,
      1783
     ]
    },
    "numpy.array": {
     "line number": [
      1771
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1777,
      1782
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1778,
      1783
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1770
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast.test_hypergeometric": {
  "data": {
   "lineno": 1996,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2009,
      2011,
      2013,
      2015,
      2021,
      2023,
      2025,
      2027,
      2034,
      2035,
      2036,
      2037,
      2039,
      2040,
      2041,
      2042,
      2045,
      2046,
      2047
     ]
    },
    "hypergeom": {
     "line number": [
      2032,
      2034,
      2035,
      2036,
      2037,
      2039,
      2040,
      2041,
      2042,
      2045,
      2046,
      2047
     ]
    },
    "numpy.array": {
     "line number": [
      2004
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      2008,
      2020,
      2033
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      2009,
      2011,
      2013,
      2015,
      2021,
      2023,
      2025,
      2027,
      2034,
      2035,
      2036,
      2037,
      2039,
      2040,
      2041,
      2042,
      2045,
      2046,
      2047
     ]
    },
    "randomgen.Generator": {
     "line number": [
      2006,
      2018,
      2030
     ]
    },
    "randomgen.MT19937": {
     "line number": [
      2006,
      2018,
      2030
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      2006,
      2007,
      2009,
      2011,
      2013,
      2015,
      2018,
      2019,
      2021,
      2023,
      2025,
      2027,
      2030,
      2031
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast.test_laplace": {
  "data": {
   "lineno": 1747,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1759,
      1764
     ]
    },
    "laplace": {
     "line number": [
      1757,
      1759,
      1762,
      1764
     ]
    },
    "numpy.array": {
     "line number": [
      1752
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1758,
      1763
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1759,
      1764
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1751
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast.test_logistic": {
  "data": {
   "lineno": 1785,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1797,
      1802
     ]
    },
    "logistic": {
     "line number": [
      1795,
      1797,
      1800,
      1802
     ]
    },
    "numpy.array": {
     "line number": [
      1790
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1796,
      1801
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1803
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1797,
      1802
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1789,
      1803
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast.test_lognormal": {
  "data": {
   "lineno": 1805,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1817,
      1818,
      1823,
      1824
     ]
    },
    "lognormal": {
     "line number": [
      1815,
      1817,
      1821,
      1823
     ]
    },
    "numpy.array": {
     "line number": [
      1810
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1816,
      1822
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1817,
      1818,
      1823,
      1824
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1809,
      1818,
      1824
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast.test_logseries": {
  "data": {
   "lineno": 2049,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2059,
      2060
     ]
    },
    "logseries": {
     "line number": [
      2057,
      2059,
      2060
     ]
    },
    "numpy.array": {
     "line number": [
      2054
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      2058
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      2059,
      2060
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      2053
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast.test_multinomial": {
  "data": {
   "lineno": 2081,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      2084,
      2094
     ]
    },
    "numpy.int64": {
     "line number": [
      2089,
      2095
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      2090,
      2096
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      2082,
      2083,
      2092,
      2093
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast.test_negative_binomial": {
  "data": {
   "lineno": 1931,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1943,
      1944,
      1945,
      1950,
      1951,
      1952
     ]
    },
    "neg_binom": {
     "line number": [
      1941,
      1943,
      1944,
      1945,
      1948,
      1950,
      1951,
      1952
     ]
    },
    "numpy.array": {
     "line number": [
      1938
     ]
    },
    "numpy.int64": {
     "line number": [
      1938
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1942,
      1949
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1943,
      1944,
      1945,
      1950,
      1951,
      1952
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1937
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast.test_noncentral_chisquare": {
  "data": {
   "lineno": 1650,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1663,
      1664,
      1669,
      1670
     ]
    },
    "nonc_chi": {
     "line number": [
      1661,
      1663,
      1664,
      1667,
      1669,
      1670
     ]
    },
    "numpy.array": {
     "line number": [
      1656
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1662,
      1668
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1663,
      1664,
      1669,
      1670
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1655
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast.test_noncentral_f": {
  "data": {
   "lineno": 1596,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1613,
      1614,
      1615,
      1620,
      1621,
      1622,
      1627,
      1628,
      1629
     ]
    },
    "nonc_f": {
     "line number": [
      1609,
      1611,
      1613,
      1614,
      1615,
      1618,
      1620,
      1621,
      1622,
      1625,
      1627,
      1628,
      1629
     ]
    },
    "numpy.all": {
     "line number": [
      1611
     ]
    },
    "numpy.array": {
     "line number": [
      1604
     ]
    },
    "numpy.isnan": {
     "line number": [
      1611
     ]
    },
    "numpy.nan": {
     "line number": [
      1611
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1610,
      1619,
      1626
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1613,
      1614,
      1615,
      1620,
      1621,
      1622,
      1627,
      1628,
      1629
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1603
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast.test_noncentral_f_small_df": {
  "data": {
   "lineno": 1631,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1633
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1635
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1634
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast.test_normal": {
  "data": {
   "lineno": 1485,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1497,
      1498,
      1503,
      1504
     ]
    },
    "normal": {
     "line number": [
      1495,
      1497,
      1501,
      1503
     ]
    },
    "numpy.array": {
     "line number": [
      1490
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1496,
      1502
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1497,
      1498,
      1503,
      1504
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1489,
      1498,
      1504
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast.test_pareto": {
  "data": {
   "lineno": 1705,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1716,
      1717
     ]
    },
    "numpy.array": {
     "line number": [
      1709
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1715
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1716,
      1717
     ]
    },
    "pareto": {
     "line number": [
      1714,
      1716
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1708,
      1717
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast.test_poisson": {
  "data": {
   "lineno": 1954,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1966,
      1967
     ]
    },
    "numpy.array": {
     "line number": [
      1961
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1965
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1966,
      1967
     ]
    },
    "poisson": {
     "line number": [
      1964,
      1966,
      1967
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1955,
      1960
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast.test_power": {
  "data": {
   "lineno": 1733,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1744,
      1745
     ]
    },
    "numpy.array": {
     "line number": [
      1737
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1743
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1744,
      1745
     ]
    },
    "power": {
     "line number": [
      1742,
      1744
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1736,
      1745
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast.test_rayleigh": {
  "data": {
   "lineno": 1826,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1837
     ]
    },
    "numpy.array": {
     "line number": [
      1830
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1836
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1837
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1829
     ]
    },
    "rayleigh": {
     "line number": [
      1835,
      1837
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast.test_standard_gamma": {
  "data": {
   "lineno": 1539,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1550
     ]
    },
    "numpy.array": {
     "line number": [
      1543
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1549
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1550
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1542
     ]
    },
    "std_gamma": {
     "line number": [
      1548,
      1550
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast.test_standard_t": {
  "data": {
   "lineno": 1672,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1683,
      1684
     ]
    },
    "numpy.array": {
     "line number": [
      1676
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1682
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1683,
      1684
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1675,
      1684
     ]
    },
    "t": {
     "line number": [
      1681,
      1683
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast.test_triangular": {
  "data": {
   "lineno": 1865,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1880,
      1881,
      1882,
      1888,
      1889,
      1890,
      1896,
      1897,
      1898,
      1901,
      1902,
      1903
     ]
    },
    "numpy.array": {
     "line number": [
      1873
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1879,
      1887,
      1895
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1880,
      1881,
      1882,
      1888,
      1889,
      1890,
      1896,
      1897,
      1898,
      1901,
      1902,
      1903
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1872
     ]
    },
    "triangular": {
     "line number": [
      1878,
      1880,
      1881,
      1882,
      1886,
      1888,
      1889,
      1890,
      1894,
      1896,
      1897,
      1898,
      1901,
      1902,
      1903
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast.test_uniform": {
  "data": {
   "lineno": 1469,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1473
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1479,
      1483
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1472
     ]
    },
    "uniform": {
     "line number": [
      1478,
      1482
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast.test_vonmises": {
  "data": {
   "lineno": 1686,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1698,
      1703
     ]
    },
    "numpy.array": {
     "line number": [
      1691
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1697,
      1702
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1698,
      1703
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1690
     ]
    },
    "vonmises": {
     "line number": [
      1696,
      1698,
      1701,
      1703
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast.test_wald": {
  "data": {
   "lineno": 1839,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1852,
      1853,
      1854,
      1855,
      1860,
      1861,
      1862,
      1863
     ]
    },
    "numpy.array": {
     "line number": [
      1845
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1851,
      1859
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1852,
      1853,
      1854,
      1855,
      1860,
      1861,
      1862,
      1863
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1844,
      1854,
      1855,
      1862,
      1863
     ]
    },
    "wald": {
     "line number": [
      1850,
      1852,
      1853,
      1858,
      1860,
      1861
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast.test_weibull": {
  "data": {
   "lineno": 1719,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1730,
      1731
     ]
    },
    "numpy.array": {
     "line number": [
      1723
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1729
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1730,
      1731
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1722,
      1731
     ]
    },
    "weibull": {
     "line number": [
      1728,
      1730
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestBroadcast.test_zipf": {
  "data": {
   "lineno": 1969,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1978,
      1980,
      1981
     ]
    },
    "numpy.array": {
     "line number": [
      1973
     ]
    },
    "numpy.errstate": {
     "line number": [
      1979
     ]
    },
    "numpy.nan": {
     "line number": [
      1980,
      1981
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1977
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1978,
      1980,
      1981
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1972
     ]
    },
    "zipf": {
     "line number": [
      1976,
      1978,
      1980,
      1981
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestIntegers": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      167
     ]
    },
    "numpy.int16": {
     "line number": [
      167
     ]
    },
    "numpy.int32": {
     "line number": [
      168
     ]
    },
    "numpy.int64": {
     "line number": [
      168
     ]
    },
    "numpy.int8": {
     "line number": [
      167
     ]
    },
    "numpy.uint16": {
     "line number": [
      167
     ]
    },
    "numpy.uint32": {
     "line number": [
      168
     ]
    },
    "numpy.uint64": {
     "line number": [
      168
     ]
    },
    "numpy.uint8": {
     "line number": [
      167
     ]
    },
    "object": {
     "line number": [
      163
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_generator_mt19937.TestIntegers.test_bounds_checking": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      178,
      180,
      182,
      184,
      187,
      189,
      191,
      193
     ]
    },
    "bool": {
     "line number": [
      175,
      176
     ]
    },
    "numpy.iinfo": {
     "line number": [
      175,
      176
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      178,
      180,
      182,
      184,
      187,
      189,
      191,
      193
     ]
    },
    "randomgen.tests.test_generator_mt19937.endpoint": {
     "line number": [
      177,
      179,
      181,
      183,
      184,
      188,
      190,
      192,
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestIntegers.test_bounds_checking_array": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      201,
      203,
      205,
      207
     ]
    },
    "bool": {
     "line number": [
      198,
      199
     ]
    },
    "numpy.iinfo": {
     "line number": [
      198,
      199
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      201,
      203,
      205,
      207
     ]
    },
    "randomgen.tests.test_generator_mt19937.endpoint": {
     "line number": [
      199,
      202,
      204,
      206,
      208
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestIntegers.test_full_range": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      278
     ]
    },
    "Exception": {
     "line number": [
      277
     ]
    },
    "bool": {
     "line number": [
      271,
      272
     ]
    },
    "numpy.iinfo": {
     "line number": [
      271,
      272
     ]
    },
    "randomgen.tests.test_generator_mt19937.endpoint": {
     "line number": [
      273,
      276
     ]
    },
    "str": {
     "line number": [
      280
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestIntegers.test_full_range_array": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      293
     ]
    },
    "Exception": {
     "line number": [
      292
     ]
    },
    "bool": {
     "line number": [
      286,
      287
     ]
    },
    "numpy.iinfo": {
     "line number": [
      286,
      287
     ]
    },
    "randomgen.tests.test_generator_mt19937.endpoint": {
     "line number": [
      288,
      291
     ]
    },
    "str": {
     "line number": [
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestIntegers.test_in_bounds_fuzz": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      309
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      305,
      306,
      310,
      311
     ]
    },
    "randomgen.tests.test_generator_mt19937.endpoint": {
     "line number": [
      303,
      304,
      308,
      308
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      299
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestIntegers.test_int64_uint64_broadcast_exceptions": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      404,
      406,
      408,
      410,
      415,
      417,
      419
     ]
    },
    "numpy.array": {
     "line number": [
      402,
      403,
      413,
      414
     ]
    },
    "numpy.int64": {
     "line number": [
      396
     ]
    },
    "numpy.object": {
     "line number": [
      413,
      414
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      404,
      406,
      408,
      410,
      415,
      417,
      419
     ]
    },
    "numpy.uint64": {
     "line number": [
      395
     ]
    },
    "randomgen.tests.test_generator_mt19937.endpoint": {
     "line number": [
      401,
      405,
      407,
      409,
      411,
      416,
      418,
      420
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      404,
      406,
      408,
      410,
      415,
      417,
      419
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestIntegers.test_int64_uint64_corner_case": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": {
    "numpy.iinfo": {
     "line number": [
      436,
      437,
      438
     ]
    },
    "numpy.int64": {
     "line number": [
      435,
      436,
      437,
      437,
      438
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      443
     ]
    },
    "numpy.uint64": {
     "line number": [
      438
     ]
    },
    "randomgen.tests.test_generator_mt19937.endpoint": {
     "line number": [
      438,
      442
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      442
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestIntegers.test_repeatability": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      366,
      368
     ]
    },
    "numpy.dtype": {
     "line number": [
      361,
      368
     ]
    },
    "numpy.int8": {
     "line number": [
      360,
      366
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      361,
      368
     ]
    },
    "randomgen.tests.test_generator_mt19937.endpoint": {
     "line number": [
      354,
      354,
      357,
      357,
      365,
      365
     ]
    },
    "randomgen.tests.test_generator_mt19937.hashlib": {
     "line number": [
      360,
      367
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      350,
      364
     ]
    },
    "randomgen.tests.test_generator_mt19937.sys": {
     "line number": [
      353
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestIntegers.test_repeatability_broadcasting": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      372,
      374
     ]
    },
    "numpy.bool": {
     "line number": [
      372,
      374
     ]
    },
    "numpy.bool_": {
     "line number": [
      372,
      374
     ]
    },
    "numpy.iinfo": {
     "line number": [
      372,
      374
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      386,
      392
     ]
    },
    "randomgen.tests.test_generator_mt19937.endpoint": {
     "line number": [
      375,
      379,
      383,
      390
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      378,
      382,
      388
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestIntegers.test_respect_dtype_array": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      469,
      470,
      472
     ]
    },
    "numpy.bool_": {
     "line number": [
      472
     ]
    },
    "numpy.iinfo": {
     "line number": [
      469,
      470
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      475,
      478
     ]
    },
    "randomgen.tests.test_generator_mt19937.endpoint": {
     "line number": [
      471,
      474,
      476
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestIntegers.test_respect_dtype_singleton": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      448,
      449,
      451,
      456,
      457,
      458
     ]
    },
    "hasattr": {
     "line number": [
      463
     ]
    },
    "int": {
     "line number": [
      456
     ]
    },
    "numpy.bool_": {
     "line number": [
      451
     ]
    },
    "numpy.iinfo": {
     "line number": [
      448,
      449,
      457,
      458
     ]
    },
    "numpy.long": {
     "line number": [
      456
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      454,
      464
     ]
    },
    "randomgen.tests.test_generator_mt19937.endpoint": {
     "line number": [
      450,
      453,
      459,
      462
     ]
    },
    "type": {
     "line number": [
      464
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestIntegers.test_rng_zero_and_extremes": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      212,
      213
     ]
    },
    "numpy.iinfo": {
     "line number": [
      212,
      213
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      218,
      220,
      224,
      226,
      230,
      232
     ]
    },
    "randomgen.tests.test_generator_mt19937.endpoint": {
     "line number": [
      214,
      215,
      219,
      221,
      225,
      227,
      231,
      233
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestIntegers.test_rng_zero_and_extremes_array": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      239,
      240
     ]
    },
    "numpy.iinfo": {
     "line number": [
      239,
      240
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      244,
      246,
      248,
      252,
      254,
      256,
      260,
      262,
      264
     ]
    },
    "randomgen.tests.test_generator_mt19937.endpoint": {
     "line number": [
      241
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestIntegers.test_scalar_array_equiv": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      315,
      316
     ]
    },
    "numpy.iinfo": {
     "line number": [
      315,
      316
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      331,
      332
     ]
    },
    "randomgen.tests.test_generator_mt19937.endpoint": {
     "line number": [
      317,
      321,
      326,
      330
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      320,
      324,
      328
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestIntegers.test_unsupported_type": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      171
     ]
    },
    "float": {
     "line number": [
      171
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      171
     ]
    },
    "randomgen.tests.test_generator_mt19937.endpoint": {
     "line number": [
      171
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestIntegers.test_warns_byteorder": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": {
    "FutureWarning": {
     "line number": [
      495
     ]
    },
    "randomgen.tests.test_generator_mt19937.pytest": {
     "line number": [
      495
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      496
     ]
    },
    "randomgen.tests.test_generator_mt19937.sys": {
     "line number": [
      494
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestIntegers.test_zero_size": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      488,
      490,
      491
     ]
    },
    "randomgen.tests.test_generator_mt19937.endpoint": {
     "line number": [
      483,
      486
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      488,
      490,
      491
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestMultinomial": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "object": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_generator_mt19937.TestMultinomial.test_basic": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestMultinomial.test_int_negative_interval": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      81,
      82
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      79,
      81,
      82
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      79,
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestMultinomial.test_invalid_n": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      103,
      104
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      103,
      104
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      103,
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestMultinomial.test_invalid_prob": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      99,
      100
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      99,
      100
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      99,
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestMultinomial.test_large_p": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      117
     ]
    },
    "numpy.array": {
     "line number": [
      118
     ]
    },
    "randomgen.tests.test_generator_mt19937.pytest": {
     "line number": [
      117
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestMultinomial.test_p_noncontiguous": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      107
     ]
    },
    "numpy.ascontiguousarray": {
     "line number": [
      113
     ]
    },
    "numpy.sum": {
     "line number": [
      108
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      114
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      110,
      111,
      112,
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestMultinomial.test_size": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      95
     ]
    },
    "float": {
     "line number": [
      96
     ]
    },
    "numpy.array": {
     "line number": [
      92
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      87,
      88,
      89,
      90,
      91,
      92
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      95
     ]
    },
    "numpy.uint32": {
     "line number": [
      87,
      88,
      89
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      87,
      88,
      89,
      90,
      91,
      92,
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestMultinomial.test_zero_probability": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": {
    "object": {
     "line number": [
      499
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.setup": {
  "data": {
   "lineno": 503
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_beta": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      856
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      860
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      854,
      855
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_binomial": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      865
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      868,
      873
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      863,
      864,
      870,
      871
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_bytes": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      798
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      795,
      796
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_chisquare": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      878
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      881
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      876,
      877
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_choice_exceptions": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      694,
      695,
      696,
      697,
      699,
      700,
      701,
      702,
      704,
      705,
      706,
      707
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      694,
      695,
      696,
      697,
      699,
      700,
      701,
      702,
      704,
      705,
      706,
      707
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      693
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_choice_large_sample": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": {
    "numpy.int8": {
     "line number": [
      791
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      792
     ]
    },
    "randomgen.tests.test_generator_mt19937.hashlib": {
     "line number": [
      791
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      787,
      788
     ]
    },
    "randomgen.tests.test_generator_mt19937.sys": {
     "line number": [
      789
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_choice_multidimensional_custom_axis": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      689
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      690
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      687,
      688
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_choice_multidimensional_default_axis": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      683
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      684
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      681,
      682
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_choice_nan_probabilities": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      760
     ]
    },
    "numpy.array": {
     "line number": [
      757
     ]
    },
    "numpy.errstate": {
     "line number": [
      759
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      760
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      760
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_choice_noninteger": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      677
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      678
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      675,
      676
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_choice_nontintiguous": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": {
    "numpy.ascontiguousarray": {
     "line number": [
      768
     ]
    },
    "numpy.ones": {
     "line number": [
      763
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      769
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      765,
      766,
      767,
      768
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_choice_nonuniform_noreplace": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      671
     ]
    },
    "numpy.int64": {
     "line number": [
      671
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      672
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      669,
      670
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_choice_nonuniform_replace": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      659
     ]
    },
    "numpy.int64": {
     "line number": [
      659
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      660
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      657,
      658
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_choice_return_shape": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      754
     ]
    },
    "numpy.arange": {
     "line number": [
      744
     ]
    },
    "numpy.array": {
     "line number": [
      719,
      732
     ]
    },
    "numpy.empty": {
     "line number": [
      720,
      733
     ]
    },
    "numpy.isscalar": {
     "line number": [
      713,
      714,
      715,
      716,
      717,
      726,
      727,
      728,
      729,
      730
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      713,
      714,
      715,
      716,
      717,
      718,
      722,
      726,
      727,
      728,
      729,
      730,
      731,
      735
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      740,
      741,
      742,
      743,
      744,
      747,
      748,
      749,
      750,
      751,
      752
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      754
     ]
    },
    "object": {
     "line number": [
      720,
      733
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      713,
      714,
      715,
      716,
      717,
      718,
      722,
      726,
      727,
      728,
      729,
      730,
      731,
      735,
      740,
      741,
      742,
      743,
      744,
      747,
      748,
      749,
      750,
      751,
      752,
      754
     ]
    },
    "tuple": {
     "line number": [
      725
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_choice_return_type": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": {
    "numpy.int64": {
     "line number": [
      775,
      777,
      779,
      781
     ]
    },
    "numpy.ones": {
     "line number": [
      773
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      774,
      776,
      778,
      780
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_choice_uniform_noreplace": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      665
     ]
    },
    "numpy.int64": {
     "line number": [
      665
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      666
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      663,
      664
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_choice_uniform_replace": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      653
     ]
    },
    "numpy.int64": {
     "line number": [
      653
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      654
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      651,
      652
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_complex_normal": {
  "data": {
   "lineno": 1428,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1432
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1438,
      1442,
      1446
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1429,
      1430,
      1440,
      1441,
      1444,
      1445
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_complex_normal_invalid": {
  "data": {
   "lineno": 1448,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1449,
      1450,
      1451,
      1452,
      1454,
      1455,
      1456,
      1457
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1449,
      1450,
      1451,
      1452,
      1454,
      1455,
      1456,
      1457
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1449,
      1450,
      1451,
      1452,
      1454,
      1455,
      1456,
      1457
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_dirichlet": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      895
     ]
    },
    "numpy.array": {
     "line number": [
      885,
      887,
      894,
      898
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      893,
      900
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      895
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      884,
      886,
      895,
      897,
      899
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_dirichlet_bad_alpha": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      917
     ]
    },
    "numpy.array": {
     "line number": [
      916
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      917
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      917
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_dirichlet_non_contiguous_alpha": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      920
     ]
    },
    "numpy.ascontiguousarray": {
     "line number": [
      925
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      927
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      922,
      923,
      924,
      925
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_dirichlet_size": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      912
     ]
    },
    "float": {
     "line number": [
      912
     ]
    },
    "numpy.array": {
     "line number": [
      904,
      910
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      905,
      906,
      907,
      908,
      909,
      910
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      912
     ]
    },
    "numpy.uint32": {
     "line number": [
      905,
      906,
      907
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      905,
      906,
      907,
      908,
      909,
      910,
      912
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_exponential": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      932
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      935
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      930,
      931
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_exponential_0": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      939
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      938
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      939
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      938,
      939
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_f": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      944
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      947
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      942,
      943
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_gamma": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      952
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      955
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      950,
      951
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_gamma_0": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      959
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      958
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      959
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      958,
      959
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_geometric": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      964
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      967
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      962,
      963
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_geometric_exceptions": {
  "data": {
   "lineno": 969,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      970,
      971,
      972,
      973,
      975,
      976
     ]
    },
    "numpy.errstate": {
     "line number": [
      974
     ]
    },
    "numpy.nan": {
     "line number": [
      975,
      976
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      970,
      971,
      972,
      973,
      975,
      976
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      970,
      971,
      972,
      973,
      975,
      976
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_gumbel": {
  "data": {
   "lineno": 978,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      981
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      984
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      979,
      980
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_gumbel_0": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      988
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      987
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      988
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      987,
      988
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_hypergeometric": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      993,
      1000,
      1004,
      1009,
      1013
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      996,
      1001,
      1005,
      1010,
      1014
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      991,
      992,
      999,
      1003,
      1008,
      1012
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_integers": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      539
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      542
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      537,
      538
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_integers_lemire_32": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      561
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      564
     ]
    },
    "numpy.uint32": {
     "line number": [
      559,
      563
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      558,
      559
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_integers_lemire_64": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      571
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      574
     ]
    },
    "numpy.uint64": {
     "line number": [
      570,
      573
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      568,
      569
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_integers_masked": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      551
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      554
     ]
    },
    "numpy.uint32": {
     "line number": [
      549,
      553
     ]
    },
    "randomgen.tests.test_generator_mt19937.pytest": {
     "line number": [
      548
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      547,
      549
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_laplace": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1019
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1022
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1017,
      1018
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_laplace_0": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1026
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1025
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1026
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1025,
      1026
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_logistic": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1031
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1034
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1029,
      1030
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_lognormal": {
  "data": {
   "lineno": 1036,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1039
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1042
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1037,
      1038
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_lognormal_0": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1046
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1045
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1046
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1045,
      1046
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_logseries": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1051
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1054
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1049,
      1050
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_logseries_exceptions": {
  "data": {
   "lineno": 1056,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1058,
      1059
     ]
    },
    "numpy.errstate": {
     "line number": [
      1057
     ]
    },
    "numpy.nan": {
     "line number": [
      1058,
      1059
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1058,
      1059
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1058,
      1059
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_multinomial": {
  "data": {
   "lineno": 1061,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1064
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1070
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1062,
      1063
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_multivariate_normal": {
  "data": {
   "lineno": 1072,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      1096,
      1109
     ]
    },
    "ValueError": {
     "line number": [
      1103,
      1114,
      1116,
      1118,
      1120
     ]
    },
    "len": {
     "line number": [
      1110
     ]
    },
    "numpy.array": {
     "line number": [
      1078,
      1089,
      1106
     ]
    },
    "numpy.empty": {
     "line number": [
      1119
     ]
    },
    "numpy.eye": {
     "line number": [
      1113,
      1121
     ]
    },
    "numpy.float32": {
     "line number": [
      1106
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1085,
      1090
     ]
    },
    "numpy.testing.assert_no_warnings": {
     "line number": [
      1099
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1103,
      1114,
      1116,
      1118,
      1120
     ]
    },
    "numpy.testing.assert_warns": {
     "line number": [
      1096
     ]
    },
    "numpy.zeros": {
     "line number": [
      1112,
      1117
     ]
    },
    "randomgen._testing.suppress_warnings": {
     "line number": [
      1107
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1073,
      1077,
      1088,
      1096,
      1099,
      1103,
      1108,
      1114,
      1116,
      1118,
      1120
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_negative_binomial": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1126
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1129
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1124,
      1125
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_negative_binomial_exceptions": {
  "data": {
   "lineno": 1131,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1133,
      1134
     ]
    },
    "numpy.errstate": {
     "line number": [
      1132
     ]
    },
    "numpy.nan": {
     "line number": [
      1133,
      1135
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1133,
      1134
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1133,
      1134
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_noncentral_chisquare": {
  "data": {
   "lineno": 1137,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1140,
      1146,
      1153
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1143,
      1149,
      1156
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1138,
      1139,
      1145,
      1151,
      1152
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_noncentral_f": {
  "data": {
   "lineno": 1158,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1162
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1165
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1159,
      1160
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_noncentral_f_nan": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": {
    "numpy.isnan": {
     "line number": [
      1170
     ]
    },
    "numpy.nan": {
     "line number": [
      1169
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1168,
      1169
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_normal": {
  "data": {
   "lineno": 1172,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1175
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1178
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1173,
      1174
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_normal_0": {
  "data": {
   "lineno": 1180,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1182
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1181
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1182
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1181,
      1182
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_out_size_mismatch": {
  "data": {
   "lineno": 1295,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1297,
      1299
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1297,
      1299
     ]
    },
    "numpy.zeros": {
     "line number": [
      1296
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1297,
      1299
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_pareto": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1187
     ]
    },
    "numpy.testing.assert_array_almost_equal_nulp": {
     "line number": [
      1196
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1185,
      1186
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_permutation": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": {
    "numpy.atleast_2d": {
     "line number": [
      849,
      851
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      846,
      851
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      842,
      844,
      848,
      850
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_poisson": {
  "data": {
   "lineno": 1198,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1201
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1204
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1199,
      1200
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_poisson_exceptions": {
  "data": {
   "lineno": 1206,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1209,
      1210,
      1211,
      1212,
      1214,
      1215
     ]
    },
    "numpy.errstate": {
     "line number": [
      1213
     ]
    },
    "numpy.iinfo": {
     "line number": [
      1207
     ]
    },
    "numpy.nan": {
     "line number": [
      1214,
      1215
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1209,
      1210,
      1211,
      1212,
      1214,
      1215
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1209,
      1210,
      1211,
      1212,
      1214,
      1215
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_power": {
  "data": {
   "lineno": 1217,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1220
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1223
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1218,
      1219
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_rand": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      510
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      513
     ]
    },
    "randomgen.tests.test_generator_mt19937.pytest": {
     "line number": [
      508
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      507,
      509
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_rand_singleton": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": {
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      520
     ]
    },
    "randomgen.tests.test_generator_mt19937.pytest": {
     "line number": [
      517
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      516,
      518
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_randn": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      526
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      529,
      534
     ]
    },
    "randomgen.tests.test_generator_mt19937.pytest": {
     "line number": [
      524,
      532
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      523,
      525,
      531,
      533
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_random": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      624
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      627,
      631
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      622,
      623,
      629,
      630
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_random_float": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      636
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      639
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      634,
      635
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_random_float_scalar": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": {
    "numpy.float32": {
     "line number": [
      643
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      645
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      642,
      643
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_random_integers": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      579,
      588
     ]
    },
    "len": {
     "line number": [
      581
     ]
    },
    "numpy.array": {
     "line number": [
      582
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      581
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      585,
      590
     ]
    },
    "randomgen._testing.suppress_warnings": {
     "line number": [
      578,
      587
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      577,
      580,
      586,
      589
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_random_integers_deprecated": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      609,
      612,
      617
     ]
    },
    "numpy.iinfo": {
     "line number": [
      614,
      619,
      619
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      612,
      617
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      613,
      618
     ]
    },
    "randomgen.tests.test_generator_mt19937.warnings": {
     "line number": [
      608,
      609
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_random_integers_max_int": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      599
     ]
    },
    "len": {
     "line number": [
      602
     ]
    },
    "numpy.iinfo": {
     "line number": [
      600,
      601,
      604
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      602
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      605
     ]
    },
    "randomgen._testing.suppress_warnings": {
     "line number": [
      598
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      600
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_random_unsupported_type": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      648
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      648
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      648
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_rayleigh": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1228
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1231
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1226,
      1227
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_rayleigh_0": {
  "data": {
   "lineno": 1233,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1235
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1234
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1235
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1234,
      1235
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_scalar_exception_propagation": {
  "data": {
   "lineno": 1358,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1370,
      1378
     ]
    },
    "numpy.array": {
     "line number": [
      1369,
      1377
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1370,
      1378
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1370,
      1378
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_scalar_exception_propagation.ThrowingFloat": {
  "data": {
   "lineno": 1365,
   "symbols_in_volume": {
    "numpy.ndarray": {
     "line number": [
      1365
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_scalar_exception_propagation.ThrowingFloat.__float__": {
  "data": {
   "lineno": 1366,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1367
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_scalar_exception_propagation.ThrowingInteger": {
  "data": {
   "lineno": 1373,
   "symbols_in_volume": {
    "numpy.ndarray": {
     "line number": [
      1373
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_scalar_exception_propagation.ThrowingInteger.__int__": {
  "data": {
   "lineno": 1374,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1375
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_shuffle": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": {
    "conv": {
     "line number": [
      821,
      824
     ]
    },
    "int": {
     "line number": [
      814,
      814
     ]
    },
    "numpy.array": {
     "line number": [
      803
     ]
    },
    "numpy.asarray": {
     "line number": [
      805,
      806,
      807,
      808,
      810,
      813,
      817
     ]
    },
    "numpy.complex64": {
     "line number": [
      807
     ]
    },
    "numpy.float32": {
     "line number": [
      806
     ]
    },
    "numpy.int32": {
     "line number": [
      819
     ]
    },
    "numpy.int8": {
     "line number": [
      805
     ]
    },
    "numpy.recarray": {
     "line number": [
      815
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      825
     ]
    },
    "numpy.vstack": {
     "line number": [
      811
     ]
    },
    "object": {
     "line number": [
      808,
      818
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      820,
      822
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_shuffle_masked": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      830
     ]
    },
    "numpy.ma.masked_values": {
     "line number": [
      829,
      830
     ]
    },
    "numpy.reshape": {
     "line number": [
      829
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      835,
      838
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      834,
      837
     ]
    },
    "range": {
     "line number": [
      829,
      833
     ]
    },
    "sorted": {
     "line number": [
      836,
      836,
      839,
      839
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_standard_cauchy": {
  "data": {
   "lineno": 1237,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1240
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1243
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1238,
      1239
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_standard_expoential_type_error": {
  "data": {
   "lineno": 1253,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1254
     ]
    },
    "numpy.int32": {
     "line number": [
      1254
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1254
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1254
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_standard_exponential": {
  "data": {
   "lineno": 1245,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1248
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1251
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1246,
      1247
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_standard_gamma": {
  "data": {
   "lineno": 1256,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1259
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1262
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1257,
      1258
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_standard_gamma_0": {
  "data": {
   "lineno": 1302,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1304
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1303
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1304
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1303,
      1304
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_standard_gamma_float": {
  "data": {
   "lineno": 1270,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1273
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1276
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1271,
      1272
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_standard_gamma_unknown_type": {
  "data": {
   "lineno": 1291,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1292
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1292
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1292
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_standard_gammma_float_out": {
  "data": {
   "lineno": 1278,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1282
     ]
    },
    "numpy.float32": {
     "line number": [
      1279,
      1281,
      1284,
      1288
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1285,
      1289
     ]
    },
    "numpy.zeros": {
     "line number": [
      1279
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1280,
      1281,
      1287,
      1288
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_standard_gammma_scalar_float": {
  "data": {
   "lineno": 1264,
   "symbols_in_volume": {
    "numpy.float32": {
     "line number": [
      1266
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1268
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1265,
      1266
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_standard_normal": {
  "data": {
   "lineno": 1306,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1309
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1312
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1307,
      1308
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_standard_normal_unsupported_type": {
  "data": {
   "lineno": 1314,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1315
     ]
    },
    "numpy.int32": {
     "line number": [
      1315
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1315
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1315
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_standard_t": {
  "data": {
   "lineno": 1317,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1320
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1323
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1318,
      1319
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_triangular": {
  "data": {
   "lineno": 1325,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1329
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1332
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1326,
      1327
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_uniform": {
  "data": {
   "lineno": 1334,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1337
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1340
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1335,
      1336
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_uniform_range_bounds": {
  "data": {
   "lineno": 1342,
   "symbols_in_volume": {
    "OverflowError": {
     "line number": [
      1347,
      1348,
      1349,
      1350,
      1351
     ]
    },
    "numpy.finfo": {
     "line number": [
      1343,
      1344
     ]
    },
    "numpy.inf": {
     "line number": [
      1347,
      1348,
      1350,
      1351
     ]
    },
    "numpy.nextafter": {
     "line number": [
      1356
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1347,
      1348,
      1349,
      1350,
      1351
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1346,
      1356
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_vonmises": {
  "data": {
   "lineno": 1380,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1383
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1386
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1381,
      1382
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_vonmises_nan": {
  "data": {
   "lineno": 1394,
   "symbols_in_volume": {
    "numpy.isnan": {
     "line number": [
      1397
     ]
    },
    "numpy.nan": {
     "line number": [
      1396
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1397
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1395,
      1396
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_vonmises_small": {
  "data": {
   "lineno": 1388,
   "symbols_in_volume": {
    "numpy.isfinite": {
     "line number": [
      1392
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1392
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1390,
      1391
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_wald": {
  "data": {
   "lineno": 1399,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1402
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1405
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1400,
      1401
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_weibull": {
  "data": {
   "lineno": 1407,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1410
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1413
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1408,
      1409
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_weibull_0": {
  "data": {
   "lineno": 1415,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1418
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1417
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1418
     ]
    },
    "numpy.zeros": {
     "line number": [
      1417
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1416,
      1417,
      1418
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestRandomDist.test_zipf": {
  "data": {
   "lineno": 1420,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1423
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1426
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      1421,
      1422
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestSeed": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "object": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_generator_mt19937.TestSeed.test_array": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      32
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      31,
      33,
      35,
      37
     ]
    },
    "randomgen.Generator": {
     "line number": [
      30,
      32,
      34,
      36
     ]
    },
    "randomgen.MT19937": {
     "line number": [
      30,
      32,
      34,
      36
     ]
    },
    "range": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestSeed.test_invalid_array": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      46
     ]
    },
    "ValueError": {
     "line number": [
      47,
      48,
      49,
      50
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      46,
      47,
      48,
      49,
      50
     ]
    },
    "randomgen.MT19937": {
     "line number": [
      46,
      47,
      48,
      49,
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestSeed.test_invalid_scalar": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      41
     ]
    },
    "ValueError": {
     "line number": [
      42
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      41,
      42
     ]
    },
    "randomgen.MT19937": {
     "line number": [
      41,
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestSeed.test_noninstantized_bitgen": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      53
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      53
     ]
    },
    "randomgen.Generator": {
     "line number": [
      53
     ]
    },
    "randomgen.MT19937": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestSeed.test_scalar": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      25,
      27
     ]
    },
    "randomgen.Generator": {
     "line number": [
      24,
      26
     ]
    },
    "randomgen.MT19937": {
     "line number": [
      24,
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestSetState": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "object": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_generator_mt19937.TestSetState.setup": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "randomgen.Generator": {
     "line number": [
      124
     ]
    },
    "randomgen.MT19937": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestSetState.test_basic": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      137
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      137
     ]
    },
    "randomgen.tests.test_generator_mt19937.pytest": {
     "line number": [
      132,
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestSetState.test_gaussian_reset": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      144
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestSetState.test_gaussian_reset_in_media_res": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      155
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestSetState.test_negative_binomial": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestSingleEltArrayInput": {
  "data": {
   "lineno": 2147,
   "symbols_in_volume": {
    "object": {
     "line number": [
      2147
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_generator_mt19937.TestSingleEltArrayInput.setup": {
  "data": {
   "lineno": 2148,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      2149,
      2150,
      2151
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestSingleEltArrayInput.test_integers": {
  "data": {
   "lineno": 2200,
   "symbols_in_volume": {
    "func": {
     "line number": [
      2203,
      2208,
      2211,
      2214
     ]
    },
    "numpy.array": {
     "line number": [
      2204,
      2205
     ]
    },
    "numpy.bool": {
     "line number": [
      2201
     ]
    },
    "numpy.int16": {
     "line number": [
      2201
     ]
    },
    "numpy.int32": {
     "line number": [
      2202
     ]
    },
    "numpy.int64": {
     "line number": [
      2202
     ]
    },
    "numpy.int8": {
     "line number": [
      2201
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      2209,
      2212,
      2215
     ]
    },
    "numpy.uint16": {
     "line number": [
      2201
     ]
    },
    "numpy.uint32": {
     "line number": [
      2202
     ]
    },
    "numpy.uint64": {
     "line number": [
      2202
     ]
    },
    "numpy.uint8": {
     "line number": [
      2201
     ]
    },
    "randomgen.tests.test_generator_mt19937.endpoint": {
     "line number": [
      2208,
      2211,
      2214
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      2203
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestSingleEltArrayInput.test_one_arg_funcs": {
  "data": {
   "lineno": 2154,
   "symbols_in_volume": {
    "func": {
     "line number": [
      2166,
      2169
     ]
    },
    "numpy.array": {
     "line number": [
      2166
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      2171
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      2155,
      2155,
      2156,
      2156,
      2157,
      2157,
      2158,
      2158,
      2159,
      2159,
      2160,
      2160,
      2162,
      2162
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestSingleEltArrayInput.test_three_arg_funcs": {
  "data": {
   "lineno": 2217,
   "symbols_in_volume": {
    "func": {
     "line number": [
      2221,
      2222,
      2225,
      2228
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      2223,
      2226,
      2229
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      2218,
      2218,
      2219
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestSingleEltArrayInput.test_two_arg_funcs": {
  "data": {
   "lineno": 2173,
   "symbols_in_volume": {
    "func": {
     "line number": [
      2184,
      2185,
      2191,
      2194,
      2197
     ]
    },
    "numpy.array": {
     "line number": [
      2186
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      2192,
      2195,
      2198
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      2174,
      2174,
      2175,
      2175,
      2176,
      2176,
      2177,
      2177,
      2178,
      2178,
      2179,
      2179,
      2180,
      2180,
      2182,
      2182
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestThread": {
  "data": {
   "lineno": 2099,
   "symbols_in_volume": {
    "object": {
     "line number": [
      2099
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_generator_mt19937.TestThread.check_function": {
  "data": {
   "lineno": 2104,
   "symbols_in_volume": {
    "function": {
     "line number": [
      2119
     ]
    },
    "len": {
     "line number": [
      2107,
      2108
     ]
    },
    "numpy.empty": {
     "line number": [
      2107,
      2108
     ]
    },
    "numpy.intp": {
     "line number": [
      2122
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      2123
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      2125
     ]
    },
    "randomgen.Generator": {
     "line number": [
      2112,
      2119
     ]
    },
    "randomgen.MT19937": {
     "line number": [
      2112,
      2119
     ]
    },
    "randomgen.tests.test_generator_mt19937.sys": {
     "line number": [
      2122
     ]
    },
    "t": {
     "line number": [
      2111,
      2114,
      2115
     ]
    },
    "threading.Thread": {
     "line number": [
      2111
     ]
    },
    "zip": {
     "line number": [
      2113,
      2118
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestThread.setup": {
  "data": {
   "lineno": 2101,
   "symbols_in_volume": {
    "range": {
     "line number": [
      2102
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestThread.test_exp": {
  "data": {
   "lineno": 2133
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestThread.test_exp.gen_random": {
  "data": {
   "lineno": 2134,
   "symbols_in_volume": {
    "numpy.ones": {
     "line number": [
      2135
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestThread.test_multinomial": {
  "data": {
   "lineno": 2139
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestThread.test_multinomial.gen_random": {
  "data": {
   "lineno": 2140
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestThread.test_normal": {
  "data": {
   "lineno": 2127
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.TestThread.test_normal.gen_random": {
  "data": {
   "lineno": 2128
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.Thread": {
  "data": {
   "shadows": "threading.Thread"
  },
  "type": "import"
 },
 "randomgen.tests.test_generator_mt19937.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "randomgen.tests.test_generator_mt19937.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "randomgen.tests.test_generator_mt19937.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "randomgen.tests.test_generator_mt19937.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "randomgen.tests.test_generator_mt19937.assert_no_warnings": {
  "data": {
   "shadows": "numpy.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "randomgen.tests.test_generator_mt19937.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "randomgen.tests.test_generator_mt19937.assert_state_equal": {
  "data": {
   "shadows": "randomgen.tests.test_direct.assert_state_equal"
  },
  "type": "import"
 },
 "randomgen.tests.test_generator_mt19937.assert_warns": {
  "data": {
   "shadows": "numpy.testing.assert_warns"
  },
  "type": "import"
 },
 "randomgen.tests.test_generator_mt19937.endpoint": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "randomgen.tests.test_generator_mt19937.pytest": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "randomgen.tests.test_generator_mt19937.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "randomgen.tests.test_generator_mt19937.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "randomgen.tests.test_generator_mt19937.random": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "randomgen.tests.test_generator_mt19937.suppress_warnings": {
  "data": {
   "shadows": "randomgen._testing.suppress_warnings"
  },
  "type": "import"
 },
 "randomgen.tests.test_generator_mt19937.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "randomgen.tests.test_generator_mt19937.test_get_state": {
  "data": {
   "lineno": 2244,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      2248
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      2245,
      2246
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.test_seed_equivalence": {
  "data": {
   "lineno": 2232,
   "symbols_in_volume": {
    "randomgen.tests.test_direct.assert_state_equal": {
     "line number": [
      2238,
      2241
     ]
    },
    "randomgen.tests.test_generator_mt19937.random": {
     "line number": [
      2233,
      2234,
      2235,
      2236,
      2237,
      2239,
      2240,
      2241
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "randomgen.tests.test_generator_mt19937_regressions": {
  "data": {
   "symbols_in_volume": {
    "randomgen.Generator": {
     "line number": [
      8
     ]
    },
    "randomgen.MT19937": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "module"
 },
 "randomgen.tests.test_generator_mt19937_regressions.Generator": {
  "data": {
   "shadows": "randomgen.Generator"
  },
  "type": "import"
 },
 "randomgen.tests.test_generator_mt19937_regressions.MT19937": {
  "data": {
   "shadows": "randomgen.MT19937"
  },
  "type": "import"
 },
 "randomgen.tests.test_generator_mt19937_regressions.TestRegression": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "object": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_generator_mt19937_regressions.TestRegression.test_VonMises_range": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      18,
      18
     ]
    },
    "numpy.linspace": {
     "line number": [
      16
     ]
    },
    "numpy.pi": {
     "line number": [
      18,
      18
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      18
     ]
    },
    "randomgen.tests.test_generator_mt19937_regressions.mt19937": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937_regressions.TestRegression.test_beta_small_parameters": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "numpy.any": {
     "line number": [
      86
     ]
    },
    "numpy.isnan": {
     "line number": [
      86
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      86
     ]
    },
    "randomgen.tests.test_generator_mt19937_regressions.mt19937": {
     "line number": [
      84,
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937_regressions.TestRegression.test_call_within_randomstate": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      66
     ]
    },
    "numpy.ones": {
     "line number": [
      71
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      71
     ]
    },
    "randomgen.Generator": {
     "line number": [
      65
     ]
    },
    "randomgen.MT19937": {
     "line number": [
      65
     ]
    },
    "randomgen.tests.test_generator_mt19937_regressions.mt19937": {
     "line number": [
      68
     ]
    },
    "range": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937_regressions.TestRegression.test_choice_sum_of_probs_tolerance": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      99
     ]
    },
    "numpy.array": {
     "line number": [
      96
     ]
    },
    "numpy.float16": {
     "line number": [
      95
     ]
    },
    "numpy.float32": {
     "line number": [
      95
     ]
    },
    "numpy.float64": {
     "line number": [
      95
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      98
     ]
    },
    "randomgen.tests.test_generator_mt19937_regressions.mt19937": {
     "line number": [
      92,
      97,
      100
     ]
    },
    "randomgen.tests.test_generator_mt19937_regressions.pytest": {
     "line number": [
      99
     ]
    },
    "sum": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937_regressions.TestRegression.test_gamma_0": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      158
     ]
    },
    "numpy.float32": {
     "line number": [
      158
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      155,
      159
     ]
    },
    "randomgen.tests.test_generator_mt19937_regressions.mt19937": {
     "line number": [
      154,
      155,
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937_regressions.TestRegression.test_hypergeometric_range": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      22,
      23
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      22,
      23,
      27
     ]
    },
    "randomgen.tests.test_generator_mt19937_regressions.mt19937": {
     "line number": [
      22,
      23,
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937_regressions.TestRegression.test_logseries_convergence": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "float": {
     "line number": [
      37,
      41
     ]
    },
    "numpy.sum": {
     "line number": [
      37,
      41
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      39,
      43
     ]
    },
    "randomgen.tests.test_generator_mt19937_regressions.mt19937": {
     "line number": [
      32,
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937_regressions.TestRegression.test_multivariate_normal_size_types": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "numpy.int64": {
     "line number": [
      79
     ]
    },
    "numpy.int_": {
     "line number": [
      78
     ]
    },
    "randomgen.tests.test_generator_mt19937_regressions.mt19937": {
     "line number": [
      77,
      78,
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937_regressions.TestRegression.test_permutation_longs": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "numpy.compat.long": {
     "line number": [
      49
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      50
     ]
    },
    "randomgen.tests.test_generator_mt19937_regressions.mt19937": {
     "line number": [
      46,
      47,
      48,
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937_regressions.TestRegression.test_permutation_subclass": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "M": {
     "line number": [
      148
     ]
    },
    "numpy.arange": {
     "line number": [
      136,
      139,
      151
     ]
    },
    "numpy.array": {
     "line number": [
      138,
      150
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      138,
      139,
      150,
      151
     ]
    },
    "randomgen.tests.test_generator_mt19937_regressions.mt19937": {
     "line number": [
      135,
      137,
      147,
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937_regressions.TestRegression.test_permutation_subclass.M": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      142
     ]
    },
    "object": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_generator_mt19937_regressions.TestRegression.test_permutation_subclass.M.__array__": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937_regressions.TestRegression.test_permutation_subclass.N": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "numpy.ndarray": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_generator_mt19937_regressions.TestRegression.test_shuffle_mixed_dimension": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "list": {
     "line number": [
      59
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      61
     ]
    },
    "randomgen.tests.test_generator_mt19937_regressions.mt19937": {
     "line number": [
      58,
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937_regressions.TestRegression.test_shuffle_of_array_of_different_length_strings": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      108
     ]
    },
    "randomgen.tests.test_generator_mt19937_regressions.gc": {
     "line number": [
      115
     ]
    },
    "randomgen.tests.test_generator_mt19937_regressions.mt19937": {
     "line number": [
      106,
      111
     ]
    },
    "range": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937_regressions.TestRegression.test_shuffle_of_array_of_objects": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      122,
      122
     ]
    },
    "numpy.array": {
     "line number": [
      122
     ]
    },
    "randomgen.tests.test_generator_mt19937_regressions.gc": {
     "line number": [
      129
     ]
    },
    "randomgen.tests.test_generator_mt19937_regressions.mt19937": {
     "line number": [
      121,
      125
     ]
    },
    "range": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_generator_mt19937_regressions.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "randomgen.tests.test_generator_mt19937_regressions.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "randomgen.tests.test_generator_mt19937_regressions.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "randomgen.tests.test_generator_mt19937_regressions.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "randomgen.tests.test_generator_mt19937_regressions.mt19937": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "randomgen.tests.test_generator_mt19937_regressions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "randomgen.tests.test_generator_mt19937_regressions.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "randomgen.tests.test_randomstate": {
  "data": {
   "symbols_in_volume": {
    "int": {
     "line number": [
      29
     ]
    },
    "numpy.iinfo": {
     "line number": [
      29
     ]
    },
    "numpy.ones": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "module"
 },
 "randomgen.tests.test_randomstate.INT_FUNCS": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "randomgen.tests.test_randomstate.INT_FUNC_HASHES": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "randomgen.tests.test_randomstate.MT19937": {
  "data": {
   "shadows": "randomgen.mt19937.MT19937"
  },
  "type": "import"
 },
 "randomgen.tests.test_randomstate.TestBinomial": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "object": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_randomstate.TestBinomial.test_n_zero": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "numpy.testing.assert_": {
     "line number": [
      121
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      122
     ]
    },
    "numpy.zeros": {
     "line number": [
      119
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      121,
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestBinomial.test_p_is_nan": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      126
     ]
    },
    "numpy.nan": {
     "line number": [
      126
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      126
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestBroadcast": {
  "data": {
   "lineno": 1241,
   "symbols_in_volume": {
    "object": {
     "line number": [
      1241
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_randomstate.TestBroadcast.set_seed": {
  "data": {
   "lineno": 1247,
   "symbols_in_volume": {
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1248
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestBroadcast.setup": {
  "data": {
   "lineno": 1244
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestBroadcast.test_beta": {
  "data": {
   "lineno": 1285,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1298,
      1299,
      1304,
      1305
     ]
    },
    "beta": {
     "line number": [
      1296,
      1298,
      1299,
      1302,
      1304,
      1305
     ]
    },
    "numpy.array": {
     "line number": [
      1291
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1297,
      1303
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1298,
      1299,
      1304,
      1305
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1290
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestBroadcast.test_binomial": {
  "data": {
   "lineno": 1686,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1701,
      1702,
      1703,
      1708,
      1709,
      1710
     ]
    },
    "binom": {
     "line number": [
      1696,
      1699,
      1701,
      1702,
      1703,
      1706,
      1708,
      1709,
      1710
     ]
    },
    "numpy.array": {
     "line number": [
      1693
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1697,
      1700,
      1707
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1701,
      1702,
      1703,
      1708,
      1709,
      1710
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1692
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestBroadcast.test_chisquare": {
  "data": {
   "lineno": 1418,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1429
     ]
    },
    "chisquare": {
     "line number": [
      1427,
      1429
     ]
    },
    "numpy.array": {
     "line number": [
      1422
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1428
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1429
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1421
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestBroadcast.test_exponential": {
  "data": {
   "lineno": 1307,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1318
     ]
    },
    "exponential": {
     "line number": [
      1316,
      1318
     ]
    },
    "numpy.array": {
     "line number": [
      1311
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1317
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1318
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1310
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestBroadcast.test_f": {
  "data": {
   "lineno": 1355,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1368,
      1369,
      1374,
      1375
     ]
    },
    "f": {
     "line number": [
      1366,
      1368,
      1369,
      1372,
      1374,
      1375
     ]
    },
    "numpy.array": {
     "line number": [
      1361
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1367,
      1373
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1368,
      1369,
      1374,
      1375
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1360
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestBroadcast.test_gamma": {
  "data": {
   "lineno": 1333,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1346,
      1347,
      1352,
      1353
     ]
    },
    "gamma": {
     "line number": [
      1344,
      1346,
      1347,
      1350,
      1352,
      1353
     ]
    },
    "numpy.array": {
     "line number": [
      1339
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1345,
      1351
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1346,
      1347,
      1352,
      1353
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1338
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestBroadcast.test_geometric": {
  "data": {
   "lineno": 1764,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1774,
      1775
     ]
    },
    "geom": {
     "line number": [
      1772,
      1774,
      1775
     ]
    },
    "numpy.array": {
     "line number": [
      1769
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1773
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1774,
      1775
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1768
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestBroadcast.test_gumbel": {
  "data": {
   "lineno": 1547,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1559,
      1564
     ]
    },
    "gumbel": {
     "line number": [
      1557,
      1559,
      1562,
      1564
     ]
    },
    "numpy.array": {
     "line number": [
      1552
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1558,
      1563
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1559,
      1564
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1551
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestBroadcast.test_hypergeometric": {
  "data": {
   "lineno": 1777,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1791,
      1792,
      1793,
      1794,
      1799,
      1800,
      1801,
      1802,
      1807,
      1808,
      1809,
      1810,
      1812,
      1813,
      1814,
      1815
     ]
    },
    "hypergeom": {
     "line number": [
      1789,
      1791,
      1792,
      1793,
      1794,
      1797,
      1799,
      1800,
      1801,
      1802,
      1805,
      1807,
      1808,
      1809,
      1810,
      1812,
      1813,
      1814,
      1815
     ]
    },
    "numpy.array": {
     "line number": [
      1786
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1790,
      1798,
      1806
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1791,
      1792,
      1793,
      1794,
      1799,
      1800,
      1801,
      1802,
      1807,
      1808,
      1809,
      1810,
      1812,
      1813,
      1814,
      1815
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1785
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestBroadcast.test_laplace": {
  "data": {
   "lineno": 1528,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1540,
      1545
     ]
    },
    "laplace": {
     "line number": [
      1538,
      1540,
      1543,
      1545
     ]
    },
    "numpy.array": {
     "line number": [
      1533
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1539,
      1544
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1540,
      1545
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1532
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestBroadcast.test_logistic": {
  "data": {
   "lineno": 1566,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1578,
      1583
     ]
    },
    "logistic": {
     "line number": [
      1576,
      1578,
      1581,
      1583
     ]
    },
    "numpy.array": {
     "line number": [
      1571
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1577,
      1582
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1584
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1578,
      1583
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1570,
      1584
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestBroadcast.test_lognormal": {
  "data": {
   "lineno": 1586,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1598,
      1599,
      1604,
      1605
     ]
    },
    "lognormal": {
     "line number": [
      1596,
      1598,
      1602,
      1604
     ]
    },
    "numpy.array": {
     "line number": [
      1591
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1597,
      1603
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1598,
      1599,
      1604,
      1605
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1590,
      1599,
      1605
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestBroadcast.test_logseries": {
  "data": {
   "lineno": 1817,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1827,
      1828
     ]
    },
    "logseries": {
     "line number": [
      1825,
      1827,
      1828
     ]
    },
    "numpy.array": {
     "line number": [
      1822
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1826
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1827,
      1828
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1821
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestBroadcast.test_negative_binomial": {
  "data": {
   "lineno": 1712,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1724,
      1725,
      1726,
      1731,
      1732,
      1733
     ]
    },
    "neg_binom": {
     "line number": [
      1722,
      1724,
      1725,
      1726,
      1729,
      1731,
      1732,
      1733
     ]
    },
    "numpy.array": {
     "line number": [
      1719
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1723,
      1730
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1724,
      1725,
      1726,
      1731,
      1732,
      1733
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1718
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestBroadcast.test_noncentral_chisquare": {
  "data": {
   "lineno": 1431,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1444,
      1445,
      1450,
      1451
     ]
    },
    "nonc_chi": {
     "line number": [
      1442,
      1444,
      1445,
      1448,
      1450,
      1451
     ]
    },
    "numpy.array": {
     "line number": [
      1437
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1443,
      1449
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1444,
      1445,
      1450,
      1451
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1436
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestBroadcast.test_noncentral_f": {
  "data": {
   "lineno": 1377,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1394,
      1395,
      1396,
      1401,
      1402,
      1403,
      1408,
      1409,
      1410
     ]
    },
    "nonc_f": {
     "line number": [
      1390,
      1392,
      1394,
      1395,
      1396,
      1399,
      1401,
      1402,
      1403,
      1406,
      1408,
      1409,
      1410
     ]
    },
    "numpy.all": {
     "line number": [
      1392
     ]
    },
    "numpy.array": {
     "line number": [
      1385
     ]
    },
    "numpy.isnan": {
     "line number": [
      1392
     ]
    },
    "numpy.nan": {
     "line number": [
      1392
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1391,
      1400,
      1407
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1394,
      1395,
      1396,
      1401,
      1402,
      1403,
      1408,
      1409,
      1410
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1384
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestBroadcast.test_noncentral_f_small_df": {
  "data": {
   "lineno": 1412,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1414
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1416
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1415
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestBroadcast.test_normal": {
  "data": {
   "lineno": 1266,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1278,
      1283
     ]
    },
    "normal": {
     "line number": [
      1276,
      1278,
      1281,
      1283
     ]
    },
    "numpy.array": {
     "line number": [
      1271
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1277,
      1282
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1278,
      1283
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1270
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestBroadcast.test_pareto": {
  "data": {
   "lineno": 1486,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1497,
      1498
     ]
    },
    "numpy.array": {
     "line number": [
      1490
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1496
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1497,
      1498
     ]
    },
    "pareto": {
     "line number": [
      1495,
      1497
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1489,
      1498
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestBroadcast.test_poisson": {
  "data": {
   "lineno": 1735,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1747,
      1748
     ]
    },
    "numpy.array": {
     "line number": [
      1742
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1746
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1747,
      1748
     ]
    },
    "poisson": {
     "line number": [
      1745,
      1747,
      1748
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1736,
      1741
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestBroadcast.test_power": {
  "data": {
   "lineno": 1514,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1525,
      1526
     ]
    },
    "numpy.array": {
     "line number": [
      1518
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1524
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1525,
      1526
     ]
    },
    "power": {
     "line number": [
      1523,
      1525
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1517,
      1526
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestBroadcast.test_rayleigh": {
  "data": {
   "lineno": 1607,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1618
     ]
    },
    "numpy.array": {
     "line number": [
      1611
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1617
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1618
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1610
     ]
    },
    "rayleigh": {
     "line number": [
      1616,
      1618
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestBroadcast.test_standard_gamma": {
  "data": {
   "lineno": 1320,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1331
     ]
    },
    "numpy.array": {
     "line number": [
      1324
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1330
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1331
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1323
     ]
    },
    "std_gamma": {
     "line number": [
      1329,
      1331
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestBroadcast.test_standard_t": {
  "data": {
   "lineno": 1453,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1464,
      1465
     ]
    },
    "numpy.array": {
     "line number": [
      1457
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1463
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1464,
      1465
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1456,
      1465
     ]
    },
    "t": {
     "line number": [
      1462,
      1464
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestBroadcast.test_triangular": {
  "data": {
   "lineno": 1646,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1661,
      1662,
      1663,
      1669,
      1670,
      1671,
      1677,
      1678,
      1679,
      1682,
      1683,
      1684
     ]
    },
    "numpy.array": {
     "line number": [
      1654
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1660,
      1668,
      1676
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1661,
      1662,
      1663,
      1669,
      1670,
      1671,
      1677,
      1678,
      1679,
      1682,
      1683,
      1684
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1653
     ]
    },
    "triangular": {
     "line number": [
      1659,
      1661,
      1662,
      1663,
      1667,
      1669,
      1670,
      1671,
      1675,
      1677,
      1678,
      1679,
      1682,
      1683,
      1684
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestBroadcast.test_uniform": {
  "data": {
   "lineno": 1250,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1254
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1260,
      1264
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1253
     ]
    },
    "uniform": {
     "line number": [
      1259,
      1263
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestBroadcast.test_vonmises": {
  "data": {
   "lineno": 1467,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1479,
      1484
     ]
    },
    "numpy.array": {
     "line number": [
      1472
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1478,
      1483
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1479,
      1484
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1471
     ]
    },
    "vonmises": {
     "line number": [
      1477,
      1479,
      1482,
      1484
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestBroadcast.test_wald": {
  "data": {
   "lineno": 1620,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1633,
      1634,
      1635,
      1636,
      1641,
      1642,
      1643,
      1644
     ]
    },
    "numpy.array": {
     "line number": [
      1626
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1632,
      1640
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1633,
      1634,
      1635,
      1636,
      1641,
      1642,
      1643,
      1644
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1625,
      1635,
      1636
     ]
    },
    "wald": {
     "line number": [
      1631,
      1633,
      1634,
      1639,
      1641,
      1642,
      1643,
      1644
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestBroadcast.test_weibull": {
  "data": {
   "lineno": 1500,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1511,
      1512
     ]
    },
    "numpy.array": {
     "line number": [
      1504
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1510
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1511,
      1512
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1503,
      1512
     ]
    },
    "weibull": {
     "line number": [
      1509,
      1511
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestBroadcast.test_zipf": {
  "data": {
   "lineno": 1750,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1759,
      1761,
      1762
     ]
    },
    "numpy.array": {
     "line number": [
      1754
     ]
    },
    "numpy.errstate": {
     "line number": [
      1760
     ]
    },
    "numpy.nan": {
     "line number": [
      1761,
      1762
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1758
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1759,
      1761,
      1762
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1753
     ]
    },
    "zipf": {
     "line number": [
      1757,
      1759,
      1761,
      1762
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestMultinomial": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "object": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_randomstate.TestMultinomial.test_basic": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestMultinomial.test_int_negative_interval": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      139,
      140
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      137,
      139,
      140
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      137,
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestMultinomial.test_invalid_n": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      161
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      161
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestMultinomial.test_invalid_prob": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      157,
      158
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      157,
      158
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      157,
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestMultinomial.test_large_p": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      174
     ]
    },
    "numpy.array": {
     "line number": [
      175
     ]
    },
    "randomgen.tests.test_randomstate.pytest": {
     "line number": [
      174
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestMultinomial.test_p_noncontiguous": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      164
     ]
    },
    "numpy.ascontiguousarray": {
     "line number": [
      170
     ]
    },
    "numpy.sum": {
     "line number": [
      165
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      171
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      167,
      168,
      169,
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestMultinomial.test_size": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      153
     ]
    },
    "float": {
     "line number": [
      154
     ]
    },
    "numpy.array": {
     "line number": [
      150
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      145,
      146,
      147,
      148,
      149,
      150
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      153
     ]
    },
    "numpy.uint32": {
     "line number": [
      145,
      146,
      147
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      145,
      146,
      147,
      148,
      149,
      150,
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestMultinomial.test_zero_probability": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandint": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": {
    "numpy.bool_": {
     "line number": [
      270
     ]
    },
    "numpy.int16": {
     "line number": [
      270
     ]
    },
    "numpy.int32": {
     "line number": [
      271
     ]
    },
    "numpy.int64": {
     "line number": [
      271
     ]
    },
    "numpy.int8": {
     "line number": [
      270
     ]
    },
    "numpy.uint16": {
     "line number": [
      270
     ]
    },
    "numpy.uint32": {
     "line number": [
      271
     ]
    },
    "numpy.uint64": {
     "line number": [
      271
     ]
    },
    "numpy.uint8": {
     "line number": [
      270
     ]
    },
    "object": {
     "line number": [
      265
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      267
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_randomstate.TestRandint.test_bounds_checking": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      280,
      281,
      282,
      283
     ]
    },
    "numpy.bool_": {
     "line number": [
      278,
      279
     ]
    },
    "numpy.iinfo": {
     "line number": [
      278,
      279
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      280,
      281,
      282,
      283
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandint.test_full_range": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      309
     ]
    },
    "Exception": {
     "line number": [
      308
     ]
    },
    "numpy.bool_": {
     "line number": [
      303,
      304
     ]
    },
    "numpy.iinfo": {
     "line number": [
      303,
      304
     ]
    },
    "str": {
     "line number": [
      311
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandint.test_in_bounds_fuzz": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": {
    "numpy.bool_": {
     "line number": [
      323
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      320,
      321,
      325,
      326
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      315
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandint.test_int64_uint64_corner_case": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": {
    "numpy.iinfo": {
     "line number": [
      374,
      375,
      376
     ]
    },
    "numpy.int64": {
     "line number": [
      373,
      374,
      375,
      375,
      376
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      381
     ]
    },
    "numpy.uint64": {
     "line number": [
      376
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      380
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandint.test_repeatability": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      356,
      358
     ]
    },
    "numpy.dtype": {
     "line number": [
      352,
      358
     ]
    },
    "numpy.int8": {
     "line number": [
      351,
      356
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      352,
      358
     ]
    },
    "randomgen.tests.test_randomstate.hashlib": {
     "line number": [
      351,
      357
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      343,
      355
     ]
    },
    "randomgen.tests.test_randomstate.sys": {
     "line number": [
      346
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandint.test_respect_dtype_singleton": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      392,
      393,
      394
     ]
    },
    "hasattr": {
     "line number": [
      398
     ]
    },
    "int": {
     "line number": [
      392
     ]
    },
    "numpy.bool_": {
     "line number": [
      386,
      387
     ]
    },
    "numpy.dtype": {
     "line number": [
      390
     ]
    },
    "numpy.iinfo": {
     "line number": [
      386,
      387,
      393,
      394
     ]
    },
    "numpy.long": {
     "line number": [
      392
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      398
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      390,
      399
     ]
    },
    "type": {
     "line number": [
      399
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandint.test_rng_zero_and_extremes": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": {
    "numpy.bool_": {
     "line number": [
      287,
      288
     ]
    },
    "numpy.iinfo": {
     "line number": [
      287,
      288
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      291,
      294,
      297
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandint.test_unsupported_type": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      274
     ]
    },
    "float": {
     "line number": [
      274
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      274
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": {
    "object": {
     "line number": [
      402
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.setup": {
  "data": {
   "lineno": 406
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_beta": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      701
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      705
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      699,
      700
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_binomial": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      710
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      713,
      718
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      708,
      709,
      715,
      716
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_bytes": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      643
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      640,
      641
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_chisquare": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      723
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      726
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      721,
      722
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_choice_exceptions": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      561,
      562,
      563,
      564,
      565,
      567,
      568,
      569,
      570,
      572,
      573,
      574,
      575
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      561,
      562,
      563,
      564,
      565,
      567,
      568,
      569,
      570,
      572,
      573,
      574,
      575
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      560
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_choice_nan_probabilities": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      628
     ]
    },
    "numpy.array": {
     "line number": [
      625
     ]
    },
    "numpy.errstate": {
     "line number": [
      627
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      628
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      628
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_choice_noninteger": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      556
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      557
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      554,
      555
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_choice_nontintiguous": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": {
    "numpy.ascontiguousarray": {
     "line number": [
      636
     ]
    },
    "numpy.ones": {
     "line number": [
      631
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      637
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      633,
      634,
      635,
      636
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_choice_nonuniform_noreplace": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      550
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      551
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      548,
      549
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_choice_nonuniform_replace": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      538
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      539
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      536,
      537
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_choice_return_shape": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      622
     ]
    },
    "numpy.arange": {
     "line number": [
      612
     ]
    },
    "numpy.array": {
     "line number": [
      587,
      600
     ]
    },
    "numpy.empty": {
     "line number": [
      588,
      601
     ]
    },
    "numpy.isscalar": {
     "line number": [
      581,
      582,
      583,
      584,
      585,
      594,
      595,
      596,
      597,
      598
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      581,
      582,
      583,
      584,
      585,
      586,
      590,
      594,
      595,
      596,
      597,
      598,
      599,
      603
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      608,
      609,
      610,
      611,
      612,
      615,
      616,
      617,
      618,
      619,
      620
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      622
     ]
    },
    "object": {
     "line number": [
      588,
      601
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      581,
      582,
      583,
      584,
      585,
      586,
      590,
      594,
      595,
      596,
      597,
      598,
      599,
      603,
      608,
      609,
      610,
      611,
      612,
      615,
      616,
      617,
      618,
      619,
      620,
      622
     ]
    },
    "tuple": {
     "line number": [
      593
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_choice_uniform_noreplace": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      544
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      545
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      542,
      543
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_choice_uniform_replace": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      532
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      533
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      530,
      531
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_dirichlet": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      740
     ]
    },
    "numpy.array": {
     "line number": [
      730,
      732,
      739,
      743
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      738,
      745
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      740
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      729,
      731,
      740,
      742,
      744
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_dirichlet_bad_alpha": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      762
     ]
    },
    "numpy.array": {
     "line number": [
      761
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      762
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      762
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_dirichlet_non_contiguous_alpha": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      765
     ]
    },
    "numpy.ascontiguousarray": {
     "line number": [
      770
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      772
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      767,
      768,
      769,
      770
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_dirichlet_size": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      757
     ]
    },
    "float": {
     "line number": [
      757
     ]
    },
    "numpy.array": {
     "line number": [
      749,
      755
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      750,
      751,
      752,
      753,
      754,
      755
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      757
     ]
    },
    "numpy.uint32": {
     "line number": [
      750,
      751,
      752
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      750,
      751,
      752,
      753,
      754,
      755,
      757
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_exponential": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      777
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      780
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      775,
      776
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_exponential_0": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      784
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      783
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      784
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      783,
      784
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_f": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      789
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      792
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      787,
      788
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_gamma": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      797
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      800
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      795,
      796
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_gamma_0": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      804
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      803
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      804
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      803,
      804
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_geometric": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      809
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      812
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      807,
      808
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_geometric_exceptions": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      820
     ]
    },
    "ValueError": {
     "line number": [
      815,
      816,
      817,
      818,
      821,
      822
     ]
    },
    "numpy.nan": {
     "line number": [
      821,
      822
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      815,
      816,
      817,
      818,
      821,
      822
     ]
    },
    "numpy.testing.suppress_warnings": {
     "line number": [
      819
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      815,
      816,
      817,
      818,
      821,
      822
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_gumbel": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      827
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      830
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      825,
      826
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_gumbel_0": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      834
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      833
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      834
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      833,
      834
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_hypergeometric": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      839,
      846,
      850,
      855,
      859
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      842,
      847,
      851,
      856,
      860
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      837,
      838,
      845,
      849,
      854,
      858
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_laplace": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      865
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      868
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      863,
      864
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_laplace_0": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      872
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      871
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      872
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      871,
      872
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_logistic": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      877
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      880
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      875,
      876
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_lognormal": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      885
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      888
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      883,
      884
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_lognormal_0": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      892
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      891
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      892
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      891,
      892
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_logseries": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      897
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      900
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      895,
      896
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_logseries_exceptions": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      904
     ]
    },
    "ValueError": {
     "line number": [
      905,
      906
     ]
    },
    "numpy.nan": {
     "line number": [
      905,
      906
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      905,
      906
     ]
    },
    "numpy.testing.suppress_warnings": {
     "line number": [
      903
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      905,
      906
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_multinomial": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      911
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      917
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      909,
      910
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_multivariate_normal": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      943,
      956
     ]
    },
    "ValueError": {
     "line number": [
      950,
      961,
      963,
      965,
      967
     ]
    },
    "len": {
     "line number": [
      957
     ]
    },
    "numpy.array": {
     "line number": [
      925,
      936,
      953
     ]
    },
    "numpy.empty": {
     "line number": [
      966
     ]
    },
    "numpy.eye": {
     "line number": [
      960,
      968
     ]
    },
    "numpy.float32": {
     "line number": [
      953
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      932,
      937
     ]
    },
    "numpy.testing.assert_no_warnings": {
     "line number": [
      946
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      950,
      961,
      963,
      965,
      967
     ]
    },
    "numpy.testing.assert_warns": {
     "line number": [
      943
     ]
    },
    "numpy.testing.suppress_warnings": {
     "line number": [
      954
     ]
    },
    "numpy.zeros": {
     "line number": [
      959,
      964
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      920,
      924,
      935,
      943,
      946,
      950,
      955,
      961,
      963,
      965,
      967
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_negative_binomial": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      973
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      976
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      971,
      972
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_negative_binomial_exceptions": {
  "data": {
   "lineno": 978,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      980
     ]
    },
    "ValueError": {
     "line number": [
      981,
      982
     ]
    },
    "numpy.nan": {
     "line number": [
      981,
      983
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      981,
      982
     ]
    },
    "numpy.testing.suppress_warnings": {
     "line number": [
      979
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      981,
      982
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_noncentral_chisquare": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      988,
      994,
      1001
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      991,
      997,
      1004
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      986,
      987,
      993,
      999,
      1000
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_noncentral_f": {
  "data": {
   "lineno": 1006,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1010
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1013
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1007,
      1008
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_noncentral_f_nan": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": {
    "numpy.isnan": {
     "line number": [
      1018
     ]
    },
    "numpy.nan": {
     "line number": [
      1017
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1016,
      1017
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_normal": {
  "data": {
   "lineno": 1020,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1023
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1026
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1021,
      1022
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_normal_0": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1030
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1029
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1030
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1029,
      1030
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_pareto": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1035
     ]
    },
    "numpy.testing.assert_array_almost_equal_nulp": {
     "line number": [
      1045
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1033,
      1034
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_permutation": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": {
    "numpy.atleast_2d": {
     "line number": [
      694,
      696
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      691,
      696
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      687,
      689,
      693,
      695
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_poisson": {
  "data": {
   "lineno": 1047,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1050
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1053
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1048,
      1049
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_poisson_exceptions": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      1063
     ]
    },
    "ValueError": {
     "line number": [
      1058,
      1059,
      1060,
      1061,
      1064,
      1065
     ]
    },
    "numpy.iinfo": {
     "line number": [
      1056
     ]
    },
    "numpy.nan": {
     "line number": [
      1064,
      1065
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1058,
      1059,
      1060,
      1061,
      1064,
      1065
     ]
    },
    "numpy.testing.suppress_warnings": {
     "line number": [
      1062
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1058,
      1059,
      1060,
      1061,
      1064,
      1065
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_power": {
  "data": {
   "lineno": 1067,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1070
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1073
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1068,
      1069
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_rand": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      412
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      415
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      410,
      411
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_rand_singleton": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": {
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      421
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      418,
      419
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_randint": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      438
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      441
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      436,
      437
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_randn": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      426
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      429,
      433
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      424,
      425,
      431,
      432
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_randn_singleton": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1126
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1127
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1124,
      1125
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_random_integers": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      446,
      456
     ]
    },
    "len": {
     "line number": [
      448,
      458
     ]
    },
    "numpy.array": {
     "line number": [
      449
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      448,
      458
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      452,
      459
     ]
    },
    "numpy.testing.suppress_warnings": {
     "line number": [
      445,
      455
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      444,
      447,
      454,
      457
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_random_integers_deprecated": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      505,
      508,
      513
     ]
    },
    "numpy.iinfo": {
     "line number": [
      510,
      515,
      515
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      508,
      513
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      509,
      514
     ]
    },
    "randomgen.tests.test_randomstate.warnings": {
     "line number": [
      504,
      505
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_random_integers_max_int": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      488,
      496
     ]
    },
    "len": {
     "line number": [
      491,
      500
     ]
    },
    "numpy.dtype": {
     "line number": [
      497
     ]
    },
    "numpy.iinfo": {
     "line number": [
      489,
      490,
      493,
      498,
      499
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      491,
      500
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      494,
      501
     ]
    },
    "numpy.testing.suppress_warnings": {
     "line number": [
      487,
      495
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      489,
      498
     ]
    },
    "typer": {
     "line number": [
      498,
      499
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_random_sample": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      520
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      523,
      527
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      518,
      519,
      525,
      526
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_rayleigh": {
  "data": {
   "lineno": 1075,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1078
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1081
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1076,
      1077
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_rayleigh_0": {
  "data": {
   "lineno": 1083,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1085
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1084
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1085
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1084,
      1085
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_scalar_exception_propagation": {
  "data": {
   "lineno": 1170,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1182,
      1190
     ]
    },
    "numpy.array": {
     "line number": [
      1181,
      1189
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1182,
      1190
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1182,
      1190
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_scalar_exception_propagation.ThrowingFloat": {
  "data": {
   "lineno": 1177,
   "symbols_in_volume": {
    "numpy.ndarray": {
     "line number": [
      1177
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_scalar_exception_propagation.ThrowingFloat.__float__": {
  "data": {
   "lineno": 1178,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1179
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_scalar_exception_propagation.ThrowingInteger": {
  "data": {
   "lineno": 1185,
   "symbols_in_volume": {
    "numpy.ndarray": {
     "line number": [
      1185
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_scalar_exception_propagation.ThrowingInteger.__int__": {
  "data": {
   "lineno": 1186,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1187
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_shuffle": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": {
    "conv": {
     "line number": [
      666,
      669
     ]
    },
    "int": {
     "line number": [
      659,
      659
     ]
    },
    "numpy.array": {
     "line number": [
      648
     ]
    },
    "numpy.asarray": {
     "line number": [
      650,
      651,
      652,
      653,
      655,
      658,
      662
     ]
    },
    "numpy.complex64": {
     "line number": [
      652
     ]
    },
    "numpy.float32": {
     "line number": [
      651
     ]
    },
    "numpy.int32": {
     "line number": [
      664
     ]
    },
    "numpy.int8": {
     "line number": [
      650
     ]
    },
    "numpy.recarray": {
     "line number": [
      660
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      670
     ]
    },
    "numpy.vstack": {
     "line number": [
      656
     ]
    },
    "object": {
     "line number": [
      653,
      663
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      665,
      667
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_shuffle_masked": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      675
     ]
    },
    "numpy.ma.masked_values": {
     "line number": [
      674,
      675
     ]
    },
    "numpy.reshape": {
     "line number": [
      674
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      680,
      683
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      679,
      682
     ]
    },
    "range": {
     "line number": [
      674,
      678
     ]
    },
    "sorted": {
     "line number": [
      681,
      681,
      684,
      684
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_standard_cauchy": {
  "data": {
   "lineno": 1087,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1090
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1093
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1088,
      1089
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_standard_exponential": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1098
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1101
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1096,
      1097
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_standard_gamma": {
  "data": {
   "lineno": 1103,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1106
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1109
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1104,
      1105
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_standard_gamma_0": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1113
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1112
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1113
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1112,
      1113
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_standard_normal": {
  "data": {
   "lineno": 1115,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1118
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1121
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1116,
      1117
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_standard_t": {
  "data": {
   "lineno": 1129,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1132
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1135
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1130,
      1131
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_tomaxint": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      466,
      470
     ]
    },
    "numpy.iinfo": {
     "line number": [
      465
     ]
    },
    "numpy.int": {
     "line number": [
      465
     ]
    },
    "numpy.int64": {
     "line number": [
      468,
      473
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      475,
      479
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      462,
      463
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_triangular": {
  "data": {
   "lineno": 1137,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1141
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1144
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1138,
      1139
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_uniform": {
  "data": {
   "lineno": 1146,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1149
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1152
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1147,
      1148
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_uniform_range_bounds": {
  "data": {
   "lineno": 1154,
   "symbols_in_volume": {
    "OverflowError": {
     "line number": [
      1159,
      1160,
      1161,
      1162,
      1163
     ]
    },
    "numpy.finfo": {
     "line number": [
      1155,
      1156
     ]
    },
    "numpy.inf": {
     "line number": [
      1159,
      1160,
      1162,
      1163
     ]
    },
    "numpy.nextafter": {
     "line number": [
      1168
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1159,
      1160,
      1161,
      1162,
      1163
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1158,
      1168
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_vonmises": {
  "data": {
   "lineno": 1192,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1195
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1198
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1193,
      1194
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_vonmises_nan": {
  "data": {
   "lineno": 1206,
   "symbols_in_volume": {
    "numpy.isnan": {
     "line number": [
      1209
     ]
    },
    "numpy.nan": {
     "line number": [
      1208
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1209
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1207,
      1208
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_vonmises_small": {
  "data": {
   "lineno": 1200,
   "symbols_in_volume": {
    "numpy.isfinite": {
     "line number": [
      1204
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1204
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1202,
      1203
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_wald": {
  "data": {
   "lineno": 1211,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1214
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1217
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1212,
      1213
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_weibull": {
  "data": {
   "lineno": 1219,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1222
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1225
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1220,
      1221
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_weibull_0": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1230
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1229
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      1230
     ]
    },
    "numpy.zeros": {
     "line number": [
      1229
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1228,
      1229,
      1230
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestRandomDist.test_zipf": {
  "data": {
   "lineno": 1232,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1235
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1238
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1233,
      1234
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestSeed": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "object": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_randomstate.TestSeed.test_array": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      76
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      75,
      77,
      79,
      81
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      74,
      76,
      78,
      80
     ]
    },
    "range": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestSeed.test_invalid_array": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      90
     ]
    },
    "ValueError": {
     "line number": [
      91,
      92,
      93,
      94
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      90,
      91,
      92,
      93,
      94
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      90,
      91,
      92,
      93,
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestSeed.test_invalid_array_shape": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      98,
      100,
      101
     ]
    },
    "numpy.array": {
     "line number": [
      98
     ]
    },
    "numpy.int64": {
     "line number": [
      99
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      98,
      100,
      101
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      98,
      100,
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestSeed.test_invalid_initialization": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      111
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      111
     ]
    },
    "randomgen.mt19937.MT19937": {
     "line number": [
      111
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestSeed.test_invalid_scalar": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      85
     ]
    },
    "ValueError": {
     "line number": [
      86
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      85,
      86
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      85,
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestSeed.test_scalar": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      69,
      71
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      68,
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestSeed.test_seed_equivalency": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "randomgen.mt19937.MT19937": {
     "line number": [
      106
     ]
    },
    "randomgen.tests.test_randomstate.assert_mt19937_state_equal": {
     "line number": [
      107
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      105,
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestSetState": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "object": {
     "line number": [
      178
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_randomstate.TestSetState.setup": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      181
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestSetState.test_backwards_compatibility": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      217,
      218
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      217,
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestSetState.test_basic": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      188
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestSetState.test_gaussian_reset": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      195
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestSetState.test_gaussian_reset_in_media_res": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      206
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      206
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestSetState.test_get_state_warning": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      228
     ]
    },
    "dict": {
     "line number": [
      231
     ]
    },
    "isinstance": {
     "line number": [
      231
     ]
    },
    "len": {
     "line number": [
      230
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      230
     ]
    },
    "numpy.testing.suppress_warnings": {
     "line number": [
      227
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      226
     ]
    },
    "randomgen.xoshiro256.Xoshiro256": {
     "line number": [
      226
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestSetState.test_invalid_legacy_state_setting": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      238
     ]
    },
    "ValueError": {
     "line number": [
      237,
      242
     ]
    },
    "numpy.array": {
     "line number": [
      239
     ]
    },
    "numpy.object": {
     "line number": [
      239
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      237,
      238,
      242
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestSetState.test_negative_binomial": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestSetState.test_pickle": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      249
     ]
    },
    "randomgen.tests.test_randomstate.assert_mt19937_state_equal": {
     "line number": [
      252
     ]
    },
    "randomgen.tests.test_randomstate.pickle": {
     "line number": [
      250,
      250
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestSetState.test_repr": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": {
    "repr": {
     "line number": [
      262
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestSetState.test_state_setting": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": {
    "randomgen.tests.test_randomstate.assert_mt19937_state_equal": {
     "line number": [
      259
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestSingleEltArrayInput": {
  "data": {
   "lineno": 1878,
   "symbols_in_volume": {
    "object": {
     "line number": [
      1878
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_randomstate.TestSingleEltArrayInput.setup": {
  "data": {
   "lineno": 1879,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1880,
      1881,
      1882
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestSingleEltArrayInput.test_one_arg_funcs": {
  "data": {
   "lineno": 1885,
   "symbols_in_volume": {
    "func": {
     "line number": [
      1897,
      1900
     ]
    },
    "numpy.array": {
     "line number": [
      1897
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1902
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1886,
      1886,
      1887,
      1887,
      1888,
      1888,
      1889,
      1889,
      1890,
      1890,
      1891,
      1891,
      1893,
      1893
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestSingleEltArrayInput.test_three_arg_funcs": {
  "data": {
   "lineno": 1931,
   "symbols_in_volume": {
    "func": {
     "line number": [
      1935,
      1936,
      1939,
      1942
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1937,
      1940,
      1943
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1932,
      1932,
      1933
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestSingleEltArrayInput.test_two_arg_funcs": {
  "data": {
   "lineno": 1904,
   "symbols_in_volume": {
    "func": {
     "line number": [
      1915,
      1916,
      1922,
      1925,
      1928
     ]
    },
    "numpy.array": {
     "line number": [
      1917
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      1923,
      1926,
      1929
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1905,
      1905,
      1906,
      1906,
      1907,
      1907,
      1908,
      1908,
      1909,
      1909,
      1910,
      1910,
      1911,
      1911,
      1913,
      1913
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestThread": {
  "data": {
   "lineno": 1831,
   "symbols_in_volume": {
    "object": {
     "line number": [
      1831
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_randomstate.TestThread.check_function": {
  "data": {
   "lineno": 1836,
   "symbols_in_volume": {
    "function": {
     "line number": [
      1850
     ]
    },
    "len": {
     "line number": [
      1839,
      1840
     ]
    },
    "numpy.empty": {
     "line number": [
      1839,
      1840
     ]
    },
    "numpy.intp": {
     "line number": [
      1853
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1854
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1856
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1843,
      1850
     ]
    },
    "randomgen.tests.test_randomstate.sys": {
     "line number": [
      1853
     ]
    },
    "t": {
     "line number": [
      1843,
      1845,
      1846
     ]
    },
    "threading.Thread": {
     "line number": [
      1843
     ]
    },
    "zip": {
     "line number": [
      1844,
      1849
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestThread.setup": {
  "data": {
   "lineno": 1833,
   "symbols_in_volume": {
    "range": {
     "line number": [
      1834
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestThread.test_exp": {
  "data": {
   "lineno": 1864
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestThread.test_exp.gen_random": {
  "data": {
   "lineno": 1865,
   "symbols_in_volume": {
    "numpy.ones": {
     "line number": [
      1866
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestThread.test_multinomial": {
  "data": {
   "lineno": 1870
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestThread.test_multinomial.gen_random": {
  "data": {
   "lineno": 1871
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestThread.test_normal": {
  "data": {
   "lineno": 1858
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.TestThread.test_normal.gen_random": {
  "data": {
   "lineno": 1859
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.Thread": {
  "data": {
   "shadows": "threading.Thread"
  },
  "type": "import"
 },
 "randomgen.tests.test_randomstate.Xoshiro256": {
  "data": {
   "shadows": "randomgen.xoshiro256.Xoshiro256"
  },
  "type": "import"
 },
 "randomgen.tests.test_randomstate.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "randomgen.tests.test_randomstate.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "randomgen.tests.test_randomstate.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "randomgen.tests.test_randomstate.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "randomgen.tests.test_randomstate.assert_mt19937_state_equal": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "numpy.testing.assert_array_equal": {
     "line number": [
      60,
      61
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      59,
      62,
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.assert_no_warnings": {
  "data": {
   "shadows": "numpy.testing.assert_no_warnings"
  },
  "type": "import"
 },
 "randomgen.tests.test_randomstate.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "randomgen.tests.test_randomstate.assert_warns": {
  "data": {
   "shadows": "numpy.testing.assert_warns"
  },
  "type": "import"
 },
 "randomgen.tests.test_randomstate.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "randomgen.tests.test_randomstate.int_func": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "randomgen.tests.test_randomstate.INT_FUNCS": {
     "line number": [
      54,
      52
     ]
    },
    "randomgen.tests.test_randomstate.INT_FUNC_HASHES": {
     "line number": [
      55
     ]
    },
    "randomgen.tests.test_randomstate.pytest": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "randomgen.tests.test_randomstate.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "randomgen.tests.test_randomstate.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "randomgen.tests.test_randomstate.random": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "randomgen.tests.test_randomstate.randomgen.mtrand": {
  "data": {
   "shadows": "randomgen.mtrand"
  },
  "type": "import"
 },
 "randomgen.tests.test_randomstate.suppress_warnings": {
  "data": {
   "shadows": "numpy.testing.suppress_warnings"
  },
  "type": "import"
 },
 "randomgen.tests.test_randomstate.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "randomgen.tests.test_randomstate.test_aliases": {
  "data": {
   "lineno": 1966,
   "symbols_in_volume": {
    "float": {
     "line number": [
      1968,
      1969,
      1970
     ]
    },
    "isinstance": {
     "line number": [
      1968,
      1969,
      1970
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.test_integer_dtype": {
  "data": {
   "lineno": 1947,
   "symbols_in_volume": {
    "f": {
     "line number": [
      1950,
      1951
     ]
    },
    "getattr": {
     "line number": [
      1950
     ]
    },
    "numpy.dtype": {
     "line number": [
      1952
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1952
     ]
    },
    "randomgen.tests.test_randomstate.int_func": {
     "line number": [
      1949
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1948,
      1950
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.test_integer_repeat": {
  "data": {
   "lineno": 1955,
   "symbols_in_volume": {
    "f": {
     "line number": [
      1958,
      1959
     ]
    },
    "getattr": {
     "line number": [
      1958
     ]
    },
    "numpy.int8": {
     "line number": [
      1962
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      1963
     ]
    },
    "randomgen.tests.test_randomstate.hashlib": {
     "line number": [
      1962
     ]
    },
    "randomgen.tests.test_randomstate.int_func": {
     "line number": [
      1957
     ]
    },
    "randomgen.tests.test_randomstate.random": {
     "line number": [
      1956,
      1958
     ]
    },
    "randomgen.tests.test_randomstate.sys": {
     "line number": [
      1960
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "randomgen.tests.test_randomstate_regression": {
  "data": {
   "symbols_in_volume": {
    "numpy.iinfo": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "module"
 },
 "randomgen.tests.test_randomstate_regression.HAS_32BIT_CLONG": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "randomgen.tests.test_randomstate_regression.TestRegression": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "object": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_randomstate_regression.TestRegression.test_VonMises_range": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      20,
      20
     ]
    },
    "numpy.linspace": {
     "line number": [
      18
     ]
    },
    "numpy.pi": {
     "line number": [
      20,
      20
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      20
     ]
    },
    "randomgen.mtrand.vonmises": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate_regression.TestRegression.test_beta_small_parameters": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "numpy.any": {
     "line number": [
      95
     ]
    },
    "numpy.isnan": {
     "line number": [
      95
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      95
     ]
    },
    "randomgen.mtrand.beta": {
     "line number": [
      94
     ]
    },
    "randomgen.mtrand.seed": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate_regression.TestRegression.test_call_within_randomstate": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      75
     ]
    },
    "numpy.ones": {
     "line number": [
      80
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      80
     ]
    },
    "randomgen.mtrand.RandomState": {
     "line number": [
      74
     ]
    },
    "randomgen.mtrand.seed": {
     "line number": [
      77
     ]
    },
    "range": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate_regression.TestRegression.test_choice_sum_of_probs_tolerance": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      108
     ]
    },
    "numpy.array": {
     "line number": [
      105
     ]
    },
    "numpy.float16": {
     "line number": [
      104
     ]
    },
    "numpy.float32": {
     "line number": [
      104
     ]
    },
    "numpy.float64": {
     "line number": [
      104
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      107
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      108
     ]
    },
    "randomgen.mtrand.choice": {
     "line number": [
      106,
      108
     ]
    },
    "randomgen.mtrand.seed": {
     "line number": [
      101
     ]
    },
    "sum": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate_regression.TestRegression.test_hypergeometric_range": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      24,
      25
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      24,
      25,
      36
     ]
    },
    "randomgen.mtrand.hypergeometric": {
     "line number": [
      24,
      25,
      36
     ]
    },
    "randomgen.tests.test_randomstate_regression.sys": {
     "line number": [
      31,
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate_regression.TestRegression.test_logseries_convergence": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "float": {
     "line number": [
      46,
      50
     ]
    },
    "numpy.sum": {
     "line number": [
      46,
      50
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      48,
      52
     ]
    },
    "randomgen.mtrand.logseries": {
     "line number": [
      42
     ]
    },
    "randomgen.mtrand.seed": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate_regression.TestRegression.test_multivariate_normal_size_types": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "numpy.int64": {
     "line number": [
      88
     ]
    },
    "numpy.int_": {
     "line number": [
      87
     ]
    },
    "randomgen.mtrand.multivariate_normal": {
     "line number": [
      86,
      87,
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate_regression.TestRegression.test_permutation_longs": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "numpy.compat.long": {
     "line number": [
      58
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      59
     ]
    },
    "randomgen.mtrand.permutation": {
     "line number": [
      56,
      58
     ]
    },
    "randomgen.mtrand.seed": {
     "line number": [
      55,
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate_regression.TestRegression.test_permutation_subclass": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "M": {
     "line number": [
      156
     ]
    },
    "numpy.arange": {
     "line number": [
      144,
      147,
      159
     ]
    },
    "numpy.array": {
     "line number": [
      146,
      158
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      146,
      147,
      158,
      159
     ]
    },
    "randomgen.mtrand.permutation": {
     "line number": [
      145,
      157
     ]
    },
    "randomgen.mtrand.seed": {
     "line number": [
      143,
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate_regression.TestRegression.test_permutation_subclass.M": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      150
     ]
    },
    "object": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_randomstate_regression.TestRegression.test_permutation_subclass.M.__array__": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate_regression.TestRegression.test_permutation_subclass.N": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "numpy.ndarray": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_randomstate_regression.TestRegression.test_randint_117": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      170
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      174
     ]
    },
    "randomgen.mtrand.randint": {
     "line number": [
      173
     ]
    },
    "randomgen.mtrand.seed": {
     "line number": [
      169
     ]
    },
    "randomgen.tests.test_randomstate_regression.HAS_32BIT_CLONG": {
     "line number": [
      166
     ]
    },
    "randomgen.tests.test_randomstate_regression.pytest": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate_regression.TestRegression.test_shuffle_mixed_dimension": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "list": {
     "line number": [
      68
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      70
     ]
    },
    "randomgen.mtrand.seed": {
     "line number": [
      67
     ]
    },
    "randomgen.mtrand.shuffle": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate_regression.TestRegression.test_shuffle_of_array_of_different_length_strings": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      116
     ]
    },
    "randomgen.mtrand.seed": {
     "line number": [
      114
     ]
    },
    "randomgen.mtrand.shuffle": {
     "line number": [
      119
     ]
    },
    "randomgen.tests.test_randomstate_regression.gc": {
     "line number": [
      123
     ]
    },
    "range": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate_regression.TestRegression.test_shuffle_of_array_of_objects": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      130,
      130
     ]
    },
    "numpy.array": {
     "line number": [
      130
     ]
    },
    "randomgen.mtrand.seed": {
     "line number": [
      129
     ]
    },
    "randomgen.mtrand.shuffle": {
     "line number": [
      133
     ]
    },
    "randomgen.tests.test_randomstate_regression.gc": {
     "line number": [
      137
     ]
    },
    "range": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate_regression.TestRegression.test_warns_byteorder": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "FutureWarning": {
     "line number": [
      163
     ]
    },
    "randomgen.mtrand.randint": {
     "line number": [
      164
     ]
    },
    "randomgen.tests.test_randomstate_regression.pytest": {
     "line number": [
      163
     ]
    },
    "randomgen.tests.test_randomstate_regression.sys": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_randomstate_regression.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "randomgen.tests.test_randomstate_regression.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "randomgen.tests.test_randomstate_regression.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "randomgen.tests.test_randomstate_regression.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "randomgen.tests.test_randomstate_regression.long": {
  "data": {
   "shadows": "numpy.compat.long"
  },
  "type": "import"
 },
 "randomgen.tests.test_randomstate_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "randomgen.tests.test_randomstate_regression.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "randomgen.tests.test_randomstate_regression.random": {
  "data": {
   "shadows": "randomgen.mtrand"
  },
  "type": "import"
 },
 "randomgen.tests.test_randomstate_regression.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "randomgen.tests.test_seed_sequence": {
  "data": {
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      12,
      17
     ]
    },
    "ImportError": {
     "line number": [
      12,
      17
     ]
    }
   }
  },
  "type": "module"
 },
 "randomgen.tests.test_seed_sequence.HAS_NP_SEED_SEQUENCE": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "randomgen.tests.test_seed_sequence.NPSeedSequence": {
  "data": {
   "shadows": "numpy.random.bit_generator.SeedSequence"
  },
  "type": "import"
 },
 "randomgen.tests.test_seed_sequence.SeedSequence": {
  "data": {
   "shadows": "randomgen._seed_sequence.SeedSequence"
  },
  "type": "import"
 },
 "randomgen.tests.test_seed_sequence.SeedlessSeedSequence": {
  "data": {
   "shadows": "randomgen._seed_sequence.SeedlessSeedSequence"
  },
  "type": "import"
 },
 "randomgen.tests.test_seed_sequence.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "randomgen.tests.test_seed_sequence.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "randomgen.tests.test_seed_sequence.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "randomgen.tests.test_seed_sequence.test_against_numpy": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "numpy.random.bit_generator.SeedSequence": {
     "line number": [
      180,
      181
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      182
     ]
    },
    "randomgen.tests.test_seed_sequence.HAS_NP_SEED_SEQUENCE": {
     "line number": [
      178
     ]
    },
    "randomgen.tests.test_seed_sequence.pytest": {
     "line number": [
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_seed_sequence.test_against_numpy_spawn": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "numpy.random.bit_generator.SeedSequence": {
     "line number": [
      189,
      190
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      195
     ]
    },
    "randomgen.tests.test_seed_sequence.HAS_NP_SEED_SEQUENCE": {
     "line number": [
      185
     ]
    },
    "randomgen.tests.test_seed_sequence.pytest": {
     "line number": [
      185
     ]
    },
    "zip": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_seed_sequence.test_bad_entropy": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      132
     ]
    },
    "ValueError": {
     "line number": [
      134
     ]
    },
    "numpy.random.bit_generator.SeedSequence": {
     "line number": [
      133,
      133,
      135
     ]
    },
    "randomgen.tests.test_seed_sequence.pytest": {
     "line number": [
      132,
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_seed_sequence.test_bad_spawn_key": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      81
     ]
    },
    "numpy.pi": {
     "line number": [
      82
     ]
    },
    "numpy.random.bit_generator.SeedSequence": {
     "line number": [
      82
     ]
    },
    "randomgen.tests.test_seed_sequence.pytest": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_seed_sequence.test_equiv_entropy": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      149
     ]
    },
    "numpy.random.bit_generator.SeedSequence": {
     "line number": [
      148,
      149,
      150,
      151,
      152
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      155
     ]
    },
    "numpy.uint32": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_seed_sequence.test_invalid_dtype_gen_state": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      87
     ]
    },
    "numpy.random.bit_generator.SeedSequence": {
     "line number": [
      86
     ]
    },
    "numpy.uint8": {
     "line number": [
      88
     ]
    },
    "randomgen.tests.test_seed_sequence.pytest": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_seed_sequence.test_min_pool_size": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      127
     ]
    },
    "numpy.random.bit_generator.SeedSequence": {
     "line number": [
      128
     ]
    },
    "randomgen.tests.test_seed_sequence.pytest": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_seed_sequence.test_mixer_smoke": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      159,
      160
     ]
    },
    "numpy.random.bit_generator.SeedSequence": {
     "line number": [
      159
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      160
     ]
    },
    "numpy.uint32": {
     "line number": [
      159,
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_seed_sequence.test_neg_entropy": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      170,
      172,
      174
     ]
    },
    "numpy.random.bit_generator.SeedSequence": {
     "line number": [
      171,
      173,
      175
     ]
    },
    "randomgen.tests.test_seed_sequence.pytest": {
     "line number": [
      170,
      172,
      174
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_seed_sequence.test_reference_data": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "len": {
     "line number": [
      65,
      67
     ]
    },
    "numpy.array": {
     "line number": [
      63
     ]
    },
    "numpy.random.bit_generator.SeedSequence": {
     "line number": [
      64
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      66,
      68
     ]
    },
    "numpy.uint32": {
     "line number": [
      63
     ]
    },
    "numpy.uint64": {
     "line number": [
      67
     ]
    },
    "zip": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_seed_sequence.test_repr": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      116
     ]
    },
    "numpy.random.bit_generator.SeedSequence": {
     "line number": [
      114
     ]
    },
    "str": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_seed_sequence.test_seedless": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      140
     ]
    },
    "numpy.uint32": {
     "line number": [
      141
     ]
    },
    "randomgen._seed_sequence.SeedlessSeedSequence": {
     "line number": [
      139
     ]
    },
    "randomgen.tests.test_seed_sequence.pytest": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_seed_sequence.test_spawn_equiv": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "len": {
     "line number": [
      75
     ]
    },
    "numpy.random.bit_generator.SeedSequence": {
     "line number": [
      72,
      74,
      74
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      77
     ]
    },
    "zip": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_seed_sequence.test_state": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "numpy.random.bit_generator.SeedSequence": {
     "line number": [
      92,
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_seed_sequence.test_uint_scalar_entropy": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "numpy.random.bit_generator.SeedSequence": {
     "line number": [
      164,
      165
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      166
     ]
    },
    "numpy.uint32": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke": {
  "data": {},
  "type": "module"
 },
 "randomgen.tests.test_smoke.AESCounter": {
  "data": {
   "shadows": "randomgen.AESCounter"
  },
  "type": "import"
 },
 "randomgen.tests.test_smoke.ChaCha": {
  "data": {
   "shadows": "randomgen.ChaCha"
  },
  "type": "import"
 },
 "randomgen.tests.test_smoke.DSFMT": {
  "data": {
   "shadows": "randomgen.DSFMT"
  },
  "type": "import"
 },
 "randomgen.tests.test_smoke.Generator": {
  "data": {
   "shadows": "randomgen.Generator"
  },
  "type": "import"
 },
 "randomgen.tests.test_smoke.HC128": {
  "data": {
   "shadows": "randomgen.HC128"
  },
  "type": "import"
 },
 "randomgen.tests.test_smoke.JSF": {
  "data": {
   "shadows": "randomgen.JSF"
  },
  "type": "import"
 },
 "randomgen.tests.test_smoke.MT19937": {
  "data": {
   "shadows": "randomgen.MT19937"
  },
  "type": "import"
 },
 "randomgen.tests.test_smoke.MT64": {
  "data": {
   "shadows": "randomgen.MT64"
  },
  "type": "import"
 },
 "randomgen.tests.test_smoke.PCG32": {
  "data": {
   "shadows": "randomgen.PCG32"
  },
  "type": "import"
 },
 "randomgen.tests.test_smoke.PCG64": {
  "data": {
   "shadows": "randomgen.PCG64"
  },
  "type": "import"
 },
 "randomgen.tests.test_smoke.Philox": {
  "data": {
   "shadows": "randomgen.Philox"
  },
  "type": "import"
 },
 "randomgen.tests.test_smoke.RNG": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "object": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_smoke.RNG._extra_setup": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      122
     ]
    },
    "classmethod": {
     "line number": [
      117
     ]
    },
    "numpy.arange": {
     "line number": [
      119,
      120,
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG._reset_state": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.setup_class": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      105
     ]
    },
    "randomgen.Generator": {
     "line number": [
      111
     ]
    },
    "randomgen.Xoshiro256": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_advance": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      139
     ]
    },
    "isinstance": {
     "line number": [
      141
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      144
     ]
    },
    "randomgen.Philox": {
     "line number": [
      141
     ]
    },
    "randomgen.ThreeFry": {
     "line number": [
      141
     ]
    },
    "randomgen.tests.test_smoke.comp_state": {
     "line number": [
      144
     ]
    },
    "randomgen.tests.test_smoke.pytest": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_array_scalar_seed_diff": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      582,
      589,
      596
     ]
    },
    "numpy.mod": {
     "line number": [
      596
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      587,
      594,
      603
     ]
    },
    "numpy.uint32": {
     "line number": [
      581
     ]
    },
    "numpy.uint64": {
     "line number": [
      581
     ]
    },
    "randomgen.tests.test_smoke.comp_state": {
     "line number": [
      587,
      594,
      603
     ]
    },
    "randomgen.tests.test_smoke.dtype": {
     "line number": [
      581,
      582,
      589,
      597
     ]
    },
    "randomgen.tests.test_smoke.pytest": {
     "line number": [
      580
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_beta": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": {
    "len": {
     "line number": [
      357,
      359,
      361,
      363
     ]
    },
    "numpy.array": {
     "line number": [
      358,
      360,
      362,
      362,
      364,
      364
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      357,
      359,
      361,
      363,
      365
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_binomial": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": {
    "numpy.testing.assert_": {
     "line number": [
      276,
      277
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_bit_generator_benchmark": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": {
    "randomgen.tests.test_smoke.comp_state": {
     "line number": [
      953,
      956
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_bit_generator_raw": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": {
    "numpy.isscalar": {
     "line number": [
      942
     ]
    },
    "numpy.uint64": {
     "line number": [
      947
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_bit_generator_raw_large": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      937
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_bytes": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": {
    "len": {
     "line number": [
      369
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      369
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_chisquare": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": {
    "len": {
     "line number": [
      373
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      373
     ]
    },
    "randomgen.tests.test_smoke.params_1": {
     "line number": [
      374
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_complex_normal": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": {
    "len": {
     "line number": [
      864
     ]
    },
    "numpy.ones": {
     "line number": [
      873,
      873
     ]
    },
    "numpy.reshape": {
     "line number": [
      878
     ]
    },
    "numpy.sqrt": {
     "line number": [
      882,
      883,
      884,
      886
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      864
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      869,
      874,
      889
     ]
    },
    "range": {
     "line number": [
      868
     ]
    },
    "zip": {
     "line number": [
      887
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_complex_normal_bm": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": {
    "len": {
     "line number": [
      895
     ]
    },
    "numpy.ones": {
     "line number": [
      904,
      904
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      895
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      900,
      905
     ]
    },
    "range": {
     "line number": [
      899
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_complex_normal_zero_variance": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      913,
      922
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      910,
      917,
      921
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_dirichlet": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": {
    "numpy.testing.assert_": {
     "line number": [
      549
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_entropy_init": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": {
    "numpy.testing.assert_": {
     "line number": [
      289
     ]
    },
    "randomgen.Generator": {
     "line number": [
      287,
      288
     ]
    },
    "randomgen.tests.test_smoke.comp_state": {
     "line number": [
      289
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_exponential": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": {
    "len": {
     "line number": [
      378
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      378
     ]
    },
    "randomgen.tests.test_smoke.params_1": {
     "line number": [
      379
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_f": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": {
    "len": {
     "line number": [
      383
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      383
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_gamma": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": {
    "len": {
     "line number": [
      387
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      387
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_gamma_floats": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": {
    "numpy.float32": {
     "line number": [
      644,
      648,
      650
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      651
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      649
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      650
     ]
    },
    "randomgen.Generator": {
     "line number": [
      641,
      645
     ]
    },
    "randomgen.tests.test_smoke.comp_state": {
     "line number": [
      651
     ]
    },
    "randomgen.tests.test_smoke.warmup": {
     "line number": [
      642,
      646
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_geometric": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": {
    "len": {
     "line number": [
      391
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      391
     ]
    },
    "randomgen.tests.test_smoke.params_1": {
     "line number": [
      392
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_gumbel": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": {
    "len": {
     "line number": [
      396
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      396
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_hypergeometric": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      521
     ]
    },
    "numpy.isscalar": {
     "line number": [
      520
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      520,
      522
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_init": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "numpy.testing.assert_": {
     "line number": [
      134
     ]
    },
    "randomgen.Generator": {
     "line number": [
      128
     ]
    },
    "randomgen.tests.test_smoke.comp_state": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_integers": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": {
    "len": {
     "line number": [
      483
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      483
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_integers_broadcast": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": {
    "int": {
     "line number": [
      803
     ]
    },
    "numpy.array": {
     "line number": [
      814,
      815,
      820,
      820
     ]
    },
    "numpy.bool": {
     "line number": [
      798
     ]
    },
    "numpy.iinfo": {
     "line number": [
      802
     ]
    },
    "numpy.object": {
     "line number": [
      815
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      809,
      812,
      817,
      822,
      828
     ]
    },
    "randomgen.tests.test_smoke.dtype": {
     "line number": [
      798,
      802,
      806,
      808,
      811,
      816,
      821,
      825,
      827
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_integers_broadcast_errors": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      851,
      853,
      855,
      857
     ]
    },
    "int": {
     "line number": [
      849
     ]
    },
    "numpy.bool": {
     "line number": [
      844
     ]
    },
    "numpy.iinfo": {
     "line number": [
      848
     ]
    },
    "randomgen.tests.test_smoke.dtype": {
     "line number": [
      844,
      848,
      852,
      854,
      856,
      858
     ]
    },
    "randomgen.tests.test_smoke.pytest": {
     "line number": [
      851,
      853,
      855,
      857
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_integers_numpy": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      831,
      832
     ]
    },
    "randomgen.tests.test_smoke.dtype": {
     "line number": [
      834,
      837,
      840
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_jump": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      151
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      155,
      161
     ]
    },
    "randomgen.tests.test_smoke.comp_state": {
     "line number": [
      155,
      161
     ]
    },
    "randomgen.tests.test_smoke.pytest": {
     "line number": [
      152,
      158,
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_jumped": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      168
     ]
    },
    "isinstance": {
     "line number": [
      170
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      171
     ]
    },
    "randomgen.Generator": {
     "line number": [
      172
     ]
    },
    "randomgen.tests.test_smoke.comp_state": {
     "line number": [
      171
     ]
    },
    "randomgen.tests.test_smoke.pytest": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_jumped_against_jump": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      178,
      179
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      185,
      186,
      187
     ]
    },
    "randomgen.tests.test_smoke.comp_state": {
     "line number": [
      185,
      186,
      187
     ]
    },
    "randomgen.tests.test_smoke.pytest": {
     "line number": [
      183,
      190
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_jumped_against_jump_32bit": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      194,
      195
     ]
    },
    "numpy.float32": {
     "line number": [
      199
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      204,
      205,
      206
     ]
    },
    "randomgen.tests.test_smoke.comp_state": {
     "line number": [
      204,
      205,
      206
     ]
    },
    "randomgen.tests.test_smoke.pytest": {
     "line number": [
      202,
      209
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_laplace": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": {
    "len": {
     "line number": [
      400
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      400
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_logitic": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": {
    "len": {
     "line number": [
      404
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      404
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_logseries": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": {
    "len": {
     "line number": [
      408
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      408
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_multinomial": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": {
    "numpy.testing.assert_": {
     "line number": [
      543,
      545
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_multivariate_normal": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": {
    "numpy.testing.assert_": {
     "line number": [
      534,
      536,
      538,
      539
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_negative_binomial": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": {
    "len": {
     "line number": [
      412
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      412
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_noncentral_chisquare": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": {
    "len": {
     "line number": [
      450
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      450
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_noncentral_f": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": {
    "len": {
     "line number": [
      454,
      456,
      458,
      460
     ]
    },
    "numpy.array": {
     "line number": [
      455,
      457,
      459
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      454,
      456,
      458,
      460
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_normal": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": {
    "len": {
     "line number": [
      464
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      464
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_normal_floats": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": {
    "numpy.float32": {
     "line number": [
      657,
      661,
      663
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      664
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      662
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      663
     ]
    },
    "randomgen.Generator": {
     "line number": [
      654,
      658
     ]
    },
    "randomgen.tests.test_smoke.comp_state": {
     "line number": [
      664
     ]
    },
    "randomgen.tests.test_smoke.warmup": {
     "line number": [
      655,
      659
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_normal_zig_floats": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": {
    "numpy.float32": {
     "line number": [
      670,
      674,
      676
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      677
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      675
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      676
     ]
    },
    "randomgen.Generator": {
     "line number": [
      667,
      671
     ]
    },
    "randomgen.tests.test_smoke.comp_state": {
     "line number": [
      677
     ]
    },
    "randomgen.tests.test_smoke.warmup": {
     "line number": [
      668,
      672
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_output_fill": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": {
    "numpy.empty": {
     "line number": [
      683,
      690,
      694
     ]
    },
    "numpy.float32": {
     "line number": [
      694,
      696,
      698
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      688,
      699
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_output_fill_error": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      778,
      783,
      787,
      792
     ]
    },
    "ValueError": {
     "line number": [
      780,
      789,
      794
     ]
    },
    "numpy.empty": {
     "line number": [
      777,
      782
     ]
    },
    "numpy.float32": {
     "line number": [
      779,
      782,
      786,
      790,
      793
     ]
    },
    "numpy.float64": {
     "line number": [
      784,
      788,
      791
     ]
    },
    "numpy.zeros": {
     "line number": [
      786,
      791
     ]
    },
    "randomgen.tests.test_smoke.pytest": {
     "line number": [
      778,
      780,
      783,
      787,
      789,
      792,
      794
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_output_filling_exponential": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": {
    "numpy.empty": {
     "line number": [
      723,
      730
     ]
    },
    "numpy.float32": {
     "line number": [
      730,
      732,
      734
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      728,
      735
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_output_filling_gamma": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": {
    "numpy.float32": {
     "line number": [
      748,
      750,
      752
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      746,
      753
     ]
    },
    "numpy.zeros": {
     "line number": [
      741,
      748
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_output_filling_gamma_broadcast": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      759
     ]
    },
    "numpy.float32": {
     "line number": [
      767,
      769,
      771
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      765,
      772
     ]
    },
    "numpy.zeros": {
     "line number": [
      760,
      767
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_output_filling_uniform": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": {
    "numpy.empty": {
     "line number": [
      705,
      712
     ]
    },
    "numpy.float32": {
     "line number": [
      712,
      714,
      716
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      710,
      717
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_pareto": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": {
    "len": {
     "line number": [
      468
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      468
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_permutation": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      335
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      337
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_pickle": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": {
    "randomgen.tests.test_smoke.comp_state": {
     "line number": [
      555,
      561
     ]
    },
    "randomgen.tests.test_smoke.pickle": {
     "line number": [
      552,
      553,
      558,
      559
     ]
    },
    "type": {
     "line number": [
      554,
      554,
      560,
      560
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_poisson": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": {
    "len": {
     "line number": [
      472,
      474
     ]
    },
    "numpy.array": {
     "line number": [
      473
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      472,
      474
     ]
    },
    "randomgen.tests.test_smoke.params_1": {
     "line number": [
      475
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_power": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": {
    "len": {
     "line number": [
      479
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      479
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_rand": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": {
    "numpy.float32": {
     "line number": [
      422
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      419,
      420,
      423
     ]
    },
    "randomgen.tests.test_smoke.pytest": {
     "line number": [
      416,
      421
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_randn": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": {
    "numpy.float32": {
     "line number": [
      445
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      446
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      431,
      432,
      438
     ]
    },
    "randomgen.tests.test_smoke.pytest": {
     "line number": [
      427,
      435,
      441,
      444
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_random": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "len": {
     "line number": [
      234
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      234
     ]
    },
    "randomgen.tests.test_smoke.params_0": {
     "line number": [
      235
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_random_integers": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      487
     ]
    },
    "len": {
     "line number": [
      489
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      489
     ]
    },
    "randomgen._testing.suppress_warnings": {
     "line number": [
      486
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_random_uintegers": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      929
     ]
    },
    "int": {
     "line number": [
      927,
      928
     ]
    },
    "isinstance": {
     "line number": [
      927,
      928
     ]
    },
    "len": {
     "line number": [
      925,
      926
     ]
    },
    "randomgen.tests.test_smoke.pytest": {
     "line number": [
      929
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_rayleigh": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": {
    "len": {
     "line number": [
      493
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      493
     ]
    },
    "randomgen.tests.test_smoke.params_1": {
     "line number": [
      494
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_reset_state": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": {
    "numpy.testing.assert_": {
     "line number": [
      284
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_reset_state_float": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": {
    "numpy.testing.assert_": {
     "line number": [
      327
     ]
    },
    "randomgen.Generator": {
     "line number": [
      320,
      324
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_reset_state_gauss": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": {
    "numpy.testing.assert_array_equal": {
     "line number": [
      307
     ]
    },
    "randomgen.Generator": {
     "line number": [
      300,
      304
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_reset_state_uint32": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": {
    "numpy.testing.assert_array_equal": {
     "line number": [
      317
     ]
    },
    "numpy.uint32": {
     "line number": [
      311,
      313,
      316
     ]
    },
    "randomgen.Generator": {
     "line number": [
      310,
      314
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_seed": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": {
    "numpy.testing.assert_": {
     "line number": [
      297
     ]
    },
    "randomgen.Generator": {
     "line number": [
      293,
      294
     ]
    },
    "randomgen.tests.test_smoke.comp_state": {
     "line number": [
      297
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_seed_array": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      571
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      576
     ]
    },
    "numpy.uint32": {
     "line number": [
      570
     ]
    },
    "numpy.uint64": {
     "line number": [
      570
     ]
    },
    "randomgen.tests.test_smoke.comp_state": {
     "line number": [
      576
     ]
    },
    "randomgen.tests.test_smoke.dtype": {
     "line number": [
      570,
      571
     ]
    },
    "randomgen.tests.test_smoke.pytest": {
     "line number": [
      567
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_seed_array_error": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      616,
      620,
      624
     ]
    },
    "ValueError": {
     "line number": [
      612,
      616,
      620,
      624
     ]
    },
    "numpy.array": {
     "line number": [
      615,
      619,
      623
     ]
    },
    "numpy.int32": {
     "line number": [
      615,
      619
     ]
    },
    "randomgen.tests.test_smoke.pytest": {
     "line number": [
      612,
      616,
      620,
      624
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_shuffle": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      330
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      332
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_standard_cauchy": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": {
    "len": {
     "line number": [
      268
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      268
     ]
    },
    "randomgen.tests.test_smoke.params_0": {
     "line number": [
      269
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_standard_exponential": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "len": {
     "line number": [
      250
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      250
     ]
    },
    "randomgen.tests.test_smoke.params_0": {
     "line number": [
      251
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_standard_exponential_float": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": {
    "functools.partial": {
     "line number": [
      257
     ]
    },
    "len": {
     "line number": [
      255
     ]
    },
    "numpy.float32": {
     "line number": [
      256
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      255
     ]
    },
    "randomgen.tests.test_smoke.params_0": {
     "line number": [
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_standard_exponential_float_log": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": {
    "functools.partial": {
     "line number": [
      264
     ]
    },
    "len": {
     "line number": [
      262
     ]
    },
    "numpy.float32": {
     "line number": [
      263
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      262
     ]
    },
    "randomgen.tests.test_smoke.params_0": {
     "line number": [
      264
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_standard_gamma": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": {
    "len": {
     "line number": [
      245,
      246
     ]
    },
    "numpy.array": {
     "line number": [
      246
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      245,
      246
     ]
    },
    "randomgen.tests.test_smoke.params_1": {
     "line number": [
      247
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_standard_normal": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": {
    "len": {
     "line number": [
      241
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      241
     ]
    },
    "randomgen.tests.test_smoke.params_0": {
     "line number": [
      242
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_standard_normal_zig": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": {
    "len": {
     "line number": [
      238
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      238
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_standard_t": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": {
    "len": {
     "line number": [
      272
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      272
     ]
    },
    "randomgen.tests.test_smoke.params_1": {
     "line number": [
      273
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_tomaxint": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      348
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      351,
      353
     ]
    },
    "randomgen.tests.test_smoke.os": {
     "line number": [
      343
     ]
    },
    "randomgen.tests.test_smoke.pytest": {
     "line number": [
      340
     ]
    },
    "randomgen.tests.test_smoke.sys": {
     "line number": [
      347,
      349,
      351
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_triangular": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      527
     ]
    },
    "numpy.isscalar": {
     "line number": [
      526
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      526,
      528
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_uniform": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": {
    "len": {
     "line number": [
      214
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      214,
      215,
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_uniform_array": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "len": {
     "line number": [
      220,
      225,
      229
     ]
    },
    "numpy.array": {
     "line number": [
      219,
      223,
      224,
      228
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      220,
      221,
      222,
      225,
      226,
      227,
      229,
      230,
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_uniform_float": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": {
    "numpy.float32": {
     "line number": [
      631,
      635,
      637
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      638
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      636
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      637
     ]
    },
    "randomgen.Generator": {
     "line number": [
      628,
      632
     ]
    },
    "randomgen.tests.test_smoke.comp_state": {
     "line number": [
      638
     ]
    },
    "randomgen.tests.test_smoke.warmup": {
     "line number": [
      629,
      633
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_vonmises": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": {
    "len": {
     "line number": [
      498
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      498
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_wald": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": {
    "len": {
     "line number": [
      502
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      502
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_weibull": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": {
    "len": {
     "line number": [
      506
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      506
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.RNG.test_zipf": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": {
    "len": {
     "line number": [
      510,
      512
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      510,
      512,
      514,
      516
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.SFMT": {
  "data": {
   "shadows": "randomgen.SFMT"
  },
  "type": "import"
 },
 "randomgen.tests.test_smoke.SPECK128": {
  "data": {
   "shadows": "randomgen.SPECK128"
  },
  "type": "import"
 },
 "randomgen.tests.test_smoke.TestAESCounter": {
  "data": {
   "lineno": 1312,
   "symbols_in_volume": {
    "randomgen.tests.test_smoke.RNG": {
     "line number": [
      1312
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_smoke.TestAESCounter.setup_class": {
  "data": {
   "lineno": 1313,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1323
     ]
    },
    "classmethod": {
     "line number": [
      1313
     ]
    },
    "randomgen.AESCounter": {
     "line number": [
      1316
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1319
     ]
    },
    "randomgen.tests.test_smoke.TestAESCounter": {
     "line number": [
      1315
     ]
    },
    "super": {
     "line number": [
      1315
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.TestChaCha": {
  "data": {
   "lineno": 1327,
   "symbols_in_volume": {
    "randomgen.tests.test_smoke.RNG": {
     "line number": [
      1327
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_smoke.TestChaCha.setup_class": {
  "data": {
   "lineno": 1328,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1338
     ]
    },
    "classmethod": {
     "line number": [
      1328
     ]
    },
    "randomgen.ChaCha": {
     "line number": [
      1331
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1334
     ]
    },
    "randomgen.tests.test_smoke.TestChaCha": {
     "line number": [
      1330
     ]
    },
    "super": {
     "line number": [
      1330
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.TestDSFMT": {
  "data": {
   "lineno": 1253,
   "symbols_in_volume": {
    "randomgen.tests.test_smoke.RNG": {
     "line number": [
      1253
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_smoke.TestDSFMT.setup_class": {
  "data": {
   "lineno": 1254,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1254
     ]
    },
    "randomgen.DSFMT": {
     "line number": [
      1257
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1260
     ]
    },
    "randomgen.tests.test_smoke.TestDSFMT": {
     "line number": [
      1256
     ]
    },
    "super": {
     "line number": [
      1256
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.TestEntropy": {
  "data": {
   "lineno": 1279,
   "symbols_in_volume": {
    "object": {
     "line number": [
      1279
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_smoke.TestEntropy.test_entropy": {
  "data": {
   "lineno": 1280,
   "symbols_in_volume": {
    "numpy.testing.assert_": {
     "line number": [
      1283,
      1286,
      1289
     ]
    },
    "randomgen.entropy.random_entropy": {
     "line number": [
      1281,
      1282,
      1284,
      1285,
      1287,
      1288
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.TestEntropy.test_fallback": {
  "data": {
   "lineno": 1291,
   "symbols_in_volume": {
    "numpy.testing.assert_": {
     "line number": [
      1295
     ]
    },
    "randomgen.entropy.random_entropy": {
     "line number": [
      1292,
      1294
     ]
    },
    "randomgen.tests.test_smoke.time": {
     "line number": [
      1293
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.TestHC128": {
  "data": {
   "lineno": 1341,
   "symbols_in_volume": {
    "randomgen.tests.test_smoke.RNG": {
     "line number": [
      1341
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_smoke.TestHC128.setup_class": {
  "data": {
   "lineno": 1342,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1351
     ]
    },
    "classmethod": {
     "line number": [
      1342
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1347
     ]
    },
    "randomgen.HC128": {
     "line number": [
      1345
     ]
    },
    "randomgen.tests.test_smoke.TestHC128": {
     "line number": [
      1344
     ]
    },
    "super": {
     "line number": [
      1344
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.TestJSF32": {
  "data": {
   "lineno": 1009,
   "symbols_in_volume": {
    "randomgen.tests.test_smoke.RNG": {
     "line number": [
      1009
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_smoke.TestJSF32.setup_class": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1010
     ]
    },
    "functools.partial": {
     "line number": [
      1013
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1016
     ]
    },
    "randomgen.JSF": {
     "line number": [
      1013
     ]
    },
    "randomgen.tests.test_smoke.TestJSF32": {
     "line number": [
      1012
     ]
    },
    "super": {
     "line number": [
      1012
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.TestJSF64": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": {
    "randomgen.tests.test_smoke.RNG": {
     "line number": [
      996
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_smoke.TestJSF64.setup_class": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      997
     ]
    },
    "functools.partial": {
     "line number": [
      1000
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1003
     ]
    },
    "randomgen.JSF": {
     "line number": [
      1000
     ]
    },
    "randomgen.tests.test_smoke.TestJSF64": {
     "line number": [
      999
     ]
    },
    "super": {
     "line number": [
      999
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.TestMT19937": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": {
    "randomgen.tests.test_smoke.RNG": {
     "line number": [
      959
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_smoke.TestMT19937.setup_class": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      970
     ]
    },
    "classmethod": {
     "line number": [
      960
     ]
    },
    "randomgen.Generator": {
     "line number": [
      966
     ]
    },
    "randomgen.MT19937": {
     "line number": [
      963
     ]
    },
    "randomgen.tests.test_smoke.TestMT19937": {
     "line number": [
      962
     ]
    },
    "super": {
     "line number": [
      962
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.TestMT19937.test_numpy_state": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": {
    "numpy.random.RandomState": {
     "line number": [
      973
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      978,
      979
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.TestMT64": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": {
    "randomgen.tests.test_smoke.RNG": {
     "line number": [
      982
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_smoke.TestMT64.setup_class": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      993
     ]
    },
    "classmethod": {
     "line number": [
      983
     ]
    },
    "randomgen.Generator": {
     "line number": [
      989
     ]
    },
    "randomgen.MT64": {
     "line number": [
      986
     ]
    },
    "randomgen.tests.test_smoke.TestMT64": {
     "line number": [
      985
     ]
    },
    "super": {
     "line number": [
      985
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.TestPCG32": {
  "data": {
   "lineno": 1298,
   "symbols_in_volume": {
    "randomgen.tests.test_smoke.TestPCG64": {
     "line number": [
      1298
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_smoke.TestPCG32.setup_class": {
  "data": {
   "lineno": 1299,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1299
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1306
     ]
    },
    "randomgen.PCG32": {
     "line number": [
      1302
     ]
    },
    "randomgen.tests.test_smoke.TestPCG32": {
     "line number": [
      1301
     ]
    },
    "super": {
     "line number": [
      1301
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.TestPCG64": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": {
    "randomgen.tests.test_smoke.RNG": {
     "line number": [
      1022
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_smoke.TestPCG64.setup_class": {
  "data": {
   "lineno": 1023,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1023
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1030
     ]
    },
    "randomgen.PCG64": {
     "line number": [
      1026
     ]
    },
    "randomgen.tests.test_smoke.TestPCG64": {
     "line number": [
      1025
     ]
    },
    "super": {
     "line number": [
      1025
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.TestPCG64.test_array_scalar_seed_diff": {
  "data": {
   "lineno": 1059
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.TestPCG64.test_seed_array_error": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1046
     ]
    },
    "ValueError": {
     "line number": [
      1043,
      1046
     ]
    },
    "numpy.array": {
     "line number": [
      1047,
      1051,
      1055
     ]
    },
    "numpy.int32": {
     "line number": [
      1047,
      1051
     ]
    },
    "randomgen.tests.test_smoke.pytest": {
     "line number": [
      1043,
      1048,
      1052,
      1056
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.TestPhilox2x32": {
  "data": {
   "lineno": 1106,
   "symbols_in_volume": {
    "randomgen.tests.test_smoke.TestPhilox4x64": {
     "line number": [
      1106
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_smoke.TestPhilox2x32.setup_class": {
  "data": {
   "lineno": 1107,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1107
     ]
    },
    "functools.partial": {
     "line number": [
      1112
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1115
     ]
    },
    "randomgen.Philox": {
     "line number": [
      1112
     ]
    },
    "randomgen.tests.test_smoke.TestPhilox2x32": {
     "line number": [
      1109
     ]
    },
    "super": {
     "line number": [
      1109
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.TestPhilox2x64": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": {
    "randomgen.tests.test_smoke.TestPhilox4x64": {
     "line number": [
      1090
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_smoke.TestPhilox2x64.setup_class": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1091
     ]
    },
    "functools.partial": {
     "line number": [
      1096
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1099
     ]
    },
    "randomgen.Philox": {
     "line number": [
      1096
     ]
    },
    "randomgen.tests.test_smoke.TestPhilox2x64": {
     "line number": [
      1093
     ]
    },
    "super": {
     "line number": [
      1093
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.TestPhilox4x32": {
  "data": {
   "lineno": 1121,
   "symbols_in_volume": {
    "randomgen.tests.test_smoke.TestPhilox4x64": {
     "line number": [
      1121
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_smoke.TestPhilox4x32.setup_class": {
  "data": {
   "lineno": 1122,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1122
     ]
    },
    "functools.partial": {
     "line number": [
      1127
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1130
     ]
    },
    "randomgen.Philox": {
     "line number": [
      1127
     ]
    },
    "randomgen.tests.test_smoke.TestPhilox4x32": {
     "line number": [
      1124
     ]
    },
    "super": {
     "line number": [
      1124
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.TestPhilox4x64": {
  "data": {
   "lineno": 1063,
   "symbols_in_volume": {
    "randomgen.tests.test_smoke.RNG": {
     "line number": [
      1063
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_smoke.TestPhilox4x64.setup_class": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1064
     ]
    },
    "functools.partial": {
     "line number": [
      1070
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1073
     ]
    },
    "randomgen.Philox": {
     "line number": [
      1069,
      1070
     ]
    },
    "randomgen.tests.test_smoke.TestPhilox4x64": {
     "line number": [
      1066
     ]
    },
    "super": {
     "line number": [
      1066
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.TestPhilox4x64.test_bad_width_number": {
  "data": {
   "lineno": 1083,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1084,
      1086
     ]
    },
    "randomgen.tests.test_smoke.pytest": {
     "line number": [
      1084,
      1086
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.TestPhilox4x64.test_repr": {
  "data": {
   "lineno": 1079,
   "symbols_in_volume": {
    "repr": {
     "line number": [
      1080
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.TestSFMT": {
  "data": {
   "lineno": 1266,
   "symbols_in_volume": {
    "randomgen.tests.test_smoke.RNG": {
     "line number": [
      1266
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_smoke.TestSFMT.setup_class": {
  "data": {
   "lineno": 1267,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1267
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1273
     ]
    },
    "randomgen.SFMT": {
     "line number": [
      1270
     ]
    },
    "randomgen.tests.test_smoke.TestSFMT": {
     "line number": [
      1269
     ]
    },
    "super": {
     "line number": [
      1269
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.TestSPECK128": {
  "data": {
   "lineno": 1354,
   "symbols_in_volume": {
    "randomgen.tests.test_smoke.RNG": {
     "line number": [
      1354
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_smoke.TestSPECK128.setup_class": {
  "data": {
   "lineno": 1355,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1365
     ]
    },
    "classmethod": {
     "line number": [
      1355
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1360
     ]
    },
    "randomgen.SPECK128": {
     "line number": [
      1358
     ]
    },
    "randomgen.tests.test_smoke.TestSPECK128": {
     "line number": [
      1357
     ]
    },
    "super": {
     "line number": [
      1357
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.TestThreeFry2x32": {
  "data": {
   "lineno": 1169,
   "symbols_in_volume": {
    "randomgen.tests.test_smoke.TestPhilox4x64": {
     "line number": [
      1169
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_smoke.TestThreeFry2x32.setup_class": {
  "data": {
   "lineno": 1170,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1170
     ]
    },
    "functools.partial": {
     "line number": [
      1175
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1179
     ]
    },
    "randomgen.ThreeFry": {
     "line number": [
      1175
     ]
    },
    "randomgen.tests.test_smoke.TestThreeFry2x32": {
     "line number": [
      1172
     ]
    },
    "super": {
     "line number": [
      1172
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.TestThreeFry2x64": {
  "data": {
   "lineno": 1153,
   "symbols_in_volume": {
    "randomgen.tests.test_smoke.TestPhilox4x64": {
     "line number": [
      1153
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_smoke.TestThreeFry2x64.setup_class": {
  "data": {
   "lineno": 1154,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1154
     ]
    },
    "functools.partial": {
     "line number": [
      1159
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1163
     ]
    },
    "randomgen.ThreeFry": {
     "line number": [
      1159
     ]
    },
    "randomgen.tests.test_smoke.TestThreeFry2x64": {
     "line number": [
      1156
     ]
    },
    "super": {
     "line number": [
      1156
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.TestThreeFry4x32": {
  "data": {
   "lineno": 1185,
   "symbols_in_volume": {
    "randomgen.tests.test_smoke.TestPhilox4x64": {
     "line number": [
      1185
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_smoke.TestThreeFry4x32.setup_class": {
  "data": {
   "lineno": 1186,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1186
     ]
    },
    "functools.partial": {
     "line number": [
      1191
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1195
     ]
    },
    "randomgen.ThreeFry": {
     "line number": [
      1191
     ]
    },
    "randomgen.tests.test_smoke.TestThreeFry4x32": {
     "line number": [
      1188
     ]
    },
    "super": {
     "line number": [
      1188
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.TestThreeFry4x64": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": {
    "randomgen.tests.test_smoke.TestPhilox4x64": {
     "line number": [
      1136
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_smoke.TestThreeFry4x64.setup_class": {
  "data": {
   "lineno": 1137,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1137
     ]
    },
    "functools.partial": {
     "line number": [
      1143
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1147
     ]
    },
    "randomgen.ThreeFry": {
     "line number": [
      1142,
      1143
     ]
    },
    "randomgen.tests.test_smoke.TestThreeFry4x64": {
     "line number": [
      1139
     ]
    },
    "super": {
     "line number": [
      1139
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.TestXoroshiro128": {
  "data": {
   "lineno": 1201,
   "symbols_in_volume": {
    "randomgen.tests.test_smoke.RNG": {
     "line number": [
      1201
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_smoke.TestXoroshiro128.setup_class": {
  "data": {
   "lineno": 1202,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1202
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1208
     ]
    },
    "randomgen.Xoroshiro128": {
     "line number": [
      1205
     ]
    },
    "randomgen.tests.test_smoke.TestXoroshiro128": {
     "line number": [
      1204
     ]
    },
    "super": {
     "line number": [
      1204
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.TestXorshift1024": {
  "data": {
   "lineno": 1240,
   "symbols_in_volume": {
    "randomgen.tests.test_smoke.RNG": {
     "line number": [
      1240
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_smoke.TestXorshift1024.setup_class": {
  "data": {
   "lineno": 1241,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1241
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1247
     ]
    },
    "randomgen.Xorshift1024": {
     "line number": [
      1244
     ]
    },
    "randomgen.tests.test_smoke.TestXorshift1024": {
     "line number": [
      1243
     ]
    },
    "super": {
     "line number": [
      1243
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.TestXoshiro256": {
  "data": {
   "lineno": 1214,
   "symbols_in_volume": {
    "randomgen.tests.test_smoke.RNG": {
     "line number": [
      1214
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_smoke.TestXoshiro256.setup_class": {
  "data": {
   "lineno": 1215,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1215
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1221
     ]
    },
    "randomgen.Xoshiro256": {
     "line number": [
      1218
     ]
    },
    "randomgen.tests.test_smoke.TestXoshiro256": {
     "line number": [
      1217
     ]
    },
    "super": {
     "line number": [
      1217
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.TestXoshiro512": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": {
    "randomgen.tests.test_smoke.RNG": {
     "line number": [
      1227
     ]
    }
   }
  },
  "type": "class"
 },
 "randomgen.tests.test_smoke.TestXoshiro512.setup_class": {
  "data": {
   "lineno": 1228,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1228
     ]
    },
    "randomgen.Generator": {
     "line number": [
      1234
     ]
    },
    "randomgen.Xoshiro512": {
     "line number": [
      1231
     ]
    },
    "randomgen.tests.test_smoke.TestXoshiro512": {
     "line number": [
      1230
     ]
    },
    "super": {
     "line number": [
      1230
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.ThreeFry": {
  "data": {
   "shadows": "randomgen.ThreeFry"
  },
  "type": "import"
 },
 "randomgen.tests.test_smoke.Xoroshiro128": {
  "data": {
   "shadows": "randomgen.Xoroshiro128"
  },
  "type": "import"
 },
 "randomgen.tests.test_smoke.Xorshift1024": {
  "data": {
   "shadows": "randomgen.Xorshift1024"
  },
  "type": "import"
 },
 "randomgen.tests.test_smoke.Xoshiro256": {
  "data": {
   "shadows": "randomgen.Xoshiro256"
  },
  "type": "import"
 },
 "randomgen.tests.test_smoke.Xoshiro512": {
  "data": {
   "shadows": "randomgen.Xoshiro512"
  },
  "type": "import"
 },
 "randomgen.tests.test_smoke.assert_": {
  "data": {
   "shadows": "numpy.testing.assert_"
  },
  "type": "import"
 },
 "randomgen.tests.test_smoke.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "randomgen.tests.test_smoke.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "randomgen.tests.test_smoke.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "randomgen.tests.test_smoke.comp_state": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      74
     ]
    },
    "isinstance": {
     "line number": [
      74,
      80,
      80
     ]
    },
    "list": {
     "line number": [
      80,
      81
     ]
    },
    "numpy.ndarray": {
     "line number": [
      80,
      81
     ]
    },
    "tuple": {
     "line number": [
      80,
      81
     ]
    },
    "type": {
     "line number": [
      77,
      77,
      78,
      78
     ]
    },
    "zip": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.dtype": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "numpy.bool": {
     "line number": [
      20
     ]
    },
    "numpy.int16": {
     "line number": [
      20
     ]
    },
    "numpy.int32": {
     "line number": [
      20
     ]
    },
    "numpy.int64": {
     "line number": [
      20
     ]
    },
    "numpy.int8": {
     "line number": [
      20
     ]
    },
    "numpy.uint16": {
     "line number": [
      21
     ]
    },
    "numpy.uint32": {
     "line number": [
      21
     ]
    },
    "numpy.uint64": {
     "line number": [
      21
     ]
    },
    "numpy.uint8": {
     "line number": [
      21
     ]
    },
    "randomgen.tests.test_smoke.pytest": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.entropy": {
  "data": {
   "shadows": "randomgen.entropy"
  },
  "type": "import"
 },
 "randomgen.tests.test_smoke.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "randomgen.tests.test_smoke.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "randomgen.tests.test_smoke.params_0": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "f": {
     "line number": [
      27,
      29,
      31,
      33,
      35
     ]
    },
    "numpy.isscalar": {
     "line number": [
      28
     ]
    },
    "numpy.testing.assert_": {
     "line number": [
      28,
      30,
      32,
      34,
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.params_1": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "f": {
     "line number": [
      55,
      57,
      59,
      61,
      63,
      65,
      67,
      69
     ]
    },
    "numpy.arange": {
     "line number": [
      41,
      42,
      43,
      45
     ]
    },
    "numpy.array": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.tests.test_smoke.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "randomgen.tests.test_smoke.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "randomgen.tests.test_smoke.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "randomgen.tests.test_smoke.suppress_warnings": {
  "data": {
   "shadows": "randomgen._testing.suppress_warnings"
  },
  "type": "import"
 },
 "randomgen.tests.test_smoke.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "randomgen.tests.test_smoke.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "randomgen.tests.test_smoke.warmup": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "numpy.float32": {
     "line number": [
      94,
      95,
      99,
      101
     ]
    },
    "numpy.float64": {
     "line number": [
      100
     ]
    },
    "numpy.random.randint": {
     "line number": [
      91
     ]
    },
    "numpy.uint64": {
     "line number": [
      96,
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.xoshiro256starstar": {
  "data": {},
  "type": "module"
 },
 "randomgen.xoshiro256starstar.Xoshiro256": {
  "data": {
   "shadows": "randomgen.xoshiro256.Xoshiro256"
  },
  "type": "import"
 },
 "randomgen.xoshiro256starstar.Xoshiro256StarStar": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      11
     ]
    },
    "randomgen.xoshiro256.Xoshiro256": {
     "line number": [
      12
     ]
    },
    "randomgen.xoshiro256starstar.warnings": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.xoshiro256starstar.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "randomgen.xoshiro512starstar": {
  "data": {},
  "type": "module"
 },
 "randomgen.xoshiro512starstar.Xoshiro512": {
  "data": {
   "shadows": "randomgen.xoshiro512.Xoshiro512"
  },
  "type": "import"
 },
 "randomgen.xoshiro512starstar.Xoshiro512StarStar": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      11
     ]
    },
    "randomgen.xoshiro512.Xoshiro512": {
     "line number": [
      12
     ]
    },
    "randomgen.xoshiro512starstar.warnings": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "function"
 },
 "randomgen.xoshiro512starstar.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 }
}