{
 "ConnPlotter": {
  "data": {
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "module"
 },
 "ConnPlotter.colormaps": {
  "data": {
   "symbols_in_volume": [
    "ConnPlotter.colormaps.ZeroCenterNorm",
    "ConnPlotter.colormaps.bad_color",
    "ConnPlotter.colormaps.bluered",
    "ConnPlotter.colormaps.n1",
    "ConnPlotter.colormaps.n2",
    "ConnPlotter.colormaps.redblue",
    "__name__",
    "matplotlib.colors.LinearSegmentedColormap",
    "numpy.array",
    "print"
   ]
  },
  "type": "module"
 },
 "ConnPlotter.colormaps.ZeroCenterNorm": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "matplotlib.colors.Normalize"
   ]
  },
  "type": "class"
 },
 "ConnPlotter.colormaps.ZeroCenterNorm.__call__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "matplotlib.cbook.iterable",
    "max",
    "min",
    "numpy.float",
    "numpy.ma.array",
    "numpy.ma.asarray",
    "numpy.ones",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "ConnPlotter.colormaps.ZeroCenterNorm.inverse": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "ValueError",
    "matplotlib.cbook.iterable",
    "numpy.asarray",
    "numpy.shape",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "ConnPlotter.colormaps.__all__": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "ConnPlotter.colormaps.bad_color": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "ConnPlotter.colormaps.bluered": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "ConnPlotter.colormaps.cbook": {
  "data": {
   "shadows": "matplotlib.cbook"
  },
  "type": "import"
 },
 "ConnPlotter.colormaps.make_colormap": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "ConnPlotter.colormaps.bad_color",
    "ValueError",
    "matplotlib.colors.LinearSegmentedColormap",
    "matplotlib.colors.colorConverter.to_rgb"
   ]
  },
  "type": "function"
 },
 "ConnPlotter.colormaps.mc": {
  "data": {
   "shadows": "matplotlib.colors"
  },
  "type": "import"
 },
 "ConnPlotter.colormaps.n1": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "ConnPlotter.colormaps.n2": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "ConnPlotter.colormaps.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ConnPlotter.colormaps.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "ConnPlotter.colormaps.redblue": {
  "data": {
   "lineno": 157
  },
  "type": "constant"
 },
 "ConnPlotter.examples": {
  "data": {},
  "type": "module"
 },
 "ConnPlotter.examples.__all__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "ConnPlotter.examples.complex": {
  "data": {},
  "type": "module"
 },
 "ConnPlotter.examples.complex.complex": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ConnPlotter.examples.complex.nest",
    "modCopy"
   ]
  },
  "type": "function"
 },
 "ConnPlotter.examples.complex.complex.modCopy": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ConnPlotter.examples.complex.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "ConnPlotter.examples.connplotter_tutorial": {
  "data": {
   "symbols_in_volume": [
    "ConnPlotter.ConnectionPattern",
    "ConnPlotter.SynType",
    "ConnPlotter.colormaps.bad_color",
    "ConnPlotter.examples.complex",
    "ConnPlotter.examples.connplotter_tutorial.B_top",
    "ConnPlotter.examples.connplotter_tutorial.E_id",
    "ConnPlotter.examples.connplotter_tutorial.Etgts",
    "ConnPlotter.examples.connplotter_tutorial.Etpos",
    "ConnPlotter.examples.connplotter_tutorial.Itgts",
    "ConnPlotter.examples.connplotter_tutorial.Itpos",
    "ConnPlotter.examples.connplotter_tutorial.alltgts",
    "ConnPlotter.examples.connplotter_tutorial.ax",
    "ConnPlotter.examples.connplotter_tutorial.c_cp",
    "ConnPlotter.examples.connplotter_tutorial.c_cp_45",
    "ConnPlotter.examples.connplotter_tutorial.c_cp_75",
    "ConnPlotter.examples.connplotter_tutorial.cc_cp",
    "ConnPlotter.examples.connplotter_tutorial.cc_syns",
    "ConnPlotter.examples.connplotter_tutorial.ccb_cp",
    "ConnPlotter.examples.connplotter_tutorial.ccb_syns",
    "ConnPlotter.examples.connplotter_tutorial.cinv_cp",
    "ConnPlotter.examples.connplotter_tutorial.cinv_syns",
    "ConnPlotter.examples.connplotter_tutorial.ctr_id",
    "ConnPlotter.examples.connplotter_tutorial.ctrpos",
    "ConnPlotter.examples.connplotter_tutorial.cw1_cp",
    "ConnPlotter.examples.connplotter_tutorial.cw1_syns",
    "ConnPlotter.examples.connplotter_tutorial.cw2_cp",
    "ConnPlotter.examples.connplotter_tutorial.cw2_syns",
    "ConnPlotter.examples.connplotter_tutorial.cx_cp",
    "ConnPlotter.examples.connplotter_tutorial.matplotlib",
    "ConnPlotter.examples.connplotter_tutorial.nd_cp",
    "ConnPlotter.examples.connplotter_tutorial.nest",
    "ConnPlotter.examples.connplotter_tutorial.nop",
    "ConnPlotter.examples.connplotter_tutorial.pylab",
    "ConnPlotter.examples.connplotter_tutorial.pylab_show",
    "ConnPlotter.examples.connplotter_tutorial.s_cp",
    "ConnPlotter.examples.connplotter_tutorial.showTextTable",
    "ConnPlotter.examples.connplotter_tutorial.using_pyreport",
    "ConnPlotter.examples.connplotter_tutorial.warnings",
    "ConnPlotter.examples.non_dale",
    "ConnPlotter.examples.simple",
    "ConnPlotter.plotParams.layer_bg",
    "ConnPlotter.plotParams.layer_font",
    "ConnPlotter.plotParams.layer_orientation",
    "ConnPlotter.plotParams.legend_tick_font",
    "ConnPlotter.plotParams.legend_tick_format",
    "ConnPlotter.plotParams.legend_ticks",
    "ConnPlotter.plotParams.legend_title_font",
    "ConnPlotter.plotParams.margins.bottom",
    "ConnPlotter.plotParams.margins.left",
    "ConnPlotter.plotParams.margins.right",
    "ConnPlotter.plotParams.margins.top",
    "ConnPlotter.plotParams.n_kern",
    "ConnPlotter.plotParams.patch_size",
    "ConnPlotter.plotParams.pop_font",
    "ConnPlotter.plotParams.pop_orientation",
    "eval",
    "exec",
    "int",
    "matplotlib.font_manager.FontProperties",
    "nest.topology.GetElement",
    "nest.topology.GetPosition",
    "print",
    "tuple",
    "zip"
   ]
  },
  "type": "module"
 },
 "ConnPlotter.examples.connplotter_tutorial.B_top": {
  "data": {
   "lineno": 285
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.E_id": {
  "data": {
   "lineno": 290
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.Etgts": {
  "data": {
   "lineno": 296
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.Etpos": {
  "data": {
   "lineno": 300
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.Itgts": {
  "data": {
   "lineno": 297
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.Itpos": {
  "data": {
   "lineno": 301
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.alltgts": {
  "data": {
   "lineno": 294
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.ax": {
  "data": {
   "lineno": 327
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.c_cp": {
  "data": {
   "lineno": 357
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.c_cp_45": {
  "data": {
   "lineno": 449
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.c_cp_75": {
  "data": {
   "lineno": 447
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.cc_cp": {
  "data": {
   "lineno": 614
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.cc_syns": {
  "data": {
   "lineno": 611
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.ccb_cp": {
  "data": {
   "lineno": 634
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.ccb_syns": {
  "data": {
   "lineno": 629
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.cinv_cp": {
  "data": {
   "lineno": 562
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.cinv_syns": {
  "data": {
   "lineno": 560
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.cpl": {
  "data": {
   "shadows": "ConnPlotter"
  },
  "type": "import"
 },
 "ConnPlotter.examples.connplotter_tutorial.ctr_id": {
  "data": {
   "lineno": 286
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.ctrpos": {
  "data": {
   "lineno": 326
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.cw1_cp": {
  "data": {
   "lineno": 585
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.cw1_syns": {
  "data": {
   "lineno": 583
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.cw2_cp": {
  "data": {
   "lineno": 588
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.cw2_syns": {
  "data": {
   "lineno": 586
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.cx_cp": {
  "data": {
   "lineno": 684
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.ex": {
  "data": {
   "shadows": "ConnPlotter.examples"
  },
  "type": "import"
 },
 "ConnPlotter.examples.connplotter_tutorial.fmgr": {
  "data": {
   "shadows": "matplotlib.font_manager"
  },
  "type": "import"
 },
 "ConnPlotter.examples.connplotter_tutorial.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "ConnPlotter.examples.connplotter_tutorial.nd_cp": {
  "data": {
   "lineno": 493
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "ConnPlotter.examples.connplotter_tutorial.nop": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "ConnPlotter.examples.connplotter_tutorial.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ConnPlotter.examples.connplotter_tutorial.pylab": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "ConnPlotter.examples.connplotter_tutorial.pylab_show": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.s_cp": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.showTextTable": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ConnPlotter.examples.connplotter_tutorial.os",
    "Exception",
    "open",
    "subprocess.STDOUT",
    "subprocess.call"
   ]
  },
  "type": "function"
 },
 "ConnPlotter.examples.connplotter_tutorial.subp": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "ConnPlotter.examples.connplotter_tutorial.topo": {
  "data": {
   "shadows": "nest.topology"
  },
  "type": "import"
 },
 "ConnPlotter.examples.connplotter_tutorial.using_pyreport": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "ConnPlotter.examples.non_dale": {
  "data": {},
  "type": "module"
 },
 "ConnPlotter.examples.non_dale.non_dale": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "modCopy"
   ]
  },
  "type": "function"
 },
 "ConnPlotter.examples.non_dale.non_dale.modCopy": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ConnPlotter.examples.simple": {
  "data": {},
  "type": "module"
 },
 "ConnPlotter.examples.simple.simple": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "modCopy"
   ]
  },
  "type": "function"
 },
 "ConnPlotter.examples.simple.simple.modCopy": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ConnPlotter.tcd_nest": {
  "data": {
   "symbols_in_volume": [
    "ConnPlotter.tcd_nest.TCD",
    "ConnPlotter.tcd_nest.g",
    "ConnPlotter.tcd_nest.ht_def_new_sq",
    "ConnPlotter.tcd_nest.ht_params",
    "ConnPlotter.tcd_nest.syns",
    "ConnPlotter.tcd_nest.sys",
    "ConnPlotter.tcd_nest.tcd",
    "ConnPlotter.tcd_nest.v",
    "__name__",
    "matplotlib.pyplot.legend",
    "matplotlib.pyplot.plot",
    "matplotlib.pyplot.show",
    "numpy.array",
    "numpy.linspace"
   ]
  },
  "type": "module"
 },
 "ConnPlotter.tcd_nest.TCD": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ConnPlotter.tcd_nest.TCD._TcdBeta": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ConnPlotter.tcd_nest.TCD._TcdBeta.__call__": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "ConnPlotter.tcd_nest.TCD._TcdBeta.__init__": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "ConnPlotter.tcd_nest.TCD._TcdBeta.__str__": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "ConnPlotter.tcd_nest.TCD._TcdNMDA": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ConnPlotter.tcd_nest.TCD._TcdNMDA.__call__": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "ConnPlotter.tcd_nest.TCD._TcdNMDA.__init__": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "ConnPlotter.tcd_nest.TCD._TcdNMDA.__str__": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "ConnPlotter.tcd_nest.TCD.__call__": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "ConnPlotter.tcd_nest.TCD.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ConnPlotter.tcd_nest.nest",
    "set"
   ]
  },
  "type": "function"
 },
 "ConnPlotter.tcd_nest.__all__": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "ConnPlotter.tcd_nest.g": {
  "data": {
   "lineno": 207
  },
  "type": "constant"
 },
 "ConnPlotter.tcd_nest.ht_def_new_sq": {
  "data": {
   "shadows": "ht_def_new_sq"
  },
  "type": "import"
 },
 "ConnPlotter.tcd_nest.ht_params": {
  "data": {
   "shadows": "ht_params"
  },
  "type": "import"
 },
 "ConnPlotter.tcd_nest.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "ConnPlotter.tcd_nest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ConnPlotter.tcd_nest.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "ConnPlotter.tcd_nest.syns": {
  "data": {
   "lineno": 204
  },
  "type": "constant"
 },
 "ConnPlotter.tcd_nest.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ConnPlotter.tcd_nest.tcd": {
  "data": {
   "lineno": 201
  },
  "type": "constant"
 },
 "ConnPlotter.tcd_nest.v": {
  "data": {
   "lineno": 203
  },
  "type": "constant"
 },
 "nest": {
  "data": {},
  "type": "module"
 },
 "nest.hl_api": {
  "data": {
   "symbols_in_volume": [
    "globals",
    "nest.hl_api._ignore_modules",
    "set"
   ]
  },
  "type": "module"
 },
 "nest.hl_api.__all__": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "nest.hl_api._ignore_modules": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "nest.hl_api._il": {
  "data": {
   "shadows": "import_libs"
  },
  "type": "import"
 },
 "nest.import_libs": {
  "data": {},
  "type": "module"
 },
 "nest.import_libs.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "nest.import_libs.import_libs": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "compile",
    "exec",
    "frozenset",
    "nest.import_libs.ast",
    "nest.import_libs.os",
    "nest.import_libs.sys"
   ]
  },
  "type": "function"
 },
 "nest.import_libs.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nest.import_libs.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nest.kernel": {
  "data": {
   "shadows": "pynestkernel"
  },
  "type": "import"
 },
 "nest.lib": {
  "data": {},
  "type": "module"
 },
 "nest.lib.hl_api_connections": {
  "data": {},
  "type": "module"
 },
 "nest.lib.hl_api_connections.CGConnect": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "sli_func",
    "spp",
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_connections.CGParse": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "spp",
    "sps",
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_connections.CGSelectImplementation": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "spp",
    "sps",
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_connections.Connect": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "dict",
    "is_string",
    "isinstance",
    "len",
    "list",
    "nest.lib.hl_api_connections.numpy",
    "show_deprecation_warning",
    "sps",
    "sr",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_connections.DataConnect": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "GetKernelStatus",
    "SetKernelStatus",
    "TypeError",
    "deprecated",
    "is_coercible_to_sli_array",
    "sps",
    "sr",
    "zip"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_connections.Disconnect": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "is_string",
    "sps",
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_connections.DisconnectOneToOne": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "deprecated",
    "is_string",
    "sps",
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_connections.GetConnections": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "TypeError",
    "is_coercible_to_sli_array",
    "spp",
    "sps",
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_connections.__all__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "nest.lib.hl_api_connections.kernel": {
  "data": {
   "shadows": "pynestkernel"
  },
  "type": "import"
 },
 "nest.lib.hl_api_connections.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.lib.hl_api_helper": {
  "data": {
   "symbols_in_volume": [
    "nest.lib.hl_api_helper.format_Warning",
    "nest.lib.hl_api_helper.get_unistring_type",
    "nest.lib.hl_api_helper.warnings"
   ]
  },
  "type": "module"
 },
 "nest.lib.hl_api_helper.HTML": {
  "data": {
   "shadows": "IPython.display.HTML"
  },
  "type": "import"
 },
 "nest.lib.hl_api_helper.Javascript": {
  "data": {
   "shadows": "IPython.display.Javascript"
  },
  "type": "import"
 },
 "nest.lib.hl_api_helper.SuppressedDeprecationWarning": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nest.lib.hl_api_helper.SuppressedDeprecationWarning.__enter__": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "nest.lib.hl_api_helper._deprecation_warning",
    "nest.lib.hl_api_helper.set_verbosity",
    "sli_func"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.SuppressedDeprecationWarning.__exit__": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "nest.lib.hl_api_helper._deprecation_warning",
    "nest.lib.hl_api_helper.set_verbosity"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.SuppressedDeprecationWarning.__init__": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "nest.lib.hl_api_helper.get_verbosity",
    "nest.lib.hl_api_helper.is_string"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.Template": {
  "data": {
   "shadows": "string.Template"
  },
  "type": "import"
 },
 "nest.lib.hl_api_helper.__all__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "nest.lib.hl_api_helper.__check_nb": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "NameError",
    "get_ipython"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.__is_executable": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "nest.lib.hl_api_helper.os"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.__show_help_in_modal_window": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "IPython.display.HTML",
    "IPython.display.Javascript",
    "IPython.display.display",
    "nest.lib.hl_api_helper.json",
    "string.Template"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper._deprecation_warning": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "nest.lib.hl_api_helper.broadcast": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.deprecated": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.deprecated.deprecated_decorator": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "nest.lib.hl_api_helper._deprecation_warning"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.deprecated.deprecated_decorator.new_func": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "func",
    "nest.lib.hl_api_helper.functools",
    "nest.lib.hl_api_helper.show_deprecation_warning"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.display": {
  "data": {
   "shadows": "IPython.display.display"
  },
  "type": "import"
 },
 "nest.lib.hl_api_helper.format_Warning": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "nest.lib.hl_api_helper.get_help_filepath": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "nest.lib.hl_api_helper.os",
    "print",
    "sli_func"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.get_unistring_type": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "nest.lib.hl_api_helper.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.get_verbosity": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "spp",
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.get_wrapped_text": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "nest.lib.hl_api_helper.textwrap"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.is_coercible_to_sli_array": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "nest.lib.hl_api_helper.sys",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.is_iterable": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "TypeError",
    "iter"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.is_literal": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "isinstance",
    "nest.lib.hl_api_helper.uni_str"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.is_sequence_of_connections": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "isinstance",
    "iter",
    "len",
    "next"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.is_sequence_of_gids": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "all",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.is_string": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "isinstance",
    "nest.lib.hl_api_helper.uni_str"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "nest.lib.hl_api_helper.kernel": {
  "data": {
   "shadows": "pynestkernel"
  },
  "type": "import"
 },
 "nest.lib.hl_api_helper.load_help": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "nest.lib.hl_api_helper.get_help_filepath",
    "open"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.model_deprecation_warning": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "nest.lib.hl_api_helper.get_wrapped_text",
    "nest.lib.hl_api_helper.show_deprecation_warning"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.lib.hl_api_helper.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nest.lib.hl_api_helper.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "nest.lib.hl_api_helper.serializable": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "nest.lib.hl_api_helper.numpy",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.set_verbosity": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.show_deprecation_warning": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "nest.lib.hl_api_helper._deprecation_warning",
    "nest.lib.hl_api_helper.get_wrapped_text",
    "nest.lib.hl_api_helper.warnings"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.show_help_with_pager": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "IOError",
    "OSError",
    "any",
    "nest.lib.hl_api_helper.__check_nb",
    "nest.lib.hl_api_helper.__is_executable",
    "nest.lib.hl_api_helper.__show_help_in_modal_window",
    "nest.lib.hl_api_helper.get_help_filepath",
    "nest.lib.hl_api_helper.load_help",
    "nest.lib.hl_api_helper.os",
    "nest.lib.hl_api_helper.subprocess",
    "nest.lib.hl_api_helper.sys",
    "print",
    "sli_func"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "nest.lib.hl_api_helper.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nest.lib.hl_api_helper.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "nest.lib.hl_api_helper.to_json": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "nest.lib.hl_api_helper.json",
    "nest.lib.hl_api_helper.serializable"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.uni_str": {
  "data": {
   "lineno": 177
  },
  "type": "constant"
 },
 "nest.lib.hl_api_helper.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nest.lib.hl_api_info": {
  "data": {},
  "type": "module"
 },
 "nest.lib.hl_api_info.GetStatus": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "TypeError",
    "is_coercible_to_sli_array",
    "is_iterable",
    "is_literal",
    "is_sequence_of_connections",
    "len",
    "pcd",
    "spp",
    "sps",
    "sr",
    "to_json"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_info.SetStatus": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "TypeError",
    "broadcast",
    "dict",
    "is_coercible_to_sli_array",
    "is_iterable",
    "is_literal",
    "is_sequence_of_connections",
    "isinstance",
    "len",
    "pcd",
    "sps",
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_info.__all__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "nest.lib.hl_api_info.authors": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_info.get_argv": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "spp",
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_info.help": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "load_help",
    "print",
    "show_help_with_pager"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_info.helpdesk": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "nest.lib.hl_api_info.os",
    "nest.lib.hl_api_info.sys",
    "nest.lib.hl_api_info.webbrowser",
    "print"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_info.message": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "sps",
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_info.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nest.lib.hl_api_info.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nest.lib.hl_api_info.sysinfo": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_info.version": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "spp",
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_info.webbrowser": {
  "data": {
   "shadows": "webbrowser"
  },
  "type": "import"
 },
 "nest.lib.hl_api_models": {
  "data": {},
  "type": "module"
 },
 "nest.lib.hl_api_models.ConnectionRules": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "sorted",
    "spp",
    "sr",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_models.CopyModel": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "model_deprecation_warning",
    "sps",
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_models.GetDefaults": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "TypeError",
    "is_iterable",
    "is_literal",
    "spp",
    "sr",
    "to_json"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_models.Models": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "spp",
    "sr",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_models.SetDefaults": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "is_literal",
    "sps",
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_models.__all__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "nest.lib.hl_api_nodes": {
  "data": {},
  "type": "module"
 },
 "nest.lib.hl_api_nodes.Create": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "SetStatus",
    "dict",
    "isinstance",
    "model_deprecation_warning",
    "nest.lib.hl_api_nodes.warnings",
    "range",
    "spp",
    "sps",
    "sr",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_nodes.GetLID": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "deprecated",
    "len",
    "spp",
    "sps",
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_nodes.__all__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "nest.lib.hl_api_nodes.kernel": {
  "data": {
   "shadows": "pynestkernel"
  },
  "type": "import"
 },
 "nest.lib.hl_api_nodes.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nest.lib.hl_api_parallel_computing": {
  "data": {},
  "type": "module"
 },
 "nest.lib.hl_api_parallel_computing.NumProcesses": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "spp",
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_parallel_computing.Rank": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "spp",
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_parallel_computing.SetAcceptableLatency": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "sps",
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_parallel_computing.SetMaxBuffered": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "sps",
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_parallel_computing.SyncProcesses": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_parallel_computing.__all__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "nest.lib.hl_api_parallel_computing.kernel": {
  "data": {
   "shadows": "pynestkernel"
  },
  "type": "import"
 },
 "nest.lib.hl_api_simulation": {
  "data": {},
  "type": "module"
 },
 "nest.lib.hl_api_simulation.Cleanup": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_simulation.DisableStructuralPlasticity": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_simulation.EnableStructuralPlasticity": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_simulation.GetKernelStatus": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "is_iterable",
    "is_literal",
    "spp",
    "sr",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_simulation.GetStructuralPlasticityStatus": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "TypeError",
    "is_iterable",
    "is_literal",
    "spp",
    "sps",
    "sr",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_simulation.Install": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_simulation.Prepare": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_simulation.ResetKernel": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_simulation.ResetNetwork": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "deprecated",
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_simulation.Run": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "float",
    "sps",
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_simulation.RunManager": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "nest.lib.hl_api_simulation.Cleanup",
    "nest.lib.hl_api_simulation.Prepare"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_simulation.SetKernelStatus": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "sps",
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_simulation.SetStructuralPlasticityStatus": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "sps",
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_simulation.Simulate": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "float",
    "sps",
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_simulation.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "nest.lib.hl_api_simulation.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "nest.lib.hl_api_subnets": {
  "data": {},
  "type": "module"
 },
 "nest.lib.hl_api_subnets.BeginSubnet": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "Create",
    "SetStatus",
    "deprecated",
    "nest.lib.hl_api_subnets.ChangeSubnet"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_subnets.ChangeSubnet": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "deprecated",
    "len",
    "sps",
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_subnets.CurrentSubnet": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "deprecated",
    "spp",
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_subnets.EndSubnet": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "GetStatus",
    "deprecated",
    "nest.lib.hl_api_subnets.ChangeSubnet",
    "nest.lib.hl_api_subnets.CurrentSubnet"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_subnets.GetChildren": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "deprecated",
    "sli_func"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_subnets.GetLeaves": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "deprecated",
    "sli_func"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_subnets.GetNetwork": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "deprecated",
    "len",
    "spp",
    "sps",
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_subnets.GetNodes": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "deprecated",
    "sli_func"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_subnets.LayoutNetwork": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "ValueError",
    "deprecated",
    "is_literal",
    "len",
    "model",
    "nest.lib.hl_api_subnets.BeginSubnet",
    "nest.lib.hl_api_subnets.EndSubnet",
    "range",
    "spp",
    "sps",
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_subnets.PrintNetwork": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "SuppressedDeprecationWarning",
    "deprecated",
    "len",
    "nest.lib.hl_api_subnets.CurrentSubnet",
    "sps",
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_subnets.PrintNodes": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "SuppressedDeprecationWarning",
    "nest.lib.hl_api_subnets.PrintNetwork"
   ]
  },
  "type": "function"
 },
 "nest.lib.hl_api_subnets.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "nest.lib.hl_api_subnets.kernel": {
  "data": {
   "shadows": "pynestkernel"
  },
  "type": "import"
 },
 "nest.ll_api": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "nest.ll_api.DLFCN",
    "nest.ll_api.catching_sli_run",
    "nest.ll_api.ctypes",
    "nest.ll_api.dl",
    "nest.ll_api.engine",
    "nest.ll_api.init",
    "nest.ll_api.os",
    "nest.ll_api.sys"
   ]
  },
  "type": "module"
 },
 "nest.ll_api.DLFCN": {
  "data": {
   "shadows": "DLFCN"
  },
  "type": "import"
 },
 "nest.ll_api.__all__": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "nest.ll_api.__debug": {
  "data": {
   "lineno": 192
  },
  "type": "constant"
 },
 "nest.ll_api.catching_sli_run": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "decode",
    "exceptionCls",
    "getattr",
    "nest.ll_api.engine",
    "nest.ll_api.sys",
    "sli_pop"
   ]
  },
  "type": "function"
 },
 "nest.ll_api.catching_sli_run.decode": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "nest.ll_api.catching_sli_run.encode": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "nest.ll_api.check_stack": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "ValueError",
    "nest.ll_api.inspect",
    "nest.ll_api.stack_checker",
    "setattr"
   ]
  },
  "type": "function"
 },
 "nest.ll_api.ctypes": {
  "data": {
   "shadows": "ctypes"
  },
  "type": "import"
 },
 "nest.ll_api.dl": {
  "data": {
   "shadows": "dl"
  },
  "type": "import"
 },
 "nest.ll_api.engine": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "nest.ll_api.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "nest.ll_api.get_debug": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "nest.ll_api.__debug"
   ]
  },
  "type": "function"
 },
 "nest.ll_api.init": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "ImportError",
    "Models",
    "NameError",
    "nest.ll_api.engine",
    "nest.ll_api.initialized",
    "nest.ll_api.keyword",
    "nest.ll_api.os"
   ]
  },
  "type": "function"
 },
 "nest.ll_api.initialized": {
  "data": {
   "lineno": 294
  },
  "type": "constant"
 },
 "nest.ll_api.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "nest.ll_api.kernel": {
  "data": {
   "shadows": "pynestkernel"
  },
  "type": "import"
 },
 "nest.ll_api.keyword": {
  "data": {
   "shadows": "keyword"
  },
  "type": "import"
 },
 "nest.ll_api.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nest.ll_api.pcd": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "nest.ll_api.readline": {
  "data": {
   "shadows": "readline"
  },
  "type": "import"
 },
 "nest.ll_api.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "nest.ll_api.set_debug": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "nest.ll_api.__debug"
   ]
  },
  "type": "function"
 },
 "nest.ll_api.sli_func": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "len",
    "sli_pop",
    "sli_push",
    "sli_run"
   ]
  },
  "type": "function"
 },
 "nest.ll_api.stack_checker": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "nest.ll_api.stack_checker.stack_checker_func": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "f",
    "f.__name__",
    "nest.ll_api.functools",
    "nest.ll_api.get_debug",
    "spp",
    "sr"
   ]
  },
  "type": "function"
 },
 "nest.ll_api.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nest.test": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "nest.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests": {
  "data": {},
  "type": "module"
 },
 "nest.tests.compatibility": {
  "data": {
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "nest.tests.compatibility._skipIf",
    "nest.tests.compatibility.fill_diagonal",
    "nest.tests.compatibility.numpy",
    "nest.tests.compatibility.unittest"
   ]
  },
  "type": "module"
 },
 "nest.tests.compatibility._skipIf": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "nest.tests.compatibility._skipIf.decorator": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "issubclass",
    "nest.tests.compatibility.inspect",
    "nest.tests.compatibility.unittest",
    "type"
   ]
  },
  "type": "function"
 },
 "nest.tests.compatibility._skipIf.decorator.ret_none": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "nest.tests.compatibility.fill_diagonal": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "min",
    "nest.tests.compatibility.numpy"
   ]
  },
  "type": "function"
 },
 "nest.tests.compatibility.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "nest.tests.compatibility.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.compatibility.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.suite": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "collections.defaultdict",
    "len",
    "nest.tests.test_aeif_lsodar.DT0_params",
    "nest.tests.test_aeif_lsodar.aeif_DT0",
    "nest.tests.test_aeif_lsodar.aeif_DT0_delta",
    "nest.tests.test_aeif_lsodar.iaf_param_base",
    "nest.tests.test_aeif_lsodar.iaf_param_cond",
    "nest.tests.test_aeif_lsodar.iaf_param_psc",
    "nest.tests.test_aeif_lsodar.iaf_param_psc_delta",
    "nest.tests.test_aeif_lsodar.models",
    "nest.tests.test_aeif_lsodar.nest",
    "nest.tests.test_aeif_lsodar.os",
    "nest.tests.test_aeif_lsodar.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_aeif_lsodar.AEIFTestCase": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "nest.tests.test_aeif_lsodar.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_aeif_lsodar.AEIFTestCase.assert_pass_tolerance": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_aeif_lsodar.AEIFTestCase.compute_difference": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "iter",
    "nest.tests.test_aeif_lsodar.nest",
    "numpy.abs",
    "numpy.any",
    "numpy.average",
    "numpy.isclose",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_aeif_lsodar.AEIFTestCase.setUp": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "nest.tests.test_aeif_lsodar.nest",
    "numpy.random.RandomState",
    "range"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_aeif_lsodar.AEIFTestCase.test_closeness_nest_lsodar": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "V_interp",
    "iter",
    "nest.tests.test_aeif_lsodar.HAVE_GSL",
    "nest.tests.test_aeif_lsodar.aeif_param",
    "nest.tests.test_aeif_lsodar.di_tolerances_lsodar",
    "nest.tests.test_aeif_lsodar.models",
    "nest.tests.test_aeif_lsodar.nest",
    "nest.tests.test_aeif_lsodar.os",
    "nest.tests.test_aeif_lsodar.path",
    "nest.tests.test_aeif_lsodar.unittest",
    "next",
    "numpy.loadtxt",
    "scipy.interpolate.interp1d",
    "w_interp"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_aeif_lsodar.AEIFTestCase.test_iaf_dc_input": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "iter",
    "nest.tests.test_aeif_lsodar.DT0_params",
    "nest.tests.test_aeif_lsodar.HAVE_GSL",
    "nest.tests.test_aeif_lsodar.aeif_DT0",
    "nest.tests.test_aeif_lsodar.di_iaf_param",
    "nest.tests.test_aeif_lsodar.di_syn_types",
    "nest.tests.test_aeif_lsodar.di_tolerances_iaf",
    "nest.tests.test_aeif_lsodar.lst_syn_types",
    "nest.tests.test_aeif_lsodar.models",
    "nest.tests.test_aeif_lsodar.nest",
    "nest.tests.test_aeif_lsodar.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_aeif_lsodar.AEIFTestCase.test_iaf_spike_input": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "iter",
    "nest.tests.test_aeif_lsodar.DT0_params",
    "nest.tests.test_aeif_lsodar.HAVE_GSL",
    "nest.tests.test_aeif_lsodar.aeif_DT0",
    "nest.tests.test_aeif_lsodar.di_iaf_param",
    "nest.tests.test_aeif_lsodar.di_syn_types",
    "nest.tests.test_aeif_lsodar.di_tolerances_iaf",
    "nest.tests.test_aeif_lsodar.lst_syn_types",
    "nest.tests.test_aeif_lsodar.models",
    "nest.tests.test_aeif_lsodar.nest",
    "nest.tests.test_aeif_lsodar.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_aeif_lsodar.DT0_params": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar.HAVE_GSL": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar.aeif_DT0": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar.aeif_DT0_delta": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar.aeif_param": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "nest.tests.test_aeif_lsodar.di_iaf_param": {
  "data": {
   "lineno": 167
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar.di_syn_types": {
  "data": {
   "lineno": 183
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar.di_tolerances_iaf": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar.di_tolerances_lsodar": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar.iaf_param_base": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar.iaf_param_cond": {
  "data": {
   "lineno": 164
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar.iaf_param_psc": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar.iaf_param_psc_delta": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "nest.tests.test_aeif_lsodar.lst_syn_types": {
  "data": {
   "lineno": 181
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar.models": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_aeif_lsodar.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_aeif_lsodar.num_models": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nest.tests.test_aeif_lsodar.path": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar.run": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "nest.tests.test_aeif_lsodar.suite",
    "nest.tests.test_aeif_lsodar.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_aeif_lsodar.suite": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "nest.tests.test_aeif_lsodar.AEIFTestCase",
    "nest.tests.test_aeif_lsodar.HAVE_GSL",
    "nest.tests.test_aeif_lsodar.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_aeif_lsodar.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nest.tests.test_aeif_lsodar.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_all": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_all.debug",
    "nest.tests.test_all.nest",
    "nest.tests.test_all.runner",
    "nest.tests.test_all.suite",
    "nest.tests.test_all.unittest"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_all.debug": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "nest.tests.test_all.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_all.runner": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "nest.tests.test_all.suite": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "nest.tests.test_all.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_all.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_clopath_synapse": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_clopath_synapse.nest",
    "nest.tests.test_clopath_synapse.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_clopath_synapse.ClopathSynapseTestCase": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "nest.tests.test_clopath_synapse.HAVE_GSL",
    "nest.tests.test_clopath_synapse.nest",
    "nest.tests.test_clopath_synapse.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_clopath_synapse.ClopathSynapseTestCase.test_ConnectNeuronsWithClopathSynapse": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "nest.tests.test_clopath_synapse.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_clopath_synapse.ClopathSynapseTestCase.test_SynapseDepressionFacilitation": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "max",
    "nest.tests.test_clopath_synapse.nest",
    "numpy.allclose",
    "numpy.array",
    "zip"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_clopath_synapse.ClopathSynapseTestCase.test_SynapseFunctionWithAeifModel": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "nest.tests.test_clopath_synapse.nest",
    "numpy.allclose",
    "numpy.isclose",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_clopath_synapse.HAVE_GSL": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "nest.tests.test_clopath_synapse.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_clopath_synapse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_clopath_synapse.run": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "nest.tests.test_clopath_synapse.suite",
    "nest.tests.test_clopath_synapse.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_clopath_synapse.suite": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "nest.tests.test_clopath_synapse.ClopathSynapseTestCase",
    "nest.tests.test_clopath_synapse.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_clopath_synapse.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_connect_all_patterns": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_connect_all_patterns.nest",
    "nest.tests.test_connect_all_patterns.runner",
    "nest.tests.test_connect_all_patterns.suite",
    "nest.tests.test_connect_all_patterns.unittest"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_connect_all_patterns.HAVE_MPI": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "nest.tests.test_connect_all_patterns.MPI": {
  "data": {
   "shadows": "mpi4py.MPI"
  },
  "type": "import"
 },
 "nest.tests.test_connect_all_patterns.TestConnectAllPatterns": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "nest.tests.test_connect_all_patterns.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_connect_all_patterns.TestConnectAllPatterns.testWithMPI": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ImportError",
    "nest.tests.test_connect_all_patterns.HAVE_MPI",
    "nest.tests.test_connect_all_patterns.nest",
    "nest.tests.test_connect_all_patterns.os",
    "nest.tests.test_connect_all_patterns.unittest",
    "subprocess.PIPE",
    "subprocess.Popen"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_all_patterns.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_connect_all_patterns.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nest.tests.test_connect_all_patterns.runner": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "nest.tests.test_connect_all_patterns.sp": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "nest.tests.test_connect_all_patterns.suite": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "nest.tests.test_connect_all_patterns.TestConnectAllPatterns",
    "nest.tests.test_connect_all_patterns.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_all_patterns.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_connect_all_to_all": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_connect_all_to_all.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_connect_all_to_all.TestAllToAll": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "nest.tests.test_connect_all_to_all.TestAllToAll.testConnectivity": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_all_to_all.TestAllToAll.testInputArray": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "float",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_all_to_all.TestAllToAll.testInputArrayRPort": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.asarray",
    "numpy.transpose",
    "range"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_all_to_all.TestAllToAll.testInputArrayToStdpSynapse": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "numpy.arange",
    "range"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_all_to_all.TestAllToAll.testInputArrayWithoutAutapses": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "float",
    "numpy.arange",
    "numpy.fill_diagonal"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_all_to_all.TestAllToAll.testRPortDistribution": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_all_to_all.hf": {
  "data": {
   "shadows": "test_connect_helpers"
  },
  "type": "import"
 },
 "nest.tests.test_connect_all_to_all.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_connect_all_to_all.run": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "nest.tests.test_connect_all_to_all.suite",
    "nest.tests.test_connect_all_to_all.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_all_to_all.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nest.tests.test_connect_all_to_all.suite": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "nest.tests.test_connect_all_to_all.TestAllToAll",
    "nest.tests.test_connect_all_to_all.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_all_to_all.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_connect_array_fixed_indegree": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_connect_array_fixed_indegree.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_connect_array_fixed_indegree.ConnectArrayFixedIndegreeTestCase": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "nest.tests.test_connect_array_fixed_indegree.nest",
    "nest.tests.test_connect_array_fixed_indegree.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_connect_array_fixed_indegree.ConnectArrayFixedIndegreeTestCase.test_Connect_Array_Fixed_Indegree": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "len",
    "nest.tests.test_connect_array_fixed_indegree.nest",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_array_fixed_indegree.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_connect_array_fixed_indegree.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_connect_array_fixed_indegree.run": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "nest.tests.test_connect_array_fixed_indegree.suite",
    "nest.tests.test_connect_array_fixed_indegree.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_array_fixed_indegree.suite": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "nest.tests.test_connect_array_fixed_indegree.ConnectArrayFixedIndegreeTestCase",
    "nest.tests.test_connect_array_fixed_indegree.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_array_fixed_indegree.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_connect_array_fixed_outdegree": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_connect_array_fixed_outdegree.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_connect_array_fixed_outdegree.ConnectArrayFixedOutdegreeTestCase": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "nest.tests.test_connect_array_fixed_outdegree.nest",
    "nest.tests.test_connect_array_fixed_outdegree.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_connect_array_fixed_outdegree.ConnectArrayFixedOutdegreeTestCase.test_Connect_Array_Fixed_Outdegree": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "len",
    "nest.tests.test_connect_array_fixed_outdegree.nest",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_array_fixed_outdegree.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_connect_array_fixed_outdegree.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_connect_array_fixed_outdegree.run": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "nest.tests.test_connect_array_fixed_outdegree.suite",
    "nest.tests.test_connect_array_fixed_outdegree.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_array_fixed_outdegree.suite": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "nest.tests.test_connect_array_fixed_outdegree.ConnectArrayFixedOutdegreeTestCase",
    "nest.tests.test_connect_array_fixed_outdegree.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_array_fixed_outdegree.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_connect_distributions": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_connect_distributions.nest",
    "nest.tests.test_connect_distributions.runner",
    "nest.tests.test_connect_distributions.suite",
    "nest.tests.test_connect_distributions.unittest"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_connect_distributions.HAVE_GSL": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "nest.tests.test_connect_distributions.TestDists": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "nest.tests.test_connect_distributions.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_connect_distributions.TestDists.setUp": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "nest.tests.test_connect_distributions.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.setUpNetwork": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "nest.tests.test_connect_distributions.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testBinomialClippedDist": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testBinomialDist": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testExponentialClippedDist": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testExponentialDist": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testGammaClippedDist": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testGammaDist": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testGslBinomialDist": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "nest.tests.test_connect_distributions.HAVE_GSL",
    "nest.tests.test_connect_distributions.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testLognormalClippedDist": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testLognormalDist": {
  "data": {
   "lineno": 186
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testNormalClippedDist": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testNormalDist": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testPoissonClippedDist": {
  "data": {
   "lineno": 224
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testPoissonDist": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testUniformDist": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testUniformIntDist": {
  "data": {
   "lineno": 251
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.hf": {
  "data": {
   "shadows": "test_connect_helpers"
  },
  "type": "import"
 },
 "nest.tests.test_connect_distributions.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_connect_distributions.runner": {
  "data": {
   "lineno": 270
  },
  "type": "constant"
 },
 "nest.tests.test_connect_distributions.suite": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "nest.tests.test_connect_distributions.TestDists",
    "nest.tests.test_connect_distributions.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_connect_fixed_indegree": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_connect_fixed_indegree.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_connect_fixed_indegree.TestFixedInDegree": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "nest.tests.test_connect_fixed_indegree.TestFixedInDegree.testAutapsesFalse": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_indegree.TestFixedInDegree.testAutapsesTrue": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_indegree.TestFixedInDegree.testErrorMessages": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_indegree.TestFixedInDegree.testInDegree": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_indegree.TestFixedInDegree.testMultapsesFalse": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_indegree.TestFixedInDegree.testMultapsesTrue": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_indegree.TestFixedInDegree.testStatistics": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_indegree.hf": {
  "data": {
   "shadows": "test_connect_helpers"
  },
  "type": "import"
 },
 "nest.tests.test_connect_fixed_indegree.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_connect_fixed_indegree.run": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "nest.tests.test_connect_fixed_indegree.suite",
    "nest.tests.test_connect_fixed_indegree.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_indegree.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nest.tests.test_connect_fixed_indegree.suite": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "nest.tests.test_connect_fixed_indegree.TestFixedInDegree",
    "nest.tests.test_connect_fixed_indegree.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_indegree.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_connect_fixed_outdegree": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_connect_fixed_outdegree.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree": {
  "data": {
   "lineno": 29
  },
  "type": "class"
 },
 "nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree.testAutapsesFalse": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree.testAutapsesTrue": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree.testErrorMessages": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree.testMultapsesFalse": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree.testMultapsesTrue": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree.testOutDegree": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree.testStatistics": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_outdegree.hf": {
  "data": {
   "shadows": "test_connect_helpers"
  },
  "type": "import"
 },
 "nest.tests.test_connect_fixed_outdegree.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_connect_fixed_outdegree.run": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "nest.tests.test_connect_fixed_outdegree.suite",
    "nest.tests.test_connect_fixed_outdegree.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_outdegree.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nest.tests.test_connect_fixed_outdegree.suite": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree",
    "nest.tests.test_connect_fixed_outdegree.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_outdegree.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_connect_fixed_total_number": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_connect_fixed_total_number.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber.testAutapsesFalse": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber.testAutapsesTrue": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber.testErrorMessages": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber.testStatistics": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber.testTotalNumberOfConnections": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "len",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_total_number.hf": {
  "data": {
   "shadows": "test_connect_helpers"
  },
  "type": "import"
 },
 "nest.tests.test_connect_fixed_total_number.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_connect_fixed_total_number.run": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "nest.tests.test_connect_fixed_total_number.suite",
    "nest.tests.test_connect_fixed_total_number.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_total_number.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nest.tests.test_connect_fixed_total_number.suite": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber",
    "nest.tests.test_connect_fixed_total_number.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_total_number.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_connect_helpers": {
  "data": {},
  "type": "module"
 },
 "nest.tests.test_connect_helpers.MPI": {
  "data": {
   "shadows": "mpi4py.MPI"
  },
  "type": "import"
 },
 "nest.tests.test_connect_helpers.adaptive_check": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "nest.tests.test_connect_helpers.chi_squared_check",
    "nest.tests.test_connect_helpers.two_level_check"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.all_equal": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.check_ks": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "nest.tests.test_connect_helpers.get_clipped_cdf",
    "nest.tests.test_connect_helpers.get_expected_freqs",
    "nest.tests.test_connect_helpers.get_weighted_connectivity_matrix",
    "numpy.exp",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.check_synapse": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "enumerate",
    "nest.tests.test_connect_helpers.all_equal",
    "nest.tests.test_connect_helpers.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.chi_squared_check": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.counter": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "len",
    "min"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.gather_data": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "mpi4py.MPI.COMM_WORLD.Get_rank",
    "mpi4py.MPI.COMM_WORLD.gather",
    "nest.tests.test_connect_helpers.haveMPI4Py",
    "sum"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.get_clipped_cdf": {
  "data": {
   "lineno": 406
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.get_clipped_cdf.clipped_cdf": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "ValueError",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.get_connectivity_matrix": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "len",
    "nest.tests.test_connect_helpers.nest",
    "numpy.asarray",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.get_degrees": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "nest.tests.test_connect_helpers.get_connectivity_matrix",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.get_expected_degrees_bernoulli": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "RuntimeWarning",
    "int",
    "len",
    "numpy.array",
    "range",
    "reversed",
    "round",
    "sum"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.get_expected_degrees_fixedDegrees": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.get_expected_degrees_totalNumber": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.get_expected_freqs": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.sum",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.get_weighted_connectivity_matrix": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "len",
    "nest.tests.test_connect_helpers.nest",
    "numpy.asarray",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.haveMPI4Py": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "nest.tests.test_connect_helpers.is_array": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.generic",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.mpi_assert": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "isinstance",
    "nest.tests.test_connect_helpers.gather_data",
    "numpy.allclose",
    "numpy.generic",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.mpi_barrier": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "mpi4py.MPI.COMM_WORLD.Barrier",
    "nest.tests.test_connect_helpers.haveMPI4Py"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_connect_helpers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_connect_helpers.reset_seed": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "nest.tests.test_connect_helpers.nest",
    "range"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nest.tests.test_connect_helpers.truncexpon": {
  "data": {
   "shadows": "scipy.stats.truncexpon"
  },
  "type": "import"
 },
 "nest.tests.test_connect_helpers.two_level_check": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "nest.tests.test_connect_helpers.chi_squared_check",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_one_to_one": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_connect_one_to_one.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_connect_one_to_one.TestOneToOne": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "nest.tests.test_connect_one_to_one.TestOneToOne.testConnectivity": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.identity",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_one_to_one.TestOneToOne.testInputArray": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "float",
    "numpy.arange",
    "numpy.diag"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_one_to_one.TestOneToOne.testInputArrayRPort": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.diag",
    "range"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_one_to_one.TestOneToOne.testInputArrayToStdpSynapse": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "numpy.arange",
    "numpy.diag",
    "range"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_one_to_one.TestOneToOne.testSymmetricFlag": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.identity",
    "numpy.transpose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_one_to_one.hf": {
  "data": {
   "shadows": "test_connect_helpers"
  },
  "type": "import"
 },
 "nest.tests.test_connect_one_to_one.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_connect_one_to_one.run": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "nest.tests.test_connect_one_to_one.suite",
    "nest.tests.test_connect_one_to_one.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_one_to_one.suite": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "nest.tests.test_connect_one_to_one.TestOneToOne",
    "nest.tests.test_connect_one_to_one.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_one_to_one.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_connect_pairwise_bernoulli": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_connect_pairwise_bernoulli.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_connect_pairwise_bernoulli.TestPairwiseBernoulli": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "nest.tests.test_connect_pairwise_bernoulli.TestPairwiseBernoulli.testAutapsesFalse": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_pairwise_bernoulli.TestPairwiseBernoulli.testAutapsesTrue": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_pairwise_bernoulli.TestPairwiseBernoulli.testStatistics": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_pairwise_bernoulli.hf": {
  "data": {
   "shadows": "test_connect_helpers"
  },
  "type": "import"
 },
 "nest.tests.test_connect_pairwise_bernoulli.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_connect_pairwise_bernoulli.run": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "nest.tests.test_connect_pairwise_bernoulli.suite",
    "nest.tests.test_connect_pairwise_bernoulli.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_pairwise_bernoulli.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nest.tests.test_connect_pairwise_bernoulli.suite": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "nest.tests.test_connect_pairwise_bernoulli.TestPairwiseBernoulli",
    "nest.tests.test_connect_pairwise_bernoulli.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_pairwise_bernoulli.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_connect_parameters": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_connect_parameters.runner",
    "nest.tests.test_connect_parameters.suite",
    "nest.tests.test_connect_parameters.unittest"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_connect_parameters.TestParams": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "nest.tests.test_connect_parameters.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_connect_parameters.TestParams.setUp": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.setUpNetwork": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.setUpNetworkOnePop": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testAutapsesFalse": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testAutapsesTrue": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testDefaultParams": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "all"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testDelayAllSynapses": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testDelaySetting": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testHtSynapse": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testQuantalStpSynapse": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testRPortAllSynapses": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testRPortSetting": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testStdpDopamineSynapse": {
  "data": {
   "lineno": 209
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testStdpFacetshwSynapseHom": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testStdpPlSynapseHom": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testStdpSynapse": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testStdpSynapseHom": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testSynapseSetting": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testTsodyks2Synapse": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testTsodyksSynapse": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testWeightAllSynapses": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testWeightSetting": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.hf": {
  "data": {
   "shadows": "test_connect_helpers"
  },
  "type": "import"
 },
 "nest.tests.test_connect_parameters.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_connect_parameters.runner": {
  "data": {
   "lineno": 293
  },
  "type": "constant"
 },
 "nest.tests.test_connect_parameters.suite": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "nest.tests.test_connect_parameters.TestParams",
    "nest.tests.test_connect_parameters.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_connect_symmetric_pairwise_bernoulli.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli": {
  "data": {
   "lineno": 31
  },
  "type": "class"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli.testAutapsesFalse": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli.testAutapsesTrue": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli.testMakeSymmetric": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli.testMultapses": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "int",
    "nest.tests.test_connect_symmetric_pairwise_bernoulli.collections",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli.testStatistics": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli.hf": {
  "data": {
   "shadows": "test_connect_helpers"
  },
  "type": "import"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli.run": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "nest.tests.test_connect_symmetric_pairwise_bernoulli.suite",
    "nest.tests.test_connect_symmetric_pairwise_bernoulli.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli.suite": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli",
    "nest.tests.test_connect_symmetric_pairwise_bernoulli.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_create": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_create.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_create.CreateTestCase": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "nest.tests.test_create.nest",
    "nest.tests.test_create.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_create.CreateTestCase.test_CopyModel": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "nest.tests.test_create.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_create.CreateTestCase.test_ModelCreate": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "nest.tests.test_create.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_create.CreateTestCase.test_ModelCreateN": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "len",
    "nest.tests.test_create.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_create.CreateTestCase.test_ModelCreateNdict": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "TypeError",
    "UserWarning",
    "issubclass",
    "nest.tests.test_create.nest",
    "nest.tests.test_create.warnings",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_create.CreateTestCase.test_ModelDicts": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "nest.tests.test_create.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_create.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_create.run": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "nest.tests.test_create.suite",
    "nest.tests.test_create.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_create.suite": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "nest.tests.test_create.CreateTestCase",
    "nest.tests.test_create.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_create.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_create.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nest.tests.test_csa": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "nest.tests.test_csa.nest",
    "nest.tests.test_csa.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_csa.CSATestCase": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "nest.tests.test_csa.HAVE_CSA",
    "nest.tests.test_csa.HAVE_LIBNEUROSIM",
    "nest.tests.test_csa.nest",
    "nest.tests.test_csa.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_csa.CSATestCase.test_CSA_OneToOne_intvectors": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "len",
    "nest.tests.test_csa.HAVE_NUMPY",
    "nest.tests.test_csa.csa",
    "nest.tests.test_csa.nest",
    "nest.tests.test_csa.numpy",
    "nest.tests.test_csa.unittest",
    "range"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_csa.CSATestCase.test_CSA_OneToOne_params": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "len",
    "nest.tests.test_csa.csa",
    "nest.tests.test_csa.nest",
    "range"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_csa.CSATestCase.test_CSA_OneToOne_synmodel": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "len",
    "nest.tests.test_csa.csa",
    "nest.tests.test_csa.nest",
    "range"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_csa.CSATestCase.test_CSA_OneToOne_tuples": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "len",
    "nest.tests.test_csa.csa",
    "nest.tests.test_csa.nest",
    "range"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_csa.CSATestCase.test_CSA_error_unknown_nodes": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "nest.tests.test_csa.csa",
    "nest.tests.test_csa.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_csa.CSATestCase.test_CSA_error_unknown_synapse": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "nest.tests.test_csa.csa",
    "nest.tests.test_csa.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_csa.HAVE_CSA": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "nest.tests.test_csa.HAVE_LIBNEUROSIM": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "nest.tests.test_csa.HAVE_NUMPY": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "nest.tests.test_csa.csa": {
  "data": {
   "shadows": "csa"
  },
  "type": "import"
 },
 "nest.tests.test_csa.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_csa.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_csa.run": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "nest.tests.test_csa.suite",
    "nest.tests.test_csa.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_csa.suite": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "nest.tests.test_csa.CSATestCase",
    "nest.tests.test_csa.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_csa.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_current_recording_generators": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_current_recording_generators.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_current_recording_generators.CurrentRecordingGeneratorTestCase": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "nest.tests.test_current_recording_generators.nest",
    "nest.tests.test_current_recording_generators.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_current_recording_generators.CurrentRecordingGeneratorTestCase.setUp": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "nest.tests.test_current_recording_generators.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_current_recording_generators.CurrentRecordingGeneratorTestCase.test_GetRecordables": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "nest.tests.test_current_recording_generators.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_current_recording_generators.CurrentRecordingGeneratorTestCase.test_RecordedCurrentVectors": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "len",
    "nest.tests.test_current_recording_generators.nest",
    "nest.tests.test_current_recording_generators.numpy"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_current_recording_generators.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_current_recording_generators.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_current_recording_generators.run": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "nest.tests.test_current_recording_generators.suite",
    "nest.tests.test_current_recording_generators.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_current_recording_generators.suite": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "nest.tests.test_current_recording_generators.CurrentRecordingGeneratorTestCase",
    "nest.tests.test_current_recording_generators.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_current_recording_generators.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_dataconnect": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_dataconnect.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_dataconnect.DataConnectTestCase": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "nest.tests.test_dataconnect.nest",
    "nest.tests.test_dataconnect.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_dataconnect.DataConnectTestCase.test_DataConnect": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "list",
    "nest.tests.test_dataconnect.nest",
    "range"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_dataconnect.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_dataconnect.run": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "nest.tests.test_dataconnect.suite",
    "nest.tests.test_dataconnect.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_dataconnect.suite": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "nest.tests.test_dataconnect.DataConnectTestCase",
    "nest.tests.test_dataconnect.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_dataconnect.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_erfc_neuron": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_erfc_neuron.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_erfc_neuron.ErfcNeuronTheoryTestCase": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "nest.tests.test_erfc_neuron.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_erfc_neuron.ErfcNeuronTheoryTestCase.build_and_connect_nodes": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "nest.tests.test_erfc_neuron.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_erfc_neuron.ErfcNeuronTheoryTestCase.setUp": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.logspace"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_erfc_neuron.ErfcNeuronTheoryTestCase.test_activation_function": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "nest.tests.test_erfc_neuron.activation_function_theory",
    "nest.tests.test_erfc_neuron.get_mean_activity",
    "nest.tests.test_erfc_neuron.nest",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_erfc_neuron.activation_function_theory": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.sqrt",
    "scipy.special.erfc"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_erfc_neuron.erfc": {
  "data": {
   "shadows": "scipy.special.erfc"
  },
  "type": "import"
 },
 "nest.tests.test_erfc_neuron.get_mean_activity": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "len",
    "nest.tests.test_erfc_neuron.nest",
    "numpy.diff",
    "numpy.hstack",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_erfc_neuron.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_erfc_neuron.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_erfc_neuron.run": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "nest.tests.test_erfc_neuron.suite",
    "nest.tests.test_erfc_neuron.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_erfc_neuron.suite": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "nest.tests.test_erfc_neuron.ErfcNeuronTheoryTestCase",
    "nest.tests.test_erfc_neuron.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_erfc_neuron.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_errors": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_errors.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_errors.ErrorTestCase": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "nest.tests.test_errors.nest",
    "nest.tests.test_errors.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_errors.ErrorTestCase.test_DivisionByZero": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "nest.tests.test_errors.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_errors.ErrorTestCase.test_Raise": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "nest.tests.test_errors.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_errors.ErrorTestCase.test_Raise.raise_custom_exception": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "exc"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_errors.ErrorTestCase.test_StackUnderFlow": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "nest.tests.test_errors.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_errors.ErrorTestCase.test_UnknownModel": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "nest.tests.test_errors.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_errors.ErrorTestCase.test_UnknownNode": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "nest.tests.test_errors.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_errors.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_errors.run": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "nest.tests.test_errors.suite",
    "nest.tests.test_errors.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_errors.suite": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "nest.tests.test_errors.ErrorTestCase",
    "nest.tests.test_errors.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_errors.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_events": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_events.runner",
    "nest.tests.test_events.suite",
    "nest.tests.test_events.unittest"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_events.EventsTestCase": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "nest.tests.test_events.nest",
    "nest.tests.test_events.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_events.EventsTestCase.test_EventsSpikes": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "len",
    "nest.tests.test_events.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_events.EventsTestCase.test_EventsVoltage": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "len",
    "nest.tests.test_events.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_events.EventsTestCase.test_Events_1": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "nest.tests.test_events.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_events.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_events.runner": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "nest.tests.test_events.suite": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "nest.tests.test_events.EventsTestCase",
    "nest.tests.test_events.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_events.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_facetshw_stdp": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_facetshw_stdp.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_facetshw_stdp.FacetsTestCase": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "nest.tests.test_facetshw_stdp.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_facetshw_stdp.FacetsTestCase.test_facetshw_stdp": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "all",
    "float",
    "int",
    "len",
    "nest.tests.test_facetshw_stdp.nest",
    "numpy.allclose",
    "numpy.arange",
    "numpy.array",
    "numpy.atleast_1d",
    "numpy.exp",
    "numpy.ones_like",
    "range"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_facetshw_stdp.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_facetshw_stdp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_facetshw_stdp.run": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "nest.tests.test_facetshw_stdp.suite",
    "nest.tests.test_facetshw_stdp.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_facetshw_stdp.suite": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "nest.tests.test_facetshw_stdp.FacetsTestCase",
    "nest.tests.test_facetshw_stdp.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_facetshw_stdp.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_getconnections": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_getconnections.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_getconnections.GetConnectionsTestCase": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "nest.tests.test_getconnections.nest",
    "nest.tests.test_getconnections.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_getconnections.GetConnectionsTestCase.test_GetConnections": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "nest.tests.test_getconnections.nest",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_getconnections.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_getconnections.run": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "nest.tests.test_getconnections.suite",
    "nest.tests.test_getconnections.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_getconnections.suite": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "nest.tests.test_getconnections.GetConnectionsTestCase",
    "nest.tests.test_getconnections.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_getconnections.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_helper_functions": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_helper_functions.runner",
    "nest.tests.test_helper_functions.suite",
    "nest.tests.test_helper_functions.unittest"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_helper_functions.TestHelperFunctions": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "nest.tests.test_helper_functions.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_helper_functions.TestHelperFunctions.test_get_verbosity": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "nest.tests.test_helper_functions.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_helper_functions.TestHelperFunctions.test_set_verbosity": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "nest.tests.test_helper_functions.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_helper_functions.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_helper_functions.runner": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "nest.tests.test_helper_functions.suite": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "nest.tests.test_helper_functions.TestHelperFunctions",
    "nest.tests.test_helper_functions.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_helper_functions.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_iaf_psc_alpha_ps": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_iaf_psc_alpha_ps.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_iaf_psc_alpha_ps.IAFPreciseTestCase": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "nest.tests.test_iaf_psc_alpha_ps.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_iaf_psc_alpha_ps.IAFPreciseTestCase.compute_difference": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "iter",
    "nest.tests.test_iaf_psc_alpha_ps.nest",
    "numpy.abs",
    "numpy.any",
    "numpy.average",
    "numpy.isclose",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_iaf_psc_alpha_ps.IAFPreciseTestCase.setUp": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "nest.tests.test_iaf_psc_alpha_ps.nest",
    "numpy.random.RandomState",
    "range"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_iaf_psc_alpha_ps.IAFPreciseTestCase.test_closeness_same_timescales": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "nest.tests.test_iaf_psc_alpha_ps.nest",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_iaf_psc_alpha_ps.IAFPreciseTestCase.test_unequal_different_timescales": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "nest.tests.test_iaf_psc_alpha_ps.nest",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_iaf_psc_alpha_ps.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_iaf_psc_alpha_ps.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_iaf_psc_alpha_ps.run": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "nest.tests.test_iaf_psc_alpha_ps.suite",
    "nest.tests.test_iaf_psc_alpha_ps.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_iaf_psc_alpha_ps.suite": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "nest.tests.test_iaf_psc_alpha_ps.IAFPreciseTestCase",
    "nest.tests.test_iaf_psc_alpha_ps.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_iaf_psc_alpha_ps.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_json": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_json.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_json.StatusTestCase": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "nest.tests.test_json.nest",
    "nest.tests.test_json.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_json.StatusTestCase.test_GetDefaults_JSON": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "nest.tests.test_json.nest",
    "str"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_json.StatusTestCase.test_GetKernelStatus_JSON": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "nest.tests.test_json.nest",
    "str"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_json.StatusTestCase.test_GetStatus_JSON": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "nest.tests.test_json.nest",
    "str"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_json.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_json.run": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "nest.tests.test_json.suite",
    "nest.tests.test_json.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_json.suite": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "nest.tests.test_json.StatusTestCase",
    "nest.tests.test_json.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_json.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_labeled_synapses": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_labeled_synapses.nest",
    "nest.tests.test_labeled_synapses.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_labeled_synapses.HAVE_GSL": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "nest.tests.test_labeled_synapses.LabeledSynapsesTestCase": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "nest.tests.test_labeled_synapses.HAVE_GSL",
    "nest.tests.test_labeled_synapses.nest",
    "nest.tests.test_labeled_synapses.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_labeled_synapses.LabeledSynapsesTestCase.default_network": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "nest.tests.test_labeled_synapses.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_labeled_synapses.LabeledSynapsesTestCase.test_GetLabeledSynapses": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "all",
    "nest.tests.test_labeled_synapses.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_labeled_synapses.LabeledSynapsesTestCase.test_SetLabelToNotLabeledSynapse": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "nest.tests.test_labeled_synapses.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_labeled_synapses.LabeledSynapsesTestCase.test_SetLabelToSynapseOnConnect": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "all",
    "nest.tests.test_labeled_synapses.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_labeled_synapses.LabeledSynapsesTestCase.test_SetLabelToSynapseSetDefaults": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "all",
    "nest.tests.test_labeled_synapses.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_labeled_synapses.LabeledSynapsesTestCase.test_SetLabelToSynapseSetStatus": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "all",
    "nest.tests.test_labeled_synapses.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_labeled_synapses.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_labeled_synapses.run": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "nest.tests.test_labeled_synapses.suite",
    "nest.tests.test_labeled_synapses.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_labeled_synapses.suite": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "nest.tests.test_labeled_synapses.LabeledSynapsesTestCase",
    "nest.tests.test_labeled_synapses.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_labeled_synapses.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_mc_neuron": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_mc_neuron.nest",
    "nest.tests.test_mc_neuron.runner",
    "nest.tests.test_mc_neuron.suite",
    "nest.tests.test_mc_neuron.unittest"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_mc_neuron.HAVE_GSL": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "nest.tests.test_mc_neuron.TestMCNeuron": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "nest.tests.test_mc_neuron.HAVE_GSL",
    "nest.tests.test_mc_neuron.unittest",
    "numpy.array",
    "numpy.asarray",
    "numpy.zeros"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_mc_neuron.TestMCNeuron.setUp": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "nest.tests.test_mc_neuron.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_mc_neuron.TestMCNeuron.setUpNetwork": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "enumerate",
    "nest.tests.test_mc_neuron.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_mc_neuron.TestMCNeuron.setUpNodes": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "nest.tests.test_mc_neuron.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_mc_neuron.TestMCNeuron.testNeuron": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "nest.tests.test_mc_neuron.nest",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_mc_neuron.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_mc_neuron.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_mc_neuron.runner": {
  "data": {
   "lineno": 163
  },
  "type": "constant"
 },
 "nest.tests.test_mc_neuron.suite": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "nest.tests.test_mc_neuron.TestMCNeuron",
    "nest.tests.test_mc_neuron.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_mc_neuron.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_networks": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_networks.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_networks.NetworkTestCase": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "nest.tests.test_networks.nest",
    "nest.tests.test_networks.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_networks.NetworkTestCase.test_BeginEndSubnet": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "nest.tests.test_networks.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_networks.NetworkTestCase.test_CurrentSubnet": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "nest.tests.test_networks.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_networks.NetworkTestCase.test_GetChildren": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "nest.tests.test_networks.nest",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_networks.NetworkTestCase.test_GetLeaves": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "nest.tests.test_networks.nest",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_networks.NetworkTestCase.test_GetNetwork": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "len",
    "nest.tests.test_networks.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_networks.NetworkTestCase.test_GetNodes": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "nest.tests.test_networks.nest",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_networks.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_networks.run": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "nest.tests.test_networks.suite",
    "nest.tests.test_networks.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_networks.suite": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "nest.tests.test_networks.NetworkTestCase",
    "nest.tests.test_networks.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_networks.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_onetooneconnect": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_onetooneconnect.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_onetooneconnect.OneToOneConnectTestCase": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "nest.tests.test_onetooneconnect.nest",
    "nest.tests.test_onetooneconnect.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_onetooneconnect.OneToOneConnectTestCase.test_ConnectPrePost": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "nest.tests.test_onetooneconnect.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_onetooneconnect.OneToOneConnectTestCase.test_ConnectPrePostParams": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "nest.tests.test_onetooneconnect.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_onetooneconnect.OneToOneConnectTestCase.test_ConnectPrePostWD": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "nest.tests.test_onetooneconnect.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_onetooneconnect.OneToOneConnectTestCase.test_IllegalConnection": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "nest.tests.test_onetooneconnect.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_onetooneconnect.OneToOneConnectTestCase.test_UnexpectedEvent": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "nest.tests.test_onetooneconnect.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_onetooneconnect.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_onetooneconnect.run": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "nest.tests.test_onetooneconnect.suite",
    "nest.tests.test_onetooneconnect.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_onetooneconnect.suite": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "nest.tests.test_onetooneconnect.OneToOneConnectTestCase",
    "nest.tests.test_onetooneconnect.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_onetooneconnect.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_parrot_neuron": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_parrot_neuron.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_parrot_neuron.ParrotNeuronPoissonTestCase": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "nest.tests.test_parrot_neuron.nest",
    "nest.tests.test_parrot_neuron.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_parrot_neuron.ParrotNeuronPoissonTestCase.test_ParrotNeuronIncomingMultiplicity": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "nest.tests.test_parrot_neuron.math",
    "nest.tests.test_parrot_neuron.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron.ParrotNeuronSTDPTestCase": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "nest.tests.test_parrot_neuron.nest",
    "nest.tests.test_parrot_neuron.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_parrot_neuron.ParrotNeuronSTDPTestCase.run_protocol": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "max",
    "nest.tests.test_parrot_neuron.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron.ParrotNeuronSTDPTestCase.test_ParrotNeuronSTDPProtocolDepression": {
  "data": {
   "lineno": 237
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron.ParrotNeuronSTDPTestCase.test_ParrotNeuronSTDPProtocolPotentiation": {
  "data": {
   "lineno": 228
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron.ParrotNeuronTestCase": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "nest.tests.test_parrot_neuron.nest",
    "nest.tests.test_parrot_neuron.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_parrot_neuron.ParrotNeuronTestCase.setUp": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "nest.tests.test_parrot_neuron.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron.ParrotNeuronTestCase.test_ParrotNeuronIgnoreSpike": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "events",
    "len",
    "nest.tests.test_parrot_neuron.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron.ParrotNeuronTestCase.test_ParrotNeuronOutgoingMultiplicity": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "events",
    "len",
    "nest.tests.test_parrot_neuron.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron.ParrotNeuronTestCase.test_ParrotNeuronRepeatSpike": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "events",
    "nest.tests.test_parrot_neuron.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "nest.tests.test_parrot_neuron.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_parrot_neuron.run": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "nest.tests.test_parrot_neuron.suite",
    "nest.tests.test_parrot_neuron.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron.suite": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "nest.tests.test_parrot_neuron.ParrotNeuronPoissonTestCase",
    "nest.tests.test_parrot_neuron.ParrotNeuronSTDPTestCase",
    "nest.tests.test_parrot_neuron.ParrotNeuronTestCase",
    "nest.tests.test_parrot_neuron.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_parrot_neuron_ps": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_parrot_neuron_ps.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSPoissonTestCase": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "nest.tests.test_parrot_neuron_ps.nest",
    "nest.tests.test_parrot_neuron_ps.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSPoissonTestCase.test_ParrotNeuronIncomingMultiplicity": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "nest.tests.test_parrot_neuron_ps._round_up",
    "nest.tests.test_parrot_neuron_ps.math",
    "nest.tests.test_parrot_neuron_ps.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSSTDPTestCase": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "nest.tests.test_parrot_neuron_ps.nest",
    "nest.tests.test_parrot_neuron_ps.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSSTDPTestCase.run_protocol": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "max",
    "nest.tests.test_parrot_neuron_ps._round_up",
    "nest.tests.test_parrot_neuron_ps.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSSTDPTestCase.test_ParrotNeuronSTDPProtocolDepression": {
  "data": {
   "lineno": 254
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSSTDPTestCase.test_ParrotNeuronSTDPProtocolPotentiation": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSTestCase": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "nest.tests.test_parrot_neuron_ps.nest",
    "nest.tests.test_parrot_neuron_ps.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSTestCase.setUp": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "nest.tests.test_parrot_neuron_ps.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSTestCase.test_ParrotNeuronIgnoreSpike": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "events",
    "len",
    "nest.tests.test_parrot_neuron_ps._round_up",
    "nest.tests.test_parrot_neuron_ps.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSTestCase.test_ParrotNeuronOutgoingMultiplicity": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "events",
    "len",
    "nest.tests.test_parrot_neuron_ps._round_up",
    "nest.tests.test_parrot_neuron_ps.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSTestCase.test_ParrotNeuronRepeatSpike": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "events",
    "nest.tests.test_parrot_neuron_ps._round_up",
    "nest.tests.test_parrot_neuron_ps.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron_ps._round_up": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "float",
    "nest.tests.test_parrot_neuron_ps.math",
    "nest.tests.test_parrot_neuron_ps.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron_ps.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "nest.tests.test_parrot_neuron_ps.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_parrot_neuron_ps.run": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "nest.tests.test_parrot_neuron_ps.suite",
    "nest.tests.test_parrot_neuron_ps.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron_ps.suite": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSPoissonTestCase",
    "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSSTDPTestCase",
    "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSTestCase",
    "nest.tests.test_parrot_neuron_ps.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron_ps.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_pp_psc_delta": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_pp_psc_delta.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_pp_psc_delta.PpPscDeltaTestCase": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "nest.tests.test_pp_psc_delta.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_pp_psc_delta.PpPscDeltaTestCase.test_adapting_threshold": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "len",
    "nest.tests.test_pp_psc_delta.nest",
    "numpy.diff",
    "numpy.mean",
    "numpy.sum",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_pp_psc_delta.PpPscDeltaTestCase.test_random_dead_time": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "len",
    "nest.tests.test_pp_psc_delta.nest",
    "numpy.diff",
    "numpy.mean",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_pp_psc_delta.PpPscDeltaTestCase.test_rate_and_fixed_dead_time": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "len",
    "min",
    "nest.tests.test_pp_psc_delta.nest",
    "numpy.diff"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_pp_psc_delta.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_pp_psc_delta.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_pp_psc_delta.run": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "nest.tests.test_pp_psc_delta.suite",
    "nest.tests.test_pp_psc_delta.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_pp_psc_delta.suite": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "nest.tests.test_pp_psc_delta.PpPscDeltaTestCase",
    "nest.tests.test_pp_psc_delta.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_pp_psc_delta.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_pp_psc_delta_stdp": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_pp_psc_delta_stdp.runner",
    "nest.tests.test_pp_psc_delta_stdp.suite",
    "nest.tests.test_pp_psc_delta_stdp.unittest"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_pp_psc_delta_stdp.PpPscDeltaSTDPTestCase": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "nest.tests.test_pp_psc_delta_stdp.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_pp_psc_delta_stdp.PpPscDeltaSTDPTestCase.test_pp_psc_delta_stdp": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "nest.tests.test_pp_psc_delta_stdp.nest",
    "numpy.arange",
    "range"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_pp_psc_delta_stdp.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_pp_psc_delta_stdp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_pp_psc_delta_stdp.runner": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "nest.tests.test_pp_psc_delta_stdp.suite": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "nest.tests.test_pp_psc_delta_stdp.PpPscDeltaSTDPTestCase",
    "nest.tests.test_pp_psc_delta_stdp.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_pp_psc_delta_stdp.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_quantal_stp_synapse": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_quantal_stp_synapse.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_quantal_stp_synapse.QuantalSTPSynapseTestCase": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "nest.tests.test_quantal_stp_synapse.nest",
    "nest.tests.test_quantal_stp_synapse.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_quantal_stp_synapse.QuantalSTPSynapseTestCase.test_QuantalSTPSynapse": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "int",
    "len",
    "nest.tests.test_quantal_stp_synapse.nest",
    "nest.tests.test_quantal_stp_synapse.numpy",
    "range"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_quantal_stp_synapse.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_quantal_stp_synapse.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_quantal_stp_synapse.run": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "nest.tests.test_quantal_stp_synapse.suite",
    "nest.tests.test_quantal_stp_synapse.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_quantal_stp_synapse.suite": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "nest.tests.test_quantal_stp_synapse.QuantalSTPSynapseTestCase",
    "nest.tests.test_quantal_stp_synapse.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_quantal_stp_synapse.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_rate_copy_model": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_rate_copy_model.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_rate_copy_model.RateCopyModelTestCase": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "nest.tests.test_rate_copy_model.nest",
    "nest.tests.test_rate_copy_model.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_rate_copy_model.RateCopyModelTestCase.test_rate_copy_model": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "events",
    "nest.tests.test_rate_copy_model.nest",
    "numpy.abs",
    "numpy.array",
    "numpy.sum",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_rate_copy_model.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_rate_copy_model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_rate_copy_model.run": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "nest.tests.test_rate_copy_model.suite",
    "nest.tests.test_rate_copy_model.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_rate_copy_model.suite": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "nest.tests.test_rate_copy_model.RateCopyModelTestCase",
    "nest.tests.test_rate_copy_model.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_rate_copy_model.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_rate_instantaneous_and_delayed": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_rate_instantaneous_and_delayed.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_rate_instantaneous_and_delayed.RateInstantaneousAndDelayedTestCase": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "nest.tests.test_rate_instantaneous_and_delayed.nest",
    "nest.tests.test_rate_instantaneous_and_delayed.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_rate_instantaneous_and_delayed.RateInstantaneousAndDelayedTestCase.test_rate_instantaneous_and_delayed": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "events",
    "len",
    "nest.tests.test_rate_instantaneous_and_delayed.nest",
    "numpy.abs",
    "numpy.array",
    "numpy.sum",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_rate_instantaneous_and_delayed.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_rate_instantaneous_and_delayed.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_rate_instantaneous_and_delayed.run": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "nest.tests.test_rate_instantaneous_and_delayed.suite",
    "nest.tests.test_rate_instantaneous_and_delayed.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_rate_instantaneous_and_delayed.suite": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "nest.tests.test_rate_instantaneous_and_delayed.RateInstantaneousAndDelayedTestCase",
    "nest.tests.test_rate_instantaneous_and_delayed.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_rate_instantaneous_and_delayed.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_rate_neuron": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_rate_neuron.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_rate_neuron.RateNeuronTestCase": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "nest.tests.test_rate_neuron.nest",
    "nest.tests.test_rate_neuron.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_rate_neuron.RateNeuronTestCase.setUp": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "nest.tests.test_rate_neuron.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_rate_neuron.RateNeuronTestCase.test_RateNeuronMean": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "events",
    "nest.tests.test_rate_neuron.nest",
    "numpy.isclose",
    "numpy.mean",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_rate_neuron.RateNeuronTestCase.test_RateNeuronNoise": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "events",
    "nest.tests.test_rate_neuron.nest",
    "numpy.isclose",
    "numpy.std",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_rate_neuron.RateNeuronTestCase.test_RateNeuronVariance": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "events",
    "nest.tests.test_rate_neuron.nest",
    "numpy.isclose",
    "numpy.var",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_rate_neuron.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_rate_neuron.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_rate_neuron.run": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "nest.tests.test_rate_neuron.suite",
    "nest.tests.test_rate_neuron.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_rate_neuron.suite": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "nest.tests.test_rate_neuron.RateNeuronTestCase",
    "nest.tests.test_rate_neuron.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_rate_neuron.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_rate_neuron_communication": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_rate_neuron_communication.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_rate_neuron_communication.H": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_rate_neuron_communication.RateNeuronCommunicationTestCase": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "nest.tests.test_rate_neuron_communication.nest",
    "nest.tests.test_rate_neuron_communication.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_rate_neuron_communication.RateNeuronCommunicationTestCase.setUp": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "nest.tests.test_rate_neuron_communication.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_rate_neuron_communication.RateNeuronCommunicationTestCase.test_ParrotRateNeuron": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "events",
    "nest.tests.test_rate_neuron_communication.nest",
    "numpy.isclose",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_rate_neuron_communication.RateNeuronCommunicationTestCase.test_RateNeuronDelay": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "events",
    "nest.tests.test_rate_neuron_communication.nest",
    "numpy.isclose",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_rate_neuron_communication.RateNeuronCommunicationTestCase.test_RateNeuronNL": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "events",
    "nest.tests.test_rate_neuron_communication.H",
    "nest.tests.test_rate_neuron_communication.nest",
    "numpy.allclose",
    "numpy.array",
    "numpy.tanh",
    "numpy.where",
    "zip"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_rate_neuron_communication.RateNeuronCommunicationTestCase.test_RateNeuronWeight": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "events",
    "nest.tests.test_rate_neuron_communication.nest",
    "numpy.isclose",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_rate_neuron_communication.RateNeuronCommunicationTestCase.test_RectifyOutput": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "events",
    "nest.tests.test_rate_neuron_communication.nest",
    "numpy.isclose",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_rate_neuron_communication.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "nest.tests.test_rate_neuron_communication.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_rate_neuron_communication.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_rate_neuron_communication.run": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "nest.tests.test_rate_neuron_communication.suite",
    "nest.tests.test_rate_neuron_communication.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_rate_neuron_communication.suite": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "nest.tests.test_rate_neuron_communication.RateNeuronCommunicationTestCase",
    "nest.tests.test_rate_neuron_communication.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_rate_neuron_communication.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_refractory": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_refractory.ignore_model",
    "nest.tests.test_refractory.nest",
    "nest.tests.test_refractory.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_refractory.TestRefractoryCase": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "nest.tests.test_refractory.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_refractory.TestRefractoryCase.compute_reftime": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "nest.tests.test_refractory.nest",
    "nest.tests.test_refractory.neurons_interspike",
    "nest.tests.test_refractory.neurons_interspike_ps",
    "nest.tests.test_refractory.resolution",
    "numpy.argwhere",
    "numpy.isclose",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_refractory.TestRefractoryCase.reset": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "nest.tests.test_refractory.nest",
    "nest.tests.test_refractory.resolution",
    "range"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_refractory.TestRefractoryCase.test_refractory_time": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "nest.tests.test_refractory.add_connect_param",
    "nest.tests.test_refractory.nest",
    "nest.tests.test_refractory.neurons_interspike",
    "nest.tests.test_refractory.neurons_interspike_ps",
    "nest.tests.test_refractory.neurons_with_clamping",
    "nest.tests.test_refractory.resolution",
    "nest.tests.test_refractory.simtime",
    "nest.tests.test_refractory.tested_models"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_refractory.add_connect_param": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "nest.tests.test_refractory.ignore_model": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "nest.tests.test_refractory.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_refractory.neurons_interspike": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "nest.tests.test_refractory.neurons_interspike_ps": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "nest.tests.test_refractory.neurons_with_clamping": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "nest.tests.test_refractory.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_refractory.resolution": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "nest.tests.test_refractory.run": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "nest.tests.test_refractory.suite",
    "nest.tests.test_refractory.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_refractory.simtime": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "nest.tests.test_refractory.suite": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "nest.tests.test_refractory.TestRefractoryCase",
    "nest.tests.test_refractory.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_refractory.tested_models": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "nest.tests.test_refractory.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_regression_issue-1034": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_regression_issue-1034.runner",
    "nest.tests.test_regression_issue-1034.suite",
    "nest.tests.test_regression_issue-1034.unittest"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_regression_issue-1034.PostTraceTestCase": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "nest.tests.test_regression_issue-1034.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_regression_issue-1034.PostTraceTestCase.test_post_trace": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "nest.tests.test_regression_issue-1034.PostTraceTester",
    "numpy.array",
    "numpy.ceil",
    "numpy.sort",
    "numpy.unique",
    "print",
    "scipy.stats.uniform.rvs",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_regression_issue-1034.PostTraceTester": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_regression_issue-1034.PostTraceTester.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "max",
    "numpy.amax"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_regression_issue-1034.PostTraceTester.nest_trace_matches_python_trace": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "nest.tests.test_regression_issue-1034.PostTraceTester.nest_trace_matches_ref_trace_": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "int",
    "len",
    "numpy.allclose",
    "numpy.any",
    "numpy.array",
    "numpy.round",
    "print",
    "reversed",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_regression_issue-1034.PostTraceTester.run_post_trace_test_nest_": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "int",
    "nest.tests.test_regression_issue-1034.nest",
    "numpy.abs",
    "numpy.any",
    "numpy.array",
    "numpy.ceil",
    "print",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_regression_issue-1034.PostTraceTester.run_post_trace_test_python_reference_": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "numpy.ceil",
    "numpy.exp",
    "numpy.round",
    "numpy.zeros",
    "print",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_regression_issue-1034.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_regression_issue-1034.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_regression_issue-1034.runner": {
  "data": {
   "lineno": 326
  },
  "type": "constant"
 },
 "nest.tests.test_regression_issue-1034.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nest.tests.test_regression_issue-1034.sp": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "nest.tests.test_regression_issue-1034.suite": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "nest.tests.test_regression_issue-1034.PostTraceTestCase",
    "nest.tests.test_regression_issue-1034.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_regression_issue-1034.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_siegert_neuron": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_siegert_neuron.nest",
    "nest.tests.test_siegert_neuron.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_siegert_neuron.HAVE_GSL": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "nest.tests.test_siegert_neuron.SiegertNeuronTestCase": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "nest.tests.test_siegert_neuron.HAVE_GSL",
    "nest.tests.test_siegert_neuron.nest",
    "nest.tests.test_siegert_neuron.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_siegert_neuron.SiegertNeuronTestCase.setUp": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "nest.tests.test_siegert_neuron.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_siegert_neuron.SiegertNeuronTestCase.test_RatePrediction": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "events",
    "nest.tests.test_siegert_neuron.nest",
    "numpy.isclose",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_siegert_neuron.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_siegert_neuron.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_siegert_neuron.run": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "nest.tests.test_siegert_neuron.suite",
    "nest.tests.test_siegert_neuron.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_siegert_neuron.suite": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "nest.tests.test_siegert_neuron.SiegertNeuronTestCase",
    "nest.tests.test_siegert_neuron.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_siegert_neuron.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_sp": {
  "data": {},
  "type": "module"
 },
 "nest.tests.test_sp.__author__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "nest.tests.test_sp.mpitest_issue_578_sp": {
  "data": {
   "symbols_in_volume": [
    "nest.tests.test_sp.mpitest_issue_578_sp.HAVE_GSL",
    "nest.tests.test_sp.mpitest_issue_578_sp.TestIssue578",
    "nest.tests.test_sp.mpitest_issue_578_sp.mpitest",
    "nest.tests.test_sp.mpitest_issue_578_sp.nest",
    "print"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_sp.mpitest_issue_578_sp.HAVE_GSL": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "nest.tests.test_sp.mpitest_issue_578_sp.TestIssue578": {
  "data": {
   "lineno": 33
  },
  "type": "class"
 },
 "nest.tests.test_sp.mpitest_issue_578_sp.TestIssue578.test_targets": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "nest.tests.test_sp.mpitest_issue_578_sp.nest",
    "nest.tests.test_sp.mpitest_issue_578_sp.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.mpitest_issue_578_sp.mpitest": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "nest.tests.test_sp.mpitest_issue_578_sp.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.mpitest_issue_578_sp.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nest.tests.test_sp.mpitest_issue_578_sp.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "nest.tests.test_sp.suite": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "nest.tests.test_sp.test_all": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_sp.test_all.HAVE_MPI",
    "nest.tests.test_sp.test_all.nest",
    "nest.tests.test_sp.test_all.runner",
    "nest.tests.test_sp.test_all.suite",
    "nest.tests.test_sp.test_all.unittest",
    "print"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_sp.test_all.HAVE_MPI": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "nest.tests.test_sp.test_all.__author__": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "nest.tests.test_sp.test_all.call": {
  "data": {
   "shadows": "subprocess.call"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_all.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_all.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_all.runner": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "nest.tests.test_sp.test_all.suite": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_all.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_all.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_all.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_conn_builder": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_sp.test_conn_builder.unittest"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_sp.test_conn_builder.TestSPBuilder": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_conn_builder.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_sp.test_conn_builder.TestSPBuilder.setUp": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_conn_builder.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_conn_builder.TestSPBuilder.test_not_implemented_rules": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_conn_builder.nest",
    "str"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_conn_builder.TestSPBuilder.test_synapse_initialisation_all_to_all": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_conn_builder.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_conn_builder.TestSPBuilder.test_synapse_initialisation_one_to_one": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_conn_builder.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_conn_builder.__author__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "nest.tests.test_sp.test_conn_builder.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_conn_builder.suite": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_conn_builder.TestSPBuilder",
    "nest.tests.test_sp.test_conn_builder.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_conn_builder.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_disconnect": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "nest.tests.test_sp.test_disconnect.nest",
    "nest.tests.test_sp.test_disconnect.unittest"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_sp.test_disconnect.MPI": {
  "data": {
   "shadows": "mpi4py.MPI"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_disconnect.TestDisconnectSingle": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_disconnect.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_sp.test_disconnect.TestDisconnectSingle.setUp": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "mpi4py.MPI.COMM_WORLD",
    "nest.tests.test_sp.test_disconnect.mpi_test",
    "nest.tests.test_sp.test_disconnect.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect.TestDisconnectSingle.test_simple": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_disconnect.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect.TestDisconnectSingle.test_synapse_deletion_one_to_one_no_sp": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "filter",
    "len",
    "list",
    "nest.tests.test_sp.test_disconnect.mpi_test",
    "nest.tests.test_sp.test_disconnect.nest",
    "print"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect.__author__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "nest.tests.test_sp.test_disconnect.mpi_test": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "nest.tests.test_sp.test_disconnect.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_disconnect.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_disconnect.suite": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_disconnect.TestDisconnectSingle",
    "nest.tests.test_sp.test_disconnect.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_disconnect_multiple": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_sp.test_disconnect_multiple.unittest"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_sp.test_disconnect_multiple.TestDisconnect": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_disconnect_multiple.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_sp.test_disconnect_multiple.TestDisconnect.setUp": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_disconnect_multiple.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect_multiple.TestDisconnect.test_disconnect_all_to_all": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_disconnect_multiple.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect_multiple.TestDisconnect.test_disconnect_defaults": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_disconnect_multiple.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect_multiple.TestDisconnect.test_disconnect_static_synapse": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_disconnect_multiple.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect_multiple.TestDisconnect.test_multiple_synapse_deletion_all_to_all": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_disconnect_multiple.nest",
    "range"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect_multiple.TestDisconnect.test_multiple_synapse_deletion_one_to_one": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_disconnect_multiple.nest",
    "range"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect_multiple.TestDisconnect.test_multiple_synapse_deletion_one_to_one_no_sp": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "len",
    "nest.tests.test_sp.test_disconnect_multiple.nest",
    "range"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect_multiple.TestDisconnect.test_single_synapse_deletion_sp": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_disconnect_multiple.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect_multiple.__author__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "nest.tests.test_sp.test_disconnect_multiple.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_disconnect_multiple.suite": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_disconnect_multiple.TestDisconnect",
    "nest.tests.test_sp.test_disconnect_multiple.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect_multiple.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_enable_multithread": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_sp.test_enable_multithread.nest",
    "nest.tests.test_sp.test_enable_multithread.unittest"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_sp.test_enable_multithread.HAVE_OPENMP": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "nest.tests.test_sp.test_enable_multithread.TestEnableMultithread": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_enable_multithread.HAVE_OPENMP",
    "nest.tests.test_sp.test_enable_multithread.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_sp.test_enable_multithread.TestEnableMultithread.setUp": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_enable_multithread.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_enable_multithread.TestEnableMultithread.test_enable_multithread": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_enable_multithread.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_enable_multithread.TestEnableMultithread.test_multithread_enable": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_enable_multithread.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_enable_multithread.__author__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "nest.tests.test_sp.test_enable_multithread.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_enable_multithread.suite": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_enable_multithread.TestEnableMultithread",
    "nest.tests.test_sp.test_enable_multithread.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_enable_multithread.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_get_sp_status": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_sp.test_get_sp_status.unittest"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_sp.test_get_sp_status.TestGetStructuralPlasticityStatus": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "all",
    "nest.tests.test_sp.test_get_sp_status.nest",
    "nest.tests.test_sp.test_get_sp_status.unittest",
    "print"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_sp.test_get_sp_status.__author__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "nest.tests.test_sp.test_get_sp_status.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_get_sp_status.suite": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_get_sp_status.TestGetStructuralPlasticityStatus",
    "nest.tests.test_sp.test_get_sp_status.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_get_sp_status.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_growth_curves": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_sp.test_growth_curves.nest",
    "nest.tests.test_sp.test_growth_curves.unittest"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_sp.test_growth_curves.GaussianNumericSEI": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_growth_curves.SynapticElementIntegrator"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_sp.test_growth_curves.GaussianNumericSEI.__init__": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_growth_curves.GaussianNumericSEI",
    "nest.tests.test_sp.test_growth_curves.math",
    "super"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.GaussianNumericSEI.get_se": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "scipy.integrate.quad"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.GaussianNumericSEI.growth_curve": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_growth_curves.math"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.HAVE_OPENMP": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "nest.tests.test_sp.test_growth_curves.LinearExactSEI": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_growth_curves.SynapticElementIntegrator"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_sp.test_growth_curves.LinearExactSEI.__init__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_growth_curves.LinearExactSEI",
    "super"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.LinearExactSEI.get_se": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.LinearNumericSEI": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_growth_curves.SynapticElementIntegrator"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_sp.test_growth_curves.LinearNumericSEI.__init__": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_growth_curves.LinearNumericSEI",
    "super"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.LinearNumericSEI.get_se": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "scipy.integrate.quad"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.LinearNumericSEI.growth_curve": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.SigmoidNumericSEI": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_growth_curves.SynapticElementIntegrator"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_sp.test_growth_curves.SigmoidNumericSEI.__init__": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_growth_curves.SigmoidNumericSEI",
    "super"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.SigmoidNumericSEI.get_se": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "scipy.integrate.quad"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.SigmoidNumericSEI.growth_curve": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_growth_curves.math"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.SynapticElementIntegrator": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_sp.test_growth_curves.SynapticElementIntegrator.__init__": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.SynapticElementIntegrator.get_ca": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_growth_curves.math"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.SynapticElementIntegrator.get_se": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.SynapticElementIntegrator.handle_spike": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.SynapticElementIntegrator.reset": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.TestGrowthCurve": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_growth_curves.HAVE_OPENMP",
    "nest.tests.test_sp.test_growth_curves.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_sp.test_growth_curves.TestGrowthCurve.setUp": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_growth_curves.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.TestGrowthCurve.simulate": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "nest.tests.test_sp.test_growth_curves.nest",
    "nest.tests.test_sp.test_growth_curves.numpy",
    "nest.tests.test_sp.test_growth_curves.time",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.TestGrowthCurve.test_gaussian_growth_curve": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_growth_curves.GaussianNumericSEI",
    "nest.tests.test_sp.test_growth_curves.nest",
    "nest.tests.test_sp.test_growth_curves.numpy",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.TestGrowthCurve.test_linear_growth_curve": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_growth_curves.LinearExactSEI",
    "nest.tests.test_sp.test_growth_curves.LinearNumericSEI",
    "nest.tests.test_sp.test_growth_curves.nest",
    "nest.tests.test_sp.test_growth_curves.numpy",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.TestGrowthCurve.test_sigmoid_growth_curve": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_growth_curves.SigmoidNumericSEI",
    "nest.tests.test_sp.test_growth_curves.nest",
    "nest.tests.test_sp.test_growth_curves.numpy",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_growth_curves.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_growth_curves.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_growth_curves.quad": {
  "data": {
   "shadows": "scipy.integrate.quad"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_growth_curves.suite": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_growth_curves.TestGrowthCurve",
    "nest.tests.test_sp.test_growth_curves.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.testing": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_growth_curves.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_growth_curves.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_mpitests": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_sp.test_mpitests.nest",
    "nest.tests.test_sp.test_mpitests.runner",
    "nest.tests.test_sp.test_mpitests.suite",
    "nest.tests.test_sp.test_mpitests.unittest"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_sp.test_mpitests.HAVE_MPI": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "nest.tests.test_sp.test_mpitests.TestStructuralPlasticityMPI": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_mpitests.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_sp.test_mpitests.TestStructuralPlasticityMPI.testWithMPI": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_mpitests.HAVE_MPI",
    "nest.tests.test_sp.test_mpitests.nest",
    "nest.tests.test_sp.test_mpitests.os",
    "nest.tests.test_sp.test_mpitests.unittest",
    "print",
    "subprocess.call"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_mpitests.call": {
  "data": {
   "shadows": "subprocess.call"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_mpitests.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_mpitests.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_mpitests.runner": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "nest.tests.test_sp.test_mpitests.suite": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_mpitests.TestStructuralPlasticityMPI",
    "nest.tests.test_sp.test_mpitests.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_mpitests.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_sp_manager": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_sp.test_sp_manager.unittest"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_sp.test_sp_manager.TestStructuralPlasticityManager": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_sp_manager.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_sp.test_sp_manager.TestStructuralPlasticityManager.setUp": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_sp_manager.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_sp_manager.TestStructuralPlasticityManager.test_min_max_delay_using_default_delay": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_sp_manager.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_sp_manager.TestStructuralPlasticityManager.test_register_synapses": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "extract_dict_a_from_b",
    "nest.tests.test_sp.test_sp_manager.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_sp_manager.TestStructuralPlasticityManager.test_synapse_creation": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "len",
    "nest.tests.test_sp.test_sp_manager.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_sp_manager.__author__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "nest.tests.test_sp.test_sp_manager.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_sp_manager.suite": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_sp_manager.TestStructuralPlasticityManager",
    "nest.tests.test_sp.test_sp_manager.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_sp_manager.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_synaptic_elements": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_sp.test_synaptic_elements.unittest"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_sp.test_synaptic_elements.TestSynapticElements": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_synaptic_elements.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_sp.test_synaptic_elements.TestSynapticElements.setUp": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_synaptic_elements.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_synaptic_elements.TestSynapticElements.test_set_defaults": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_synaptic_elements.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_synaptic_elements.TestSynapticElements.test_set_defaults_overwrite": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_synaptic_elements.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_synaptic_elements.TestSynapticElements.test_set_status": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_synaptic_elements.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_synaptic_elements.TestSynapticElements.test_set_status_overwrite": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_synaptic_elements.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_synaptic_elements.__author__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "nest.tests.test_sp.test_synaptic_elements.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_synaptic_elements.suite": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_synaptic_elements.TestSynapticElements",
    "nest.tests.test_sp.test_synaptic_elements.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_synaptic_elements.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_update_synaptic_elements": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_sp.test_update_synaptic_elements.unittest"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_sp.test_update_synaptic_elements.TestUpdateSynapticElements": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_update_synaptic_elements.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_sp.test_update_synaptic_elements.TestUpdateSynapticElements.setUp": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_update_synaptic_elements.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_update_synaptic_elements.TestUpdateSynapticElements.test_update_synaptic_elements": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_update_synaptic_elements.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_update_synaptic_elements.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_update_synaptic_elements.suite": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "nest.tests.test_sp.test_update_synaptic_elements.TestUpdateSynapticElements",
    "nest.tests.test_sp.test_update_synaptic_elements.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_update_synaptic_elements.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.utils": {
  "data": {},
  "type": "module"
 },
 "nest.tests.test_sp.utils.__author__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "nest.tests.test_sp.utils.extract_dict_a_from_b": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_split_simulation": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_split_simulation.runner",
    "nest.tests.test_split_simulation.suite",
    "nest.tests.test_split_simulation.unittest"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_split_simulation.TestSplit": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "nest.tests.test_split_simulation.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_split_simulation.TestSplit.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "nest.tests.test_split_simulation.TestSplit",
    "super"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_split_simulation.TestSplit.runner": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "f",
    "nest.tests.test_split_simulation.nest",
    "zip"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_split_simulation.TestSplit.runs": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "nest.tests.test_split_simulation.nest",
    "range"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_split_simulation.TestSplit.setup": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "nest.tests.test_split_simulation.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_split_simulation.TestSplit.simulate": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "nest.tests.test_split_simulation.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_split_simulation.TestSplit.test_split_match": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "nest.tests.test_split_simulation.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_split_simulation.runner": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "nest.tests.test_split_simulation.suite": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "nest.tests.test_split_simulation.TestSplit",
    "nest.tests.test_split_simulation.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_split_simulation.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_stack": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "nest.tests.test_stack.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_stack.HAVE_NUMPY": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "nest.tests.test_stack.StackTestCase": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "nest.tests.test_stack.nest",
    "nest.tests.test_stack.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_stack.StackTestCase.test_Count": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "nest.tests.test_stack.nest",
    "range"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_stack.StackTestCase.test_PushPop": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "nest.tests.test_stack.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_stack.StackTestCase.test_PushPop_NumPy": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "array.array",
    "hasattr",
    "nest.tests.test_stack.HAVE_NUMPY",
    "nest.tests.test_stack.nest",
    "nest.tests.test_stack.numpy",
    "nest.tests.test_stack.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_stack.StackTestCase.test_PushPop_no_NumPy": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "array.array",
    "nest.tests.test_stack.HAVE_NUMPY",
    "nest.tests.test_stack.nest",
    "nest.tests.test_stack.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_stack.StackTestCase.test_stack_checker": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "check_empty_stack",
    "nest.tests.test_stack.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_stack.StackTestCase.test_stack_checker.empty_stack": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "nest.tests.test_stack.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_stack.StackTestCase.test_stack_checker.leave_on_stack": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "nest.tests.test_stack.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_stack.array": {
  "data": {
   "shadows": "array.array"
  },
  "type": "import"
 },
 "nest.tests.test_stack.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_stack.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_stack.run": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "nest.tests.test_stack.suite",
    "nest.tests.test_stack.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_stack.suite": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "nest.tests.test_stack.StackTestCase",
    "nest.tests.test_stack.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_stack.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_status": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_status.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_status.StatusTestCase": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "nest.tests.test_status.nest",
    "nest.tests.test_status.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_status.StatusTestCase.test_GetDefaults": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "float",
    "len",
    "nest.tests.test_status.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_status.StatusTestCase.test_GetKernelStatus": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "dict",
    "len",
    "nest.tests.test_status.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_status.StatusTestCase.test_GetStatus": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "dict",
    "float",
    "len",
    "nest.tests.test_status.nest",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_status.StatusTestCase.test_SetDefaults": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "nest.tests.test_status.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_status.StatusTestCase.test_SetKernelStatus": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "nest.tests.test_status.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_status.StatusTestCase.test_SetStatus": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "nest.tests.test_status.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_status.StatusTestCase.test_SetStatusList": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "nest.tests.test_status.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_status.StatusTestCase.test_SetStatusParam": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "nest.tests.test_status.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_status.StatusTestCase.test_SetStatusV_th_smaller_V_reset": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "all",
    "nest.tests.test_status.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_status.StatusTestCase.test_SetStatusVth_E_L": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "all",
    "nest.tests.test_status.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_status.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_status.run": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "nest.tests.test_status.suite",
    "nest.tests.test_status.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_status.suite": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "nest.tests.test_status.StatusTestCase",
    "nest.tests.test_status.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_status.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_stdp_multiplicity": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_stdp_multiplicity.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_stdp_multiplicity.StdpSpikeMultiplicity": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "nest.tests.test_stdp_multiplicity.nest",
    "nest.tests.test_stdp_multiplicity.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_stdp_multiplicity.StdpSpikeMultiplicity.run_protocol": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "max",
    "nest.tests.test_stdp_multiplicity.nest",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_stdp_multiplicity.StdpSpikeMultiplicity.test_ParrotNeuronSTDPProtocolDepression": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "all",
    "numpy.array",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_stdp_multiplicity.StdpSpikeMultiplicity.test_ParrotNeuronSTDPProtocolPotentiation": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "all",
    "numpy.array",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_stdp_multiplicity.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "nest.tests.test_stdp_multiplicity.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_stdp_multiplicity.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_stdp_multiplicity.run": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "nest.tests.test_stdp_multiplicity.suite",
    "nest.tests.test_stdp_multiplicity.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_stdp_multiplicity.suite": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "nest.tests.test_stdp_multiplicity.StdpSpikeMultiplicity",
    "nest.tests.test_stdp_multiplicity.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_stdp_multiplicity.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_stdp_triplet_synapse": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_stdp_triplet_synapse.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "nest.tests.test_stdp_triplet_synapse.nest",
    "nest.tests.test_stdp_triplet_synapse.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.assertAlmostEqualDetailed": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.decay": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "math.exp"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.depress": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "abs",
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.facilitate": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "abs",
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.generateSpikes": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "nest.tests.test_stdp_triplet_synapse.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.setUp": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "nest.tests.test_stdp_triplet_synapse.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.status": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "nest.tests.test_stdp_triplet_synapse.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.test_badPropertiesSetupsThrowExceptions": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "badPropertyWith"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.test_badPropertiesSetupsThrowExceptions.badPropertyWith": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "nest.tests.test_stdp_triplet_synapse.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.test_badPropertiesSetupsThrowExceptions.setupProperty": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "nest.tests.test_stdp_triplet_synapse.nest",
    "property"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.test_maxWeightStaturatesWeight": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "nest.tests.test_stdp_triplet_synapse.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.test_preVarsDecayAfterPostSpike": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "nest.tests.test_stdp_triplet_synapse.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.test_preVarsDecayAfterPreSpike": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "nest.tests.test_stdp_triplet_synapse.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.test_preVarsIncreaseWithPreSpike": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "nest.tests.test_stdp_triplet_synapse.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.test_varsZeroAtStart": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.test_weightChangeWhenPrePostPreSpikes": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "nest.tests.test_stdp_triplet_synapse.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.test_weightChangeWhenPrePostSpikes": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "nest.tests.test_stdp_triplet_synapse.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletInhTestCase": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase",
    "nest.tests.test_stdp_triplet_synapse.nest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletInhTestCase.setUp": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "nest.tests.test_stdp_triplet_synapse.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "nest.tests.test_stdp_triplet_synapse.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_stdp_triplet_synapse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_stdp_triplet_synapse.run": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "nest.tests.test_stdp_triplet_synapse.suite",
    "nest.tests.test_stdp_triplet_synapse.suite_inh",
    "nest.tests.test_stdp_triplet_synapse.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.suite": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase",
    "nest.tests.test_stdp_triplet_synapse.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.suite_inh": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "nest.tests.test_stdp_triplet_synapse.STDPTripletInhTestCase",
    "nest.tests.test_stdp_triplet_synapse.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_step_rate_generator": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_step_rate_generator.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_step_rate_generator.StepRateGeneratorTestCase": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "nest.tests.test_step_rate_generator.nest",
    "nest.tests.test_step_rate_generator.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_step_rate_generator.StepRateGeneratorTestCase.test_step_rate_generator": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "nest.tests.test_step_rate_generator.nest",
    "numpy.allclose",
    "numpy.array",
    "numpy.array_equal",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_step_rate_generator.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_step_rate_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_step_rate_generator.run": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "nest.tests.test_step_rate_generator.suite",
    "nest.tests.test_step_rate_generator.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_step_rate_generator.suite": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "nest.tests.test_step_rate_generator.StepRateGeneratorTestCase",
    "nest.tests.test_step_rate_generator.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_step_rate_generator.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_threads": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_threads.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_threads.ThreadTestCase": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "nest.tests.test_threads.nest",
    "nest.tests.test_threads.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_threads.ThreadTestCase.nest_multithreaded": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "nest.tests.test_threads.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_threads.ThreadTestCase.test_Threads": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "list",
    "nest.tests.test_threads.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_threads.ThreadTestCase.test_ThreadsGetConnections": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "list",
    "nest.tests.test_threads.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_threads.ThreadTestCase.test_ThreadsGetEvents": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "nest.tests.test_threads.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_threads.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_threads.run": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "nest.tests.test_threads.suite",
    "nest.tests.test_threads.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_threads.suite": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "nest.tests.test_threads.ThreadTestCase",
    "nest.tests.test_threads.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_threads.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_use_gid_in_filename": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_use_gid_in_filename.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_use_gid_in_filename.UseGidInFilenameTestCase": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "nest.tests.test_use_gid_in_filename.nest",
    "nest.tests.test_use_gid_in_filename.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_use_gid_in_filename.UseGidInFilenameTestCase.test_NoGid": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "nest.tests.test_use_gid_in_filename.nest",
    "nest.tests.test_use_gid_in_filename.os"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_use_gid_in_filename.UseGidInFilenameTestCase.test_WithGid": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "nest.tests.test_use_gid_in_filename.nest",
    "nest.tests.test_use_gid_in_filename.os"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_use_gid_in_filename.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_use_gid_in_filename.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nest.tests.test_use_gid_in_filename.run": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "nest.tests.test_use_gid_in_filename.suite",
    "nest.tests.test_use_gid_in_filename.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_use_gid_in_filename.suite": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "nest.tests.test_use_gid_in_filename.UseGidInFilenameTestCase",
    "nest.tests.test_use_gid_in_filename.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_use_gid_in_filename.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_vogels_sprekeler_synapse": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_vogels_sprekeler_synapse.run"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "nest.tests.test_vogels_sprekeler_synapse.nest",
    "nest.tests.test_vogels_sprekeler_synapse.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.assertAlmostEqualDetailed": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.decay": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "math.exp"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.depress": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.facilitate": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.generateSpikes": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "nest.tests.test_vogels_sprekeler_synapse.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.setUp": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "nest.tests.test_vogels_sprekeler_synapse.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.status": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "nest.tests.test_vogels_sprekeler_synapse.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.test_badPropertiesSetupsThrowExceptions": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "badPropertyWith"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.test_badPropertiesSetupsThrowExceptions.badPropertyWith": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "nest.tests.test_vogels_sprekeler_synapse.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.test_badPropertiesSetupsThrowExceptions.setupProperty": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "nest.tests.test_vogels_sprekeler_synapse.nest",
    "property"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.test_maxWeightStaturatesWeight": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "nest.tests.test_vogels_sprekeler_synapse.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.test_preVarsDecayAfterPostSpike": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "nest.tests.test_vogels_sprekeler_synapse.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.test_preVarsDecayAfterPreSpike": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "nest.tests.test_vogels_sprekeler_synapse.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.test_preVarsIncreaseWithPreSpike": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "nest.tests.test_vogels_sprekeler_synapse.nest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.test_varsZeroAtStart": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.test_weightChangeWhenPrePostSpikes": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "nest.tests.test_vogels_sprekeler_synapse.nest",
    "print"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "nest.tests.test_vogels_sprekeler_synapse.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_vogels_sprekeler_synapse.run": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "nest.tests.test_vogels_sprekeler_synapse.suite",
    "nest.tests.test_vogels_sprekeler_synapse.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.suite": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase",
    "nest.tests.test_vogels_sprekeler_synapse.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_weight_recorder": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.tests.test_weight_recorder.nest",
    "nest.tests.test_weight_recorder.runner",
    "nest.tests.test_weight_recorder.suite",
    "nest.tests.test_weight_recorder.unittest"
   ]
  },
  "type": "module"
 },
 "nest.tests.test_weight_recorder.HAVE_GSL": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "nest.tests.test_weight_recorder.WeightRecorderTestCase": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "nest.tests.test_weight_recorder.nest",
    "nest.tests.test_weight_recorder.unittest"
   ]
  },
  "type": "class"
 },
 "nest.tests.test_weight_recorder.WeightRecorderTestCase.is_subset": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.round",
    "set"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_weight_recorder.WeightRecorderTestCase.testDefinedSenders": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "nest.tests.test_weight_recorder.nest",
    "numpy.append",
    "numpy.array",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_weight_recorder.WeightRecorderTestCase.testDefinedTargets": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "nest.tests.test_weight_recorder.nest",
    "numpy.append",
    "numpy.array",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_weight_recorder.WeightRecorderTestCase.testDefinedTargetsAndSenders": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "nest.tests.test_weight_recorder.nest",
    "numpy.append",
    "numpy.array",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_weight_recorder.WeightRecorderTestCase.testMultapses": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "list",
    "nest.tests.test_weight_recorder.nest",
    "numpy.empty",
    "numpy.unique",
    "object",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_weight_recorder.WeightRecorderTestCase.testMultipleThreads": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "nest.tests.test_weight_recorder.nest",
    "numpy.append",
    "numpy.array",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_weight_recorder.WeightRecorderTestCase.testRPorts": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "list",
    "nest.tests.test_weight_recorder.HAVE_GSL",
    "nest.tests.test_weight_recorder.nest",
    "nest.tests.test_weight_recorder.unittest",
    "numpy.empty",
    "numpy.unique",
    "object",
    "range",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_weight_recorder.WeightRecorderTestCase.testSingleThread": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "nest.tests.test_weight_recorder.nest",
    "numpy.append",
    "numpy.array",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_weight_recorder.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_weight_recorder.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_weight_recorder.runner": {
  "data": {
   "lineno": 317
  },
  "type": "constant"
 },
 "nest.tests.test_weight_recorder.suite": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "nest.tests.test_weight_recorder.WeightRecorderTestCase",
    "nest.tests.test_weight_recorder.unittest"
   ]
  },
  "type": "function"
 },
 "nest.tests.test_weight_recorder.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.topology": {
  "data": {},
  "type": "module"
 },
 "nest.topology.hl_api": {
  "data": {},
  "type": "module"
 },
 "nest.topology.hl_api.Axes3D": {
  "data": {
   "shadows": "mpl_toolkits.mplot3d.Axes3D"
  },
  "type": "import"
 },
 "nest.topology.hl_api.ConnectLayers": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "fixdict",
    "len",
    "nest.topology.hl_api.nest",
    "topology_func"
   ]
  },
  "type": "function"
 },
 "nest.topology.hl_api.ConnectLayers.fixdict": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "dict",
    "fixdict",
    "isinstance",
    "nest.topology.hl_api.Mask",
    "nest.topology.hl_api.Parameter"
   ]
  },
  "type": "function"
 },
 "nest.topology.hl_api.CreateLayer": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "TypeError",
    "all",
    "dict",
    "isinstance",
    "list",
    "nest.topology.hl_api.nest",
    "topology_func"
   ]
  },
  "type": "function"
 },
 "nest.topology.hl_api.CreateMask": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "nest.topology.hl_api.Mask",
    "topology_func"
   ]
  },
  "type": "function"
 },
 "nest.topology.hl_api.CreateParameter": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "nest.topology.hl_api.Parameter",
    "topology_func"
   ]
  },
  "type": "function"
 },
 "nest.topology.hl_api.Displacement": {
  "data": {
   "lineno": 1207,
   "symbols_in_volume": [
    "nest.topology.hl_api._check_displacement_args",
    "topology_func"
   ]
  },
  "type": "function"
 },
 "nest.topology.hl_api.Distance": {
  "data": {
   "lineno": 1277,
   "symbols_in_volume": [
    "nest.topology.hl_api._check_displacement_args",
    "topology_func"
   ]
  },
  "type": "function"
 },
 "nest.topology.hl_api.DumpLayerConnections": {
  "data": {
   "lineno": 1426,
   "symbols_in_volume": [
    "nest.topology.hl_api._rank_specific_filename",
    "topology_func"
   ]
  },
  "type": "function"
 },
 "nest.topology.hl_api.DumpLayerNodes": {
  "data": {
   "lineno": 1364,
   "symbols_in_volume": [
    "nest.topology.hl_api._rank_specific_filename",
    "topology_func"
   ]
  },
  "type": "function"
 },
 "nest.topology.hl_api.FindCenterElement": {
  "data": {
   "lineno": 1502,
   "symbols_in_volume": [
    "TypeError",
    "nest.topology.hl_api.FindNearestElement",
    "nest.topology.hl_api.nest",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nest.topology.hl_api.FindNearestElement": {
  "data": {
   "lineno": 1051,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "list",
    "nest.topology.hl_api.Distance",
    "nest.topology.hl_api.nest",
    "nest.topology.hl_api.numpy",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nest.topology.hl_api.GetElement": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "make_tuple",
    "nest.topology.hl_api.nest",
    "topology_func",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nest.topology.hl_api.GetElement.make_tuple": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": [
    "nest.topology.hl_api.nest"
   ]
  },
  "type": "function"
 },
 "nest.topology.hl_api.GetLayer": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "TypeError",
    "nest.topology.hl_api.nest",
    "topology_func"
   ]
  },
  "type": "function"
 },
 "nest.topology.hl_api.GetPosition": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "TypeError",
    "nest.topology.hl_api.nest",
    "topology_func"
   ]
  },
  "type": "function"
 },
 "nest.topology.hl_api.GetTargetNodes": {
  "data": {
   "lineno": 1559,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "len",
    "nest.topology.hl_api.nest",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nest.topology.hl_api.GetTargetPositions": {
  "data": {
   "lineno": 1654,
   "symbols_in_volume": [
    "nest.topology.hl_api.GetPosition",
    "nest.topology.hl_api.GetTargetNodes",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nest.topology.hl_api.Mask": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nest.topology.hl_api.Mask.Inside": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "topology_func"
   ]
  },
  "type": "function"
 },
 "nest.topology.hl_api.Mask.__and__": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "nest.topology.hl_api.Mask.__init__": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "nest.topology.hl_api.nest"
   ]
  },
  "type": "function"
 },
 "nest.topology.hl_api.Mask.__or__": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "nest.topology.hl_api.Mask.__sub__": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "nest.topology.hl_api.Mask._binop": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "nest.topology.hl_api.Mask",
    "topology_func"
   ]
  },
  "type": "function"
 },
 "nest.topology.hl_api.Parameter": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nest.topology.hl_api.Parameter.GetValue": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "topology_func"
   ]
  },
  "type": "function"
 },
 "nest.topology.hl_api.Parameter.__add__": {
  "data": {
   "lineno": 322
  },
  "type": "function"
 },
 "nest.topology.hl_api.Parameter.__div__": {
  "data": {
   "lineno": 331
  },
  "type": "function"
 },
 "nest.topology.hl_api.Parameter.__init__": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "nest.topology.hl_api.nest"
   ]
  },
  "type": "function"
 },
 "nest.topology.hl_api.Parameter.__mul__": {
  "data": {
   "lineno": 328
  },
  "type": "function"
 },
 "nest.topology.hl_api.Parameter.__sub__": {
  "data": {
   "lineno": 325
  },
  "type": "function"
 },
 "nest.topology.hl_api.Parameter.__truediv__": {
  "data": {
   "lineno": 334
  },
  "type": "function"
 },
 "nest.topology.hl_api.Parameter._binop": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "nest.topology.hl_api.Parameter",
    "topology_func"
   ]
  },
  "type": "function"
 },
 "nest.topology.hl_api.PlotKernel": {
  "data": {
   "lineno": 2009,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "matplotlib.pyplot.Circle",
    "matplotlib.pyplot.Rectangle",
    "matplotlib.pyplot.draw",
    "nest.topology.hl_api.GetLayer",
    "nest.topology.hl_api.GetPosition",
    "nest.topology.hl_api._shifted_positions",
    "nest.topology.hl_api.matplotlib",
    "nest.topology.hl_api.nest",
    "nest.topology.hl_api.numpy",
    "range"
   ]
  },
  "type": "function"
 },
 "nest.topology.hl_api.PlotLayer": {
  "data": {
   "lineno": 1754,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "matplotlib.pyplot.draw_if_interactive",
    "matplotlib.pyplot.figure",
    "nest.topology.hl_api.GetPosition",
    "nest.topology.hl_api._draw_extent",
    "nest.topology.hl_api.nest",
    "zip"
   ]
  },
  "type": "function"
 },
 "nest.topology.hl_api.PlotTargets": {
  "data": {
   "lineno": 1861,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.draw_if_interactive",
    "matplotlib.pyplot.figure",
    "nest.topology.hl_api.GetPosition",
    "nest.topology.hl_api.GetTargetPositions",
    "nest.topology.hl_api.PlotKernel",
    "nest.topology.hl_api._draw_extent",
    "nest.topology.hl_api.nest",
    "zip"
   ]
  },
  "type": "function"
 },
 "nest.topology.hl_api.SelectNodesByMask": {
  "data": {
   "lineno": 2210,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "topology_func"
   ]
  },
  "type": "function"
 },
 "nest.topology.hl_api.__all__": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "nest.topology.hl_api._check_displacement_args": {
  "data": {
   "lineno": 1171,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "nest.topology.hl_api.nest",
    "nest.topology.hl_api.numpy"
   ]
  },
  "type": "function"
 },
 "nest.topology.hl_api._draw_extent": {
  "data": {
   "lineno": 1723,
   "symbols_in_volume": [
    "matplotlib.pyplot.Rectangle",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nest.topology.hl_api._rank_specific_filename": {
  "data": {
   "lineno": 1348,
   "symbols_in_volume": [
    "len",
    "nest.topology.hl_api.nest",
    "str"
   ]
  },
  "type": "function"
 },
 "nest.topology.hl_api._shifted_positions": {
  "data": {
   "lineno": 1742
  },
  "type": "function"
 },
 "nest.topology.hl_api.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "nest.topology.hl_api.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.topology.hl_api.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.topology.hl_api.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.topology.hl_api.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "nest.topology.ll_api": {
  "data": {},
  "type": "module"
 },
 "nest.topology.ll_api.__all__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "nest.topology.ll_api.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.topology.ll_api.topology_func": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "nest.topology.ll_api.nest"
   ]
  },
  "type": "function"
 },
 "nest.topology.test": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "nest.topology.unittest"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests": {
  "data": {},
  "type": "module"
 },
 "nest.topology.tests.suite": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "nest.topology.tests.test_all": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.topology.tests.test_all.runner",
    "nest.topology.tests.test_all.suite",
    "nest.topology.tests.test_all.unittest"
   ]
  },
  "type": "module"
 },
 "nest.topology.tests.test_all.compatibility": {
  "data": {
   "shadows": "nest.tests.compatibility"
  },
  "type": "import"
 },
 "nest.topology.tests.test_all.runner": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "nest.topology.tests.test_all.suite": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "nest.topology.tests.test_all.unittest"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_all.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.topology.tests.test_basics": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "nest.topology.tests.test_basics.runner",
    "nest.topology.tests.test_basics.suite",
    "nest.topology.tests.test_basics.unittest"
   ]
  },
  "type": "module"
 },
 "nest.topology.tests.test_basics.BasicsTestCase": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "nest.topology.tests.test_basics.unittest"
   ]
  },
  "type": "class"
 },
 "nest.topology.tests.test_basics.BasicsTestCase.test_CreateLayer": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "len",
    "nest.topology.CreateLayer",
    "nest.topology.tests.test_basics.nest"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_basics.BasicsTestCase.test_CreateLayerN": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "len",
    "nest.topology.CreateLayer",
    "nest.topology.tests.test_basics.nest"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_basics.BasicsTestCase.test_Displacement": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "all",
    "len",
    "nest.topology.CreateLayer",
    "nest.topology.Displacement",
    "nest.topology.tests.test_basics.HAVE_NUMPY",
    "nest.topology.tests.test_basics.nest",
    "nest.topology.tests.test_basics.unittest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_basics.BasicsTestCase.test_Distance": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "all",
    "float",
    "isinstance",
    "len",
    "nest.topology.CreateLayer",
    "nest.topology.Distance",
    "nest.topology.tests.test_basics.HAVE_NUMPY",
    "nest.topology.tests.test_basics.nest",
    "nest.topology.tests.test_basics.unittest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_basics.BasicsTestCase.test_FindElements": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "len",
    "nest.topology.CreateLayer",
    "nest.topology.FindNearestElement",
    "nest.topology.tests.test_basics.HAVE_NUMPY",
    "nest.topology.tests.test_basics.nest",
    "nest.topology.tests.test_basics.unittest",
    "sum"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_basics.BasicsTestCase.test_GetCenterElement": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "nest.topology.CreateLayer",
    "nest.topology.FindCenterElement",
    "nest.topology.tests.test_basics.HAVE_NUMPY",
    "nest.topology.tests.test_basics.nest",
    "nest.topology.tests.test_basics.unittest"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_basics.BasicsTestCase.test_GetElement": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "all",
    "int",
    "len",
    "nest.topology.CreateLayer",
    "nest.topology.GetElement",
    "nest.topology.tests.test_basics.nest"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_basics.BasicsTestCase.test_GetLayer": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "nest.topology.CreateLayer",
    "nest.topology.GetLayer",
    "nest.topology.tests.test_basics.nest",
    "zip"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_basics.BasicsTestCase.test_GetPosition": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "nest.topology.CreateLayer",
    "nest.topology.GetPosition",
    "nest.topology.tests.test_basics.nest",
    "zip"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_basics.BasicsTestCase.test_GetTargetNodesPositions": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "all",
    "len",
    "nest.topology.ConnectLayers",
    "nest.topology.CreateLayer",
    "nest.topology.GetTargetNodes",
    "nest.topology.GetTargetPositions",
    "nest.topology.tests.test_basics.nest"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_basics.BasicsTestCase.test_Parameter": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "int",
    "nest.topology.CreateParameter"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_basics.HAVE_NUMPY": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "nest.topology.tests.test_basics.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "nest.topology.tests.test_basics.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.topology.tests.test_basics.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.topology.tests.test_basics.runner": {
  "data": {
   "lineno": 360
  },
  "type": "constant"
 },
 "nest.topology.tests.test_basics.suite": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "nest.topology.tests.test_basics.BasicsTestCase",
    "nest.topology.tests.test_basics.unittest"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_basics.topo": {
  "data": {
   "shadows": "nest.topology"
  },
  "type": "import"
 },
 "nest.topology.tests.test_basics.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.topology.tests.test_connection_with_elliptical_mask": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.topology.tests.test_connection_with_elliptical_mask.runner",
    "nest.topology.tests.test_connection_with_elliptical_mask.suite",
    "nest.topology.tests.test_connection_with_elliptical_mask.unittest"
   ]
  },
  "type": "module"
 },
 "nest.topology.tests.test_connection_with_elliptical_mask.ConnectWithEllipticalMask": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "nest.topology.tests.test_connection_with_elliptical_mask.unittest"
   ]
  },
  "type": "class"
 },
 "nest.topology.tests.test_connection_with_elliptical_mask.ConnectWithEllipticalMask.setUp": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "nest.topology.tests.test_connection_with_elliptical_mask.nest"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_connection_with_elliptical_mask.ConnectWithEllipticalMask.test_ConnectAnchoredEllipticalMask": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "nest.topology.ConnectLayers",
    "nest.topology.CreateLayer",
    "nest.topology.tests.test_connection_with_elliptical_mask.nest",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_connection_with_elliptical_mask.ConnectWithEllipticalMask.test_ConnectEllipticalMask": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "nest.topology.ConnectLayers",
    "nest.topology.CreateLayer",
    "nest.topology.tests.test_connection_with_elliptical_mask.nest",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_connection_with_elliptical_mask.ConnectWithEllipticalMask.test_ConnectEllipticalMaskWithPeriodicBoundary": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "nest.topology.ConnectLayers",
    "nest.topology.CreateLayer",
    "nest.topology.tests.test_connection_with_elliptical_mask.nest",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_connection_with_elliptical_mask.ConnectWithEllipticalMask.test_ConnectTiltedEllipticalMask": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "nest.topology.ConnectLayers",
    "nest.topology.CreateLayer",
    "nest.topology.tests.test_connection_with_elliptical_mask.nest",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_connection_with_elliptical_mask.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.topology.tests.test_connection_with_elliptical_mask.runner": {
  "data": {
   "lineno": 305
  },
  "type": "constant"
 },
 "nest.topology.tests.test_connection_with_elliptical_mask.suite": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "nest.topology.tests.test_connection_with_elliptical_mask.ConnectWithEllipticalMask",
    "nest.topology.tests.test_connection_with_elliptical_mask.unittest"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_connection_with_elliptical_mask.topo": {
  "data": {
   "shadows": "nest.topology"
  },
  "type": "import"
 },
 "nest.topology.tests.test_connection_with_elliptical_mask.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.topology.tests.test_dumping": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "matplotlib.pyplot.show",
    "nest.topology.tests.test_dumping.runner",
    "nest.topology.tests.test_dumping.suite",
    "nest.topology.tests.test_dumping.unittest"
   ]
  },
  "type": "module"
 },
 "nest.topology.tests.test_dumping.PlottingTestCase": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "nest.topology.tests.test_dumping.unittest"
   ]
  },
  "type": "class"
 },
 "nest.topology.tests.test_dumping.PlottingTestCase.nest_tmpdir": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "nest.topology.tests.test_dumping.os"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_dumping.PlottingTestCase.test_DumpConns": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "nest.topology.ConnectLayers",
    "nest.topology.CreateLayer",
    "nest.topology.DumpLayerConnections",
    "nest.topology.tests.test_dumping.nest",
    "nest.topology.tests.test_dumping.os"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_dumping.PlottingTestCase.test_DumpConns2": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "nest.topology.ConnectLayers",
    "nest.topology.CreateLayer",
    "nest.topology.DumpLayerConnections",
    "nest.topology.tests.test_dumping.nest",
    "nest.topology.tests.test_dumping.os"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_dumping.PlottingTestCase.test_DumpNodes": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "nest.topology.CreateLayer",
    "nest.topology.DumpLayerNodes",
    "nest.topology.tests.test_dumping.nest",
    "nest.topology.tests.test_dumping.os"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_dumping.PlottingTestCase.test_DumpNodes2": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "nest.topology.CreateLayer",
    "nest.topology.DumpLayerNodes",
    "nest.topology.tests.test_dumping.nest",
    "nest.topology.tests.test_dumping.os"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_dumping.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.topology.tests.test_dumping.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nest.topology.tests.test_dumping.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "nest.topology.tests.test_dumping.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "nest.topology.tests.test_dumping.runner": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "nest.topology.tests.test_dumping.suite": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "nest.topology.tests.test_dumping.PlottingTestCase",
    "nest.topology.tests.test_dumping.unittest"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_dumping.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nest.topology.tests.test_dumping.topo": {
  "data": {
   "shadows": "nest.topology"
  },
  "type": "import"
 },
 "nest.topology.tests.test_dumping.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.topology.tests.test_plotting": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.show",
    "nest.topology.tests.test_plotting.runner",
    "nest.topology.tests.test_plotting.suite",
    "nest.topology.tests.test_plotting.unittest"
   ]
  },
  "type": "module"
 },
 "nest.topology.tests.test_plotting.PLOTTING_POSSIBLE": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "nest.topology.tests.test_plotting.PlottingTestCase": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "nest.topology.tests.test_plotting.PLOTTING_POSSIBLE",
    "nest.topology.tests.test_plotting.unittest"
   ]
  },
  "type": "class"
 },
 "nest.topology.tests.test_plotting.PlottingTestCase.test_PlotKernel": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "matplotlib.pyplot.figure",
    "nest.topology.CreateLayer",
    "nest.topology.FindCenterElement",
    "nest.topology.PlotKernel",
    "nest.topology.tests.test_plotting.nest"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_plotting.PlottingTestCase.test_PlotLayer": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "nest.topology.CreateLayer",
    "nest.topology.PlotLayer",
    "nest.topology.tests.test_plotting.nest"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_plotting.PlottingTestCase.test_PlotTargets": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "nest.topology.ConnectLayers",
    "nest.topology.CreateLayer",
    "nest.topology.FindCenterElement",
    "nest.topology.PlotTargets",
    "nest.topology.tests.test_plotting.nest"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_plotting.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.topology.tests.test_plotting.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "nest.topology.tests.test_plotting.runner": {
  "data": {
   "lineno": 119
  },
  "type": "constant"
 },
 "nest.topology.tests.test_plotting.suite": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "nest.topology.tests.test_plotting.PlottingTestCase",
    "nest.topology.tests.test_plotting.unittest"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_plotting.topo": {
  "data": {
   "shadows": "nest.topology"
  },
  "type": "import"
 },
 "nest.topology.tests.test_plotting.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.topology.tests.test_random_parameter": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "nest.topology.tests.test_random_parameter.runner",
    "nest.topology.tests.test_random_parameter.suite",
    "nest.topology.tests.test_random_parameter.unittest"
   ]
  },
  "type": "module"
 },
 "nest.topology.tests.test_random_parameter.HAVE_ERF": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "nest.topology.tests.test_random_parameter.HAVE_NUMPY": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "nest.topology.tests.test_random_parameter.RandomParameterTestCase": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "nest.topology.tests.test_random_parameter.HAVE_NUMPY",
    "nest.topology.tests.test_random_parameter.unittest"
   ]
  },
  "type": "class"
 },
 "nest.topology.tests.test_random_parameter.RandomParameterTestCase.kolmogorov_smirnov": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "expected_cdf_func",
    "float",
    "len",
    "math.sqrt",
    "max",
    "nest.topology.ConnectLayers",
    "nest.topology.CreateLayer",
    "nest.topology.tests.test_random_parameter.nest",
    "nest.topology.tests.test_random_parameter.numpy"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_random_parameter.RandomParameterTestCase.test_lognormal": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "math.erf",
    "nest.topology.tests.test_random_parameter.HAVE_ERF",
    "nest.topology.tests.test_random_parameter.numpy",
    "nest.topology.tests.test_random_parameter.unittest",
    "numpy_erf"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_random_parameter.RandomParameterTestCase.test_lognormal.lognormal_cdf_func": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "math.sqrt",
    "nest.topology.tests.test_random_parameter.numpy",
    "numpy_erf"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_random_parameter.RandomParameterTestCase.test_normal": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "math.erf",
    "nest.topology.tests.test_random_parameter.HAVE_ERF",
    "nest.topology.tests.test_random_parameter.numpy",
    "nest.topology.tests.test_random_parameter.unittest"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_random_parameter.RandomParameterTestCase.test_normal.normal_cdf_func": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "math.sqrt",
    "numpy_erf"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_random_parameter.RandomParameterTestCase.test_uniform": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "nest.topology.tests.test_random_parameter.RandomParameterTestCase.test_uniform.uniform_cdf_func": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "nest.topology.tests.test_random_parameter.erf": {
  "data": {
   "shadows": "math.erf"
  },
  "type": "import"
 },
 "nest.topology.tests.test_random_parameter.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.topology.tests.test_random_parameter.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.topology.tests.test_random_parameter.runner": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "nest.topology.tests.test_random_parameter.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "nest.topology.tests.test_random_parameter.suite": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "nest.topology.tests.test_random_parameter.RandomParameterTestCase",
    "nest.topology.tests.test_random_parameter.unittest"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_random_parameter.topo": {
  "data": {
   "shadows": "nest.topology"
  },
  "type": "import"
 },
 "nest.topology.tests.test_random_parameter.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.topology.tests.test_rotated_rect_mask": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.topology.tests.test_rotated_rect_mask.runner",
    "nest.topology.tests.test_rotated_rect_mask.suite",
    "nest.topology.tests.test_rotated_rect_mask.unittest"
   ]
  },
  "type": "module"
 },
 "nest.topology.tests.test_rotated_rect_mask.RotatedRectangularMask": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "nest.topology.tests.test_rotated_rect_mask.unittest"
   ]
  },
  "type": "class"
 },
 "nest.topology.tests.test_rotated_rect_mask.RotatedRectangularMask.setUp": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "nest.topology.tests.test_rotated_rect_mask.nest"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_rotated_rect_mask.RotatedRectangularMask.test_ConnectWithRotatedRectangleMask": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "list",
    "nest.topology.ConnectLayers",
    "nest.topology.CreateLayer",
    "nest.topology.tests.test_rotated_rect_mask.nest",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_rotated_rect_mask.RotatedRectangularMask.test_RotatedBoxMaskByAzimuthAndPolarAngle": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "nest.topology.CreateLayer",
    "nest.topology.CreateMask",
    "nest.topology.SelectNodesByMask",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_rotated_rect_mask.RotatedRectangularMask.test_RotatedBoxMaskByAzimuthAngle": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "nest.topology.CreateLayer",
    "nest.topology.CreateMask",
    "nest.topology.SelectNodesByMask",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_rotated_rect_mask.RotatedRectangularMask.test_RotatedBoxMaskByPolarAngle": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "nest.topology.CreateLayer",
    "nest.topology.CreateMask",
    "nest.topology.SelectNodesByMask",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_rotated_rect_mask.RotatedRectangularMask.test_RotatedBoxOutsideOrigin": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "nest.topology.CreateLayer",
    "nest.topology.CreateMask",
    "nest.topology.SelectNodesByMask",
    "range"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_rotated_rect_mask.RotatedRectangularMask.test_RotatedRectangleOutsideOrigin": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "nest.topology.CreateLayer",
    "nest.topology.CreateMask",
    "nest.topology.SelectNodesByMask"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_rotated_rect_mask.RotatedRectangularMask.test_RotatedRectangularMask": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "nest.topology.CreateLayer",
    "nest.topology.CreateMask",
    "nest.topology.SelectNodesByMask",
    "nest.topology.tests.test_rotated_rect_mask.nest"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_rotated_rect_mask.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.topology.tests.test_rotated_rect_mask.runner": {
  "data": {
   "lineno": 413
  },
  "type": "constant"
 },
 "nest.topology.tests.test_rotated_rect_mask.suite": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "nest.topology.tests.test_rotated_rect_mask.RotatedRectangularMask",
    "nest.topology.tests.test_rotated_rect_mask.unittest"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_rotated_rect_mask.topo": {
  "data": {
   "shadows": "nest.topology"
  },
  "type": "import"
 },
 "nest.topology.tests.test_rotated_rect_mask.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nest.topology.tests.test_selection_function_and_elliptical_mask.runner",
    "nest.topology.tests.test_selection_function_and_elliptical_mask.suite",
    "nest.topology.tests.test_selection_function_and_elliptical_mask.unittest"
   ]
  },
  "type": "module"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "nest.topology.tests.test_selection_function_and_elliptical_mask.unittest"
   ]
  },
  "type": "class"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask.setUp": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "nest.topology.tests.test_selection_function_and_elliptical_mask.nest"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask.test_CreateEllipticalMask2D": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "nest.topology.CreateMask"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask.test_EllipsoidalMask3D": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "nest.topology.CreateLayer",
    "nest.topology.CreateMask",
    "nest.topology.SelectNodesByMask",
    "range"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask.test_EllipticalMask2D": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "nest.topology.CreateLayer",
    "nest.topology.CreateMask",
    "nest.topology.SelectNodesByMask",
    "sorted"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask.test_EllipticalMask2DWithAnchor": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "nest.topology.CreateLayer",
    "nest.topology.CreateMask",
    "nest.topology.SelectNodesByMask"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask.test_EllipticalMask2DwithAnchorAndCenteredLayer": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "nest.topology.CreateLayer",
    "nest.topology.CreateMask",
    "nest.topology.SelectNodesByMask"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask.test_SelectNodesByMaskIn2D": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "nest.topology.CreateLayer",
    "nest.topology.CreateMask",
    "nest.topology.SelectNodesByMask",
    "nest.topology.tests.test_selection_function_and_elliptical_mask.nest",
    "sorted"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask.test_SelectNodesByMaskIn3D": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "nest.topology.CreateLayer",
    "nest.topology.CreateMask",
    "nest.topology.SelectNodesByMask",
    "range"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask.test_TiltedEllipsoidalMask": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "nest.topology.CreateLayer",
    "nest.topology.CreateMask",
    "nest.topology.SelectNodesByMask",
    "nest.topology.tests.test_selection_function_and_elliptical_mask.nest",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask.test_TiltedEllipsoidalMask3DWithAnchor": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "nest.topology.CreateLayer",
    "nest.topology.CreateMask",
    "nest.topology.SelectNodesByMask",
    "range"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask.test_TiltedEllipticalMask2DWithAnchor": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "nest.topology.CreateLayer",
    "nest.topology.CreateMask",
    "nest.topology.SelectNodesByMask",
    "sorted"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.runner": {
  "data": {
   "lineno": 362
  },
  "type": "constant"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.suite": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask",
    "nest.topology.tests.test_selection_function_and_elliptical_mask.unittest"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.topo": {
  "data": {
   "shadows": "nest.topology"
  },
  "type": "import"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.topology.tests.test_spatial_kernels": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.show",
    "nest.topology.tests.test_spatial_kernels.DEBUG_MODE",
    "nest.topology.tests.test_spatial_kernels.PLOTTING_POSSIBLE",
    "nest.topology.tests.test_spatial_kernels.PlottingSpatialTester",
    "nest.topology.tests.test_spatial_kernels.SEED",
    "nest.topology.tests.test_spatial_kernels.fig",
    "nest.topology.tests.test_spatial_kernels.runner",
    "nest.topology.tests.test_spatial_kernels.suite",
    "nest.topology.tests.test_spatial_kernels.test",
    "nest.topology.tests.test_spatial_kernels.unittest",
    "print"
   ]
  },
  "type": "module"
 },
 "nest.topology.tests.test_spatial_kernels.Axes3D": {
  "data": {
   "shadows": "mpl_toolkits.mplot3d.Axes3D"
  },
  "type": "import"
 },
 "nest.topology.tests.test_spatial_kernels.DEBUG_MODE": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "nest.topology.tests.test_spatial_kernels.PLOTTING_POSSIBLE": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "nest.topology.tests.test_spatial_kernels.P_MIN": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "nest.topology.tests.test_spatial_kernels.PlottingSpatialTester": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "nest.topology.tests.test_spatial_kernels.SpatialTester"
   ]
  },
  "type": "class"
 },
 "nest.topology.tests.test_spatial_kernels.PlottingSpatialTester.__init__": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "nest.topology.tests.test_spatial_kernels.SpatialTester"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.PlottingSpatialTester.show_CDF": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.legend",
    "matplotlib.pyplot.plot",
    "matplotlib.pyplot.step",
    "matplotlib.pyplot.xlabel",
    "matplotlib.pyplot.ylabel",
    "matplotlib.pyplot.ylim",
    "numpy.linspace",
    "range"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.PlottingSpatialTester.show_PDF": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.hist",
    "matplotlib.pyplot.legend",
    "matplotlib.pyplot.plot",
    "matplotlib.pyplot.xlabel",
    "matplotlib.pyplot.ylabel",
    "matplotlib.pyplot.ylim",
    "numpy.array",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.PlottingSpatialTester.show_network": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.scatter",
    "matplotlib.pyplot.subplots_adjust",
    "matplotlib.pyplot.xlabel",
    "matplotlib.pyplot.xlim",
    "matplotlib.pyplot.xticks",
    "matplotlib.pyplot.ylabel",
    "matplotlib.pyplot.ylim",
    "matplotlib.pyplot.yticks",
    "max",
    "nest.topology.tests.test_spatial_kernels.fig",
    "round",
    "set"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SEED": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "nest.topology.tests.test_spatial_kernels.math"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester._all_distances": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "nest.topology.Distance",
    "nest.topology.tests.test_spatial_kernels.nest"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester._build": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "list",
    "nest.topology.CreateLayer",
    "nest.topology.FindCenterElement",
    "nest.topology.tests.test_spatial_kernels.nest",
    "numpy.random.uniform",
    "zip"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester._cdf": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "numpy.cumsum"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester._connect": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "nest.topology.ConnectLayers"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester._create_distance_data": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester._pdf": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "max",
    "min",
    "nest.topology.tests.test_spatial_kernels.math",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester._positions": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "nest.topology.GetPosition",
    "nest.topology.tests.test_spatial_kernels.nest",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester._reset": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "nest.topology.tests.test_spatial_kernels.nest",
    "numpy.random.randint",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester._roi_2d": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester._target_distances": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "nest.topology.Distance",
    "nest.topology.tests.test_spatial_kernels.nest"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester._target_positions": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "nest.topology.GetTargetPositions",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester.ks_test": {
  "data": {
   "lineno": 466
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester.z_test": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "abs",
    "len",
    "max",
    "min",
    "nest.topology.tests.test_spatial_kernels.math",
    "numpy.nan",
    "sum"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2D": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "nest.topology.tests.test_spatial_kernels.unittest"
   ]
  },
  "type": "class"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2D.test_constant": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "nest.topology.tests.test_spatial_kernels.P_MIN",
    "nest.topology.tests.test_spatial_kernels.SEED",
    "nest.topology.tests.test_spatial_kernels.SpatialTester"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2D.test_exponential": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "nest.topology.tests.test_spatial_kernels.P_MIN",
    "nest.topology.tests.test_spatial_kernels.SEED",
    "nest.topology.tests.test_spatial_kernels.SpatialTester"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2D.test_gamma": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "nest.topology.tests.test_spatial_kernels.P_MIN",
    "nest.topology.tests.test_spatial_kernels.SEED",
    "nest.topology.tests.test_spatial_kernels.SpatialTester"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2D.test_gaussian": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "nest.topology.tests.test_spatial_kernels.P_MIN",
    "nest.topology.tests.test_spatial_kernels.SEED",
    "nest.topology.tests.test_spatial_kernels.SpatialTester"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2D.test_linear": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "nest.topology.tests.test_spatial_kernels.P_MIN",
    "nest.topology.tests.test_spatial_kernels.SEED",
    "nest.topology.tests.test_spatial_kernels.SpatialTester"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2DOBC": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "nest.topology.tests.test_spatial_kernels.unittest"
   ]
  },
  "type": "class"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2DOBC.test_constant": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "nest.topology.tests.test_spatial_kernels.P_MIN",
    "nest.topology.tests.test_spatial_kernels.SEED",
    "nest.topology.tests.test_spatial_kernels.SpatialTester"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2DOBC.test_exponential": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "nest.topology.tests.test_spatial_kernels.P_MIN",
    "nest.topology.tests.test_spatial_kernels.SEED",
    "nest.topology.tests.test_spatial_kernels.SpatialTester"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2DOBC.test_gamma": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "nest.topology.tests.test_spatial_kernels.P_MIN",
    "nest.topology.tests.test_spatial_kernels.SEED",
    "nest.topology.tests.test_spatial_kernels.SpatialTester"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2DOBC.test_gaussian": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "nest.topology.tests.test_spatial_kernels.P_MIN",
    "nest.topology.tests.test_spatial_kernels.SEED",
    "nest.topology.tests.test_spatial_kernels.SpatialTester"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2DOBC.test_linear": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "nest.topology.tests.test_spatial_kernels.P_MIN",
    "nest.topology.tests.test_spatial_kernels.SEED",
    "nest.topology.tests.test_spatial_kernels.SpatialTester"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial3D": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "nest.topology.tests.test_spatial_kernels.unittest"
   ]
  },
  "type": "class"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial3D.test_constant": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "nest.topology.tests.test_spatial_kernels.P_MIN",
    "nest.topology.tests.test_spatial_kernels.SEED",
    "nest.topology.tests.test_spatial_kernels.SpatialTester"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial3D.test_exponential": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "nest.topology.tests.test_spatial_kernels.P_MIN",
    "nest.topology.tests.test_spatial_kernels.SEED",
    "nest.topology.tests.test_spatial_kernels.SpatialTester"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial3D.test_gamma": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "nest.topology.tests.test_spatial_kernels.P_MIN",
    "nest.topology.tests.test_spatial_kernels.SEED",
    "nest.topology.tests.test_spatial_kernels.SpatialTester"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial3D.test_gaussian": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "nest.topology.tests.test_spatial_kernels.P_MIN",
    "nest.topology.tests.test_spatial_kernels.SEED",
    "nest.topology.tests.test_spatial_kernels.SpatialTester"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial3D.test_linear": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "nest.topology.tests.test_spatial_kernels.P_MIN",
    "nest.topology.tests.test_spatial_kernels.SEED",
    "nest.topology.tests.test_spatial_kernels.SpatialTester"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.fig": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "nest.topology.tests.test_spatial_kernels.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "nest.topology.tests.test_spatial_kernels.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.topology.tests.test_spatial_kernels.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.topology.tests.test_spatial_kernels.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "nest.topology.tests.test_spatial_kernels.rnd": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "nest.topology.tests.test_spatial_kernels.runner": {
  "data": {
   "lineno": 770
  },
  "type": "constant"
 },
 "nest.topology.tests.test_spatial_kernels.scipy.integrate": {
  "data": {
   "shadows": "scipy.integrate"
  },
  "type": "import"
 },
 "nest.topology.tests.test_spatial_kernels.scipy.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "nest.topology.tests.test_spatial_kernels.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nest.topology.tests.test_spatial_kernels.suite": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "nest.topology.tests.test_spatial_kernels.TestSpatial2D",
    "nest.topology.tests.test_spatial_kernels.TestSpatial2DOBC",
    "nest.topology.tests.test_spatial_kernels.TestSpatial3D",
    "nest.topology.tests.test_spatial_kernels.unittest"
   ]
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.test": {
  "data": {
   "lineno": 773
  },
  "type": "constant"
 },
 "nest.topology.tests.test_spatial_kernels.topo": {
  "data": {
   "shadows": "nest.topology"
  },
  "type": "import"
 },
 "nest.topology.tests.test_spatial_kernels.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.topology.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.visualization": {
  "data": {},
  "type": "module"
 },
 "nest.visualization.__all__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "nest.visualization.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.visualization.plot_network": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "add_nodes",
    "enumerate",
    "len",
    "map",
    "nest.visualization.nest",
    "nest.visualization.pydot",
    "nest.visualization.types",
    "reduce",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "nest.visualization.plot_network.add_nodes": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "get_name",
    "nest.visualization.pydot"
   ]
  },
  "type": "function"
 },
 "nest.visualization.plot_network.get_name": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "nest.visualization.nest"
   ]
  },
  "type": "function"
 },
 "nest.visualization.pydot": {
  "data": {
   "shadows": "pydot"
  },
  "type": "import"
 },
 "nest.visualization.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "nest.voltage_trace": {
  "data": {},
  "type": "module"
 },
 "nest.voltage_trace.__all__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "nest.voltage_trace._from_memory": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "len",
    "nest.voltage_trace.array",
    "nest.voltage_trace.nest",
    "nest.voltage_trace.numpy",
    "range"
   ]
  },
  "type": "function"
 },
 "nest.voltage_trace.array": {
  "data": {
   "shadows": "array"
  },
  "type": "import"
 },
 "nest.voltage_trace.from_device": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "nest.voltage_trace._from_memory",
    "nest.voltage_trace.from_file",
    "nest.voltage_trace.nest",
    "nest.voltage_trace.numpy",
    "nest.voltage_trace.pylab",
    "print"
   ]
  },
  "type": "function"
 },
 "nest.voltage_trace.from_file": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "nest.voltage_trace.nest",
    "nest.voltage_trace.numpy",
    "nest.voltage_trace.pylab",
    "print"
   ]
  },
  "type": "function"
 },
 "nest.voltage_trace.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.voltage_trace.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.voltage_trace.pylab": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "nest.voltage_trace.show": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "nest.voltage_trace.pylab"
   ]
  },
  "type": "function"
 }
}