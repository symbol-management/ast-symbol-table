{
 "ConnPlotter": {
  "data": {
   "symbols_in_volume": {
    "print": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "module"
 },
 "ConnPlotter.colormaps": {
  "data": {
   "symbols_in_volume": {
    "ConnPlotter.colormaps.ZeroCenterNorm": {
     "line number": [
      190,
      197
     ]
    },
    "ConnPlotter.colormaps.bad_color": {
     "line number": [
      168,
      183
     ]
    },
    "ConnPlotter.colormaps.bluered": {
     "line number": [
      183
     ]
    },
    "ConnPlotter.colormaps.n1": {
     "line number": [
      191
     ]
    },
    "ConnPlotter.colormaps.n2": {
     "line number": [
      198
     ]
    },
    "ConnPlotter.colormaps.redblue": {
     "line number": [
      168
     ]
    },
    "__name__": {
     "line number": [
      187
     ]
    },
    "matplotlib.colors.LinearSegmentedColormap": {
     "line number": [
      157,
      172
     ]
    },
    "numpy.array": {
     "line number": [
      191,
      198
     ]
    },
    "print": {
     "line number": [
      193,
      195,
      200,
      202
     ]
    }
   }
  },
  "type": "module"
 },
 "ConnPlotter.colormaps.ZeroCenterNorm": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "matplotlib.colors.Normalize": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "class"
 },
 "ConnPlotter.colormaps.ZeroCenterNorm.__call__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "matplotlib.cbook.iterable": {
     "line number": [
      78
     ]
    },
    "max": {
     "line number": [
      87
     ]
    },
    "min": {
     "line number": [
      86
     ]
    },
    "numpy.float": {
     "line number": [
      80,
      83,
      92
     ]
    },
    "numpy.ma.array": {
     "line number": [
      83,
      91
     ]
    },
    "numpy.ma.asarray": {
     "line number": [
      80,
      91
     ]
    },
    "numpy.ones": {
     "line number": [
      91
     ]
    },
    "numpy.shape": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "ConnPlotter.colormaps.ZeroCenterNorm.inverse": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      111
     ]
    },
    "matplotlib.cbook.iterable": {
     "line number": [
      114
     ]
    },
    "numpy.asarray": {
     "line number": [
      115
     ]
    },
    "numpy.shape": {
     "line number": [
      117
     ]
    },
    "numpy.zeros": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "ConnPlotter.colormaps.__all__": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "ConnPlotter.colormaps.bad_color": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "ConnPlotter.colormaps.bluered": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "ConnPlotter.colormaps.cbook": {
  "data": {
   "shadows": "matplotlib.cbook"
  },
  "type": "import"
 },
 "ConnPlotter.colormaps.make_colormap": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "ConnPlotter.colormaps.bad_color": {
     "line number": [
      151
     ]
    },
    "ValueError": {
     "line number": [
      142
     ]
    },
    "matplotlib.colors.LinearSegmentedColormap": {
     "line number": [
      144
     ]
    },
    "matplotlib.colors.colorConverter.to_rgb": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "ConnPlotter.colormaps.mc": {
  "data": {
   "shadows": "matplotlib.colors"
  },
  "type": "import"
 },
 "ConnPlotter.colormaps.n1": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "ConnPlotter.colormaps.n2": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "ConnPlotter.colormaps.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ConnPlotter.colormaps.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "ConnPlotter.colormaps.redblue": {
  "data": {
   "lineno": 157
  },
  "type": "constant"
 },
 "ConnPlotter.examples": {
  "data": {},
  "type": "module"
 },
 "ConnPlotter.examples.__all__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "ConnPlotter.examples.complex": {
  "data": {},
  "type": "module"
 },
 "ConnPlotter.examples.complex.complex": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "ConnPlotter.examples.complex.nest": {
     "line number": [
      55
     ]
    },
    "modCopy": {
     "line number": [
      69,
      75,
      81,
      90,
      99,
      108,
      117,
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "ConnPlotter.examples.complex.complex.modCopy": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      39,
      40
     ]
    },
    "isinstance": {
     "line number": [
      39,
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "ConnPlotter.examples.complex.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "ConnPlotter.examples.connplotter_tutorial": {
  "data": {
   "symbols_in_volume": {
    "ConnPlotter.ConnectionPattern": {
     "line number": [
      126,
      357,
      447,
      449,
      493,
      562,
      585,
      588,
      614,
      634,
      684
     ]
    },
    "ConnPlotter.SynType": {
     "line number": [
      494,
      494,
      560,
      560,
      561,
      561,
      583,
      583,
      584,
      584,
      586,
      586,
      587,
      587,
      612,
      612,
      613,
      613,
      630,
      631,
      632,
      633
     ]
    },
    "ConnPlotter.colormaps.bad_color": {
     "line number": [
      628,
      646
     ]
    },
    "ConnPlotter.examples.complex": {
     "line number": [
      356
     ]
    },
    "ConnPlotter.examples.connplotter_tutorial.B_top": {
     "line number": [
      287,
      287
     ]
    },
    "ConnPlotter.examples.connplotter_tutorial.E_id": {
     "line number": [
      295,
      307,
      326
     ]
    },
    "ConnPlotter.examples.connplotter_tutorial.Etgts": {
     "line number": [
      300
     ]
    },
    "ConnPlotter.examples.connplotter_tutorial.Etpos": {
     "line number": [
      306,
      306
     ]
    },
    "ConnPlotter.examples.connplotter_tutorial.Itgts": {
     "line number": [
      301
     ]
    },
    "ConnPlotter.examples.connplotter_tutorial.Itpos": {
     "line number": [
      325,
      325
     ]
    },
    "ConnPlotter.examples.connplotter_tutorial.alltgts": {
     "line number": [
      296,
      297
     ]
    },
    "ConnPlotter.examples.connplotter_tutorial.ax": {
     "line number": [
      309,
      311,
      314,
      317,
      320,
      328,
      330,
      332,
      334,
      336,
      338,
      340
     ]
    },
    "ConnPlotter.examples.connplotter_tutorial.c_cp": {
     "line number": [
      358,
      363,
      383,
      399,
      417,
      426,
      435
     ]
    },
    "ConnPlotter.examples.connplotter_tutorial.c_cp_45": {
     "line number": [
      462
     ]
    },
    "ConnPlotter.examples.connplotter_tutorial.c_cp_75": {
     "line number": [
      457
     ]
    },
    "ConnPlotter.examples.connplotter_tutorial.cc_cp": {
     "line number": [
      615
     ]
    },
    "ConnPlotter.examples.connplotter_tutorial.cc_syns": {
     "line number": [
      614
     ]
    },
    "ConnPlotter.examples.connplotter_tutorial.ccb_cp": {
     "line number": [
      635
     ]
    },
    "ConnPlotter.examples.connplotter_tutorial.ccb_syns": {
     "line number": [
      634
     ]
    },
    "ConnPlotter.examples.connplotter_tutorial.cinv_cp": {
     "line number": [
      563,
      568,
      572
     ]
    },
    "ConnPlotter.examples.connplotter_tutorial.cinv_syns": {
     "line number": [
      562
     ]
    },
    "ConnPlotter.examples.connplotter_tutorial.ctr_id": {
     "line number": [
      290
     ]
    },
    "ConnPlotter.examples.connplotter_tutorial.ctrpos": {
     "line number": [
      309,
      312,
      315,
      318,
      328,
      330,
      332,
      334,
      336
     ]
    },
    "ConnPlotter.examples.connplotter_tutorial.cw1_cp": {
     "line number": [
      591,
      598
     ]
    },
    "ConnPlotter.examples.connplotter_tutorial.cw1_syns": {
     "line number": [
      585
     ]
    },
    "ConnPlotter.examples.connplotter_tutorial.cw2_cp": {
     "line number": [
      594,
      601
     ]
    },
    "ConnPlotter.examples.connplotter_tutorial.cw2_syns": {
     "line number": [
      588
     ]
    },
    "ConnPlotter.examples.connplotter_tutorial.cx_cp": {
     "line number": [
      685,
      703
     ]
    },
    "ConnPlotter.examples.connplotter_tutorial.matplotlib": {
     "line number": [
      54
     ]
    },
    "ConnPlotter.examples.connplotter_tutorial.nd_cp": {
     "line number": [
      495,
      498
     ]
    },
    "ConnPlotter.examples.connplotter_tutorial.nest": {
     "line number": [
      266,
      276,
      285,
      291,
      294,
      295,
      296,
      297
     ]
    },
    "ConnPlotter.examples.connplotter_tutorial.nop": {
     "line number": [
      68
     ]
    },
    "ConnPlotter.examples.connplotter_tutorial.pylab": {
     "line number": [
      63,
      68,
      143,
      191,
      206,
      217,
      238,
      245,
      304,
      305,
      306,
      307,
      308,
      309,
      312,
      312,
      315,
      315,
      318,
      318,
      324,
      325,
      327,
      328,
      330,
      332,
      334,
      336,
      338,
      342,
      364,
      384,
      400,
      418,
      427,
      436,
      458,
      463,
      499,
      564,
      569,
      573,
      592,
      595,
      599,
      602,
      613,
      616,
      628,
      633,
      636,
      686,
      704,
      715
     ]
    },
    "ConnPlotter.examples.connplotter_tutorial.pylab_show": {
     "line number": [
      715
     ]
    },
    "ConnPlotter.examples.connplotter_tutorial.s_cp": {
     "line number": [
      129,
      142,
      190,
      205,
      216,
      237,
      243
     ]
    },
    "ConnPlotter.examples.connplotter_tutorial.showTextTable": {
     "line number": [
      129,
      358,
      495
     ]
    },
    "ConnPlotter.examples.connplotter_tutorial.using_pyreport": {
     "line number": [
      51,
      62,
      707
     ]
    },
    "ConnPlotter.examples.connplotter_tutorial.warnings": {
     "line number": [
      77
     ]
    },
    "ConnPlotter.examples.non_dale": {
     "line number": [
      477
     ]
    },
    "ConnPlotter.examples.simple": {
     "line number": [
      123
     ]
    },
    "ConnPlotter.plotParams.layer_bg": {
     "line number": [
      649
     ]
    },
    "ConnPlotter.plotParams.layer_font": {
     "line number": [
      666
     ]
    },
    "ConnPlotter.plotParams.layer_orientation": {
     "line number": [
      671
     ]
    },
    "ConnPlotter.plotParams.legend_tick_font": {
     "line number": [
      678
     ]
    },
    "ConnPlotter.plotParams.legend_tick_format": {
     "line number": [
      682
     ]
    },
    "ConnPlotter.plotParams.legend_ticks": {
     "line number": [
      681
     ]
    },
    "ConnPlotter.plotParams.legend_title_font": {
     "line number": [
      675
     ]
    },
    "ConnPlotter.plotParams.margins.bottom": {
     "line number": [
      660
     ]
    },
    "ConnPlotter.plotParams.margins.left": {
     "line number": [
      658
     ]
    },
    "ConnPlotter.plotParams.margins.right": {
     "line number": [
      661
     ]
    },
    "ConnPlotter.plotParams.margins.top": {
     "line number": [
      659
     ]
    },
    "ConnPlotter.plotParams.n_kern": {
     "line number": [
      652
     ]
    },
    "ConnPlotter.plotParams.patch_size": {
     "line number": [
      655
     ]
    },
    "ConnPlotter.plotParams.pop_font": {
     "line number": [
      668
     ]
    },
    "ConnPlotter.plotParams.pop_orientation": {
     "line number": [
      672
     ]
    },
    "eval": {
     "line number": [
      274
     ]
    },
    "exec": {
     "line number": [
      270
     ]
    },
    "int": {
     "line number": [
      287,
      287
     ]
    },
    "matplotlib.font_manager.FontProperties": {
     "line number": [
      666,
      668,
      675,
      678
     ]
    },
    "nest.topology.GetElement": {
     "line number": [
      286
     ]
    },
    "nest.topology.GetPosition": {
     "line number": [
      300,
      301,
      307,
      326
     ]
    },
    "print": {
     "line number": [
      708,
      709,
      711,
      714
     ]
    },
    "tuple": {
     "line number": [
      300,
      301
     ]
    },
    "zip": {
     "line number": [
      300,
      301
     ]
    }
   }
  },
  "type": "module"
 },
 "ConnPlotter.examples.connplotter_tutorial.B_top": {
  "data": {
   "lineno": 285
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.E_id": {
  "data": {
   "lineno": 290
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.Etgts": {
  "data": {
   "lineno": 296
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.Etpos": {
  "data": {
   "lineno": 300
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.Itgts": {
  "data": {
   "lineno": 297
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.Itpos": {
  "data": {
   "lineno": 301
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.alltgts": {
  "data": {
   "lineno": 294
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.ax": {
  "data": {
   "lineno": 327
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.c_cp": {
  "data": {
   "lineno": 357
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.c_cp_45": {
  "data": {
   "lineno": 449
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.c_cp_75": {
  "data": {
   "lineno": 447
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.cc_cp": {
  "data": {
   "lineno": 614
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.cc_syns": {
  "data": {
   "lineno": 611
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.ccb_cp": {
  "data": {
   "lineno": 634
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.ccb_syns": {
  "data": {
   "lineno": 629
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.cinv_cp": {
  "data": {
   "lineno": 562
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.cinv_syns": {
  "data": {
   "lineno": 560
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.cpl": {
  "data": {
   "shadows": "ConnPlotter"
  },
  "type": "import"
 },
 "ConnPlotter.examples.connplotter_tutorial.ctr_id": {
  "data": {
   "lineno": 286
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.ctrpos": {
  "data": {
   "lineno": 326
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.cw1_cp": {
  "data": {
   "lineno": 585
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.cw1_syns": {
  "data": {
   "lineno": 583
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.cw2_cp": {
  "data": {
   "lineno": 588
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.cw2_syns": {
  "data": {
   "lineno": 586
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.cx_cp": {
  "data": {
   "lineno": 684
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.ex": {
  "data": {
   "shadows": "ConnPlotter.examples"
  },
  "type": "import"
 },
 "ConnPlotter.examples.connplotter_tutorial.fmgr": {
  "data": {
   "shadows": "matplotlib.font_manager"
  },
  "type": "import"
 },
 "ConnPlotter.examples.connplotter_tutorial.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "ConnPlotter.examples.connplotter_tutorial.nd_cp": {
  "data": {
   "lineno": 493
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "ConnPlotter.examples.connplotter_tutorial.nop": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "ConnPlotter.examples.connplotter_tutorial.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "ConnPlotter.examples.connplotter_tutorial.pylab": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "ConnPlotter.examples.connplotter_tutorial.pylab_show": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.s_cp": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.showTextTable": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "ConnPlotter.examples.connplotter_tutorial.os": {
     "line number": [
      105,
      107,
      108
     ]
    },
    "Exception": {
     "line number": [
      110
     ]
    },
    "open": {
     "line number": [
      98
     ]
    },
    "subprocess.STDOUT": {
     "line number": [
      99,
      103
     ]
    },
    "subprocess.call": {
     "line number": [
      99,
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "ConnPlotter.examples.connplotter_tutorial.subp": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "ConnPlotter.examples.connplotter_tutorial.topo": {
  "data": {
   "shadows": "nest.topology"
  },
  "type": "import"
 },
 "ConnPlotter.examples.connplotter_tutorial.using_pyreport": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "ConnPlotter.examples.connplotter_tutorial.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "ConnPlotter.examples.non_dale": {
  "data": {},
  "type": "module"
 },
 "ConnPlotter.examples.non_dale.non_dale": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "modCopy": {
     "line number": [
      68,
      72,
      76,
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "ConnPlotter.examples.non_dale.non_dale.modCopy": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      47,
      48
     ]
    },
    "isinstance": {
     "line number": [
      47,
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "ConnPlotter.examples.simple": {
  "data": {},
  "type": "module"
 },
 "ConnPlotter.examples.simple.simple": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "modCopy": {
     "line number": [
      60,
      65,
      70,
      78,
      86,
      94,
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "ConnPlotter.examples.simple.simple.modCopy": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      39,
      40
     ]
    },
    "isinstance": {
     "line number": [
      39,
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "ConnPlotter.tcd_nest": {
  "data": {
   "symbols_in_volume": {
    "ConnPlotter.tcd_nest.TCD": {
     "line number": [
      201
     ]
    },
    "ConnPlotter.tcd_nest.g": {
     "line number": [
      208
     ]
    },
    "ConnPlotter.tcd_nest.ht_def_new_sq": {
     "line number": [
      199
     ]
    },
    "ConnPlotter.tcd_nest.ht_params": {
     "line number": [
      199
     ]
    },
    "ConnPlotter.tcd_nest.syns": {
     "line number": [
      206,
      210
     ]
    },
    "ConnPlotter.tcd_nest.sys": {
     "line number": [
      194
     ]
    },
    "ConnPlotter.tcd_nest.tcd": {
     "line number": [
      207
     ]
    },
    "ConnPlotter.tcd_nest.v": {
     "line number": [
      207,
      208
     ]
    },
    "__name__": {
     "line number": [
      189
     ]
    },
    "matplotlib.pyplot.legend": {
     "line number": [
      210
     ]
    },
    "matplotlib.pyplot.plot": {
     "line number": [
      208
     ]
    },
    "matplotlib.pyplot.show": {
     "line number": [
      211
     ]
    },
    "numpy.array": {
     "line number": [
      207
     ]
    },
    "numpy.linspace": {
     "line number": [
      203
     ]
    }
   }
  },
  "type": "module"
 },
 "ConnPlotter.tcd_nest.TCD": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "object": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "class"
 },
 "ConnPlotter.tcd_nest.TCD._TcdBeta": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "object": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "class"
 },
 "ConnPlotter.tcd_nest.TCD._TcdBeta.__call__": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "ConnPlotter.tcd_nest.TCD._TcdBeta.__init__": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "ConnPlotter.tcd_nest.TCD._TcdBeta.__str__": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "ConnPlotter.tcd_nest.TCD._TcdNMDA": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "object": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "class"
 },
 "ConnPlotter.tcd_nest.TCD._TcdNMDA.__call__": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "numpy.exp": {
     "line number": [
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "ConnPlotter.tcd_nest.TCD._TcdNMDA.__init__": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "ConnPlotter.tcd_nest.TCD._TcdNMDA.__str__": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "ConnPlotter.tcd_nest.TCD.__call__": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "ConnPlotter.tcd_nest.TCD.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "ConnPlotter.tcd_nest.nest": {
     "line number": [
      80,
      87,
      95,
      101
     ]
    },
    "set": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "ConnPlotter.tcd_nest.__all__": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "ConnPlotter.tcd_nest.g": {
  "data": {
   "lineno": 207
  },
  "type": "constant"
 },
 "ConnPlotter.tcd_nest.ht_def_new_sq": {
  "data": {
   "shadows": "ht_def_new_sq"
  },
  "type": "import"
 },
 "ConnPlotter.tcd_nest.ht_params": {
  "data": {
   "shadows": "ht_params"
  },
  "type": "import"
 },
 "ConnPlotter.tcd_nest.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "ConnPlotter.tcd_nest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ConnPlotter.tcd_nest.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "ConnPlotter.tcd_nest.syns": {
  "data": {
   "lineno": 204
  },
  "type": "constant"
 },
 "ConnPlotter.tcd_nest.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "ConnPlotter.tcd_nest.tcd": {
  "data": {
   "lineno": 201
  },
  "type": "constant"
 },
 "ConnPlotter.tcd_nest.v": {
  "data": {
   "lineno": 203
  },
  "type": "constant"
 },
 "nest": {
  "data": {},
  "type": "module"
 },
 "nest.hl_api": {
  "data": {
   "symbols_in_volume": {
    "globals": {
     "line number": [
      40
     ]
    },
    "nest.hl_api._ignore_modules": {
     "line number": [
      40
     ]
    },
    "set": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.hl_api.__all__": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "nest.hl_api._ignore_modules": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "nest.hl_api._il": {
  "data": {
   "shadows": "import_libs"
  },
  "type": "import"
 },
 "nest.import_libs": {
  "data": {},
  "type": "module"
 },
 "nest.import_libs.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "nest.import_libs.import_libs": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "compile": {
     "line number": [
      80
     ]
    },
    "exec": {
     "line number": [
      81
     ]
    },
    "frozenset": {
     "line number": [
      34
     ]
    },
    "nest.import_libs.ast": {
     "line number": [
      70,
      71,
      76,
      76,
      78,
      78
     ]
    },
    "nest.import_libs.os": {
     "line number": [
      60,
      60,
      61
     ]
    },
    "nest.import_libs.sys": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.import_libs.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nest.import_libs.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nest.kernel": {
  "data": {
   "shadows": "pynestkernel"
  },
  "type": "import"
 },
 "nest.lib": {
  "data": {},
  "type": "module"
 },
 "nest.lib.hl_api_connections": {
  "data": {},
  "type": "module"
 },
 "nest.lib.hl_api_connections.CGConnect": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": {
    "sli_func": {
     "line number": [
      468
     ]
    },
    "spp": {
     "line number": [
      460
     ]
    },
    "sr": {
     "line number": [
      459
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_connections.CGParse": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": {
    "spp": {
     "line number": [
      491,
      498
     ]
    },
    "sps": {
     "line number": [
      496
     ]
    },
    "sr": {
     "line number": [
      490,
      497
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_connections.CGSelectImplementation": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": {
    "spp": {
     "line number": [
      521
     ]
    },
    "sps": {
     "line number": [
      526,
      527
     ]
    },
    "sr": {
     "line number": [
      520,
      528
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_connections.Connect": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      221,
      236
     ]
    },
    "is_string": {
     "line number": [
      218,
      233
     ]
    },
    "isinstance": {
     "line number": [
      221,
      236,
      240,
      243
     ]
    },
    "len": {
     "line number": [
      245,
      247,
      250,
      269,
      271,
      271,
      275,
      276,
      283,
      287,
      295,
      299
     ]
    },
    "list": {
     "line number": [
      240
     ]
    },
    "nest.lib.hl_api_connections.numpy": {
     "line number": [
      241,
      243,
      243
     ]
    },
    "show_deprecation_warning": {
     "line number": [
      202
     ]
    },
    "sps": {
     "line number": [
      210,
      211,
      217,
      234,
      312
     ]
    },
    "sr": {
     "line number": [
      220,
      227,
      235,
      317
     ]
    },
    "str": {
     "line number": [
      250,
      258,
      275,
      276,
      287,
      288,
      299,
      300
     ]
    },
    "tuple": {
     "line number": [
      240
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_connections.DataConnect": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": {
    "GetKernelStatus": {
     "line number": [
      409
     ]
    },
    "SetKernelStatus": {
     "line number": [
      410,
      415
     ]
    },
    "TypeError": {
     "line number": [
      390,
      396
     ]
    },
    "deprecated": {
     "line number": [
      321
     ]
    },
    "is_coercible_to_sli_array": {
     "line number": [
      389,
      395
     ]
    },
    "sps": {
     "line number": [
      401,
      402,
      412
     ]
    },
    "sr": {
     "line number": [
      403,
      413
     ]
    },
    "zip": {
     "line number": [
      400
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_connections.Disconnect": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": {
    "is_string": {
     "line number": [
      629,
      631
     ]
    },
    "sps": {
     "line number": [
      624,
      626,
      634,
      635
     ]
    },
    "sr": {
     "line number": [
      625,
      627,
      637
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_connections.DisconnectOneToOne": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": {
    "deprecated": {
     "line number": [
      532
     ]
    },
    "is_string": {
     "line number": [
      553
     ]
    },
    "sps": {
     "line number": [
      551,
      552,
      555
     ]
    },
    "sr": {
     "line number": [
      556
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_connections.GetConnections": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      89,
      94
     ]
    },
    "is_coercible_to_sli_array": {
     "line number": [
      88,
      93
     ]
    },
    "spp": {
     "line number": [
      106
     ]
    },
    "sps": {
     "line number": [
      103
     ]
    },
    "sr": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_connections.__all__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "nest.lib.hl_api_connections.kernel": {
  "data": {
   "shadows": "pynestkernel"
  },
  "type": "import"
 },
 "nest.lib.hl_api_connections.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.lib.hl_api_exceptions": {
  "data": {
   "symbols_in_volume": {
    "nest.lib.hl_api_exceptions.NESTErrors": {
     "line number": [
      226
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.lib.hl_api_exceptions.NESTError": {
  "data": {
   "lineno": 226
  },
  "type": "constant"
 },
 "nest.lib.hl_api_exceptions.NESTErrors": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "nest.lib.hl_api_exceptions.NESTMappedException": {
     "line number": [
      72
     ]
    },
    "six.with_metaclass": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.lib.hl_api_exceptions.NESTErrors.NESTError": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.lib.hl_api_exceptions.NESTErrors.NESTError.__init__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "Exception.__init__": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_exceptions.NESTErrors.PyNESTError": {
  "data": {
   "lineno": 115
  },
  "type": "class"
 },
 "nest.lib.hl_api_exceptions.NESTErrors.SLIException": {
  "data": {
   "lineno": 94
  },
  "type": "class"
 },
 "nest.lib.hl_api_exceptions.NESTErrors.SLIException.__init__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "nest.lib.hl_api_exceptions.NESTErrors": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_exceptions.NESTErrors.init": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      158
     ]
    },
    "staticmethod": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_exceptions.NESTErrors.init.__init__": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "nest.lib.hl_api_exceptions.NESTMappedException": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "type": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.lib.hl_api_exceptions.NESTMappedException.__getattr__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      44
     ]
    },
    "setattr": {
     "line number": [
      66
     ]
    },
    "type": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_exceptions.with_metaclass": {
  "data": {
   "shadows": "six.with_metaclass"
  },
  "type": "import"
 },
 "nest.lib.hl_api_helper": {
  "data": {
   "symbols_in_volume": {
    "nest.lib.hl_api_helper.format_Warning": {
     "line number": [
      83
     ]
    },
    "nest.lib.hl_api_helper.get_unistring_type": {
     "line number": [
      177
     ]
    },
    "nest.lib.hl_api_helper.warnings": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.lib.hl_api_helper.HTML": {
  "data": {
   "shadows": "IPython.display.HTML"
  },
  "type": "import"
 },
 "nest.lib.hl_api_helper.Javascript": {
  "data": {
   "shadows": "IPython.display.Javascript"
  },
  "type": "import"
 },
 "nest.lib.hl_api_helper.SuppressedDeprecationWarning": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": {
    "object": {
     "line number": [
      629
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.lib.hl_api_helper.SuppressedDeprecationWarning.__enter__": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": {
    "nest.lib.hl_api_helper._deprecation_warning": {
     "line number": [
      655,
      656
     ]
    },
    "nest.lib.hl_api_helper.set_verbosity": {
     "line number": [
      660
     ]
    },
    "sli_func": {
     "line number": [
      659,
      660
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.SuppressedDeprecationWarning.__exit__": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": {
    "nest.lib.hl_api_helper._deprecation_warning": {
     "line number": [
      668
     ]
    },
    "nest.lib.hl_api_helper.set_verbosity": {
     "line number": [
      665
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.SuppressedDeprecationWarning.__init__": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": {
    "nest.lib.hl_api_helper.get_verbosity": {
     "line number": [
      650
     ]
    },
    "nest.lib.hl_api_helper.is_string": {
     "line number": [
      647
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.Template": {
  "data": {
   "shadows": "string.Template"
  },
  "type": "import"
 },
 "nest.lib.hl_api_helper.__all__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "nest.lib.hl_api_helper.__check_nb": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": {
    "NameError": {
     "line number": [
      340
     ]
    },
    "get_ipython": {
     "line number": [
      339
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.__is_executable": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": {
    "nest.lib.hl_api_helper.os": {
     "line number": [
      433,
      434,
      434,
      434
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.__show_help_in_modal_window": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": {
    "IPython.display.HTML": {
     "line number": [
      374
     ]
    },
    "IPython.display.Javascript": {
     "line number": [
      376
     ]
    },
    "IPython.display.display": {
     "line number": [
      374,
      376
     ]
    },
    "nest.lib.hl_api_helper.json": {
     "line number": [
      355
     ]
    },
    "string.Template": {
     "line number": [
      358
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper._deprecation_warning": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "nest.lib.hl_api_helper.broadcast": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      330
     ]
    },
    "isinstance": {
     "line number": [
      325
     ]
    },
    "len": {
     "line number": [
      327,
      329
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.deprecated": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.deprecated.deprecated_decorator": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "nest.lib.hl_api_helper._deprecation_warning": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.deprecated.deprecated_decorator.new_func": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "func": {
     "line number": [
      157,
      154
     ]
    },
    "nest.lib.hl_api_helper.functools": {
     "line number": [
      154
     ]
    },
    "nest.lib.hl_api_helper.show_deprecation_warning": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.display": {
  "data": {
   "shadows": "IPython.display.display"
  },
  "type": "import"
 },
 "nest.lib.hl_api_helper.format_Warning": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "nest.lib.hl_api_helper.get_help_filepath": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": {
    "nest.lib.hl_api_helper.os": {
     "line number": [
      395,
      397,
      400
     ]
    },
    "print": {
     "line number": [
      403
     ]
    },
    "sli_func": {
     "line number": [
      395
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.get_unistring_type": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "nest.lib.hl_api_helper.sys": {
     "line number": [
      173
     ]
    },
    "str": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.get_verbosity": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": {
    "spp": {
     "line number": [
      530
     ]
    },
    "sr": {
     "line number": [
      529
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.get_wrapped_text": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "nest.lib.hl_api_helper.textwrap": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.is_coercible_to_sli_array": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      251,
      253
     ]
    },
    "list": {
     "line number": [
      251,
      253
     ]
    },
    "nest.lib.hl_api_helper.sys": {
     "line number": [
      250
     ]
    },
    "range": {
     "line number": [
      251
     ]
    },
    "tuple": {
     "line number": [
      251,
      253
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.is_iterable": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      228
     ]
    },
    "iter": {
     "line number": [
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.is_literal": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      193
     ]
    },
    "nest.lib.hl_api_helper.uni_str": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.is_sequence_of_connections": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      275
     ]
    },
    "dict": {
     "line number": [
      274
     ]
    },
    "isinstance": {
     "line number": [
      274
     ]
    },
    "iter": {
     "line number": [
      273
     ]
    },
    "len": {
     "line number": [
      274
     ]
    },
    "next": {
     "line number": [
      273
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.is_sequence_of_gids": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": {
    "all": {
     "line number": [
      296
     ]
    },
    "int": {
     "line number": [
      296
     ]
    },
    "isinstance": {
     "line number": [
      296
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.is_string": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      209
     ]
    },
    "nest.lib.hl_api_helper.uni_str": {
     "line number": [
      209
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "nest.lib.hl_api_helper.kernel": {
  "data": {
   "shadows": "pynestkernel"
  },
  "type": "import"
 },
 "nest.lib.hl_api_helper.load_help": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": {
    "nest.lib.hl_api_helper.get_help_filepath": {
     "line number": [
      421
     ]
    },
    "open": {
     "line number": [
      423
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.model_deprecation_warning": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": {
    "nest.lib.hl_api_helper.get_wrapped_text": {
     "line number": [
      575
     ]
    },
    "nest.lib.hl_api_helper.show_deprecation_warning": {
     "line number": [
      576
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.lib.hl_api_helper.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nest.lib.hl_api_helper.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "nest.lib.hl_api_helper.serializable": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      601,
      602
     ]
    },
    "isinstance": {
     "line number": [
      592,
      595,
      601
     ]
    },
    "list": {
     "line number": [
      598
     ]
    },
    "nest.lib.hl_api_helper.numpy": {
     "line number": [
      595
     ]
    },
    "tuple": {
     "line number": [
      598
     ]
    },
    "type": {
     "line number": [
      598
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.set_verbosity": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": {
    "sr": {
     "line number": [
      553
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.show_deprecation_warning": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "nest.lib.hl_api_helper._deprecation_warning": {
     "line number": [
      118,
      128
     ]
    },
    "nest.lib.hl_api_helper.get_wrapped_text": {
     "line number": [
      125
     ]
    },
    "nest.lib.hl_api_helper.warnings": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.show_help_with_pager": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      504
     ]
    },
    "OSError": {
     "line number": [
      504
     ]
    },
    "any": {
     "line number": [
      491
     ]
    },
    "nest.lib.hl_api_helper.__check_nb": {
     "line number": [
      463
     ]
    },
    "nest.lib.hl_api_helper.__is_executable": {
     "line number": [
      491
     ]
    },
    "nest.lib.hl_api_helper.__show_help_in_modal_window": {
     "line number": [
      470
     ]
    },
    "nest.lib.hl_api_helper.get_help_filepath": {
     "line number": [
      459
     ]
    },
    "nest.lib.hl_api_helper.load_help": {
     "line number": [
      466,
      476
     ]
    },
    "nest.lib.hl_api_helper.os": {
     "line number": [
      452,
      492,
      492
     ]
    },
    "nest.lib.hl_api_helper.subprocess": {
     "line number": [
      503,
      504
     ]
    },
    "nest.lib.hl_api_helper.sys": {
     "line number": [
      448
     ]
    },
    "print": {
     "line number": [
      449,
      453,
      478,
      498,
      505
     ]
    },
    "sli_func": {
     "line number": [
      484
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "nest.lib.hl_api_helper.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nest.lib.hl_api_helper.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "nest.lib.hl_api_helper.to_json": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": {
    "nest.lib.hl_api_helper.json": {
     "line number": [
      625
     ]
    },
    "nest.lib.hl_api_helper.serializable": {
     "line number": [
      624
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_helper.uni_str": {
  "data": {
   "lineno": 177
  },
  "type": "constant"
 },
 "nest.lib.hl_api_helper.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nest.lib.hl_api_info": {
  "data": {},
  "type": "module"
 },
 "nest.lib.hl_api_info.GetStatus": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      310,
      323
     ]
    },
    "is_coercible_to_sli_array": {
     "line number": [
      309
     ]
    },
    "is_iterable": {
     "line number": [
      319
     ]
    },
    "is_literal": {
     "line number": [
      317
     ]
    },
    "is_sequence_of_connections": {
     "line number": [
      325
     ]
    },
    "len": {
     "line number": [
      312
     ]
    },
    "pcd": {
     "line number": [
      326
     ]
    },
    "spp": {
     "line number": [
      331
     ]
    },
    "sps": {
     "line number": [
      328
     ]
    },
    "sr": {
     "line number": [
      330
     ]
    },
    "to_json": {
     "line number": [
      334
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_info.SetStatus": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      232,
      250
     ]
    },
    "broadcast": {
     "line number": [
      248
     ]
    },
    "dict": {
     "line number": [
      243,
      248
     ]
    },
    "is_coercible_to_sli_array": {
     "line number": [
      231
     ]
    },
    "is_iterable": {
     "line number": [
      243
     ]
    },
    "is_literal": {
     "line number": [
      242
     ]
    },
    "is_sequence_of_connections": {
     "line number": [
      254
     ]
    },
    "isinstance": {
     "line number": [
      243
     ]
    },
    "len": {
     "line number": [
      239,
      248,
      249,
      249
     ]
    },
    "pcd": {
     "line number": [
      255
     ]
    },
    "sps": {
     "line number": [
      257,
      259
     ]
    },
    "sr": {
     "line number": [
      260,
      261
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_info.__all__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "nest.lib.hl_api_info.authors": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "sr": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_info.get_argv": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "spp": {
     "line number": [
      173
     ]
    },
    "sr": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_info.help": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "load_help": {
     "line number": [
      138
     ]
    },
    "print": {
     "line number": [
      143,
      145,
      147,
      149,
      151,
      153,
      155
     ]
    },
    "show_help_with_pager": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_info.helpdesk": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "nest.lib.hl_api_info.os": {
     "line number": [
      92,
      98,
      98,
      104
     ]
    },
    "nest.lib.hl_api_info.sys": {
     "line number": [
      87,
      103,
      108
     ]
    },
    "nest.lib.hl_api_info.webbrowser": {
     "line number": [
      109,
      111
     ]
    },
    "print": {
     "line number": [
      88,
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_info.message": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "sps": {
     "line number": [
      192,
      193,
      194
     ]
    },
    "sr": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_info.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nest.lib.hl_api_info.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nest.lib.hl_api_info.sysinfo": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "sr": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_info.version": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "spp": {
     "line number": [
      67
     ]
    },
    "sr": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_info.webbrowser": {
  "data": {
   "shadows": "webbrowser"
  },
  "type": "import"
 },
 "nest.lib.hl_api_models": {
  "data": {},
  "type": "module"
 },
 "nest.lib.hl_api_models.ConnectionRules": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "sorted": {
     "line number": [
      107
     ]
    },
    "spp": {
     "line number": [
      107
     ]
    },
    "sr": {
     "line number": [
      106
     ]
    },
    "tuple": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_models.CopyModel": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": {
    "model_deprecation_warning": {
     "line number": [
      206
     ]
    },
    "sps": {
     "line number": [
      209
     ]
    },
    "sr": {
     "line number": [
      210,
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_models.GetDefaults": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      179
     ]
    },
    "is_iterable": {
     "line number": [
      174
     ]
    },
    "is_literal": {
     "line number": [
      172
     ]
    },
    "spp": {
     "line number": [
      182
     ]
    },
    "sr": {
     "line number": [
      181
     ]
    },
    "to_json": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_models.Models": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      75
     ]
    },
    "spp": {
     "line number": [
      81,
      85
     ]
    },
    "sr": {
     "line number": [
      80,
      84
     ]
    },
    "tuple": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_models.SetDefaults": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "is_literal": {
     "line number": [
      129
     ]
    },
    "sps": {
     "line number": [
      132
     ]
    },
    "sr": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_models.__all__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "nest.lib.hl_api_nodes": {
  "data": {},
  "type": "module"
 },
 "nest.lib.hl_api_nodes.Create": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "SetStatus": {
     "line number": [
      86
     ]
    },
    "dict": {
     "line number": [
      72,
      84
     ]
    },
    "isinstance": {
     "line number": [
      72,
      84
     ]
    },
    "model_deprecation_warning": {
     "line number": [
      70
     ]
    },
    "nest.lib.hl_api_nodes.warnings": {
     "line number": [
      88
     ]
    },
    "range": {
     "line number": [
      82
     ]
    },
    "spp": {
     "line number": [
      81
     ]
    },
    "sps": {
     "line number": [
      74,
      78
     ]
    },
    "sr": {
     "line number": [
      79
     ]
    },
    "tuple": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_nodes.GetLID": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "deprecated": {
     "line number": [
      97
     ]
    },
    "len": {
     "line number": [
      123
     ]
    },
    "spp": {
     "line number": [
      129
     ]
    },
    "sps": {
     "line number": [
      126
     ]
    },
    "sr": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_nodes.__all__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "nest.lib.hl_api_nodes.kernel": {
  "data": {
   "shadows": "pynestkernel"
  },
  "type": "import"
 },
 "nest.lib.hl_api_nodes.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nest.lib.hl_api_parallel_computing": {
  "data": {},
  "type": "module"
 },
 "nest.lib.hl_api_parallel_computing.NumProcesses": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "spp": {
     "line number": [
      74
     ]
    },
    "sr": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_parallel_computing.Rank": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "spp": {
     "line number": [
      60
     ]
    },
    "sr": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_parallel_computing.SetAcceptableLatency": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "sps": {
     "line number": [
      89,
      90
     ]
    },
    "sr": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_parallel_computing.SetMaxBuffered": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "sps": {
     "line number": [
      106,
      107
     ]
    },
    "sr": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_parallel_computing.SyncProcesses": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "sr": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_parallel_computing.__all__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "nest.lib.hl_api_parallel_computing.kernel": {
  "data": {
   "shadows": "pynestkernel"
  },
  "type": "import"
 },
 "nest.lib.hl_api_simulation": {
  "data": {},
  "type": "module"
 },
 "nest.lib.hl_api_simulation.Cleanup": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "sr": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_simulation.DisableStructuralPlasticity": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": {
    "sr": {
     "line number": [
      390
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_simulation.EnableStructuralPlasticity": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": {
    "sr": {
     "line number": [
      378
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_simulation.GetKernelStatus": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      288
     ]
    },
    "dict": {
     "line number": [
      279
     ]
    },
    "is_iterable": {
     "line number": [
      285
     ]
    },
    "is_literal": {
     "line number": [
      283
     ]
    },
    "spp": {
     "line number": [
      274,
      277
     ]
    },
    "sr": {
     "line number": [
      273,
      276
     ]
    },
    "tuple": {
     "line number": [
      286
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_simulation.GetStructuralPlasticityStatus": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      365
     ]
    },
    "is_iterable": {
     "line number": [
      362
     ]
    },
    "is_literal": {
     "line number": [
      360
     ]
    },
    "spp": {
     "line number": [
      357
     ]
    },
    "sps": {
     "line number": [
      355
     ]
    },
    "sr": {
     "line number": [
      356
     ]
    },
    "tuple": {
     "line number": [
      363
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_simulation.Install": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": {
    "sr": {
     "line number": [
      318
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_simulation.Prepare": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "sr": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_simulation.ResetKernel": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "sr": {
     "line number": [
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_simulation.ResetNetwork": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "deprecated": {
     "line number": [
      184
     ]
    },
    "sr": {
     "line number": [
      221
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_simulation.Run": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "float": {
     "line number": [
      97
     ]
    },
    "sps": {
     "line number": [
      97
     ]
    },
    "sr": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_simulation.RunManager": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "contextlib.contextmanager": {
     "line number": [
      132
     ]
    },
    "nest.lib.hl_api_simulation.Cleanup": {
     "line number": [
      156
     ]
    },
    "nest.lib.hl_api_simulation.Prepare": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_simulation.SetKernelStatus": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "sps": {
     "line number": [
      239,
      240
     ]
    },
    "sr": {
     "line number": [
      241
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_simulation.SetStructuralPlasticityStatus": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": {
    "sps": {
     "line number": [
      336
     ]
    },
    "sr": {
     "line number": [
      337
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_simulation.Simulate": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "float": {
     "line number": [
      64
     ]
    },
    "sps": {
     "line number": [
      64
     ]
    },
    "sr": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_simulation.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "nest.lib.hl_api_simulation.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "nest.lib.hl_api_subnets": {
  "data": {},
  "type": "module"
 },
 "nest.lib.hl_api_subnets.BeginSubnet": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": {
    "Create": {
     "line number": [
      294
     ]
    },
    "SetStatus": {
     "line number": [
      296,
      298
     ]
    },
    "deprecated": {
     "line number": [
      281
     ]
    },
    "nest.lib.hl_api_subnets.ChangeSubnet": {
     "line number": [
      299
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_subnets.ChangeSubnet": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "deprecated": {
     "line number": [
      105
     ]
    },
    "len": {
     "line number": [
      119
     ]
    },
    "sps": {
     "line number": [
      122
     ]
    },
    "sr": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_subnets.CurrentSubnet": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "deprecated": {
     "line number": [
      90
     ]
    },
    "spp": {
     "line number": [
      101
     ]
    },
    "sr": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_subnets.EndSubnet": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": {
    "GetStatus": {
     "line number": [
      315
     ]
    },
    "deprecated": {
     "line number": [
      303
     ]
    },
    "nest.lib.hl_api_subnets.ChangeSubnet": {
     "line number": [
      318
     ]
    },
    "nest.lib.hl_api_subnets.CurrentSubnet": {
     "line number": [
      314
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_subnets.GetChildren": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": {
    "deprecated": {
     "line number": [
      207
     ]
    },
    "sli_func": {
     "line number": [
      242
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_subnets.GetLeaves": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "deprecated": {
     "line number": [
      127
     ]
    },
    "sli_func": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_subnets.GetNetwork": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": {
    "deprecated": {
     "line number": [
      247
     ]
    },
    "len": {
     "line number": [
      271
     ]
    },
    "spp": {
     "line number": [
      277
     ]
    },
    "sps": {
     "line number": [
      274,
      275
     ]
    },
    "sr": {
     "line number": [
      276
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_subnets.GetNodes": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "deprecated": {
     "line number": [
      168
     ]
    },
    "sli_func": {
     "line number": [
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_subnets.LayoutNetwork": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      372
     ]
    },
    "deprecated": {
     "line number": [
      326
     ]
    },
    "is_literal": {
     "line number": [
      353
     ]
    },
    "len": {
     "line number": [
      365
     ]
    },
    "model": {
     "line number": [
      366,
      368
     ]
    },
    "nest.lib.hl_api_subnets.BeginSubnet": {
     "line number": [
      364
     ]
    },
    "nest.lib.hl_api_subnets.EndSubnet": {
     "line number": [
      369
     ]
    },
    "range": {
     "line number": [
      366,
      368
     ]
    },
    "spp": {
     "line number": [
      362
     ]
    },
    "sps": {
     "line number": [
      354,
      360
     ]
    },
    "sr": {
     "line number": [
      355,
      357,
      359,
      361
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_subnets.PrintNetwork": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "SuppressedDeprecationWarning": {
     "line number": [
      80
     ]
    },
    "deprecated": {
     "line number": [
      59
     ]
    },
    "len": {
     "line number": [
      82
     ]
    },
    "nest.lib.hl_api_subnets.CurrentSubnet": {
     "line number": [
      81
     ]
    },
    "sps": {
     "line number": [
      85
     ]
    },
    "sr": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_subnets.PrintNodes": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "SuppressedDeprecationWarning": {
     "line number": [
      54
     ]
    },
    "nest.lib.hl_api_subnets.PrintNetwork": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.lib.hl_api_subnets.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "nest.lib.hl_api_subnets.kernel": {
  "data": {
   "shadows": "pynestkernel"
  },
  "type": "import"
 },
 "nest.ll_api": {
  "data": {
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      48,
      57,
      61,
      65
     ]
    },
    "ImportError": {
     "line number": [
      57,
      61
     ]
    },
    "nest.ll_api.DLFCN": {
     "line number": [
      60,
      60
     ]
    },
    "nest.ll_api.catching_sli_run": {
     "line number": [
      134
     ]
    },
    "nest.ll_api.ctypes": {
     "line number": [
      64,
      64,
      68
     ]
    },
    "nest.ll_api.dl": {
     "line number": [
      56,
      56
     ]
    },
    "nest.ll_api.engine": {
     "line number": [
      92,
      93,
      94
     ]
    },
    "nest.ll_api.init": {
     "line number": [
      356
     ]
    },
    "nest.ll_api.os": {
     "line number": [
      47,
      47,
      355
     ]
    },
    "nest.ll_api.sys": {
     "line number": [
      32,
      32,
      47,
      56,
      60,
      64,
      68,
      356
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.ll_api.DLFCN": {
  "data": {
   "shadows": "DLFCN"
  },
  "type": "import"
 },
 "nest.ll_api.__all__": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "nest.ll_api.__debug": {
  "data": {
   "lineno": 192
  },
  "type": "constant"
 },
 "nest.ll_api.catching_sli_run": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "decode": {
     "line number": [
      124
     ]
    },
    "exceptionCls": {
     "line number": [
      132
     ]
    },
    "getattr": {
     "line number": [
      131
     ]
    },
    "nest.ll_api.engine": {
     "line number": [
      124,
      129
     ]
    },
    "nest.ll_api.sys": {
     "line number": [
      111
     ]
    },
    "sli_pop": {
     "line number": [
      125,
      126,
      127,
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.ll_api.catching_sli_run.decode": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "nest.ll_api.catching_sli_run.encode": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "nest.ll_api.check_stack": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      291
     ]
    },
    "nest.ll_api.inspect": {
     "line number": [
      283,
      285,
      286,
      286
     ]
    },
    "nest.ll_api.stack_checker": {
     "line number": [
      284,
      288
     ]
    },
    "setattr": {
     "line number": [
      288
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.ll_api.ctypes": {
  "data": {
   "shadows": "ctypes"
  },
  "type": "import"
 },
 "nest.ll_api.dl": {
  "data": {
   "shadows": "dl"
  },
  "type": "import"
 },
 "nest.ll_api.engine": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "nest.ll_api.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "nest.ll_api.get_debug": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": {
    "nest.ll_api.__debug": {
     "line number": [
      204
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.ll_api.init": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      348
     ]
    },
    "Models": {
     "line number": [
      347
     ]
    },
    "NameError": {
     "line number": [
      341
     ]
    },
    "nest.ll_api.engine": {
     "line number": [
      332,
      336
     ]
    },
    "nest.ll_api.initialized": {
     "line number": [
      312,
      332,
      334
     ]
    },
    "nest.ll_api.keyword": {
     "line number": [
      347
     ]
    },
    "nest.ll_api.os": {
     "line number": [
      331
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.ll_api.initialized": {
  "data": {
   "lineno": 294
  },
  "type": "constant"
 },
 "nest.ll_api.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "nest.ll_api.kernel": {
  "data": {
   "shadows": "pynestkernel"
  },
  "type": "import"
 },
 "nest.ll_api.keyword": {
  "data": {
   "shadows": "keyword"
  },
  "type": "import"
 },
 "nest.ll_api.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nest.ll_api.pcd": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "nest.ll_api.readline": {
  "data": {
   "shadows": "readline"
  },
  "type": "import"
 },
 "nest.ll_api.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "nest.ll_api.set_debug": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "nest.ll_api.__debug": {
     "line number": [
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.ll_api.sli_func": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "len": {
     "line number": [
      176,
      185,
      188
     ]
    },
    "sli_pop": {
     "line number": [
      183
     ]
    },
    "sli_push": {
     "line number": [
      180,
      181
     ]
    },
    "sli_run": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.ll_api.stack_checker": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "nest.ll_api.stack_checker.stack_checker_func": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "f": {
     "line number": [
      246,
      250,
      243
     ]
    },
    "f.__name__": {
     "line number": [
      254
     ]
    },
    "nest.ll_api.functools": {
     "line number": [
      243
     ]
    },
    "nest.ll_api.get_debug": {
     "line number": [
      245
     ]
    },
    "spp": {
     "line number": [
      249,
      252
     ]
    },
    "sr": {
     "line number": [
      248,
      251
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.ll_api.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nest.test": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "nest.unittest": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests": {
  "data": {},
  "type": "module"
 },
 "nest.tests.compatibility": {
  "data": {
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      50,
      54,
      57,
      64,
      69,
      74
     ]
    },
    "isinstance": {
     "line number": [
      66
     ]
    },
    "nest.tests.compatibility._skipIf": {
     "line number": [
      51
     ]
    },
    "nest.tests.compatibility.fill_diagonal": {
     "line number": [
      78
     ]
    },
    "nest.tests.compatibility.numpy": {
     "line number": [
      74,
      78
     ]
    },
    "nest.tests.compatibility.unittest": {
     "line number": [
      50,
      51,
      54,
      57,
      58,
      58,
      61,
      64,
      65,
      66,
      69,
      70,
      71
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.compatibility._skipIf": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "nest.tests.compatibility._skipIf.decorator": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      41
     ]
    },
    "issubclass": {
     "line number": [
      34
     ]
    },
    "nest.tests.compatibility.inspect": {
     "line number": [
      33,
      36
     ]
    },
    "nest.tests.compatibility.unittest": {
     "line number": [
      34,
      35
     ]
    },
    "type": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.compatibility._skipIf.decorator.ret_none": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "nest.tests.compatibility.fill_diagonal": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "min": {
     "line number": [
      76
     ]
    },
    "nest.tests.compatibility.numpy": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.compatibility.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "nest.tests.compatibility.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.compatibility.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.suite": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      408
     ]
    },
    "collections.defaultdict": {
     "line number": [
      146
     ]
    },
    "len": {
     "line number": [
      106
     ]
    },
    "nest.tests.test_aeif_lsodar.DT0_params": {
     "line number": [
      147
     ]
    },
    "nest.tests.test_aeif_lsodar.aeif_DT0": {
     "line number": [
      143,
      146,
      161,
      161
     ]
    },
    "nest.tests.test_aeif_lsodar.aeif_DT0_delta": {
     "line number": [
      144,
      147
     ]
    },
    "nest.tests.test_aeif_lsodar.iaf_param_base": {
     "line number": [
      160,
      164
     ]
    },
    "nest.tests.test_aeif_lsodar.iaf_param_cond": {
     "line number": [
      165,
      171,
      172
     ]
    },
    "nest.tests.test_aeif_lsodar.iaf_param_psc": {
     "line number": [
      161,
      162,
      168,
      169
     ]
    },
    "nest.tests.test_aeif_lsodar.iaf_param_psc_delta": {
     "line number": [
      163,
      170
     ]
    },
    "nest.tests.test_aeif_lsodar.models": {
     "line number": [
      106
     ]
    },
    "nest.tests.test_aeif_lsodar.nest": {
     "line number": [
      58
     ]
    },
    "nest.tests.test_aeif_lsodar.os": {
     "line number": [
      59,
      59
     ]
    },
    "nest.tests.test_aeif_lsodar.run": {
     "line number": [
      409
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_aeif_lsodar.AEIFTestCase": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "nest.tests.test_aeif_lsodar.unittest": {
     "line number": [
      198
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_aeif_lsodar.AEIFTestCase.assert_pass_tolerance": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      261,
      262
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_aeif_lsodar.AEIFTestCase.compute_difference": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      242
     ]
    },
    "nest.tests.test_aeif_lsodar.nest": {
     "line number": [
      243
     ]
    },
    "numpy.abs": {
     "line number": [
      246,
      249
     ]
    },
    "numpy.any": {
     "line number": [
      248
     ]
    },
    "numpy.average": {
     "line number": [
      254
     ]
    },
    "numpy.isclose": {
     "line number": [
      247
     ]
    },
    "numpy.where": {
     "line number": [
      247
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_aeif_lsodar.AEIFTestCase.setUp": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": {
    "nest.tests.test_aeif_lsodar.nest": {
     "line number": [
      209,
      210,
      212
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      211
     ]
    },
    "range": {
     "line number": [
      211,
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_aeif_lsodar.AEIFTestCase.test_closeness_nest_lsodar": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": {
    "V_interp": {
     "line number": [
      292
     ]
    },
    "iter": {
     "line number": [
      283,
      290
     ]
    },
    "nest.tests.test_aeif_lsodar.HAVE_GSL": {
     "line number": [
      267
     ]
    },
    "nest.tests.test_aeif_lsodar.aeif_param": {
     "line number": [
      279,
      294
     ]
    },
    "nest.tests.test_aeif_lsodar.di_tolerances_lsodar": {
     "line number": [
      296
     ]
    },
    "nest.tests.test_aeif_lsodar.models": {
     "line number": [
      280,
      281
     ]
    },
    "nest.tests.test_aeif_lsodar.nest": {
     "line number": [
      279,
      281,
      284,
      286,
      287,
      291
     ]
    },
    "nest.tests.test_aeif_lsodar.os": {
     "line number": [
      274
     ]
    },
    "nest.tests.test_aeif_lsodar.path": {
     "line number": [
      274
     ]
    },
    "nest.tests.test_aeif_lsodar.unittest": {
     "line number": [
      267
     ]
    },
    "next": {
     "line number": [
      290
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      274
     ]
    },
    "scipy.interpolate.interp1d": {
     "line number": [
      275,
      276
     ]
    },
    "w_interp": {
     "line number": [
      292
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_aeif_lsodar.AEIFTestCase.test_iaf_dc_input": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      368,
      374
     ]
    },
    "nest.tests.test_aeif_lsodar.DT0_params": {
     "line number": [
      360
     ]
    },
    "nest.tests.test_aeif_lsodar.HAVE_GSL": {
     "line number": [
      350
     ]
    },
    "nest.tests.test_aeif_lsodar.aeif_DT0": {
     "line number": [
      387
     ]
    },
    "nest.tests.test_aeif_lsodar.di_iaf_param": {
     "line number": [
      358
     ]
    },
    "nest.tests.test_aeif_lsodar.di_syn_types": {
     "line number": [
      369,
      383
     ]
    },
    "nest.tests.test_aeif_lsodar.di_tolerances_iaf": {
     "line number": [
      390
     ]
    },
    "nest.tests.test_aeif_lsodar.lst_syn_types": {
     "line number": [
      358
     ]
    },
    "nest.tests.test_aeif_lsodar.models": {
     "line number": [
      361
     ]
    },
    "nest.tests.test_aeif_lsodar.nest": {
     "line number": [
      357,
      359,
      360,
      362,
      363,
      370,
      372,
      373,
      375,
      377,
      378,
      379,
      384
     ]
    },
    "nest.tests.test_aeif_lsodar.unittest": {
     "line number": [
      350
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_aeif_lsodar.AEIFTestCase.test_iaf_spike_input": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      321,
      329
     ]
    },
    "nest.tests.test_aeif_lsodar.DT0_params": {
     "line number": [
      308
     ]
    },
    "nest.tests.test_aeif_lsodar.HAVE_GSL": {
     "line number": [
      298
     ]
    },
    "nest.tests.test_aeif_lsodar.aeif_DT0": {
     "line number": [
      345
     ]
    },
    "nest.tests.test_aeif_lsodar.di_iaf_param": {
     "line number": [
      306
     ]
    },
    "nest.tests.test_aeif_lsodar.di_syn_types": {
     "line number": [
      322,
      340
     ]
    },
    "nest.tests.test_aeif_lsodar.di_tolerances_iaf": {
     "line number": [
      348
     ]
    },
    "nest.tests.test_aeif_lsodar.lst_syn_types": {
     "line number": [
      306
     ]
    },
    "nest.tests.test_aeif_lsodar.models": {
     "line number": [
      309
     ]
    },
    "nest.tests.test_aeif_lsodar.nest": {
     "line number": [
      305,
      307,
      308,
      310,
      311,
      312,
      320,
      324,
      326,
      328,
      331,
      333,
      335,
      336,
      341
     ]
    },
    "nest.tests.test_aeif_lsodar.unittest": {
     "line number": [
      298
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_aeif_lsodar.DT0_params": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar.HAVE_GSL": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar.aeif_DT0": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar.aeif_DT0_delta": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar.aeif_param": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "nest.tests.test_aeif_lsodar.di_iaf_param": {
  "data": {
   "lineno": 167
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar.di_syn_types": {
  "data": {
   "lineno": 183
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar.di_tolerances_iaf": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar.di_tolerances_lsodar": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar.iaf_param_base": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar.iaf_param_cond": {
  "data": {
   "lineno": 164
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar.iaf_param_psc": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar.iaf_param_psc_delta": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "nest.tests.test_aeif_lsodar.lst_syn_types": {
  "data": {
   "lineno": 181
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar.models": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_aeif_lsodar.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_aeif_lsodar.num_models": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nest.tests.test_aeif_lsodar.path": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "nest.tests.test_aeif_lsodar.run": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": {
    "nest.tests.test_aeif_lsodar.suite": {
     "line number": [
      405
     ]
    },
    "nest.tests.test_aeif_lsodar.unittest": {
     "line number": [
      404
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_aeif_lsodar.suite": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": {
    "nest.tests.test_aeif_lsodar.AEIFTestCase": {
     "line number": [
      400
     ]
    },
    "nest.tests.test_aeif_lsodar.HAVE_GSL": {
     "line number": [
      398
     ]
    },
    "nest.tests.test_aeif_lsodar.unittest": {
     "line number": [
      400,
      398
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_aeif_lsodar.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nest.tests.test_aeif_lsodar.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_all": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      141
     ]
    },
    "nest.tests.test_all.debug": {
     "line number": [
      149
     ]
    },
    "nest.tests.test_all.nest": {
     "line number": [
      143,
      144,
      149
     ]
    },
    "nest.tests.test_all.runner": {
     "line number": [
      147
     ]
    },
    "nest.tests.test_all.suite": {
     "line number": [
      147
     ]
    },
    "nest.tests.test_all.unittest": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_all.debug": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "nest.tests.test_all.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_all.runner": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "nest.tests.test_all.suite": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "nest.tests.test_all.unittest": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_all.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_clopath_synapse": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      250
     ]
    },
    "nest.tests.test_clopath_synapse.nest": {
     "line number": [
      30
     ]
    },
    "nest.tests.test_clopath_synapse.run": {
     "line number": [
      251
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_clopath_synapse.ClopathSynapseTestCase": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "nest.tests.test_clopath_synapse.HAVE_GSL": {
     "line number": [
      34
     ]
    },
    "nest.tests.test_clopath_synapse.nest": {
     "line number": [
      33
     ]
    },
    "nest.tests.test_clopath_synapse.unittest": {
     "line number": [
      35,
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_clopath_synapse.ClopathSynapseTestCase.test_ConnectNeuronsWithClopathSynapse": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "nest.tests.test_clopath_synapse.nest": {
     "line number": [
      41,
      51,
      53,
      55,
      59,
      64,
      66,
      69,
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_clopath_synapse.ClopathSynapseTestCase.test_SynapseDepressionFacilitation": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "max": {
     "line number": [
      171
     ]
    },
    "nest.tests.test_clopath_synapse.nest": {
     "line number": [
      76,
      134,
      135,
      138,
      139,
      142,
      145,
      154,
      157,
      161,
      164,
      168,
      172,
      175
     ]
    },
    "numpy.allclose": {
     "line number": [
      189
     ]
    },
    "numpy.array": {
     "line number": [
      180
     ]
    },
    "zip": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_clopath_synapse.ClopathSynapseTestCase.test_SynapseFunctionWithAeifModel": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "nest.tests.test_clopath_synapse.nest": {
     "line number": [
      195,
      196,
      199,
      200,
      203,
      205,
      208,
      209,
      215,
      220,
      223,
      226
     ]
    },
    "numpy.allclose": {
     "line number": [
      234
     ]
    },
    "numpy.isclose": {
     "line number": [
      237
     ]
    },
    "numpy.where": {
     "line number": [
      230,
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_clopath_synapse.HAVE_GSL": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "nest.tests.test_clopath_synapse.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_clopath_synapse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_clopath_synapse.run": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": {
    "nest.tests.test_clopath_synapse.suite": {
     "line number": [
      247
     ]
    },
    "nest.tests.test_clopath_synapse.unittest": {
     "line number": [
      246
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_clopath_synapse.suite": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": {
    "nest.tests.test_clopath_synapse.ClopathSynapseTestCase": {
     "line number": [
      241
     ]
    },
    "nest.tests.test_clopath_synapse.unittest": {
     "line number": [
      241
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_clopath_synapse.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_connect_all_patterns": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      67
     ]
    },
    "nest.tests.test_connect_all_patterns.nest": {
     "line number": [
      27
     ]
    },
    "nest.tests.test_connect_all_patterns.runner": {
     "line number": [
      69
     ]
    },
    "nest.tests.test_connect_all_patterns.suite": {
     "line number": [
      69
     ]
    },
    "nest.tests.test_connect_all_patterns.unittest": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_connect_all_patterns.HAVE_MPI": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "nest.tests.test_connect_all_patterns.MPI": {
  "data": {
   "shadows": "mpi4py.MPI"
  },
  "type": "import"
 },
 "nest.tests.test_connect_all_patterns.TestConnectAllPatterns": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "nest.tests.test_connect_all_patterns.unittest": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_connect_all_patterns.TestConnectAllPatterns.testWithMPI": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      37
     ]
    },
    "nest.tests.test_connect_all_patterns.HAVE_MPI": {
     "line number": [
      32
     ]
    },
    "nest.tests.test_connect_all_patterns.nest": {
     "line number": [
      50
     ]
    },
    "nest.tests.test_connect_all_patterns.os": {
     "line number": [
      39,
      39,
      49
     ]
    },
    "nest.tests.test_connect_all_patterns.unittest": {
     "line number": [
      38,
      32
     ]
    },
    "subprocess.PIPE": {
     "line number": [
      53,
      53
     ]
    },
    "subprocess.Popen": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_all_patterns.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_connect_all_patterns.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nest.tests.test_connect_all_patterns.runner": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "nest.tests.test_connect_all_patterns.sp": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "nest.tests.test_connect_all_patterns.suite": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "nest.tests.test_connect_all_patterns.TestConnectAllPatterns": {
     "line number": [
      64
     ]
    },
    "nest.tests.test_connect_all_patterns.unittest": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_all_patterns.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_connect_all_to_all": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      154
     ]
    },
    "nest.tests.test_connect_all_to_all.run": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_connect_all_to_all.TestAllToAll": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "nest.tests.test_connect_all_to_all.TestAllToAll.testConnectivity": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "len": {
     "line number": [
      46,
      46,
      51,
      51
     ]
    },
    "numpy.ones": {
     "line number": [
      46
     ]
    },
    "numpy.zeros": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_all_to_all.TestAllToAll.testInputArray": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "float": {
     "line number": [
      59
     ]
    },
    "numpy.arange": {
     "line number": [
      58,
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_all_to_all.TestAllToAll.testInputArrayRPort": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      97
     ]
    },
    "numpy.asarray": {
     "line number": [
      96
     ]
    },
    "numpy.transpose": {
     "line number": [
      96
     ]
    },
    "range": {
     "line number": [
      93,
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_all_to_all.TestAllToAll.testInputArrayToStdpSynapse": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      111,
      114
     ]
    },
    "float": {
     "line number": [
      108
     ]
    },
    "numpy.arange": {
     "line number": [
      108
     ]
    },
    "range": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_all_to_all.TestAllToAll.testInputArrayWithoutAutapses": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "float": {
     "line number": [
      79
     ]
    },
    "numpy.arange": {
     "line number": [
      78,
      81
     ]
    },
    "numpy.fill_diagonal": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_all_to_all.TestAllToAll.testRPortDistribution": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      138
     ]
    },
    "numpy.array_equal": {
     "line number": [
      138
     ]
    },
    "range": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_all_to_all.hf": {
  "data": {
   "shadows": "test_connect_helpers"
  },
  "type": "import"
 },
 "nest.tests.test_connect_all_to_all.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_connect_all_to_all.run": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "nest.tests.test_connect_all_to_all.suite": {
     "line number": [
      151
     ]
    },
    "nest.tests.test_connect_all_to_all.unittest": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_all_to_all.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nest.tests.test_connect_all_to_all.suite": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "nest.tests.test_connect_all_to_all.TestAllToAll": {
     "line number": [
      145
     ]
    },
    "nest.tests.test_connect_all_to_all.unittest": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_all_to_all.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_connect_array_fixed_indegree": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      97
     ]
    },
    "nest.tests.test_connect_array_fixed_indegree.run": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_connect_array_fixed_indegree.ConnectArrayFixedIndegreeTestCase": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "nest.tests.test_connect_array_fixed_indegree.nest": {
     "line number": [
      32
     ]
    },
    "nest.tests.test_connect_array_fixed_indegree.unittest": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_connect_array_fixed_indegree.ConnectArrayFixedIndegreeTestCase.test_Connect_Array_Fixed_Indegree": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "len": {
     "line number": [
      68,
      77
     ]
    },
    "nest.tests.test_connect_array_fixed_indegree.nest": {
     "line number": [
      45,
      47,
      48,
      58,
      63,
      70,
      71
     ]
    },
    "range": {
     "line number": [
      50,
      50,
      51,
      51,
      60,
      68,
      83
     ]
    },
    "sorted": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_array_fixed_indegree.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_connect_array_fixed_indegree.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_connect_array_fixed_indegree.run": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "nest.tests.test_connect_array_fixed_indegree.suite": {
     "line number": [
      95
     ]
    },
    "nest.tests.test_connect_array_fixed_indegree.unittest": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_array_fixed_indegree.suite": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "nest.tests.test_connect_array_fixed_indegree.ConnectArrayFixedIndegreeTestCase": {
     "line number": [
      89
     ]
    },
    "nest.tests.test_connect_array_fixed_indegree.unittest": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_array_fixed_indegree.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_connect_array_fixed_outdegree": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      97
     ]
    },
    "nest.tests.test_connect_array_fixed_outdegree.run": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_connect_array_fixed_outdegree.ConnectArrayFixedOutdegreeTestCase": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "nest.tests.test_connect_array_fixed_outdegree.nest": {
     "line number": [
      32
     ]
    },
    "nest.tests.test_connect_array_fixed_outdegree.unittest": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_connect_array_fixed_outdegree.ConnectArrayFixedOutdegreeTestCase.test_Connect_Array_Fixed_Outdegree": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "len": {
     "line number": [
      68,
      77
     ]
    },
    "nest.tests.test_connect_array_fixed_outdegree.nest": {
     "line number": [
      45,
      47,
      48,
      58,
      63,
      70,
      71
     ]
    },
    "range": {
     "line number": [
      50,
      50,
      51,
      51,
      60,
      68,
      83
     ]
    },
    "sorted": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_array_fixed_outdegree.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_connect_array_fixed_outdegree.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_connect_array_fixed_outdegree.run": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "nest.tests.test_connect_array_fixed_outdegree.suite": {
     "line number": [
      95
     ]
    },
    "nest.tests.test_connect_array_fixed_outdegree.unittest": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_array_fixed_outdegree.suite": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "nest.tests.test_connect_array_fixed_outdegree.ConnectArrayFixedOutdegreeTestCase": {
     "line number": [
      89
     ]
    },
    "nest.tests.test_connect_array_fixed_outdegree.unittest": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_array_fixed_outdegree.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_connect_distributions": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      269
     ]
    },
    "nest.tests.test_connect_distributions.nest": {
     "line number": [
      26
     ]
    },
    "nest.tests.test_connect_distributions.runner": {
     "line number": [
      271
     ]
    },
    "nest.tests.test_connect_distributions.suite": {
     "line number": [
      271
     ]
    },
    "nest.tests.test_connect_distributions.unittest": {
     "line number": [
      270
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_connect_distributions.HAVE_GSL": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "nest.tests.test_connect_distributions.TestDists": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "nest.tests.test_connect_distributions.unittest": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_connect_distributions.TestDists.setUp": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "nest.tests.test_connect_distributions.nest": {
     "line number": [
      44,
      45,
      46,
      48,
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.setUpNetwork": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "nest.tests.test_connect_distributions.nest": {
     "line number": [
      60,
      61,
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testBinomialClippedDist": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testBinomialDist": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testExponentialClippedDist": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testExponentialDist": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testGammaClippedDist": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testGammaDist": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testGslBinomialDist": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "nest.tests.test_connect_distributions.HAVE_GSL": {
     "line number": [
      119
     ]
    },
    "nest.tests.test_connect_distributions.unittest": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testLognormalClippedDist": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testLognormalDist": {
  "data": {
   "lineno": 186
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testNormalClippedDist": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testNormalDist": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testPoissonClippedDist": {
  "data": {
   "lineno": 224
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testPoissonDist": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testUniformDist": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testUniformIntDist": {
  "data": {
   "lineno": 251
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.hf": {
  "data": {
   "shadows": "test_connect_helpers"
  },
  "type": "import"
 },
 "nest.tests.test_connect_distributions.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_connect_distributions.runner": {
  "data": {
   "lineno": 270
  },
  "type": "constant"
 },
 "nest.tests.test_connect_distributions.suite": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": {
    "nest.tests.test_connect_distributions.TestDists": {
     "line number": [
      265
     ]
    },
    "nest.tests.test_connect_distributions.unittest": {
     "line number": [
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_distributions.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_connect_fixed_indegree": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      164
     ]
    },
    "nest.tests.test_connect_fixed_indegree.run": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_connect_fixed_indegree.TestFixedInDegree": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "nest.tests.test_connect_fixed_indegree.TestFixedInDegree.testAutapsesFalse": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      123
     ]
    },
    "numpy.zeros": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_indegree.TestFixedInDegree.testAutapsesTrue": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      109
     ]
    },
    "numpy.ones": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_indegree.TestFixedInDegree.testErrorMessages": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_indegree.TestFixedInDegree.testInDegree": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "len": {
     "line number": [
      73,
      73
     ]
    },
    "numpy.ones": {
     "line number": [
      69
     ]
    },
    "numpy.sum": {
     "line number": [
      68
     ]
    },
    "numpy.zeros": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_indegree.TestFixedInDegree.testMultapsesFalse": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "numpy.ones": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_indegree.TestFixedInDegree.testMultapsesTrue": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "len": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_indegree.TestFixedInDegree.testStatistics": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "range": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_indegree.hf": {
  "data": {
   "shadows": "test_connect_helpers"
  },
  "type": "import"
 },
 "nest.tests.test_connect_fixed_indegree.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_connect_fixed_indegree.run": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "nest.tests.test_connect_fixed_indegree.suite": {
     "line number": [
      161
     ]
    },
    "nest.tests.test_connect_fixed_indegree.unittest": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_indegree.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nest.tests.test_connect_fixed_indegree.suite": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "nest.tests.test_connect_fixed_indegree.TestFixedInDegree": {
     "line number": [
      155
     ]
    },
    "nest.tests.test_connect_fixed_indegree.unittest": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_indegree.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_connect_fixed_outdegree": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      162
     ]
    },
    "nest.tests.test_connect_fixed_outdegree.run": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree": {
  "data": {
   "lineno": 29
  },
  "type": "class"
 },
 "nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree.testAutapsesFalse": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      121
     ]
    },
    "numpy.zeros": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree.testAutapsesTrue": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      107
     ]
    },
    "numpy.ones": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree.testErrorMessages": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree.testMultapsesFalse": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "numpy.ones": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree.testMultapsesTrue": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "len": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree.testOutDegree": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "len": {
     "line number": [
      71,
      71
     ]
    },
    "numpy.ones": {
     "line number": [
      67
     ]
    },
    "numpy.sum": {
     "line number": [
      66
     ]
    },
    "numpy.zeros": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree.testStatistics": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "range": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_outdegree.hf": {
  "data": {
   "shadows": "test_connect_helpers"
  },
  "type": "import"
 },
 "nest.tests.test_connect_fixed_outdegree.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_connect_fixed_outdegree.run": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "nest.tests.test_connect_fixed_outdegree.suite": {
     "line number": [
      159
     ]
    },
    "nest.tests.test_connect_fixed_outdegree.unittest": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_outdegree.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nest.tests.test_connect_fixed_outdegree.suite": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree": {
     "line number": [
      153
     ]
    },
    "nest.tests.test_connect_fixed_outdegree.unittest": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_outdegree.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_connect_fixed_total_number": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      134
     ]
    },
    "nest.tests.test_connect_fixed_total_number.run": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber.testAutapsesFalse": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      121
     ]
    },
    "numpy.zeros": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber.testAutapsesTrue": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      108
     ]
    },
    "numpy.sum": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber.testErrorMessages": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber.testStatistics": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "range": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber.testTotalNumberOfConnections": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "len": {
     "line number": [
      64,
      69,
      69
     ]
    },
    "numpy.zeros": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_total_number.hf": {
  "data": {
   "shadows": "test_connect_helpers"
  },
  "type": "import"
 },
 "nest.tests.test_connect_fixed_total_number.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_connect_fixed_total_number.run": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "nest.tests.test_connect_fixed_total_number.suite": {
     "line number": [
      131
     ]
    },
    "nest.tests.test_connect_fixed_total_number.unittest": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_total_number.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nest.tests.test_connect_fixed_total_number.suite": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber": {
     "line number": [
      125
     ]
    },
    "nest.tests.test_connect_fixed_total_number.unittest": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_fixed_total_number.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_connect_helpers": {
  "data": {},
  "type": "module"
 },
 "nest.tests.test_connect_helpers.MPI": {
  "data": {
   "shadows": "mpi4py.MPI"
  },
  "type": "import"
 },
 "nest.tests.test_connect_helpers.adaptive_check": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": {
    "nest.tests.test_connect_helpers.chi_squared_check": {
     "line number": [
      397
     ]
    },
    "nest.tests.test_connect_helpers.two_level_check": {
     "line number": [
      402
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.all_equal": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "len": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.check_ks": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      508
     ]
    },
    "len": {
     "line number": [
      476
     ]
    },
    "nest.tests.test_connect_helpers.get_clipped_cdf": {
     "line number": [
      479
     ]
    },
    "nest.tests.test_connect_helpers.get_expected_freqs": {
     "line number": [
      476
     ]
    },
    "nest.tests.test_connect_helpers.get_weighted_connectivity_matrix": {
     "line number": [
      471
     ]
    },
    "numpy.exp": {
     "line number": [
      503
     ]
    },
    "numpy.inf": {
     "line number": [
      489,
      491
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.check_synapse": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      141,
      144
     ]
    },
    "nest.tests.test_connect_helpers.all_equal": {
     "line number": [
      148
     ]
    },
    "nest.tests.test_connect_helpers.nest": {
     "line number": [
      145,
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.chi_squared_check": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": {
    "int": {
     "line number": [
      330,
      331
     ]
    },
    "numpy.array": {
     "line number": [
      336,
      337,
      340,
      340
     ]
    },
    "range": {
     "line number": [
      330
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.counter": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "len": {
     "line number": [
      167,
      167
     ]
    },
    "min": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.gather_data": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      45
     ]
    },
    "list": {
     "line number": [
      45
     ]
    },
    "mpi4py.MPI.COMM_WORLD.Get_rank": {
     "line number": [
      44
     ]
    },
    "mpi4py.MPI.COMM_WORLD.gather": {
     "line number": [
      43
     ]
    },
    "nest.tests.test_connect_helpers.haveMPI4Py": {
     "line number": [
      42
     ]
    },
    "sum": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.get_clipped_cdf": {
  "data": {
   "lineno": 406
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.get_clipped_cdf.clipped_cdf": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      430
     ]
    },
    "numpy.exp": {
     "line number": [
      411,
      413,
      415
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.get_connectivity_matrix": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "len": {
     "line number": [
      99,
      99
     ]
    },
    "nest.tests.test_connect_helpers.nest": {
     "line number": [
      100
     ]
    },
    "numpy.asarray": {
     "line number": [
      102,
      103
     ]
    },
    "numpy.where": {
     "line number": [
      105,
      107
     ]
    },
    "numpy.zeros": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.get_degrees": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "nest.tests.test_connect_helpers.get_connectivity_matrix": {
     "line number": [
      177
     ]
    },
    "numpy.sum": {
     "line number": [
      179,
      181
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.get_expected_degrees_bernoulli": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      237,
      259
     ]
    },
    "int": {
     "line number": [
      224
     ]
    },
    "len": {
     "line number": [
      236,
      258
     ]
    },
    "numpy.array": {
     "line number": [
      271
     ]
    },
    "range": {
     "line number": [
      231,
      253
     ]
    },
    "reversed": {
     "line number": [
      253
     ]
    },
    "round": {
     "line number": [
      224
     ]
    },
    "sum": {
     "line number": [
      273,
      275
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.get_expected_degrees_fixedDegrees": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "float": {
     "line number": [
      190
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.get_expected_degrees_totalNumber": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": {
    "float": {
     "line number": [
      198,
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.get_expected_freqs": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      453
     ]
    },
    "numpy.sum": {
     "line number": [
      461
     ]
    },
    "numpy.where": {
     "line number": [
      458,
      459,
      460
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.get_weighted_connectivity_matrix": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "len": {
     "line number": [
      122,
      122
     ]
    },
    "nest.tests.test_connect_helpers.nest": {
     "line number": [
      123,
      134,
      134
     ]
    },
    "numpy.asarray": {
     "line number": [
      125,
      126
     ]
    },
    "numpy.where": {
     "line number": [
      128,
      130
     ]
    },
    "numpy.zeros": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.haveMPI4Py": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "nest.tests.test_connect_helpers.is_array": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      61
     ]
    },
    "list": {
     "line number": [
      61
     ]
    },
    "numpy.generic": {
     "line number": [
      61
     ]
    },
    "numpy.ndarray": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.mpi_assert": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      77,
      78
     ]
    },
    "nest.tests.test_connect_helpers.gather_data": {
     "line number": [
      74
     ]
    },
    "numpy.allclose": {
     "line number": [
      79
     ]
    },
    "numpy.generic": {
     "line number": [
      77,
      78
     ]
    },
    "numpy.ndarray": {
     "line number": [
      77,
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.mpi_barrier": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "mpi4py.MPI.COMM_WORLD.Barrier": {
     "line number": [
      66
     ]
    },
    "nest.tests.test_connect_helpers.haveMPI4Py": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_connect_helpers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_connect_helpers.reset_seed": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": {
    "nest.tests.test_connect_helpers.nest": {
     "line number": [
      292,
      293,
      294,
      296,
      297
     ]
    },
    "range": {
     "line number": [
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_helpers.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nest.tests.test_connect_helpers.truncexpon": {
  "data": {
   "shadows": "scipy.stats.truncexpon"
  },
  "type": "import"
 },
 "nest.tests.test_connect_helpers.two_level_check": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": {
    "nest.tests.test_connect_helpers.chi_squared_check": {
     "line number": [
      370
     ]
    },
    "print": {
     "line number": [
      369
     ]
    },
    "range": {
     "line number": [
      367
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_one_to_one": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      111
     ]
    },
    "nest.tests.test_connect_one_to_one.run": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_connect_one_to_one.TestOneToOne": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "nest.tests.test_connect_one_to_one.TestOneToOne.testConnectivity": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "numpy.identity": {
     "line number": [
      43
     ]
    },
    "numpy.zeros": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_one_to_one.TestOneToOne.testInputArray": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "float": {
     "line number": [
      64
     ]
    },
    "numpy.arange": {
     "line number": [
      64,
      66
     ]
    },
    "numpy.diag": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_one_to_one.TestOneToOne.testInputArrayRPort": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "int": {
     "line number": [
      81
     ]
    },
    "numpy.arange": {
     "line number": [
      81
     ]
    },
    "numpy.diag": {
     "line number": [
      86
     ]
    },
    "range": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_one_to_one.TestOneToOne.testInputArrayToStdpSynapse": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      92,
      95
     ]
    },
    "float": {
     "line number": [
      91
     ]
    },
    "numpy.arange": {
     "line number": [
      91
     ]
    },
    "numpy.diag": {
     "line number": [
      98
     ]
    },
    "range": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_one_to_one.TestOneToOne.testSymmetricFlag": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "numpy.identity": {
     "line number": [
      58
     ]
    },
    "numpy.transpose": {
     "line number": [
      56
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_one_to_one.hf": {
  "data": {
   "shadows": "test_connect_helpers"
  },
  "type": "import"
 },
 "nest.tests.test_connect_one_to_one.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_connect_one_to_one.run": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "nest.tests.test_connect_one_to_one.suite": {
     "line number": [
      108
     ]
    },
    "nest.tests.test_connect_one_to_one.unittest": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_one_to_one.suite": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "nest.tests.test_connect_one_to_one.TestOneToOne": {
     "line number": [
      102
     ]
    },
    "nest.tests.test_connect_one_to_one.unittest": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_one_to_one.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_connect_pairwise_bernoulli": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      104
     ]
    },
    "nest.tests.test_connect_pairwise_bernoulli.run": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_connect_pairwise_bernoulli.TestPairwiseBernoulli": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "nest.tests.test_connect_pairwise_bernoulli.TestPairwiseBernoulli.testAutapsesFalse": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      91
     ]
    },
    "numpy.zeros": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_pairwise_bernoulli.TestPairwiseBernoulli.testAutapsesTrue": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      77
     ]
    },
    "numpy.ones": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_pairwise_bernoulli.TestPairwiseBernoulli.testStatistics": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "range": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_pairwise_bernoulli.hf": {
  "data": {
   "shadows": "test_connect_helpers"
  },
  "type": "import"
 },
 "nest.tests.test_connect_pairwise_bernoulli.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_connect_pairwise_bernoulli.run": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "nest.tests.test_connect_pairwise_bernoulli.suite": {
     "line number": [
      101
     ]
    },
    "nest.tests.test_connect_pairwise_bernoulli.unittest": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_pairwise_bernoulli.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nest.tests.test_connect_pairwise_bernoulli.suite": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "nest.tests.test_connect_pairwise_bernoulli.TestPairwiseBernoulli": {
     "line number": [
      95
     ]
    },
    "nest.tests.test_connect_pairwise_bernoulli.unittest": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_pairwise_bernoulli.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_connect_parameters": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      292
     ]
    },
    "nest.tests.test_connect_parameters.runner": {
     "line number": [
      294
     ]
    },
    "nest.tests.test_connect_parameters.suite": {
     "line number": [
      294
     ]
    },
    "nest.tests.test_connect_parameters.unittest": {
     "line number": [
      293
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_connect_parameters.TestParams": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "nest.tests.test_connect_parameters.unittest": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_connect_parameters.TestParams.setUp": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.setUpNetwork": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.setUpNetworkOnePop": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testAutapsesFalse": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      154
     ]
    },
    "numpy.zeros": {
     "line number": [
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testAutapsesTrue": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      143
     ]
    },
    "numpy.ones": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testDefaultParams": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "all": {
     "line number": [
      129,
      130,
      131,
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testDelayAllSynapses": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testDelaySetting": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testHtSynapse": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testQuantalStpSynapse": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testRPortAllSynapses": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      229
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testRPortSetting": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testStdpDopamineSynapse": {
  "data": {
   "lineno": 209
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testStdpFacetshwSynapseHom": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testStdpPlSynapseHom": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testStdpSynapse": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testStdpSynapseHom": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testSynapseSetting": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "str": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testTsodyks2Synapse": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testTsodyksSynapse": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testWeightAllSynapses": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testWeightSetting": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.hf": {
  "data": {
   "shadows": "test_connect_helpers"
  },
  "type": "import"
 },
 "nest.tests.test_connect_parameters.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_connect_parameters.runner": {
  "data": {
   "lineno": 293
  },
  "type": "constant"
 },
 "nest.tests.test_connect_parameters.suite": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": {
    "nest.tests.test_connect_parameters.TestParams": {
     "line number": [
      289
     ]
    },
    "nest.tests.test_connect_parameters.unittest": {
     "line number": [
      289
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_parameters.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      152
     ]
    },
    "nest.tests.test_connect_symmetric_pairwise_bernoulli.run": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli": {
  "data": {
   "lineno": 31
  },
  "type": "class"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli.testAutapsesFalse": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      87
     ]
    },
    "numpy.zeros": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli.testAutapsesTrue": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli.testMakeSymmetric": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "set": {
     "line number": [
      131
     ]
    },
    "tuple": {
     "line number": [
      133,
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli.testMultapses": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "int": {
     "line number": [
      108
     ]
    },
    "nest.tests.test_connect_symmetric_pairwise_bernoulli.collections": {
     "line number": [
      108
     ]
    },
    "tuple": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli.testStatistics": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "range": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli.hf": {
  "data": {
   "shadows": "test_connect_helpers"
  },
  "type": "import"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli.run": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "nest.tests.test_connect_symmetric_pairwise_bernoulli.suite": {
     "line number": [
      149
     ]
    },
    "nest.tests.test_connect_symmetric_pairwise_bernoulli.unittest": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli.suite": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli": {
     "line number": [
      143
     ]
    },
    "nest.tests.test_connect_symmetric_pairwise_bernoulli.unittest": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_create": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      114
     ]
    },
    "nest.tests.test_create.run": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_create.CreateTestCase": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "nest.tests.test_create.nest": {
     "line number": [
      31
     ]
    },
    "nest.tests.test_create.unittest": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_create.CreateTestCase.test_CopyModel": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "nest.tests.test_create.nest": {
     "line number": [
      85,
      87,
      88,
      91,
      92,
      95,
      96,
      97,
      101,
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_create.CreateTestCase.test_ModelCreate": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "nest.tests.test_create.nest": {
     "line number": [
      38,
      40,
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_create.CreateTestCase.test_ModelCreateN": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "len": {
     "line number": [
      52
     ]
    },
    "nest.tests.test_create.nest": {
     "line number": [
      47,
      50,
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_create.CreateTestCase.test_ModelCreateNdict": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      67
     ]
    },
    "UserWarning": {
     "line number": [
      69
     ]
    },
    "issubclass": {
     "line number": [
      69
     ]
    },
    "nest.tests.test_create.nest": {
     "line number": [
      57,
      61,
      63,
      67
     ]
    },
    "nest.tests.test_create.warnings": {
     "line number": [
      65,
      66
     ]
    },
    "tuple": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_create.CreateTestCase.test_ModelDicts": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "nest.tests.test_create.nest": {
     "line number": [
      74,
      78,
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_create.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_create.run": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "nest.tests.test_create.suite": {
     "line number": [
      112
     ]
    },
    "nest.tests.test_create.unittest": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_create.suite": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "nest.tests.test_create.CreateTestCase": {
     "line number": [
      106
     ]
    },
    "nest.tests.test_create.unittest": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_create.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_create.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nest.tests.test_csa": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      34,
      40
     ]
    },
    "__name__": {
     "line number": [
      223
     ]
    },
    "nest.tests.test_csa.nest": {
     "line number": [
      43,
      44
     ]
    },
    "nest.tests.test_csa.run": {
     "line number": [
      224
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_csa.CSATestCase": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "nest.tests.test_csa.HAVE_CSA": {
     "line number": [
      48
     ]
    },
    "nest.tests.test_csa.HAVE_LIBNEUROSIM": {
     "line number": [
      50
     ]
    },
    "nest.tests.test_csa.nest": {
     "line number": [
      47
     ]
    },
    "nest.tests.test_csa.unittest": {
     "line number": [
      53,
      48,
      49
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_csa.CSATestCase.test_CSA_OneToOne_intvectors": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "len": {
     "line number": [
      108,
      113
     ]
    },
    "nest.tests.test_csa.HAVE_NUMPY": {
     "line number": [
      85
     ]
    },
    "nest.tests.test_csa.csa": {
     "line number": [
      97,
      97
     ]
    },
    "nest.tests.test_csa.nest": {
     "line number": [
      89,
      93,
      94,
      102,
      107,
      107,
      112,
      112
     ]
    },
    "nest.tests.test_csa.numpy": {
     "line number": [
      102,
      102
     ]
    },
    "nest.tests.test_csa.unittest": {
     "line number": [
      85
     ]
    },
    "range": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_csa.CSATestCase.test_CSA_OneToOne_params": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "len": {
     "line number": [
      139,
      146
     ]
    },
    "nest.tests.test_csa.csa": {
     "line number": [
      128,
      128
     ]
    },
    "nest.tests.test_csa.nest": {
     "line number": [
      118,
      124,
      125,
      133,
      138,
      138,
      145,
      145
     ]
    },
    "range": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_csa.CSATestCase.test_CSA_OneToOne_synmodel": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "len": {
     "line number": [
      169,
      175
     ]
    },
    "nest.tests.test_csa.csa": {
     "line number": [
      160,
      160
     ]
    },
    "nest.tests.test_csa.nest": {
     "line number": [
      151,
      156,
      157,
      163,
      168,
      168,
      174,
      174
     ]
    },
    "range": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_csa.CSATestCase.test_CSA_OneToOne_tuples": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "len": {
     "line number": [
      78,
      83
     ]
    },
    "nest.tests.test_csa.csa": {
     "line number": [
      67,
      67
     ]
    },
    "nest.tests.test_csa.nest": {
     "line number": [
      59,
      63,
      64,
      72,
      77,
      77,
      82,
      82
     ]
    },
    "range": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_csa.CSATestCase.test_CSA_error_unknown_nodes": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "nest.tests.test_csa.csa": {
     "line number": [
      183,
      183
     ]
    },
    "nest.tests.test_csa.nest": {
     "line number": [
      180,
      189,
      190
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_csa.CSATestCase.test_CSA_error_unknown_synapse": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "nest.tests.test_csa.csa": {
     "line number": [
      198,
      198
     ]
    },
    "nest.tests.test_csa.nest": {
     "line number": [
      195,
      202,
      203,
      207,
      208
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_csa.HAVE_CSA": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "nest.tests.test_csa.HAVE_LIBNEUROSIM": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "nest.tests.test_csa.HAVE_NUMPY": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "nest.tests.test_csa.csa": {
  "data": {
   "shadows": "csa"
  },
  "type": "import"
 },
 "nest.tests.test_csa.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_csa.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_csa.run": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "nest.tests.test_csa.suite": {
     "line number": [
      220
     ]
    },
    "nest.tests.test_csa.unittest": {
     "line number": [
      219
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_csa.suite": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": {
    "nest.tests.test_csa.CSATestCase": {
     "line number": [
      214
     ]
    },
    "nest.tests.test_csa.unittest": {
     "line number": [
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_csa.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_current_recording_generators": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      221
     ]
    },
    "nest.tests.test_current_recording_generators.run": {
     "line number": [
      222
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_current_recording_generators.CurrentRecordingGeneratorTestCase": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "nest.tests.test_current_recording_generators.nest": {
     "line number": [
      31
     ]
    },
    "nest.tests.test_current_recording_generators.unittest": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_current_recording_generators.CurrentRecordingGeneratorTestCase.setUp": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "nest.tests.test_current_recording_generators.nest": {
     "line number": [
      42,
      43,
      46,
      55,
      62,
      64,
      69,
      76,
      77,
      79,
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_current_recording_generators.CurrentRecordingGeneratorTestCase.test_GetRecordables": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "nest.tests.test_current_recording_generators.nest": {
     "line number": [
      91,
      95,
      99,
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_current_recording_generators.CurrentRecordingGeneratorTestCase.test_RecordedCurrentVectors": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "len": {
     "line number": [
      156,
      156,
      158,
      158,
      160,
      160,
      162,
      162
     ]
    },
    "nest.tests.test_current_recording_generators.nest": {
     "line number": [
      111,
      113,
      115,
      117,
      119,
      121,
      123,
      125,
      127,
      129,
      132,
      135,
      139,
      143,
      147,
      151
     ]
    },
    "nest.tests.test_current_recording_generators.numpy": {
     "line number": [
      167,
      168,
      169,
      170,
      172,
      176,
      181,
      182,
      183,
      184,
      186,
      189,
      190,
      191,
      192,
      193,
      195,
      197,
      201,
      203,
      204,
      205,
      207
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_current_recording_generators.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_current_recording_generators.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_current_recording_generators.run": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": {
    "nest.tests.test_current_recording_generators.suite": {
     "line number": [
      218
     ]
    },
    "nest.tests.test_current_recording_generators.unittest": {
     "line number": [
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_current_recording_generators.suite": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": {
    "nest.tests.test_current_recording_generators.CurrentRecordingGeneratorTestCase": {
     "line number": [
      213
     ]
    },
    "nest.tests.test_current_recording_generators.unittest": {
     "line number": [
      213
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_current_recording_generators.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_dataconnect": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      77
     ]
    },
    "nest.tests.test_dataconnect.run": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_dataconnect.DataConnectTestCase": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "nest.tests.test_dataconnect.nest": {
     "line number": [
      30
     ]
    },
    "nest.tests.test_dataconnect.unittest": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_dataconnect.DataConnectTestCase.test_DataConnect": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "list": {
     "line number": [
      60,
      61
     ]
    },
    "nest.tests.test_dataconnect.nest": {
     "line number": [
      37,
      39,
      46,
      47,
      48,
      55,
      56,
      57,
      58
     ]
    },
    "range": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_dataconnect.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_dataconnect.run": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "nest.tests.test_dataconnect.suite": {
     "line number": [
      74
     ]
    },
    "nest.tests.test_dataconnect.unittest": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_dataconnect.suite": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "nest.tests.test_dataconnect.DataConnectTestCase": {
     "line number": [
      68
     ]
    },
    "nest.tests.test_dataconnect.unittest": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_dataconnect.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_erfc_neuron": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      126
     ]
    },
    "nest.tests.test_erfc_neuron.run": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_erfc_neuron.ErfcNeuronTheoryTestCase": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "nest.tests.test_erfc_neuron.unittest": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_erfc_neuron.ErfcNeuronTheoryTestCase.build_and_connect_nodes": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "nest.tests.test_erfc_neuron.nest": {
     "line number": [
      86,
      87,
      89,
      91,
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_erfc_neuron.ErfcNeuronTheoryTestCase.setUp": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "numpy.linspace": {
     "line number": [
      79
     ]
    },
    "numpy.logspace": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_erfc_neuron.ErfcNeuronTheoryTestCase.test_activation_function": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "nest.tests.test_erfc_neuron.activation_function_theory": {
     "line number": [
      104
     ]
    },
    "nest.tests.test_erfc_neuron.get_mean_activity": {
     "line number": [
      103
     ]
    },
    "nest.tests.test_erfc_neuron.nest": {
     "line number": [
      102
     ]
    },
    "numpy.max": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_erfc_neuron.activation_function_theory": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "numpy.sqrt": {
     "line number": [
      69
     ]
    },
    "scipy.special.erfc": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_erfc_neuron.erfc": {
  "data": {
   "shadows": "scipy.special.erfc"
  },
  "type": "import"
 },
 "nest.tests.test_erfc_neuron.get_mean_activity": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "len": {
     "line number": [
      42,
      50
     ]
    },
    "nest.tests.test_erfc_neuron.nest": {
     "line number": [
      37,
      38
     ]
    },
    "numpy.diff": {
     "line number": [
      46,
      52
     ]
    },
    "numpy.hstack": {
     "line number": [
      41
     ]
    },
    "numpy.sum": {
     "line number": [
      46,
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_erfc_neuron.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_erfc_neuron.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_erfc_neuron.run": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "nest.tests.test_erfc_neuron.suite": {
     "line number": [
      123
     ]
    },
    "nest.tests.test_erfc_neuron.unittest": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_erfc_neuron.suite": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "nest.tests.test_erfc_neuron.ErfcNeuronTheoryTestCase": {
     "line number": [
      117
     ]
    },
    "nest.tests.test_erfc_neuron.unittest": {
     "line number": [
      116,
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_erfc_neuron.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_errors": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      88
     ]
    },
    "nest.tests.test_errors.run": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_errors.ErrorTestCase": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "nest.tests.test_errors.nest": {
     "line number": [
      30
     ]
    },
    "nest.tests.test_errors.unittest": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_errors.ErrorTestCase.test_DivisionByZero": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "nest.tests.test_errors.nest": {
     "line number": [
      57,
      60,
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_errors.ErrorTestCase.test_Raise": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "nest.tests.test_errors.nest": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_errors.ErrorTestCase.test_Raise.raise_custom_exception": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "exc": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_errors.ErrorTestCase.test_StackUnderFlow": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "nest.tests.test_errors.nest": {
     "line number": [
      49,
      52,
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_errors.ErrorTestCase.test_UnknownModel": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "nest.tests.test_errors.nest": {
     "line number": [
      73,
      76,
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_errors.ErrorTestCase.test_UnknownNode": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "nest.tests.test_errors.nest": {
     "line number": [
      65,
      68,
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_errors.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_errors.run": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "nest.tests.test_errors.suite": {
     "line number": [
      86
     ]
    },
    "nest.tests.test_errors.unittest": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_errors.suite": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "nest.tests.test_errors.ErrorTestCase": {
     "line number": [
      80
     ]
    },
    "nest.tests.test_errors.unittest": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_errors.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_events": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      93
     ]
    },
    "nest.tests.test_events.runner": {
     "line number": [
      96
     ]
    },
    "nest.tests.test_events.suite": {
     "line number": [
      96
     ]
    },
    "nest.tests.test_events.unittest": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_events.EventsTestCase": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "nest.tests.test_events.nest": {
     "line number": [
      30
     ]
    },
    "nest.tests.test_events.unittest": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_events.EventsTestCase.test_EventsSpikes": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "len": {
     "line number": [
      84
     ]
    },
    "nest.tests.test_events.nest": {
     "line number": [
      71,
      73,
      75,
      76,
      78,
      79,
      80,
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_events.EventsTestCase.test_EventsVoltage": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "len": {
     "line number": [
      66
     ]
    },
    "nest.tests.test_events.nest": {
     "line number": [
      54,
      56,
      57,
      58,
      60,
      61,
      62,
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_events.EventsTestCase.test_Events_1": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "nest.tests.test_events.nest": {
     "line number": [
      37,
      39,
      40,
      45,
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_events.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_events.runner": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "nest.tests.test_events.suite": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "nest.tests.test_events.EventsTestCase": {
     "line number": [
      89
     ]
    },
    "nest.tests.test_events.unittest": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_events.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_facetshw_stdp": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      164
     ]
    },
    "nest.tests.test_facetshw_stdp.run": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_facetshw_stdp.FacetsTestCase": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "nest.tests.test_facetshw_stdp.unittest": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_facetshw_stdp.FacetsTestCase.test_facetshw_stdp": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "all": {
     "line number": [
      93
     ]
    },
    "float": {
     "line number": [
      97
     ]
    },
    "int": {
     "line number": [
      123,
      132
     ]
    },
    "len": {
     "line number": [
      102,
      106,
      124,
      133,
      146
     ]
    },
    "nest.tests.test_facetshw_stdp.nest": {
     "line number": [
      82,
      83,
      84,
      85,
      87,
      90,
      95,
      96,
      100,
      103,
      105,
      107,
      110,
      111,
      112
     ]
    },
    "numpy.allclose": {
     "line number": [
      127,
      136,
      140,
      148
     ]
    },
    "numpy.arange": {
     "line number": [
      64
     ]
    },
    "numpy.array": {
     "line number": [
      115
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      93
     ]
    },
    "numpy.exp": {
     "line number": [
      142,
      149
     ]
    },
    "numpy.ones_like": {
     "line number": [
      141
     ]
    },
    "range": {
     "line number": [
      47,
      102,
      106,
      124,
      133,
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_facetshw_stdp.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_facetshw_stdp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_facetshw_stdp.run": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "nest.tests.test_facetshw_stdp.suite": {
     "line number": [
      161
     ]
    },
    "nest.tests.test_facetshw_stdp.unittest": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_facetshw_stdp.suite": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "nest.tests.test_facetshw_stdp.FacetsTestCase": {
     "line number": [
      155
     ]
    },
    "nest.tests.test_facetshw_stdp.unittest": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_facetshw_stdp.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_getconnections": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      100
     ]
    },
    "nest.tests.test_getconnections.run": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_getconnections.GetConnectionsTestCase": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "nest.tests.test_getconnections.nest": {
     "line number": [
      30
     ]
    },
    "nest.tests.test_getconnections.unittest": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_getconnections.GetConnectionsTestCase.test_GetConnections": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "nest.tests.test_getconnections.nest": {
     "line number": [
      37,
      39,
      40,
      41,
      42,
      48,
      49,
      50,
      53
     ]
    },
    "tuple": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_getconnections.GetConnectionsTestCase.test_GetConnectionsSourceModels": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "len": {
     "line number": [
      85
     ]
    },
    "nest.tests.test_getconnections.nest": {
     "line number": [
      74,
      75,
      77,
      78,
      79,
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_getconnections.GetConnectionsTestCase.test_GetConnectionsTargetModels": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "len": {
     "line number": [
      69
     ]
    },
    "nest.tests.test_getconnections.nest": {
     "line number": [
      58,
      59,
      61,
      62,
      63,
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_getconnections.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_getconnections.run": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "nest.tests.test_getconnections.suite": {
     "line number": [
      97
     ]
    },
    "nest.tests.test_getconnections.unittest": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_getconnections.suite": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "nest.tests.test_getconnections.GetConnectionsTestCase": {
     "line number": [
      91
     ]
    },
    "nest.tests.test_getconnections.unittest": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_getconnections.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_glif_cond": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      202
     ]
    },
    "nest.tests.test_glif_cond.nest": {
     "line number": [
      26
     ]
    },
    "nest.tests.test_glif_cond.run": {
     "line number": [
      203
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_glif_cond.GLIFCONDTestCase": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "nest.tests.test_glif_cond.HAVE_GSL": {
     "line number": [
      29
     ]
    },
    "nest.tests.test_glif_cond.unittest": {
     "line number": [
      30,
      29
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_glif_cond.GLIFCONDTestCase.setUp": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "nest.tests.test_glif_cond.nest": {
     "line number": [
      38,
      39,
      42
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      40
     ]
    },
    "range": {
     "line number": [
      41,
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_glif_cond.GLIFCONDTestCase.simulate_w_stim": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "nest.tests.test_glif_cond.nest": {
     "line number": [
      54,
      57,
      60,
      64,
      67,
      68,
      73,
      74,
      75,
      76,
      78,
      80,
      83,
      84,
      86,
      88,
      90,
      92,
      93,
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_glif_cond.GLIFCONDTestCase.test_lif": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      116
     ]
    },
    "numpy.isclose": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_glif_cond.GLIFCONDTestCase.test_lif_asc": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      155
     ]
    },
    "numpy.isclose": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_glif_cond.GLIFCONDTestCase.test_lif_r": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      137
     ]
    },
    "numpy.isclose": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_glif_cond.GLIFCONDTestCase.test_lif_r_asc": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      172
     ]
    },
    "numpy.isclose": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_glif_cond.GLIFCONDTestCase.test_lif_r_asc_a": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      189
     ]
    },
    "numpy.isclose": {
     "line number": [
      190
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_glif_cond.HAVE_GSL": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "nest.tests.test_glif_cond.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_glif_cond.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_glif_cond.run": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": {
    "nest.tests.test_glif_cond.suite": {
     "line number": [
      199
     ]
    },
    "nest.tests.test_glif_cond.unittest": {
     "line number": [
      198
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_glif_cond.suite": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": {
    "nest.tests.test_glif_cond.GLIFCONDTestCase": {
     "line number": [
      194
     ]
    },
    "nest.tests.test_glif_cond.unittest": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_glif_cond.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_glif_psc": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      197
     ]
    },
    "nest.tests.test_glif_psc.run": {
     "line number": [
      198
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_glif_psc.GLIFPSCTestCase": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "nest.tests.test_glif_psc.unittest": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_glif_psc.GLIFPSCTestCase.setUp": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "nest.tests.test_glif_psc.nest": {
     "line number": [
      35,
      36,
      39
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      37
     ]
    },
    "range": {
     "line number": [
      38,
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_glif_psc.GLIFPSCTestCase.simulate_w_stim": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "nest.tests.test_glif_psc.nest": {
     "line number": [
      51,
      54,
      58,
      63,
      67,
      70,
      72,
      73,
      74,
      75,
      76,
      80,
      81,
      83,
      84,
      86,
      88,
      89,
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_glif_psc.GLIFPSCTestCase.test_lif": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      112
     ]
    },
    "numpy.isclose": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_glif_psc.GLIFPSCTestCase.test_lif_asc": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      151
     ]
    },
    "numpy.isclose": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_glif_psc.GLIFPSCTestCase.test_lif_r": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      134
     ]
    },
    "numpy.isclose": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_glif_psc.GLIFPSCTestCase.test_lif_r_asc": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      168
     ]
    },
    "numpy.isclose": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_glif_psc.GLIFPSCTestCase.test_lif_r_asc_a": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_glif_psc.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_glif_psc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_glif_psc.run": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "nest.tests.test_glif_psc.suite": {
     "line number": [
      194
     ]
    },
    "nest.tests.test_glif_psc.unittest": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_glif_psc.suite": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "nest.tests.test_glif_psc.GLIFPSCTestCase": {
     "line number": [
      189
     ]
    },
    "nest.tests.test_glif_psc.unittest": {
     "line number": [
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_glif_psc.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_helper_functions": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      54
     ]
    },
    "nest.tests.test_helper_functions.runner": {
     "line number": [
      56
     ]
    },
    "nest.tests.test_helper_functions.suite": {
     "line number": [
      56
     ]
    },
    "nest.tests.test_helper_functions.unittest": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_helper_functions.TestHelperFunctions": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "nest.tests.test_helper_functions.unittest": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_helper_functions.TestHelperFunctions.test_get_verbosity": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "int": {
     "line number": [
      30
     ]
    },
    "isinstance": {
     "line number": [
      30
     ]
    },
    "nest.tests.test_helper_functions.nest": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_helper_functions.TestHelperFunctions.test_set_verbosity": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "nest.tests.test_helper_functions.nest": {
     "line number": [
      44,
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_helper_functions.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_helper_functions.runner": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "nest.tests.test_helper_functions.suite": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "nest.tests.test_helper_functions.TestHelperFunctions": {
     "line number": [
      50
     ]
    },
    "nest.tests.test_helper_functions.unittest": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_helper_functions.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_iaf_psc_alpha_ps": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      196
     ]
    },
    "nest.tests.test_iaf_psc_alpha_ps.run": {
     "line number": [
      197
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_iaf_psc_alpha_ps.IAFPreciseTestCase": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "nest.tests.test_iaf_psc_alpha_ps.unittest": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_iaf_psc_alpha_ps.IAFPreciseTestCase.compute_difference": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      94
     ]
    },
    "nest.tests.test_iaf_psc_alpha_ps.nest": {
     "line number": [
      95
     ]
    },
    "numpy.abs": {
     "line number": [
      98,
      101
     ]
    },
    "numpy.any": {
     "line number": [
      100
     ]
    },
    "numpy.average": {
     "line number": [
      106
     ]
    },
    "numpy.isclose": {
     "line number": [
      99
     ]
    },
    "numpy.where": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_iaf_psc_alpha_ps.IAFPreciseTestCase.setUp": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "nest.tests.test_iaf_psc_alpha_ps.nest": {
     "line number": [
      60,
      61,
      63
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      62
     ]
    },
    "range": {
     "line number": [
      62,
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_iaf_psc_alpha_ps.IAFPreciseTestCase.test_closeness_same_timescales": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "nest.tests.test_iaf_psc_alpha_ps.nest": {
     "line number": [
      116,
      117,
      119,
      121,
      124,
      125,
      126,
      127,
      129,
      130,
      133,
      134,
      136,
      138,
      139
     ]
    },
    "numpy.allclose": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_iaf_psc_alpha_ps.IAFPreciseTestCase.test_unequal_different_timescales": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "nest.tests.test_iaf_psc_alpha_ps.nest": {
     "line number": [
      150,
      151,
      154,
      156,
      159,
      160,
      161,
      162,
      164,
      165,
      168,
      169,
      171,
      173,
      174
     ]
    },
    "numpy.allclose": {
     "line number": [
      179,
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_iaf_psc_alpha_ps.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_iaf_psc_alpha_ps.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_iaf_psc_alpha_ps.run": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "nest.tests.test_iaf_psc_alpha_ps.suite": {
     "line number": [
      193
     ]
    },
    "nest.tests.test_iaf_psc_alpha_ps.unittest": {
     "line number": [
      192
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_iaf_psc_alpha_ps.suite": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "nest.tests.test_iaf_psc_alpha_ps.IAFPreciseTestCase": {
     "line number": [
      188
     ]
    },
    "nest.tests.test_iaf_psc_alpha_ps.unittest": {
     "line number": [
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_iaf_psc_alpha_ps.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_json": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      78
     ]
    },
    "nest.tests.test_json.run": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_json.StatusTestCase": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "nest.tests.test_json.nest": {
     "line number": [
      30
     ]
    },
    "nest.tests.test_json.unittest": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_json.StatusTestCase.test_GetDefaults_JSON": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "nest.tests.test_json.nest": {
     "line number": [
      38,
      41,
      44,
      45
     ]
    },
    "str": {
     "line number": [
      42,
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_json.StatusTestCase.test_GetKernelStatus_JSON": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "nest.tests.test_json.nest": {
     "line number": [
      51,
      52
     ]
    },
    "str": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_json.StatusTestCase.test_GetStatus_JSON": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "nest.tests.test_json.nest": {
     "line number": [
      59,
      62,
      63,
      64
     ]
    },
    "str": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_json.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_json.run": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "nest.tests.test_json.suite": {
     "line number": [
      75
     ]
    },
    "nest.tests.test_json.unittest": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_json.suite": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "nest.tests.test_json.StatusTestCase": {
     "line number": [
      69
     ]
    },
    "nest.tests.test_json.unittest": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_json.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_labeled_synapses": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      228
     ]
    },
    "nest.tests.test_labeled_synapses.nest": {
     "line number": [
      29
     ]
    },
    "nest.tests.test_labeled_synapses.run": {
     "line number": [
      229
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_labeled_synapses.HAVE_GSL": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "nest.tests.test_labeled_synapses.LabeledSynapsesTestCase": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "nest.tests.test_labeled_synapses.HAVE_GSL": {
     "line number": [
      33
     ]
    },
    "nest.tests.test_labeled_synapses.nest": {
     "line number": [
      32
     ]
    },
    "nest.tests.test_labeled_synapses.unittest": {
     "line number": [
      34,
      33
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_labeled_synapses.LabeledSynapsesTestCase.default_network": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "nest.tests.test_labeled_synapses.nest": {
     "line number": [
      38,
      40,
      41,
      42,
      43,
      66,
      70,
      74,
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_labeled_synapses.LabeledSynapsesTestCase.test_GetLabeledSynapses": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "all": {
     "line number": [
      183
     ]
    },
    "nest.tests.test_labeled_synapses.nest": {
     "line number": [
      162,
      168,
      176,
      179,
      181,
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_labeled_synapses.LabeledSynapsesTestCase.test_SetLabelToNotLabeledSynapse": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "nest.tests.test_labeled_synapses.nest": {
     "line number": [
      191,
      197,
      200,
      201,
      204,
      205,
      210,
      213,
      214,
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_labeled_synapses.LabeledSynapsesTestCase.test_SetLabelToSynapseOnConnect": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "all": {
     "line number": [
      98
     ]
    },
    "nest.tests.test_labeled_synapses.nest": {
     "line number": [
      85,
      91,
      94,
      96,
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_labeled_synapses.LabeledSynapsesTestCase.test_SetLabelToSynapseSetDefaults": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "all": {
     "line number": [
      153
     ]
    },
    "nest.tests.test_labeled_synapses.nest": {
     "line number": [
      139,
      145,
      148,
      149,
      151,
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_labeled_synapses.LabeledSynapsesTestCase.test_SetLabelToSynapseSetStatus": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "all": {
     "line number": [
      121,
      130
     ]
    },
    "nest.tests.test_labeled_synapses.nest": {
     "line number": [
      107,
      113,
      116,
      118,
      123,
      128,
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_labeled_synapses.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_labeled_synapses.run": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": {
    "nest.tests.test_labeled_synapses.suite": {
     "line number": [
      225
     ]
    },
    "nest.tests.test_labeled_synapses.unittest": {
     "line number": [
      224
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_labeled_synapses.suite": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "nest.tests.test_labeled_synapses.LabeledSynapsesTestCase": {
     "line number": [
      219
     ]
    },
    "nest.tests.test_labeled_synapses.unittest": {
     "line number": [
      219
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_labeled_synapses.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_mc_neuron": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      162
     ]
    },
    "nest.tests.test_mc_neuron.nest": {
     "line number": [
      26
     ]
    },
    "nest.tests.test_mc_neuron.runner": {
     "line number": [
      164
     ]
    },
    "nest.tests.test_mc_neuron.suite": {
     "line number": [
      164
     ]
    },
    "nest.tests.test_mc_neuron.unittest": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_mc_neuron.HAVE_GSL": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "nest.tests.test_mc_neuron.TestMCNeuron": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "nest.tests.test_mc_neuron.HAVE_GSL": {
     "line number": [
      29
     ]
    },
    "nest.tests.test_mc_neuron.unittest": {
     "line number": [
      30,
      29
     ]
    },
    "numpy.array": {
     "line number": [
      80
     ]
    },
    "numpy.asarray": {
     "line number": [
      58,
      65,
      72
     ]
    },
    "numpy.zeros": {
     "line number": [
      79,
      85
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_mc_neuron.TestMCNeuron.setUp": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "nest.tests.test_mc_neuron.nest": {
     "line number": [
      90,
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_mc_neuron.TestMCNeuron.setUpNetwork": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      124,
      127
     ]
    },
    "nest.tests.test_mc_neuron.nest": {
     "line number": [
      119,
      123,
      125,
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_mc_neuron.TestMCNeuron.setUpNodes": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "nest.tests.test_mc_neuron.nest": {
     "line number": [
      102,
      103,
      104,
      106,
      107,
      110,
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_mc_neuron.TestMCNeuron.testNeuron": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "nest.tests.test_mc_neuron.nest": {
     "line number": [
      134,
      135,
      136,
      137
     ]
    },
    "numpy.allclose": {
     "line number": [
      139,
      142,
      145,
      148,
      151,
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_mc_neuron.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_mc_neuron.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_mc_neuron.runner": {
  "data": {
   "lineno": 163
  },
  "type": "constant"
 },
 "nest.tests.test_mc_neuron.suite": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "nest.tests.test_mc_neuron.TestMCNeuron": {
     "line number": [
      159
     ]
    },
    "nest.tests.test_mc_neuron.unittest": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_mc_neuron.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_networks": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      178
     ]
    },
    "nest.tests.test_networks.run": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_networks.NetworkTestCase": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "nest.tests.test_networks.nest": {
     "line number": [
      30
     ]
    },
    "nest.tests.test_networks.unittest": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_networks.NetworkTestCase.test_BeginEndSubnet": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "nest.tests.test_networks.nest": {
     "line number": [
      37,
      39,
      40,
      42,
      43,
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_networks.NetworkTestCase.test_CurrentSubnet": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "nest.tests.test_networks.nest": {
     "line number": [
      50,
      51,
      53,
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_networks.NetworkTestCase.test_GetChildren": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "nest.tests.test_networks.nest": {
     "line number": [
      121,
      123,
      129,
      132,
      135,
      139,
      143,
      145,
      147
     ]
    },
    "tuple": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_networks.NetworkTestCase.test_GetLeaves": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "nest.tests.test_networks.nest": {
     "line number": [
      59,
      61,
      65,
      68,
      71,
      74,
      78,
      82
     ]
    },
    "tuple": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_networks.NetworkTestCase.test_GetNetwork": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "len": {
     "line number": [
      163,
      163
     ]
    },
    "nest.tests.test_networks.nest": {
     "line number": [
      153,
      154,
      155,
      157,
      158,
      159,
      161,
      162,
      163,
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_networks.NetworkTestCase.test_GetNodes": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "nest.tests.test_networks.nest": {
     "line number": [
      88,
      90,
      96,
      99,
      102,
      105,
      109,
      113,
      115
     ]
    },
    "range": {
     "line number": [
      91
     ]
    },
    "tuple": {
     "line number": [
      91,
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_networks.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_networks.run": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "nest.tests.test_networks.suite": {
     "line number": [
      175
     ]
    },
    "nest.tests.test_networks.unittest": {
     "line number": [
      174
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_networks.suite": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "nest.tests.test_networks.NetworkTestCase": {
     "line number": [
      169
     ]
    },
    "nest.tests.test_networks.unittest": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_networks.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_onetooneconnect": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      127
     ]
    },
    "nest.tests.test_onetooneconnect.run": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_onetooneconnect.OneToOneConnectTestCase": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "nest.tests.test_onetooneconnect.nest": {
     "line number": [
      30
     ]
    },
    "nest.tests.test_onetooneconnect.unittest": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_onetooneconnect.OneToOneConnectTestCase.test_ConnectPrePost": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "nest.tests.test_onetooneconnect.nest": {
     "line number": [
      38,
      39,
      40,
      41,
      42,
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_onetooneconnect.OneToOneConnectTestCase.test_ConnectPrePostParams": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "nest.tests.test_onetooneconnect.nest": {
     "line number": [
      50,
      51,
      52,
      53,
      54,
      55,
      59,
      60,
      61,
      62,
      64,
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_onetooneconnect.OneToOneConnectTestCase.test_ConnectPrePostWD": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "nest.tests.test_onetooneconnect.nest": {
     "line number": [
      72,
      73,
      74,
      75,
      77,
      78,
      79,
      84,
      85,
      86,
      87,
      89,
      90,
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_onetooneconnect.OneToOneConnectTestCase.test_IllegalConnection": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "nest.tests.test_onetooneconnect.nest": {
     "line number": [
      98,
      99,
      100,
      103,
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_onetooneconnect.OneToOneConnectTestCase.test_UnexpectedEvent": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "nest.tests.test_onetooneconnect.nest": {
     "line number": [
      108,
      109,
      110,
      113,
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_onetooneconnect.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_onetooneconnect.run": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "nest.tests.test_onetooneconnect.suite": {
     "line number": [
      124
     ]
    },
    "nest.tests.test_onetooneconnect.unittest": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_onetooneconnect.suite": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "nest.tests.test_onetooneconnect.OneToOneConnectTestCase": {
     "line number": [
      118
     ]
    },
    "nest.tests.test_onetooneconnect.unittest": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_onetooneconnect.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_parrot_neuron": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      265
     ]
    },
    "nest.tests.test_parrot_neuron.run": {
     "line number": [
      266
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_parrot_neuron.ParrotNeuronPoissonTestCase": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "nest.tests.test_parrot_neuron.nest": {
     "line number": [
      100
     ]
    },
    "nest.tests.test_parrot_neuron.unittest": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_parrot_neuron.ParrotNeuronPoissonTestCase.test_ParrotNeuronIncomingMultiplicity": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "nest.tests.test_parrot_neuron.math": {
     "line number": [
      125
     ]
    },
    "nest.tests.test_parrot_neuron.nest": {
     "line number": [
      132,
      133,
      134,
      138,
      139,
      140,
      142,
      143,
      144,
      146,
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron.ParrotNeuronSTDPTestCase": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "nest.tests.test_parrot_neuron.nest": {
     "line number": [
      155
     ]
    },
    "nest.tests.test_parrot_neuron.unittest": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_parrot_neuron.ParrotNeuronSTDPTestCase.run_protocol": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "max": {
     "line number": [
      219
     ]
    },
    "nest.tests.test_parrot_neuron.nest": {
     "line number": [
      169,
      170,
      182,
      184,
      188,
      189,
      191,
      192,
      195,
      196,
      197,
      210,
      214,
      216,
      220,
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron.ParrotNeuronSTDPTestCase.test_ParrotNeuronSTDPProtocolDepression": {
  "data": {
   "lineno": 237
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron.ParrotNeuronSTDPTestCase.test_ParrotNeuronSTDPProtocolPotentiation": {
  "data": {
   "lineno": 228
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron.ParrotNeuronTestCase": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "nest.tests.test_parrot_neuron.nest": {
     "line number": [
      30
     ]
    },
    "nest.tests.test_parrot_neuron.unittest": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_parrot_neuron.ParrotNeuronTestCase.setUp": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "nest.tests.test_parrot_neuron.nest": {
     "line number": [
      35,
      36,
      41,
      43,
      44,
      47,
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron.ParrotNeuronTestCase.test_ParrotNeuronIgnoreSpike": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "events": {
     "line number": [
      75,
      76,
      76
     ]
    },
    "len": {
     "line number": [
      77
     ]
    },
    "nest.tests.test_parrot_neuron.nest": {
     "line number": [
      70,
      72,
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron.ParrotNeuronTestCase.test_ParrotNeuronOutgoingMultiplicity": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "events": {
     "line number": [
      94,
      95,
      95
     ]
    },
    "len": {
     "line number": [
      96
     ]
    },
    "nest.tests.test_parrot_neuron.nest": {
     "line number": [
      89,
      90,
      91,
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron.ParrotNeuronTestCase.test_ParrotNeuronRepeatSpike": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "events": {
     "line number": [
      58,
      59,
      59
     ]
    },
    "nest.tests.test_parrot_neuron.nest": {
     "line number": [
      54,
      55,
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "nest.tests.test_parrot_neuron.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_parrot_neuron.run": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": {
    "nest.tests.test_parrot_neuron.suite": {
     "line number": [
      262
     ]
    },
    "nest.tests.test_parrot_neuron.unittest": {
     "line number": [
      261
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron.suite": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": {
    "nest.tests.test_parrot_neuron.ParrotNeuronPoissonTestCase": {
     "line number": [
      254
     ]
    },
    "nest.tests.test_parrot_neuron.ParrotNeuronSTDPTestCase": {
     "line number": [
      256
     ]
    },
    "nest.tests.test_parrot_neuron.ParrotNeuronTestCase": {
     "line number": [
      252
     ]
    },
    "nest.tests.test_parrot_neuron.unittest": {
     "line number": [
      251,
      253,
      255,
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_parrot_neuron_ps": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      282
     ]
    },
    "nest.tests.test_parrot_neuron_ps.run": {
     "line number": [
      283
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSPoissonTestCase": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "nest.tests.test_parrot_neuron_ps.nest": {
     "line number": [
      111
     ]
    },
    "nest.tests.test_parrot_neuron_ps.unittest": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSPoissonTestCase.test_ParrotNeuronIncomingMultiplicity": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "nest.tests.test_parrot_neuron_ps._round_up": {
     "line number": [
      160
     ]
    },
    "nest.tests.test_parrot_neuron_ps.math": {
     "line number": [
      139
     ]
    },
    "nest.tests.test_parrot_neuron_ps.nest": {
     "line number": [
      146,
      147,
      148,
      152,
      153,
      154,
      156,
      157,
      158,
      160,
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSSTDPTestCase": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "nest.tests.test_parrot_neuron_ps.nest": {
     "line number": [
      169
     ]
    },
    "nest.tests.test_parrot_neuron_ps.unittest": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSSTDPTestCase.run_protocol": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "max": {
     "line number": [
      236
     ]
    },
    "nest.tests.test_parrot_neuron_ps._round_up": {
     "line number": [
      237
     ]
    },
    "nest.tests.test_parrot_neuron_ps.nest": {
     "line number": [
      183,
      184,
      196,
      199,
      204,
      205,
      207,
      208,
      211,
      213,
      214,
      227,
      231,
      233,
      237,
      240
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSSTDPTestCase.test_ParrotNeuronSTDPProtocolDepression": {
  "data": {
   "lineno": 254
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSSTDPTestCase.test_ParrotNeuronSTDPProtocolPotentiation": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSTestCase": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "nest.tests.test_parrot_neuron_ps.nest": {
     "line number": [
      39
     ]
    },
    "nest.tests.test_parrot_neuron_ps.unittest": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSTestCase.setUp": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "nest.tests.test_parrot_neuron_ps.nest": {
     "line number": [
      44,
      45,
      50,
      53,
      54,
      58,
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSTestCase.test_ParrotNeuronIgnoreSpike": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "events": {
     "line number": [
      86,
      87,
      87
     ]
    },
    "len": {
     "line number": [
      88
     ]
    },
    "nest.tests.test_parrot_neuron_ps._round_up": {
     "line number": [
      83
     ]
    },
    "nest.tests.test_parrot_neuron_ps.nest": {
     "line number": [
      81,
      83,
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSTestCase.test_ParrotNeuronOutgoingMultiplicity": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "events": {
     "line number": [
      105,
      106,
      106
     ]
    },
    "len": {
     "line number": [
      107
     ]
    },
    "nest.tests.test_parrot_neuron_ps._round_up": {
     "line number": [
      102
     ]
    },
    "nest.tests.test_parrot_neuron_ps.nest": {
     "line number": [
      100,
      101,
      102,
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSTestCase.test_ParrotNeuronRepeatSpike": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "events": {
     "line number": [
      69,
      70,
      70
     ]
    },
    "nest.tests.test_parrot_neuron_ps._round_up": {
     "line number": [
      66
     ]
    },
    "nest.tests.test_parrot_neuron_ps.nest": {
     "line number": [
      65,
      66,
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron_ps._round_up": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "float": {
     "line number": [
      36,
      36
     ]
    },
    "nest.tests.test_parrot_neuron_ps.math": {
     "line number": [
      36
     ]
    },
    "nest.tests.test_parrot_neuron_ps.nest": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron_ps.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "nest.tests.test_parrot_neuron_ps.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_parrot_neuron_ps.run": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": {
    "nest.tests.test_parrot_neuron_ps.suite": {
     "line number": [
      279
     ]
    },
    "nest.tests.test_parrot_neuron_ps.unittest": {
     "line number": [
      278
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron_ps.suite": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": {
    "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSPoissonTestCase": {
     "line number": [
      271
     ]
    },
    "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSSTDPTestCase": {
     "line number": [
      273
     ]
    },
    "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSTestCase": {
     "line number": [
      269
     ]
    },
    "nest.tests.test_parrot_neuron_ps.unittest": {
     "line number": [
      268,
      270,
      272,
      274
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_parrot_neuron_ps.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_poisson_generator_rate_change": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      96
     ]
    },
    "nest.tests.test_poisson_generator_rate_change.run": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_poisson_generator_rate_change.TestPgRateChange": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "nest.tests.test_poisson_generator_rate_change.unittest": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_poisson_generator_rate_change.TestPgRateChange._kstest_first_spiketimes": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "events": {
     "line number": [
      33,
      34,
      35
     ]
    },
    "nest.tests.test_poisson_generator_rate_change.nest": {
     "line number": [
      33
     ]
    },
    "numpy.min": {
     "line number": [
      36
     ]
    },
    "numpy.unique": {
     "line number": [
      37
     ]
    },
    "numpy.where": {
     "line number": [
      36
     ]
    },
    "print": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_poisson_generator_rate_change.TestPgRateChange.test_statistical_rate_change": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "float": {
     "line number": [
      57,
      71
     ]
    },
    "nest.tests.test_poisson_generator_rate_change.nest": {
     "line number": [
      51,
      52,
      54,
      55,
      56,
      58,
      59,
      62,
      67,
      70,
      73,
      74,
      78,
      79,
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_poisson_generator_rate_change.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_poisson_generator_rate_change.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_poisson_generator_rate_change.run": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "nest.tests.test_poisson_generator_rate_change.suite": {
     "line number": [
      93
     ]
    },
    "nest.tests.test_poisson_generator_rate_change.unittest": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_poisson_generator_rate_change.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nest.tests.test_poisson_generator_rate_change.suite": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "nest.tests.test_poisson_generator_rate_change.TestPgRateChange": {
     "line number": [
      87
     ]
    },
    "nest.tests.test_poisson_generator_rate_change.unittest": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_poisson_generator_rate_change.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_pp_psc_delta": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      198
     ]
    },
    "nest.tests.test_pp_psc_delta.run": {
     "line number": [
      199
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_pp_psc_delta.PpPscDeltaTestCase": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "nest.tests.test_pp_psc_delta.unittest": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_pp_psc_delta.PpPscDeltaTestCase.test_adapting_threshold": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "len": {
     "line number": [
      182
     ]
    },
    "nest.tests.test_pp_psc_delta.nest": {
     "line number": [
      147,
      148,
      165,
      167,
      168,
      169,
      171
     ]
    },
    "numpy.diff": {
     "line number": [
      177
     ]
    },
    "numpy.mean": {
     "line number": [
      179
     ]
    },
    "numpy.sum": {
     "line number": [
      181
     ]
    },
    "numpy.var": {
     "line number": [
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_pp_psc_delta.PpPscDeltaTestCase.test_random_dead_time": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "len": {
     "line number": [
      113
     ]
    },
    "nest.tests.test_pp_psc_delta.nest": {
     "line number": [
      88,
      89,
      106,
      108,
      109,
      110,
      112
     ]
    },
    "numpy.diff": {
     "line number": [
      123
     ]
    },
    "numpy.mean": {
     "line number": [
      126
     ]
    },
    "numpy.var": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_pp_psc_delta.PpPscDeltaTestCase.test_rate_and_fixed_dead_time": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "len": {
     "line number": [
      65
     ]
    },
    "min": {
     "line number": [
      77
     ]
    },
    "nest.tests.test_pp_psc_delta.nest": {
     "line number": [
      40,
      41,
      58,
      60,
      61,
      62,
      64
     ]
    },
    "numpy.diff": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_pp_psc_delta.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_pp_psc_delta.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_pp_psc_delta.run": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": {
    "nest.tests.test_pp_psc_delta.suite": {
     "line number": [
      195
     ]
    },
    "nest.tests.test_pp_psc_delta.unittest": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_pp_psc_delta.suite": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "nest.tests.test_pp_psc_delta.PpPscDeltaTestCase": {
     "line number": [
      189
     ]
    },
    "nest.tests.test_pp_psc_delta.unittest": {
     "line number": [
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_pp_psc_delta.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_pp_psc_delta_stdp": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      90
     ]
    },
    "nest.tests.test_pp_psc_delta_stdp.runner": {
     "line number": [
      93
     ]
    },
    "nest.tests.test_pp_psc_delta_stdp.suite": {
     "line number": [
      93
     ]
    },
    "nest.tests.test_pp_psc_delta_stdp.unittest": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_pp_psc_delta_stdp.PpPscDeltaSTDPTestCase": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "nest.tests.test_pp_psc_delta_stdp.unittest": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_pp_psc_delta_stdp.PpPscDeltaSTDPTestCase.test_pp_psc_delta_stdp": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "nest.tests.test_pp_psc_delta_stdp.nest": {
     "line number": [
      41,
      43,
      44,
      45,
      47,
      49,
      50,
      52,
      53,
      55,
      57,
      58,
      59,
      61,
      62,
      68,
      69,
      72,
      74,
      75,
      77,
      79
     ]
    },
    "numpy.arange": {
     "line number": [
      54
     ]
    },
    "range": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_pp_psc_delta_stdp.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_pp_psc_delta_stdp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_pp_psc_delta_stdp.runner": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "nest.tests.test_pp_psc_delta_stdp.suite": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "nest.tests.test_pp_psc_delta_stdp.PpPscDeltaSTDPTestCase": {
     "line number": [
      86
     ]
    },
    "nest.tests.test_pp_psc_delta_stdp.unittest": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_pp_psc_delta_stdp.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_quantal_stp_synapse": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      122
     ]
    },
    "nest.tests.test_quantal_stp_synapse.run": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_quantal_stp_synapse.QuantalSTPSynapseTestCase": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "nest.tests.test_quantal_stp_synapse.nest": {
     "line number": [
      29
     ]
    },
    "nest.tests.test_quantal_stp_synapse.unittest": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_quantal_stp_synapse.QuantalSTPSynapseTestCase.test_QuantalSTPSynapse": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "int": {
     "line number": [
      100
     ]
    },
    "len": {
     "line number": [
      99,
      100
     ]
    },
    "nest.tests.test_quantal_stp_synapse.nest": {
     "line number": [
      35,
      36,
      51,
      52,
      53,
      55,
      56,
      65,
      66,
      71,
      72,
      73,
      75,
      76,
      82,
      85,
      86,
      89,
      90,
      91,
      93,
      95,
      96
     ]
    },
    "nest.tests.test_quantal_stp_synapse.numpy": {
     "line number": [
      95,
      96,
      104,
      105,
      107,
      108
     ]
    },
    "range": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_quantal_stp_synapse.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_quantal_stp_synapse.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_quantal_stp_synapse.run": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "nest.tests.test_quantal_stp_synapse.suite": {
     "line number": [
      119
     ]
    },
    "nest.tests.test_quantal_stp_synapse.unittest": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_quantal_stp_synapse.suite": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "nest.tests.test_quantal_stp_synapse.QuantalSTPSynapseTestCase": {
     "line number": [
      113
     ]
    },
    "nest.tests.test_quantal_stp_synapse.unittest": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_quantal_stp_synapse.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_rate_copy_model": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      108
     ]
    },
    "nest.tests.test_rate_copy_model.run": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_rate_copy_model.RateCopyModelTestCase": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "nest.tests.test_rate_copy_model.nest": {
     "line number": [
      27
     ]
    },
    "nest.tests.test_rate_copy_model.unittest": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_rate_copy_model.RateCopyModelTestCase.test_rate_copy_model": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "events": {
     "line number": [
      87,
      88,
      89,
      90
     ]
    },
    "nest.tests.test_rate_copy_model.nest": {
     "line number": [
      46,
      47,
      48,
      52,
      55,
      57,
      60,
      67,
      72,
      75,
      79,
      84,
      87
     ]
    },
    "numpy.abs": {
     "line number": [
      91
     ]
    },
    "numpy.array": {
     "line number": [
      89,
      90
     ]
    },
    "numpy.sum": {
     "line number": [
      91
     ]
    },
    "numpy.where": {
     "line number": [
      89,
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_rate_copy_model.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_rate_copy_model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_rate_copy_model.run": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "nest.tests.test_rate_copy_model.suite": {
     "line number": [
      105
     ]
    },
    "nest.tests.test_rate_copy_model.unittest": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_rate_copy_model.suite": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "nest.tests.test_rate_copy_model.RateCopyModelTestCase": {
     "line number": [
      99
     ]
    },
    "nest.tests.test_rate_copy_model.unittest": {
     "line number": [
      98,
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_rate_copy_model.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_rate_instantaneous_and_delayed": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      115
     ]
    },
    "nest.tests.test_rate_instantaneous_and_delayed.run": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_rate_instantaneous_and_delayed.RateInstantaneousAndDelayedTestCase": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "nest.tests.test_rate_instantaneous_and_delayed.nest": {
     "line number": [
      27
     ]
    },
    "nest.tests.test_rate_instantaneous_and_delayed.unittest": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_rate_instantaneous_and_delayed.RateInstantaneousAndDelayedTestCase.test_rate_instantaneous_and_delayed": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "events": {
     "line number": [
      86,
      87,
      89,
      90,
      91
     ]
    },
    "len": {
     "line number": [
      96
     ]
    },
    "nest.tests.test_rate_instantaneous_and_delayed.nest": {
     "line number": [
      47,
      48,
      49,
      53,
      56,
      58,
      61,
      70,
      73,
      77,
      83,
      86
     ]
    },
    "numpy.abs": {
     "line number": [
      98
     ]
    },
    "numpy.array": {
     "line number": [
      89,
      90,
      91
     ]
    },
    "numpy.sum": {
     "line number": [
      98
     ]
    },
    "numpy.where": {
     "line number": [
      89,
      90,
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_rate_instantaneous_and_delayed.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_rate_instantaneous_and_delayed.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_rate_instantaneous_and_delayed.run": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "nest.tests.test_rate_instantaneous_and_delayed.suite": {
     "line number": [
      112
     ]
    },
    "nest.tests.test_rate_instantaneous_and_delayed.unittest": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_rate_instantaneous_and_delayed.suite": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "nest.tests.test_rate_instantaneous_and_delayed.RateInstantaneousAndDelayedTestCase": {
     "line number": [
      106
     ]
    },
    "nest.tests.test_rate_instantaneous_and_delayed.unittest": {
     "line number": [
      105,
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_rate_instantaneous_and_delayed.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_rate_neuron": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      151
     ]
    },
    "nest.tests.test_rate_neuron.run": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_rate_neuron.RateNeuronTestCase": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "nest.tests.test_rate_neuron.nest": {
     "line number": [
      33
     ]
    },
    "nest.tests.test_rate_neuron.unittest": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_rate_neuron.RateNeuronTestCase.setUp": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "nest.tests.test_rate_neuron.nest": {
     "line number": [
      50,
      51,
      52,
      56,
      58,
      60,
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_rate_neuron.RateNeuronTestCase.test_RateNeuronMean": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "events": {
     "line number": [
      75,
      76,
      80,
      81
     ]
    },
    "nest.tests.test_rate_neuron.nest": {
     "line number": [
      72,
      75
     ]
    },
    "numpy.isclose": {
     "line number": [
      84,
      87
     ]
    },
    "numpy.mean": {
     "line number": [
      80,
      81
     ]
    },
    "numpy.where": {
     "line number": [
      77,
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_rate_neuron.RateNeuronTestCase.test_RateNeuronNoise": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "events": {
     "line number": [
      97,
      98,
      102,
      104
     ]
    },
    "nest.tests.test_rate_neuron.nest": {
     "line number": [
      94,
      97
     ]
    },
    "numpy.isclose": {
     "line number": [
      108,
      111
     ]
    },
    "numpy.std": {
     "line number": [
      103,
      105
     ]
    },
    "numpy.where": {
     "line number": [
      99,
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_rate_neuron.RateNeuronTestCase.test_RateNeuronVariance": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "events": {
     "line number": [
      121,
      122,
      125
     ]
    },
    "nest.tests.test_rate_neuron.nest": {
     "line number": [
      118,
      121
     ]
    },
    "numpy.isclose": {
     "line number": [
      134
     ]
    },
    "numpy.var": {
     "line number": [
      126
     ]
    },
    "numpy.where": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_rate_neuron.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_rate_neuron.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_rate_neuron.run": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "nest.tests.test_rate_neuron.suite": {
     "line number": [
      148
     ]
    },
    "nest.tests.test_rate_neuron.unittest": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_rate_neuron.suite": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "nest.tests.test_rate_neuron.RateNeuronTestCase": {
     "line number": [
      142
     ]
    },
    "nest.tests.test_rate_neuron.unittest": {
     "line number": [
      141,
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_rate_neuron.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_rate_neuron_communication": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      254
     ]
    },
    "nest.tests.test_rate_neuron_communication.run": {
     "line number": [
      255
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_rate_neuron_communication.H": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "numpy.sign": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_rate_neuron_communication.RateNeuronCommunicationTestCase": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "nest.tests.test_rate_neuron_communication.nest": {
     "line number": [
      35
     ]
    },
    "nest.tests.test_rate_neuron_communication.unittest": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_rate_neuron_communication.RateNeuronCommunicationTestCase.setUp": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "nest.tests.test_rate_neuron_communication.nest": {
     "line number": [
      58,
      59,
      60,
      64,
      67,
      71,
      73,
      75,
      77,
      79,
      81,
      84,
      93,
      95,
      98,
      103,
      107,
      111,
      115,
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_rate_neuron_communication.RateNeuronCommunicationTestCase.test_ParrotRateNeuron": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": {
    "events": {
     "line number": [
      229,
      230,
      231
     ]
    },
    "nest.tests.test_rate_neuron_communication.nest": {
     "line number": [
      223,
      226,
      229,
      234
     ]
    },
    "numpy.isclose": {
     "line number": [
      237
     ]
    },
    "numpy.where": {
     "line number": [
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_rate_neuron_communication.RateNeuronCommunicationTestCase.test_RateNeuronDelay": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "events": {
     "line number": [
      130,
      131,
      132,
      133,
      134
     ]
    },
    "nest.tests.test_rate_neuron_communication.nest": {
     "line number": [
      127,
      130
     ]
    },
    "numpy.isclose": {
     "line number": [
      138
     ]
    },
    "numpy.where": {
     "line number": [
      132,
      133,
      134,
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_rate_neuron_communication.RateNeuronCommunicationTestCase.test_RateNeuronNL": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "events": {
     "line number": [
      170,
      171,
      172,
      174,
      176,
      178
     ]
    },
    "nest.tests.test_rate_neuron_communication.H": {
     "line number": [
      193,
      200
     ]
    },
    "nest.tests.test_rate_neuron_communication.nest": {
     "line number": [
      164,
      167,
      170,
      185,
      186
     ]
    },
    "numpy.allclose": {
     "line number": [
      203
     ]
    },
    "numpy.array": {
     "line number": [
      181,
      190,
      197
     ]
    },
    "numpy.tanh": {
     "line number": [
      192,
      199
     ]
    },
    "numpy.where": {
     "line number": [
      173,
      175,
      177,
      179
     ]
    },
    "zip": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_rate_neuron_communication.RateNeuronCommunicationTestCase.test_RateNeuronWeight": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "events": {
     "line number": [
      148,
      149,
      150
     ]
    },
    "nest.tests.test_rate_neuron_communication.nest": {
     "line number": [
      145,
      148
     ]
    },
    "numpy.isclose": {
     "line number": [
      154
     ]
    },
    "numpy.where": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_rate_neuron_communication.RateNeuronCommunicationTestCase.test_RectifyOutput": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": {
    "events": {
     "line number": [
      212,
      213,
      214
     ]
    },
    "nest.tests.test_rate_neuron_communication.nest": {
     "line number": [
      209,
      212
     ]
    },
    "numpy.isclose": {
     "line number": [
      218
     ]
    },
    "numpy.where": {
     "line number": [
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_rate_neuron_communication.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "nest.tests.test_rate_neuron_communication.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_rate_neuron_communication.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_rate_neuron_communication.run": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "nest.tests.test_rate_neuron_communication.suite": {
     "line number": [
      251
     ]
    },
    "nest.tests.test_rate_neuron_communication.unittest": {
     "line number": [
      250
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_rate_neuron_communication.suite": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": {
    "nest.tests.test_rate_neuron_communication.RateNeuronCommunicationTestCase": {
     "line number": [
      245
     ]
    },
    "nest.tests.test_rate_neuron_communication.unittest": {
     "line number": [
      244,
      246
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_rate_neuron_communication.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_refractory": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      254
     ]
    },
    "nest.tests.test_refractory.ignore_model": {
     "line number": [
      99
     ]
    },
    "nest.tests.test_refractory.nest": {
     "line number": [
      98,
      98
     ]
    },
    "nest.tests.test_refractory.run": {
     "line number": [
      255
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_refractory.TestRefractoryCase": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "nest.tests.test_refractory.unittest": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_refractory.TestRefractoryCase.compute_reftime": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "nest.tests.test_refractory.nest": {
     "line number": [
      156,
      164,
      165,
      170
     ]
    },
    "nest.tests.test_refractory.neurons_interspike": {
     "line number": [
      158
     ]
    },
    "nest.tests.test_refractory.neurons_interspike_ps": {
     "line number": [
      161
     ]
    },
    "nest.tests.test_refractory.resolution": {
     "line number": [
      160,
      178
     ]
    },
    "numpy.argwhere": {
     "line number": [
      168,
      173
     ]
    },
    "numpy.isclose": {
     "line number": [
      177
     ]
    },
    "numpy.where": {
     "line number": [
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_refractory.TestRefractoryCase.reset": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "nest.tests.test_refractory.nest": {
     "line number": [
      126,
      129,
      131
     ]
    },
    "nest.tests.test_refractory.resolution": {
     "line number": [
      132
     ]
    },
    "range": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_refractory.TestRefractoryCase.test_refractory_time": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "nest.tests.test_refractory.add_connect_param": {
     "line number": [
      217
     ]
    },
    "nest.tests.test_refractory.nest": {
     "line number": [
      189,
      196,
      200,
      201,
      202,
      208,
      211,
      213,
      216,
      217,
      218,
      220,
      226
     ]
    },
    "nest.tests.test_refractory.neurons_interspike": {
     "line number": [
      212
     ]
    },
    "nest.tests.test_refractory.neurons_interspike_ps": {
     "line number": [
      207,
      229
     ]
    },
    "nest.tests.test_refractory.neurons_with_clamping": {
     "line number": [
      225
     ]
    },
    "nest.tests.test_refractory.resolution": {
     "line number": [
      199
     ]
    },
    "nest.tests.test_refractory.simtime": {
     "line number": [
      220
     ]
    },
    "nest.tests.test_refractory.tested_models": {
     "line number": [
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_refractory.add_connect_param": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "nest.tests.test_refractory.ignore_model": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "nest.tests.test_refractory.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_refractory.neurons_interspike": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "nest.tests.test_refractory.neurons_interspike_ps": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "nest.tests.test_refractory.neurons_with_clamping": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "nest.tests.test_refractory.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_refractory.resolution": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "nest.tests.test_refractory.run": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "nest.tests.test_refractory.suite": {
     "line number": [
      251
     ]
    },
    "nest.tests.test_refractory.unittest": {
     "line number": [
      250
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_refractory.simtime": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "nest.tests.test_refractory.suite": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": {
    "nest.tests.test_refractory.TestRefractoryCase": {
     "line number": [
      246
     ]
    },
    "nest.tests.test_refractory.unittest": {
     "line number": [
      246
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_refractory.tested_models": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "nest.tests.test_refractory.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_regression_issue-1034": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      325
     ]
    },
    "nest.tests.test_regression_issue-1034.runner": {
     "line number": [
      327
     ]
    },
    "nest.tests.test_regression_issue-1034.suite": {
     "line number": [
      327
     ]
    },
    "nest.tests.test_regression_issue-1034.unittest": {
     "line number": [
      326
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_regression_issue-1034.PostTraceTestCase": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": {
    "nest.tests.test_regression_issue-1034.unittest": {
     "line number": [
      248
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_regression_issue-1034.PostTraceTestCase.test_post_trace": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": {
    "nest.tests.test_regression_issue-1034.PostTraceTester": {
     "line number": [
      309
     ]
    },
    "numpy.array": {
     "line number": [
      269,
      272,
      273
     ]
    },
    "numpy.ceil": {
     "line number": [
      281,
      287
     ]
    },
    "numpy.sort": {
     "line number": [
      279,
      285
     ]
    },
    "numpy.unique": {
     "line number": [
      280,
      286
     ]
    },
    "print": {
     "line number": [
      303,
      305
     ]
    },
    "scipy.stats.uniform.rvs": {
     "line number": [
      282,
      288
     ]
    },
    "str": {
     "line number": [
      304,
      306
     ]
    },
    "zip": {
     "line number": [
      301
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_regression_issue-1034.PostTraceTester": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "object": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_regression_issue-1034.PostTraceTester.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "max": {
     "line number": [
      52
     ]
    },
    "numpy.amax": {
     "line number": [
      52,
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_regression_issue-1034.PostTraceTester.nest_trace_matches_python_trace": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "nest.tests.test_regression_issue-1034.PostTraceTester.nest_trace_matches_ref_trace_": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      172
     ]
    },
    "float": {
     "line number": [
      177
     ]
    },
    "int": {
     "line number": [
      175
     ]
    },
    "len": {
     "line number": [
      177,
      228
     ]
    },
    "numpy.allclose": {
     "line number": [
      178,
      196,
      211
     ]
    },
    "numpy.any": {
     "line number": [
      183
     ]
    },
    "numpy.array": {
     "line number": [
      173,
      184
     ]
    },
    "numpy.round": {
     "line number": [
      175
     ]
    },
    "print": {
     "line number": [
      168,
      190,
      191,
      192,
      202,
      217,
      230
     ]
    },
    "reversed": {
     "line number": [
      173
     ]
    },
    "str": {
     "line number": [
      168,
      169,
      190,
      191,
      193,
      202,
      203,
      205,
      217,
      218,
      220
     ]
    },
    "zip": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_regression_issue-1034.PostTraceTester.run_post_trace_test_nest_": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "int": {
     "line number": [
      105
     ]
    },
    "nest.tests.test_regression_issue-1034.nest": {
     "line number": [
      59,
      61,
      62,
      64,
      65,
      69,
      72,
      77,
      78,
      81,
      83,
      87,
      89,
      94,
      101,
      108,
      110,
      114,
      115,
      121
     ]
    },
    "numpy.abs": {
     "line number": [
      117
     ]
    },
    "numpy.any": {
     "line number": [
      116
     ]
    },
    "numpy.array": {
     "line number": [
      117
     ]
    },
    "numpy.ceil": {
     "line number": [
      105
     ]
    },
    "print": {
     "line number": [
      104,
      113,
      123
     ]
    },
    "range": {
     "line number": [
      112
     ]
    },
    "str": {
     "line number": [
      104,
      113,
      124,
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_regression_issue-1034.PostTraceTester.run_post_trace_test_python_reference_": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "float": {
     "line number": [
      139,
      147
     ]
    },
    "int": {
     "line number": [
      133,
      146
     ]
    },
    "len": {
     "line number": [
      147
     ]
    },
    "numpy.ceil": {
     "line number": [
      133
     ]
    },
    "numpy.exp": {
     "line number": [
      141
     ]
    },
    "numpy.round": {
     "line number": [
      146
     ]
    },
    "numpy.zeros": {
     "line number": [
      134
     ]
    },
    "print": {
     "line number": [
      149
     ]
    },
    "range": {
     "line number": [
      138
     ]
    },
    "str": {
     "line number": [
      149,
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_regression_issue-1034.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_regression_issue-1034.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_regression_issue-1034.runner": {
  "data": {
   "lineno": 326
  },
  "type": "constant"
 },
 "nest.tests.test_regression_issue-1034.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nest.tests.test_regression_issue-1034.sp": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "nest.tests.test_regression_issue-1034.suite": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": {
    "nest.tests.test_regression_issue-1034.PostTraceTestCase": {
     "line number": [
      321
     ]
    },
    "nest.tests.test_regression_issue-1034.unittest": {
     "line number": [
      321,
      322
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_regression_issue-1034.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_siegert_neuron": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      143
     ]
    },
    "nest.tests.test_siegert_neuron.nest": {
     "line number": [
      28
     ]
    },
    "nest.tests.test_siegert_neuron.run": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_siegert_neuron.HAVE_GSL": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "nest.tests.test_siegert_neuron.SiegertNeuronTestCase": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "nest.tests.test_siegert_neuron.HAVE_GSL": {
     "line number": [
      32
     ]
    },
    "nest.tests.test_siegert_neuron.nest": {
     "line number": [
      31
     ]
    },
    "nest.tests.test_siegert_neuron.unittest": {
     "line number": [
      33,
      32
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_siegert_neuron.SiegertNeuronTestCase.setUp": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "nest.tests.test_siegert_neuron.nest": {
     "line number": [
      57,
      58,
      59,
      64,
      67,
      69,
      72,
      74,
      79,
      86,
      89,
      96,
      99,
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_siegert_neuron.SiegertNeuronTestCase.test_RatePrediction": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "events": {
     "line number": [
      112,
      113,
      114
     ]
    },
    "nest.tests.test_siegert_neuron.nest": {
     "line number": [
      109,
      112,
      118
     ]
    },
    "numpy.isclose": {
     "line number": [
      123,
      126
     ]
    },
    "numpy.where": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_siegert_neuron.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_siegert_neuron.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_siegert_neuron.run": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "nest.tests.test_siegert_neuron.suite": {
     "line number": [
      140
     ]
    },
    "nest.tests.test_siegert_neuron.unittest": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_siegert_neuron.suite": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "nest.tests.test_siegert_neuron.SiegertNeuronTestCase": {
     "line number": [
      134
     ]
    },
    "nest.tests.test_siegert_neuron.unittest": {
     "line number": [
      133,
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_siegert_neuron.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_sp": {
  "data": {},
  "type": "module"
 },
 "nest.tests.test_sp.__author__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "nest.tests.test_sp.mpitest_issue_578_sp": {
  "data": {
   "symbols_in_volume": {
    "nest.tests.test_sp.mpitest_issue_578_sp.HAVE_GSL": {
     "line number": [
      100
     ]
    },
    "nest.tests.test_sp.mpitest_issue_578_sp.TestIssue578": {
     "line number": [
      101
     ]
    },
    "nest.tests.test_sp.mpitest_issue_578_sp.mpitest": {
     "line number": [
      102
     ]
    },
    "nest.tests.test_sp.mpitest_issue_578_sp.nest": {
     "line number": [
      30
     ]
    },
    "print": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_sp.mpitest_issue_578_sp.HAVE_GSL": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "nest.tests.test_sp.mpitest_issue_578_sp.TestIssue578": {
  "data": {
   "lineno": 33
  },
  "type": "class"
 },
 "nest.tests.test_sp.mpitest_issue_578_sp.TestIssue578.test_targets": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "nest.tests.test_sp.mpitest_issue_578_sp.nest": {
     "line number": [
      36,
      37,
      39,
      46,
      47,
      72,
      73,
      82,
      89
     ]
    },
    "nest.tests.test_sp.mpitest_issue_578_sp.sys": {
     "line number": [
      91
     ]
    },
    "print": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.mpitest_issue_578_sp.mpitest": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "nest.tests.test_sp.mpitest_issue_578_sp.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.mpitest_issue_578_sp.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nest.tests.test_sp.mpitest_issue_578_sp.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "nest.tests.test_sp.suite": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "nest.tests.test_sp.test_all": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      63
     ]
    },
    "nest.tests.test_sp.test_all.HAVE_MPI": {
     "line number": [
      38
     ]
    },
    "nest.tests.test_sp.test_all.nest": {
     "line number": [
      37,
      64
     ]
    },
    "nest.tests.test_sp.test_all.runner": {
     "line number": [
      66
     ]
    },
    "nest.tests.test_sp.test_all.suite": {
     "line number": [
      66
     ]
    },
    "nest.tests.test_sp.test_all.unittest": {
     "line number": [
      65
     ]
    },
    "print": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_sp.test_all.HAVE_MPI": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "nest.tests.test_sp.test_all.__author__": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "nest.tests.test_sp.test_all.call": {
  "data": {
   "shadows": "subprocess.call"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_all.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_all.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_all.runner": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "nest.tests.test_sp.test_all.suite": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_all.unittest": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_all.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_all.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_conn_builder": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      94
     ]
    },
    "nest.tests.test_sp.test_conn_builder.unittest": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_sp.test_conn_builder.TestSPBuilder": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_conn_builder.unittest": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_sp.test_conn_builder.TestSPBuilder.setUp": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_conn_builder.nest": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_conn_builder.TestSPBuilder.test_not_implemented_rules": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_conn_builder.nest": {
     "line number": [
      69,
      82,
      83
     ]
    },
    "str": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_conn_builder.TestSPBuilder.test_synapse_initialisation_all_to_all": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_conn_builder.nest": {
     "line number": [
      53,
      59,
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_conn_builder.TestSPBuilder.test_synapse_initialisation_one_to_one": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_conn_builder.nest": {
     "line number": [
      37,
      43,
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_conn_builder.__author__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "nest.tests.test_sp.test_conn_builder.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_conn_builder.suite": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_conn_builder.TestSPBuilder": {
     "line number": [
      91
     ]
    },
    "nest.tests.test_sp.test_conn_builder.unittest": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_conn_builder.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_disconnect": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      30
     ]
    },
    "__name__": {
     "line number": [
      131
     ]
    },
    "nest.tests.test_sp.test_disconnect.nest": {
     "line number": [
      36
     ]
    },
    "nest.tests.test_sp.test_disconnect.unittest": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_sp.test_disconnect.MPI": {
  "data": {
   "shadows": "mpi4py.MPI"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_disconnect.TestDisconnectSingle": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_disconnect.unittest": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_sp.test_disconnect.TestDisconnectSingle.setUp": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "mpi4py.MPI.COMM_WORLD": {
     "line number": [
      46
     ]
    },
    "nest.tests.test_sp.test_disconnect.mpi_test": {
     "line number": [
      45
     ]
    },
    "nest.tests.test_sp.test_disconnect.nest": {
     "line number": [
      42,
      43,
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect.TestDisconnectSingle.test_simple": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_disconnect.nest": {
     "line number": [
      118,
      119,
      121,
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect.TestDisconnectSingle.test_synapse_deletion_one_to_one_no_sp": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "filter": {
     "line number": [
      91,
      99,
      108
     ]
    },
    "len": {
     "line number": [
      92,
      101,
      109
     ]
    },
    "list": {
     "line number": [
      92,
      101,
      109
     ]
    },
    "nest.tests.test_sp.test_disconnect.mpi_test": {
     "line number": [
      89,
      97,
      106
     ]
    },
    "nest.tests.test_sp.test_disconnect.nest": {
     "line number": [
      69,
      71,
      73,
      79,
      82,
      84,
      87,
      94,
      95,
      104,
      112,
      114
     ]
    },
    "print": {
     "line number": [
      72,
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect.__author__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "nest.tests.test_sp.test_disconnect.mpi_test": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "nest.tests.test_sp.test_disconnect.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_disconnect.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_disconnect.suite": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_disconnect.TestDisconnectSingle": {
     "line number": [
      127
     ]
    },
    "nest.tests.test_sp.test_disconnect.unittest": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_disconnect_multiple": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      272
     ]
    },
    "nest.tests.test_sp.test_disconnect_multiple.unittest": {
     "line number": [
      273
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_sp.test_disconnect_multiple.TestDisconnect": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_disconnect_multiple.unittest": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_sp.test_disconnect_multiple.TestDisconnect.setUp": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_disconnect_multiple.nest": {
     "line number": [
      31,
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect_multiple.TestDisconnect.test_disconnect_all_to_all": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_disconnect_multiple.nest": {
     "line number": [
      246,
      247,
      249,
      251,
      253
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect_multiple.TestDisconnect.test_disconnect_defaults": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_disconnect_multiple.nest": {
     "line number": [
      236,
      237,
      238,
      240,
      242
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect_multiple.TestDisconnect.test_disconnect_static_synapse": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_disconnect_multiple.nest": {
     "line number": [
      257,
      258,
      260,
      262,
      264
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect_multiple.TestDisconnect.test_multiple_synapse_deletion_all_to_all": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_disconnect_multiple.nest": {
     "line number": [
      52,
      54,
      55,
      56,
      62,
      67,
      74,
      78,
      86,
      91,
      97
     ]
    },
    "range": {
     "line number": [
      83,
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect_multiple.TestDisconnect.test_multiple_synapse_deletion_one_to_one": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_disconnect_multiple.nest": {
     "line number": [
      106,
      108,
      109,
      110,
      116,
      121,
      128,
      132,
      140,
      145,
      151
     ]
    },
    "range": {
     "line number": [
      137,
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect_multiple.TestDisconnect.test_multiple_synapse_deletion_one_to_one_no_sp": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "len": {
     "line number": [
      172,
      184
     ]
    },
    "nest.tests.test_sp.test_disconnect_multiple.nest": {
     "line number": [
      160,
      162,
      163,
      164,
      166,
      171,
      176,
      183
     ]
    },
    "range": {
     "line number": [
      168,
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect_multiple.TestDisconnect.test_single_synapse_deletion_sp": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_disconnect_multiple.nest": {
     "line number": [
      187,
      189,
      190,
      199,
      205,
      206,
      211,
      219,
      222,
      224,
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect_multiple.__author__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "nest.tests.test_sp.test_disconnect_multiple.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_disconnect_multiple.suite": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_disconnect_multiple.TestDisconnect": {
     "line number": [
      268
     ]
    },
    "nest.tests.test_sp.test_disconnect_multiple.unittest": {
     "line number": [
      268
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect_multiple.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_enable_multithread": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      74
     ]
    },
    "nest.tests.test_sp.test_enable_multithread.nest": {
     "line number": [
      33
     ]
    },
    "nest.tests.test_sp.test_enable_multithread.unittest": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_sp.test_enable_multithread.HAVE_OPENMP": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "nest.tests.test_sp.test_enable_multithread.TestEnableMultithread": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_enable_multithread.HAVE_OPENMP": {
     "line number": [
      36
     ]
    },
    "nest.tests.test_sp.test_enable_multithread.unittest": {
     "line number": [
      37,
      36
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_sp.test_enable_multithread.TestEnableMultithread.setUp": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_enable_multithread.nest": {
     "line number": [
      40,
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_enable_multithread.TestEnableMultithread.test_enable_multithread": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_enable_multithread.nest": {
     "line number": [
      45,
      46,
      49,
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_enable_multithread.TestEnableMultithread.test_multithread_enable": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_enable_multithread.nest": {
     "line number": [
      57,
      58,
      65,
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_enable_multithread.__author__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "nest.tests.test_sp.test_enable_multithread.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_enable_multithread.suite": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_enable_multithread.TestEnableMultithread": {
     "line number": [
      70
     ]
    },
    "nest.tests.test_sp.test_enable_multithread.unittest": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_enable_multithread.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_get_sp_status": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      102
     ]
    },
    "nest.tests.test_sp.test_get_sp_status.unittest": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_sp.test_get_sp_status.TestGetStructuralPlasticityStatus": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "all": {
     "line number": [
      70,
      71,
      72,
      73,
      74,
      75
     ]
    },
    "nest.tests.test_sp.test_get_sp_status.nest": {
     "line number": [
      37,
      38,
      39,
      66,
      70,
      77,
      87
     ]
    },
    "nest.tests.test_sp.test_get_sp_status.unittest": {
     "line number": [
      35
     ]
    },
    "print": {
     "line number": [
      71,
      80,
      90
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_sp.test_get_sp_status.__author__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "nest.tests.test_sp.test_get_sp_status.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_get_sp_status.suite": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_get_sp_status.TestGetStructuralPlasticityStatus": {
     "line number": [
      96
     ]
    },
    "nest.tests.test_sp.test_get_sp_status.unittest": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_get_sp_status.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_growth_curves": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      468
     ]
    },
    "nest.tests.test_sp.test_growth_curves.nest": {
     "line number": [
      31
     ]
    },
    "nest.tests.test_sp.test_growth_curves.unittest": {
     "line number": [
      469
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_sp.test_growth_curves.GaussianNumericSEI": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_growth_curves.SynapticElementIntegrator": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_sp.test_growth_curves.GaussianNumericSEI.__init__": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_growth_curves.GaussianNumericSEI": {
     "line number": [
      195
     ]
    },
    "nest.tests.test_sp.test_growth_curves.math": {
     "line number": [
      196,
      196
     ]
    },
    "super": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.GaussianNumericSEI.get_se": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "scipy.integrate.quad": {
     "line number": [
      206
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.GaussianNumericSEI.growth_curve": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_growth_curves.math": {
     "line number": [
      214,
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.HAVE_OPENMP": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "nest.tests.test_sp.test_growth_curves.LinearExactSEI": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_growth_curves.SynapticElementIntegrator": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_sp.test_growth_curves.LinearExactSEI.__init__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_growth_curves.LinearExactSEI": {
     "line number": [
      115
     ]
    },
    "super": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.LinearExactSEI.get_se": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.LinearNumericSEI": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_growth_curves.SynapticElementIntegrator": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_sp.test_growth_curves.LinearNumericSEI.__init__": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_growth_curves.LinearNumericSEI": {
     "line number": [
      153
     ]
    },
    "super": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.LinearNumericSEI.get_se": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "scipy.integrate.quad": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.LinearNumericSEI.growth_curve": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.SigmoidNumericSEI": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_growth_curves.SynapticElementIntegrator": {
     "line number": [
      220
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_sp.test_growth_curves.SigmoidNumericSEI.__init__": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_growth_curves.SigmoidNumericSEI": {
     "line number": [
      240
     ]
    },
    "super": {
     "line number": [
      240
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.SigmoidNumericSEI.get_se": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": {
    "scipy.integrate.quad": {
     "line number": [
      251
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.SigmoidNumericSEI.growth_curve": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_growth_curves.math": {
     "line number": [
      259
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.SynapticElementIntegrator": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "object": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_sp.test_growth_curves.SynapticElementIntegrator.__init__": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.SynapticElementIntegrator.get_ca": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_growth_curves.math": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.SynapticElementIntegrator.get_se": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.SynapticElementIntegrator.handle_spike": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.SynapticElementIntegrator.reset": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.TestGrowthCurve": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_growth_curves.HAVE_OPENMP": {
     "line number": [
      265
     ]
    },
    "nest.tests.test_sp.test_growth_curves.unittest": {
     "line number": [
      266,
      265
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_sp.test_growth_curves.TestGrowthCurve.setUp": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_growth_curves.nest": {
     "line number": [
      272,
      273,
      274,
      275,
      280,
      291,
      292,
      294,
      295,
      296,
      297,
      298
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.TestGrowthCurve.simulate": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      311,
      312,
      321,
      325,
      330,
      334
     ]
    },
    "len": {
     "line number": [
      303,
      303,
      305,
      305,
      307,
      307,
      309,
      309,
      326
     ]
    },
    "nest.tests.test_sp.test_growth_curves.nest": {
     "line number": [
      313,
      316,
      318
     ]
    },
    "nest.tests.test_sp.test_growth_curves.numpy": {
     "line number": [
      301,
      302,
      304,
      306,
      308
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      335,
      337
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.TestGrowthCurve.test_gaussian_growth_curve": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_growth_curves.GaussianNumericSEI": {
     "line number": [
      403
     ]
    },
    "nest.tests.test_sp.test_growth_curves.nest": {
     "line number": [
      388
     ]
    },
    "nest.tests.test_sp.test_growth_curves.numpy": {
     "line number": [
      410
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      417
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.TestGrowthCurve.test_linear_growth_curve": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_growth_curves.LinearExactSEI": {
     "line number": [
      360
     ]
    },
    "nest.tests.test_sp.test_growth_curves.LinearNumericSEI": {
     "line number": [
      362
     ]
    },
    "nest.tests.test_sp.test_growth_curves.nest": {
     "line number": [
      345
     ]
    },
    "nest.tests.test_sp.test_growth_curves.numpy": {
     "line number": [
      370
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      377
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.TestGrowthCurve.test_sigmoid_growth_curve": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_growth_curves.SigmoidNumericSEI": {
     "line number": [
      443
     ]
    },
    "nest.tests.test_sp.test_growth_curves.nest": {
     "line number": [
      428
     ]
    },
    "nest.tests.test_sp.test_growth_curves.numpy": {
     "line number": [
      450
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      457
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_growth_curves.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_growth_curves.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_growth_curves.quad": {
  "data": {
   "shadows": "scipy.integrate.quad"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_growth_curves.suite": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_growth_curves.TestGrowthCurve": {
     "line number": [
      464
     ]
    },
    "nest.tests.test_sp.test_growth_curves.unittest": {
     "line number": [
      464
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_growth_curves.testing": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_growth_curves.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_growth_curves.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_mpitests": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      63
     ]
    },
    "nest.tests.test_sp.test_mpitests.nest": {
     "line number": [
      27
     ]
    },
    "nest.tests.test_sp.test_mpitests.runner": {
     "line number": [
      65
     ]
    },
    "nest.tests.test_sp.test_mpitests.suite": {
     "line number": [
      65
     ]
    },
    "nest.tests.test_sp.test_mpitests.unittest": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_sp.test_mpitests.HAVE_MPI": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "nest.tests.test_sp.test_mpitests.TestStructuralPlasticityMPI": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_mpitests.unittest": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_sp.test_mpitests.TestStructuralPlasticityMPI.testWithMPI": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_mpitests.HAVE_MPI": {
     "line number": [
      34,
      32
     ]
    },
    "nest.tests.test_sp.test_mpitests.nest": {
     "line number": [
      41
     ]
    },
    "nest.tests.test_sp.test_mpitests.os": {
     "line number": [
      37,
      40,
      44
     ]
    },
    "nest.tests.test_sp.test_mpitests.unittest": {
     "line number": [
      32
     ]
    },
    "print": {
     "line number": [
      42
     ]
    },
    "subprocess.call": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_mpitests.call": {
  "data": {
   "shadows": "subprocess.call"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_mpitests.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_mpitests.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_mpitests.runner": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "nest.tests.test_sp.test_mpitests.suite": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_mpitests.TestStructuralPlasticityMPI": {
     "line number": [
      60
     ]
    },
    "nest.tests.test_sp.test_mpitests.unittest": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_mpitests.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_sp_manager": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      123
     ]
    },
    "nest.tests.test_sp.test_sp_manager.unittest": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_sp.test_sp_manager.TestStructuralPlasticityManager": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_sp_manager.unittest": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_sp.test_sp_manager.TestStructuralPlasticityManager.setUp": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_sp_manager.nest": {
     "line number": [
      32,
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_sp_manager.TestStructuralPlasticityManager.test_min_max_delay_using_default_delay": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_sp_manager.nest": {
     "line number": [
      71,
      74,
      85,
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_sp_manager.TestStructuralPlasticityManager.test_register_synapses": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "extract_dict_a_from_b": {
     "line number": [
      67
     ]
    },
    "nest.tests.test_sp.test_sp_manager.nest": {
     "line number": [
      50,
      52,
      53,
      59,
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_sp_manager.TestStructuralPlasticityManager.test_synapse_creation": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "len": {
     "line number": [
      114
     ]
    },
    "nest.tests.test_sp.test_sp_manager.nest": {
     "line number": [
      89,
      91,
      97,
      100,
      106,
      107,
      108,
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_sp_manager.__author__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "nest.tests.test_sp.test_sp_manager.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_sp_manager.suite": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_sp_manager.TestStructuralPlasticityManager": {
     "line number": [
      119
     ]
    },
    "nest.tests.test_sp.test_sp_manager.unittest": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_sp_manager.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_synaptic_elements": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      99
     ]
    },
    "nest.tests.test_sp.test_synaptic_elements.unittest": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_sp.test_synaptic_elements.TestSynapticElements": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_synaptic_elements.unittest": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_sp.test_synaptic_elements.TestSynapticElements.setUp": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_synaptic_elements.nest": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_synaptic_elements.TestSynapticElements.test_set_defaults": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_synaptic_elements.nest": {
     "line number": [
      66,
      68,
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_synaptic_elements.TestSynapticElements.test_set_defaults_overwrite": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_synaptic_elements.nest": {
     "line number": [
      81,
      83,
      85,
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_synaptic_elements.TestSynapticElements.test_set_status": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_synaptic_elements.nest": {
     "line number": [
      37,
      38,
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_synaptic_elements.TestSynapticElements.test_set_status_overwrite": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_synaptic_elements.nest": {
     "line number": [
      51,
      52,
      53,
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_synaptic_elements.__author__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "nest.tests.test_sp.test_synaptic_elements.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_synaptic_elements.suite": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_synaptic_elements.TestSynapticElements": {
     "line number": [
      96
     ]
    },
    "nest.tests.test_sp.test_synaptic_elements.unittest": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_synaptic_elements.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_update_synaptic_elements": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      91
     ]
    },
    "nest.tests.test_sp.test_update_synaptic_elements.unittest": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_sp.test_update_synaptic_elements.TestUpdateSynapticElements": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_update_synaptic_elements.unittest": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_sp.test_update_synaptic_elements.TestUpdateSynapticElements.setUp": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_update_synaptic_elements.nest": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_update_synaptic_elements.TestUpdateSynapticElements.test_update_synaptic_elements": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_update_synaptic_elements.nest": {
     "line number": [
      57,
      58,
      59,
      72,
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_update_synaptic_elements.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.test_update_synaptic_elements.suite": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "nest.tests.test_sp.test_update_synaptic_elements.TestUpdateSynapticElements": {
     "line number": [
      88
     ]
    },
    "nest.tests.test_sp.test_update_synaptic_elements.unittest": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_sp.test_update_synaptic_elements.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_sp.utils": {
  "data": {},
  "type": "module"
 },
 "nest.tests.test_sp.utils.__author__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "nest.tests.test_sp.utils.extract_dict_a_from_b": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_split_simulation": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      84
     ]
    },
    "nest.tests.test_split_simulation.runner": {
     "line number": [
      86
     ]
    },
    "nest.tests.test_split_simulation.suite": {
     "line number": [
      86
     ]
    },
    "nest.tests.test_split_simulation.unittest": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_split_simulation.TestSplit": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "nest.tests.test_split_simulation.unittest": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_split_simulation.TestSplit.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "nest.tests.test_split_simulation.TestSplit": {
     "line number": [
      31
     ]
    },
    "super": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_split_simulation.TestSplit.runner": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "f": {
     "line number": [
      48
     ]
    },
    "nest.tests.test_split_simulation.nest": {
     "line number": [
      46,
      49
     ]
    },
    "zip": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_split_simulation.TestSplit.runs": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "nest.tests.test_split_simulation.nest": {
     "line number": [
      58,
      62
     ]
    },
    "range": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_split_simulation.TestSplit.setup": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "nest.tests.test_split_simulation.nest": {
     "line number": [
      35,
      36,
      38,
      39,
      41,
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_split_simulation.TestSplit.simulate": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "nest.tests.test_split_simulation.nest": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_split_simulation.TestSplit.test_split_match": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "nest.tests.test_split_simulation.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_split_simulation.runner": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "nest.tests.test_split_simulation.suite": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "nest.tests.test_split_simulation.TestSplit": {
     "line number": [
      81
     ]
    },
    "nest.tests.test_split_simulation.unittest": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_split_simulation.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_stack": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      36
     ]
    },
    "__name__": {
     "line number": [
      191
     ]
    },
    "nest.tests.test_stack.run": {
     "line number": [
      192
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_stack.HAVE_NUMPY": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "nest.tests.test_stack.StackTestCase": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "nest.tests.test_stack.nest": {
     "line number": [
      40
     ]
    },
    "nest.tests.test_stack.unittest": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_stack.StackTestCase.test_Count": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "nest.tests.test_stack.nest": {
     "line number": [
      71,
      72,
      75,
      77,
      78,
      81,
      83,
      84
     ]
    },
    "range": {
     "line number": [
      74,
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stack.StackTestCase.test_PushPop": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "nest.tests.test_stack.nest": {
     "line number": [
      89,
      104,
      114,
      120,
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stack.StackTestCase.test_PushPop_NumPy": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "array.array": {
     "line number": [
      139,
      142
     ]
    },
    "hasattr": {
     "line number": [
      146
     ]
    },
    "nest.tests.test_stack.HAVE_NUMPY": {
     "line number": [
      123
     ]
    },
    "nest.tests.test_stack.nest": {
     "line number": [
      126,
      131,
      133,
      135,
      136,
      139,
      140,
      142,
      143,
      148,
      149,
      158,
      159,
      162,
      163
     ]
    },
    "nest.tests.test_stack.numpy": {
     "line number": [
      129,
      133,
      136,
      140,
      143,
      146,
      147,
      147,
      152,
      153,
      154,
      155
     ]
    },
    "nest.tests.test_stack.unittest": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stack.StackTestCase.test_PushPop_no_NumPy": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "array.array": {
     "line number": [
      171,
      172,
      173,
      174
     ]
    },
    "nest.tests.test_stack.HAVE_NUMPY": {
     "line number": [
      166
     ]
    },
    "nest.tests.test_stack.nest": {
     "line number": [
      169,
      177,
      178
     ]
    },
    "nest.tests.test_stack.unittest": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stack.StackTestCase.test_stack_checker": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "check_empty_stack": {
     "line number": [
      59
     ]
    },
    "nest.tests.test_stack.nest": {
     "line number": [
      51,
      52,
      54,
      56,
      62,
      64,
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stack.StackTestCase.test_stack_checker.empty_stack": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "nest.tests.test_stack.nest": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stack.StackTestCase.test_stack_checker.leave_on_stack": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "nest.tests.test_stack.nest": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stack.array": {
  "data": {
   "shadows": "array.array"
  },
  "type": "import"
 },
 "nest.tests.test_stack.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_stack.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_stack.run": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "nest.tests.test_stack.suite": {
     "line number": [
      189
     ]
    },
    "nest.tests.test_stack.unittest": {
     "line number": [
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stack.suite": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "nest.tests.test_stack.StackTestCase": {
     "line number": [
      183
     ]
    },
    "nest.tests.test_stack.unittest": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stack.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_status": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      243
     ]
    },
    "nest.tests.test_status.run": {
     "line number": [
      244
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_status.StatusTestCase": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "nest.tests.test_status.nest": {
     "line number": [
      30
     ]
    },
    "nest.tests.test_status.unittest": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_status.StatusTestCase.test_GetDefaults": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      77
     ]
    },
    "dict": {
     "line number": [
      74
     ]
    },
    "float": {
     "line number": [
      81
     ]
    },
    "len": {
     "line number": [
      75,
      85,
      85
     ]
    },
    "nest.tests.test_status.nest": {
     "line number": [
      66,
      69,
      73,
      77,
      80,
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_status.StatusTestCase.test_GetKernelStatus": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      43
     ]
    },
    "TypeError": {
     "line number": [
      50
     ]
    },
    "dict": {
     "line number": [
      40
     ]
    },
    "len": {
     "line number": [
      41,
      48,
      48
     ]
    },
    "nest.tests.test_status.nest": {
     "line number": [
      37,
      39,
      43,
      47,
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_status.StatusTestCase.test_GetStatus": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      123
     ]
    },
    "float": {
     "line number": [
      133
     ]
    },
    "len": {
     "line number": [
      124,
      132,
      132,
      137,
      137,
      138,
      138
     ]
    },
    "nest.tests.test_status.nest": {
     "line number": [
      113,
      116,
      117,
      119,
      121,
      126,
      127,
      130,
      131,
      136
     ]
    },
    "tuple": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_status.StatusTestCase.test_SetDefaults": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "nest.tests.test_status.nest": {
     "line number": [
      90,
      93,
      96,
      97,
      99,
      100,
      102,
      103,
      106,
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_status.StatusTestCase.test_SetKernelStatus": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "nest.tests.test_status.nest": {
     "line number": [
      55,
      56,
      57,
      60,
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_status.StatusTestCase.test_SetStatus": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "nest.tests.test_status.nest": {
     "line number": [
      144,
      147,
      148,
      149,
      150,
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_status.StatusTestCase.test_SetStatusList": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "nest.tests.test_status.nest": {
     "line number": [
      157,
      160,
      161,
      162,
      163,
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_status.StatusTestCase.test_SetStatusParam": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "nest.tests.test_status.nest": {
     "line number": [
      170,
      173,
      174,
      175,
      176,
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_status.StatusTestCase.test_SetStatusV_th_smaller_V_reset": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": {
    "all": {
     "line number": [
      220
     ]
    },
    "nest.tests.test_status.nest": {
     "line number": [
      217,
      220,
      221,
      223,
      227,
      228
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_status.StatusTestCase.test_SetStatusVth_E_L": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "all": {
     "line number": [
      192
     ]
    },
    "nest.tests.test_status.nest": {
     "line number": [
      184,
      192,
      193,
      195,
      196,
      202,
      203,
      205,
      206,
      207,
      208,
      209
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_status.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_status.run": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": {
    "nest.tests.test_status.suite": {
     "line number": [
      240
     ]
    },
    "nest.tests.test_status.unittest": {
     "line number": [
      239
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_status.suite": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "nest.tests.test_status.StatusTestCase": {
     "line number": [
      234
     ]
    },
    "nest.tests.test_status.unittest": {
     "line number": [
      234
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_status.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_stdp_multiplicity": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      240
     ]
    },
    "nest.tests.test_stdp_multiplicity.run": {
     "line number": [
      241
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_stdp_multiplicity.StdpSpikeMultiplicity": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "nest.tests.test_stdp_multiplicity.nest": {
     "line number": [
      30
     ]
    },
    "nest.tests.test_stdp_multiplicity.unittest": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_stdp_multiplicity.StdpSpikeMultiplicity.run_protocol": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "max": {
     "line number": [
      184
     ]
    },
    "nest.tests.test_stdp_multiplicity.nest": {
     "line number": [
      111,
      118,
      119,
      129,
      132,
      135,
      138,
      143,
      144,
      145,
      146,
      148,
      150,
      152,
      154,
      158,
      160,
      169,
      172,
      177,
      179,
      180,
      182,
      185,
      188,
      189
     ]
    },
    "range": {
     "line number": [
      104,
      124
     ]
    },
    "sorted": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stdp_multiplicity.StdpSpikeMultiplicity.test_ParrotNeuronSTDPProtocolDepression": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": {
    "all": {
     "line number": [
      220,
      223
     ]
    },
    "numpy.array": {
     "line number": [
      217,
      218
     ]
    },
    "numpy.round": {
     "line number": [
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stdp_multiplicity.StdpSpikeMultiplicity.test_ParrotNeuronSTDPProtocolPotentiation": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "all": {
     "line number": [
      207,
      210
     ]
    },
    "numpy.array": {
     "line number": [
      204,
      205
     ]
    },
    "numpy.round": {
     "line number": [
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stdp_multiplicity.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "nest.tests.test_stdp_multiplicity.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_stdp_multiplicity.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_stdp_multiplicity.run": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": {
    "nest.tests.test_stdp_multiplicity.suite": {
     "line number": [
      237
     ]
    },
    "nest.tests.test_stdp_multiplicity.unittest": {
     "line number": [
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stdp_multiplicity.suite": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": {
    "nest.tests.test_stdp_multiplicity.StdpSpikeMultiplicity": {
     "line number": [
      231
     ]
    },
    "nest.tests.test_stdp_multiplicity.unittest": {
     "line number": [
      231,
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stdp_multiplicity.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_stdp_nn_synapses": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      311
     ]
    },
    "nest.tests.test_stdp_nn_synapses.run": {
     "line number": [
      312
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_stdp_nn_synapses.STDPNNSynapsesTest": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "nest.tests.test_stdp_nn_synapses.nest": {
     "line number": [
      30
     ]
    },
    "nest.tests.test_stdp_nn_synapses.unittest": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_stdp_nn_synapses.STDPNNSynapsesTest.depress": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": {
    "math.exp": {
     "line number": [
      282
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stdp_nn_synapses.STDPNNSynapsesTest.do_nest_simulation_and_compare_to_reproduced_weight": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "nest.tests.test_stdp_nn_synapses.STDPNNSynapsesTest.do_the_nest_simulation": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "nest.tests.test_stdp_nn_synapses.nest": {
     "line number": [
      92,
      93,
      94,
      96,
      100,
      132,
      140,
      142,
      153,
      159,
      163,
      165,
      167,
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stdp_nn_synapses.STDPNNSynapsesTest.facilitate": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": {
    "math.exp": {
     "line number": [
      269
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stdp_nn_synapses.STDPNNSynapsesTest.reproduce_weight_drift": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "int": {
     "line number": [
      184,
      185,
      190
     ]
    },
    "list": {
     "line number": [
      247
     ]
    },
    "range": {
     "line number": [
      191
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stdp_nn_synapses.STDPNNSynapsesTest.setUp": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "nest.tests.test_stdp_nn_synapses.STDPNNSynapsesTest.test_nn_pre_centered_synapse": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "nest.tests.test_stdp_nn_synapses.STDPNNSynapsesTest.test_nn_restr_synapse": {
  "data": {
   "lineno": 294
  },
  "type": "function"
 },
 "nest.tests.test_stdp_nn_synapses.STDPNNSynapsesTest.test_nn_symm_synapse": {
  "data": {
   "lineno": 288
  },
  "type": "function"
 },
 "nest.tests.test_stdp_nn_synapses.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "nest.tests.test_stdp_nn_synapses.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_stdp_nn_synapses.run": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": {
    "nest.tests.test_stdp_nn_synapses.suite": {
     "line number": [
      308
     ]
    },
    "nest.tests.test_stdp_nn_synapses.unittest": {
     "line number": [
      307
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stdp_nn_synapses.suite": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "nest.tests.test_stdp_nn_synapses.STDPNNSynapsesTest": {
     "line number": [
      302
     ]
    },
    "nest.tests.test_stdp_nn_synapses.unittest": {
     "line number": [
      302,
      303
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stdp_nn_synapses.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_stdp_triplet_synapse": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      349
     ]
    },
    "nest.tests.test_stdp_triplet_synapse.run": {
     "line number": [
      350
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "nest.tests.test_stdp_triplet_synapse.nest": {
     "line number": [
      30
     ]
    },
    "nest.tests.test_stdp_triplet_synapse.unittest": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.assertAlmostEqualDetailed": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "str": {
     "line number": [
      110,
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.decay": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "math.exp": {
     "line number": [
      84,
      85,
      86,
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.depress": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      102
     ]
    },
    "numpy.sign": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.facilitate": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      94
     ]
    },
    "numpy.sign": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.generateSpikes": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "nest.tests.test_stdp_triplet_synapse.nest": {
     "line number": [
      72,
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.setUp": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "nest.tests.test_stdp_triplet_synapse.nest": {
     "line number": [
      35,
      36,
      64,
      65,
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.status": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "nest.tests.test_stdp_triplet_synapse.nest": {
     "line number": [
      78,
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.test_badPropertiesSetupsThrowExceptions": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "badPropertyWith": {
     "line number": [
      128,
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.test_badPropertiesSetupsThrowExceptions.badPropertyWith": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "nest.tests.test_stdp_triplet_synapse.nest": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.test_badPropertiesSetupsThrowExceptions.setupProperty": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "nest.tests.test_stdp_triplet_synapse.nest": {
     "line number": [
      119
     ]
    },
    "property": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.test_maxWeightStaturatesWeight": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": {
    "nest.tests.test_stdp_triplet_synapse.nest": {
     "line number": [
      286,
      292
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.test_preVarsDecayAfterPostSpike": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "nest.tests.test_stdp_triplet_synapse.nest": {
     "line number": [
      190
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.test_preVarsDecayAfterPreSpike": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "nest.tests.test_stdp_triplet_synapse.nest": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.test_preVarsIncreaseWithPreSpike": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "nest.tests.test_stdp_triplet_synapse.nest": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.test_varsZeroAtStart": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.test_weightChangeWhenPrePostPreSpikes": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "nest.tests.test_stdp_triplet_synapse.nest": {
     "line number": [
      276
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.test_weightChangeWhenPrePostSpikes": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "nest.tests.test_stdp_triplet_synapse.nest": {
     "line number": [
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletInhTestCase": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": {
    "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase": {
     "line number": [
      298
     ]
    },
    "nest.tests.test_stdp_triplet_synapse.nest": {
     "line number": [
      297
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletInhTestCase.setUp": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": {
    "nest.tests.test_stdp_triplet_synapse.nest": {
     "line number": [
      301,
      302,
      330,
      331,
      333
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "nest.tests.test_stdp_triplet_synapse.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_stdp_triplet_synapse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_stdp_triplet_synapse.run": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": {
    "nest.tests.test_stdp_triplet_synapse.suite": {
     "line number": [
      346
     ]
    },
    "nest.tests.test_stdp_triplet_synapse.suite_inh": {
     "line number": [
      347
     ]
    },
    "nest.tests.test_stdp_triplet_synapse.unittest": {
     "line number": [
      345
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.suite": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": {
    "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase": {
     "line number": [
      341
     ]
    },
    "nest.tests.test_stdp_triplet_synapse.unittest": {
     "line number": [
      341
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.suite_inh": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": {
    "nest.tests.test_stdp_triplet_synapse.STDPTripletInhTestCase": {
     "line number": [
      337
     ]
    },
    "nest.tests.test_stdp_triplet_synapse.unittest": {
     "line number": [
      337
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_step_rate_generator": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      90
     ]
    },
    "nest.tests.test_step_rate_generator.run": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_step_rate_generator.StepRateGeneratorTestCase": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "nest.tests.test_step_rate_generator.nest": {
     "line number": [
      27
     ]
    },
    "nest.tests.test_step_rate_generator.unittest": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_step_rate_generator.StepRateGeneratorTestCase.test_step_rate_generator": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "nest.tests.test_step_rate_generator.nest": {
     "line number": [
      39,
      40,
      41,
      45,
      46,
      47,
      51,
      55,
      57,
      58,
      61,
      64
     ]
    },
    "numpy.allclose": {
     "line number": [
      73
     ]
    },
    "numpy.array": {
     "line number": [
      37,
      65,
      67,
      68
     ]
    },
    "numpy.array_equal": {
     "line number": [
      71
     ]
    },
    "numpy.where": {
     "line number": [
      66,
      67,
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_step_rate_generator.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_step_rate_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_step_rate_generator.run": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "nest.tests.test_step_rate_generator.suite": {
     "line number": [
      87
     ]
    },
    "nest.tests.test_step_rate_generator.unittest": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_step_rate_generator.suite": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "nest.tests.test_step_rate_generator.StepRateGeneratorTestCase": {
     "line number": [
      81
     ]
    },
    "nest.tests.test_step_rate_generator.unittest": {
     "line number": [
      80,
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_step_rate_generator.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_threads": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      127
     ]
    },
    "nest.tests.test_threads.run": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_threads.ThreadTestCase": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "nest.tests.test_threads.nest": {
     "line number": [
      30
     ]
    },
    "nest.tests.test_threads.unittest": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_threads.ThreadTestCase.nest_multithreaded": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "nest.tests.test_threads.nest": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_threads.ThreadTestCase.test_Threads": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "list": {
     "line number": [
      50
     ]
    },
    "nest.tests.test_threads.nest": {
     "line number": [
      45,
      46,
      48,
      49,
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_threads.ThreadTestCase.test_ThreadsGetConnections": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "list": {
     "line number": [
      70,
      73
     ]
    },
    "nest.tests.test_threads.nest": {
     "line number": [
      60,
      61,
      62,
      63,
      65,
      67,
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_threads.ThreadTestCase.test_ThreadsGetEvents": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "nest.tests.test_threads.nest": {
     "line number": [
      91,
      92,
      95,
      96,
      97,
      99,
      100,
      102,
      104,
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_threads.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_threads.run": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "nest.tests.test_threads.suite": {
     "line number": [
      124
     ]
    },
    "nest.tests.test_threads.unittest": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_threads.suite": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "nest.tests.test_threads.ThreadTestCase": {
     "line number": [
      118
     ]
    },
    "nest.tests.test_threads.unittest": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_threads.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_use_gid_in_filename": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      76
     ]
    },
    "nest.tests.test_use_gid_in_filename.run": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_use_gid_in_filename.UseGidInFilenameTestCase": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "nest.tests.test_use_gid_in_filename.nest": {
     "line number": [
      31
     ]
    },
    "nest.tests.test_use_gid_in_filename.unittest": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_use_gid_in_filename.UseGidInFilenameTestCase.test_NoGid": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "nest.tests.test_use_gid_in_filename.nest": {
     "line number": [
      52,
      54,
      55,
      57,
      59
     ]
    },
    "nest.tests.test_use_gid_in_filename.os": {
     "line number": [
      61,
      61,
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_use_gid_in_filename.UseGidInFilenameTestCase.test_WithGid": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "nest.tests.test_use_gid_in_filename.nest": {
     "line number": [
      38,
      39,
      40,
      42,
      43
     ]
    },
    "nest.tests.test_use_gid_in_filename.os": {
     "line number": [
      45,
      45,
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_use_gid_in_filename.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_use_gid_in_filename.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nest.tests.test_use_gid_in_filename.run": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "nest.tests.test_use_gid_in_filename.suite": {
     "line number": [
      73
     ]
    },
    "nest.tests.test_use_gid_in_filename.unittest": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_use_gid_in_filename.suite": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "nest.tests.test_use_gid_in_filename.UseGidInFilenameTestCase": {
     "line number": [
      67
     ]
    },
    "nest.tests.test_use_gid_in_filename.unittest": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_use_gid_in_filename.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_vogels_sprekeler_synapse": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      235
     ]
    },
    "nest.tests.test_vogels_sprekeler_synapse.run": {
     "line number": [
      236
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "nest.tests.test_vogels_sprekeler_synapse.nest": {
     "line number": [
      29
     ]
    },
    "nest.tests.test_vogels_sprekeler_synapse.unittest": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.assertAlmostEqualDetailed": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "str": {
     "line number": [
      92,
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.decay": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "math.exp": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.depress": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.facilitate": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.generateSpikes": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "nest.tests.test_vogels_sprekeler_synapse.nest": {
     "line number": [
      63,
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.setUp": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "nest.tests.test_vogels_sprekeler_synapse.nest": {
     "line number": [
      36,
      37,
      55,
      56,
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.status": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "nest.tests.test_vogels_sprekeler_synapse.nest": {
     "line number": [
      69,
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.test_badPropertiesSetupsThrowExceptions": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "badPropertyWith": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.test_badPropertiesSetupsThrowExceptions.badPropertyWith": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "nest.tests.test_vogels_sprekeler_synapse.nest": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.test_badPropertiesSetupsThrowExceptions.setupProperty": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "nest.tests.test_vogels_sprekeler_synapse.nest": {
     "line number": [
      101
     ]
    },
    "property": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.test_maxWeightStaturatesWeight": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "nest.tests.test_vogels_sprekeler_synapse.nest": {
     "line number": [
      210,
      214,
      215,
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.test_preVarsDecayAfterPostSpike": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "nest.tests.test_vogels_sprekeler_synapse.nest": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.test_preVarsDecayAfterPreSpike": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "nest.tests.test_vogels_sprekeler_synapse.nest": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.test_preVarsIncreaseWithPreSpike": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "nest.tests.test_vogels_sprekeler_synapse.nest": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.test_varsZeroAtStart": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.test_weightChangeWhenPrePostSpikes": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "nest.tests.test_vogels_sprekeler_synapse.nest": {
     "line number": [
      203
     ]
    },
    "print": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "nest.tests.test_vogels_sprekeler_synapse.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_vogels_sprekeler_synapse.run": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": {
    "nest.tests.test_vogels_sprekeler_synapse.suite": {
     "line number": [
      233
     ]
    },
    "nest.tests.test_vogels_sprekeler_synapse.unittest": {
     "line number": [
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.suite": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": {
    "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase": {
     "line number": [
      228
     ]
    },
    "nest.tests.test_vogels_sprekeler_synapse.unittest": {
     "line number": [
      228
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.tests.test_weight_recorder": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      316
     ]
    },
    "nest.tests.test_weight_recorder.nest": {
     "line number": [
      30
     ]
    },
    "nest.tests.test_weight_recorder.runner": {
     "line number": [
      319
     ]
    },
    "nest.tests.test_weight_recorder.suite": {
     "line number": [
      319
     ]
    },
    "nest.tests.test_weight_recorder.unittest": {
     "line number": [
      318
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.tests.test_weight_recorder.HAVE_GSL": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "nest.tests.test_weight_recorder.WeightRecorderTestCase": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "nest.tests.test_weight_recorder.nest": {
     "line number": [
      33
     ]
    },
    "nest.tests.test_weight_recorder.unittest": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.tests.test_weight_recorder.WeightRecorderTestCase.is_subset": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "numpy.round": {
     "line number": [
      39,
      40
     ]
    },
    "set": {
     "line number": [
      42,
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_weight_recorder.WeightRecorderTestCase.testDefinedSenders": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "nest.tests.test_weight_recorder.nest": {
     "line number": [
      117,
      118,
      120,
      121,
      124,
      126,
      127,
      129,
      130,
      132,
      133,
      137,
      138,
      141
     ]
    },
    "numpy.append": {
     "line number": [
      138
     ]
    },
    "numpy.array": {
     "line number": [
      135
     ]
    },
    "range": {
     "line number": [
      136
     ]
    },
    "type": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_weight_recorder.WeightRecorderTestCase.testDefinedTargets": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "nest.tests.test_weight_recorder.nest": {
     "line number": [
      149,
      150,
      152,
      153,
      156,
      158,
      159,
      161,
      162,
      164,
      165,
      169,
      170,
      173
     ]
    },
    "numpy.append": {
     "line number": [
      170
     ]
    },
    "numpy.array": {
     "line number": [
      167
     ]
    },
    "range": {
     "line number": [
      168
     ]
    },
    "type": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_weight_recorder.WeightRecorderTestCase.testDefinedTargetsAndSenders": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "nest.tests.test_weight_recorder.nest": {
     "line number": [
      181,
      182,
      184,
      185,
      188,
      190,
      191,
      193,
      194,
      196,
      200,
      202,
      205,
      206,
      209
     ]
    },
    "numpy.append": {
     "line number": [
      206
     ]
    },
    "numpy.array": {
     "line number": [
      203
     ]
    },
    "range": {
     "line number": [
      204
     ]
    },
    "type": {
     "line number": [
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_weight_recorder.WeightRecorderTestCase.testMultapses": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      251
     ]
    },
    "len": {
     "line number": [
      250
     ]
    },
    "list": {
     "line number": [
      246
     ]
    },
    "nest.tests.test_weight_recorder.nest": {
     "line number": [
      217,
      218,
      220,
      221,
      224,
      226,
      227,
      229,
      230,
      231,
      235,
      238,
      240,
      242
     ]
    },
    "numpy.empty": {
     "line number": [
      250
     ]
    },
    "numpy.unique": {
     "line number": [
      253
     ]
    },
    "object": {
     "line number": [
      250
     ]
    },
    "sorted": {
     "line number": [
      255,
      255
     ]
    },
    "zip": {
     "line number": [
      246
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_weight_recorder.WeightRecorderTestCase.testMultipleThreads": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "nest.tests.test_weight_recorder.nest": {
     "line number": [
      86,
      87,
      89,
      90,
      93,
      95,
      96,
      98,
      99,
      101,
      105,
      106,
      109
     ]
    },
    "numpy.append": {
     "line number": [
      106
     ]
    },
    "numpy.array": {
     "line number": [
      103
     ]
    },
    "range": {
     "line number": [
      104
     ]
    },
    "type": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_weight_recorder.WeightRecorderTestCase.testRPorts": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      302
     ]
    },
    "len": {
     "line number": [
      289,
      301
     ]
    },
    "list": {
     "line number": [
      297
     ]
    },
    "nest.tests.test_weight_recorder.HAVE_GSL": {
     "line number": [
      257
     ]
    },
    "nest.tests.test_weight_recorder.nest": {
     "line number": [
      261,
      262,
      264,
      266,
      270,
      274,
      277,
      278,
      282,
      283,
      284,
      286,
      287,
      291,
      293
     ]
    },
    "nest.tests.test_weight_recorder.unittest": {
     "line number": [
      257
     ]
    },
    "numpy.empty": {
     "line number": [
      301
     ]
    },
    "numpy.unique": {
     "line number": [
      304
     ]
    },
    "object": {
     "line number": [
      301
     ]
    },
    "range": {
     "line number": [
      289
     ]
    },
    "sorted": {
     "line number": [
      307,
      307
     ]
    },
    "zip": {
     "line number": [
      297
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_weight_recorder.WeightRecorderTestCase.testSingleThread": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "nest.tests.test_weight_recorder.nest": {
     "line number": [
      55,
      56,
      58,
      59,
      62,
      64,
      65,
      67,
      68,
      70,
      74,
      75,
      78
     ]
    },
    "numpy.append": {
     "line number": [
      75
     ]
    },
    "numpy.array": {
     "line number": [
      72
     ]
    },
    "range": {
     "line number": [
      73
     ]
    },
    "type": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_weight_recorder.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.tests.test_weight_recorder.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.tests.test_weight_recorder.runner": {
  "data": {
   "lineno": 318
  },
  "type": "constant"
 },
 "nest.tests.test_weight_recorder.suite": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": {
    "nest.tests.test_weight_recorder.WeightRecorderTestCase": {
     "line number": [
      312
     ]
    },
    "nest.tests.test_weight_recorder.unittest": {
     "line number": [
      312
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.tests.test_weight_recorder.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.topology": {
  "data": {},
  "type": "module"
 },
 "nest.topology.hl_api": {
  "data": {},
  "type": "module"
 },
 "nest.topology.hl_api.Axes3D": {
  "data": {
   "shadows": "mpl_toolkits.mplot3d.Axes3D"
  },
  "type": "import"
 },
 "nest.topology.hl_api.ConnectLayers": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      805,
      808
     ]
    },
    "dict": {
     "line number": [
      814
     ]
    },
    "fixdict": {
     "line number": [
      826
     ]
    },
    "len": {
     "line number": [
      810,
      810,
      814
     ]
    },
    "nest.topology.hl_api.nest": {
     "line number": [
      804,
      807,
      811,
      814
     ]
    },
    "topology_func": {
     "line number": [
      828
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.hl_api.ConnectLayers.fixdict": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      820
     ]
    },
    "fixdict": {
     "line number": [
      821
     ]
    },
    "isinstance": {
     "line number": [
      820,
      822,
      822
     ]
    },
    "nest.topology.hl_api.Mask": {
     "line number": [
      822
     ]
    },
    "nest.topology.hl_api.Parameter": {
     "line number": [
      822
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.hl_api.CreateLayer": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      640
     ]
    },
    "all": {
     "line number": [
      639
     ]
    },
    "dict": {
     "line number": [
      637,
      639
     ]
    },
    "isinstance": {
     "line number": [
      637,
      639,
      644
     ]
    },
    "list": {
     "line number": [
      644
     ]
    },
    "nest.topology.hl_api.nest": {
     "line number": [
      646,
      648
     ]
    },
    "topology_func": {
     "line number": [
      650
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.hl_api.CreateMask": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "nest.topology.hl_api.Mask": {
     "line number": [
      288,
      290
     ]
    },
    "topology_func": {
     "line number": [
      288,
      291
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.hl_api.CreateParameter": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": {
    "nest.topology.hl_api.Parameter": {
     "line number": [
      517
     ]
    },
    "topology_func": {
     "line number": [
      517
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.hl_api.Displacement": {
  "data": {
   "lineno": 1204,
   "symbols_in_volume": {
    "nest.topology.hl_api._check_displacement_args": {
     "line number": [
      1269
     ]
    },
    "topology_func": {
     "line number": [
      1271
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.hl_api.Distance": {
  "data": {
   "lineno": 1274,
   "symbols_in_volume": {
    "nest.topology.hl_api._check_displacement_args": {
     "line number": [
      1341
     ]
    },
    "topology_func": {
     "line number": [
      1342
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.hl_api.DumpLayerConnections": {
  "data": {
   "lineno": 1423,
   "symbols_in_volume": {
    "nest.topology.hl_api._rank_specific_filename": {
     "line number": [
      1496
     ]
    },
    "topology_func": {
     "line number": [
      1489
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.hl_api.DumpLayerNodes": {
  "data": {
   "lineno": 1361,
   "symbols_in_volume": {
    "nest.topology.hl_api._rank_specific_filename": {
     "line number": [
      1420
     ]
    },
    "topology_func": {
     "line number": [
      1417
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.hl_api.FindCenterElement": {
  "data": {
   "lineno": 1499,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1547
     ]
    },
    "nest.topology.hl_api.FindNearestElement": {
     "line number": [
      1550
     ]
    },
    "nest.topology.hl_api.nest": {
     "line number": [
      1546,
      1551
     ]
    },
    "tuple": {
     "line number": [
      1550
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.hl_api.FindNearestElement": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1116,
      1122
     ]
    },
    "len": {
     "line number": [
      1118,
      1145,
      1157,
      1158,
      1159,
      1161,
      1162
     ]
    },
    "list": {
     "line number": [
      1143
     ]
    },
    "nest.topology.hl_api.Distance": {
     "line number": [
      1137
     ]
    },
    "nest.topology.hl_api.nest": {
     "line number": [
      1115,
      1119,
      1121,
      1126,
      1132
     ]
    },
    "nest.topology.hl_api.numpy": {
     "line number": [
      1137,
      1140,
      1149
     ]
    },
    "range": {
     "line number": [
      1145
     ]
    },
    "tuple": {
     "line number": [
      1151,
      1152,
      1163,
      1165
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.hl_api.GetElement": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      997
     ]
    },
    "len": {
     "line number": [
      999,
      1002,
      1042
     ]
    },
    "make_tuple": {
     "line number": [
      1030,
      1039
     ]
    },
    "nest.topology.hl_api.nest": {
     "line number": [
      996,
      1000,
      1002,
      1003,
      1012,
      1022
     ]
    },
    "topology_func": {
     "line number": [
      1009,
      1025,
      1036
     ]
    },
    "tuple": {
     "line number": [
      1029,
      1030,
      1039
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.hl_api.GetElement.make_tuple": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": {
    "nest.topology.hl_api.nest": {
     "line number": [
      1017
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.hl_api.GetLayer": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      929
     ]
    },
    "nest.topology.hl_api.nest": {
     "line number": [
      928
     ]
    },
    "topology_func": {
     "line number": [
      931
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.hl_api.GetPosition": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      881
     ]
    },
    "nest.topology.hl_api.nest": {
     "line number": [
      880
     ]
    },
    "topology_func": {
     "line number": [
      883
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.hl_api.GetTargetNodes": {
  "data": {
   "lineno": 1556,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1624,
      1627
     ]
    },
    "dict": {
     "line number": [
      1643
     ]
    },
    "len": {
     "line number": [
      1629
     ]
    },
    "nest.topology.hl_api.nest": {
     "line number": [
      1623,
      1626,
      1630,
      1632,
      1634,
      1639
     ]
    },
    "tuple": {
     "line number": [
      1648
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.hl_api.GetTargetPositions": {
  "data": {
   "lineno": 1651,
   "symbols_in_volume": {
    "nest.topology.hl_api.GetPosition": {
     "line number": [
      1716
     ]
    },
    "nest.topology.hl_api.GetTargetNodes": {
     "line number": [
      1717
     ]
    },
    "tuple": {
     "line number": [
      1716
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.hl_api.Mask": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "object": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.topology.hl_api.Mask.Inside": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "topology_func": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.hl_api.Mask.__and__": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "nest.topology.hl_api.Mask.__init__": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      111
     ]
    },
    "isinstance": {
     "line number": [
      110
     ]
    },
    "nest.topology.hl_api.nest": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.hl_api.Mask.__or__": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "nest.topology.hl_api.Mask.__sub__": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "nest.topology.hl_api.Mask._binop": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "NotImplemented": {
     "line number": [
      117
     ]
    },
    "isinstance": {
     "line number": [
      116
     ]
    },
    "nest.topology.hl_api.Mask": {
     "line number": [
      116,
      118
     ]
    },
    "topology_func": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.hl_api.Parameter": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": {
    "object": {
     "line number": [
      294
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.topology.hl_api.Parameter.GetValue": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": {
    "topology_func": {
     "line number": [
      374
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.hl_api.Parameter.__add__": {
  "data": {
   "lineno": 320
  },
  "type": "function"
 },
 "nest.topology.hl_api.Parameter.__div__": {
  "data": {
   "lineno": 329
  },
  "type": "function"
 },
 "nest.topology.hl_api.Parameter.__init__": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      311
     ]
    },
    "isinstance": {
     "line number": [
      310
     ]
    },
    "nest.topology.hl_api.nest": {
     "line number": [
      310
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.hl_api.Parameter.__mul__": {
  "data": {
   "lineno": 326
  },
  "type": "function"
 },
 "nest.topology.hl_api.Parameter.__sub__": {
  "data": {
   "lineno": 323
  },
  "type": "function"
 },
 "nest.topology.hl_api.Parameter.__truediv__": {
  "data": {
   "lineno": 332
  },
  "type": "function"
 },
 "nest.topology.hl_api.Parameter._binop": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": {
    "NotImplemented": {
     "line number": [
      317
     ]
    },
    "isinstance": {
     "line number": [
      316
     ]
    },
    "nest.topology.hl_api.Parameter": {
     "line number": [
      316,
      318
     ]
    },
    "topology_func": {
     "line number": [
      318
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.hl_api.PlotKernel": {
  "data": {
   "lineno": 2006,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2096,
      2181,
      2201
     ]
    },
    "dict": {
     "line number": [
      2184
     ]
    },
    "isinstance": {
     "line number": [
      2095,
      2184
     ]
    },
    "matplotlib.pyplot.Circle": {
     "line number": [
      2112,
      2117,
      2122,
      2124,
      2129,
      2131,
      2188,
      2196
     ]
    },
    "matplotlib.pyplot.Rectangle": {
     "line number": [
      2149,
      2155
     ]
    },
    "matplotlib.pyplot.draw": {
     "line number": [
      2204
     ]
    },
    "nest.topology.hl_api.GetLayer": {
     "line number": [
      2105
     ]
    },
    "nest.topology.hl_api.GetPosition": {
     "line number": [
      2098
     ]
    },
    "nest.topology.hl_api._shifted_positions": {
     "line number": [
      2116,
      2128,
      2153,
      2175,
      2194
     ]
    },
    "nest.topology.hl_api.matplotlib": {
     "line number": [
      2095,
      2170,
      2177
     ]
    },
    "nest.topology.hl_api.nest": {
     "line number": [
      2106,
      2107
     ]
    },
    "nest.topology.hl_api.numpy": {
     "line number": [
      2098,
      2101,
      2103,
      2140,
      2141,
      2142
     ]
    },
    "range": {
     "line number": [
      2187,
      2195
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.hl_api.PlotLayer": {
  "data": {
   "lineno": 1751,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1809
     ]
    },
    "len": {
     "line number": [
      1808,
      1814,
      1835
     ]
    },
    "matplotlib.pyplot.draw_if_interactive": {
     "line number": [
      1850
     ]
    },
    "matplotlib.pyplot.figure": {
     "line number": [
      1826,
      1844
     ]
    },
    "nest.topology.hl_api.GetPosition": {
     "line number": [
      1823,
      1841
     ]
    },
    "nest.topology.hl_api._draw_extent": {
     "line number": [
      1833
     ]
    },
    "nest.topology.hl_api.nest": {
     "line number": [
      1812,
      1819,
      1821,
      1823,
      1839,
      1841,
      1853
     ]
    },
    "zip": {
     "line number": [
      1823,
      1841
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.hl_api.PlotTargets": {
  "data": {
   "lineno": 1858,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1951
     ]
    },
    "matplotlib.pyplot.draw_if_interactive": {
     "line number": [
      2001
     ]
    },
    "matplotlib.pyplot.figure": {
     "line number": [
      1959,
      1985
     ]
    },
    "nest.topology.hl_api.GetPosition": {
     "line number": [
      1946
     ]
    },
    "nest.topology.hl_api.GetTargetPositions": {
     "line number": [
      1965,
      1991
     ]
    },
    "nest.topology.hl_api.PlotKernel": {
     "line number": [
      1978
     ]
    },
    "nest.topology.hl_api._draw_extent": {
     "line number": [
      1975
     ]
    },
    "nest.topology.hl_api.nest": {
     "line number": [
      1949,
      1956
     ]
    },
    "zip": {
     "line number": [
      1967,
      1993
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.hl_api.SelectNodesByMask": {
  "data": {
   "lineno": 2207,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2232
     ]
    },
    "len": {
     "line number": [
      2231
     ]
    },
    "topology_func": {
     "line number": [
      2236
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.hl_api.__all__": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "nest.topology.hl_api._check_displacement_args": {
  "data": {
   "lineno": 1168,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1176
     ]
    },
    "len": {
     "line number": [
      1178,
      1187,
      1187,
      1187,
      1187,
      1195,
      1196,
      1197,
      1198
     ]
    },
    "nest.topology.hl_api.nest": {
     "line number": [
      1178,
      1179,
      1183,
      1184,
      1189
     ]
    },
    "nest.topology.hl_api.numpy": {
     "line number": [
      1176
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.hl_api._draw_extent": {
  "data": {
   "lineno": 1720,
   "symbols_in_volume": {
    "matplotlib.pyplot.Rectangle": {
     "line number": [
      1729
     ]
    },
    "tuple": {
     "line number": [
      1736,
      1736
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.hl_api._rank_specific_filename": {
  "data": {
   "lineno": 1345,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1352
     ]
    },
    "nest.topology.hl_api.nest": {
     "line number": [
      1348,
      1351,
      1353
     ]
    },
    "str": {
     "line number": [
      1352
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.hl_api._shifted_positions": {
  "data": {
   "lineno": 1739
  },
  "type": "function"
 },
 "nest.topology.hl_api.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "nest.topology.hl_api.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.topology.hl_api.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.topology.hl_api.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.topology.hl_api.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "nest.topology.ll_api": {
  "data": {},
  "type": "module"
 },
 "nest.topology.ll_api.__all__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "nest.topology.ll_api.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.topology.ll_api.topology_func": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "nest.topology.ll_api.nest": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.test": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "nest.topology.unittest": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests": {
  "data": {},
  "type": "module"
 },
 "nest.topology.tests.suite": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "nest.topology.tests.test_all": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      61
     ]
    },
    "nest.topology.tests.test_all.runner": {
     "line number": [
      63
     ]
    },
    "nest.topology.tests.test_all.suite": {
     "line number": [
      63
     ]
    },
    "nest.topology.tests.test_all.unittest": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.topology.tests.test_all.compatibility": {
  "data": {
   "shadows": "nest.tests.compatibility"
  },
  "type": "import"
 },
 "nest.topology.tests.test_all.runner": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "nest.topology.tests.test_all.suite": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "nest.topology.tests.test_all.unittest": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_all.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.topology.tests.test_basics": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      34
     ]
    },
    "__name__": {
     "line number": [
      358
     ]
    },
    "nest.topology.tests.test_basics.runner": {
     "line number": [
      360
     ]
    },
    "nest.topology.tests.test_basics.suite": {
     "line number": [
      360
     ]
    },
    "nest.topology.tests.test_basics.unittest": {
     "line number": [
      359
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.topology.tests.test_basics.BasicsTestCase": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "nest.topology.tests.test_basics.unittest": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.topology.tests.test_basics.BasicsTestCase.test_CreateLayer": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "len": {
     "line number": [
      47,
      48
     ]
    },
    "nest.topology.CreateLayer": {
     "line number": [
      44
     ]
    },
    "nest.topology.tests.test_basics.nest": {
     "line number": [
      43,
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_basics.BasicsTestCase.test_CreateLayerN": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "len": {
     "line number": [
      61,
      62
     ]
    },
    "nest.topology.CreateLayer": {
     "line number": [
      60
     ]
    },
    "nest.topology.tests.test_basics.nest": {
     "line number": [
      59,
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_basics.BasicsTestCase.test_Displacement": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "all": {
     "line number": [
      148,
      153,
      158,
      165,
      170
     ]
    },
    "len": {
     "line number": [
      147,
      147,
      152,
      152,
      153,
      157,
      157,
      158,
      164,
      164,
      165,
      168,
      169,
      169,
      170
     ]
    },
    "nest.topology.CreateLayer": {
     "line number": [
      142
     ]
    },
    "nest.topology.Displacement": {
     "line number": [
      146,
      151,
      156,
      163,
      168
     ]
    },
    "nest.topology.tests.test_basics.HAVE_NUMPY": {
     "line number": [
      136
     ]
    },
    "nest.topology.tests.test_basics.nest": {
     "line number": [
      141,
      143
     ]
    },
    "nest.topology.tests.test_basics.unittest": {
     "line number": [
      136
     ]
    },
    "numpy.array": {
     "line number": [
      163,
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_basics.BasicsTestCase.test_Distance": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "all": {
     "line number": [
      184,
      189,
      194,
      201,
      206
     ]
    },
    "float": {
     "line number": [
      189,
      194,
      201,
      206
     ]
    },
    "isinstance": {
     "line number": [
      189,
      194,
      201,
      206
     ]
    },
    "len": {
     "line number": [
      183,
      183,
      188,
      188,
      193,
      193,
      200,
      200,
      204,
      205,
      205
     ]
    },
    "nest.topology.CreateLayer": {
     "line number": [
      178
     ]
    },
    "nest.topology.Distance": {
     "line number": [
      182,
      187,
      192,
      199,
      204
     ]
    },
    "nest.topology.tests.test_basics.HAVE_NUMPY": {
     "line number": [
      172
     ]
    },
    "nest.topology.tests.test_basics.nest": {
     "line number": [
      177,
      179
     ]
    },
    "nest.topology.tests.test_basics.unittest": {
     "line number": [
      172
     ]
    },
    "numpy.array": {
     "line number": [
      199,
      204
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_basics.BasicsTestCase.test_FindElements": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": {
    "len": {
     "line number": [
      236,
      241
     ]
    },
    "nest.topology.CreateLayer": {
     "line number": [
      216
     ]
    },
    "nest.topology.FindNearestElement": {
     "line number": [
      219,
      223,
      227,
      231,
      235,
      240,
      245
     ]
    },
    "nest.topology.tests.test_basics.HAVE_NUMPY": {
     "line number": [
      208
     ]
    },
    "nest.topology.tests.test_basics.nest": {
     "line number": [
      215
     ]
    },
    "nest.topology.tests.test_basics.unittest": {
     "line number": [
      208
     ]
    },
    "sum": {
     "line number": [
      237
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_basics.BasicsTestCase.test_GetCenterElement": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "nest.topology.CreateLayer": {
     "line number": [
      257
     ]
    },
    "nest.topology.FindCenterElement": {
     "line number": [
      260,
      264
     ]
    },
    "nest.topology.tests.test_basics.HAVE_NUMPY": {
     "line number": [
      249
     ]
    },
    "nest.topology.tests.test_basics.nest": {
     "line number": [
      256
     ]
    },
    "nest.topology.tests.test_basics.unittest": {
     "line number": [
      249
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_basics.BasicsTestCase.test_GetElement": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "all": {
     "line number": [
      119,
      124,
      125,
      131,
      132,
      133
     ]
    },
    "int": {
     "line number": [
      114
     ]
    },
    "len": {
     "line number": [
      113,
      118,
      118,
      123,
      123,
      125,
      129,
      129,
      132,
      132
     ]
    },
    "nest.topology.CreateLayer": {
     "line number": [
      108
     ]
    },
    "nest.topology.GetElement": {
     "line number": [
      112,
      117,
      122,
      128
     ]
    },
    "nest.topology.tests.test_basics.nest": {
     "line number": [
      107,
      119,
      124,
      131,
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_basics.BasicsTestCase.test_GetLayer": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "nest.topology.CreateLayer": {
     "line number": [
      74
     ]
    },
    "nest.topology.GetLayer": {
     "line number": [
      78
     ]
    },
    "nest.topology.tests.test_basics.nest": {
     "line number": [
      73,
      78
     ]
    },
    "zip": {
     "line number": [
      82,
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_basics.BasicsTestCase.test_GetPosition": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "nest.topology.CreateLayer": {
     "line number": [
      95
     ]
    },
    "nest.topology.GetPosition": {
     "line number": [
      98
     ]
    },
    "nest.topology.tests.test_basics.nest": {
     "line number": [
      94,
      98
     ]
    },
    "zip": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_basics.BasicsTestCase.test_GetTargetNodesPositions": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": {
    "all": {
     "line number": [
      301,
      306,
      314,
      319,
      324,
      328,
      333
     ]
    },
    "len": {
     "line number": [
      297,
      300,
      301,
      304,
      304,
      306,
      309,
      309,
      312,
      312,
      314,
      317,
      317,
      319,
      322,
      322,
      324,
      327,
      327,
      328,
      331,
      331,
      333
     ]
    },
    "nest.topology.ConnectLayers": {
     "line number": [
      284,
      292
     ]
    },
    "nest.topology.CreateLayer": {
     "line number": [
      275
     ]
    },
    "nest.topology.GetTargetNodes": {
     "line number": [
      296,
      303,
      311,
      316,
      321,
      326,
      330
     ]
    },
    "nest.topology.GetTargetPositions": {
     "line number": [
      299,
      308
     ]
    },
    "nest.topology.tests.test_basics.nest": {
     "line number": [
      274,
      276,
      277,
      278,
      279
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_basics.BasicsTestCase.test_Parameter": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": {
    "int": {
     "line number": [
      346,
      347,
      348,
      349,
      350
     ]
    },
    "nest.topology.CreateParameter": {
     "line number": [
      337,
      338
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_basics.HAVE_NUMPY": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "nest.topology.tests.test_basics.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "nest.topology.tests.test_basics.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.topology.tests.test_basics.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.topology.tests.test_basics.runner": {
  "data": {
   "lineno": 359
  },
  "type": "constant"
 },
 "nest.topology.tests.test_basics.suite": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": {
    "nest.topology.tests.test_basics.BasicsTestCase": {
     "line number": [
      354
     ]
    },
    "nest.topology.tests.test_basics.unittest": {
     "line number": [
      354
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_basics.topo": {
  "data": {
   "shadows": "nest.topology"
  },
  "type": "import"
 },
 "nest.topology.tests.test_basics.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.topology.tests.test_connection_with_elliptical_mask": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      304
     ]
    },
    "nest.topology.tests.test_connection_with_elliptical_mask.runner": {
     "line number": [
      306
     ]
    },
    "nest.topology.tests.test_connection_with_elliptical_mask.suite": {
     "line number": [
      306
     ]
    },
    "nest.topology.tests.test_connection_with_elliptical_mask.unittest": {
     "line number": [
      305
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.topology.tests.test_connection_with_elliptical_mask.ConnectWithEllipticalMask": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "nest.topology.tests.test_connection_with_elliptical_mask.unittest": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.topology.tests.test_connection_with_elliptical_mask.ConnectWithEllipticalMask.setUp": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "nest.topology.tests.test_connection_with_elliptical_mask.nest": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_connection_with_elliptical_mask.ConnectWithEllipticalMask.test_ConnectAnchoredEllipticalMask": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "nest.topology.ConnectLayers": {
     "line number": [
      202
     ]
    },
    "nest.topology.CreateLayer": {
     "line number": [
      190,
      193
     ]
    },
    "nest.topology.tests.test_connection_with_elliptical_mask.nest": {
     "line number": [
      220
     ]
    },
    "sorted": {
     "line number": [
      222,
      222
     ]
    },
    "zip": {
     "line number": [
      222
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_connection_with_elliptical_mask.ConnectWithEllipticalMask.test_ConnectEllipticalMask": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "nest.topology.ConnectLayers": {
     "line number": [
      76
     ]
    },
    "nest.topology.CreateLayer": {
     "line number": [
      65,
      68
     ]
    },
    "nest.topology.tests.test_connection_with_elliptical_mask.nest": {
     "line number": [
      96
     ]
    },
    "sorted": {
     "line number": [
      98,
      98
     ]
    },
    "zip": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_connection_with_elliptical_mask.ConnectWithEllipticalMask.test_ConnectEllipticalMaskWithPeriodicBoundary": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": {
    "nest.topology.ConnectLayers": {
     "line number": [
      270
     ]
    },
    "nest.topology.CreateLayer": {
     "line number": [
      257,
      261
     ]
    },
    "nest.topology.tests.test_connection_with_elliptical_mask.nest": {
     "line number": [
      293
     ]
    },
    "sorted": {
     "line number": [
      295,
      295
     ]
    },
    "zip": {
     "line number": [
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_connection_with_elliptical_mask.ConnectWithEllipticalMask.test_ConnectTiltedEllipticalMask": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "nest.topology.ConnectLayers": {
     "line number": [
      142
     ]
    },
    "nest.topology.CreateLayer": {
     "line number": [
      130,
      133
     ]
    },
    "nest.topology.tests.test_connection_with_elliptical_mask.nest": {
     "line number": [
      155
     ]
    },
    "sorted": {
     "line number": [
      157,
      157
     ]
    },
    "zip": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_connection_with_elliptical_mask.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.topology.tests.test_connection_with_elliptical_mask.runner": {
  "data": {
   "lineno": 305
  },
  "type": "constant"
 },
 "nest.topology.tests.test_connection_with_elliptical_mask.suite": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": {
    "nest.topology.tests.test_connection_with_elliptical_mask.ConnectWithEllipticalMask": {
     "line number": [
      300
     ]
    },
    "nest.topology.tests.test_connection_with_elliptical_mask.unittest": {
     "line number": [
      300
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_connection_with_elliptical_mask.topo": {
  "data": {
   "shadows": "nest.topology"
  },
  "type": "import"
 },
 "nest.topology.tests.test_connection_with_elliptical_mask.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.topology.tests.test_dumping": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      113
     ]
    },
    "__name__": {
     "line number": [
      104
     ]
    },
    "matplotlib.pyplot.show": {
     "line number": [
      112
     ]
    },
    "nest.topology.tests.test_dumping.runner": {
     "line number": [
      107
     ]
    },
    "nest.topology.tests.test_dumping.suite": {
     "line number": [
      107
     ]
    },
    "nest.topology.tests.test_dumping.unittest": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.topology.tests.test_dumping.PlottingTestCase": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "nest.topology.tests.test_dumping.unittest": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.topology.tests.test_dumping.PlottingTestCase.nest_tmpdir": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "nest.topology.tests.test_dumping.os": {
     "line number": [
      43,
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_dumping.PlottingTestCase.test_DumpConns": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "nest.topology.ConnectLayers": {
     "line number": [
      76
     ]
    },
    "nest.topology.CreateLayer": {
     "line number": [
      75
     ]
    },
    "nest.topology.DumpLayerConnections": {
     "line number": [
      78
     ]
    },
    "nest.topology.tests.test_dumping.nest": {
     "line number": [
      74
     ]
    },
    "nest.topology.tests.test_dumping.os": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_dumping.PlottingTestCase.test_DumpConns2": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "nest.topology.ConnectLayers": {
     "line number": [
      91
     ]
    },
    "nest.topology.CreateLayer": {
     "line number": [
      90
     ]
    },
    "nest.topology.DumpLayerConnections": {
     "line number": [
      93
     ]
    },
    "nest.topology.tests.test_dumping.nest": {
     "line number": [
      89
     ]
    },
    "nest.topology.tests.test_dumping.os": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_dumping.PlottingTestCase.test_DumpNodes": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "nest.topology.CreateLayer": {
     "line number": [
      53
     ]
    },
    "nest.topology.DumpLayerNodes": {
     "line number": [
      54
     ]
    },
    "nest.topology.tests.test_dumping.nest": {
     "line number": [
      52
     ]
    },
    "nest.topology.tests.test_dumping.os": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_dumping.PlottingTestCase.test_DumpNodes2": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "nest.topology.CreateLayer": {
     "line number": [
      63
     ]
    },
    "nest.topology.DumpLayerNodes": {
     "line number": [
      64
     ]
    },
    "nest.topology.tests.test_dumping.nest": {
     "line number": [
      62
     ]
    },
    "nest.topology.tests.test_dumping.os": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_dumping.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.topology.tests.test_dumping.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nest.topology.tests.test_dumping.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "nest.topology.tests.test_dumping.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "nest.topology.tests.test_dumping.runner": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "nest.topology.tests.test_dumping.suite": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "nest.topology.tests.test_dumping.PlottingTestCase": {
     "line number": [
      100
     ]
    },
    "nest.topology.tests.test_dumping.unittest": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_dumping.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nest.topology.tests.test_dumping.topo": {
  "data": {
   "shadows": "nest.topology"
  },
  "type": "import"
 },
 "nest.topology.tests.test_dumping.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.topology.tests.test_plotting": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      118
     ]
    },
    "matplotlib.pyplot.figure": {
     "line number": [
      36
     ]
    },
    "matplotlib.pyplot.show": {
     "line number": [
      124
     ]
    },
    "nest.topology.tests.test_plotting.runner": {
     "line number": [
      120
     ]
    },
    "nest.topology.tests.test_plotting.suite": {
     "line number": [
      120
     ]
    },
    "nest.topology.tests.test_plotting.unittest": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.topology.tests.test_plotting.PLOTTING_POSSIBLE": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "nest.topology.tests.test_plotting.PlottingTestCase": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "nest.topology.tests.test_plotting.PLOTTING_POSSIBLE": {
     "line number": [
      42
     ]
    },
    "nest.topology.tests.test_plotting.unittest": {
     "line number": [
      44,
      42
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.topology.tests.test_plotting.PlottingTestCase.test_PlotKernel": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "matplotlib.pyplot.figure": {
     "line number": [
      96
     ]
    },
    "nest.topology.CreateLayer": {
     "line number": [
      95
     ]
    },
    "nest.topology.FindCenterElement": {
     "line number": [
      98
     ]
    },
    "nest.topology.PlotKernel": {
     "line number": [
      99,
      103,
      107
     ]
    },
    "nest.topology.tests.test_plotting.nest": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_plotting.PlottingTestCase.test_PlotLayer": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "nest.topology.CreateLayer": {
     "line number": [
      50
     ]
    },
    "nest.topology.PlotLayer": {
     "line number": [
      51
     ]
    },
    "nest.topology.tests.test_plotting.nest": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_plotting.PlottingTestCase.test_PlotTargets": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "nest.topology.ConnectLayers": {
     "line number": [
      72,
      80
     ]
    },
    "nest.topology.CreateLayer": {
     "line number": [
      63
     ]
    },
    "nest.topology.FindCenterElement": {
     "line number": [
      84
     ]
    },
    "nest.topology.PlotTargets": {
     "line number": [
      85
     ]
    },
    "nest.topology.tests.test_plotting.nest": {
     "line number": [
      62,
      64,
      65,
      66,
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_plotting.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.topology.tests.test_plotting.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "nest.topology.tests.test_plotting.runner": {
  "data": {
   "lineno": 119
  },
  "type": "constant"
 },
 "nest.topology.tests.test_plotting.suite": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "nest.topology.tests.test_plotting.PlottingTestCase": {
     "line number": [
      114
     ]
    },
    "nest.topology.tests.test_plotting.unittest": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_plotting.topo": {
  "data": {
   "shadows": "nest.topology"
  },
  "type": "import"
 },
 "nest.topology.tests.test_plotting.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.topology.tests.test_random_parameter": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      41,
      47
     ]
    },
    "__name__": {
     "line number": [
      148
     ]
    },
    "nest.topology.tests.test_random_parameter.runner": {
     "line number": [
      150
     ]
    },
    "nest.topology.tests.test_random_parameter.suite": {
     "line number": [
      150
     ]
    },
    "nest.topology.tests.test_random_parameter.unittest": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.topology.tests.test_random_parameter.HAVE_ERF": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "nest.topology.tests.test_random_parameter.HAVE_NUMPY": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "nest.topology.tests.test_random_parameter.RandomParameterTestCase": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "nest.topology.tests.test_random_parameter.HAVE_NUMPY": {
     "line number": [
      51
     ]
    },
    "nest.topology.tests.test_random_parameter.unittest": {
     "line number": [
      52,
      51
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.topology.tests.test_random_parameter.RandomParameterTestCase.kolmogorov_smirnov": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "expected_cdf_func": {
     "line number": [
      81
     ]
    },
    "float": {
     "line number": [
      80
     ]
    },
    "len": {
     "line number": [
      77
     ]
    },
    "math.sqrt": {
     "line number": [
      93
     ]
    },
    "max": {
     "line number": [
      83
     ]
    },
    "nest.topology.ConnectLayers": {
     "line number": [
      69
     ]
    },
    "nest.topology.CreateLayer": {
     "line number": [
      67
     ]
    },
    "nest.topology.tests.test_random_parameter.nest": {
     "line number": [
      64,
      74,
      75
     ]
    },
    "nest.topology.tests.test_random_parameter.numpy": {
     "line number": [
      75,
      80,
      83,
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_random_parameter.RandomParameterTestCase.test_lognormal": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "math.erf": {
     "line number": [
      134
     ]
    },
    "nest.topology.tests.test_random_parameter.HAVE_ERF": {
     "line number": [
      125
     ]
    },
    "nest.topology.tests.test_random_parameter.numpy": {
     "line number": [
      134
     ]
    },
    "nest.topology.tests.test_random_parameter.unittest": {
     "line number": [
      125
     ]
    },
    "numpy_erf": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_random_parameter.RandomParameterTestCase.test_lognormal.lognormal_cdf_func": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "math.sqrt": {
     "line number": [
      138
     ]
    },
    "nest.topology.tests.test_random_parameter.numpy": {
     "line number": [
      138
     ]
    },
    "numpy_erf": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_random_parameter.RandomParameterTestCase.test_normal": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "math.erf": {
     "line number": [
      118
     ]
    },
    "nest.topology.tests.test_random_parameter.HAVE_ERF": {
     "line number": [
      109
     ]
    },
    "nest.topology.tests.test_random_parameter.numpy": {
     "line number": [
      118
     ]
    },
    "nest.topology.tests.test_random_parameter.unittest": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_random_parameter.RandomParameterTestCase.test_normal.normal_cdf_func": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "math.sqrt": {
     "line number": [
      121
     ]
    },
    "numpy_erf": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_random_parameter.RandomParameterTestCase.test_uniform": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "nest.topology.tests.test_random_parameter.RandomParameterTestCase.test_uniform.uniform_cdf_func": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "nest.topology.tests.test_random_parameter.erf": {
  "data": {
   "shadows": "math.erf"
  },
  "type": "import"
 },
 "nest.topology.tests.test_random_parameter.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.topology.tests.test_random_parameter.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.topology.tests.test_random_parameter.runner": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "nest.topology.tests.test_random_parameter.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "nest.topology.tests.test_random_parameter.suite": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "nest.topology.tests.test_random_parameter.RandomParameterTestCase": {
     "line number": [
      144
     ]
    },
    "nest.topology.tests.test_random_parameter.unittest": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_random_parameter.topo": {
  "data": {
   "shadows": "nest.topology"
  },
  "type": "import"
 },
 "nest.topology.tests.test_random_parameter.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.topology.tests.test_rotated_rect_mask": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      412
     ]
    },
    "nest.topology.tests.test_rotated_rect_mask.runner": {
     "line number": [
      414
     ]
    },
    "nest.topology.tests.test_rotated_rect_mask.suite": {
     "line number": [
      414
     ]
    },
    "nest.topology.tests.test_rotated_rect_mask.unittest": {
     "line number": [
      413
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.topology.tests.test_rotated_rect_mask.RotatedRectangularMask": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "nest.topology.tests.test_rotated_rect_mask.unittest": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.topology.tests.test_rotated_rect_mask.RotatedRectangularMask.setUp": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "nest.topology.tests.test_rotated_rect_mask.nest": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_rotated_rect_mask.RotatedRectangularMask.test_ConnectWithRotatedRectangleMask": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": {
    "list": {
     "line number": [
      400
     ]
    },
    "nest.topology.ConnectLayers": {
     "line number": [
      387
     ]
    },
    "nest.topology.CreateLayer": {
     "line number": [
      375,
      378
     ]
    },
    "nest.topology.tests.test_rotated_rect_mask.nest": {
     "line number": [
      400
     ]
    },
    "sorted": {
     "line number": [
      400
     ]
    },
    "zip": {
     "line number": [
      402
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_rotated_rect_mask.RotatedRectangularMask.test_RotatedBoxMaskByAzimuthAndPolarAngle": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": {
    "nest.topology.CreateLayer": {
     "line number": [
      247
     ]
    },
    "nest.topology.CreateMask": {
     "line number": [
      255
     ]
    },
    "nest.topology.SelectNodesByMask": {
     "line number": [
      257
     ]
    },
    "range": {
     "line number": [
      243,
      244,
      245
     ]
    },
    "sorted": {
     "line number": [
      258
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_rotated_rect_mask.RotatedRectangularMask.test_RotatedBoxMaskByAzimuthAngle": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "nest.topology.CreateLayer": {
     "line number": [
      112
     ]
    },
    "nest.topology.CreateMask": {
     "line number": [
      119,
      128,
      139,
      148
     ]
    },
    "nest.topology.SelectNodesByMask": {
     "line number": [
      121,
      129,
      140,
      149
     ]
    },
    "range": {
     "line number": [
      108,
      109,
      110
     ]
    },
    "sorted": {
     "line number": [
      130,
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_rotated_rect_mask.RotatedRectangularMask.test_RotatedBoxMaskByPolarAngle": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "nest.topology.CreateLayer": {
     "line number": [
      161
     ]
    },
    "nest.topology.CreateMask": {
     "line number": [
      167,
      178,
      189,
      199,
      210,
      222,
      232
     ]
    },
    "nest.topology.SelectNodesByMask": {
     "line number": [
      169,
      179,
      190,
      200,
      211,
      223,
      233
     ]
    },
    "range": {
     "line number": [
      157,
      158,
      159
     ]
    },
    "sorted": {
     "line number": [
      170,
      180,
      191,
      201,
      212,
      224,
      234
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_rotated_rect_mask.RotatedRectangularMask.test_RotatedBoxOutsideOrigin": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": {
    "nest.topology.CreateLayer": {
     "line number": [
      308
     ]
    },
    "nest.topology.CreateMask": {
     "line number": [
      315,
      326,
      336
     ]
    },
    "nest.topology.SelectNodesByMask": {
     "line number": [
      317,
      327,
      337
     ]
    },
    "range": {
     "line number": [
      304,
      305,
      306
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_rotated_rect_mask.RotatedRectangularMask.test_RotatedRectangleOutsideOrigin": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": {
    "nest.topology.CreateLayer": {
     "line number": [
      268
     ]
    },
    "nest.topology.CreateMask": {
     "line number": [
      275,
      286,
      296
     ]
    },
    "nest.topology.SelectNodesByMask": {
     "line number": [
      277,
      287,
      297
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_rotated_rect_mask.RotatedRectangularMask.test_RotatedRectangularMask": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "nest.topology.CreateLayer": {
     "line number": [
      58
     ]
    },
    "nest.topology.CreateMask": {
     "line number": [
      64,
      74,
      83,
      92,
      103
     ]
    },
    "nest.topology.SelectNodesByMask": {
     "line number": [
      66,
      75,
      84,
      93
     ]
    },
    "nest.topology.tests.test_rotated_rect_mask.nest": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_rotated_rect_mask.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.topology.tests.test_rotated_rect_mask.runner": {
  "data": {
   "lineno": 413
  },
  "type": "constant"
 },
 "nest.topology.tests.test_rotated_rect_mask.suite": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": {
    "nest.topology.tests.test_rotated_rect_mask.RotatedRectangularMask": {
     "line number": [
      408
     ]
    },
    "nest.topology.tests.test_rotated_rect_mask.unittest": {
     "line number": [
      408
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_rotated_rect_mask.topo": {
  "data": {
   "shadows": "nest.topology"
  },
  "type": "import"
 },
 "nest.topology.tests.test_rotated_rect_mask.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      361
     ]
    },
    "nest.topology.tests.test_selection_function_and_elliptical_mask.runner": {
     "line number": [
      363
     ]
    },
    "nest.topology.tests.test_selection_function_and_elliptical_mask.suite": {
     "line number": [
      363
     ]
    },
    "nest.topology.tests.test_selection_function_and_elliptical_mask.unittest": {
     "line number": [
      362
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "nest.topology.tests.test_selection_function_and_elliptical_mask.unittest": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask.setUp": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "nest.topology.tests.test_selection_function_and_elliptical_mask.nest": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask.test_CreateEllipticalMask2D": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "nest.topology.CreateMask": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask.test_EllipsoidalMask3D": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": {
    "nest.topology.CreateLayer": {
     "line number": [
      203
     ]
    },
    "nest.topology.CreateMask": {
     "line number": [
      208,
      218
     ]
    },
    "nest.topology.SelectNodesByMask": {
     "line number": [
      212,
      222
     ]
    },
    "range": {
     "line number": [
      200,
      201,
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask.test_EllipticalMask2D": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "nest.topology.CreateLayer": {
     "line number": [
      97
     ]
    },
    "nest.topology.CreateMask": {
     "line number": [
      101,
      110
     ]
    },
    "nest.topology.SelectNodesByMask": {
     "line number": [
      105,
      112
     ]
    },
    "sorted": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask.test_EllipticalMask2DWithAnchor": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "nest.topology.CreateLayer": {
     "line number": [
      122
     ]
    },
    "nest.topology.CreateMask": {
     "line number": [
      126
     ]
    },
    "nest.topology.SelectNodesByMask": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask.test_EllipticalMask2DwithAnchorAndCenteredLayer": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "nest.topology.CreateLayer": {
     "line number": [
      180
     ]
    },
    "nest.topology.CreateMask": {
     "line number": [
      184,
      191
     ]
    },
    "nest.topology.SelectNodesByMask": {
     "line number": [
      186,
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask.test_SelectNodesByMaskIn2D": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "nest.topology.CreateLayer": {
     "line number": [
      39,
      58
     ]
    },
    "nest.topology.CreateMask": {
     "line number": [
      43,
      62
     ]
    },
    "nest.topology.SelectNodesByMask": {
     "line number": [
      47,
      64
     ]
    },
    "nest.topology.tests.test_selection_function_and_elliptical_mask.nest": {
     "line number": [
      54
     ]
    },
    "sorted": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask.test_SelectNodesByMaskIn3D": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "nest.topology.CreateLayer": {
     "line number": [
      74
     ]
    },
    "nest.topology.CreateMask": {
     "line number": [
      79
     ]
    },
    "nest.topology.SelectNodesByMask": {
     "line number": [
      83
     ]
    },
    "range": {
     "line number": [
      71,
      72,
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask.test_TiltedEllipsoidalMask": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": {
    "nest.topology.CreateLayer": {
     "line number": [
      234,
      254,
      273,
      291,
      309
     ]
    },
    "nest.topology.CreateMask": {
     "line number": [
      240,
      261,
      279,
      297,
      316
     ]
    },
    "nest.topology.SelectNodesByMask": {
     "line number": [
      244,
      265,
      283,
      301,
      320
     ]
    },
    "nest.topology.tests.test_selection_function_and_elliptical_mask.nest": {
     "line number": [
      248,
      271,
      289,
      307
     ]
    },
    "range": {
     "line number": [
      230,
      231,
      232,
      250,
      251,
      252
     ]
    },
    "sorted": {
     "line number": [
      267,
      285,
      303,
      322
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask.test_TiltedEllipsoidalMask3DWithAnchor": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": {
    "nest.topology.CreateLayer": {
     "line number": [
      332
     ]
    },
    "nest.topology.CreateMask": {
     "line number": [
      337,
      348
     ]
    },
    "nest.topology.SelectNodesByMask": {
     "line number": [
      341,
      352
     ]
    },
    "range": {
     "line number": [
      329,
      330,
      331
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask.test_TiltedEllipticalMask2DWithAnchor": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "nest.topology.CreateLayer": {
     "line number": [
      139
     ]
    },
    "nest.topology.CreateMask": {
     "line number": [
      144,
      154,
      165
     ]
    },
    "nest.topology.SelectNodesByMask": {
     "line number": [
      148,
      156,
      167
     ]
    },
    "sorted": {
     "line number": [
      157,
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.runner": {
  "data": {
   "lineno": 362
  },
  "type": "constant"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.suite": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": {
    "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask": {
     "line number": [
      358
     ]
    },
    "nest.topology.tests.test_selection_function_and_elliptical_mask.unittest": {
     "line number": [
      358
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.topo": {
  "data": {
   "shadows": "nest.topology"
  },
  "type": "import"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.topology.tests.test_spatial_kernels": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      767
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      52
     ]
    },
    "matplotlib.pyplot.figure": {
     "line number": [
      51
     ]
    },
    "matplotlib.pyplot.show": {
     "line number": [
      782
     ]
    },
    "nest.topology.tests.test_spatial_kernels.DEBUG_MODE": {
     "line number": [
      769
     ]
    },
    "nest.topology.tests.test_spatial_kernels.PLOTTING_POSSIBLE": {
     "line number": [
      515,
      772
     ]
    },
    "nest.topology.tests.test_spatial_kernels.PlottingSpatialTester": {
     "line number": [
      773
     ]
    },
    "nest.topology.tests.test_spatial_kernels.SEED": {
     "line number": [
      773
     ]
    },
    "nest.topology.tests.test_spatial_kernels.fig": {
     "line number": [
      52
     ]
    },
    "nest.topology.tests.test_spatial_kernels.runner": {
     "line number": [
      771
     ]
    },
    "nest.topology.tests.test_spatial_kernels.suite": {
     "line number": [
      771
     ]
    },
    "nest.topology.tests.test_spatial_kernels.test": {
     "line number": [
      775,
      777,
      779,
      780,
      781
     ]
    },
    "nest.topology.tests.test_spatial_kernels.unittest": {
     "line number": [
      770
     ]
    },
    "print": {
     "line number": [
      776,
      778
     ]
    }
   }
  },
  "type": "module"
 },
 "nest.topology.tests.test_spatial_kernels.Axes3D": {
  "data": {
   "shadows": "mpl_toolkits.mplot3d.Axes3D"
  },
  "type": "import"
 },
 "nest.topology.tests.test_spatial_kernels.DEBUG_MODE": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "nest.topology.tests.test_spatial_kernels.PLOTTING_POSSIBLE": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "nest.topology.tests.test_spatial_kernels.P_MIN": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "nest.topology.tests.test_spatial_kernels.PlottingSpatialTester": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": {
    "nest.topology.tests.test_spatial_kernels.SpatialTester": {
     "line number": [
      516
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.topology.tests.test_spatial_kernels.PlottingSpatialTester.__init__": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": {
    "nest.topology.tests.test_spatial_kernels.SpatialTester": {
     "line number": [
      521
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.PlottingSpatialTester.show_CDF": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": {
    "len": {
     "line number": [
      570,
      571
     ]
    },
    "matplotlib.pyplot.figure": {
     "line number": [
      565
     ]
    },
    "matplotlib.pyplot.legend": {
     "line number": [
      578
     ]
    },
    "matplotlib.pyplot.plot": {
     "line number": [
      568
     ]
    },
    "matplotlib.pyplot.step": {
     "line number": [
      572
     ]
    },
    "matplotlib.pyplot.xlabel": {
     "line number": [
      576
     ]
    },
    "matplotlib.pyplot.ylabel": {
     "line number": [
      577
     ]
    },
    "matplotlib.pyplot.ylim": {
     "line number": [
      574
     ]
    },
    "numpy.linspace": {
     "line number": [
      566
     ]
    },
    "range": {
     "line number": [
      571
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.PlottingSpatialTester.show_PDF": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": {
    "matplotlib.pyplot.figure": {
     "line number": [
      589
     ]
    },
    "matplotlib.pyplot.hist": {
     "line number": [
      595
     ]
    },
    "matplotlib.pyplot.legend": {
     "line number": [
      602
     ]
    },
    "matplotlib.pyplot.plot": {
     "line number": [
      593
     ]
    },
    "matplotlib.pyplot.xlabel": {
     "line number": [
      600
     ]
    },
    "matplotlib.pyplot.ylabel": {
     "line number": [
      601
     ]
    },
    "matplotlib.pyplot.ylim": {
     "line number": [
      598
     ]
    },
    "numpy.array": {
     "line number": [
      592
     ]
    },
    "numpy.linspace": {
     "line number": [
      590
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.PlottingSpatialTester.show_network": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": {
    "matplotlib.pyplot.figure": {
     "line number": [
      531
     ]
    },
    "matplotlib.pyplot.scatter": {
     "line number": [
      542,
      543
     ]
    },
    "matplotlib.pyplot.subplots_adjust": {
     "line number": [
      557
     ]
    },
    "matplotlib.pyplot.xlabel": {
     "line number": [
      551
     ]
    },
    "matplotlib.pyplot.xlim": {
     "line number": [
      555
     ]
    },
    "matplotlib.pyplot.xticks": {
     "line number": [
      553
     ]
    },
    "matplotlib.pyplot.ylabel": {
     "line number": [
      552
     ]
    },
    "matplotlib.pyplot.ylim": {
     "line number": [
      556
     ]
    },
    "matplotlib.pyplot.yticks": {
     "line number": [
      554
     ]
    },
    "max": {
     "line number": [
      528
     ]
    },
    "nest.topology.tests.test_spatial_kernels.fig": {
     "line number": [
      531,
      545
     ]
    },
    "round": {
     "line number": [
      528
     ]
    },
    "set": {
     "line number": [
      534,
      534
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SEED": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "object": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      97
     ]
    },
    "float": {
     "line number": [
      101
     ]
    },
    "nest.topology.tests.test_spatial_kernels.math": {
     "line number": [
      108,
      110,
      112,
      122,
      125,
      131,
      143,
      145,
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester._all_distances": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": {
    "nest.topology.Distance": {
     "line number": [
      241
     ]
    },
    "nest.topology.tests.test_spatial_kernels.nest": {
     "line number": [
      241
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester._build": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "list": {
     "line number": [
      207,
      223,
      225
     ]
    },
    "nest.topology.CreateLayer": {
     "line number": [
      211,
      212,
      229,
      230
     ]
    },
    "nest.topology.FindCenterElement": {
     "line number": [
      231
     ]
    },
    "nest.topology.tests.test_spatial_kernels.nest": {
     "line number": [
      213
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      205,
      206,
      219,
      220,
      222
     ]
    },
    "zip": {
     "line number": [
      207,
      223,
      225
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester._cdf": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": {
    "numpy.cumsum": {
     "line number": [
      460
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester._connect": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "nest.topology.ConnectLayers": {
     "line number": [
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester._create_distance_data": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "sorted": {
     "line number": [
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester._pdf": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": {
    "max": {
     "line number": [
      298,
      414,
      416,
      423,
      426,
      437
     ]
    },
    "min": {
     "line number": [
      298,
      414,
      416,
      423,
      426,
      437
     ]
    },
    "nest.topology.tests.test_spatial_kernels.math": {
     "line number": [
      294,
      295,
      296,
      297,
      301,
      305,
      307,
      308,
      309,
      310,
      311,
      313,
      314,
      315,
      317,
      318,
      319,
      320,
      322,
      323,
      324,
      326,
      328,
      330,
      331,
      333,
      334,
      335,
      337,
      338,
      339,
      340,
      347,
      349,
      351,
      353,
      354,
      356,
      358,
      359,
      361,
      362,
      363,
      365,
      366,
      367,
      369,
      370,
      371,
      373,
      374,
      375,
      376,
      378,
      379,
      380,
      382,
      383,
      384,
      385,
      387,
      388,
      389,
      391,
      392,
      393,
      394,
      396,
      397,
      399,
      400,
      402,
      403,
      404,
      406,
      407,
      408,
      409,
      414,
      417,
      417,
      424,
      425,
      427,
      428,
      429,
      430,
      431,
      431,
      433,
      434,
      434,
      436,
      438
     ]
    },
    "numpy.array": {
     "line number": [
      293
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester._positions": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": {
    "nest.topology.GetPosition": {
     "line number": [
      254
     ]
    },
    "nest.topology.tests.test_spatial_kernels.nest": {
     "line number": [
      254
     ]
    },
    "tuple": {
     "line number": [
      253
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester._reset": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "nest.topology.tests.test_spatial_kernels.nest": {
     "line number": [
      190,
      195
     ]
    },
    "numpy.random.randint": {
     "line number": [
      192
     ]
    },
    "numpy.random.seed": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester._roi_2d": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      269,
      269
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester._target_distances": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "nest.topology.Distance": {
     "line number": [
      248
     ]
    },
    "nest.topology.tests.test_spatial_kernels.nest": {
     "line number": [
      246
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester._target_positions": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": {
    "nest.topology.GetTargetPositions": {
     "line number": [
      260
     ]
    },
    "tuple": {
     "line number": [
      259
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester.ks_test": {
  "data": {
   "lineno": 466
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester.z_test": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      509
     ]
    },
    "len": {
     "line number": [
      498
     ]
    },
    "max": {
     "line number": [
      500
     ]
    },
    "min": {
     "line number": [
      500
     ]
    },
    "nest.topology.tests.test_spatial_kernels.math": {
     "line number": [
      508
     ]
    },
    "numpy.nan": {
     "line number": [
      506
     ]
    },
    "sum": {
     "line number": [
      502,
      503
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2D": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": {
    "nest.topology.tests.test_spatial_kernels.unittest": {
     "line number": [
      605
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2D.test_constant": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": {
    "nest.topology.tests.test_spatial_kernels.P_MIN": {
     "line number": [
      616,
      617
     ]
    },
    "nest.topology.tests.test_spatial_kernels.SEED": {
     "line number": [
      612
     ]
    },
    "nest.topology.tests.test_spatial_kernels.SpatialTester": {
     "line number": [
      612
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2D.test_exponential": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": {
    "nest.topology.tests.test_spatial_kernels.P_MIN": {
     "line number": [
      634,
      635
     ]
    },
    "nest.topology.tests.test_spatial_kernels.SEED": {
     "line number": [
      630
     ]
    },
    "nest.topology.tests.test_spatial_kernels.SpatialTester": {
     "line number": [
      630
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2D.test_gamma": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": {
    "nest.topology.tests.test_spatial_kernels.P_MIN": {
     "line number": [
      652,
      653
     ]
    },
    "nest.topology.tests.test_spatial_kernels.SEED": {
     "line number": [
      648
     ]
    },
    "nest.topology.tests.test_spatial_kernels.SpatialTester": {
     "line number": [
      648
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2D.test_gaussian": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": {
    "nest.topology.tests.test_spatial_kernels.P_MIN": {
     "line number": [
      643,
      644
     ]
    },
    "nest.topology.tests.test_spatial_kernels.SEED": {
     "line number": [
      639
     ]
    },
    "nest.topology.tests.test_spatial_kernels.SpatialTester": {
     "line number": [
      639
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2D.test_linear": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": {
    "nest.topology.tests.test_spatial_kernels.P_MIN": {
     "line number": [
      625,
      626
     ]
    },
    "nest.topology.tests.test_spatial_kernels.SEED": {
     "line number": [
      621
     ]
    },
    "nest.topology.tests.test_spatial_kernels.SpatialTester": {
     "line number": [
      621
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2DOBC": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": {
    "nest.topology.tests.test_spatial_kernels.unittest": {
     "line number": [
      656
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2DOBC.test_constant": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": {
    "nest.topology.tests.test_spatial_kernels.P_MIN": {
     "line number": [
      667,
      668
     ]
    },
    "nest.topology.tests.test_spatial_kernels.SEED": {
     "line number": [
      663
     ]
    },
    "nest.topology.tests.test_spatial_kernels.SpatialTester": {
     "line number": [
      663
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2DOBC.test_exponential": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": {
    "nest.topology.tests.test_spatial_kernels.P_MIN": {
     "line number": [
      685,
      686
     ]
    },
    "nest.topology.tests.test_spatial_kernels.SEED": {
     "line number": [
      681
     ]
    },
    "nest.topology.tests.test_spatial_kernels.SpatialTester": {
     "line number": [
      681
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2DOBC.test_gamma": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": {
    "nest.topology.tests.test_spatial_kernels.P_MIN": {
     "line number": [
      703,
      704
     ]
    },
    "nest.topology.tests.test_spatial_kernels.SEED": {
     "line number": [
      699
     ]
    },
    "nest.topology.tests.test_spatial_kernels.SpatialTester": {
     "line number": [
      699
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2DOBC.test_gaussian": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": {
    "nest.topology.tests.test_spatial_kernels.P_MIN": {
     "line number": [
      694,
      695
     ]
    },
    "nest.topology.tests.test_spatial_kernels.SEED": {
     "line number": [
      690
     ]
    },
    "nest.topology.tests.test_spatial_kernels.SpatialTester": {
     "line number": [
      690
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2DOBC.test_linear": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": {
    "nest.topology.tests.test_spatial_kernels.P_MIN": {
     "line number": [
      676,
      677
     ]
    },
    "nest.topology.tests.test_spatial_kernels.SEED": {
     "line number": [
      672
     ]
    },
    "nest.topology.tests.test_spatial_kernels.SpatialTester": {
     "line number": [
      672
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial3D": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": {
    "nest.topology.tests.test_spatial_kernels.unittest": {
     "line number": [
      707
     ]
    }
   }
  },
  "type": "class"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial3D.test_constant": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": {
    "nest.topology.tests.test_spatial_kernels.P_MIN": {
     "line number": [
      718,
      719
     ]
    },
    "nest.topology.tests.test_spatial_kernels.SEED": {
     "line number": [
      714
     ]
    },
    "nest.topology.tests.test_spatial_kernels.SpatialTester": {
     "line number": [
      714
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial3D.test_exponential": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": {
    "nest.topology.tests.test_spatial_kernels.P_MIN": {
     "line number": [
      736,
      737
     ]
    },
    "nest.topology.tests.test_spatial_kernels.SEED": {
     "line number": [
      732
     ]
    },
    "nest.topology.tests.test_spatial_kernels.SpatialTester": {
     "line number": [
      732
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial3D.test_gamma": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": {
    "nest.topology.tests.test_spatial_kernels.P_MIN": {
     "line number": [
      754,
      755
     ]
    },
    "nest.topology.tests.test_spatial_kernels.SEED": {
     "line number": [
      750
     ]
    },
    "nest.topology.tests.test_spatial_kernels.SpatialTester": {
     "line number": [
      750
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial3D.test_gaussian": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": {
    "nest.topology.tests.test_spatial_kernels.P_MIN": {
     "line number": [
      745,
      746
     ]
    },
    "nest.topology.tests.test_spatial_kernels.SEED": {
     "line number": [
      741
     ]
    },
    "nest.topology.tests.test_spatial_kernels.SpatialTester": {
     "line number": [
      741
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial3D.test_linear": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": {
    "nest.topology.tests.test_spatial_kernels.P_MIN": {
     "line number": [
      727,
      728
     ]
    },
    "nest.topology.tests.test_spatial_kernels.SEED": {
     "line number": [
      723
     ]
    },
    "nest.topology.tests.test_spatial_kernels.SpatialTester": {
     "line number": [
      723
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.fig": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "nest.topology.tests.test_spatial_kernels.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "nest.topology.tests.test_spatial_kernels.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.topology.tests.test_spatial_kernels.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.topology.tests.test_spatial_kernels.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "nest.topology.tests.test_spatial_kernels.rnd": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "nest.topology.tests.test_spatial_kernels.runner": {
  "data": {
   "lineno": 770
  },
  "type": "constant"
 },
 "nest.topology.tests.test_spatial_kernels.scipy.integrate": {
  "data": {
   "shadows": "scipy.integrate"
  },
  "type": "import"
 },
 "nest.topology.tests.test_spatial_kernels.scipy.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "nest.topology.tests.test_spatial_kernels.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nest.topology.tests.test_spatial_kernels.suite": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": {
    "nest.topology.tests.test_spatial_kernels.TestSpatial2D": {
     "line number": [
      760
     ]
    },
    "nest.topology.tests.test_spatial_kernels.TestSpatial2DOBC": {
     "line number": [
      761
     ]
    },
    "nest.topology.tests.test_spatial_kernels.TestSpatial3D": {
     "line number": [
      762
     ]
    },
    "nest.topology.tests.test_spatial_kernels.unittest": {
     "line number": [
      759,
      760,
      761,
      762
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.test": {
  "data": {
   "lineno": 773
  },
  "type": "constant"
 },
 "nest.topology.tests.test_spatial_kernels.topo": {
  "data": {
   "shadows": "nest.topology"
  },
  "type": "import"
 },
 "nest.topology.tests.test_spatial_kernels.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.topology.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nest.visualization": {
  "data": {},
  "type": "module"
 },
 "nest.visualization.__all__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "nest.visualization.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.visualization.plot_network": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "add_nodes": {
     "line number": [
      93
     ]
    },
    "enumerate": {
     "line number": [
      92
     ]
    },
    "len": {
     "line number": [
      60
     ]
    },
    "map": {
     "line number": [
      63
     ]
    },
    "nest.visualization.nest": {
     "line number": [
      61,
      68,
      98,
      98,
      123
     ]
    },
    "nest.visualization.pydot": {
     "line number": [
      77,
      114
     ]
    },
    "nest.visualization.types": {
     "line number": [
      89,
      89
     ]
    },
    "reduce": {
     "line number": [
      64
     ]
    },
    "str": {
     "line number": [
      93,
      114,
      114
     ]
    },
    "type": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.visualization.plot_network.add_nodes": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "get_name": {
     "line number": [
      86
     ]
    },
    "nest.visualization.pydot": {
     "line number": [
      84,
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.visualization.plot_network.get_name": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "nest.visualization.nest": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.visualization.pydot": {
  "data": {
   "shadows": "pydot"
  },
  "type": "import"
 },
 "nest.visualization.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "nest.voltage_trace": {
  "data": {},
  "type": "module"
 },
 "nest.voltage_trace.__all__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "nest.voltage_trace._from_memory": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      244,
      262
     ]
    },
    "float": {
     "line number": [
      249,
      250,
      266
     ]
    },
    "len": {
     "line number": [
      258,
      258
     ]
    },
    "nest.voltage_trace.array": {
     "line number": [
      246,
      247,
      264
     ]
    },
    "nest.voltage_trace.nest": {
     "line number": [
      235,
      253
     ]
    },
    "nest.voltage_trace.numpy": {
     "line number": [
      257,
      260
     ]
    },
    "range": {
     "line number": [
      260
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.voltage_trace.array": {
  "data": {
   "shadows": "array"
  },
  "type": "import"
 },
 "nest.voltage_trace.from_device": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      200
     ]
    },
    "len": {
     "line number": [
      152,
      164,
      179
     ]
    },
    "nest.voltage_trace._from_memory": {
     "line number": [
      177
     ]
    },
    "nest.voltage_trace.from_file": {
     "line number": [
      221
     ]
    },
    "nest.voltage_trace.nest": {
     "line number": [
      153,
      155,
      155,
      157,
      160,
      161,
      163,
      164,
      165,
      168,
      171,
      180,
      209,
      219,
      220,
      223
     ]
    },
    "nest.voltage_trace.numpy": {
     "line number": [
      188
     ]
    },
    "nest.voltage_trace.pylab": {
     "line number": [
      197,
      205,
      207,
      210,
      212,
      214,
      215
     ]
    },
    "print": {
     "line number": [
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.voltage_trace.from_file": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      116
     ]
    },
    "len": {
     "line number": [
      68
     ]
    },
    "nest.voltage_trace.nest": {
     "line number": [
      53
     ]
    },
    "nest.voltage_trace.numpy": {
     "line number": [
      57,
      59,
      59,
      61
     ]
    },
    "nest.voltage_trace.pylab": {
     "line number": [
      71,
      72,
      88,
      91,
      92,
      109,
      112,
      113,
      121,
      122,
      123
     ]
    },
    "print": {
     "line number": [
      69,
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "nest.voltage_trace.nest": {
  "data": {
   "shadows": "nest"
  },
  "type": "import"
 },
 "nest.voltage_trace.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nest.voltage_trace.pylab": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "nest.voltage_trace.show": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": {
    "nest.voltage_trace.pylab": {
     "line number": [
      278
     ]
    }
   }
  },
  "type": "function"
 }
}