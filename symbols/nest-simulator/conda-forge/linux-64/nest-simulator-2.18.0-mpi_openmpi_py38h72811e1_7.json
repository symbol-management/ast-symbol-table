{
 "ConnPlotter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "ConnPlotter.ConnPlotter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern": {
  "lineno": 565,
  "symbols_in_volume": [],
  "type": "class"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern._Block": {
  "lineno": 939,
  "symbols_in_volume": [],
  "type": "class"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern._Block.__init__": {
  "lineno": 963,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern._Block.addMargin": {
  "lineno": 1040,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern._Block.newElement": {
  "lineno": 995,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern._Block.newRow": {
  "lineno": 974,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern._Connection": {
  "lineno": 662,
  "symbols_in_volume": [],
  "type": "class"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern._Connection.__init__": {
  "lineno": 664,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern._Connection.kernel": {
  "lineno": 794,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern._Connection.kernval": {
  "lineno": 775,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern._Connection.keyval": {
  "lineno": 760,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern._Connection.mask": {
  "lineno": 787,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern._Connection.matches": {
  "lineno": 808,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern._Connection.weight": {
  "lineno": 801,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern._LayerProps": {
  "lineno": 603,
  "symbols_in_volume": [],
  "type": "class"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern._LayerProps.__init__": {
  "lineno": 608,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern._Patch": {
  "lineno": 827,
  "symbols_in_volume": [],
  "type": "class"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern._Patch.__init__": {
  "lineno": 841,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern._Patch._update_size": {
  "lineno": 859,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern._Patch.b_patches": {
  "lineno": 917,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern._Patch.l_patches": {
  "lineno": 887,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern._Patch.location": {
  "lineno": 928,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern._Patch.lr": {
  "lineno": 880,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern._Patch.r_patches": {
  "lineno": 907,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern._Patch.t_patches": {
  "lineno": 897,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern._Patch.tl": {
  "lineno": 873,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern._PlotKern": {
  "lineno": 638,
  "symbols_in_volume": [],
  "type": "class"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern._PlotKern.__init__": {
  "lineno": 643,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern._SynProps": {
  "lineno": 619,
  "symbols_in_volume": [],
  "type": "class"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern._SynProps.__init__": {
  "lineno": 624,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern.__init__": {
  "lineno": 1351,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern._configSynapses": {
  "lineno": 1289,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern._prepareAxes": {
  "lineno": 1052,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern._scaledBox": {
  "lineno": 1273,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern._scaledBoxNR": {
  "lineno": 1281,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern.plot": {
  "lineno": 1436,
  "symbols_in_volume": [
   "matplotlib.colorbar.ColorbarBase",
   "matplotlib.get_backend",
   "matplotlib.pyplot.close",
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.setp",
   "matplotlib.ticker.MaxNLocator",
   "numpy.array",
   "numpy.floor",
   "numpy.max",
   "numpy.min",
   "warnings.warn"
  ],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.ConnectionPattern.toLaTeX": {
  "lineno": 1866,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.PlotParams": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "class"
 },
 "ConnPlotter.ConnPlotter.PlotParams.Margins": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "class"
 },
 "ConnPlotter.ConnPlotter.PlotParams.Margins.__init__": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.PlotParams.Margins.bottom": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.PlotParams.Margins.colbar": {
  "lineno": 261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.PlotParams.Margins.left": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.PlotParams.Margins.right": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.PlotParams.Margins.top": {
  "lineno": 245,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.PlotParams.__init__": {
  "lineno": 265,
  "symbols_in_volume": [
   "matplotlib.font_manager.FontProperties"
  ],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.PlotParams.cbheight": {
  "lineno": 515,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.PlotParams.cboffset": {
  "lineno": 537,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.PlotParams.cbspace": {
  "lineno": 526,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.PlotParams.cbwidth": {
  "lineno": 504,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.PlotParams.layer_bg": {
  "lineno": 327,
  "symbols_in_volume": [
   "matplotlib.colors.colorConverter.to_rgb",
   "matplotlib.colors.is_color_like"
  ],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.PlotParams.layer_font": {
  "lineno": 355,
  "symbols_in_volume": [
   "matplotlib.font_manager.FontProperties"
  ],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.PlotParams.layer_orientation": {
  "lineno": 373,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.PlotParams.legend_location": {
  "lineno": 493,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.PlotParams.legend_tick_font": {
  "lineno": 442,
  "symbols_in_volume": [
   "matplotlib.font_manager.FontProperties"
  ],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.PlotParams.legend_tick_format": {
  "lineno": 481,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.PlotParams.legend_ticks": {
  "lineno": 470,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.PlotParams.legend_title_font": {
  "lineno": 456,
  "symbols_in_volume": [
   "matplotlib.font_manager.FontProperties"
  ],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.PlotParams.n_kern": {
  "lineno": 299,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.PlotParams.patch_size": {
  "lineno": 310,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.PlotParams.pop_font": {
  "lineno": 399,
  "symbols_in_volume": [
   "matplotlib.font_manager.FontProperties"
  ],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.PlotParams.pop_orientation": {
  "lineno": 417,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.PlotParams.reset": {
  "lineno": 288,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.PlotParams.z_conn": {
  "lineno": 551,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.PlotParams.z_layer": {
  "lineno": 541,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.PlotParams.z_pop": {
  "lineno": 546,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter.SynType": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "class"
 },
 "ConnPlotter.ConnPlotter.SynType.__init__": {
  "lineno": 185,
  "symbols_in_volume": [
   "matplotlib.colors.Colormap"
  ],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter._addKernels": {
  "lineno": 2121,
  "symbols_in_volume": [
   "numpy.logical_and",
   "numpy.ma.filled",
   "numpy.ma.masked_array"
  ],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter._evalkernel": {
  "lineno": 2010,
  "symbols_in_volume": [
   "numpy.ceil",
   "numpy.linspace",
   "numpy.logical_not",
   "numpy.ma.masked_array",
   "numpy.meshgrid"
  ],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter._flattened": {
  "lineno": 2153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter._kerneval": {
  "lineno": 2096,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.ones",
   "numpy.shape"
  ],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter._maskeval": {
  "lineno": 2068,
  "symbols_in_volume": [
   "numpy.logical_and"
  ],
  "type": "function"
 },
 "ConnPlotter.ConnPlotter._weighteval": {
  "lineno": 2044,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.colormaps": {
  "lineno": null,
  "symbols_in_volume": [
   "matplotlib.colors.LinearSegmentedColormap",
   "numpy.array"
  ],
  "type": "module"
 },
 "ConnPlotter.colormaps.ZeroCenterNorm": {
  "lineno": 57,
  "symbols_in_volume": [
   "matplotlib.colors.Normalize"
  ],
  "type": "class"
 },
 "ConnPlotter.colormaps.ZeroCenterNorm.__call__": {
  "lineno": 68,
  "symbols_in_volume": [
   "matplotlib.cbook.iterable",
   "numpy.float",
   "numpy.ma.array",
   "numpy.ma.asarray",
   "numpy.ones",
   "numpy.shape"
  ],
  "type": "function"
 },
 "ConnPlotter.colormaps.ZeroCenterNorm.inverse": {
  "lineno": 105,
  "symbols_in_volume": [
   "matplotlib.cbook.iterable",
   "numpy.asarray",
   "numpy.shape",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "ConnPlotter.colormaps.make_colormap": {
  "lineno": 133,
  "symbols_in_volume": [
   "matplotlib.colors.LinearSegmentedColormap",
   "matplotlib.colors.colorConverter.to_rgb"
  ],
  "type": "function"
 },
 "ConnPlotter.examples": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "ConnPlotter.examples.complex": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "ConnPlotter.examples.complex.complex": {
  "lineno": 29,
  "symbols_in_volume": [
   "nest.GetDefaults"
  ],
  "type": "function"
 },
 "ConnPlotter.examples.complex.complex.modCopy": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.examples.connplotter_tutorial": {
  "lineno": null,
  "symbols_in_volume": [
   "ConnPlotter.ConnectionPattern",
   "ConnPlotter.SynType",
   "ConnPlotter.colormaps.bad_color",
   "ConnPlotter.examples.complex",
   "ConnPlotter.examples.non_dale",
   "ConnPlotter.examples.simple",
   "ConnPlotter.plotParams.layer_bg",
   "ConnPlotter.plotParams.layer_font",
   "ConnPlotter.plotParams.layer_orientation",
   "ConnPlotter.plotParams.legend_tick_font",
   "ConnPlotter.plotParams.legend_tick_format",
   "ConnPlotter.plotParams.legend_ticks",
   "ConnPlotter.plotParams.legend_title_font",
   "ConnPlotter.plotParams.margins.bottom",
   "ConnPlotter.plotParams.margins.left",
   "ConnPlotter.plotParams.margins.right",
   "ConnPlotter.plotParams.margins.top",
   "ConnPlotter.plotParams.n_kern",
   "ConnPlotter.plotParams.patch_size",
   "ConnPlotter.plotParams.pop_font",
   "ConnPlotter.plotParams.pop_orientation",
   "matplotlib.font_manager.FontProperties",
   "matplotlib.use",
   "nest.CopyModel",
   "nest.GetConnections",
   "nest.GetStatus",
   "nest.Simulate",
   "nest.topology.GetElement",
   "nest.topology.GetPosition",
   "pylab.Circle",
   "pylab.Rectangle",
   "pylab.array",
   "pylab.clf",
   "pylab.cm.hsv",
   "pylab.cm.hsv.set_bad",
   "pylab.gca",
   "pylab.scatter",
   "pylab.show",
   "pylab.subplot",
   "warnings.simplefilter"
  ],
  "type": "module"
 },
 "ConnPlotter.examples.connplotter_tutorial.nop": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.examples.connplotter_tutorial.showTextTable": {
  "lineno": 81,
  "symbols_in_volume": [
   "os.path.exists",
   "os.remove",
   "os.rename",
   "subprocess.STDOUT",
   "subprocess.call"
  ],
  "type": "function"
 },
 "ConnPlotter.examples.non_dale": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "ConnPlotter.examples.non_dale.non_dale": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.examples.non_dale.non_dale.modCopy": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.examples.simple": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "ConnPlotter.examples.simple.simple": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.examples.simple.simple.modCopy": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.tcd_nest": {
  "lineno": null,
  "symbols_in_volume": [
   "ht_def_new_sq.hill_tononi",
   "ht_params.Params",
   "matplotlib.pyplot.legend",
   "matplotlib.pyplot.plot",
   "matplotlib.pyplot.show",
   "numpy.array",
   "numpy.linspace",
   "sys.path.append"
  ],
  "type": "module"
 },
 "ConnPlotter.tcd_nest.TCD": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "class"
 },
 "ConnPlotter.tcd_nest.TCD._TcdBeta": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "class"
 },
 "ConnPlotter.tcd_nest.TCD._TcdBeta.__call__": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.tcd_nest.TCD._TcdBeta.__init__": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.tcd_nest.TCD._TcdBeta.__str__": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.tcd_nest.TCD._TcdNMDA": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "class"
 },
 "ConnPlotter.tcd_nest.TCD._TcdNMDA.__call__": {
  "lineno": 175,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "ConnPlotter.tcd_nest.TCD._TcdNMDA.__init__": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.tcd_nest.TCD._TcdNMDA.__str__": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.tcd_nest.TCD.__call__": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ConnPlotter.tcd_nest.TCD.__init__": {
  "lineno": 64,
  "symbols_in_volume": [
   "nest.CopyModel",
   "nest.GetDefaults",
   "nest.ResetKernel"
  ],
  "type": "function"
 },
 "nest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.hl_api": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.import_libs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.import_libs.import_libs": {
  "lineno": 33,
  "symbols_in_volume": [
   "ast.ImportFrom",
   "ast.Module",
   "ast.alias",
   "ast.fix_missing_locations",
   "os.listdir",
   "os.path.dirname",
   "os.path.join",
   "sys.version_info"
  ],
  "type": "function"
 },
 "nest.lib": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.lib.hl_api_connections": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.lib.hl_api_connections.CGConnect": {
  "lineno": 452,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_connections.CGParse": {
  "lineno": 506,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_connections.CGSelectImplementation": {
  "lineno": 535,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_connections.Connect": {
  "lineno": 110,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.generic",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "nest.lib.hl_api_connections.DataConnect": {
  "lineno": 365,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_connections.Disconnect": {
  "lineno": 589,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_connections.DisconnectOneToOne": {
  "lineno": 565,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_connections.GetConnections": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_helper": {
  "lineno": null,
  "symbols_in_volume": [
   "warnings.formatwarning"
  ],
  "type": "module"
 },
 "nest.lib.hl_api_helper.SuppressedDeprecationWarning": {
  "lineno": 629,
  "symbols_in_volume": [],
  "type": "class"
 },
 "nest.lib.hl_api_helper.SuppressedDeprecationWarning.__enter__": {
  "lineno": 652,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_helper.SuppressedDeprecationWarning.__exit__": {
  "lineno": 662,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_helper.SuppressedDeprecationWarning.__init__": {
  "lineno": 639,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_helper.__check_nb": {
  "lineno": 336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_helper.__is_executable": {
  "lineno": 430,
  "symbols_in_volume": [
   "os.X_OK",
   "os.access",
   "os.path.isfile",
   "os.path.join"
  ],
  "type": "function"
 },
 "nest.lib.hl_api_helper.__show_help_in_modal_window": {
  "lineno": 344,
  "symbols_in_volume": [
   "IPython.display.HTML",
   "IPython.display.Javascript",
   "IPython.display.display",
   "json.dumps",
   "string.Template"
  ],
  "type": "function"
 },
 "nest.lib.hl_api_helper.broadcast": {
  "lineno": 299,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_helper.deprecated": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_helper.deprecated.deprecated_decorator": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_helper.deprecated.deprecated_decorator.new_func": {
  "lineno": 154,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "nest.lib.hl_api_helper.format_Warning": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_helper.get_help_filepath": {
  "lineno": 379,
  "symbols_in_volume": [
   "os.path.join",
   "os.walk"
  ],
  "type": "function"
 },
 "nest.lib.hl_api_helper.get_unistring_type": {
  "lineno": 163,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "function"
 },
 "nest.lib.hl_api_helper.get_verbosity": {
  "lineno": 510,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_helper.get_wrapped_text": {
  "lineno": 86,
  "symbols_in_volume": [
   "textwrap.fill"
  ],
  "type": "function"
 },
 "nest.lib.hl_api_helper.is_coercible_to_sli_array": {
  "lineno": 234,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "function"
 },
 "nest.lib.hl_api_helper.is_iterable": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_helper.is_literal": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_helper.is_sequence_of_connections": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_helper.is_sequence_of_gids": {
  "lineno": 281,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_helper.is_string": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_helper.load_help": {
  "lineno": 407,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_helper.model_deprecation_warning": {
  "lineno": 556,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_helper.serializable": {
  "lineno": 579,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "nest.lib.hl_api_helper.set_verbosity": {
  "lineno": 533,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_helper.show_deprecation_warning": {
  "lineno": 106,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "nest.lib.hl_api_helper.show_help_with_pager": {
  "lineno": 437,
  "symbols_in_volume": [
   "os.environ",
   "os.environ.split",
   "os.pathsep",
   "subprocess.CalledProcessError",
   "subprocess.check_call",
   "sys.version_info"
  ],
  "type": "function"
 },
 "nest.lib.hl_api_helper.to_json": {
  "lineno": 611,
  "symbols_in_volume": [
   "json.dumps"
  ],
  "type": "function"
 },
 "nest.lib.hl_api_info": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.lib.hl_api_info.GetStatus": {
  "lineno": 272,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_info.SetStatus": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_info.authors": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_info.get_argv": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_info.help": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_info.helpdesk": {
  "lineno": 82,
  "symbols_in_volume": [
   "os.environ",
   "os.path.join",
   "os.startfile",
   "sys.platform",
   "sys.version_info",
   "webbrowser.get",
   "webbrowser.open_new"
  ],
  "type": "function"
 },
 "nest.lib.hl_api_info.message": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_info.sysinfo": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_info.version": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_models": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.lib.hl_api_models.ConnectionRules": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_models.CopyModel": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_models.GetDefaults": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_models.Models": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_models.SetDefaults": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_nodes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.lib.hl_api_nodes.Create": {
  "lineno": 39,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "nest.lib.hl_api_nodes.GetLID": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_parallel_computing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.lib.hl_api_parallel_computing.NumProcesses": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_parallel_computing.Rank": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_parallel_computing.SetAcceptableLatency": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_parallel_computing.SetMaxBuffered": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_parallel_computing.SyncProcesses": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_simulation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.lib.hl_api_simulation.Cleanup": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_simulation.DisableStructuralPlasticity": {
  "lineno": 388,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_simulation.EnableStructuralPlasticity": {
  "lineno": 374,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_simulation.GetKernelStatus": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_simulation.GetStructuralPlasticityStatus": {
  "lineno": 345,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_simulation.Install": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_simulation.Prepare": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_simulation.ResetKernel": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_simulation.ResetNetwork": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_simulation.Run": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_simulation.RunManager": {
  "lineno": 133,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "nest.lib.hl_api_simulation.SetKernelStatus": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_simulation.SetStructuralPlasticityStatus": {
  "lineno": 325,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_simulation.Simulate": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_subnets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.lib.hl_api_subnets.BeginSubnet": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_subnets.ChangeSubnet": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_subnets.CurrentSubnet": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_subnets.EndSubnet": {
  "lineno": 301,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_subnets.GetChildren": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_subnets.GetLeaves": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_subnets.GetNetwork": {
  "lineno": 245,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_subnets.GetNodes": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_subnets.LayoutNetwork": {
  "lineno": 324,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_subnets.PrintNetwork": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.lib.hl_api_subnets.PrintNodes": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.ll_api": {
  "lineno": null,
  "symbols_in_volume": [
   "DLFCN.RTLD_GLOBAL",
   "DLFCN.RTLD_NOW",
   "ctypes.RTLD_GLOBAL",
   "ctypes.RTLD_NOW",
   "dl.RTLD_GLOBAL",
   "dl.RTLD_NOW",
   "os.RTLD_GLOBAL",
   "os.RTLD_NOW",
   "os.environ",
   "sys.argv",
   "sys.platform",
   "sys.setdlopenflags",
   "sys.version"
  ],
  "type": "module"
 },
 "nest.ll_api.catching_sli_run": {
  "lineno": 97,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "function"
 },
 "nest.ll_api.catching_sli_run.decode": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.ll_api.catching_sli_run.encode": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.ll_api.check_stack": {
  "lineno": 262,
  "symbols_in_volume": [
   "inspect.getmembers",
   "inspect.isclass",
   "inspect.isfunction",
   "inspect.ismethod"
  ],
  "type": "function"
 },
 "nest.ll_api.get_debug": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.ll_api.init": {
  "lineno": 297,
  "symbols_in_volume": [
   "keyword.kwlist",
   "os.path.dirname"
  ],
  "type": "function"
 },
 "nest.ll_api.set_debug": {
  "lineno": 207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.ll_api.sli_func": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.ll_api.stack_checker": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.ll_api.stack_checker.stack_checker_func": {
  "lineno": 243,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "nest.raster_plot": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.raster_plot._from_memory": {
  "lineno": 222,
  "symbols_in_volume": [
   "nest.GetStatus"
  ],
  "type": "function"
 },
 "nest.raster_plot._histogram": {
  "lineno": 312,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.concatenate",
   "numpy.iterable",
   "numpy.linspace",
   "numpy.sort"
  ],
  "type": "function"
 },
 "nest.raster_plot._make_plot": {
  "lineno": 227,
  "symbols_in_volume": [
   "numpy.amax",
   "numpy.amin",
   "numpy.arange",
   "numpy.linspace",
   "numpy.unique",
   "pylab.axes",
   "pylab.bar",
   "pylab.draw",
   "pylab.figure",
   "pylab.plot",
   "pylab.title",
   "pylab.xlabel",
   "pylab.xlim",
   "pylab.xticks",
   "pylab.ylabel",
   "pylab.yticks"
  ],
  "type": "function"
 },
 "nest.raster_plot.extract_events": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "nest.raster_plot.from_data": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.raster_plot.from_device": {
  "lineno": 171,
  "symbols_in_volume": [
   "nest.GetDefaults",
   "nest.GetStatus",
   "nest.hl_api.GetLID",
   "nest.kernel.NESTError"
  ],
  "type": "function"
 },
 "nest.raster_plot.from_file": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.raster_plot.from_file_numpy": {
  "lineno": 157,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.loadtxt"
  ],
  "type": "function"
 },
 "nest.raster_plot.from_file_pandas": {
  "lineno": 139,
  "symbols_in_volume": [
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "nest.test": {
  "lineno": 33,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.compatibility": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy",
   "numpy.fill_diagonal",
   "unittest",
   "unittest.TestCase",
   "unittest.TestCase.assertGreater",
   "unittest.TestCase.assertIsInstance",
   "unittest.TestCase.assertRaisesRegex",
   "unittest.TestCase.assertRaisesRegexp",
   "unittest.TestCase.assertTrue",
   "unittest.skipIf"
  ],
  "type": "module"
 },
 "nest.tests.compatibility._skipIf": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.compatibility._skipIf.decorator": {
  "lineno": 32,
  "symbols_in_volume": [
   "inspect.isclass",
   "inspect.isfunction",
   "unittest.TestCase"
  ],
  "type": "function"
 },
 "nest.tests.compatibility._skipIf.decorator.ret_none": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.compatibility.fill_diagonal": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "nest.tests.test_aeif_lsodar": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.defaultdict",
   "nest.ll_api.sli_func",
   "os.path.abspath",
   "os.path.dirname"
  ],
  "type": "module"
 },
 "nest.tests.test_aeif_lsodar.AEIFTestCase": {
  "lineno": 198,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_aeif_lsodar.AEIFTestCase.assert_pass_tolerance": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_aeif_lsodar.AEIFTestCase.compute_difference": {
  "lineno": 216,
  "symbols_in_volume": [
   "nest.GetStatus",
   "numpy.abs",
   "numpy.any",
   "numpy.average",
   "numpy.isclose",
   "numpy.where"
  ],
  "type": "function"
 },
 "nest.tests.test_aeif_lsodar.AEIFTestCase.setUp": {
  "lineno": 203,
  "symbols_in_volume": [
   "nest.GetKernelStatus",
   "nest.ResetKernel",
   "nest.SetKernelStatus",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "nest.tests.test_aeif_lsodar.AEIFTestCase.test_closeness_nest_lsodar": {
  "lineno": 267,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.GetStatus",
   "nest.SetStatus",
   "nest.Simulate",
   "numpy.loadtxt",
   "os.path.join",
   "scipy.interpolate.interp1d",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "nest.tests.test_aeif_lsodar.AEIFTestCase.test_iaf_dc_input": {
  "lineno": 350,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.GetStatus",
   "nest.SetStatus",
   "nest.Simulate",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "nest.tests.test_aeif_lsodar.AEIFTestCase.test_iaf_spike_input": {
  "lineno": 298,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.GetStatus",
   "nest.SetStatus",
   "nest.Simulate",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "nest.tests.test_aeif_lsodar.run": {
  "lineno": 403,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_aeif_lsodar.suite": {
  "lineno": 398,
  "symbols_in_volume": [
   "unittest.makeSuite",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "nest.tests.test_all": {
  "lineno": null,
  "symbols_in_volume": [
   "nest.ll_api.get_debug",
   "nest.ll_api.set_debug",
   "unittest.TextTestRunner"
  ],
  "type": "module"
 },
 "nest.tests.test_all.suite": {
  "lineno": 78,
  "symbols_in_volume": [
   "unittest.TestSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_clopath_synapse": {
  "lineno": null,
  "symbols_in_volume": [
   "nest.ll_api.sli_func"
  ],
  "type": "module"
 },
 "nest.tests.test_clopath_synapse.ClopathSynapseTestCase": {
  "lineno": 33,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "nest.tests.test_clopath_synapse.ClopathSynapseTestCase.test_ConnectNeuronsWithClopathSynapse": {
  "lineno": 38,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.Models",
   "nest.ResetKernel",
   "nest.kernel.NESTError",
   "nest.set_verbosity"
  ],
  "type": "function"
 },
 "nest.tests.test_clopath_synapse.ClopathSynapseTestCase.test_SynapseDepressionFacilitation": {
  "lineno": 73,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.CopyModel",
   "nest.Create",
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.SetKernelStatus",
   "nest.Simulate",
   "nest.set_verbosity",
   "numpy.allclose",
   "numpy.array"
  ],
  "type": "function"
 },
 "nest.tests.test_clopath_synapse.ClopathSynapseTestCase.test_SynapseFunctionWithAeifModel": {
  "lineno": 192,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.Simulate",
   "nest.set_verbosity",
   "numpy.allclose",
   "numpy.isclose",
   "numpy.where"
  ],
  "type": "function"
 },
 "nest.tests.test_clopath_synapse.run": {
  "lineno": 245,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_clopath_synapse.suite": {
  "lineno": 240,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_all_patterns": {
  "lineno": null,
  "symbols_in_volume": [
   "nest.ll_api.sli_func",
   "unittest.TextTestRunner"
  ],
  "type": "module"
 },
 "nest.tests.test_connect_all_patterns.TestConnectAllPatterns": {
  "lineno": 30,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_connect_all_patterns.TestConnectAllPatterns.testWithMPI": {
  "lineno": 32,
  "symbols_in_volume": [
   "nest.ll_api.sli_func",
   "os.path.dirname",
   "os.path.join",
   "os.path.realpath",
   "subprocess.PIPE",
   "subprocess.Popen",
   "unittest.SkipTest",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_all_patterns.suite": {
  "lineno": 63,
  "symbols_in_volume": [
   "unittest.TestLoader"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_all_to_all": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_connect_all_to_all.TestAllToAll": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "nest.tests.test_connect_all_to_all.TestAllToAll.testConnectivity": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_all_to_all.TestAllToAll.testInputArray": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_all_to_all.TestAllToAll.testInputArrayRPort": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_all_to_all.TestAllToAll.testInputArrayToStdpSynapse": {
  "lineno": 104,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_all_to_all.TestAllToAll.testInputArrayWithoutAutapses": {
  "lineno": 73,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.fill_diagonal"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_all_to_all.TestAllToAll.testRPortDistribution": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array_equal"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_all_to_all.run": {
  "lineno": 149,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_all_to_all.suite": {
  "lineno": 144,
  "symbols_in_volume": [
   "unittest.TestLoader"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_array_fixed_indegree": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_connect_array_fixed_indegree.ConnectArrayFixedIndegreeTestCase": {
  "lineno": 32,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_connect_array_fixed_indegree.ConnectArrayFixedIndegreeTestCase.test_Connect_Array_Fixed_Indegree": {
  "lineno": 36,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.GetConnections",
   "nest.GetStatus",
   "nest.ResetKernel"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_array_fixed_indegree.run": {
  "lineno": 93,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_array_fixed_indegree.suite": {
  "lineno": 87,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_array_fixed_outdegree": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_connect_array_fixed_outdegree.ConnectArrayFixedOutdegreeTestCase": {
  "lineno": 32,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_connect_array_fixed_outdegree.ConnectArrayFixedOutdegreeTestCase.test_Connect_Array_Fixed_Outdegree": {
  "lineno": 36,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.GetConnections",
   "nest.GetStatus",
   "nest.ResetKernel"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_array_fixed_outdegree.run": {
  "lineno": 93,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_array_fixed_outdegree.suite": {
  "lineno": 87,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_distributions": {
  "lineno": null,
  "symbols_in_volume": [
   "nest.ll_api.sli_func",
   "unittest.TextTestRunner"
  ],
  "type": "module"
 },
 "nest.tests.test_connect_distributions.TestDists": {
  "lineno": 29,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_connect_distributions.TestDists.setUp": {
  "lineno": 43,
  "symbols_in_volume": [
   "nest.ResetKernel",
   "nest.SetKernelStatus",
   "nest.ll_api.spp",
   "nest.ll_api.sr"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.setUpNetwork": {
  "lineno": 57,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testBinomialClippedDist": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testBinomialDist": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testExponentialClippedDist": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testExponentialDist": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testGammaClippedDist": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testGammaDist": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testGslBinomialDist": {
  "lineno": 119,
  "symbols_in_volume": [
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testLognormalClippedDist": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testLognormalDist": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testNormalClippedDist": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testNormalDist": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testPoissonClippedDist": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testPoissonDist": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testUniformDist": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_distributions.TestDists.testUniformIntDist": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_distributions.suite": {
  "lineno": 264,
  "symbols_in_volume": [
   "unittest.TestLoader"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_fixed_indegree": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_connect_fixed_indegree.TestFixedInDegree": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "nest.tests.test_connect_fixed_indegree.TestFixedInDegree.testAutapsesFalse": {
  "lineno": 111,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_fixed_indegree.TestFixedInDegree.testAutapsesTrue": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.ones"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_fixed_indegree.TestFixedInDegree.testErrorMessages": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_fixed_indegree.TestFixedInDegree.testInDegree": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_fixed_indegree.TestFixedInDegree.testMultapsesFalse": {
  "lineno": 138,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_fixed_indegree.TestFixedInDegree.testMultapsesTrue": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_fixed_indegree.TestFixedInDegree.testStatistics": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_fixed_indegree.run": {
  "lineno": 159,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_fixed_indegree.suite": {
  "lineno": 154,
  "symbols_in_volume": [
   "unittest.TestLoader"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_fixed_outdegree": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree.testAutapsesFalse": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree.testAutapsesTrue": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.ones"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree.testErrorMessages": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree.testMultapsesFalse": {
  "lineno": 136,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree.testMultapsesTrue": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree.testOutDegree": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree.testStatistics": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_fixed_outdegree.run": {
  "lineno": 157,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_fixed_outdegree.suite": {
  "lineno": 152,
  "symbols_in_volume": [
   "unittest.TestLoader"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_fixed_total_number": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber.testAutapsesFalse": {
  "lineno": 110,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber.testAutapsesTrue": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.sum"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber.testErrorMessages": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber.testStatistics": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber.testTotalNumberOfConnections": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_fixed_total_number.run": {
  "lineno": 129,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_fixed_total_number.suite": {
  "lineno": 124,
  "symbols_in_volume": [
   "unittest.TestLoader"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_helpers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_connect_helpers.adaptive_check": {
  "lineno": 380,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_helpers.all_equal": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_helpers.check_ks": {
  "lineno": 466,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.inf"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_helpers.check_synapse": {
  "lineno": 140,
  "symbols_in_volume": [
   "nest.GetConnections",
   "nest.GetStatus"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_helpers.chi_squared_check": {
  "lineno": 302,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_helpers.counter": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_helpers.gather_data": {
  "lineno": 34,
  "symbols_in_volume": [
   "mpi4py.MPI.COMM_WORLD.Get_rank",
   "mpi4py.MPI.COMM_WORLD.gather"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_helpers.get_clipped_cdf": {
  "lineno": 406,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_helpers.get_clipped_cdf.clipped_cdf": {
  "lineno": 408,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_helpers.get_connectivity_matrix": {
  "lineno": 92,
  "symbols_in_volume": [
   "nest.GetConnections",
   "numpy.asarray",
   "numpy.where",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_helpers.get_degrees": {
  "lineno": 176,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_helpers.get_expected_degrees_bernoulli": {
  "lineno": 208,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_helpers.get_expected_degrees_fixedDegrees": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_helpers.get_expected_degrees_totalNumber": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_helpers.get_expected_freqs": {
  "lineno": 442,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.sum",
   "numpy.where"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_helpers.get_weighted_connectivity_matrix": {
  "lineno": 115,
  "symbols_in_volume": [
   "nest.GetConnections",
   "nest.GetStatus",
   "numpy.asarray",
   "numpy.where",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_helpers.is_array": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.generic",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_helpers.mpi_assert": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.generic",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_helpers.mpi_barrier": {
  "lineno": 64,
  "symbols_in_volume": [
   "mpi4py.MPI.COMM_WORLD.Barrier"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_helpers.reset_seed": {
  "lineno": 283,
  "symbols_in_volume": [
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.SetKernelStatus"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_helpers.two_level_check": {
  "lineno": 345,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_one_to_one": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_connect_one_to_one.TestOneToOne": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "class"
 },
 "nest.tests.test_connect_one_to_one.TestOneToOne.testConnectivity": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.identity",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_one_to_one.TestOneToOne.testInputArray": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.diag"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_one_to_one.TestOneToOne.testInputArrayRPort": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.diag"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_one_to_one.TestOneToOne.testInputArrayToStdpSynapse": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.diag"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_one_to_one.TestOneToOne.testSymmetricFlag": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.identity",
   "numpy.transpose",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_one_to_one.run": {
  "lineno": 106,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_one_to_one.suite": {
  "lineno": 101,
  "symbols_in_volume": [
   "unittest.TestLoader"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_pairwise_bernoulli": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_connect_pairwise_bernoulli.TestPairwiseBernoulli": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "nest.tests.test_connect_pairwise_bernoulli.TestPairwiseBernoulli.testAutapsesFalse": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_pairwise_bernoulli.TestPairwiseBernoulli.testAutapsesTrue": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.ones"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_pairwise_bernoulli.TestPairwiseBernoulli.testStatistics": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_pairwise_bernoulli.run": {
  "lineno": 99,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_pairwise_bernoulli.suite": {
  "lineno": 94,
  "symbols_in_volume": [
   "unittest.TestLoader"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_parameters": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "module"
 },
 "nest.tests.test_connect_parameters.TestParams": {
  "lineno": 33,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_connect_parameters.TestParams.setUp": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.setUpNetwork": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.setUpNetworkOnePop": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testAutapsesFalse": {
  "lineno": 145,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testAutapsesTrue": {
  "lineno": 134,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.ones"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testDefaultParams": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testDelayAllSynapses": {
  "lineno": 267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testDelaySetting": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testHtSynapse": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testQuantalStpSynapse": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testRPortAllSynapses": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testRPortSetting": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testStdpDopamineSynapse": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testStdpFacetshwSynapseHom": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testStdpPlSynapseHom": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testStdpSynapse": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testStdpSynapseHom": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testSynapseSetting": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testTsodyks2Synapse": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testTsodyksSynapse": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testWeightAllSynapses": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_parameters.TestParams.testWeightSetting": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_parameters.suite": {
  "lineno": 288,
  "symbols_in_volume": [
   "unittest.TestLoader"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli.testAutapsesFalse": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli.testAutapsesTrue": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli.testMakeSymmetric": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli.testMultapses": {
  "lineno": 89,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli.testStatistics": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli.run": {
  "lineno": 147,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_connect_symmetric_pairwise_bernoulli.suite": {
  "lineno": 141,
  "symbols_in_volume": [
   "unittest.TestLoader"
  ],
  "type": "function"
 },
 "nest.tests.test_create": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_create.CreateTestCase": {
  "lineno": 31,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_create.CreateTestCase.test_CopyModel": {
  "lineno": 82,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.CopyModel",
   "nest.Create",
   "nest.GetDefaults",
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.kernel.NESTError"
  ],
  "type": "function"
 },
 "nest.tests.test_create.CreateTestCase.test_ModelCreate": {
  "lineno": 35,
  "symbols_in_volume": [
   "nest.Create",
   "nest.Models",
   "nest.ResetKernel"
  ],
  "type": "function"
 },
 "nest.tests.test_create.CreateTestCase.test_ModelCreateN": {
  "lineno": 44,
  "symbols_in_volume": [
   "nest.Create",
   "nest.Models",
   "nest.ResetKernel"
  ],
  "type": "function"
 },
 "nest.tests.test_create.CreateTestCase.test_ModelCreateNdict": {
  "lineno": 54,
  "symbols_in_volume": [
   "nest.Create",
   "nest.GetStatus",
   "nest.ResetKernel",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "nest.tests.test_create.CreateTestCase.test_ModelDicts": {
  "lineno": 71,
  "symbols_in_volume": [
   "nest.Create",
   "nest.GetStatus",
   "nest.ResetKernel"
  ],
  "type": "function"
 },
 "nest.tests.test_create.run": {
  "lineno": 110,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_create.suite": {
  "lineno": 105,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_csa": {
  "lineno": null,
  "symbols_in_volume": [
   "nest.ll_api.sli_pop",
   "nest.ll_api.sli_run"
  ],
  "type": "module"
 },
 "nest.tests.test_csa.CSATestCase": {
  "lineno": 47,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "nest.tests.test_csa.CSATestCase.test_CSA_OneToOne_intvectors": {
  "lineno": 85,
  "symbols_in_volume": [
   "csa.cset",
   "csa.oneToOne",
   "nest.CGConnect",
   "nest.Create",
   "nest.GetConnections",
   "nest.GetStatus",
   "nest.ResetKernel",
   "numpy.array",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "nest.tests.test_csa.CSATestCase.test_CSA_OneToOne_params": {
  "lineno": 115,
  "symbols_in_volume": [
   "csa.cset",
   "csa.oneToOne",
   "nest.CGConnect",
   "nest.Create",
   "nest.GetConnections",
   "nest.GetStatus",
   "nest.ResetKernel"
  ],
  "type": "function"
 },
 "nest.tests.test_csa.CSATestCase.test_CSA_OneToOne_synmodel": {
  "lineno": 148,
  "symbols_in_volume": [
   "csa.cset",
   "csa.oneToOne",
   "nest.CGConnect",
   "nest.Create",
   "nest.GetConnections",
   "nest.GetStatus",
   "nest.ResetKernel"
  ],
  "type": "function"
 },
 "nest.tests.test_csa.CSATestCase.test_CSA_OneToOne_tuples": {
  "lineno": 56,
  "symbols_in_volume": [
   "csa.cset",
   "csa.oneToOne",
   "nest.CGConnect",
   "nest.Create",
   "nest.GetConnections",
   "nest.GetStatus",
   "nest.ResetKernel"
  ],
  "type": "function"
 },
 "nest.tests.test_csa.CSATestCase.test_CSA_error_unknown_nodes": {
  "lineno": 177,
  "symbols_in_volume": [
   "csa.cset",
   "csa.oneToOne",
   "nest.CGConnect",
   "nest.ResetKernel",
   "nest.kernel.NESTError"
  ],
  "type": "function"
 },
 "nest.tests.test_csa.CSATestCase.test_CSA_error_unknown_synapse": {
  "lineno": 192,
  "symbols_in_volume": [
   "csa.cset",
   "csa.oneToOne",
   "nest.CGConnect",
   "nest.Create",
   "nest.ResetKernel",
   "nest.kernel.NESTError"
  ],
  "type": "function"
 },
 "nest.tests.test_csa.run": {
  "lineno": 218,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_csa.suite": {
  "lineno": 212,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_current_recording_generators": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_current_recording_generators.CurrentRecordingGeneratorTestCase": {
  "lineno": 31,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_current_recording_generators.CurrentRecordingGeneratorTestCase.setUp": {
  "lineno": 41,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.ResetKernel",
   "nest.set_verbosity"
  ],
  "type": "function"
 },
 "nest.tests.test_current_recording_generators.CurrentRecordingGeneratorTestCase.test_GetRecordables": {
  "lineno": 88,
  "symbols_in_volume": [
   "nest.GetDefaults"
  ],
  "type": "function"
 },
 "nest.tests.test_current_recording_generators.CurrentRecordingGeneratorTestCase.test_RecordedCurrentVectors": {
  "lineno": 107,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.GetStatus",
   "nest.Simulate",
   "numpy.all",
   "numpy.allclose",
   "numpy.amax",
   "numpy.amin",
   "numpy.where"
  ],
  "type": "function"
 },
 "nest.tests.test_current_recording_generators.run": {
  "lineno": 216,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_current_recording_generators.suite": {
  "lineno": 212,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_dataconnect": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_dataconnect.DataConnectTestCase": {
  "lineno": 30,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_dataconnect.DataConnectTestCase.test_DataConnect": {
  "lineno": 34,
  "symbols_in_volume": [
   "nest.Create",
   "nest.GetConnections",
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.hl_api.DataConnect"
  ],
  "type": "function"
 },
 "nest.tests.test_dataconnect.run": {
  "lineno": 72,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_dataconnect.suite": {
  "lineno": 66,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_erfc_neuron": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_erfc_neuron.ErfcNeuronTheoryTestCase": {
  "lineno": 72,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_erfc_neuron.ErfcNeuronTheoryTestCase.build_and_connect_nodes": {
  "lineno": 84,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.ResetKernel",
   "nest.set_verbosity"
  ],
  "type": "function"
 },
 "nest.tests.test_erfc_neuron.ErfcNeuronTheoryTestCase.setUp": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.logspace"
  ],
  "type": "function"
 },
 "nest.tests.test_erfc_neuron.ErfcNeuronTheoryTestCase.test_activation_function": {
  "lineno": 94,
  "symbols_in_volume": [
   "nest.Simulate",
   "numpy.max"
  ],
  "type": "function"
 },
 "nest.tests.test_erfc_neuron.activation_function_theory": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.sqrt",
   "scipy.special.erfc"
  ],
  "type": "function"
 },
 "nest.tests.test_erfc_neuron.get_mean_activity": {
  "lineno": 32,
  "symbols_in_volume": [
   "nest.GetStatus",
   "numpy.diff",
   "numpy.hstack",
   "numpy.sum"
  ],
  "type": "function"
 },
 "nest.tests.test_erfc_neuron.run": {
  "lineno": 121,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_erfc_neuron.suite": {
  "lineno": 115,
  "symbols_in_volume": [
   "unittest.TestLoader",
   "unittest.TestSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_errors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_errors.ErrorTestCase": {
  "lineno": 30,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_errors.ErrorTestCase.test_DivisionByZero": {
  "lineno": 54,
  "symbols_in_volume": [
   "nest.ResetKernel",
   "nest.kernel.NESTError",
   "nest.ll_api.sr"
  ],
  "type": "function"
 },
 "nest.tests.test_errors.ErrorTestCase.test_Raise": {
  "lineno": 34,
  "symbols_in_volume": [
   "nest.kernel.NESTError"
  ],
  "type": "function"
 },
 "nest.tests.test_errors.ErrorTestCase.test_Raise.raise_custom_exception": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_errors.ErrorTestCase.test_StackUnderFlow": {
  "lineno": 46,
  "symbols_in_volume": [
   "nest.ResetKernel",
   "nest.kernel.NESTError",
   "nest.ll_api.sr"
  ],
  "type": "function"
 },
 "nest.tests.test_errors.ErrorTestCase.test_UnknownModel": {
  "lineno": 70,
  "symbols_in_volume": [
   "nest.Create",
   "nest.ResetKernel",
   "nest.kernel.NESTError"
  ],
  "type": "function"
 },
 "nest.tests.test_errors.ErrorTestCase.test_UnknownNode": {
  "lineno": 62,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.ResetKernel",
   "nest.kernel.NESTError"
  ],
  "type": "function"
 },
 "nest.tests.test_errors.run": {
  "lineno": 84,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_errors.suite": {
  "lineno": 79,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_events": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "module"
 },
 "nest.tests.test_events.EventsTestCase": {
  "lineno": 30,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_events.EventsTestCase.test_EventsSpikes": {
  "lineno": 68,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.SetKernelStatus",
   "nest.Simulate",
   "nest.ll_api.sr"
  ],
  "type": "function"
 },
 "nest.tests.test_events.EventsTestCase.test_EventsVoltage": {
  "lineno": 51,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.SetKernelStatus",
   "nest.Simulate",
   "nest.ll_api.sr"
  ],
  "type": "function"
 },
 "nest.tests.test_events.EventsTestCase.test_Events_1": {
  "lineno": 34,
  "symbols_in_volume": [
   "nest.Create",
   "nest.GetStatus",
   "nest.ResetKernel"
  ],
  "type": "function"
 },
 "nest.tests.test_events.suite": {
  "lineno": 87,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_facetshw_stdp": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_facetshw_stdp.FacetsTestCase": {
  "lineno": 27,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_facetshw_stdp.FacetsTestCase.test_facetshw_stdp": {
  "lineno": 36,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.GetConnections",
   "nest.GetDefaults",
   "nest.GetStatus",
   "nest.SetDefaults",
   "nest.SetStatus",
   "nest.Simulate",
   "numpy.allclose",
   "numpy.arange",
   "numpy.array",
   "numpy.atleast_1d",
   "numpy.exp",
   "numpy.ones_like"
  ],
  "type": "function"
 },
 "nest.tests.test_facetshw_stdp.run": {
  "lineno": 159,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_facetshw_stdp.suite": {
  "lineno": 154,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_getconnections": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_getconnections.GetConnectionsTestCase": {
  "lineno": 30,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_getconnections.GetConnectionsTestCase.test_GetConnections": {
  "lineno": 34,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.GetConnections",
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.SetStatus"
  ],
  "type": "function"
 },
 "nest.tests.test_getconnections.run": {
  "lineno": 63,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_getconnections.suite": {
  "lineno": 57,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_helper_functions": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "module"
 },
 "nest.tests.test_helper_functions.TestHelperFunctions": {
  "lineno": 26,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_helper_functions.TestHelperFunctions.test_get_verbosity": {
  "lineno": 28,
  "symbols_in_volume": [
   "nest.get_verbosity"
  ],
  "type": "function"
 },
 "nest.tests.test_helper_functions.TestHelperFunctions.test_set_verbosity": {
  "lineno": 32,
  "symbols_in_volume": [
   "nest.get_verbosity",
   "nest.set_verbosity"
  ],
  "type": "function"
 },
 "nest.tests.test_helper_functions.suite": {
  "lineno": 49,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_iaf_psc_alpha_ps": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_iaf_psc_alpha_ps.IAFPreciseTestCase": {
  "lineno": 48,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_iaf_psc_alpha_ps.IAFPreciseTestCase.compute_difference": {
  "lineno": 67,
  "symbols_in_volume": [
   "nest.GetStatus",
   "numpy.abs",
   "numpy.any",
   "numpy.average",
   "numpy.isclose",
   "numpy.where"
  ],
  "type": "function"
 },
 "nest.tests.test_iaf_psc_alpha_ps.IAFPreciseTestCase.setUp": {
  "lineno": 53,
  "symbols_in_volume": [
   "nest.GetKernelStatus",
   "nest.ResetKernel",
   "nest.SetKernelStatus",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "nest.tests.test_iaf_psc_alpha_ps.IAFPreciseTestCase.test_closeness_same_timescales": {
  "lineno": 109,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.GetStatus",
   "nest.Simulate",
   "numpy.allclose"
  ],
  "type": "function"
 },
 "nest.tests.test_iaf_psc_alpha_ps.IAFPreciseTestCase.test_unequal_different_timescales": {
  "lineno": 143,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.GetStatus",
   "nest.Simulate",
   "numpy.allclose"
  ],
  "type": "function"
 },
 "nest.tests.test_iaf_psc_alpha_ps.run": {
  "lineno": 191,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_iaf_psc_alpha_ps.suite": {
  "lineno": 187,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_json": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_json.StatusTestCase": {
  "lineno": 30,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_json.StatusTestCase.test_GetDefaults_JSON": {
  "lineno": 34,
  "symbols_in_volume": [
   "nest.GetDefaults",
   "nest.Models",
   "nest.hl_api.to_json"
  ],
  "type": "function"
 },
 "nest.tests.test_json.StatusTestCase.test_GetKernelStatus_JSON": {
  "lineno": 48,
  "symbols_in_volume": [
   "nest.GetKernelStatus",
   "nest.hl_api.to_json"
  ],
  "type": "function"
 },
 "nest.tests.test_json.StatusTestCase.test_GetStatus_JSON": {
  "lineno": 55,
  "symbols_in_volume": [
   "nest.Create",
   "nest.GetStatus",
   "nest.Models",
   "nest.ResetKernel"
  ],
  "type": "function"
 },
 "nest.tests.test_json.run": {
  "lineno": 73,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_json.suite": {
  "lineno": 68,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_labeled_synapses": {
  "lineno": null,
  "symbols_in_volume": [
   "nest.ll_api.sli_func"
  ],
  "type": "module"
 },
 "nest.tests.test_labeled_synapses.LabeledSynapsesTestCase": {
  "lineno": 32,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "nest.tests.test_labeled_synapses.LabeledSynapsesTestCase.default_network": {
  "lineno": 37,
  "symbols_in_volume": [
   "nest.Create",
   "nest.ResetKernel",
   "nest.SetDefaults"
  ],
  "type": "function"
 },
 "nest.tests.test_labeled_synapses.LabeledSynapsesTestCase.test_GetLabeledSynapses": {
  "lineno": 158,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.GetConnections",
   "nest.GetDefaults",
   "nest.GetStatus",
   "nest.Models"
  ],
  "type": "function"
 },
 "nest.tests.test_labeled_synapses.LabeledSynapsesTestCase.test_SetLabelToNotLabeledSynapse": {
  "lineno": 188,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.GetConnections",
   "nest.GetDefaults",
   "nest.Models",
   "nest.SetDefaults",
   "nest.SetStatus",
   "nest.kernel.NESTError"
  ],
  "type": "function"
 },
 "nest.tests.test_labeled_synapses.LabeledSynapsesTestCase.test_SetLabelToSynapseOnConnect": {
  "lineno": 81,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.GetConnections",
   "nest.GetDefaults",
   "nest.GetStatus",
   "nest.Models"
  ],
  "type": "function"
 },
 "nest.tests.test_labeled_synapses.LabeledSynapsesTestCase.test_SetLabelToSynapseSetDefaults": {
  "lineno": 135,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.GetConnections",
   "nest.GetDefaults",
   "nest.GetStatus",
   "nest.Models",
   "nest.SetDefaults"
  ],
  "type": "function"
 },
 "nest.tests.test_labeled_synapses.LabeledSynapsesTestCase.test_SetLabelToSynapseSetStatus": {
  "lineno": 103,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.GetConnections",
   "nest.GetDefaults",
   "nest.GetStatus",
   "nest.Models",
   "nest.SetStatus"
  ],
  "type": "function"
 },
 "nest.tests.test_labeled_synapses.run": {
  "lineno": 222,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_labeled_synapses.suite": {
  "lineno": 217,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_mc_neuron": {
  "lineno": null,
  "symbols_in_volume": [
   "nest.ll_api.sli_func",
   "unittest.TextTestRunner"
  ],
  "type": "module"
 },
 "nest.tests.test_mc_neuron.TestMCNeuron": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.zeros",
   "unittest.TestCase",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "nest.tests.test_mc_neuron.TestMCNeuron.setUp": {
  "lineno": 89,
  "symbols_in_volume": [
   "nest.ResetKernel",
   "nest.SetDefaults"
  ],
  "type": "function"
 },
 "nest.tests.test_mc_neuron.TestMCNeuron.setUpNetwork": {
  "lineno": 118,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.GetDefaults"
  ],
  "type": "function"
 },
 "nest.tests.test_mc_neuron.TestMCNeuron.setUpNodes": {
  "lineno": 101,
  "symbols_in_volume": [
   "nest.Create",
   "nest.GetDefaults",
   "nest.SetStatus"
  ],
  "type": "function"
 },
 "nest.tests.test_mc_neuron.TestMCNeuron.testNeuron": {
  "lineno": 131,
  "symbols_in_volume": [
   "nest.GetStatus",
   "nest.SetStatus",
   "nest.Simulate",
   "numpy.allclose"
  ],
  "type": "function"
 },
 "nest.tests.test_mc_neuron.suite": {
  "lineno": 158,
  "symbols_in_volume": [
   "unittest.TestLoader"
  ],
  "type": "function"
 },
 "nest.tests.test_networks": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_networks.NetworkTestCase": {
  "lineno": 30,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_networks.NetworkTestCase.test_BeginEndSubnet": {
  "lineno": 34,
  "symbols_in_volume": [
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.hl_api.BeginSubnet",
   "nest.hl_api.EndSubnet"
  ],
  "type": "function"
 },
 "nest.tests.test_networks.NetworkTestCase.test_CurrentSubnet": {
  "lineno": 47,
  "symbols_in_volume": [
   "nest.ResetKernel",
   "nest.hl_api.BeginSubnet",
   "nest.hl_api.CurrentSubnet"
  ],
  "type": "function"
 },
 "nest.tests.test_networks.NetworkTestCase.test_GetChildren": {
  "lineno": 118,
  "symbols_in_volume": [
   "nest.ResetKernel",
   "nest.hl_api.GetChildren",
   "nest.hl_api.LayoutNetwork"
  ],
  "type": "function"
 },
 "nest.tests.test_networks.NetworkTestCase.test_GetLeaves": {
  "lineno": 56,
  "symbols_in_volume": [
   "nest.GetLeaves",
   "nest.ResetKernel",
   "nest.hl_api.LayoutNetwork"
  ],
  "type": "function"
 },
 "nest.tests.test_networks.NetworkTestCase.test_GetNetwork": {
  "lineno": 150,
  "symbols_in_volume": [
   "nest.Create",
   "nest.ResetKernel",
   "nest.hl_api.BeginSubnet",
   "nest.hl_api.CurrentSubnet",
   "nest.hl_api.EndSubnet",
   "nest.hl_api.GetNetwork"
  ],
  "type": "function"
 },
 "nest.tests.test_networks.NetworkTestCase.test_GetNodes": {
  "lineno": 85,
  "symbols_in_volume": [
   "nest.GetNodes",
   "nest.ResetKernel",
   "nest.hl_api.LayoutNetwork"
  ],
  "type": "function"
 },
 "nest.tests.test_networks.run": {
  "lineno": 173,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_networks.suite": {
  "lineno": 167,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_onetooneconnect": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_onetooneconnect.OneToOneConnectTestCase": {
  "lineno": 30,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_onetooneconnect.OneToOneConnectTestCase.test_ConnectPrePost": {
  "lineno": 34,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.GetConnections",
   "nest.GetStatus",
   "nest.ResetKernel"
  ],
  "type": "function"
 },
 "nest.tests.test_onetooneconnect.OneToOneConnectTestCase.test_ConnectPrePostParams": {
  "lineno": 46,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.GetConnections",
   "nest.GetStatus",
   "nest.ResetKernel"
  ],
  "type": "function"
 },
 "nest.tests.test_onetooneconnect.OneToOneConnectTestCase.test_ConnectPrePostWD": {
  "lineno": 68,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.GetConnections",
   "nest.GetStatus",
   "nest.ResetKernel"
  ],
  "type": "function"
 },
 "nest.tests.test_onetooneconnect.OneToOneConnectTestCase.test_IllegalConnection": {
  "lineno": 95,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.ResetKernel",
   "nest.kernel.NESTError"
  ],
  "type": "function"
 },
 "nest.tests.test_onetooneconnect.OneToOneConnectTestCase.test_UnexpectedEvent": {
  "lineno": 105,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.ResetKernel",
   "nest.kernel.NESTError"
  ],
  "type": "function"
 },
 "nest.tests.test_onetooneconnect.run": {
  "lineno": 122,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_onetooneconnect.suite": {
  "lineno": 116,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_parrot_neuron": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_parrot_neuron.ParrotNeuronPoissonTestCase": {
  "lineno": 100,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_parrot_neuron.ParrotNeuronPoissonTestCase.test_ParrotNeuronIncomingMultiplicity": {
  "lineno": 104,
  "symbols_in_volume": [
   "math.sqrt",
   "nest.Connect",
   "nest.Create",
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.SetKernelStatus",
   "nest.Simulate",
   "nest.set_verbosity"
  ],
  "type": "function"
 },
 "nest.tests.test_parrot_neuron.ParrotNeuronSTDPTestCase": {
  "lineno": 155,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_parrot_neuron.ParrotNeuronSTDPTestCase.run_protocol": {
  "lineno": 165,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.GetConnections",
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.Simulate",
   "nest.set_verbosity"
  ],
  "type": "function"
 },
 "nest.tests.test_parrot_neuron.ParrotNeuronSTDPTestCase.test_ParrotNeuronSTDPProtocolDepression": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_parrot_neuron.ParrotNeuronSTDPTestCase.test_ParrotNeuronSTDPProtocolPotentiation": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_parrot_neuron.ParrotNeuronTestCase": {
  "lineno": 30,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_parrot_neuron.ParrotNeuronTestCase.setUp": {
  "lineno": 34,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.ResetKernel",
   "nest.set_verbosity"
  ],
  "type": "function"
 },
 "nest.tests.test_parrot_neuron.ParrotNeuronTestCase.test_ParrotNeuronIgnoreSpike": {
  "lineno": 66,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.GetStatus",
   "nest.Simulate"
  ],
  "type": "function"
 },
 "nest.tests.test_parrot_neuron.ParrotNeuronTestCase.test_ParrotNeuronOutgoingMultiplicity": {
  "lineno": 80,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.GetStatus",
   "nest.Simulate"
  ],
  "type": "function"
 },
 "nest.tests.test_parrot_neuron.ParrotNeuronTestCase.test_ParrotNeuronRepeatSpike": {
  "lineno": 50,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.GetStatus",
   "nest.Simulate"
  ],
  "type": "function"
 },
 "nest.tests.test_parrot_neuron.run": {
  "lineno": 260,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_parrot_neuron.suite": {
  "lineno": 247,
  "symbols_in_volume": [
   "unittest.TestLoader",
   "unittest.TestSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_parrot_neuron_ps": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSPoissonTestCase": {
  "lineno": 111,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSPoissonTestCase.test_ParrotNeuronIncomingMultiplicity": {
  "lineno": 115,
  "symbols_in_volume": [
   "math.sqrt",
   "nest.Connect",
   "nest.Create",
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.SetKernelStatus",
   "nest.Simulate",
   "nest.set_verbosity"
  ],
  "type": "function"
 },
 "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSSTDPTestCase": {
  "lineno": 169,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSSTDPTestCase.run_protocol": {
  "lineno": 179,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.GetConnections",
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.Simulate",
   "nest.set_verbosity"
  ],
  "type": "function"
 },
 "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSSTDPTestCase.test_ParrotNeuronSTDPProtocolDepression": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSSTDPTestCase.test_ParrotNeuronSTDPProtocolPotentiation": {
  "lineno": 245,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSTestCase": {
  "lineno": 39,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSTestCase.setUp": {
  "lineno": 43,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.ResetKernel",
   "nest.set_verbosity"
  ],
  "type": "function"
 },
 "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSTestCase.test_ParrotNeuronIgnoreSpike": {
  "lineno": 77,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.GetStatus",
   "nest.Simulate"
  ],
  "type": "function"
 },
 "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSTestCase.test_ParrotNeuronOutgoingMultiplicity": {
  "lineno": 91,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.GetStatus",
   "nest.Simulate"
  ],
  "type": "function"
 },
 "nest.tests.test_parrot_neuron_ps.ParrotNeuronPSTestCase.test_ParrotNeuronRepeatSpike": {
  "lineno": 61,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.GetStatus",
   "nest.Simulate"
  ],
  "type": "function"
 },
 "nest.tests.test_parrot_neuron_ps._round_up": {
  "lineno": 30,
  "symbols_in_volume": [
   "math.ceil",
   "nest.GetKernelStatus"
  ],
  "type": "function"
 },
 "nest.tests.test_parrot_neuron_ps.run": {
  "lineno": 277,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_parrot_neuron_ps.suite": {
  "lineno": 264,
  "symbols_in_volume": [
   "unittest.TestLoader",
   "unittest.TestSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_pp_psc_delta": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_pp_psc_delta.PpPscDeltaTestCase": {
  "lineno": 27,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_pp_psc_delta.PpPscDeltaTestCase.test_adapting_threshold": {
  "lineno": 138,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.SetStatus",
   "nest.Simulate",
   "numpy.diff",
   "numpy.mean",
   "numpy.sum",
   "numpy.var"
  ],
  "type": "function"
 },
 "nest.tests.test_pp_psc_delta.PpPscDeltaTestCase.test_random_dead_time": {
  "lineno": 79,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.SetStatus",
   "nest.Simulate",
   "numpy.diff",
   "numpy.mean",
   "numpy.var"
  ],
  "type": "function"
 },
 "nest.tests.test_pp_psc_delta.PpPscDeltaTestCase.test_rate_and_fixed_dead_time": {
  "lineno": 30,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.SetStatus",
   "nest.Simulate",
   "numpy.diff"
  ],
  "type": "function"
 },
 "nest.tests.test_pp_psc_delta.run": {
  "lineno": 193,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_pp_psc_delta.suite": {
  "lineno": 188,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_pp_psc_delta_stdp": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "module"
 },
 "nest.tests.test_pp_psc_delta_stdp.PpPscDeltaSTDPTestCase": {
  "lineno": 27,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_pp_psc_delta_stdp.PpPscDeltaSTDPTestCase.test_pp_psc_delta_stdp": {
  "lineno": 36,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.GetConnections",
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.SetStatus",
   "nest.Simulate",
   "numpy.arange"
  ],
  "type": "function"
 },
 "nest.tests.test_pp_psc_delta_stdp.suite": {
  "lineno": 84,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_quantal_stp_synapse": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_quantal_stp_synapse.QuantalSTPSynapseTestCase": {
  "lineno": 29,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_quantal_stp_synapse.QuantalSTPSynapseTestCase.test_QuantalSTPSynapse": {
  "lineno": 33,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.GetKernelStatus",
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.SetDefaults",
   "nest.SetStatus",
   "nest.Simulate",
   "nest.set_verbosity",
   "numpy.array",
   "numpy.max",
   "numpy.mean",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "nest.tests.test_quantal_stp_synapse.run": {
  "lineno": 117,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_quantal_stp_synapse.suite": {
  "lineno": 111,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_rate_copy_model": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_rate_copy_model.RateCopyModelTestCase": {
  "lineno": 27,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_rate_copy_model.RateCopyModelTestCase.test_rate_copy_model": {
  "lineno": 35,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.CopyModel",
   "nest.Create",
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.SetKernelStatus",
   "nest.Simulate",
   "nest.set_verbosity",
   "numpy.abs",
   "numpy.array",
   "numpy.sum",
   "numpy.where"
  ],
  "type": "function"
 },
 "nest.tests.test_rate_copy_model.run": {
  "lineno": 103,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_rate_copy_model.suite": {
  "lineno": 94,
  "symbols_in_volume": [
   "unittest.TestLoader",
   "unittest.TestSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_rate_instantaneous_and_delayed": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_rate_instantaneous_and_delayed.RateInstantaneousAndDelayedTestCase": {
  "lineno": 27,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_rate_instantaneous_and_delayed.RateInstantaneousAndDelayedTestCase.test_rate_instantaneous_and_delayed": {
  "lineno": 35,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.SetKernelStatus",
   "nest.Simulate",
   "nest.set_verbosity",
   "numpy.abs",
   "numpy.array",
   "numpy.sum",
   "numpy.where"
  ],
  "type": "function"
 },
 "nest.tests.test_rate_instantaneous_and_delayed.run": {
  "lineno": 110,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_rate_instantaneous_and_delayed.suite": {
  "lineno": 101,
  "symbols_in_volume": [
   "unittest.TestLoader",
   "unittest.TestSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_rate_neuron": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_rate_neuron.RateNeuronTestCase": {
  "lineno": 33,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_rate_neuron.RateNeuronTestCase.setUp": {
  "lineno": 38,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.ResetKernel",
   "nest.SetKernelStatus",
   "nest.set_verbosity"
  ],
  "type": "function"
 },
 "nest.tests.test_rate_neuron.RateNeuronTestCase.test_RateNeuronMean": {
  "lineno": 68,
  "symbols_in_volume": [
   "nest.GetStatus",
   "nest.Simulate",
   "numpy.isclose",
   "numpy.mean",
   "numpy.where"
  ],
  "type": "function"
 },
 "nest.tests.test_rate_neuron.RateNeuronTestCase.test_RateNeuronNoise": {
  "lineno": 90,
  "symbols_in_volume": [
   "nest.GetStatus",
   "nest.Simulate",
   "numpy.isclose",
   "numpy.std",
   "numpy.where"
  ],
  "type": "function"
 },
 "nest.tests.test_rate_neuron.RateNeuronTestCase.test_RateNeuronVariance": {
  "lineno": 114,
  "symbols_in_volume": [
   "nest.GetStatus",
   "nest.Simulate",
   "numpy.isclose",
   "numpy.var",
   "numpy.where"
  ],
  "type": "function"
 },
 "nest.tests.test_rate_neuron.run": {
  "lineno": 146,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_rate_neuron.suite": {
  "lineno": 137,
  "symbols_in_volume": [
   "unittest.TestLoader",
   "unittest.TestSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_rate_neuron_communication": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_rate_neuron_communication.H": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.sign"
  ],
  "type": "function"
 },
 "nest.tests.test_rate_neuron_communication.RateNeuronCommunicationTestCase": {
  "lineno": 35,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_rate_neuron_communication.RateNeuronCommunicationTestCase.setUp": {
  "lineno": 40,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.ResetKernel",
   "nest.SetKernelStatus",
   "nest.set_verbosity"
  ],
  "type": "function"
 },
 "nest.tests.test_rate_neuron_communication.RateNeuronCommunicationTestCase.test_ParrotRateNeuron": {
  "lineno": 220,
  "symbols_in_volume": [
   "nest.GetStatus",
   "nest.SetStatus",
   "nest.Simulate",
   "numpy.isclose",
   "numpy.where"
  ],
  "type": "function"
 },
 "nest.tests.test_rate_neuron_communication.RateNeuronCommunicationTestCase.test_RateNeuronDelay": {
  "lineno": 123,
  "symbols_in_volume": [
   "nest.GetStatus",
   "nest.Simulate",
   "numpy.isclose",
   "numpy.where"
  ],
  "type": "function"
 },
 "nest.tests.test_rate_neuron_communication.RateNeuronCommunicationTestCase.test_RateNeuronNL": {
  "lineno": 156,
  "symbols_in_volume": [
   "nest.GetStatus",
   "nest.SetStatus",
   "nest.Simulate",
   "numpy.allclose",
   "numpy.array",
   "numpy.tanh",
   "numpy.where"
  ],
  "type": "function"
 },
 "nest.tests.test_rate_neuron_communication.RateNeuronCommunicationTestCase.test_RateNeuronWeight": {
  "lineno": 141,
  "symbols_in_volume": [
   "nest.GetStatus",
   "nest.Simulate",
   "numpy.isclose",
   "numpy.where"
  ],
  "type": "function"
 },
 "nest.tests.test_rate_neuron_communication.RateNeuronCommunicationTestCase.test_RectifyOutput": {
  "lineno": 205,
  "symbols_in_volume": [
   "nest.GetStatus",
   "nest.Simulate",
   "numpy.isclose",
   "numpy.where"
  ],
  "type": "function"
 },
 "nest.tests.test_rate_neuron_communication.run": {
  "lineno": 249,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_rate_neuron_communication.suite": {
  "lineno": 240,
  "symbols_in_volume": [
   "unittest.TestLoader",
   "unittest.TestSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_refractory": {
  "lineno": null,
  "symbols_in_volume": [
   "nest.GetDefaults",
   "nest.Models"
  ],
  "type": "module"
 },
 "nest.tests.test_refractory.TestRefractoryCase": {
  "lineno": 120,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_refractory.TestRefractoryCase.compute_reftime": {
  "lineno": 136,
  "symbols_in_volume": [
   "nest.GetStatus",
   "numpy.argwhere",
   "numpy.isclose",
   "numpy.where"
  ],
  "type": "function"
 },
 "nest.tests.test_refractory.TestRefractoryCase.reset": {
  "lineno": 125,
  "symbols_in_volume": [
   "nest.GetKernelStatus",
   "nest.ResetKernel",
   "nest.SetKernelStatus"
  ],
  "type": "function"
 },
 "nest.tests.test_refractory.TestRefractoryCase.test_refractory_time": {
  "lineno": 182,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.GetDefaults",
   "nest.GetStatus",
   "nest.SetStatus",
   "nest.Simulate"
  ],
  "type": "function"
 },
 "nest.tests.test_refractory.run": {
  "lineno": 249,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_refractory.suite": {
  "lineno": 245,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_regression_issue-1034": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "module"
 },
 "nest.tests.test_regression_issue-1034.PostTraceTestCase": {
  "lineno": 248,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_regression_issue-1034.PostTraceTestCase.test_post_trace": {
  "lineno": 250,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ceil",
   "numpy.sort",
   "numpy.unique",
   "scipy.stats.uniform.rvs"
  ],
  "type": "function"
 },
 "nest.tests.test_regression_issue-1034.PostTraceTester": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "class"
 },
 "nest.tests.test_regression_issue-1034.PostTraceTester.__init__": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.amax"
  ],
  "type": "function"
 },
 "nest.tests.test_regression_issue-1034.PostTraceTester.nest_trace_matches_python_trace": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_regression_issue-1034.PostTraceTester.nest_trace_matches_ref_trace_": {
  "lineno": 154,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.any",
   "numpy.array",
   "numpy.round"
  ],
  "type": "function"
 },
 "nest.tests.test_regression_issue-1034.PostTraceTester.run_post_trace_test_nest_": {
  "lineno": 56,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.CopyModel",
   "nest.Create",
   "nest.GetConnections",
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.SetKernelStatus",
   "nest.Simulate",
   "nest.set_verbosity",
   "numpy.abs",
   "numpy.any",
   "numpy.array",
   "numpy.ceil"
  ],
  "type": "function"
 },
 "nest.tests.test_regression_issue-1034.PostTraceTester.run_post_trace_test_python_reference_": {
  "lineno": 128,
  "symbols_in_volume": [
   "numpy.ceil",
   "numpy.exp",
   "numpy.round",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "nest.tests.test_regression_issue-1034.suite": {
  "lineno": 320,
  "symbols_in_volume": [
   "unittest.TestLoader",
   "unittest.TestSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_siegert_neuron": {
  "lineno": null,
  "symbols_in_volume": [
   "nest.ll_api.sli_func"
  ],
  "type": "module"
 },
 "nest.tests.test_siegert_neuron.SiegertNeuronTestCase": {
  "lineno": 31,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "nest.tests.test_siegert_neuron.SiegertNeuronTestCase.setUp": {
  "lineno": 43,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.SetKernelStatus",
   "nest.set_verbosity"
  ],
  "type": "function"
 },
 "nest.tests.test_siegert_neuron.SiegertNeuronTestCase.test_RatePrediction": {
  "lineno": 105,
  "symbols_in_volume": [
   "nest.GetStatus",
   "nest.Simulate",
   "numpy.isclose",
   "numpy.where"
  ],
  "type": "function"
 },
 "nest.tests.test_siegert_neuron.run": {
  "lineno": 138,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_siegert_neuron.suite": {
  "lineno": 129,
  "symbols_in_volume": [
   "unittest.TestLoader",
   "unittest.TestSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_sp": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_sp.mpitest_issue_578_sp": {
  "lineno": null,
  "symbols_in_volume": [
   "nest.ll_api.sli_func"
  ],
  "type": "module"
 },
 "nest.tests.test_sp.mpitest_issue_578_sp.TestIssue578": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "class"
 },
 "nest.tests.test_sp.mpitest_issue_578_sp.TestIssue578.test_targets": {
  "lineno": 35,
  "symbols_in_volume": [
   "nest.Create",
   "nest.EnableStructuralPlasticity",
   "nest.ResetKernel",
   "nest.SetDefaults",
   "nest.SetKernelStatus",
   "nest.SetStructuralPlasticityStatus",
   "nest.Simulate",
   "nest.set_verbosity",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_all": {
  "lineno": null,
  "symbols_in_volume": [
   "nest.ll_api.sli_func",
   "nest.set_verbosity",
   "unittest.TextTestRunner"
  ],
  "type": "module"
 },
 "nest.tests.test_sp.test_all.suite": {
  "lineno": 47,
  "symbols_in_volume": [
   "unittest.TestSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_conn_builder": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "nest.tests.test_sp.test_conn_builder.TestSPBuilder": {
  "lineno": 28,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_sp.test_conn_builder.TestSPBuilder.setUp": {
  "lineno": 30,
  "symbols_in_volume": [
   "nest.ResetKernel"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_conn_builder.TestSPBuilder.test_not_implemented_rules": {
  "lineno": 65,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.kernel.NESTError"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_conn_builder.TestSPBuilder.test_synapse_initialisation_all_to_all": {
  "lineno": 49,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.GetStatus"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_conn_builder.TestSPBuilder.test_synapse_initialisation_one_to_one": {
  "lineno": 33,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.GetStatus"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_conn_builder.suite": {
  "lineno": 90,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect": {
  "lineno": null,
  "symbols_in_volume": [
   "nest.ll_api.sli_func",
   "unittest.main"
  ],
  "type": "module"
 },
 "nest.tests.test_sp.test_disconnect.TestDisconnectSingle": {
  "lineno": 39,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_sp.test_disconnect.TestDisconnectSingle.setUp": {
  "lineno": 41,
  "symbols_in_volume": [
   "mpi4py.MPI.COMM_WORLD",
   "nest.Rank",
   "nest.ResetKernel",
   "nest.set_verbosity"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect.TestDisconnectSingle.test_simple": {
  "lineno": 116,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.DisconnectOneToOne",
   "nest.GetKernelStatus"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect.TestDisconnectSingle.test_synapse_deletion_one_to_one_no_sp": {
  "lineno": 67,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.DisconnectOneToOne",
   "nest.GetConnections",
   "nest.Models",
   "nest.ResetKernel",
   "nest.SetKernelStatus",
   "nest.kernel.NESTError"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect.suite": {
  "lineno": 125,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect_multiple": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "nest.tests.test_sp.test_disconnect_multiple.TestDisconnect": {
  "lineno": 28,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_sp.test_disconnect_multiple.TestDisconnect.setUp": {
  "lineno": 30,
  "symbols_in_volume": [
   "nest.ResetKernel",
   "nest.set_verbosity"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect_multiple.TestDisconnect.test_disconnect_all_to_all": {
  "lineno": 243,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.Disconnect",
   "nest.GetKernelStatus"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect_multiple.TestDisconnect.test_disconnect_defaults": {
  "lineno": 233,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.Disconnect",
   "nest.GetKernelStatus"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect_multiple.TestDisconnect.test_disconnect_static_synapse": {
  "lineno": 254,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.Disconnect",
   "nest.GetKernelStatus"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect_multiple.TestDisconnect.test_multiple_synapse_deletion_all_to_all": {
  "lineno": 50,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.CopyModel",
   "nest.Create",
   "nest.Disconnect",
   "nest.GetConnections",
   "nest.GetStatus",
   "nest.Models",
   "nest.ResetKernel",
   "nest.SetDefaults",
   "nest.SetKernelStatus"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect_multiple.TestDisconnect.test_multiple_synapse_deletion_one_to_one": {
  "lineno": 104,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.CopyModel",
   "nest.Create",
   "nest.Disconnect",
   "nest.GetConnections",
   "nest.GetStatus",
   "nest.Models",
   "nest.ResetKernel",
   "nest.SetDefaults",
   "nest.SetKernelStatus"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect_multiple.TestDisconnect.test_multiple_synapse_deletion_one_to_one_no_sp": {
  "lineno": 158,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.CopyModel",
   "nest.Create",
   "nest.Disconnect",
   "nest.GetConnections",
   "nest.Models",
   "nest.ResetKernel"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect_multiple.TestDisconnect.test_single_synapse_deletion_sp": {
  "lineno": 185,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.CopyModel",
   "nest.Create",
   "nest.DisconnectOneToOne",
   "nest.GetConnections",
   "nest.GetStatus",
   "nest.Models",
   "nest.ResetKernel"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_disconnect_multiple.suite": {
  "lineno": 266,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_enable_multithread": {
  "lineno": null,
  "symbols_in_volume": [
   "nest.ll_api.sli_func",
   "unittest.main"
  ],
  "type": "module"
 },
 "nest.tests.test_sp.test_enable_multithread.TestEnableMultithread": {
  "lineno": 36,
  "symbols_in_volume": [
   "unittest.TestCase",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "nest.tests.test_sp.test_enable_multithread.TestEnableMultithread.setUp": {
  "lineno": 39,
  "symbols_in_volume": [
   "nest.ResetKernel",
   "nest.set_verbosity"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_enable_multithread.TestEnableMultithread.test_enable_multithread": {
  "lineno": 43,
  "symbols_in_volume": [
   "nest.EnableStructuralPlasticity",
   "nest.ResetKernel",
   "nest.SetKernelStatus",
   "nest.kernel.NESTError"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_enable_multithread.TestEnableMultithread.test_multithread_enable": {
  "lineno": 56,
  "symbols_in_volume": [
   "nest.EnableStructuralPlasticity",
   "nest.ResetKernel",
   "nest.SetKernelStatus",
   "nest.kernel.NESTError"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_enable_multithread.suite": {
  "lineno": 69,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_get_sp_status": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "nest.tests.test_sp.test_get_sp_status.TestGetStructuralPlasticityStatus": {
  "lineno": 35,
  "symbols_in_volume": [
   "nest.CopyModel",
   "nest.Create",
   "nest.GetStructuralPlasticityStatus",
   "nest.SetDefaults",
   "nest.SetStructuralPlasticityStatus",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_sp.test_get_sp_status.suite": {
  "lineno": 94,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves": {
  "lineno": null,
  "symbols_in_volume": [
   "nest.ll_api.sli_func",
   "unittest.main"
  ],
  "type": "module"
 },
 "nest.tests.test_sp.test_growth_curves.GaussianNumericSEI": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "class"
 },
 "nest.tests.test_sp.test_growth_curves.GaussianNumericSEI.__init__": {
  "lineno": 183,
  "symbols_in_volume": [
   "math.log",
   "math.sqrt"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.GaussianNumericSEI.get_se": {
  "lineno": 198,
  "symbols_in_volume": [
   "scipy.integrate.quad"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.GaussianNumericSEI.growth_curve": {
  "lineno": 210,
  "symbols_in_volume": [
   "math.exp",
   "math.pow"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.LinearExactSEI": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "class"
 },
 "nest.tests.test_sp.test_growth_curves.LinearExactSEI.__init__": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.LinearExactSEI.get_se": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.LinearNumericSEI": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "class"
 },
 "nest.tests.test_sp.test_growth_curves.LinearNumericSEI.__init__": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.LinearNumericSEI.get_se": {
  "lineno": 155,
  "symbols_in_volume": [
   "scipy.integrate.quad"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.LinearNumericSEI.growth_curve": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.SigmoidNumericSEI": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "class"
 },
 "nest.tests.test_sp.test_growth_curves.SigmoidNumericSEI.__init__": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.SigmoidNumericSEI.get_se": {
  "lineno": 243,
  "symbols_in_volume": [
   "scipy.integrate.quad"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.SigmoidNumericSEI.growth_curve": {
  "lineno": 255,
  "symbols_in_volume": [
   "math.exp"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.SynapticElementIntegrator": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "class"
 },
 "nest.tests.test_sp.test_growth_curves.SynapticElementIntegrator.__init__": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.SynapticElementIntegrator.get_ca": {
  "lineno": 72,
  "symbols_in_volume": [
   "math.exp"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.SynapticElementIntegrator.get_se": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.SynapticElementIntegrator.handle_spike": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.SynapticElementIntegrator.reset": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.TestGrowthCurve": {
  "lineno": 263,
  "symbols_in_volume": [
   "unittest.TestCase",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "nest.tests.test_sp.test_growth_curves.TestGrowthCurve.setUp": {
  "lineno": 269,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.GetNodes",
   "nest.ResetKernel",
   "nest.ResetNetwork",
   "nest.SetKernelStatus",
   "nest.SetStatus",
   "nest.set_verbosity"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.TestGrowthCurve.simulate": {
  "lineno": 298,
  "symbols_in_volume": [
   "nest.GetStatus",
   "nest.Simulate",
   "numpy.arange",
   "numpy.testing.assert_almost_equal",
   "numpy.zeros",
   "time.clock"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.TestGrowthCurve.test_gaussian_growth_curve": {
  "lineno": 382,
  "symbols_in_volume": [
   "nest.SetStatus",
   "numpy.array",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.TestGrowthCurve.test_linear_growth_curve": {
  "lineno": 340,
  "symbols_in_volume": [
   "nest.SetStatus",
   "numpy.array",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.TestGrowthCurve.test_sigmoid_growth_curve": {
  "lineno": 422,
  "symbols_in_volume": [
   "nest.SetStatus",
   "numpy.array",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_growth_curves.suite": {
  "lineno": 463,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_mpitests": {
  "lineno": null,
  "symbols_in_volume": [
   "nest.ll_api.sli_func",
   "unittest.TextTestRunner"
  ],
  "type": "module"
 },
 "nest.tests.test_sp.test_mpitests.TestStructuralPlasticityMPI": {
  "lineno": 30,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_sp.test_mpitests.TestStructuralPlasticityMPI.testWithMPI": {
  "lineno": 32,
  "symbols_in_volume": [
   "nest.ll_api.sli_func",
   "os.environ.copy",
   "os.path.dirname",
   "os.path.join",
   "subprocess.call",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_mpitests.suite": {
  "lineno": 58,
  "symbols_in_volume": [
   "unittest.TestLoader"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_sp_manager": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "nest.tests.test_sp.test_sp_manager.TestStructuralPlasticityManager": {
  "lineno": 29,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_sp.test_sp_manager.TestStructuralPlasticityManager.setUp": {
  "lineno": 31,
  "symbols_in_volume": [
   "nest.ResetKernel",
   "nest.set_verbosity"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_sp_manager.TestStructuralPlasticityManager.test_min_max_delay_using_default_delay": {
  "lineno": 70,
  "symbols_in_volume": [
   "nest.GetKernelStatus",
   "nest.ResetKernel",
   "nest.SetStructuralPlasticityStatus"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_sp_manager.TestStructuralPlasticityManager.test_register_synapses": {
  "lineno": 49,
  "symbols_in_volume": [
   "nest.GetKernelStatus",
   "nest.Models",
   "nest.ResetKernel",
   "nest.SetDefaults",
   "nest.SetKernelStatus"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_sp_manager.TestStructuralPlasticityManager.test_synapse_creation": {
  "lineno": 88,
  "symbols_in_volume": [
   "nest.Create",
   "nest.EnableStructuralPlasticity",
   "nest.GetConnections",
   "nest.GetStatus",
   "nest.Models",
   "nest.ResetKernel",
   "nest.SetStructuralPlasticityStatus",
   "nest.Simulate"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_sp_manager.suite": {
  "lineno": 118,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_synaptic_elements": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "nest.tests.test_sp.test_synaptic_elements.TestSynapticElements": {
  "lineno": 28,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_sp.test_synaptic_elements.TestSynapticElements.setUp": {
  "lineno": 30,
  "symbols_in_volume": [
   "nest.ResetKernel"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_synaptic_elements.TestSynapticElements.test_set_defaults": {
  "lineno": 62,
  "symbols_in_volume": [
   "nest.Create",
   "nest.GetStatus",
   "nest.SetDefaults"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_synaptic_elements.TestSynapticElements.test_set_defaults_overwrite": {
  "lineno": 75,
  "symbols_in_volume": [
   "nest.Create",
   "nest.GetStatus",
   "nest.SetDefaults"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_synaptic_elements.TestSynapticElements.test_set_status": {
  "lineno": 33,
  "symbols_in_volume": [
   "nest.Create",
   "nest.GetStatus",
   "nest.SetStatus"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_synaptic_elements.TestSynapticElements.test_set_status_overwrite": {
  "lineno": 45,
  "symbols_in_volume": [
   "nest.Create",
   "nest.GetStatus",
   "nest.SetStatus"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_synaptic_elements.suite": {
  "lineno": 95,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_update_synaptic_elements": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "nest.tests.test_sp.test_update_synaptic_elements.TestUpdateSynapticElements": {
  "lineno": 26,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_sp.test_update_synaptic_elements.TestUpdateSynapticElements.setUp": {
  "lineno": 28,
  "symbols_in_volume": [
   "nest.ResetKernel"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_update_synaptic_elements.TestUpdateSynapticElements.test_update_synaptic_elements": {
  "lineno": 31,
  "symbols_in_volume": [
   "nest.Create",
   "nest.GetStatus",
   "nest.SetStatus"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.test_update_synaptic_elements.suite": {
  "lineno": 87,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_sp.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_sp.utils.extract_dict_a_from_b": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_split_simulation": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "module"
 },
 "nest.tests.test_split_simulation.TestSplit": {
  "lineno": 26,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_split_simulation.TestSplit.__init__": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_split_simulation.TestSplit.runner": {
  "lineno": 44,
  "symbols_in_volume": [
   "nest.GetStatus",
   "nest.SetStatus"
  ],
  "type": "function"
 },
 "nest.tests.test_split_simulation.TestSplit.runs": {
  "lineno": 54,
  "symbols_in_volume": [
   "nest.Run",
   "nest.RunManager"
  ],
  "type": "function"
 },
 "nest.tests.test_split_simulation.TestSplit.setup": {
  "lineno": 34,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.ResetKernel",
   "nest.SetDefaults",
   "nest.SetStatus"
  ],
  "type": "function"
 },
 "nest.tests.test_split_simulation.TestSplit.simulate": {
  "lineno": 65,
  "symbols_in_volume": [
   "nest.Simulate"
  ],
  "type": "function"
 },
 "nest.tests.test_split_simulation.TestSplit.test_split_match": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_split_simulation.suite": {
  "lineno": 80,
  "symbols_in_volume": [
   "unittest.TestLoader"
  ],
  "type": "function"
 },
 "nest.tests.test_stack": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_stack.StackTestCase": {
  "lineno": 40,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_stack.StackTestCase.test_Count": {
  "lineno": 68,
  "symbols_in_volume": [
   "nest.ResetKernel",
   "nest.ll_api.spp",
   "nest.ll_api.sps",
   "nest.ll_api.sr"
  ],
  "type": "function"
 },
 "nest.tests.test_stack.StackTestCase.test_PushPop": {
  "lineno": 86,
  "symbols_in_volume": [
   "nest.ResetKernel",
   "nest.kernel.SLILiteral",
   "nest.ll_api.spp",
   "nest.ll_api.sps"
  ],
  "type": "function"
 },
 "nest.tests.test_stack.StackTestCase.test_PushPop_NumPy": {
  "lineno": 123,
  "symbols_in_volume": [
   "array.array",
   "nest.ResetKernel",
   "nest.ll_api.spp",
   "nest.ll_api.sps",
   "numpy",
   "numpy.array",
   "numpy.int16",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "nest.tests.test_stack.StackTestCase.test_PushPop_no_NumPy": {
  "lineno": 165,
  "symbols_in_volume": [
   "array.array",
   "nest.ResetKernel",
   "nest.ll_api.spp",
   "nest.ll_api.sps",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "nest.tests.test_stack.StackTestCase.test_stack_checker": {
  "lineno": 44,
  "symbols_in_volume": [
   "nest.kernel.NESTError",
   "nest.ll_api.get_debug",
   "nest.ll_api.set_debug",
   "nest.ll_api.stack_checker"
  ],
  "type": "function"
 },
 "nest.tests.test_stack.StackTestCase.test_stack_checker.empty_stack": {
  "lineno": 45,
  "symbols_in_volume": [
   "nest.ll_api.sli_run"
  ],
  "type": "function"
 },
 "nest.tests.test_stack.StackTestCase.test_stack_checker.leave_on_stack": {
  "lineno": 48,
  "symbols_in_volume": [
   "nest.ll_api.sli_push"
  ],
  "type": "function"
 },
 "nest.tests.test_stack.run": {
  "lineno": 187,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_stack.suite": {
  "lineno": 181,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_status": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_status.StatusTestCase": {
  "lineno": 30,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_status.StatusTestCase.test_GetDefaults": {
  "lineno": 63,
  "symbols_in_volume": [
   "nest.GetDefaults",
   "nest.Models",
   "nest.ResetKernel"
  ],
  "type": "function"
 },
 "nest.tests.test_status.StatusTestCase.test_GetKernelStatus": {
  "lineno": 34,
  "symbols_in_volume": [
   "nest.GetKernelStatus",
   "nest.ResetKernel"
  ],
  "type": "function"
 },
 "nest.tests.test_status.StatusTestCase.test_GetStatus": {
  "lineno": 109,
  "symbols_in_volume": [
   "nest.Create",
   "nest.GetDefaults",
   "nest.GetStatus",
   "nest.Models",
   "nest.ResetKernel"
  ],
  "type": "function"
 },
 "nest.tests.test_status.StatusTestCase.test_SetDefaults": {
  "lineno": 87,
  "symbols_in_volume": [
   "nest.GetDefaults",
   "nest.Models",
   "nest.ResetKernel",
   "nest.SetDefaults",
   "nest.kernel.NESTError"
  ],
  "type": "function"
 },
 "nest.tests.test_status.StatusTestCase.test_SetKernelStatus": {
  "lineno": 52,
  "symbols_in_volume": [
   "nest.ResetKernel",
   "nest.SetKernelStatus",
   "nest.kernel.NESTError"
  ],
  "type": "function"
 },
 "nest.tests.test_status.StatusTestCase.test_SetStatus": {
  "lineno": 140,
  "symbols_in_volume": [
   "nest.Create",
   "nest.GetDefaults",
   "nest.GetStatus",
   "nest.Models",
   "nest.ResetKernel",
   "nest.SetStatus"
  ],
  "type": "function"
 },
 "nest.tests.test_status.StatusTestCase.test_SetStatusList": {
  "lineno": 153,
  "symbols_in_volume": [
   "nest.Create",
   "nest.GetDefaults",
   "nest.GetStatus",
   "nest.Models",
   "nest.ResetKernel",
   "nest.SetStatus"
  ],
  "type": "function"
 },
 "nest.tests.test_status.StatusTestCase.test_SetStatusParam": {
  "lineno": 166,
  "symbols_in_volume": [
   "nest.Create",
   "nest.GetDefaults",
   "nest.GetStatus",
   "nest.Models",
   "nest.ResetKernel",
   "nest.SetStatus"
  ],
  "type": "function"
 },
 "nest.tests.test_status.StatusTestCase.test_SetStatusV_th_smaller_V_reset": {
  "lineno": 212,
  "symbols_in_volume": [
   "nest.Create",
   "nest.GetDefaults",
   "nest.Models",
   "nest.ResetKernel",
   "nest.SetStatus",
   "nest.kernel.NESTError"
  ],
  "type": "function"
 },
 "nest.tests.test_status.StatusTestCase.test_SetStatusVth_E_L": {
  "lineno": 179,
  "symbols_in_volume": [
   "nest.Create",
   "nest.GetDefaults",
   "nest.GetStatus",
   "nest.Models",
   "nest.ResetKernel",
   "nest.SetStatus"
  ],
  "type": "function"
 },
 "nest.tests.test_status.run": {
  "lineno": 238,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_status.suite": {
  "lineno": 233,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_stdp_multiplicity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_stdp_multiplicity.StdpSpikeMultiplicity": {
  "lineno": 30,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_stdp_multiplicity.StdpSpikeMultiplicity.run_protocol": {
  "lineno": 78,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.GetConnections",
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.SetKernelStatus",
   "nest.Simulate",
   "nest.set_verbosity"
  ],
  "type": "function"
 },
 "nest.tests.test_stdp_multiplicity.StdpSpikeMultiplicity.test_ParrotNeuronSTDPProtocolDepression": {
  "lineno": 213,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.round"
  ],
  "type": "function"
 },
 "nest.tests.test_stdp_multiplicity.StdpSpikeMultiplicity.test_ParrotNeuronSTDPProtocolPotentiation": {
  "lineno": 200,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.round"
  ],
  "type": "function"
 },
 "nest.tests.test_stdp_multiplicity.run": {
  "lineno": 235,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_stdp_multiplicity.suite": {
  "lineno": 227,
  "symbols_in_volume": [
   "unittest.TestLoader",
   "unittest.TestSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase": {
  "lineno": 30,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.assertAlmostEqualDetailed": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.decay": {
  "lineno": 82,
  "symbols_in_volume": [
   "math.exp"
  ],
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.depress": {
  "lineno": 99,
  "symbols_in_volume": [
   "numpy.sign"
  ],
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.facilitate": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.sign"
  ],
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.generateSpikes": {
  "lineno": 69,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create"
  ],
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.setUp": {
  "lineno": 34,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.ResetKernel",
   "nest.set_verbosity"
  ],
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.status": {
  "lineno": 76,
  "symbols_in_volume": [
   "nest.GetConnections",
   "nest.GetStatus"
  ],
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.test_badPropertiesSetupsThrowExceptions": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.test_badPropertiesSetupsThrowExceptions.badPropertyWith": {
  "lineno": 122,
  "symbols_in_volume": [
   "nest.kernel.NESTError"
  ],
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.test_badPropertiesSetupsThrowExceptions.setupProperty": {
  "lineno": 116,
  "symbols_in_volume": [
   "nest.Connect"
  ],
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.test_maxWeightStaturatesWeight": {
  "lineno": 280,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Simulate"
  ],
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.test_preVarsDecayAfterPostSpike": {
  "lineno": 176,
  "symbols_in_volume": [
   "nest.Simulate"
  ],
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.test_preVarsDecayAfterPreSpike": {
  "lineno": 157,
  "symbols_in_volume": [
   "nest.Simulate"
  ],
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.test_preVarsIncreaseWithPreSpike": {
  "lineno": 138,
  "symbols_in_volume": [
   "nest.Simulate"
  ],
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.test_varsZeroAtStart": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.test_weightChangeWhenPrePostPreSpikes": {
  "lineno": 234,
  "symbols_in_volume": [
   "nest.Simulate"
  ],
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletConnectionTestCase.test_weightChangeWhenPrePostSpikes": {
  "lineno": 196,
  "symbols_in_volume": [
   "nest.Simulate"
  ],
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletInhTestCase": {
  "lineno": 297,
  "symbols_in_volume": [
   "nest.ll_api.check_stack"
  ],
  "type": "class"
 },
 "nest.tests.test_stdp_triplet_synapse.STDPTripletInhTestCase.setUp": {
  "lineno": 300,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.ResetKernel",
   "nest.set_verbosity"
  ],
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.run": {
  "lineno": 344,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.suite": {
  "lineno": 340,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_stdp_triplet_synapse.suite_inh": {
  "lineno": 336,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_step_rate_generator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_step_rate_generator.StepRateGeneratorTestCase": {
  "lineno": 27,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_step_rate_generator.StepRateGeneratorTestCase.test_step_rate_generator": {
  "lineno": 35,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.SetKernelStatus",
   "nest.SetStatus",
   "nest.Simulate",
   "nest.set_verbosity",
   "numpy.allclose",
   "numpy.array",
   "numpy.array_equal",
   "numpy.where"
  ],
  "type": "function"
 },
 "nest.tests.test_step_rate_generator.run": {
  "lineno": 85,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_step_rate_generator.suite": {
  "lineno": 76,
  "symbols_in_volume": [
   "unittest.TestLoader",
   "unittest.TestSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_threads": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_threads.ThreadTestCase": {
  "lineno": 30,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_threads.ThreadTestCase.nest_multithreaded": {
  "lineno": 34,
  "symbols_in_volume": [
   "nest.ll_api.sli_func"
  ],
  "type": "function"
 },
 "nest.tests.test_threads.ThreadTestCase.test_Threads": {
  "lineno": 39,
  "symbols_in_volume": [
   "nest.Create",
   "nest.GetKernelStatus",
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.SetKernelStatus"
  ],
  "type": "function"
 },
 "nest.tests.test_threads.ThreadTestCase.test_ThreadsGetConnections": {
  "lineno": 54,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.GetConnections",
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.SetKernelStatus"
  ],
  "type": "function"
 },
 "nest.tests.test_threads.ThreadTestCase.test_ThreadsGetEvents": {
  "lineno": 75,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.SetKernelStatus",
   "nest.Simulate"
  ],
  "type": "function"
 },
 "nest.tests.test_threads.run": {
  "lineno": 122,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_threads.suite": {
  "lineno": 116,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_use_gid_in_filename": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_use_gid_in_filename.UseGidInFilenameTestCase": {
  "lineno": 31,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_use_gid_in_filename.UseGidInFilenameTestCase.test_NoGid": {
  "lineno": 49,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.ResetKernel",
   "nest.Simulate",
   "os.environ",
   "os.path.exists",
   "os.path.join"
  ],
  "type": "function"
 },
 "nest.tests.test_use_gid_in_filename.UseGidInFilenameTestCase.test_WithGid": {
  "lineno": 35,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.ResetKernel",
   "nest.Simulate",
   "os.environ",
   "os.path.exists",
   "os.path.join"
  ],
  "type": "function"
 },
 "nest.tests.test_use_gid_in_filename.run": {
  "lineno": 71,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_use_gid_in_filename.suite": {
  "lineno": 66,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase": {
  "lineno": 29,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.assertAlmostEqualDetailed": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.decay": {
  "lineno": 73,
  "symbols_in_volume": [
   "math.exp"
  ],
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.depress": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.facilitate": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.generateSpikes": {
  "lineno": 60,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create"
  ],
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.setUp": {
  "lineno": 34,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.Create",
   "nest.ResetKernel",
   "nest.set_verbosity"
  ],
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.status": {
  "lineno": 67,
  "symbols_in_volume": [
   "nest.GetConnections",
   "nest.GetStatus"
  ],
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.test_badPropertiesSetupsThrowExceptions": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.test_badPropertiesSetupsThrowExceptions.badPropertyWith": {
  "lineno": 104,
  "symbols_in_volume": [
   "nest.kernel.NESTError"
  ],
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.test_badPropertiesSetupsThrowExceptions.setupProperty": {
  "lineno": 98,
  "symbols_in_volume": [
   "nest.Connect"
  ],
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.test_maxWeightStaturatesWeight": {
  "lineno": 207,
  "symbols_in_volume": [
   "nest.GetConnections",
   "nest.SetStatus"
  ],
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.test_preVarsDecayAfterPostSpike": {
  "lineno": 144,
  "symbols_in_volume": [
   "nest.Simulate"
  ],
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.test_preVarsDecayAfterPreSpike": {
  "lineno": 128,
  "symbols_in_volume": [
   "nest.Simulate"
  ],
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.test_preVarsIncreaseWithPreSpike": {
  "lineno": 115,
  "symbols_in_volume": [
   "nest.Simulate"
  ],
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.test_varsZeroAtStart": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.VogelsSprekelerConnectionTestCase.test_weightChangeWhenPrePostSpikes": {
  "lineno": 161,
  "symbols_in_volume": [
   "nest.Simulate"
  ],
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.run": {
  "lineno": 231,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.tests.test_vogels_sprekeler_synapse.suite": {
  "lineno": 227,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.tests.test_weight_recorder": {
  "lineno": null,
  "symbols_in_volume": [
   "nest.ll_api.sli_func",
   "unittest.TextTestRunner"
  ],
  "type": "module"
 },
 "nest.tests.test_weight_recorder.WeightRecorderTestCase": {
  "lineno": 32,
  "symbols_in_volume": [
   "nest.ll_api.check_stack",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.tests.test_weight_recorder.WeightRecorderTestCase.is_subset": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.round"
  ],
  "type": "function"
 },
 "nest.tests.test_weight_recorder.WeightRecorderTestCase.testDefinedSenders": {
  "lineno": 113,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.CopyModel",
   "nest.Create",
   "nest.GetConnections",
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.SetKernelStatus",
   "nest.SetStatus",
   "nest.Simulate",
   "numpy.append",
   "numpy.array"
  ],
  "type": "function"
 },
 "nest.tests.test_weight_recorder.WeightRecorderTestCase.testDefinedTargets": {
  "lineno": 145,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.CopyModel",
   "nest.Create",
   "nest.GetConnections",
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.SetKernelStatus",
   "nest.SetStatus",
   "nest.Simulate",
   "numpy.append",
   "numpy.array"
  ],
  "type": "function"
 },
 "nest.tests.test_weight_recorder.WeightRecorderTestCase.testDefinedTargetsAndSenders": {
  "lineno": 177,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.CopyModel",
   "nest.Create",
   "nest.GetConnections",
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.SetKernelStatus",
   "nest.SetStatus",
   "nest.Simulate",
   "numpy.append",
   "numpy.array"
  ],
  "type": "function"
 },
 "nest.tests.test_weight_recorder.WeightRecorderTestCase.testMultapses": {
  "lineno": 213,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.CopyModel",
   "nest.Create",
   "nest.GetConnections",
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.SetKernelStatus",
   "nest.Simulate",
   "numpy.empty",
   "numpy.unique"
  ],
  "type": "function"
 },
 "nest.tests.test_weight_recorder.WeightRecorderTestCase.testMultipleThreads": {
  "lineno": 82,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.CopyModel",
   "nest.Create",
   "nest.GetConnections",
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.SetKernelStatus",
   "nest.Simulate",
   "numpy.append",
   "numpy.array"
  ],
  "type": "function"
 },
 "nest.tests.test_weight_recorder.WeightRecorderTestCase.testRPorts": {
  "lineno": 256,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.CopyModel",
   "nest.Create",
   "nest.GetConnections",
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.SetKernelStatus",
   "nest.Simulate",
   "numpy.empty",
   "numpy.unique",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "nest.tests.test_weight_recorder.WeightRecorderTestCase.testSingleThread": {
  "lineno": 51,
  "symbols_in_volume": [
   "nest.Connect",
   "nest.CopyModel",
   "nest.Create",
   "nest.GetConnections",
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.SetKernelStatus",
   "nest.Simulate",
   "numpy.append",
   "numpy.array"
  ],
  "type": "function"
 },
 "nest.tests.test_weight_recorder.suite": {
  "lineno": 309,
  "symbols_in_volume": [
   "unittest.TestLoader"
  ],
  "type": "function"
 },
 "nest.topology": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.topology.hl_api": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.topology.hl_api.ConnectLayers": {
  "lineno": 655,
  "symbols_in_volume": [
   "nest.hl_api.broadcast",
   "nest.hl_api.is_sequence_of_gids",
   "nest.kernel.NESTError"
  ],
  "type": "function"
 },
 "nest.topology.hl_api.ConnectLayers.fixdict": {
  "lineno": 820,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.hl_api.CreateLayer": {
  "lineno": 522,
  "symbols_in_volume": [
   "nest.hl_api.model_deprecation_warning"
  ],
  "type": "function"
 },
 "nest.topology.hl_api.CreateMask": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.hl_api.CreateParameter": {
  "lineno": 379,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.hl_api.Displacement": {
  "lineno": 1207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.hl_api.Distance": {
  "lineno": 1277,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.hl_api.DumpLayerConnections": {
  "lineno": 1426,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.hl_api.DumpLayerNodes": {
  "lineno": 1364,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.hl_api.FindCenterElement": {
  "lineno": 1502,
  "symbols_in_volume": [
   "nest.GetStatus",
   "nest.hl_api.is_sequence_of_gids"
  ],
  "type": "function"
 },
 "nest.topology.hl_api.FindNearestElement": {
  "lineno": 1051,
  "symbols_in_volume": [
   "nest.hl_api.GetChildren",
   "nest.hl_api.is_iterable",
   "nest.hl_api.is_sequence_of_gids",
   "nest.kernel.NESTError",
   "numpy.abs",
   "numpy.argmin",
   "numpy.array"
  ],
  "type": "function"
 },
 "nest.topology.hl_api.GetElement": {
  "lineno": 937,
  "symbols_in_volume": [
   "nest.hl_api.is_iterable",
   "nest.hl_api.is_sequence_of_gids",
   "nest.kernel.NESTError"
  ],
  "type": "function"
 },
 "nest.topology.hl_api.GetElement.make_tuple": {
  "lineno": 1019,
  "symbols_in_volume": [
   "nest.hl_api.is_iterable"
  ],
  "type": "function"
 },
 "nest.topology.hl_api.GetLayer": {
  "lineno": 889,
  "symbols_in_volume": [
   "nest.hl_api.is_sequence_of_gids"
  ],
  "type": "function"
 },
 "nest.topology.hl_api.GetPosition": {
  "lineno": 835,
  "symbols_in_volume": [
   "nest.hl_api.is_sequence_of_gids"
  ],
  "type": "function"
 },
 "nest.topology.hl_api.GetTargetNodes": {
  "lineno": 1559,
  "symbols_in_volume": [
   "nest.GetConnections",
   "nest.GetLeaves",
   "nest.hl_api.SuppressedDeprecationWarning",
   "nest.hl_api.is_sequence_of_gids",
   "nest.kernel.NESTError"
  ],
  "type": "function"
 },
 "nest.topology.hl_api.GetTargetPositions": {
  "lineno": 1654,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.hl_api.Mask": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "class"
 },
 "nest.topology.hl_api.Mask.Inside": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.hl_api.Mask.__and__": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.hl_api.Mask.__init__": {
  "lineno": 108,
  "symbols_in_volume": [
   "nest.kernel.SLIDatum"
  ],
  "type": "function"
 },
 "nest.topology.hl_api.Mask.__or__": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.hl_api.Mask.__sub__": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.hl_api.Mask._binop": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.hl_api.Parameter": {
  "lineno": 295,
  "symbols_in_volume": [],
  "type": "class"
 },
 "nest.topology.hl_api.Parameter.GetValue": {
  "lineno": 337,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.hl_api.Parameter.__add__": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.hl_api.Parameter.__div__": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.hl_api.Parameter.__init__": {
  "lineno": 309,
  "symbols_in_volume": [
   "nest.kernel.SLIDatum"
  ],
  "type": "function"
 },
 "nest.topology.hl_api.Parameter.__mul__": {
  "lineno": 328,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.hl_api.Parameter.__sub__": {
  "lineno": 325,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.hl_api.Parameter.__truediv__": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.hl_api.Parameter._binop": {
  "lineno": 317,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.hl_api.PlotKernel": {
  "lineno": 2009,
  "symbols_in_volume": [
   "matplotlib.axes.Axes",
   "matplotlib.patches.Ellipse",
   "matplotlib.pyplot.Circle",
   "matplotlib.pyplot.Rectangle",
   "matplotlib.pyplot.draw",
   "nest.GetStatus",
   "numpy.array",
   "numpy.cos",
   "numpy.pi",
   "numpy.sin"
  ],
  "type": "function"
 },
 "nest.topology.hl_api.PlotLayer": {
  "lineno": 1754,
  "symbols_in_volume": [
   "matplotlib.pyplot.draw_if_interactive",
   "matplotlib.pyplot.figure",
   "nest.GetStatus",
   "nest.hl_api.GetChildren",
   "nest.hl_api.SuppressedDeprecationWarning",
   "nest.kernel.NESTError"
  ],
  "type": "function"
 },
 "nest.topology.hl_api.PlotTargets": {
  "lineno": 1861,
  "symbols_in_volume": [
   "matplotlib.pyplot.draw_if_interactive",
   "matplotlib.pyplot.figure",
   "nest.GetStatus"
  ],
  "type": "function"
 },
 "nest.topology.hl_api.SelectNodesByMask": {
  "lineno": 2210,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.hl_api._check_displacement_args": {
  "lineno": 1171,
  "symbols_in_volume": [
   "nest.hl_api.is_iterable",
   "nest.hl_api.is_sequence_of_gids",
   "nest.kernel.NESTError",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "nest.topology.hl_api._draw_extent": {
  "lineno": 1723,
  "symbols_in_volume": [
   "matplotlib.pyplot.Rectangle"
  ],
  "type": "function"
 },
 "nest.topology.hl_api._rank_specific_filename": {
  "lineno": 1348,
  "symbols_in_volume": [
   "nest.NumProcesses",
   "nest.Rank"
  ],
  "type": "function"
 },
 "nest.topology.hl_api._shifted_positions": {
  "lineno": 1742,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.ll_api": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.topology.ll_api.topology_func": {
  "lineno": 33,
  "symbols_in_volume": [
   "nest.ll_api.sli_func"
  ],
  "type": "function"
 },
 "nest.topology.test": {
  "lineno": 25,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "nest.topology.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.topology.tests.test_all": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "module"
 },
 "nest.topology.tests.test_all.suite": {
  "lineno": 46,
  "symbols_in_volume": [
   "unittest.TestSuite"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_basics": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "module"
 },
 "nest.topology.tests.test_basics.BasicsTestCase": {
  "lineno": 38,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.topology.tests.test_basics.BasicsTestCase.test_CreateLayer": {
  "lineno": 39,
  "symbols_in_volume": [
   "nest.ResetKernel",
   "nest.hl_api.GetLeaves",
   "nest.topology.CreateLayer"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_basics.BasicsTestCase.test_CreateLayerN": {
  "lineno": 50,
  "symbols_in_volume": [
   "nest.ResetKernel",
   "nest.hl_api.GetLeaves",
   "nest.topology.CreateLayer"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_basics.BasicsTestCase.test_Displacement": {
  "lineno": 137,
  "symbols_in_volume": [
   "nest.ResetKernel",
   "nest.hl_api.GetLeaves",
   "nest.topology.CreateLayer",
   "nest.topology.Displacement",
   "numpy.array",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_basics.BasicsTestCase.test_Distance": {
  "lineno": 173,
  "symbols_in_volume": [
   "nest.ResetKernel",
   "nest.hl_api.GetLeaves",
   "nest.topology.CreateLayer",
   "nest.topology.Distance",
   "numpy.array",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_basics.BasicsTestCase.test_FindElements": {
  "lineno": 209,
  "symbols_in_volume": [
   "nest.ResetKernel",
   "nest.topology.CreateLayer",
   "nest.topology.FindNearestElement",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_basics.BasicsTestCase.test_GetCenterElement": {
  "lineno": 250,
  "symbols_in_volume": [
   "nest.ResetKernel",
   "nest.topology.CreateLayer",
   "nest.topology.FindCenterElement",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_basics.BasicsTestCase.test_GetElement": {
  "lineno": 104,
  "symbols_in_volume": [
   "nest.ResetKernel",
   "nest.hl_api.is_iterable",
   "nest.hl_api.is_sequence_of_gids",
   "nest.topology.CreateLayer",
   "nest.topology.GetElement"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_basics.BasicsTestCase.test_GetLayer": {
  "lineno": 65,
  "symbols_in_volume": [
   "nest.ResetKernel",
   "nest.hl_api.GetLeaves",
   "nest.topology.CreateLayer",
   "nest.topology.GetLayer"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_basics.BasicsTestCase.test_GetPosition": {
  "lineno": 87,
  "symbols_in_volume": [
   "nest.ResetKernel",
   "nest.hl_api.GetLeaves",
   "nest.topology.CreateLayer",
   "nest.topology.GetPosition"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_basics.BasicsTestCase.test_GetTargetNodesPositions": {
  "lineno": 268,
  "symbols_in_volume": [
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.hl_api.GetLeaves",
   "nest.topology.ConnectLayers",
   "nest.topology.CreateLayer",
   "nest.topology.GetTargetNodes",
   "nest.topology.GetTargetPositions"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_basics.BasicsTestCase.test_Parameter": {
  "lineno": 336,
  "symbols_in_volume": [
   "nest.topology.CreateParameter"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_basics.suite": {
  "lineno": 354,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_connection_with_elliptical_mask": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "module"
 },
 "nest.topology.tests.test_connection_with_elliptical_mask.ConnectWithEllipticalMask": {
  "lineno": 31,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.topology.tests.test_connection_with_elliptical_mask.ConnectWithEllipticalMask.setUp": {
  "lineno": 33,
  "symbols_in_volume": [
   "nest.ResetKernel"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_connection_with_elliptical_mask.ConnectWithEllipticalMask.test_ConnectAnchoredEllipticalMask": {
  "lineno": 160,
  "symbols_in_volume": [
   "nest.GetConnections",
   "nest.topology.ConnectLayers",
   "nest.topology.CreateLayer"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_connection_with_elliptical_mask.ConnectWithEllipticalMask.test_ConnectEllipticalMask": {
  "lineno": 36,
  "symbols_in_volume": [
   "nest.GetConnections",
   "nest.topology.ConnectLayers",
   "nest.topology.CreateLayer"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_connection_with_elliptical_mask.ConnectWithEllipticalMask.test_ConnectEllipticalMaskWithPeriodicBoundary": {
  "lineno": 225,
  "symbols_in_volume": [
   "nest.GetConnections",
   "nest.topology.ConnectLayers",
   "nest.topology.CreateLayer"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_connection_with_elliptical_mask.ConnectWithEllipticalMask.test_ConnectTiltedEllipticalMask": {
  "lineno": 101,
  "symbols_in_volume": [
   "nest.GetConnections",
   "nest.topology.ConnectLayers",
   "nest.topology.CreateLayer"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_connection_with_elliptical_mask.suite": {
  "lineno": 299,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_dumping": {
  "lineno": null,
  "symbols_in_volume": [
   "matplotlib.pyplot.show",
   "unittest.TextTestRunner"
  ],
  "type": "module"
 },
 "nest.topology.tests.test_dumping.PlottingTestCase": {
  "lineno": 40,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.topology.tests.test_dumping.PlottingTestCase.nest_tmpdir": {
  "lineno": 41,
  "symbols_in_volume": [
   "os.environ"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_dumping.PlottingTestCase.test_DumpConns": {
  "lineno": 68,
  "symbols_in_volume": [
   "nest.ResetKernel",
   "nest.topology.ConnectLayers",
   "nest.topology.CreateLayer",
   "nest.topology.DumpLayerConnections",
   "os.path.join"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_dumping.PlottingTestCase.test_DumpConns2": {
  "lineno": 83,
  "symbols_in_volume": [
   "nest.ResetKernel",
   "nest.topology.ConnectLayers",
   "nest.topology.CreateLayer",
   "nest.topology.DumpLayerConnections",
   "os.path.join"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_dumping.PlottingTestCase.test_DumpNodes": {
  "lineno": 48,
  "symbols_in_volume": [
   "nest.ResetKernel",
   "nest.topology.CreateLayer",
   "nest.topology.DumpLayerNodes",
   "os.path.join"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_dumping.PlottingTestCase.test_DumpNodes2": {
  "lineno": 58,
  "symbols_in_volume": [
   "nest.ResetKernel",
   "nest.topology.CreateLayer",
   "nest.topology.DumpLayerNodes",
   "os.path.join"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_dumping.suite": {
  "lineno": 99,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_plotting": {
  "lineno": null,
  "symbols_in_volume": [
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.show",
   "unittest.TextTestRunner"
  ],
  "type": "module"
 },
 "nest.topology.tests.test_plotting.PlottingTestCase": {
  "lineno": 42,
  "symbols_in_volume": [
   "unittest.TestCase",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "nest.topology.tests.test_plotting.PlottingTestCase.test_PlotKernel": {
  "lineno": 90,
  "symbols_in_volume": [
   "matplotlib.pyplot.figure",
   "nest.ResetKernel",
   "nest.topology.CreateLayer",
   "nest.topology.FindCenterElement",
   "nest.topology.PlotKernel"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_plotting.PlottingTestCase.test_PlotLayer": {
  "lineno": 45,
  "symbols_in_volume": [
   "nest.ResetKernel",
   "nest.topology.CreateLayer",
   "nest.topology.PlotLayer"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_plotting.PlottingTestCase.test_PlotTargets": {
  "lineno": 55,
  "symbols_in_volume": [
   "nest.GetLeaves",
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.topology.ConnectLayers",
   "nest.topology.CreateLayer",
   "nest.topology.FindCenterElement",
   "nest.topology.PlotTargets"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_plotting.suite": {
  "lineno": 113,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_random_parameter": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "module"
 },
 "nest.topology.tests.test_random_parameter.RandomParameterTestCase": {
  "lineno": 51,
  "symbols_in_volume": [
   "unittest.TestCase",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "nest.topology.tests.test_random_parameter.RandomParameterTestCase.kolmogorov_smirnov": {
  "lineno": 53,
  "symbols_in_volume": [
   "math.sqrt",
   "nest.GetConnections",
   "nest.GetStatus",
   "nest.ResetKernel",
   "nest.topology.ConnectLayers",
   "nest.topology.CreateLayer",
   "numpy.abs",
   "numpy.arange",
   "numpy.array"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_random_parameter.RandomParameterTestCase.test_lognormal": {
  "lineno": 125,
  "symbols_in_volume": [
   "math.erf",
   "numpy.vectorize",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_random_parameter.RandomParameterTestCase.test_lognormal.lognormal_cdf_func": {
  "lineno": 136,
  "symbols_in_volume": [
   "math.sqrt",
   "numpy.log"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_random_parameter.RandomParameterTestCase.test_normal": {
  "lineno": 109,
  "symbols_in_volume": [
   "math.erf",
   "numpy.vectorize",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_random_parameter.RandomParameterTestCase.test_normal.normal_cdf_func": {
  "lineno": 120,
  "symbols_in_volume": [
   "math.sqrt"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_random_parameter.RandomParameterTestCase.test_uniform": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.tests.test_random_parameter.RandomParameterTestCase.test_uniform.uniform_cdf_func": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.tests.test_random_parameter.suite": {
  "lineno": 143,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_rotated_rect_mask": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "module"
 },
 "nest.topology.tests.test_rotated_rect_mask.RotatedRectangularMask": {
  "lineno": 31,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.topology.tests.test_rotated_rect_mask.RotatedRectangularMask.setUp": {
  "lineno": 33,
  "symbols_in_volume": [
   "nest.ResetKernel"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_rotated_rect_mask.RotatedRectangularMask.test_ConnectWithRotatedRectangleMask": {
  "lineno": 341,
  "symbols_in_volume": [
   "nest.GetConnections",
   "nest.topology.ConnectLayers",
   "nest.topology.CreateLayer"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_rotated_rect_mask.RotatedRectangularMask.test_RotatedBoxMaskByAzimuthAndPolarAngle": {
  "lineno": 240,
  "symbols_in_volume": [
   "nest.topology.CreateLayer",
   "nest.topology.CreateMask",
   "nest.topology.SelectNodesByMask"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_rotated_rect_mask.RotatedRectangularMask.test_RotatedBoxMaskByAzimuthAngle": {
  "lineno": 105,
  "symbols_in_volume": [
   "nest.topology.CreateLayer",
   "nest.topology.CreateMask",
   "nest.topology.SelectNodesByMask"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_rotated_rect_mask.RotatedRectangularMask.test_RotatedBoxMaskByPolarAngle": {
  "lineno": 154,
  "symbols_in_volume": [
   "nest.topology.CreateLayer",
   "nest.topology.CreateMask",
   "nest.topology.SelectNodesByMask"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_rotated_rect_mask.RotatedRectangularMask.test_RotatedBoxOutsideOrigin": {
  "lineno": 301,
  "symbols_in_volume": [
   "nest.topology.CreateLayer",
   "nest.topology.CreateMask",
   "nest.topology.SelectNodesByMask"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_rotated_rect_mask.RotatedRectangularMask.test_RotatedRectangleOutsideOrigin": {
  "lineno": 263,
  "symbols_in_volume": [
   "nest.topology.CreateLayer",
   "nest.topology.CreateMask",
   "nest.topology.SelectNodesByMask"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_rotated_rect_mask.RotatedRectangularMask.test_RotatedRectangularMask": {
  "lineno": 36,
  "symbols_in_volume": [
   "nest.kernel.NESTError",
   "nest.topology.CreateLayer",
   "nest.topology.CreateMask",
   "nest.topology.SelectNodesByMask"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_rotated_rect_mask.suite": {
  "lineno": 407,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.TextTestRunner"
  ],
  "type": "module"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask": {
  "lineno": 31,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask.setUp": {
  "lineno": 33,
  "symbols_in_volume": [
   "nest.ResetKernel"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask.test_CreateEllipticalMask2D": {
  "lineno": 87,
  "symbols_in_volume": [
   "nest.topology.CreateMask"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask.test_EllipsoidalMask3D": {
  "lineno": 197,
  "symbols_in_volume": [
   "nest.topology.CreateLayer",
   "nest.topology.CreateMask",
   "nest.topology.SelectNodesByMask"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask.test_EllipticalMask2D": {
  "lineno": 94,
  "symbols_in_volume": [
   "nest.topology.CreateLayer",
   "nest.topology.CreateMask",
   "nest.topology.SelectNodesByMask"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask.test_EllipticalMask2DWithAnchor": {
  "lineno": 119,
  "symbols_in_volume": [
   "nest.topology.CreateLayer",
   "nest.topology.CreateMask",
   "nest.topology.SelectNodesByMask"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask.test_EllipticalMask2DwithAnchorAndCenteredLayer": {
  "lineno": 174,
  "symbols_in_volume": [
   "nest.topology.CreateLayer",
   "nest.topology.CreateMask",
   "nest.topology.SelectNodesByMask"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask.test_SelectNodesByMaskIn2D": {
  "lineno": 36,
  "symbols_in_volume": [
   "nest.ResetKernel",
   "nest.topology.CreateLayer",
   "nest.topology.CreateMask",
   "nest.topology.SelectNodesByMask"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask.test_SelectNodesByMaskIn3D": {
  "lineno": 68,
  "symbols_in_volume": [
   "nest.topology.CreateLayer",
   "nest.topology.CreateMask",
   "nest.topology.SelectNodesByMask"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask.test_TiltedEllipsoidalMask": {
  "lineno": 226,
  "symbols_in_volume": [
   "nest.ResetKernel",
   "nest.topology.CreateLayer",
   "nest.topology.CreateMask",
   "nest.topology.SelectNodesByMask"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask.test_TiltedEllipsoidalMask3DWithAnchor": {
  "lineno": 326,
  "symbols_in_volume": [
   "nest.topology.CreateLayer",
   "nest.topology.CreateMask",
   "nest.topology.SelectNodesByMask"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.SelectionFunctionAndEllipticalMask.test_TiltedEllipticalMask2DWithAnchor": {
  "lineno": 136,
  "symbols_in_volume": [
   "nest.topology.CreateLayer",
   "nest.topology.CreateMask",
   "nest.topology.SelectNodesByMask"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_selection_function_and_elliptical_mask.suite": {
  "lineno": 357,
  "symbols_in_volume": [
   "unittest.makeSuite"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels": {
  "lineno": null,
  "symbols_in_volume": [
   "matplotlib.pyplot.close",
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.show",
   "unittest.TextTestRunner"
  ],
  "type": "module"
 },
 "nest.topology.tests.test_spatial_kernels.PlottingSpatialTester": {
  "lineno": 516,
  "symbols_in_volume": [],
  "type": "class"
 },
 "nest.topology.tests.test_spatial_kernels.PlottingSpatialTester.__init__": {
  "lineno": 519,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.PlottingSpatialTester.show_CDF": {
  "lineno": 559,
  "symbols_in_volume": [
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.legend",
   "matplotlib.pyplot.plot",
   "matplotlib.pyplot.step",
   "matplotlib.pyplot.xlabel",
   "matplotlib.pyplot.ylabel",
   "matplotlib.pyplot.ylim",
   "numpy.linspace"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.PlottingSpatialTester.show_PDF": {
  "lineno": 580,
  "symbols_in_volume": [
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.hist",
   "matplotlib.pyplot.legend",
   "matplotlib.pyplot.plot",
   "matplotlib.pyplot.xlabel",
   "matplotlib.pyplot.ylabel",
   "matplotlib.pyplot.ylim",
   "numpy.array",
   "numpy.linspace"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.PlottingSpatialTester.show_network": {
  "lineno": 524,
  "symbols_in_volume": [
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.scatter",
   "matplotlib.pyplot.subplots_adjust",
   "matplotlib.pyplot.xlabel",
   "matplotlib.pyplot.xlim",
   "matplotlib.pyplot.xticks",
   "matplotlib.pyplot.ylabel",
   "matplotlib.pyplot.ylim",
   "matplotlib.pyplot.yticks"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "class"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester.__init__": {
  "lineno": 70,
  "symbols_in_volume": [
   "math.exp",
   "math.log",
   "math.sqrt"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester._all_distances": {
  "lineno": 238,
  "symbols_in_volume": [
   "nest.GetLeaves",
   "nest.topology.Distance"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester._build": {
  "lineno": 198,
  "symbols_in_volume": [
   "nest.GetLeaves",
   "nest.topology.CreateLayer",
   "nest.topology.FindCenterElement",
   "numpy.random.uniform"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester._cdf": {
  "lineno": 442,
  "symbols_in_volume": [
   "numpy.cumsum"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester._connect": {
  "lineno": 233,
  "symbols_in_volume": [
   "nest.topology.ConnectLayers"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester._create_distance_data": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester._pdf": {
  "lineno": 271,
  "symbols_in_volume": [
   "math.acos",
   "math.asin",
   "math.pi",
   "math.sqrt",
   "numpy.array"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester._positions": {
  "lineno": 250,
  "symbols_in_volume": [
   "nest.GetLeaves",
   "nest.topology.GetPosition"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester._reset": {
  "lineno": 181,
  "symbols_in_volume": [
   "nest.ResetKernel",
   "nest.SetKernelStatus",
   "numpy.random.randint",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester._roi_2d": {
  "lineno": 262,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester._target_distances": {
  "lineno": 243,
  "symbols_in_volume": [
   "nest.GetConnections",
   "nest.topology.Distance"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester._target_positions": {
  "lineno": 256,
  "symbols_in_volume": [
   "nest.topology.GetTargetPositions"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester.ks_test": {
  "lineno": 466,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.SpatialTester.z_test": {
  "lineno": 485,
  "symbols_in_volume": [
   "math.sqrt",
   "numpy.nan"
  ],
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2D": {
  "lineno": 605,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2D.test_constant": {
  "lineno": 610,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2D.test_exponential": {
  "lineno": 628,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2D.test_gamma": {
  "lineno": 646,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2D.test_gaussian": {
  "lineno": 637,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2D.test_linear": {
  "lineno": 619,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2DOBC": {
  "lineno": 656,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2DOBC.test_constant": {
  "lineno": 661,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2DOBC.test_exponential": {
  "lineno": 679,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2DOBC.test_gamma": {
  "lineno": 697,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2DOBC.test_gaussian": {
  "lineno": 688,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial2DOBC.test_linear": {
  "lineno": 670,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial3D": {
  "lineno": 707,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial3D.test_constant": {
  "lineno": 712,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial3D.test_exponential": {
  "lineno": 730,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial3D.test_gamma": {
  "lineno": 748,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial3D.test_gaussian": {
  "lineno": 739,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.TestSpatial3D.test_linear": {
  "lineno": 721,
  "symbols_in_volume": [],
  "type": "function"
 },
 "nest.topology.tests.test_spatial_kernels.suite": {
  "lineno": 758,
  "symbols_in_volume": [
   "unittest.TestLoader",
   "unittest.TestSuite"
  ],
  "type": "function"
 },
 "nest.visualization": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.visualization.plot_network": {
  "lineno": 35,
  "symbols_in_volume": [
   "nest.GetConnections",
   "nest.GetStatus",
   "nest.kernel.NESTError",
   "pydot.Dot",
   "pydot.Edge",
   "types.ListType",
   "types.TupleType"
  ],
  "type": "function"
 },
 "nest.visualization.plot_network.add_nodes": {
  "lineno": 79,
  "symbols_in_volume": [
   "pydot.Node",
   "pydot.Subgraph"
  ],
  "type": "function"
 },
 "nest.visualization.plot_network.get_name": {
  "lineno": 71,
  "symbols_in_volume": [
   "nest.GetStatus"
  ],
  "type": "function"
 },
 "nest.voltage_trace": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "nest.voltage_trace._from_memory": {
  "lineno": 227,
  "symbols_in_volume": [
   "array.array",
   "nest.GetStatus",
   "numpy.array",
   "numpy.unique"
  ],
  "type": "function"
 },
 "nest.voltage_trace.from_device": {
  "lineno": 128,
  "symbols_in_volume": [
   "nest.GetDefaults",
   "nest.GetStatus",
   "nest.kernel.NESTError",
   "numpy.array",
   "pylab.draw",
   "pylab.legend",
   "pylab.plot",
   "pylab.title",
   "pylab.xlabel",
   "pylab.ylabel"
  ],
  "type": "function"
 },
 "nest.voltage_trace.from_file": {
  "lineno": 37,
  "symbols_in_volume": [
   "nest.hl_api.is_iterable",
   "numpy.concatenate",
   "numpy.loadtxt",
   "pylab.draw",
   "pylab.legend",
   "pylab.plot",
   "pylab.title",
   "pylab.xlabel",
   "pylab.ylabel"
  ],
  "type": "function"
 },
 "nest.voltage_trace.show": {
  "lineno": 271,
  "symbols_in_volume": [
   "pylab.show"
  ],
  "type": "function"
 }
}