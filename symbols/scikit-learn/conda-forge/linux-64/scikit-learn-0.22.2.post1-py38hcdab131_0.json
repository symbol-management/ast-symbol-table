{
 "sklearn": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.INFO",
   "logging.StreamHandler",
   "logging.getLogger",
   "os.environ.setdefault",
   "sys.stderr.write"
  ],
  "type": "module"
 },
 "sklearn.__check_build": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.__check_build.raise_build_error": {
  "lineno": 16,
  "symbols_in_volume": [
   "os.listdir",
   "os.path.split"
  ],
  "type": "function"
 },
 "sklearn.__check_build.setup": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.distutils.core.setup"
  ],
  "type": "module"
 },
 "sklearn.__check_build.setup.configuration": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.Configuration",
   "numpy.get_include"
  ],
  "type": "function"
 },
 "sklearn._build_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn._build_utils._check_cython_version": {
  "lineno": 27,
  "symbols_in_volume": [
   "Cython.__path__",
   "Cython.__version__",
   "distutils.version.LooseVersion"
  ],
  "type": "function"
 },
 "sklearn._build_utils.cythonize_extensions": {
  "lineno": 43,
  "symbols_in_volume": [
   "Cython.Build.cythonize",
   "contextlib.suppress",
   "distutils.version.LooseVersion",
   "joblib.__version__",
   "joblib.cpu_count",
   "sklearn._OPENMP_SUPPORTED"
  ],
  "type": "function"
 },
 "sklearn._build_utils.deprecated_modules": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn._build_utils.deprecated_modules._clean_deprecated_modules_files": {
  "lineno": 315,
  "symbols_in_volume": [
   "contextlib.suppress"
  ],
  "type": "function"
 },
 "sklearn._build_utils.deprecated_modules._create_deprecated_modules_files": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn._build_utils.deprecated_modules._get_deprecated_path": {
  "lineno": 291,
  "symbols_in_volume": [
   "pathlib.Path"
  ],
  "type": "function"
 },
 "sklearn._build_utils.gen_from_templates": {
  "lineno": 83,
  "symbols_in_volume": [
   "Cython.Tempita.sub",
   "os.path.exists",
   "os.stat"
  ],
  "type": "function"
 },
 "sklearn._build_utils.openmp_helpers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn._build_utils.openmp_helpers.check_openmp_support": {
  "lineno": 47,
  "symbols_in_volume": [
   "distutils.errors.CompileError",
   "distutils.errors.LinkError",
   "os.getenv",
   "subprocess.CalledProcessError",
   "textwrap.dedent",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn._build_utils.openmp_helpers.get_openmp_flag": {
  "lineno": 18,
  "symbols_in_volume": [
   "os.getenv",
   "sys.platform"
  ],
  "type": "function"
 },
 "sklearn._build_utils.pre_build_helpers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn._build_utils.pre_build_helpers.basic_check_build": {
  "lineno": 61,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "sklearn._build_utils.pre_build_helpers.compile_test_program": {
  "lineno": 14,
  "symbols_in_volume": [
   "distutils.sysconfig.customize_compiler",
   "glob.glob",
   "numpy.distutils.ccompiler.new_compiler",
   "os.chdir",
   "os.mkdir",
   "os.path.abspath",
   "os.path.join",
   "subprocess.check_output",
   "sys.stdout.encoding",
   "tempfile.TemporaryDirectory"
  ],
  "type": "function"
 },
 "sklearn._config": {
  "lineno": null,
  "symbols_in_volume": [
   "os.environ.get"
  ],
  "type": "module"
 },
 "sklearn._config.config_context": {
  "lineno": 75,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "sklearn._config.get_config": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn._config.set_config": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn._distributor_init": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.base.BaseEstimator": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.base.BaseEstimator.__getstate__": {
  "lineno": 298,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.base.BaseEstimator.__repr__": {
  "lineno": 249,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "sklearn.base.BaseEstimator.__setstate__": {
  "lineno": 309,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.base.BaseEstimator._get_param_names": {
  "lineno": 146,
  "symbols_in_volume": [
   "inspect.signature"
  ],
  "type": "function"
 },
 "sklearn.base.BaseEstimator._get_tags": {
  "lineno": 327,
  "symbols_in_volume": [
   "inspect.getmro"
  ],
  "type": "function"
 },
 "sklearn.base.BaseEstimator._more_tags": {
  "lineno": 324,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.base.BaseEstimator.get_params": {
  "lineno": 173,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.base.BaseEstimator.set_params": {
  "lineno": 205,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "sklearn.base.BiclusterMixin": {
  "lineno": 466,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.base.BiclusterMixin.biclusters_": {
  "lineno": 469,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.base.BiclusterMixin.get_indices": {
  "lineno": 477,
  "symbols_in_volume": [
   "numpy.nonzero"
  ],
  "type": "function"
 },
 "sklearn.base.BiclusterMixin.get_shape": {
  "lineno": 499,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.base.BiclusterMixin.get_submatrix": {
  "lineno": 515,
  "symbols_in_volume": [
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.base.ClassifierMixin": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.base.ClassifierMixin.score": {
  "lineno": 344,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.base.ClusterMixin": {
  "lineno": 439,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.base.ClusterMixin.fit_predict": {
  "lineno": 443,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.base.DensityMixin": {
  "lineno": 577,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.base.DensityMixin.score": {
  "lineno": 581,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.base.MetaEstimatorMixin": {
  "lineno": 621,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.base.MultiOutputMixin": {
  "lineno": 626,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.base.MultiOutputMixin._more_tags": {
  "lineno": 628,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.base.OutlierMixin": {
  "lineno": 595,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.base.OutlierMixin.fit_predict": {
  "lineno": 599,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.base.RegressorMixin": {
  "lineno": 372,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.base.RegressorMixin.score": {
  "lineno": 376,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.base.TransformerMixin": {
  "lineno": 541,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.base.TransformerMixin.fit_transform": {
  "lineno": 544,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.base._UnstableArchMixin": {
  "lineno": 632,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.base._UnstableArchMixin._more_tags": {
  "lineno": 634,
  "symbols_in_volume": [
   "platform.machine"
  ],
  "type": "function"
 },
 "sklearn.base._pprint": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.get_printoptions",
   "numpy.set_printoptions"
  ],
  "type": "function"
 },
 "sklearn.base.clone": {
  "lineno": 39,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "sklearn.base.is_classifier": {
  "lineno": 639,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.base.is_outlier_detector": {
  "lineno": 671,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.base.is_regressor": {
  "lineno": 655,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.calibration": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.calibration.CalibratedClassifierCV": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.calibration.CalibratedClassifierCV.__init__": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.calibration.CalibratedClassifierCV.fit": {
  "lineno": 115,
  "symbols_in_volume": [
   "inspect.signature",
   "numpy.any",
   "numpy.sum",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.calibration.CalibratedClassifierCV.predict": {
  "lineno": 233,
  "symbols_in_volume": [
   "numpy.argmax"
  ],
  "type": "function"
 },
 "sklearn.calibration.CalibratedClassifierCV.predict_proba": {
  "lineno": 203,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.calibration._CalibratedClassifier": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.calibration._CalibratedClassifier.__init__": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.calibration._CalibratedClassifier._preproc": {
  "lineno": 299,
  "symbols_in_volume": [
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.calibration._CalibratedClassifier.fit": {
  "lineno": 318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.calibration._CalibratedClassifier.predict_proba": {
  "lineno": 363,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.newaxis",
   "numpy.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.calibration._SigmoidCalibration": {
  "lineno": 468,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.calibration._SigmoidCalibration.fit": {
  "lineno": 479,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.calibration._SigmoidCalibration.predict": {
  "lineno": 505,
  "symbols_in_volume": [
   "scipy.special.expit"
  ],
  "type": "function"
 },
 "sklearn.calibration._sigmoid_calibration": {
  "lineno": 405,
  "symbols_in_volume": [
   "math.log",
   "numpy.array",
   "numpy.sum",
   "numpy.zeros",
   "scipy.optimize.fmin_bfgs"
  ],
  "type": "function"
 },
 "sklearn.calibration._sigmoid_calibration.grad": {
  "lineno": 453,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.sum",
   "scipy.special.expit"
  ],
  "type": "function"
 },
 "sklearn.calibration._sigmoid_calibration.objective": {
  "lineno": 444,
  "symbols_in_volume": [
   "scipy.special.expit",
   "scipy.special.xlogy"
  ],
  "type": "function"
 },
 "sklearn.calibration.calibration_curve": {
  "lineno": 522,
  "symbols_in_volume": [
   "numpy.bincount",
   "numpy.digitize",
   "numpy.linspace",
   "numpy.percentile",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.cluster": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.cluster._affinity_propagation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.cluster._affinity_propagation.AffinityPropagation": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.cluster._affinity_propagation.AffinityPropagation.__init__": {
  "lineno": 338,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._affinity_propagation.AffinityPropagation._pairwise": {
  "lineno": 350,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._affinity_propagation.AffinityPropagation.fit": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._affinity_propagation.AffinityPropagation.fit_predict": {
  "lineno": 426,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._affinity_propagation.AffinityPropagation.predict": {
  "lineno": 398,
  "symbols_in_volume": [
   "numpy.array",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.cluster._affinity_propagation._equal_similarities_and_preferences": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._affinity_propagation._equal_similarities_and_preferences.all_equal_preferences": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.all"
  ],
  "type": "function"
 },
 "sklearn.cluster._affinity_propagation._equal_similarities_and_preferences.all_equal_similarities": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.fill_diagonal",
   "numpy.ones"
  ],
  "type": "function"
 },
 "sklearn.cluster._affinity_propagation.affinity_propagation": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.arange",
   "numpy.argmax",
   "numpy.array",
   "numpy.diag",
   "numpy.double",
   "numpy.finfo",
   "numpy.flatnonzero",
   "numpy.inf",
   "numpy.max",
   "numpy.maximum",
   "numpy.median",
   "numpy.newaxis",
   "numpy.random.RandomState",
   "numpy.searchsorted",
   "numpy.subtract",
   "numpy.sum",
   "numpy.unique",
   "numpy.where",
   "numpy.zeros",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.cluster._agglomerative": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.cluster._agglomerative.AgglomerativeClustering": {
  "lineno": 656,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.cluster._agglomerative.AgglomerativeClustering.__init__": {
  "lineno": 761,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._agglomerative.AgglomerativeClustering.fit": {
  "lineno": 780,
  "symbols_in_volume": [
   "numpy.copy",
   "numpy.count_nonzero",
   "numpy.searchsorted",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.cluster._agglomerative.AgglomerativeClustering.fit_predict": {
  "lineno": 884,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._agglomerative.AgglomerativeClustering.n_components_": {
  "lineno": 773,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._agglomerative.FeatureAgglomeration": {
  "lineno": 905,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.cluster._agglomerative.FeatureAgglomeration.__init__": {
  "lineno": 1017,
  "symbols_in_volume": [
   "numpy.mean"
  ],
  "type": "function"
 },
 "sklearn.cluster._agglomerative.FeatureAgglomeration.fit": {
  "lineno": 1028,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._agglomerative.FeatureAgglomeration.fit_predict": {
  "lineno": 1046,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._agglomerative._average_linkage": {
  "lineno": 587,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._agglomerative._complete_linkage": {
  "lineno": 582,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._agglomerative._fix_connectivity": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.min",
   "numpy.where",
   "scipy.sparse.csgraph.connected_components",
   "scipy.sparse.isspmatrix",
   "scipy.sparse.isspmatrix_lil",
   "scipy.sparse.lil_matrix",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.cluster._agglomerative._hc_cut": {
  "lineno": 607,
  "symbols_in_volume": [
   "heapq.heappush",
   "heapq.heappushpop",
   "numpy.intp",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.cluster._agglomerative._single_linkage": {
  "lineno": 592,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._agglomerative._single_linkage_tree": {
  "lineno": 82,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.argsort",
   "numpy.finfo",
   "numpy.int",
   "numpy.intp",
   "numpy.vstack",
   "scipy.sparse.csgraph.minimum_spanning_tree"
  ],
  "type": "function"
 },
 "sklearn.cluster._agglomerative.linkage_tree": {
  "lineno": 344,
  "symbols_in_volume": [
   "heapq.heapify",
   "heapq.heappop",
   "heapq.heappush",
   "numpy.any",
   "numpy.arange",
   "numpy.array",
   "numpy.asarray",
   "numpy.empty",
   "numpy.float64",
   "numpy.int",
   "numpy.intp",
   "numpy.ones",
   "numpy.reshape",
   "numpy.triu_indices",
   "scipy.cluster.hierarchy.linkage",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.cluster._agglomerative.ward_tree": {
  "lineno": 136,
  "symbols_in_volume": [
   "heapq.heapify",
   "heapq.heappop",
   "heapq.heappush",
   "numpy.arange",
   "numpy.array",
   "numpy.asarray",
   "numpy.empty",
   "numpy.float64",
   "numpy.int8",
   "numpy.intp",
   "numpy.ones",
   "numpy.require",
   "numpy.reshape",
   "numpy.sqrt",
   "numpy.zeros",
   "scipy.cluster.hierarchy.ward",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.cluster._bicluster": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.cluster._bicluster.BaseSpectral": {
  "lineno": 85,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.cluster._bicluster.BaseSpectral.__init__": {
  "lineno": 88,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.cluster._bicluster.BaseSpectral._check_parameters": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._bicluster.BaseSpectral._k_means": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._bicluster.BaseSpectral._svd": {
  "lineno": 123,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.isnan",
   "scipy.sparse.linalg.eigsh",
   "scipy.sparse.linalg.svds"
  ],
  "type": "function"
 },
 "sklearn.cluster._bicluster.BaseSpectral.fit": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "sklearn.cluster._bicluster.SpectralBiclustering": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.cluster._bicluster.SpectralBiclustering.__init__": {
  "lineno": 425,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._bicluster.SpectralBiclustering._check_parameters": {
  "lineno": 441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._bicluster.SpectralBiclustering._fit": {
  "lineno": 470,
  "symbols_in_volume": [
   "numpy.vstack"
  ],
  "type": "function"
 },
 "sklearn.cluster._bicluster.SpectralBiclustering._fit_best_piecewise": {
  "lineno": 509,
  "symbols_in_volume": [
   "numpy.apply_along_axis",
   "numpy.argsort",
   "scipy.linalg.norm"
  ],
  "type": "function"
 },
 "sklearn.cluster._bicluster.SpectralBiclustering._fit_best_piecewise.make_piecewise": {
  "lineno": 517,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._bicluster.SpectralBiclustering._project_and_cluster": {
  "lineno": 527,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._bicluster.SpectralCoclustering": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.cluster._bicluster.SpectralCoclustering.__init__": {
  "lineno": 278,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._bicluster.SpectralCoclustering._fit": {
  "lineno": 290,
  "symbols_in_volume": [
   "numpy.ceil",
   "numpy.log2",
   "numpy.newaxis",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "sklearn.cluster._bicluster._bistochastic_normalize": {
  "lineno": 49,
  "symbols_in_volume": [
   "scipy.linalg.norm",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.cluster._bicluster._log_normalize": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.newaxis",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.cluster._bicluster._scale_normalize": {
  "lineno": 27,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.isnan",
   "numpy.newaxis",
   "numpy.sqrt",
   "numpy.where",
   "scipy.sparse.dia_matrix",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.cluster._birch": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.cluster._birch.Birch": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.cluster._birch.Birch.__init__": {
  "lineno": 433,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._birch.Birch._check_fit": {
  "lineno": 555,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._birch.Birch._fit": {
  "lineno": 461,
  "symbols_in_volume": [
   "numpy.concatenate",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.cluster._birch.Birch._get_leaves": {
  "lineno": 512,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._birch.Birch._global_clustering": {
  "lineno": 607,
  "symbols_in_volume": [
   "numpy.arange",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.cluster._birch.Birch.fit": {
  "lineno": 441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._birch.Birch.partial_fit": {
  "lineno": 528,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._birch.Birch.predict": {
  "lineno": 564,
  "symbols_in_volume": [
   "numpy.argmin"
  ],
  "type": "function"
 },
 "sklearn.cluster._birch.Birch.transform": {
  "lineno": 587,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._birch._CFNode": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.cluster._birch._CFNode.__init__": {
  "lineno": 135,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.cluster._birch._CFNode.append_subcluster": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._birch._CFNode.insert_cf_subcluster": {
  "lineno": 173,
  "symbols_in_volume": [
   "numpy.argmin",
   "numpy.dot"
  ],
  "type": "function"
 },
 "sklearn.cluster._birch._CFNode.update_split_subclusters": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._birch._CFSubcluster": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.cluster._birch._CFSubcluster.__init__": {
  "lineno": 276,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "sklearn.cluster._birch._CFSubcluster.merge_subcluster": {
  "lineno": 295,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "sklearn.cluster._birch._CFSubcluster.radius": {
  "lineno": 313,
  "symbols_in_volume": [
   "math.sqrt",
   "numpy.dot"
  ],
  "type": "function"
 },
 "sklearn.cluster._birch._CFSubcluster.update": {
  "lineno": 288,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "sklearn.cluster._birch._iterate_sparse_X": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.cluster._birch._split_node": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.unravel_index"
  ],
  "type": "function"
 },
 "sklearn.cluster._dbscan": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.cluster._dbscan.DBSCAN": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.cluster._dbscan.DBSCAN.__init__": {
  "lineno": 273,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._dbscan.DBSCAN.fit": {
  "lineno": 285,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.empty",
   "numpy.full",
   "numpy.intp",
   "numpy.sum",
   "numpy.uint8",
   "numpy.where",
   "scipy.sparse.SparseEfficiencyWarning",
   "scipy.sparse.issparse",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.cluster._dbscan.DBSCAN.fit_predict": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._dbscan.dbscan": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._feature_agglomeration": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.cluster._feature_agglomeration.AgglomerationTransform": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.cluster._feature_agglomeration.AgglomerationTransform.inverse_transform": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.cluster._feature_agglomeration.AgglomerationTransform.transform": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bincount",
   "numpy.mean",
   "numpy.unique",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.cluster._kmeans": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.cluster._kmeans.KMeans": {
  "lineno": 649,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.cluster._kmeans.KMeans.__init__": {
  "lineno": 793,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._kmeans.KMeans._check_test_data": {
  "lineno": 810,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._kmeans.KMeans._transform": {
  "lineno": 1060,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._kmeans.KMeans.fit": {
  "lineno": 821,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed",
   "joblib.effective_n_jobs",
   "numpy.argmin",
   "numpy.float32",
   "numpy.float64",
   "numpy.iinfo",
   "numpy.int32",
   "scipy.sparse.issparse",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.cluster._kmeans.KMeans.fit_predict": {
  "lineno": 985,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._kmeans.KMeans.fit_transform": {
  "lineno": 1010,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._kmeans.KMeans.predict": {
  "lineno": 1064,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._kmeans.KMeans.score": {
  "lineno": 1092,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._kmeans.KMeans.transform": {
  "lineno": 1038,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._kmeans.MiniBatchKMeans": {
  "lineno": 1330,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.cluster._kmeans.MiniBatchKMeans.__init__": {
  "lineno": 1471,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._kmeans.MiniBatchKMeans._labels_inertia_minibatch": {
  "lineno": 1640,
  "symbols_in_volume": [
   "numpy.hstack",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.cluster._kmeans.MiniBatchKMeans.fit": {
  "lineno": 1486,
  "symbols_in_volume": [
   "numpy.ascontiguousarray",
   "numpy.ceil",
   "numpy.float32",
   "numpy.float64",
   "numpy.zeros",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.cluster._kmeans.MiniBatchKMeans.partial_fit": {
  "lineno": 1672,
  "symbols_in_volume": [
   "numpy.ascontiguousarray",
   "numpy.float32",
   "numpy.float64",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.cluster._kmeans.MiniBatchKMeans.predict": {
  "lineno": 1742,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._kmeans._check_normalize_sample_weight": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._kmeans._init_centroids": {
  "lineno": 569,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "scipy.sparse.issparse",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.cluster._kmeans._k_init": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.argmin",
   "numpy.clip",
   "numpy.empty",
   "numpy.log",
   "numpy.minimum",
   "numpy.newaxis",
   "numpy.searchsorted",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.cluster._kmeans._kmeans_single_elkan": {
  "lineno": 303,
  "symbols_in_volume": [
   "numpy.ascontiguousarray",
   "numpy.float64",
   "numpy.sum",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.cluster._kmeans._kmeans_single_lloyd": {
  "lineno": 332,
  "symbols_in_volume": [
   "numpy.zeros",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.cluster._kmeans._labels_inertia": {
  "lineno": 509,
  "symbols_in_volume": [
   "numpy.full",
   "numpy.int32",
   "numpy.zeros",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.cluster._kmeans._labels_inertia_precompute_dense": {
  "lineno": 461,
  "symbols_in_volume": [
   "numpy.int32"
  ],
  "type": "function"
 },
 "sklearn.cluster._kmeans._mini_batch_convergence": {
  "lineno": 1264,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._kmeans._mini_batch_step": {
  "lineno": 1120,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.dot",
   "numpy.intp",
   "numpy.min",
   "numpy.newaxis",
   "numpy.sum",
   "numpy.where",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.cluster._kmeans._tolerance": {
  "lineno": 154,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.var",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.cluster._kmeans._validate_center_shape": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._kmeans.k_means": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._mean_shift": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.cluster._mean_shift.MeanShift": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.cluster._mean_shift.MeanShift.__init__": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._mean_shift.MeanShift.fit": {
  "lineno": 359,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed",
   "numpy.array",
   "numpy.bool",
   "numpy.int",
   "numpy.ones",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.cluster._mean_shift.MeanShift.predict": {
  "lineno": 445,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._mean_shift._mean_shift_single_seed": {
  "lineno": 87,
  "symbols_in_volume": [
   "numpy.linalg.norm",
   "numpy.mean"
  ],
  "type": "function"
 },
 "sklearn.cluster._mean_shift.estimate_bandwidth": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.max"
  ],
  "type": "function"
 },
 "sklearn.cluster._mean_shift.get_bin_seeds": {
  "lineno": 190,
  "symbols_in_volume": [
   "collections.defaultdict",
   "numpy.array",
   "numpy.float32",
   "numpy.round",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.cluster._mean_shift.mean_shift": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._optics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.cluster._optics.OPTICS": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.cluster._optics.OPTICS.__init__": {
  "lineno": 207,
  "symbols_in_volume": [
   "numpy.inf"
  ],
  "type": "function"
 },
 "sklearn.cluster._optics.OPTICS.fit": {
  "lineno": 225,
  "symbols_in_volume": [
   "numpy.float"
  ],
  "type": "function"
 },
 "sklearn.cluster._optics._compute_core_distances_": {
  "lineno": 305,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.nan"
  ],
  "type": "function"
 },
 "sklearn.cluster._optics._correct_predecessor": {
  "lineno": 724,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._optics._extend_region": {
  "lineno": 648,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._optics._extract_xi_labels": {
  "lineno": 900,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.full"
  ],
  "type": "function"
 },
 "sklearn.cluster._optics._set_reach_dist": {
  "lineno": 506,
  "symbols_in_volume": [
   "numpy.compress",
   "numpy.maximum",
   "numpy.take",
   "numpy.where"
  ],
  "type": "function"
 },
 "sklearn.cluster._optics._update_filter_sdas": {
  "lineno": 711,
  "symbols_in_volume": [
   "numpy.isinf"
  ],
  "type": "function"
 },
 "sklearn.cluster._optics._validate_size": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._optics._xi_cluster": {
  "lineno": 746,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.flatnonzero",
   "numpy.hstack",
   "numpy.inf",
   "numpy.max"
  ],
  "type": "function"
 },
 "sklearn.cluster._optics.cluster_optics_dbscan": {
  "lineno": 541,
  "symbols_in_volume": [
   "numpy.cumsum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.cluster._optics.cluster_optics_xi": {
  "lineno": 580,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._optics.compute_optics_graph": {
  "lineno": 342,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.argmin",
   "numpy.empty",
   "numpy.inf",
   "numpy.isinf",
   "numpy.where",
   "numpy.zeros",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.cluster._spectral": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.cluster._spectral.SpectralClustering": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.cluster._spectral.SpectralClustering.__init__": {
  "lineno": 437,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._spectral.SpectralClustering._pairwise": {
  "lineno": 547,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._spectral.SpectralClustering.fit": {
  "lineno": 456,
  "symbols_in_volume": [
   "numpy.float64",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.cluster._spectral.SpectralClustering.fit_predict": {
  "lineno": 523,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster._spectral.discretize": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.arange",
   "numpy.dot",
   "numpy.finfo",
   "numpy.linalg.norm",
   "numpy.linalg.svd",
   "numpy.newaxis",
   "numpy.ones",
   "numpy.sign",
   "numpy.sqrt",
   "numpy.zeros",
   "scipy.linalg.LinAlgError",
   "scipy.sparse.csc_matrix"
  ],
  "type": "function"
 },
 "sklearn.cluster._spectral.spectral_clustering": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster.affinity_propagation_": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.cluster.affinity_propagation_.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster.bicluster": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.cluster.bicluster.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster.birch": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.cluster.birch.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster.dbscan_": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.cluster.dbscan_.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster.hierarchical": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.cluster.hierarchical.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster.k_means_": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.cluster.k_means_.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster.mean_shift_": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.cluster.mean_shift_.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster.optics_": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.cluster.optics_.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster.setup": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.distutils.core.setup"
  ],
  "type": "module"
 },
 "sklearn.cluster.setup.configuration": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.Configuration",
   "numpy.get_include",
   "os.name"
  ],
  "type": "function"
 },
 "sklearn.cluster.spectral": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.cluster.spectral.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.cluster.tests.common": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.cluster.tests.common.generate_clustered_data": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "numpy.r_",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_affinity_propagation": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.datasets.make_blobs"
  ],
  "type": "module"
 },
 "sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.median",
   "numpy.unique",
   "pytest.raises",
   "scipy.sparse.csr_matrix",
   "sklearn.cluster.AffinityPropagation",
   "sklearn.cluster.affinity_propagation",
   "sklearn.metrics.euclidean_distances",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation_convergence_warning_dense_sparse": {
  "lineno": 184,
  "symbols_in_volume": [
   "numpy.int",
   "numpy.random.RandomState",
   "numpy.zeros",
   "pytest.mark.parametrize",
   "pytest.warns",
   "scipy.sparse.csr_matrix",
   "sklearn.cluster.AffinityPropagation",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation_equal_mutual_similarities": {
  "lineno": 110,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.cluster.affinity_propagation",
   "sklearn.metrics.euclidean_distances",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_no_warnings",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation_fit_non_convergence": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "sklearn.cluster.AffinityPropagation",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation_non_convergence_regressiontest": {
  "lineno": 155,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.cluster.AffinityPropagation",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation_predict": {
  "lineno": 73,
  "symbols_in_volume": [
   "sklearn.cluster.AffinityPropagation",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation_predict_error": {
  "lineno": 81,
  "symbols_in_volume": [
   "numpy.dot",
   "pytest.raises",
   "sklearn.cluster.AffinityPropagation"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation_predict_non_convergence": {
  "lineno": 139,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.cluster.AffinityPropagation",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_affinity_propagation.test_equal_similarities_and_preferences": {
  "lineno": 163,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.cluster._affinity_propagation._equal_similarities_and_preferences",
   "sklearn.metrics.euclidean_distances"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.cluster.tests.test_bicluster.MockBiclustering": {
  "lineno": 27,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.BiclusterMixin"
  ],
  "type": "class"
 },
 "sklearn.cluster.tests.test_bicluster.MockBiclustering.__init__": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.MockBiclustering.get_indices": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.where"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster._do_bistochastic_test": {
  "lineno": 148,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster._do_scale_test": {
  "lineno": 135,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.tile",
   "scipy.sparse.issparse",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster._test_shape_indices": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_bistochastic_normalize": {
  "lineno": 166,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.issparse",
   "sklearn.cluster._bicluster._bistochastic_normalize"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_errors": {
  "lineno": 235,
  "symbols_in_volume": [
   "numpy.arange",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.cluster.SpectralBiclustering"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_fit_best_piecewise": {
  "lineno": 185,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.cluster.SpectralBiclustering",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_get_submatrix": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.arange",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.issparse",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_log_normalize": {
  "lineno": 176,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.cluster._bicluster._log_normalize"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_perfect_checkerboard": {
  "lineno": 209,
  "symbols_in_volume": [
   "sklearn.cluster.SpectralBiclustering",
   "sklearn.datasets.make_checkerboard",
   "sklearn.metrics.consensus_score",
   "sklearn.utils._testing.SkipTest"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_project_and_cluster": {
  "lineno": 194,
  "symbols_in_volume": [
   "numpy.array",
   "scipy.sparse.csr_matrix",
   "sklearn.cluster.SpectralBiclustering",
   "sklearn.metrics.v_measure_score",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_scale_normalize": {
  "lineno": 156,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.issparse",
   "sklearn.cluster._bicluster._scale_normalize"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_spectral_biclustering": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.repeat",
   "pytest.raises",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.issparse",
   "sklearn.cluster.SpectralBiclustering",
   "sklearn.datasets.make_checkerboard",
   "sklearn.metrics.consensus_score",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_spectral_coclustering": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.where",
   "scipy.sparse.csr_matrix",
   "sklearn.cluster.SpectralCoclustering",
   "sklearn.datasets.make_biclusters",
   "sklearn.metrics.consensus_score",
   "sklearn.model_selection.ParameterGrid",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_bicluster.test_wrong_shape": {
  "lineno": 254,
  "symbols_in_volume": [
   "numpy.arange",
   "pytest.raises",
   "sklearn.cluster.SpectralBiclustering"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.cluster.tests.test_birch.check_branching_factor": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.check_threshold": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.test_birch_predict": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.RandomState",
   "sklearn.cluster.Birch",
   "sklearn.cluster.tests.common.generate_clustered_data",
   "sklearn.metrics.pairwise_distances_argmin",
   "sklearn.metrics.v_measure_score",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.test_branching_factor": {
  "lineno": 121,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.cluster.Birch",
   "sklearn.datasets.make_blobs"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.test_n_clusters": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.unique",
   "pytest.raises",
   "sklearn.cluster.AgglomerativeClustering",
   "sklearn.cluster.Birch",
   "sklearn.datasets.make_blobs",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.linear_model.ElasticNet",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.test_n_samples_leaves_roots": {
  "lineno": 23,
  "symbols_in_volume": [
   "sklearn.cluster.Birch",
   "sklearn.datasets.make_blobs"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.test_partial_fit": {
  "lineno": 35,
  "symbols_in_volume": [
   "sklearn.cluster.Birch",
   "sklearn.datasets.make_blobs",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.test_sparse_X": {
  "lineno": 98,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "sklearn.cluster.Birch",
   "sklearn.datasets.make_blobs",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_birch.test_threshold": {
  "lineno": 152,
  "symbols_in_volume": [
   "sklearn.cluster.Birch",
   "sklearn.datasets.make_blobs"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.cluster.tests.common.generate_clustered_data"
  ],
  "type": "module"
 },
 "sklearn.cluster.tests.test_dbscan.test_boundaries": {
  "lineno": 258,
  "symbols_in_volume": [
   "sklearn.cluster.dbscan"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_badargs": {
  "lineno": 241,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.cluster.dbscan"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_balltree": {
  "lineno": 196,
  "symbols_in_volume": [
   "sklearn.cluster.DBSCAN",
   "sklearn.cluster.dbscan",
   "sklearn.metrics.pairwise.pairwise_distances"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_callable": {
  "lineno": 142,
  "symbols_in_volume": [
   "scipy.spatial.distance.euclidean",
   "sklearn.cluster.DBSCAN",
   "sklearn.cluster.dbscan"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_core_samples_toy": {
  "lineno": 335,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.full",
   "pytest.mark.parametrize",
   "sklearn.cluster.dbscan",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_feature": {
  "lineno": 49,
  "symbols_in_volume": [
   "sklearn.cluster.DBSCAN",
   "sklearn.cluster.dbscan"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_input_not_modified": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "sklearn.cluster.dbscan",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_metric_params": {
  "lineno": 168,
  "symbols_in_volume": [
   "sklearn.cluster.DBSCAN",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_no_core_samples": {
  "lineno": 130,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.random.RandomState",
   "scipy.sparse.csr_matrix",
   "sklearn.cluster.DBSCAN",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_precomputed_metric_with_degenerate_input_arrays": {
  "lineno": 369,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.zeros",
   "sklearn.cluster.DBSCAN"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_precomputed_metric_with_initial_rows_zero": {
  "lineno": 381,
  "symbols_in_volume": [
   "numpy.array",
   "scipy.sparse.csr_matrix",
   "sklearn.cluster.DBSCAN",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_similarity": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.max",
   "scipy.spatial.distance.pdist",
   "scipy.spatial.distance.squareform",
   "sklearn.cluster.DBSCAN",
   "sklearn.cluster.dbscan"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_sparse": {
  "lineno": 72,
  "symbols_in_volume": [
   "scipy.sparse.lil_matrix",
   "sklearn.cluster.dbscan",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_sparse_precomputed": {
  "lineno": 80,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.cluster.dbscan",
   "sklearn.metrics.pairwise.pairwise_distances",
   "sklearn.neighbors.NearestNeighbors",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_dbscan_sparse_precomputed_different_eps": {
  "lineno": 98,
  "symbols_in_volume": [
   "sklearn.cluster.dbscan",
   "sklearn.neighbors.NearestNeighbors",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_input_validation": {
  "lineno": 235,
  "symbols_in_volume": [
   "sklearn.cluster.DBSCAN"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_pickle": {
  "lineno": 252,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "sklearn.cluster.DBSCAN"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_dbscan.test_weighted_dbscan": {
  "lineno": 269,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.repeat",
   "numpy.zeros",
   "pytest.raises",
   "sklearn.cluster.DBSCAN",
   "sklearn.cluster.dbscan",
   "sklearn.metrics.pairwise.pairwise_distances",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_feature_agglomeration": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.cluster.tests.test_feature_agglomeration.test_feature_agglomeration": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.mean",
   "numpy.median",
   "numpy.size",
   "numpy.unique",
   "sklearn.cluster.FeatureAgglomeration",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_no_warnings"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.cluster.tests.test_hierarchical.assess_same_labelling": {
  "lineno": 272,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dot",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_affinity_passed_to_fix_connectivity": {
  "lineno": 589,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray",
   "numpy.random.RandomState",
   "sklearn.cluster._agglomerative.linkage_tree",
   "sklearn.feature_extraction.image.grid_to_graph"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_affinity_passed_to_fix_connectivity.FakeAffinity": {
  "lineno": 601,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.cluster.tests.test_hierarchical.test_affinity_passed_to_fix_connectivity.FakeAffinity.__init__": {
  "lineno": 602,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_affinity_passed_to_fix_connectivity.FakeAffinity.increment": {
  "lineno": 605,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_agg_n_clusters": {
  "lineno": 577,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.cluster.AgglomerativeClustering",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_agglomerative_clustering": {
  "lineno": 145,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.size",
   "numpy.unique",
   "pytest.raises",
   "scipy.sparse.lil_matrix",
   "shutil.rmtree",
   "sklearn.cluster.AgglomerativeClustering",
   "sklearn.feature_extraction.image.grid_to_graph",
   "sklearn.metrics.cluster.normalized_mutual_info_score",
   "sklearn.metrics.pairwise.PAIRED_DISTANCES.keys",
   "sklearn.metrics.pairwise.pairwise_distances",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_equal",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_agglomerative_clustering_with_distance_threshold": {
  "lineno": 616,
  "symbols_in_volume": [
   "numpy.array_equiv",
   "numpy.bool",
   "numpy.count_nonzero",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.unique",
   "pytest.mark.parametrize",
   "sklearn.cluster.AgglomerativeClustering",
   "sklearn.cluster._agglomerative._TREE_BUILDERS",
   "sklearn.cluster._agglomerative._hc_cut",
   "sklearn.feature_extraction.image.grid_to_graph"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_agglomerative_clustering_with_distance_threshold_edge_case": {
  "lineno": 697,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.cluster.AgglomerativeClustering",
   "sklearn.metrics.cluster.adjusted_rand_score"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_agglomerative_clustering_wrong_arg_memory": {
  "lineno": 124,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.raises",
   "sklearn.cluster.AgglomerativeClustering"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_cluster_distances_with_distance_threshold": {
  "lineno": 671,
  "symbols_in_volume": [
   "numpy.fill_diagonal",
   "numpy.inf",
   "numpy.random.RandomState",
   "numpy.unique",
   "sklearn.cluster.AgglomerativeClustering",
   "sklearn.metrics.pairwise.pairwise_distances"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_compute_full_tree": {
  "lineno": 538,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.cluster.AgglomerativeClustering",
   "sklearn.neighbors.kneighbors_graph"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_connectivity_callable": {
  "lineno": 513,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.random.RandomState",
   "sklearn.cluster.AgglomerativeClustering",
   "sklearn.neighbors.kneighbors_graph",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_connectivity_fixing_non_lil": {
  "lineno": 484,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.cluster.AgglomerativeClustering",
   "sklearn.feature_extraction.image.grid_to_graph",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_connectivity_ignores_diagonal": {
  "lineno": 526,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.cluster.AgglomerativeClustering",
   "sklearn.neighbors.kneighbors_graph",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_connectivity_propagation": {
  "lineno": 341,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.cluster.AgglomerativeClustering",
   "sklearn.neighbors.kneighbors_graph"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_dist_threshold_invalid_parameters": {
  "lineno": 712,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.cluster.AgglomerativeClustering"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_height_linkage_tree": {
  "lineno": 112,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.ones",
   "numpy.random.RandomState",
   "sklearn.cluster._agglomerative._TREE_BUILDERS.values",
   "sklearn.feature_extraction.image.grid_to_graph"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_identical_points": {
  "lineno": 318,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.cluster.AgglomerativeClustering",
   "sklearn.cluster._agglomerative._fix_connectivity",
   "sklearn.metrics.cluster.normalized_mutual_info_score",
   "sklearn.neighbors.kneighbors_graph",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_int_float_dict": {
  "lineno": 496,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.full",
   "numpy.intp",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.unique",
   "sklearn.cluster._hierarchical_fast.average_merge",
   "sklearn.cluster._hierarchical_fast.max_merge",
   "sklearn.utils._fast_dict.IntFloatDict"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_linkage_misc": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.random.RandomState",
   "pytest.raises",
   "sklearn.cluster.AgglomerativeClustering",
   "sklearn.cluster.FeatureAgglomeration",
   "sklearn.cluster._agglomerative.linkage_tree",
   "sklearn.metrics.pairwise.cosine_distances",
   "sklearn.metrics.pairwise.manhattan_distances",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_n_components": {
  "lineno": 565,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.random.RandomState",
   "sklearn.cluster._agglomerative._TREE_BUILDERS.values",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_n_components_deprecation": {
  "lineno": 729,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.warns",
   "sklearn.cluster.AgglomerativeClustering"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_scikit_vs_scipy": {
  "lineno": 284,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int",
   "numpy.newaxis",
   "numpy.ones",
   "numpy.random.RandomState",
   "pytest.raises",
   "scipy.cluster.hierarchy.linkage",
   "sklearn.cluster._agglomerative._TREE_BUILDERS",
   "sklearn.cluster._agglomerative._TREE_BUILDERS.keys",
   "sklearn.cluster._agglomerative._hc_cut",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_single_linkage_clustering": {
  "lineno": 256,
  "symbols_in_volume": [
   "sklearn.cluster.AgglomerativeClustering",
   "sklearn.datasets.make_circles",
   "sklearn.datasets.make_moons",
   "sklearn.metrics.cluster.normalized_mutual_info_score",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_small_distance_threshold": {
  "lineno": 653,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.fill_diagonal",
   "numpy.inf",
   "numpy.random.RandomState",
   "sklearn.cluster.AgglomerativeClustering",
   "sklearn.metrics.pairwise.pairwise_distances"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_structured_linkage_tree": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.ones",
   "numpy.random.RandomState",
   "pytest.raises",
   "sklearn.cluster._agglomerative._TREE_BUILDERS.values",
   "sklearn.feature_extraction.image.grid_to_graph"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_unstructured_linkage_tree": {
  "lineno": 89,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.cluster._agglomerative._TREE_BUILDERS.values",
   "sklearn.cluster.ward_tree",
   "sklearn.utils._testing.assert_warns",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_ward_agglomeration": {
  "lineno": 235,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.size",
   "numpy.unique",
   "pytest.raises",
   "sklearn.cluster.FeatureAgglomeration",
   "sklearn.feature_extraction.image.grid_to_graph",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_ward_linkage_tree_return_distance": {
  "lineno": 377,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.newaxis",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.shape",
   "sklearn.cluster._agglomerative.linkage_tree",
   "sklearn.cluster.ward_tree",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_ward_tree_children_order": {
  "lineno": 357,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.newaxis",
   "numpy.ones",
   "numpy.random.RandomState",
   "sklearn.cluster.ward_tree",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_hierarchical.test_zero_cosine_linkage_tree": {
  "lineno": 136,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.cluster._agglomerative.linkage_tree",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array",
   "scipy.sparse.csr_matrix",
   "sklearn.datasets.make_blobs"
  ],
  "type": "module"
 },
 "sklearn.cluster.tests.test_k_means._check_fitted_model": {
  "lineno": 198,
  "symbols_in_volume": [
   "numpy.unique",
   "sklearn.metrics.cluster.v_measure_score",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means._sort_centers": {
  "lineno": 866,
  "symbols_in_volume": [
   "numpy.sort"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_check_normalize_sample_weight": {
  "lineno": 930,
  "symbols_in_volume": [
   "sklearn.cluster._kmeans._check_normalize_sample_weight",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils.validation._num_samples"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_elkan_results": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.approx",
   "pytest.mark.parametrize",
   "sklearn.cluster.KMeans",
   "sklearn.datasets.make_blobs",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_fit_transform": {
  "lineno": 668,
  "symbols_in_volume": [
   "sklearn.cluster.KMeans",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_float_precision": {
  "lineno": 760,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "sklearn.cluster.KMeans",
   "sklearn.cluster.MiniBatchKMeans",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_full_vs_elkan": {
  "lineno": 682,
  "symbols_in_volume": [
   "sklearn.cluster.KMeans",
   "sklearn.metrics.cluster.homogeneity_score"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_int_input": {
  "lineno": 626,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "numpy.ones",
   "scipy.sparse.csr_matrix",
   "sklearn.cluster.KMeans",
   "sklearn.cluster.MiniBatchKMeans",
   "sklearn.metrics.cluster.v_measure_score",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_iter_attribute": {
  "lineno": 939,
  "symbols_in_volume": [
   "numpy.random.rand",
   "sklearn.cluster.KMeans"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_copyx": {
  "lineno": 554,
  "symbols_in_volume": [
   "sklearn.cluster.KMeans",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_empty_cluster_relocated": {
  "lineno": 947,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.cluster.KMeans",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_explicit_init_shape": {
  "lineno": 287,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.cluster.KMeans",
   "sklearn.cluster.MiniBatchKMeans"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_fit_predict": {
  "lineno": 330,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.float32",
   "numpy.float64",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "pytest.xfail",
   "scipy.sparse.csr_matrix",
   "sklearn.cluster.KMeans",
   "sklearn.datasets.make_blobs",
   "sklearn.utils._testing.assert_array_equal",
   "sys.platform"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_fortran_aligned_data": {
  "lineno": 318,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asfortranarray",
   "sklearn.cluster.KMeans",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_function": {
  "lineno": 707,
  "symbols_in_volume": [
   "io.StringIO",
   "numpy.unique",
   "pytest.raises",
   "sklearn.cluster.k_means",
   "sklearn.metrics.cluster.v_measure_score",
   "sklearn.utils._testing.assert_raise_message",
   "sklearn.utils._testing.assert_warns",
   "sys.stdout"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_init": {
  "lineno": 267,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.cluster.KMeans"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_init_centers": {
  "lineno": 802,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "numpy.may_share_memory",
   "sklearn.cluster.KMeans",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_init_fitted_centers": {
  "lineno": 817,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.cluster.KMeans",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_invalid_init": {
  "lineno": 547,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.cluster.KMeans",
   "sklearn.cluster.MiniBatchKMeans"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_n_init": {
  "lineno": 275,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.raises",
   "sklearn.cluster.KMeans"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_new_centers": {
  "lineno": 216,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "numpy.unique",
   "scipy.sparse.coo_matrix",
   "sklearn.cluster.KMeans"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_non_collapsed": {
  "lineno": 565,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linalg.norm",
   "numpy.unique",
   "sklearn.cluster.KMeans"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_plus_plus_init_2_jobs": {
  "lineno": 240,
  "symbols_in_volume": [
   "sklearn.cluster.KMeans",
   "sklearn.utils._testing.if_safe_multiprocessing_with_blas"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_plus_plus_init_not_precomputed": {
  "lineno": 255,
  "symbols_in_volume": [
   "sklearn.cluster.KMeans"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_precompute_distances_flag": {
  "lineno": 247,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.cluster.KMeans"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_k_means_random_init_not_precomputed": {
  "lineno": 261,
  "symbols_in_volume": [
   "sklearn.cluster.KMeans"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_kmeans_results": {
  "lineno": 45,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "sklearn.cluster.KMeans",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_labels_assignment_and_inertia": {
  "lineno": 98,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.full",
   "numpy.infty",
   "numpy.int",
   "numpy.minimum",
   "numpy.random.RandomState",
   "numpy.sum",
   "sklearn.cluster._kmeans._labels_inertia",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils.extmath.row_norms"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_less_centers_than_unique_points": {
  "lineno": 846,
  "symbols_in_volume": [
   "numpy.asarray",
   "sklearn.cluster.KMeans",
   "sklearn.cluster.k_means",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_max_iter_error": {
  "lineno": 754,
  "symbols_in_volume": [
   "sklearn.cluster.KMeans",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_mb_kmeans_verbose": {
  "lineno": 368,
  "symbols_in_volume": [
   "io.StringIO",
   "sklearn.cluster.MiniBatchKMeans",
   "sys.stdout"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_mini_batch_k_means_random_init_partial_fit": {
  "lineno": 512,
  "symbols_in_volume": [
   "numpy.array_split",
   "sklearn.cluster.MiniBatchKMeans",
   "sklearn.metrics.cluster.v_measure_score"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_default_init_size": {
  "lineno": 524,
  "symbols_in_volume": [
   "sklearn.cluster.MiniBatchKMeans"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_init_with_large_k": {
  "lineno": 379,
  "symbols_in_volume": [
   "sklearn.cluster.MiniBatchKMeans",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_k_means_init": {
  "lineno": 392,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.cluster.MiniBatchKMeans"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_k_means_init_multiple_runs_with_explicit_centers": {
  "lineno": 386,
  "symbols_in_volume": [
   "sklearn.cluster.MiniBatchKMeans",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_kmeans_partial_fit_int_data": {
  "lineno": 961,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int",
   "sklearn.cluster.MiniBatchKMeans"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_reassign": {
  "lineno": 433,
  "symbols_in_volume": [
   "io.StringIO",
   "numpy.double",
   "numpy.ones",
   "numpy.zeros",
   "sklearn.cluster.MiniBatchKMeans",
   "sklearn.cluster._kmeans._mini_batch_step",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sys.stdout"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_sensible_reassign_fit": {
  "lineno": 401,
  "symbols_in_volume": [
   "sklearn.cluster.MiniBatchKMeans",
   "sklearn.datasets.make_blobs"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_sensible_reassign_partial_fit": {
  "lineno": 422,
  "symbols_in_volume": [
   "sklearn.cluster.MiniBatchKMeans",
   "sklearn.datasets.make_blobs"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_set_init_size": {
  "lineno": 538,
  "symbols_in_volume": [
   "sklearn.cluster.MiniBatchKMeans"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_tol": {
  "lineno": 532,
  "symbols_in_volume": [
   "sklearn.cluster.MiniBatchKMeans"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_update_consistency": {
  "lineno": 131,
  "symbols_in_volume": [
   "numpy.double",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.sum",
   "numpy.zeros",
   "sklearn.cluster._kmeans._labels_inertia",
   "sklearn.cluster._kmeans._mini_batch_step",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils.extmath.row_norms"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_minibatch_with_many_reassignments": {
  "lineno": 478,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.cluster.MiniBatchKMeans"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_n_init": {
  "lineno": 689,
  "symbols_in_volume": [
   "numpy.zeros",
   "sklearn.cluster.KMeans"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_predict": {
  "lineno": 597,
  "symbols_in_volume": [
   "numpy.arange",
   "pytest.mark.parametrize",
   "sklearn.cluster.KMeans",
   "sklearn.cluster.MiniBatchKMeans",
   "sklearn.cluster.k_means",
   "sklearn.cluster.k_means.cluster_centers_",
   "sklearn.cluster.k_means.fit_predict",
   "sklearn.cluster.k_means.labels_",
   "sklearn.cluster.k_means.predict",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_predict_equal_labels": {
  "lineno": 674,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.cluster.KMeans",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_predict_minibatch_dense_sparse": {
  "lineno": 616,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.cluster.MiniBatchKMeans",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_result_of_kmeans_equal_in_diff_n_jobs": {
  "lineno": 969,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.cluster.KMeans",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_sample_weight_length": {
  "lineno": 921,
  "symbols_in_volume": [
   "numpy.ones",
   "pytest.raises",
   "sklearn.cluster.KMeans"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_scaled_weights": {
  "lineno": 908,
  "symbols_in_volume": [
   "numpy.ones",
   "sklearn.base.clone",
   "sklearn.cluster.KMeans",
   "sklearn.cluster.MiniBatchKMeans",
   "sklearn.metrics.cluster.v_measure_score",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_score": {
  "lineno": 585,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.cluster.KMeans"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_sparse_mb_k_means_callable_init": {
  "lineno": 495,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.cluster.MiniBatchKMeans"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_sparse_mb_k_means_callable_init.test_init": {
  "lineno": 497,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_sparse_validate_centers": {
  "lineno": 828,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.cluster.KMeans",
   "sklearn.datasets.load_iris"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_transform": {
  "lineno": 656,
  "symbols_in_volume": [
   "sklearn.cluster.KMeans"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_unit_weights_vs_no_weights": {
  "lineno": 895,
  "symbols_in_volume": [
   "numpy.ones",
   "sklearn.base.clone",
   "sklearn.cluster.KMeans",
   "sklearn.cluster.MiniBatchKMeans",
   "sklearn.metrics.cluster.v_measure_score",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_weighted_vs_repeated": {
  "lineno": 870,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.repeat",
   "sklearn.base.clone",
   "sklearn.cluster.KMeans",
   "sklearn.cluster.MiniBatchKMeans",
   "sklearn.metrics.cluster.v_measure_score",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_k_means.test_x_squared_norms_init_centroids": {
  "lineno": 742,
  "symbols_in_volume": [
   "numpy.sum",
   "sklearn.cluster._kmeans._init_centroids",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.datasets.make_blobs"
  ],
  "type": "module"
 },
 "sklearn.cluster.tests.test_mean_shift.test_bin_seeds": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.cluster.get_bin_seeds",
   "sklearn.datasets.make_blobs",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_cluster_intensity_tie": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.cluster.MeanShift",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_estimate_bandwidth": {
  "lineno": 29,
  "symbols_in_volume": [
   "sklearn.cluster.estimate_bandwidth"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_estimate_bandwidth_1sample": {
  "lineno": 35,
  "symbols_in_volume": [
   "pytest.approx",
   "sklearn.cluster.estimate_bandwidth"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_estimate_bandwidth_with_sparse_matrix": {
  "lineno": 70,
  "symbols_in_volume": [
   "scipy.sparse.lil_matrix",
   "sklearn.cluster.estimate_bandwidth",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_max_iter": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.allclose",
   "pytest.mark.parametrize",
   "sklearn.cluster.MeanShift",
   "sklearn.cluster.mean_shift"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_mean_shift": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.unique",
   "pytest.mark.parametrize",
   "sklearn.cluster.MeanShift",
   "sklearn.cluster.mean_shift"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_mean_shift_negative_bandwidth": {
  "lineno": 61,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.cluster.MeanShift"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_meanshift_all_orphans": {
  "lineno": 100,
  "symbols_in_volume": [
   "sklearn.cluster.MeanShift",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_meanshift_predict": {
  "lineno": 92,
  "symbols_in_volume": [
   "sklearn.cluster.MeanShift",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_parallel": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.cluster.MeanShift",
   "sklearn.datasets.make_blobs",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_mean_shift.test_unfitted": {
  "lineno": 107,
  "symbols_in_volume": [
   "sklearn.cluster.MeanShift"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.vstack"
  ],
  "type": "module"
 },
 "sklearn.cluster.tests.test_optics.test_bad_extract": {
  "lineno": 187,
  "symbols_in_volume": [
   "sklearn.cluster.OPTICS",
   "sklearn.datasets.make_blobs",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_bad_reachability": {
  "lineno": 201,
  "symbols_in_volume": [
   "pytest.warns",
   "sklearn.cluster.OPTICS",
   "sklearn.datasets.make_blobs"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_close_extract": {
  "lineno": 212,
  "symbols_in_volume": [
   "sklearn.cluster.OPTICS",
   "sklearn.datasets.make_blobs"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_cluster_hierarchy_": {
  "lineno": 133,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.RandomState",
   "numpy.sum",
   "numpy.vstack",
   "sklearn.cluster.OPTICS",
   "sklearn.utils.shuffle"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_compare_to_ELKI": {
  "lineno": 317,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "numpy.where",
   "sklearn.cluster.OPTICS",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_correct_number_of_clusters": {
  "lineno": 147,
  "symbols_in_volume": [
   "sklearn.cluster.OPTICS",
   "sklearn.cluster.tests.common.generate_clustered_data"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_dbscan_optics_parity": {
  "lineno": 226,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.round",
   "numpy.sum",
   "pytest.mark.parametrize",
   "sklearn.cluster.DBSCAN",
   "sklearn.cluster.OPTICS",
   "sklearn.datasets.make_blobs",
   "sklearn.metrics.cluster.contingency_matrix"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_extend_downward": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "pytest.mark.parametrize",
   "sklearn.cluster._optics._extend_region"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_extend_upward": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "pytest.mark.parametrize",
   "sklearn.cluster._optics._extend_region"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_extract_dbscan": {
  "lineno": 405,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.sort",
   "numpy.unique",
   "numpy.vstack",
   "sklearn.cluster.OPTICS",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_extract_xi": {
  "lineno": 80,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "numpy.r_",
   "numpy.random.RandomState",
   "numpy.vstack",
   "sklearn.cluster.OPTICS",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils.shuffle"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_min_cluster_size": {
  "lineno": 280,
  "symbols_in_volume": [
   "numpy.bincount",
   "pytest.mark.parametrize",
   "sklearn.cluster.OPTICS",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_min_cluster_size_invalid": {
  "lineno": 294,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.cluster.OPTICS"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_min_cluster_size_invalid2": {
  "lineno": 301,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.cluster.OPTICS"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_min_samples_edge_case": {
  "lineno": 253,
  "symbols_in_volume": [
   "numpy.r_",
   "numpy.vstack",
   "pytest.warns",
   "sklearn.cluster.OPTICS",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_minimum_number_of_sample_check": {
  "lineno": 175,
  "symbols_in_volume": [
   "sklearn.cluster.OPTICS",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_precomputed_dists": {
  "lineno": 420,
  "symbols_in_volume": [
   "sklearn.cluster.OPTICS",
   "sklearn.metrics.pairwise.pairwise_distances",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_processing_order": {
  "lineno": 307,
  "symbols_in_volume": [
   "numpy.inf",
   "sklearn.cluster.OPTICS",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_the_extract_xi_labels": {
  "lineno": 67,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.cluster._optics._extract_xi_labels",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_optics.test_wrong_cluster_method": {
  "lineno": 399,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.cluster.OPTICS"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.cluster.tests.test_spectral.test_affinities": {
  "lineno": 125,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.cluster.SpectralClustering",
   "sklearn.datasets.make_blobs",
   "sklearn.metrics.adjusted_rand_score",
   "sklearn.metrics.pairwise.kernel_metrics",
   "sklearn.utils._testing.assert_warns_message",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral.test_affinities.histogram": {
  "lineno": 158,
  "symbols_in_volume": [
   "numpy.minimum"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral.test_discretize": {
  "lineno": 173,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.float",
   "numpy.ones",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "scipy.sparse.coo_matrix",
   "sklearn.cluster._spectral.discretize",
   "sklearn.metrics.adjusted_rand_score"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral.test_n_components": {
  "lineno": 233,
  "symbols_in_volume": [
   "numpy.array_equal",
   "sklearn.cluster.SpectralClustering",
   "sklearn.datasets.make_blobs",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral.test_precomputed_nearest_neighbors_filtering": {
  "lineno": 106,
  "symbols_in_volume": [
   "sklearn.cluster.SpectralClustering",
   "sklearn.datasets.make_blobs",
   "sklearn.neighbors.NearestNeighbors",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral.test_spectral_clustering": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.array",
   "pickle.dumps",
   "pickle.loads",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "sklearn.cluster.SpectralClustering",
   "sklearn.metrics.adjusted_rand_score",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral.test_spectral_clustering_sparse": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.maximum",
   "scipy.sparse.coo_matrix",
   "sklearn.cluster.SpectralClustering",
   "sklearn.datasets.make_blobs",
   "sklearn.metrics.adjusted_rand_score",
   "sklearn.metrics.pairwise.rbf_kernel"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral.test_spectral_clustering_with_arpack_amg_solvers": {
  "lineno": 196,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.indices",
   "numpy.unique",
   "pytest.mark.filterwarnings",
   "pytest.raises",
   "sklearn.cluster.spectral_clustering",
   "sklearn.feature_extraction.img_to_graph",
   "sklearn.metrics.adjusted_rand_score"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral.test_spectral_unknown_assign_labels": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.max",
   "pytest.raises",
   "scipy.sparse.coo_matrix",
   "sklearn.cluster.spectral_clustering",
   "sklearn.datasets.make_blobs",
   "sklearn.metrics.pairwise_distances"
  ],
  "type": "function"
 },
 "sklearn.cluster.tests.test_spectral.test_spectral_unknown_mode": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.max",
   "pytest.raises",
   "scipy.sparse.coo_matrix",
   "sklearn.cluster.spectral_clustering",
   "sklearn.datasets.make_blobs",
   "sklearn.metrics.pairwise_distances"
  ],
  "type": "function"
 },
 "sklearn.compose": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.compose._column_transformer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.compose._column_transformer.ColumnTransformer": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.compose._column_transformer.ColumnTransformer.__init__": {
  "lineno": 174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose._column_transformer.ColumnTransformer._fit_transform": {
  "lineno": 437,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed"
  ],
  "type": "function"
 },
 "sklearn.compose._column_transformer.ColumnTransformer._hstack": {
  "lineno": 597,
  "symbols_in_volume": [
   "numpy.hstack",
   "scipy.sparse.hstack",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.compose._column_transformer.ColumnTransformer._iter": {
  "lineno": 232,
  "symbols_in_volume": [
   "itertools.chain"
  ],
  "type": "function"
 },
 "sklearn.compose._column_transformer.ColumnTransformer._log_message": {
  "lineno": 432,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose._column_transformer.ColumnTransformer._transformers": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose._column_transformer.ColumnTransformer._update_fitted_transformers": {
  "lineno": 368,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose._column_transformer.ColumnTransformer._validate_column_callables": {
  "lineno": 289,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose._column_transformer.ColumnTransformer._validate_features": {
  "lineno": 404,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.asarray",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.compose._column_transformer.ColumnTransformer._validate_output": {
  "lineno": 391,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose._column_transformer.ColumnTransformer._validate_remainder": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose._column_transformer.ColumnTransformer._validate_transformers": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose._column_transformer.ColumnTransformer.fit": {
  "lineno": 464,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose._column_transformer.ColumnTransformer.fit_transform": {
  "lineno": 487,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.zeros",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.compose._column_transformer.ColumnTransformer.get_feature_names": {
  "lineno": 343,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose._column_transformer.ColumnTransformer.get_params": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose._column_transformer.ColumnTransformer.named_transformers_": {
  "lineno": 330,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose._column_transformer.ColumnTransformer.set_params": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose._column_transformer.ColumnTransformer.transform": {
  "lineno": 542,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.compose._column_transformer._check_X": {
  "lineno": 626,
  "symbols_in_volume": [
   "numpy.object",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.compose._column_transformer._get_transformer_list": {
  "lineno": 647,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose._column_transformer._is_empty_column_selection": {
  "lineno": 633,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.issubdtype"
  ],
  "type": "function"
 },
 "sklearn.compose._column_transformer._is_negative_indexing": {
  "lineno": 759,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "sklearn.compose._column_transformer._is_negative_indexing.is_neg": {
  "lineno": 761,
  "symbols_in_volume": [
   "numbers.Integral"
  ],
  "type": "function"
 },
 "sklearn.compose._column_transformer.make_column_selector": {
  "lineno": 769,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.compose._column_transformer.make_column_selector.__call__": {
  "lineno": 828,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose._column_transformer.make_column_selector.__init__": {
  "lineno": 823,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose._column_transformer.make_column_transformer": {
  "lineno": 659,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose._target": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.compose._target.TransformedTargetRegressor": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.compose._target.TransformedTargetRegressor.__init__": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose._target.TransformedTargetRegressor._fit_transformer": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.allclose",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.compose._target.TransformedTargetRegressor._more_tags": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose._target.TransformedTargetRegressor.fit": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose._target.TransformedTargetRegressor.predict": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.compose.tests.test_column_transformer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.compose.tests.test_column_transformer.DoubleTrans": {
  "lineno": 42,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.compose.tests.test_column_transformer.DoubleTrans.fit": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.DoubleTrans.transform": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.SparseMatrixTrans": {
  "lineno": 50,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.compose.tests.test_column_transformer.SparseMatrixTrans.fit": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.SparseMatrixTrans.transform": {
  "lineno": 54,
  "symbols_in_volume": [
   "scipy.sparse.eye"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.Trans": {
  "lineno": 28,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.compose.tests.test_column_transformer.Trans.fit": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.Trans.transform": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.atleast_2d"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.TransNo2D": {
  "lineno": 59,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.compose.tests.test_column_transformer.TransNo2D.fit": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.TransNo2D.transform": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.TransRaise": {
  "lineno": 67,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.compose.tests.test_column_transformer.TransRaise.fit": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.TransRaise.transform": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_2D_transformer_output": {
  "lineno": 456,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.compose.ColumnTransformer",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_2D_transformer_output_pandas": {
  "lineno": 469,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.importorskip",
   "sklearn.compose.ColumnTransformer",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.vstack",
   "sklearn.compose.ColumnTransformer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_callable_specifier": {
  "lineno": 1041,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.importorskip",
   "sklearn.compose.ColumnTransformer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_callable_specifier.func": {
  "lineno": 1060,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_cloning": {
  "lineno": 636,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.compose.ColumnTransformer",
   "sklearn.preprocessing.StandardScaler"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_dataframe": {
  "lineno": 134,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.vstack",
   "pytest.importorskip",
   "sklearn.compose.ColumnTransformer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_dataframe.TransAssert": {
  "lineno": 226,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_dataframe.TransAssert.fit": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_dataframe.TransAssert.transform": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_drop_all_sparse_remainder_transformer": {
  "lineno": 912,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.eye",
   "scipy.sparse.issparse",
   "sklearn.compose.ColumnTransformer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_drops_all_remainder_transformer": {
  "lineno": 869,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.compose.ColumnTransformer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_empty_columns": {
  "lineno": 256,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.importorskip",
   "pytest.mark.parametrize",
   "sklearn.compose.ColumnTransformer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_error_msg_1D": {
  "lineno": 442,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.compose.ColumnTransformer",
   "sklearn.preprocessing.StandardScaler",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_get_feature_names": {
  "lineno": 650,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "sklearn.compose.ColumnTransformer",
   "sklearn.exceptions.NotFittedError",
   "sklearn.feature_extraction.DictVectorizer",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_get_set_params": {
  "lineno": 580,
  "symbols_in_volume": [
   "sklearn.compose.ColumnTransformer",
   "sklearn.preprocessing.StandardScaler"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_get_set_params_with_remainder": {
  "lineno": 932,
  "symbols_in_volume": [
   "sklearn.compose.ColumnTransformer",
   "sklearn.preprocessing.StandardScaler"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_invalid_columns": {
  "lineno": 484,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "pytest.raises",
   "pytest.warns",
   "sklearn.compose.ColumnTransformer",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_invalid_transformer": {
  "lineno": 515,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.compose.ColumnTransformer",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_invalid_transformer.NoTrans": {
  "lineno": 517,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_invalid_transformer.NoTrans.fit": {
  "lineno": 518,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_invalid_transformer.NoTrans.predict": {
  "lineno": 521,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_list": {
  "lineno": 328,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.compose.ColumnTransformer",
   "sklearn.preprocessing.OneHotEncoder",
   "sklearn.preprocessing.StandardScaler",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_mask_indexing": {
  "lineno": 1175,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.transpose",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "sklearn.compose.ColumnTransformer",
   "sklearn.preprocessing.FunctionTransformer"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_mixed_cols_sparse": {
  "lineno": 370,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "sklearn.compose.make_column_transformer",
   "sklearn.preprocessing.OneHotEncoder",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_named_estimators": {
  "lineno": 620,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.compose.ColumnTransformer",
   "sklearn.preprocessing.StandardScaler"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_negative_column_indexes": {
  "lineno": 1073,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.concatenate",
   "numpy.random.randn",
   "sklearn.compose.ColumnTransformer",
   "sklearn.preprocessing.OneHotEncoder",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_no_estimators": {
  "lineno": 970,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.compose.ColumnTransformer",
   "sklearn.preprocessing.StandardScaler"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_no_estimators_set_params": {
  "lineno": 1036,
  "symbols_in_volume": [
   "sklearn.compose.ColumnTransformer"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_no_remaining_remainder_transformer": {
  "lineno": 855,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.compose.ColumnTransformer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_remainder": {
  "lineno": 731,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.compose.ColumnTransformer",
   "sklearn.compose.make_column_transformer",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_remainder_numpy": {
  "lineno": 792,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "sklearn.compose.ColumnTransformer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_remainder_pandas": {
  "lineno": 809,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.importorskip",
   "pytest.mark.parametrize",
   "sklearn.compose.ColumnTransformer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_remainder_transformer": {
  "lineno": 833,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "sklearn.compose.ColumnTransformer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_reordered_column_names_remainder": {
  "lineno": 1085,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.importorskip",
   "pytest.mark.parametrize",
   "pytest.raises",
   "pytest.warns",
   "sklearn.compose.ColumnTransformer"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_sparse_array": {
  "lineno": 301,
  "symbols_in_volume": [
   "scipy.sparse.eye",
   "scipy.sparse.issparse",
   "sklearn.compose.ColumnTransformer",
   "sklearn.utils._testing.assert_allclose_dense_sparse"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_sparse_remainder_transformer": {
  "lineno": 888,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.eye",
   "numpy.hstack",
   "scipy.sparse.issparse",
   "sklearn.compose.ColumnTransformer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_sparse_stacking": {
  "lineno": 347,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.eye",
   "scipy.sparse.issparse",
   "sklearn.compose.ColumnTransformer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_sparse_threshold": {
  "lineno": 400,
  "symbols_in_volume": [
   "numpy.array",
   "scipy.sparse.issparse",
   "sklearn.compose.ColumnTransformer",
   "sklearn.preprocessing.OneHotEncoder"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_special_strings": {
  "lineno": 691,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.compose.ColumnTransformer",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_verbose": {
  "lineno": 986,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "re.match",
   "sklearn.compose.ColumnTransformer"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_column_transformer_with_make_column_selector": {
  "lineno": 1220,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float",
   "numpy.int",
   "numpy.number",
   "numpy.testing.assert_allclose",
   "pytest.importorskip",
   "sklearn.compose.make_column_selector",
   "sklearn.compose.make_column_transformer",
   "sklearn.preprocessing.OneHotEncoder",
   "sklearn.preprocessing.StandardScaler"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_feature_name_validation": {
  "lineno": 1125,
  "symbols_in_volume": [
   "numpy.ones",
   "pytest.importorskip",
   "pytest.raises",
   "pytest.warns",
   "sklearn.compose.ColumnTransformer",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_make_column_selector_error": {
  "lineno": 1248,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.number",
   "pytest.raises",
   "sklearn.compose.make_column_selector"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_make_column_selector_pickle": {
  "lineno": 1256,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float",
   "numpy.int",
   "pickle.dumps",
   "pickle.loads",
   "pytest.importorskip",
   "sklearn.compose.make_column_selector",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_make_column_selector_with_select_dtypes": {
  "lineno": 1189,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float",
   "numpy.int",
   "numpy.number",
   "numpy.object",
   "pytest.importorskip",
   "pytest.mark.parametrize",
   "sklearn.compose.make_column_selector",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_make_column_transformer": {
  "lineno": 530,
  "symbols_in_volume": [
   "sklearn.compose.make_column_transformer",
   "sklearn.preprocessing.Normalizer",
   "sklearn.preprocessing.StandardScaler"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_make_column_transformer_kwargs": {
  "lineno": 551,
  "symbols_in_volume": [
   "sklearn.compose.make_column_transformer",
   "sklearn.preprocessing.Normalizer",
   "sklearn.preprocessing.StandardScaler",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_make_column_transformer_pandas": {
  "lineno": 540,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.importorskip",
   "sklearn.compose.ColumnTransformer",
   "sklearn.compose.make_column_transformer",
   "sklearn.preprocessing.Normalizer",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_column_transformer.test_make_column_transformer_remainder_transformer": {
  "lineno": 571,
  "symbols_in_volume": [
   "sklearn.compose.make_column_transformer",
   "sklearn.preprocessing.Normalizer",
   "sklearn.preprocessing.StandardScaler"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_target": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.datasets.make_friedman1"
  ],
  "type": "module"
 },
 "sklearn.compose.tests.test_target.DummyCheckerArrayTransformer": {
  "lineno": 231,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "sklearn.compose.tests.test_target.DummyCheckerArrayTransformer.fit": {
  "lineno": 233,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_target.DummyCheckerArrayTransformer.inverse_transform": {
  "lineno": 241,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_target.DummyCheckerArrayTransformer.transform": {
  "lineno": 237,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_target.DummyCheckerListRegressor": {
  "lineno": 246,
  "symbols_in_volume": [
   "sklearn.dummy.DummyRegressor"
  ],
  "type": "class"
 },
 "sklearn.compose.tests.test_target.DummyCheckerListRegressor.fit": {
  "lineno": 248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose.tests.test_target.DummyCheckerListRegressor.predict": {
  "lineno": 252,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose.tests.test_target.DummyRegressorWithExtraFitParams": {
  "lineno": 301,
  "symbols_in_volume": [
   "sklearn.dummy.DummyRegressor"
  ],
  "type": "class"
 },
 "sklearn.compose.tests.test_target.DummyRegressorWithExtraFitParams.fit": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose.tests.test_target.DummyTransformer": {
  "lineno": 273,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "sklearn.compose.tests.test_target.DummyTransformer.__init__": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose.tests.test_target.DummyTransformer.fit": {
  "lineno": 278,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose.tests.test_target.DummyTransformer.inverse_transform": {
  "lineno": 285,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose.tests.test_target.DummyTransformer.transform": {
  "lineno": 282,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose.tests.test_target._check_shifted_by_one": {
  "lineno": 72,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_target._check_standard_scaled": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.std",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_1d_transformer": {
  "lineno": 110,
  "symbols_in_volume": [
   "numpy.vstack",
   "pytest.mark.parametrize",
   "sklearn.base.clone",
   "sklearn.compose.TransformedTargetRegressor",
   "sklearn.linear_model.LinearRegression",
   "sklearn.preprocessing.FunctionTransformer",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_2d_transformer": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.vstack",
   "pytest.mark.parametrize",
   "sklearn.base.clone",
   "sklearn.compose.TransformedTargetRegressor",
   "sklearn.linear_model.LinearRegression",
   "sklearn.preprocessing.StandardScaler",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_2d_transformer_multioutput": {
  "lineno": 175,
  "symbols_in_volume": [
   "numpy.vstack",
   "sklearn.base.clone",
   "sklearn.compose.TransformedTargetRegressor",
   "sklearn.linear_model.LinearRegression",
   "sklearn.preprocessing.StandardScaler",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_count_fit": {
  "lineno": 289,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.compose.TransformedTargetRegressor"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_ensure_y_array": {
  "lineno": 257,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.compose.TransformedTargetRegressor"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_error": {
  "lineno": 28,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.log",
   "numpy.ones",
   "pytest.raises",
   "sklearn.compose.TransformedTargetRegressor",
   "sklearn.linear_model.Lasso",
   "sklearn.linear_model.LinearRegression",
   "sklearn.preprocessing.StandardScaler"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_functions": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.log",
   "sklearn.compose.TransformedTargetRegressor",
   "sklearn.linear_model.LinearRegression",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_functions_multioutput": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.log",
   "numpy.vstack",
   "sklearn.compose.TransformedTargetRegressor",
   "sklearn.linear_model.LinearRegression",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_invertible": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.sqrt",
   "sklearn.compose.TransformedTargetRegressor",
   "sklearn.linear_model.LinearRegression",
   "sklearn.utils._testing.assert_no_warnings",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_multi_to_single": {
  "lineno": 201,
  "symbols_in_volume": [
   "numpy.transpose",
   "sklearn.compose.TransformedTargetRegressor",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_multi_to_single.func": {
  "lineno": 219,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_multi_to_single.inverse_func": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_pass_fit_parameters": {
  "lineno": 309,
  "symbols_in_volume": [
   "sklearn.compose.TransformedTargetRegressor"
  ],
  "type": "function"
 },
 "sklearn.compose.tests.test_target.test_transform_target_regressor_route_pipeline": {
  "lineno": 320,
  "symbols_in_volume": [
   "sklearn.compose.TransformedTargetRegressor",
   "sklearn.pipeline.Pipeline",
   "sklearn.preprocessing.StandardScaler"
  ],
  "type": "function"
 },
 "sklearn.conftest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.conftest.pyplot": {
  "lineno": 4,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "sklearn.covariance": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.covariance._elliptic_envelope": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.covariance._elliptic_envelope.EllipticEnvelope": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.covariance._elliptic_envelope.EllipticEnvelope.__init__": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.covariance._elliptic_envelope.EllipticEnvelope.decision_function": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.covariance._elliptic_envelope.EllipticEnvelope.fit": {
  "lineno": 117,
  "symbols_in_volume": [
   "numpy.percentile"
  ],
  "type": "function"
 },
 "sklearn.covariance._elliptic_envelope.EllipticEnvelope.predict": {
  "lineno": 169,
  "symbols_in_volume": [
   "numpy.full"
  ],
  "type": "function"
 },
 "sklearn.covariance._elliptic_envelope.EllipticEnvelope.score": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.covariance._elliptic_envelope.EllipticEnvelope.score_samples": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.covariance._empirical_covariance": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.covariance._empirical_covariance.EmpiricalCovariance": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.covariance._empirical_covariance.EmpiricalCovariance.__init__": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.covariance._empirical_covariance.EmpiricalCovariance._set_covariance": {
  "lineno": 139,
  "symbols_in_volume": [
   "scipy.linalg.pinvh"
  ],
  "type": "function"
 },
 "sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm": {
  "lineno": 235,
  "symbols_in_volume": [
   "numpy.amax",
   "numpy.dot",
   "numpy.sqrt",
   "numpy.sum",
   "scipy.linalg.svdvals"
  ],
  "type": "function"
 },
 "sklearn.covariance._empirical_covariance.EmpiricalCovariance.fit": {
  "lineno": 176,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.covariance._empirical_covariance.EmpiricalCovariance.get_precision": {
  "lineno": 161,
  "symbols_in_volume": [
   "scipy.linalg.pinvh"
  ],
  "type": "function"
 },
 "sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis": {
  "lineno": 287,
  "symbols_in_volume": [
   "numpy.newaxis",
   "numpy.reshape"
  ],
  "type": "function"
 },
 "sklearn.covariance._empirical_covariance.EmpiricalCovariance.score": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.covariance._empirical_covariance.empirical_covariance": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.cov",
   "numpy.dot",
   "numpy.reshape",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.covariance._empirical_covariance.log_likelihood": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.pi",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.covariance._graph_lasso": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.covariance._graph_lasso.GraphicalLasso": {
  "lineno": 281,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.covariance._graph_lasso.GraphicalLasso.__init__": {
  "lineno": 360,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.covariance._graph_lasso.GraphicalLasso.fit": {
  "lineno": 370,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.covariance._graph_lasso.GraphicalLassoCV": {
  "lineno": 494,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.covariance._graph_lasso.GraphicalLassoCV.__init__": {
  "lineno": 626,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.covariance._graph_lasso.GraphicalLassoCV.fit": {
  "lineno": 637,
  "symbols_in_volume": [
   "collections.abc.Sequence",
   "joblib.Parallel",
   "joblib.delayed",
   "numpy.array",
   "numpy.finfo",
   "numpy.float64",
   "numpy.inf",
   "numpy.isfinite",
   "numpy.log10",
   "numpy.logspace",
   "numpy.mean",
   "numpy.nan",
   "numpy.zeros",
   "operator.itemgetter",
   "time.time",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.covariance._graph_lasso._dual_gap": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.diag",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.covariance._graph_lasso._objective": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.diag",
   "numpy.log",
   "numpy.pi"
  ],
  "type": "function"
 },
 "sklearn.covariance._graph_lasso.alpha_max": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.copy",
   "numpy.max"
  ],
  "type": "function"
 },
 "sklearn.covariance._graph_lasso.graphical_lasso": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.arange",
   "numpy.copy",
   "numpy.dot",
   "numpy.errstate",
   "numpy.finfo",
   "numpy.float64",
   "numpy.inf",
   "numpy.isfinite",
   "numpy.log",
   "numpy.pi",
   "numpy.sum",
   "scipy.linalg.inv",
   "scipy.linalg.pinvh",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.covariance._graph_lasso.graphical_lasso_path": {
  "lineno": 397,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.isfinite",
   "numpy.nan",
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "sklearn.covariance._robust_covariance": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.covariance._robust_covariance.MinCovDet": {
  "lineno": 512,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.covariance._robust_covariance.MinCovDet.__init__": {
  "lineno": 615,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.covariance._robust_covariance.MinCovDet.correct_covariance": {
  "lineno": 671,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.median",
   "numpy.sum",
   "scipy.stats.chi2"
  ],
  "type": "function"
 },
 "sklearn.covariance._robust_covariance.MinCovDet.fit": {
  "lineno": 622,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.sum",
   "numpy.zeros",
   "scipy.linalg.pinvh",
   "scipy.linalg.svdvals",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.covariance._robust_covariance.MinCovDet.reweight_covariance": {
  "lineno": 710,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.sum",
   "numpy.zeros",
   "scipy.stats.chi2"
  ],
  "type": "function"
 },
 "sklearn.covariance._robust_covariance._c_step": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.argsort",
   "numpy.dot",
   "numpy.inf",
   "numpy.isinf",
   "numpy.zeros",
   "scipy.linalg.pinvh",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.covariance._robust_covariance.c_step": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "sklearn.covariance._robust_covariance.fast_mcd": {
  "lineno": 306,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.arange",
   "numpy.argsort",
   "numpy.array",
   "numpy.asarray",
   "numpy.ceil",
   "numpy.dot",
   "numpy.mean",
   "numpy.min",
   "numpy.ones",
   "numpy.ravel",
   "numpy.sort",
   "numpy.var",
   "numpy.where",
   "numpy.zeros",
   "scipy.linalg.pinvh"
  ],
  "type": "function"
 },
 "sklearn.covariance._robust_covariance.select_candidates": {
  "lineno": 183,
  "symbols_in_volume": [
   "numbers.Integral",
   "numpy.argsort",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "sklearn.covariance._shrunk_covariance": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.covariance._shrunk_covariance.LedoitWolf": {
  "lineno": 321,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.covariance._shrunk_covariance.LedoitWolf.__init__": {
  "lineno": 397,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.covariance._shrunk_covariance.LedoitWolf.fit": {
  "lineno": 403,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.covariance._shrunk_covariance.OAS": {
  "lineno": 503,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.covariance._shrunk_covariance.OAS.fit": {
  "lineno": 558,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.covariance._shrunk_covariance.ShrunkCovariance": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.covariance._shrunk_covariance.ShrunkCovariance.__init__": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.covariance._shrunk_covariance.ShrunkCovariance.fit": {
  "lineno": 128,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.covariance._shrunk_covariance.ledoit_wolf": {
  "lineno": 258,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.atleast_2d",
   "numpy.reshape",
   "numpy.sum",
   "numpy.trace",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.covariance._shrunk_covariance.ledoit_wolf_shrinkage": {
  "lineno": 163,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.dot",
   "numpy.reshape",
   "numpy.sum",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.covariance._shrunk_covariance.oas": {
  "lineno": 438,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.atleast_2d",
   "numpy.mean",
   "numpy.reshape",
   "numpy.trace",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.covariance._shrunk_covariance.shrunk_covariance": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.trace"
  ],
  "type": "function"
 },
 "sklearn.covariance.elliptic_envelope": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.covariance.elliptic_envelope.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.covariance.empirical_covariance_": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.covariance.empirical_covariance_.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.covariance.graph_lasso_": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.covariance.graph_lasso_.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.covariance.robust_covariance": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.covariance.robust_covariance.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.covariance.shrunk_covariance_": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.covariance.shrunk_covariance_.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.covariance.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.covariance.tests.test_covariance": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.datasets.load_diabetes"
  ],
  "type": "module"
 },
 "sklearn.covariance.tests.test_covariance._naive_ledoit_wolf_shrinkage": {
  "lineno": 189,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.sum",
   "numpy.trace",
   "sklearn.covariance.empirical_covariance"
  ],
  "type": "function"
 },
 "sklearn.covariance.tests.test_covariance.test_covariance": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.amin",
   "numpy.arange",
   "numpy.asarray",
   "numpy.float64",
   "numpy.zeros",
   "pytest.raises",
   "sklearn.covariance.EmpiricalCovariance",
   "sklearn.covariance.empirical_covariance",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.covariance.tests.test_covariance.test_ledoit_wolf": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float64",
   "numpy.zeros",
   "sklearn.covariance.LedoitWolf",
   "sklearn.covariance.ShrunkCovariance",
   "sklearn.covariance.empirical_covariance",
   "sklearn.covariance.ledoit_wolf",
   "sklearn.covariance.ledoit_wolf_shrinkage",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.covariance.tests.test_covariance.test_ledoit_wolf_large": {
  "lineno": 221,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.random.RandomState",
   "sklearn.covariance.LedoitWolf",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.covariance.tests.test_covariance.test_ledoit_wolf_small": {
  "lineno": 211,
  "symbols_in_volume": [
   "sklearn.covariance.LedoitWolf",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.covariance.tests.test_covariance.test_oas": {
  "lineno": 236,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float64",
   "numpy.zeros",
   "sklearn.covariance.OAS",
   "sklearn.covariance.ShrunkCovariance",
   "sklearn.covariance.empirical_covariance",
   "sklearn.covariance.oas",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.covariance.tests.test_covariance.test_shrunk_covariance": {
  "lineno": 75,
  "symbols_in_volume": [
   "sklearn.covariance.ShrunkCovariance",
   "sklearn.covariance.empirical_covariance",
   "sklearn.covariance.shrunk_covariance",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.covariance.tests.test_elliptic_envelope": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.covariance.tests.test_elliptic_envelope.test_elliptic_envelope": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.random.RandomState",
   "pytest.raises",
   "sklearn.covariance.EllipticEnvelope",
   "sklearn.exceptions.NotFittedError",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.covariance.tests.test_elliptic_envelope.test_score_samples": {
  "lineno": 36,
  "symbols_in_volume": [
   "sklearn.covariance.EllipticEnvelope",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.covariance.tests.test_graphical_lasso": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.covariance.tests.test_graphical_lasso.test_graph_lasso_2D": {
  "lineno": 87,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.covariance.empirical_covariance",
   "sklearn.covariance.graphical_lasso",
   "sklearn.datasets.load_iris",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.covariance.tests.test_graphical_lasso.test_graphical_lasso": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.diff",
   "numpy.zeros",
   "scipy.linalg.inv",
   "sklearn.covariance.GraphicalLasso",
   "sklearn.covariance.empirical_covariance",
   "sklearn.covariance.graphical_lasso",
   "sklearn.datasets.make_sparse_spd_matrix",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_less",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.covariance.tests.test_graphical_lasso.test_graphical_lasso_cv": {
  "lineno": 131,
  "symbols_in_volume": [
   "io.StringIO",
   "numpy.zeros",
   "scipy.linalg.inv",
   "sklearn.covariance.GraphicalLassoCV",
   "sklearn.datasets.make_sparse_spd_matrix",
   "sklearn.utils.check_random_state",
   "sys.stdout"
  ],
  "type": "function"
 },
 "sklearn.covariance.tests.test_graphical_lasso.test_graphical_lasso_iris": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.covariance.empirical_covariance",
   "sklearn.covariance.graphical_lasso",
   "sklearn.datasets.load_iris",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.covariance.tests.test_graphical_lasso.test_graphical_lasso_iris_singular": {
  "lineno": 104,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "sklearn.covariance.empirical_covariance",
   "sklearn.covariance.graphical_lasso",
   "sklearn.datasets.load_iris",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.covariance.tests.test_robust_covariance": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.datasets.load_iris"
  ],
  "type": "module"
 },
 "sklearn.covariance.tests.test_robust_covariance.launch_mcd_on_dataset": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.sum",
   "sklearn.covariance.MinCovDet",
   "sklearn.covariance.empirical_covariance",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.covariance.tests.test_robust_covariance.test_fast_mcd_on_invalid_input": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.arange",
   "sklearn.covariance.fast_mcd",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.covariance.tests.test_robust_covariance.test_mcd": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.covariance.tests.test_robust_covariance.test_mcd_class_on_invalid_input": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.arange",
   "sklearn.covariance.MinCovDet",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.covariance.tests.test_robust_covariance.test_mcd_increasing_det_warning": {
  "lineno": 139,
  "symbols_in_volume": [
   "sklearn.covariance.MinCovDet",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.covariance.tests.test_robust_covariance.test_mcd_issue1127": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.covariance.MinCovDet"
  ],
  "type": "function"
 },
 "sklearn.covariance.tests.test_robust_covariance.test_mcd_issue3367": {
  "lineno": 94,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.array",
   "numpy.hstack",
   "numpy.linspace",
   "numpy.random.RandomState",
   "numpy.zeros",
   "sklearn.covariance.MinCovDet"
  ],
  "type": "function"
 },
 "sklearn.covariance.tests.test_robust_covariance.test_mcd_support_covariance_is_zero": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.covariance.MinCovDet",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.cross_decomposition": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.cross_decomposition._cca": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.cross_decomposition._cca.CCA": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.cross_decomposition._cca.CCA.__init__": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cross_decomposition._pls": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.cross_decomposition._pls.PLSCanonical": {
  "lineno": 663,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.cross_decomposition._pls.PLSCanonical.__init__": {
  "lineno": 800,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cross_decomposition._pls.PLSRegression": {
  "lineno": 523,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.cross_decomposition._pls.PLSRegression.__init__": {
  "lineno": 654,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cross_decomposition._pls.PLSSVD": {
  "lineno": 809,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.cross_decomposition._pls.PLSSVD.__init__": {
  "lineno": 869,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cross_decomposition._pls.PLSSVD.fit": {
  "lineno": 874,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.float64",
   "numpy.min",
   "scipy.linalg.svd",
   "scipy.sparse.linalg.svds"
  ],
  "type": "function"
 },
 "sklearn.cross_decomposition._pls.PLSSVD.fit_transform": {
  "lineno": 950,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cross_decomposition._pls.PLSSVD.transform": {
  "lineno": 923,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.float64"
  ],
  "type": "function"
 },
 "sklearn.cross_decomposition._pls._PLS": {
  "lineno": 137,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.cross_decomposition._pls._PLS.__init__": {
  "lineno": 250,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.cross_decomposition._pls._PLS._more_tags": {
  "lineno": 519,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cross_decomposition._pls._PLS.fit": {
  "lineno": 264,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.all",
   "numpy.dot",
   "numpy.double",
   "numpy.finfo",
   "numpy.float64",
   "numpy.ones",
   "numpy.zeros",
   "scipy.linalg.pinv2",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.cross_decomposition._pls._PLS.fit_transform": {
  "lineno": 500,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cross_decomposition._pls._PLS.inverse_transform": {
  "lineno": 448,
  "symbols_in_volume": [
   "numpy.matmul"
  ],
  "type": "function"
 },
 "sklearn.cross_decomposition._pls._PLS.predict": {
  "lineno": 475,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "sklearn.cross_decomposition._pls._PLS.transform": {
  "lineno": 410,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "sklearn.cross_decomposition._pls._center_scale_xy": {
  "lineno": 111,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "sklearn.cross_decomposition._pls._nipals_twoblocks_inner_loop": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.any",
   "numpy.dot",
   "numpy.double",
   "numpy.finfo",
   "numpy.sqrt",
   "scipy.linalg.pinv2",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.cross_decomposition._pls._svd_cross_product": {
  "lineno": 103,
  "symbols_in_volume": [
   "numpy.dot",
   "scipy.linalg.svd"
  ],
  "type": "function"
 },
 "sklearn.cross_decomposition.cca_": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.cross_decomposition.cca_.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cross_decomposition.pls_": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.cross_decomposition.pls_.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.cross_decomposition.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.cross_decomposition.tests.test_pls": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_PLSSVD": {
  "lineno": 322,
  "symbols_in_volume": [
   "sklearn.cross_decomposition._pls.PLSCanonical",
   "sklearn.cross_decomposition._pls.PLSRegression",
   "sklearn.cross_decomposition._pls.PLSSVD",
   "sklearn.datasets.load_linnerud"
  ],
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_convergence_fail": {
  "lineno": 313,
  "symbols_in_volume": [
   "sklearn.cross_decomposition._pls.PLSCanonical",
   "sklearn.datasets.load_linnerud",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_pls": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.concatenate",
   "numpy.dot",
   "sklearn.cross_decomposition._pls.PLSCanonical",
   "sklearn.cross_decomposition._pls.PLSRegression",
   "sklearn.cross_decomposition._pls._center_scale_xy",
   "sklearn.datasets.load_linnerud",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_pls.check_ortho": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.dot",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_pls_errors": {
  "lineno": 418,
  "symbols_in_volume": [
   "sklearn.cross_decomposition._pls.PLSCanonical",
   "sklearn.cross_decomposition._pls.PLSRegression",
   "sklearn.cross_decomposition._pls.PLSSVD",
   "sklearn.datasets.load_linnerud",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_pls_scaling": {
  "lineno": 429,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.testing.assert_approx_equal",
   "pytest.mark.filterwarnings",
   "sklearn.cross_decomposition._pls.PLSRegression",
   "sklearn.preprocessing.StandardScaler",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_predict_transform_copy": {
  "lineno": 348,
  "symbols_in_volume": [
   "numpy.all",
   "sklearn.cross_decomposition._pls.PLSCanonical",
   "sklearn.datasets.load_linnerud",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_scale_and_stability": {
  "lineno": 372,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.cross_decomposition.CCA",
   "sklearn.cross_decomposition._pls.PLSCanonical",
   "sklearn.cross_decomposition._pls.PLSRegression",
   "sklearn.cross_decomposition._pls.PLSSVD",
   "sklearn.datasets.load_linnerud",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.cross_decomposition.tests.test_pls.test_univariate_pls_regression": {
  "lineno": 335,
  "symbols_in_volume": [
   "sklearn.cross_decomposition._pls.PLSRegression",
   "sklearn.datasets.load_linnerud",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.datasets._base": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "sklearn.datasets._base._fetch_remote": {
  "lineno": 878,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join",
   "urllib.request.urlretrieve"
  ],
  "type": "function"
 },
 "sklearn.datasets._base._pkl_filepath": {
  "lineno": 848,
  "symbols_in_volume": [
   "os.path.join",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "sklearn.datasets._base._refresh_cache": {
  "lineno": 912,
  "symbols_in_volume": [
   "joblib.dump",
   "joblib.load",
   "warnings.catch_warnings",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.datasets._base._sha256": {
  "lineno": 865,
  "symbols_in_volume": [
   "hashlib.sha256"
  ],
  "type": "function"
 },
 "sklearn.datasets._base.clear_data_home": {
  "lineno": 58,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "sklearn.datasets._base.get_data_home": {
  "lineno": 29,
  "symbols_in_volume": [
   "os.environ.get",
   "os.makedirs",
   "os.path.exists",
   "os.path.expanduser",
   "os.path.join"
  ],
  "type": "function"
 },
 "sklearn.datasets._base.load_boston": {
  "lineno": 685,
  "symbols_in_volume": [
   "csv.reader",
   "numpy.array",
   "numpy.asarray",
   "numpy.empty",
   "numpy.float64",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "sklearn.datasets._base.load_breast_cancer": {
  "lineno": 401,
  "symbols_in_volume": [
   "numpy.array",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "sklearn.datasets._base.load_data": {
  "lineno": 207,
  "symbols_in_volume": [
   "csv.reader",
   "numpy.array",
   "numpy.asarray",
   "numpy.empty",
   "numpy.float64",
   "numpy.int",
   "os.path.join"
  ],
  "type": "function"
 },
 "sklearn.datasets._base.load_diabetes": {
  "lineno": 568,
  "symbols_in_volume": [
   "numpy.loadtxt",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "sklearn.datasets._base.load_digits": {
  "lineno": 488,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int",
   "numpy.loadtxt",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "sklearn.datasets._base.load_files": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "os.listdir",
   "os.path.isdir",
   "os.path.join"
  ],
  "type": "function"
 },
 "sklearn.datasets._base.load_iris": {
  "lineno": 326,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "sklearn.datasets._base.load_linnerud": {
  "lineno": 621,
  "symbols_in_volume": [
   "numpy.loadtxt",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "sklearn.datasets._base.load_sample_image": {
  "lineno": 807,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets._base.load_sample_images": {
  "lineno": 762,
  "symbols_in_volume": [
   "os.listdir",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "sklearn.datasets._base.load_wine": {
  "lineno": 249,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "sklearn.datasets._california_housing": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "sklearn.datasets._california_housing.fetch_california_housing": {
  "lineno": 51,
  "symbols_in_volume": [
   "joblib.dump",
   "numpy.loadtxt",
   "os.makedirs",
   "os.path.dirname",
   "os.path.exists",
   "os.path.join",
   "os.remove",
   "tarfile.open"
  ],
  "type": "function"
 },
 "sklearn.datasets._covtype": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "sklearn.datasets._covtype.fetch_covtype": {
  "lineno": 44,
  "symbols_in_volume": [
   "gzip.GzipFile",
   "joblib.dump",
   "numpy.arange",
   "numpy.genfromtxt",
   "numpy.int32",
   "os.makedirs",
   "os.path.dirname",
   "os.path.exists",
   "os.path.join",
   "os.remove"
  ],
  "type": "function"
 },
 "sklearn.datasets._kddcup99": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "sklearn.datasets._kddcup99._fetch_brute_kddcup99": {
  "lineno": 174,
  "symbols_in_volume": [
   "gzip.GzipFile",
   "joblib.dump",
   "numpy.asarray",
   "numpy.dtype",
   "os.path.exists",
   "os.path.join",
   "os.remove"
  ],
  "type": "function"
 },
 "sklearn.datasets._kddcup99._mkdirp": {
  "lineno": 304,
  "symbols_in_volume": [
   "errno.EEXIST",
   "os.makedirs"
  ],
  "type": "function"
 },
 "sklearn.datasets._kddcup99.fetch_kddcup99": {
  "lineno": 47,
  "symbols_in_volume": [
   "numpy.c_",
   "numpy.log",
   "numpy.logical_not",
   "numpy.r_",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "sklearn.datasets._lfw": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "sklearn.datasets._lfw._check_fetch_lfw": {
  "lineno": 73,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.exists",
   "os.path.join",
   "os.remove",
   "tarfile.open"
  ],
  "type": "function"
 },
 "sklearn.datasets._lfw._fetch_lfw_pairs": {
  "lineno": 338,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int",
   "numpy.zeros",
   "os.listdir",
   "os.path.join"
  ],
  "type": "function"
 },
 "sklearn.datasets._lfw._fetch_lfw_people": {
  "lineno": 177,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.RandomState",
   "numpy.searchsorted",
   "numpy.unique",
   "os.listdir",
   "os.path.isdir",
   "os.path.join"
  ],
  "type": "function"
 },
 "sklearn.datasets._lfw._load_imgs": {
  "lineno": 116,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.float32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.datasets._lfw.fetch_lfw_pairs": {
  "lineno": 389,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "joblib.Memory",
   "joblib.__version__",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "sklearn.datasets._lfw.fetch_lfw_people": {
  "lineno": 218,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "joblib.Memory",
   "joblib.__version__",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "sklearn.datasets._olivetti_faces": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.datasets._olivetti_faces.fetch_olivetti_faces": {
  "lineno": 39,
  "symbols_in_volume": [
   "joblib.dump",
   "numpy.array",
   "numpy.float32",
   "os.makedirs",
   "os.path.dirname",
   "os.path.exists",
   "os.path.join",
   "os.remove",
   "scipy.io.matlab.loadmat"
  ],
  "type": "function"
 },
 "sklearn.datasets._openml": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.datasets._openml._convert_arff_data": {
  "lineno": 220,
  "symbols_in_volume": [
   "collections.abc.Generator",
   "itertools.chain.from_iterable",
   "numpy.float64",
   "numpy.fromiter"
  ],
  "type": "function"
 },
 "sklearn.datasets._openml._convert_arff_data_dataframe": {
  "lineno": 287,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "sklearn.datasets._openml._download_data_arff": {
  "lineno": 451,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets._openml._download_data_arff._arff_load": {
  "lineno": 458,
  "symbols_in_volume": [
   "contextlib.closing"
  ],
  "type": "function"
 },
 "sklearn.datasets._openml._feature_to_dtype": {
  "lineno": 270,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int64"
  ],
  "type": "function"
 },
 "sklearn.datasets._openml._get_data_description_by_id": {
  "lineno": 393,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets._openml._get_data_features": {
  "lineno": 402,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets._openml._get_data_info_by_name": {
  "lineno": 333,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.datasets._openml._get_data_qualities": {
  "lineno": 412,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets._openml._get_json_content_from_openml_api": {
  "lineno": 121,
  "symbols_in_volume": [
   "urllib.error.HTTPError"
  ],
  "type": "function"
 },
 "sklearn.datasets._openml._get_json_content_from_openml_api._load_json": {
  "lineno": 153,
  "symbols_in_volume": [
   "contextlib.closing",
   "json.loads"
  ],
  "type": "function"
 },
 "sklearn.datasets._openml._get_local_path": {
  "lineno": 36,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "sklearn.datasets._openml._get_num_samples": {
  "lineno": 427,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets._openml._open_openml_url": {
  "lineno": 64,
  "symbols_in_volume": [
   "contextlib.closing",
   "gzip.GzipFile",
   "os.makedirs",
   "os.path.dirname",
   "os.path.exists",
   "os.unlink",
   "shutil.copyfileobj",
   "urllib.request.Request",
   "urllib.request.urlopen"
  ],
  "type": "function"
 },
 "sklearn.datasets._openml._open_openml_url.is_gzip": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets._openml._retry_with_clean_cache": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets._openml._retry_with_clean_cache.decorator": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets._openml._retry_with_clean_cache.decorator.wrapper": {
  "lineno": 46,
  "symbols_in_volume": [
   "functools.wraps",
   "os.path.exists",
   "os.unlink",
   "urllib.error.HTTPError",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.datasets._openml._sparse_data_to_array": {
  "lineno": 205,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.float64"
  ],
  "type": "function"
 },
 "sklearn.datasets._openml._split_sparse_columns": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets._openml._valid_data_column_names": {
  "lineno": 502,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets._openml._verify_target_data_type": {
  "lineno": 474,
  "symbols_in_volume": [
   "numpy.float64",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.datasets._openml.fetch_openml": {
  "lineno": 516,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.hstack",
   "numpy.take",
   "os.path.join",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.datasets._rcv1": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "sklearn.datasets._rcv1._find_permutation": {
  "lineno": 291,
  "symbols_in_volume": [
   "numpy.argsort"
  ],
  "type": "function"
 },
 "sklearn.datasets._rcv1._inverse_permutation": {
  "lineno": 282,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int32",
   "numpy.put",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.datasets._rcv1.fetch_rcv1": {
  "lineno": 79,
  "symbols_in_volume": [
   "gzip.GzipFile",
   "joblib.dump",
   "numpy.argsort",
   "numpy.empty",
   "numpy.hstack",
   "numpy.int32",
   "numpy.uint32",
   "numpy.uint8",
   "numpy.zeros",
   "os.makedirs",
   "os.path.dirname",
   "os.path.exists",
   "os.path.join",
   "os.remove",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.vstack"
  ],
  "type": "function"
 },
 "sklearn.datasets._samples_generator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.datasets._samples_generator._generate_hypercube": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.hstack",
   "numpy.unpackbits"
  ],
  "type": "function"
 },
 "sklearn.datasets._samples_generator._shuffle": {
  "lineno": 1506,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_biclusters": {
  "lineno": 1515,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.hstack",
   "numpy.outer",
   "numpy.repeat",
   "numpy.vstack",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_blobs": {
  "lineno": 704,
  "symbols_in_volume": [
   "collections.abc.Iterable",
   "numbers.Integral",
   "numbers.Real",
   "numpy.arange",
   "numpy.array",
   "numpy.concatenate",
   "numpy.full",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_checkerboard": {
  "lineno": 1606,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.hstack",
   "numpy.outer",
   "numpy.repeat",
   "numpy.vstack",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_circles": {
  "lineno": 583,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.cos",
   "numpy.hstack",
   "numpy.intp",
   "numpy.linspace",
   "numpy.ones",
   "numpy.pi",
   "numpy.sin",
   "numpy.vstack",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_classification": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dot",
   "numpy.int",
   "numpy.intp",
   "numpy.log2",
   "numpy.resize",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_friedman1": {
  "lineno": 846,
  "symbols_in_volume": [
   "numpy.pi",
   "numpy.sin"
  ],
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_friedman2": {
  "lineno": 908,
  "symbols_in_volume": [
   "numpy.pi"
  ],
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_friedman3": {
  "lineno": 973,
  "symbols_in_volume": [
   "numpy.arctan",
   "numpy.pi"
  ],
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_gaussian_quantiles": {
  "lineno": 1420,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.argsort",
   "numpy.array",
   "numpy.hstack",
   "numpy.identity",
   "numpy.newaxis",
   "numpy.repeat",
   "numpy.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_hastie_10_2": {
  "lineno": 413,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_low_rank_matrix": {
  "lineno": 1037,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dot",
   "numpy.exp",
   "numpy.float64",
   "numpy.identity",
   "scipy.linalg.qr"
  ],
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_moons": {
  "lineno": 649,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.cos",
   "numpy.hstack",
   "numpy.intp",
   "numpy.linspace",
   "numpy.ones",
   "numpy.pi",
   "numpy.sin",
   "numpy.vstack",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_multilabel_classification": {
  "lineno": 263,
  "symbols_in_volume": [
   "array.array",
   "numpy.cumsum",
   "numpy.float64",
   "numpy.ones",
   "numpy.sum",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_multilabel_classification.sample_example": {
  "lineno": 352,
  "symbols_in_volume": [
   "numpy.searchsorted"
  ],
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_regression": {
  "lineno": 461,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dot",
   "numpy.squeeze",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_s_curve": {
  "lineno": 1378,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.cos",
   "numpy.pi",
   "numpy.sign",
   "numpy.sin",
   "numpy.squeeze"
  ],
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_sparse_coded_signal": {
  "lineno": 1106,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dot",
   "numpy.sqrt",
   "numpy.squeeze",
   "numpy.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_sparse_spd_matrix": {
  "lineno": 1252,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.dot",
   "numpy.eye",
   "numpy.sqrt",
   "numpy.sum",
   "numpy.tril"
  ],
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_sparse_uncorrelated": {
  "lineno": 1168,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_spd_matrix": {
  "lineno": 1219,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.dot",
   "scipy.linalg.svd"
  ],
  "type": "function"
 },
 "sklearn.datasets._samples_generator.make_swiss_roll": {
  "lineno": 1326,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.cos",
   "numpy.pi",
   "numpy.sin",
   "numpy.squeeze"
  ],
  "type": "function"
 },
 "sklearn.datasets._species_distributions": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "sklearn.datasets._species_distributions._load_coverage": {
  "lineno": 78,
  "symbols_in_volume": [
   "numpy.int16",
   "numpy.loadtxt"
  ],
  "type": "function"
 },
 "sklearn.datasets._species_distributions._load_csv": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.loadtxt"
  ],
  "type": "function"
 },
 "sklearn.datasets._species_distributions.construct_grids": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "sklearn.datasets._species_distributions.fetch_species_distributions": {
  "lineno": 141,
  "symbols_in_volume": [
   "io.BytesIO",
   "joblib.dump",
   "numpy.asarray",
   "numpy.int16",
   "numpy.load",
   "os.makedirs",
   "os.path.exists",
   "os.remove"
  ],
  "type": "function"
 },
 "sklearn.datasets._svmlight_format_io": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.datasets._svmlight_format_io._dump_svmlight": {
  "lineno": 326,
  "symbols_in_volume": [
   "numpy.where"
  ],
  "type": "function"
 },
 "sklearn.datasets._svmlight_format_io._gen_open": {
  "lineno": 158,
  "symbols_in_volume": [
   "bz2.BZ2File",
   "gzip.open",
   "io.open"
  ],
  "type": "function"
 },
 "sklearn.datasets._svmlight_format_io._load_svmlight_file": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets._svmlight_format_io._open_and_load": {
  "lineno": 175,
  "symbols_in_volume": [
   "contextlib.closing",
   "numpy.asarray",
   "numpy.float64",
   "numpy.frombuffer",
   "numpy.int64",
   "numpy.longlong"
  ],
  "type": "function"
 },
 "sklearn.datasets._svmlight_format_io.dump_svmlight_file": {
  "lineno": 383,
  "symbols_in_volume": [
   "numpy.asarray",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.datasets._svmlight_format_io.load_svmlight_file": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "sklearn.datasets._svmlight_format_io.load_svmlight_files": {
  "lineno": 199,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.min",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "sklearn.datasets._twenty_newsgroups": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "re.compile"
  ],
  "type": "module"
 },
 "sklearn.datasets._twenty_newsgroups._download_20newsgroups": {
  "lineno": 64,
  "symbols_in_volume": [
   "codecs.encode",
   "os.makedirs",
   "os.path.exists",
   "os.path.join",
   "os.remove",
   "pickle.dumps",
   "shutil.rmtree",
   "tarfile.open"
  ],
  "type": "function"
 },
 "sklearn.datasets._twenty_newsgroups.fetch_20newsgroups": {
  "lineno": 149,
  "symbols_in_volume": [
   "codecs.decode",
   "numpy.arange",
   "numpy.array",
   "numpy.in1d",
   "numpy.searchsorted",
   "os.path.dirname",
   "os.path.exists",
   "os.path.join",
   "pickle.loads"
  ],
  "type": "function"
 },
 "sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized": {
  "lineno": 319,
  "symbols_in_volume": [
   "joblib.dump",
   "joblib.load",
   "numpy.concatenate",
   "numpy.float64",
   "numpy.int16",
   "os.path.dirname",
   "os.path.exists",
   "os.path.join",
   "scipy.sparse.vstack"
  ],
  "type": "function"
 },
 "sklearn.datasets._twenty_newsgroups.strip_newsgroup_footer": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets._twenty_newsgroups.strip_newsgroup_header": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets._twenty_newsgroups.strip_newsgroup_quoting": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets.base": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.datasets.base.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets.california_housing": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.datasets.california_housing.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets.covtype": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.datasets.covtype.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets.kddcup99": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.datasets.kddcup99.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets.lfw": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.datasets.lfw.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets.olivetti_faces": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.datasets.olivetti_faces.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets.openml": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.datasets.openml.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets.rcv1": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.datasets.rcv1.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets.samples_generator": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.datasets.samples_generator.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets.setup": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.distutils.core.setup"
  ],
  "type": "module"
 },
 "sklearn.datasets.setup.configuration": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.Configuration",
   "numpy.get_include",
   "os.path.join",
   "platform.python_implementation"
  ],
  "type": "function"
 },
 "sklearn.datasets.species_distributions": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.datasets.species_distributions.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets.svmlight_format": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.datasets.svmlight_format.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.datasets.tests.test_20news": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.datasets.tests.test_20news.test_20news": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.unique",
   "numpy.where",
   "sklearn.datasets.fetch_20newsgroups",
   "sklearn.utils._testing.SkipTest"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_20news.test_20news_length_consistency": {
  "lineno": 50,
  "symbols_in_volume": [
   "sklearn.datasets.fetch_20newsgroups",
   "sklearn.utils._testing.SkipTest"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_20news.test_20news_normalization": {
  "lineno": 100,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.linalg.norm",
   "sklearn.datasets.fetch_20newsgroups_vectorized",
   "sklearn.preprocessing.normalize",
   "sklearn.utils._testing.SkipTest",
   "sklearn.utils._testing.assert_allclose_dense_sparse"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_20news.test_20news_vectorized": {
  "lineno": 67,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.float64",
   "scipy.sparse.isspmatrix_csr",
   "sklearn.datasets.fetch_20newsgroups",
   "sklearn.datasets.fetch_20newsgroups_vectorized",
   "sklearn.datasets.tests.test_common.check_return_X_y",
   "sklearn.utils._testing.SkipTest"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.datasets.tests.test_base._remove_dir": {
  "lineno": 35,
  "symbols_in_volume": [
   "os.path.isdir",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.data_home": {
  "lineno": 40,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.load_files_root": {
  "lineno": 47,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_bunch_dir": {
  "lineno": 276,
  "symbols_in_volume": [
   "sklearn.datasets.load_iris"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_bunch_pickle_generated_with_0_16_and_read_with_0_17": {
  "lineno": 255,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "sklearn.utils.Bunch"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_category_dir_1": {
  "lineno": 54,
  "symbols_in_volume": [
   "pytest.fixture",
   "tempfile.NamedTemporaryFile",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_category_dir_2": {
  "lineno": 65,
  "symbols_in_volume": [
   "pytest.fixture",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_data_home": {
  "lineno": 72,
  "symbols_in_volume": [
   "os.path.exists",
   "sklearn.datasets.clear_data_home",
   "sklearn.datasets.get_data_home"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_default_empty_load_files": {
  "lineno": 87,
  "symbols_in_volume": [
   "sklearn.datasets.load_files"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_default_load_files": {
  "lineno": 94,
  "symbols_in_volume": [
   "pytest.xfail",
   "sklearn.datasets.load_files",
   "sklearn.utils.IS_PYPY"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_boston": {
  "lineno": 236,
  "symbols_in_volume": [
   "functools.partial",
   "os.path.exists",
   "sklearn.datasets.load_boston",
   "sklearn.datasets.tests.test_common.check_return_X_y"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_breast_cancer": {
  "lineno": 224,
  "symbols_in_volume": [
   "functools.partial",
   "os.path.exists",
   "sklearn.datasets.load_breast_cancer",
   "sklearn.datasets.tests.test_common.check_return_X_y"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_diabetes": {
  "lineno": 177,
  "symbols_in_volume": [
   "functools.partial",
   "sklearn.datasets.load_diabetes",
   "sklearn.datasets.tests.test_common.check_return_X_y"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_digits": {
  "lineno": 145,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.unique",
   "sklearn.datasets.load_digits",
   "sklearn.datasets.tests.test_common.check_return_X_y"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_digits_n_class_lt_10": {
  "lineno": 154,
  "symbols_in_volume": [
   "numpy.unique",
   "sklearn.datasets.load_digits"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_files_w_categories_desc_and_encoding": {
  "lineno": 105,
  "symbols_in_volume": [
   "os.path.abspath",
   "pytest.xfail",
   "sklearn.datasets.load_files",
   "sklearn.utils.IS_PYPY"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_files_wo_load_content": {
  "lineno": 118,
  "symbols_in_volume": [
   "sklearn.datasets.load_files"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_iris": {
  "lineno": 201,
  "symbols_in_volume": [
   "functools.partial",
   "os.path.exists",
   "sklearn.datasets.load_iris",
   "sklearn.datasets.tests.test_common.check_return_X_y"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_linnerud": {
  "lineno": 188,
  "symbols_in_volume": [
   "functools.partial",
   "os.path.exists",
   "sklearn.datasets.load_linnerud",
   "sklearn.datasets.tests.test_common.check_return_X_y"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_missing_sample_image_error": {
  "lineno": 169,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.datasets.load_sample_image",
   "sklearn.externals._pilutil.pillow_installed",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_sample_image": {
  "lineno": 160,
  "symbols_in_volume": [
   "sklearn.datasets.load_sample_image",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_sample_images": {
  "lineno": 127,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.uint8",
   "sklearn.datasets.load_sample_images",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_load_wine": {
  "lineno": 213,
  "symbols_in_volume": [
   "functools.partial",
   "sklearn.datasets.load_wine",
   "sklearn.datasets.tests.test_common.check_return_X_y"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_loads_dumps_bunch": {
  "lineno": 248,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "sklearn.utils.Bunch"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_refresh_cache": {
  "lineno": 282,
  "symbols_in_volume": [
   "joblib",
   "pytest.warns",
   "sklearn.datasets._base._refresh_cache"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_refresh_cache._dump_raise": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_refresh_cache._dump_safe": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_refresh_cache._load_warn": {
  "lineno": 286,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_base.test_refresh_cache._load_warn_unrelated": {
  "lineno": 298,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_california_housing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.datasets.tests.test_california_housing.fetch": {
  "lineno": 12,
  "symbols_in_volume": [
   "sklearn.datasets.fetch_california_housing"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_california_housing.test_fetch": {
  "lineno": 16,
  "symbols_in_volume": [
   "functools.partial",
   "sklearn.datasets.tests.test_common.check_return_X_y",
   "sklearn.utils._testing.SkipTest"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_common": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.datasets.tests.test_common.check_return_X_y": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets.tests.test_covtype": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.datasets.tests.test_covtype.fetch": {
  "lineno": 12,
  "symbols_in_volume": [
   "sklearn.datasets.fetch_covtype"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_covtype.test_fetch": {
  "lineno": 16,
  "symbols_in_volume": [
   "functools.partial",
   "sklearn.datasets.tests.test_common.check_return_X_y",
   "sklearn.utils._testing.SkipTest"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_kddcup99": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.datasets.tests.test_kddcup99.test_percent10": {
  "lineno": 15,
  "symbols_in_volume": [
   "functools.partial",
   "sklearn.datasets.fetch_kddcup99",
   "sklearn.datasets.tests.test_common.check_return_X_y",
   "sklearn.utils._testing.SkipTest"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_kddcup99.test_shuffle": {
  "lineno": 48,
  "symbols_in_volume": [
   "sklearn.datasets.fetch_kddcup99",
   "sklearn.utils._testing.SkipTest"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_lfw": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.datasets.tests.test_lfw.setup_module": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.RandomState",
   "os.makedirs",
   "os.path.exists",
   "os.path.join",
   "random.Random",
   "sklearn.externals._pilutil.imsave",
   "sklearn.externals._pilutil.pillow_installed",
   "sklearn.utils._testing.SkipTest",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_lfw.teardown_module": {
  "lineno": 107,
  "symbols_in_volume": [
   "os.path.isdir",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_lfw.test_load_empty_lfw_pairs": {
  "lineno": 166,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.datasets.fetch_lfw_pairs"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_lfw.test_load_empty_lfw_people": {
  "lineno": 115,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.datasets.fetch_lfw_people"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_lfw.test_load_fake_lfw_pairs": {
  "lineno": 172,
  "symbols_in_volume": [
   "sklearn.datasets.fetch_lfw_pairs",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_lfw.test_load_fake_lfw_people": {
  "lineno": 121,
  "symbols_in_volume": [
   "functools.partial",
   "sklearn.datasets.fetch_lfw_people",
   "sklearn.datasets.tests.test_common.check_return_X_y",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_lfw.test_load_fake_lfw_people_too_restrictive": {
  "lineno": 160,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.datasets.fetch_lfw_people"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_olivetti_faces": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.datasets.tests.test_olivetti_faces._is_olivetti_faces_not_available": {
  "lineno": 12,
  "symbols_in_volume": [
   "sklearn.datasets.fetch_olivetti_faces"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_olivetti_faces.test_olivetti_faces": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.sort",
   "numpy.unique",
   "pytest.mark.skipif",
   "sklearn.datasets.fetch_olivetti_faces",
   "sklearn.datasets.tests.test_common.check_return_X_y",
   "sklearn.utils.Bunch",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml": {
  "lineno": null,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.dirname"
  ],
  "type": "module"
 },
 "sklearn.datasets.tests.test_openml._fetch_dataset_from_openml": {
  "lineno": 71,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.array_equal",
   "numpy.count_nonzero",
   "numpy.float64",
   "numpy.isfinite",
   "numpy.isnan",
   "numpy.ndarray",
   "numpy.testing.assert_allclose",
   "numpy.unique",
   "sklearn.datasets.fetch_openml",
   "sklearn.datasets.tests.test_common.check_return_X_y"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions": {
  "lineno": 147,
  "symbols_in_volume": [
   "gzip.open",
   "sklearn.datasets._openml"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions.MockHTTPResponse": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions.MockHTTPResponse.__init__": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions.MockHTTPResponse.close": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions.MockHTTPResponse.info": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions.MockHTTPResponse.read": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions.MockHTTPResponse.seek": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions.MockHTTPResponse.tell": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions._file_name": {
  "lineno": 183,
  "symbols_in_volume": [
   "re.sub"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions._mock_urlopen": {
  "lineno": 244,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions._mock_urlopen_data_description": {
  "lineno": 187,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions._mock_urlopen_data_features": {
  "lineno": 200,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions._mock_urlopen_data_list": {
  "lineno": 224,
  "symbols_in_volume": [
   "json.loads",
   "os.path.join",
   "urllib.error.HTTPError"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._monkey_patch_webbased_functions._mock_urlopen_download_data": {
  "lineno": 211,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._test_features_list": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "sklearn.datasets._openml._download_data_arff",
   "sklearn.datasets._openml._get_data_description_by_id",
   "sklearn.datasets.fetch_openml"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml._test_features_list.decode_column": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.utils.is_scalar_nan"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_convert_arff_data_dataframe_warning_low_memory_pandas": {
  "lineno": 481,
  "symbols_in_volume": [
   "pytest.importorskip",
   "pytest.warns",
   "sklearn.config_context",
   "sklearn.datasets.fetch_openml"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_dataset_with_openml_error": {
  "lineno": 1107,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.datasets.fetch_openml",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_dataset_with_openml_warning": {
  "lineno": 1119,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.datasets.fetch_openml",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_decode_anneal": {
  "lineno": 766,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_decode_cpu": {
  "lineno": 809,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_decode_emotions": {
  "lineno": 908,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_decode_iris": {
  "lineno": 722,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_feature_to_dtype": {
  "lineno": 263,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int64",
   "pytest.mark.parametrize",
   "sklearn.datasets._openml._feature_to_dtype"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_feature_to_dtype_error": {
  "lineno": 279,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.datasets._openml._feature_to_dtype"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_nonexiting": {
  "lineno": 1048,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.datasets.fetch_openml",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_adultcensus": {
  "lineno": 847,
  "symbols_in_volume": [
   "numpy.float64",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_adultcensus_pandas": {
  "lineno": 521,
  "symbols_in_volume": [
   "pytest.importorskip",
   "sklearn.datasets.fetch_openml"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_adultcensus_pandas_return_X_y": {
  "lineno": 493,
  "symbols_in_volume": [
   "pytest.importorskip",
   "sklearn.datasets.fetch_openml"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_anneal": {
  "lineno": 747,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_anneal_multitarget": {
  "lineno": 772,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_anneal_pandas": {
  "lineno": 390,
  "symbols_in_volume": [
   "pytest.importorskip",
   "sklearn.datasets.fetch_openml"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_australian": {
  "lineno": 815,
  "symbols_in_volume": [
   "numpy.float64",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_australian_pandas_error_sparse": {
  "lineno": 471,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.datasets.fetch_openml"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_cache": {
  "lineno": 994,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize",
   "sklearn.datasets._openml",
   "sklearn.datasets.fetch_openml"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_cache._mock_urlopen_raise": {
  "lineno": 996,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_cpu": {
  "lineno": 791,
  "symbols_in_volume": [
   "numpy.float64",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_cpu_pandas": {
  "lineno": 427,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.float64",
   "pytest.importorskip",
   "sklearn.datasets.fetch_openml"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_emotions": {
  "lineno": 888,
  "symbols_in_volume": [
   "numpy.float64",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_emotions_pandas": {
  "lineno": 597,
  "symbols_in_volume": [
   "numpy.all",
   "pytest.importorskip",
   "sklearn.datasets.fetch_openml"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_inactive": {
  "lineno": 1032,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.datasets.fetch_openml",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_iris": {
  "lineno": 691,
  "symbols_in_volume": [
   "numpy.float64",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_iris_multitarget": {
  "lineno": 728,
  "symbols_in_volume": [
   "numpy.float64",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_iris_multitarget_pandas": {
  "lineno": 348,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.float64",
   "pytest.importorskip",
   "sklearn.datasets.fetch_openml"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_iris_pandas": {
  "lineno": 288,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.float64",
   "pytest.importorskip",
   "sklearn.datasets.fetch_openml"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_iris_pandas_equal_to_no_frame": {
  "lineno": 329,
  "symbols_in_volume": [
   "pytest.importorskip",
   "sklearn.datasets.fetch_openml",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_miceprotein": {
  "lineno": 866,
  "symbols_in_volume": [
   "numpy.float64",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_miceprotein_pandas": {
  "lineno": 557,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.float64",
   "pytest.importorskip",
   "sklearn.datasets.fetch_openml"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_notarget": {
  "lineno": 1018,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.datasets.fetch_openml"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_raises_illegal_argument": {
  "lineno": 1153,
  "symbols_in_volume": [
   "sklearn.datasets.fetch_openml",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_raises_missing_values_target": {
  "lineno": 1145,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.datasets.fetch_openml",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_titanic_pandas": {
  "lineno": 635,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.float64",
   "pytest.importorskip",
   "sklearn.datasets.fetch_openml"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_fetch_openml_with_ignored_feature": {
  "lineno": 1169,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.datasets.fetch_openml"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_illegal_column": {
  "lineno": 1131,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.datasets.fetch_openml",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_open_openml_url_cache": {
  "lineno": 914,
  "symbols_in_volume": [
   "os.path.isfile",
   "pytest.mark.parametrize",
   "sklearn.datasets._openml._DATA_FILE.format",
   "sklearn.datasets._openml._get_local_path",
   "sklearn.datasets._openml._open_openml_url"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_open_openml_url_unlinks_local_path": {
  "lineno": 932,
  "symbols_in_volume": [
   "os.path.exists",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.datasets._openml",
   "sklearn.datasets._openml._DATA_FILE.format",
   "sklearn.datasets._openml._get_local_path",
   "sklearn.datasets._openml._open_openml_url"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_open_openml_url_unlinks_local_path._mock_urlopen": {
  "lineno": 941,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_raises_illegal_multitarget": {
  "lineno": 1058,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.datasets.fetch_openml",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_retry_with_clean_cache": {
  "lineno": 955,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.dirname",
   "pytest.warns",
   "sklearn.datasets._openml._DATA_FILE.format",
   "sklearn.datasets._openml._get_local_path"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_retry_with_clean_cache._load_data": {
  "lineno": 965,
  "symbols_in_volume": [
   "os.path.exists",
   "sklearn.datasets._openml._retry_with_clean_cache"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_retry_with_clean_cache_http_error": {
  "lineno": 978,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.datasets._openml._DATA_FILE.format",
   "urllib.error.HTTPError"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_retry_with_clean_cache_http_error._load_data": {
  "lineno": 983,
  "symbols_in_volume": [
   "sklearn.datasets._openml._retry_with_clean_cache",
   "urllib.error.HTTPError"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_string_attribute_without_dataframe": {
  "lineno": 1096,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.datasets.fetch_openml",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_openml.test_warn_ignore_attribute": {
  "lineno": 1070,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.datasets.fetch_openml",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_rcv1": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.datasets.tests.test_rcv1.test_fetch_rcv1": {
  "lineno": 17,
  "symbols_in_volume": [
   "errno.ENOENT",
   "functools.partial",
   "numpy.sort",
   "scipy.sparse.issparse",
   "sklearn.datasets.fetch_rcv1",
   "sklearn.datasets.tests.test_common.check_return_X_y",
   "sklearn.utils._testing.SkipTest",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_biclusters": {
  "lineno": 434,
  "symbols_in_volume": [
   "sklearn.datasets.make_biclusters",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.validation.assert_all_finite"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_blobs": {
  "lineno": 264,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.unique",
   "sklearn.datasets.make_blobs",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_blobs_error": {
  "lineno": 315,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.datasets.make_blobs",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_blobs_n_samples_centers_none": {
  "lineno": 300,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bincount",
   "pytest.mark.parametrize",
   "sklearn.datasets.make_blobs"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_blobs_n_samples_list": {
  "lineno": 277,
  "symbols_in_volume": [
   "numpy.bincount",
   "sklearn.datasets.make_blobs"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_blobs_n_samples_list_with_centers": {
  "lineno": 286,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bincount",
   "sklearn.datasets.make_blobs",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_checkerboard": {
  "lineno": 449,
  "symbols_in_volume": [
   "sklearn.datasets.make_checkerboard",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.validation.assert_all_finite"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_circles": {
  "lineno": 479,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.datasets.make_circles",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_classification": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.unique",
   "sklearn.datasets.make_classification"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_classification_informative_features": {
  "lineno": 64,
  "symbols_in_volume": [
   "collections.defaultdict",
   "functools.partial",
   "numpy.abs",
   "numpy.bincount",
   "numpy.int",
   "numpy.ones",
   "numpy.sign",
   "numpy.unique",
   "pytest.raises",
   "sklearn.datasets.make_classification",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_classification_weights_array_or_list_ok": {
  "lineno": 169,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "sklearn.datasets.make_classification",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_classification_weights_type": {
  "lineno": 149,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.random",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.datasets.make_classification"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_friedman1": {
  "lineno": 336,
  "symbols_in_volume": [
   "numpy.pi",
   "numpy.sin",
   "sklearn.datasets.make_friedman1",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_friedman2": {
  "lineno": 349,
  "symbols_in_volume": [
   "sklearn.datasets.make_friedman2",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_friedman3": {
  "lineno": 361,
  "symbols_in_volume": [
   "numpy.arctan",
   "sklearn.datasets.make_friedman3",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_hastie_10_2": {
  "lineno": 225,
  "symbols_in_volume": [
   "numpy.unique",
   "sklearn.datasets.make_hastie_10_2"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_low_rank_matrix": {
  "lineno": 372,
  "symbols_in_volume": [
   "numpy.linalg.svd",
   "sklearn.datasets.make_low_rank_matrix"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_moons": {
  "lineno": 470,
  "symbols_in_volume": [
   "sklearn.datasets.make_moons",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_multilabel_classification_return_indicator": {
  "lineno": 192,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.sum",
   "sklearn.datasets.make_multilabel_classification",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_multilabel_classification_return_indicator_sparse": {
  "lineno": 214,
  "symbols_in_volume": [
   "scipy.sparse.issparse",
   "sklearn.datasets.make_multilabel_classification"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_multilabel_classification_return_sequences": {
  "lineno": 179,
  "symbols_in_volume": [
   "sklearn.datasets.make_multilabel_classification"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_regression": {
  "lineno": 232,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.std",
   "sklearn.datasets.make_regression",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_regression_multitarget": {
  "lineno": 250,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.std",
   "sklearn.datasets.make_regression",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_s_curve": {
  "lineno": 425,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.sign",
   "numpy.sin",
   "sklearn.datasets.make_s_curve",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_sparse_coded_signal": {
  "lineno": 383,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.flatnonzero",
   "numpy.ones",
   "numpy.sqrt",
   "sklearn.datasets.make_sparse_coded_signal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_sparse_uncorrelated": {
  "lineno": 397,
  "symbols_in_volume": [
   "sklearn.datasets.make_sparse_uncorrelated"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_spd_matrix": {
  "lineno": 404,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linalg.eig",
   "sklearn.datasets.make_spd_matrix",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_samples_generator.test_make_swiss_roll": {
  "lineno": 416,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.sin",
   "sklearn.datasets.make_swiss_roll",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format": {
  "lineno": null,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join",
   "sklearn.utils._testing.fails_if_pypy"
  ],
  "type": "module"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_dump": {
  "lineno": 218,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.arange",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.issparse",
   "sklearn.__version__",
   "sklearn.datasets.dump_svmlight_file",
   "sklearn.datasets.load_svmlight_file",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_dump_comment": {
  "lineno": 333,
  "symbols_in_volume": [
   "io.BytesIO",
   "pytest.raises",
   "sklearn.datasets.dump_svmlight_file",
   "sklearn.datasets.load_svmlight_file",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_dump_concise": {
  "lineno": 303,
  "symbols_in_volume": [
   "io.BytesIO",
   "sklearn.datasets.dump_svmlight_file",
   "sklearn.datasets.load_svmlight_file",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_dump_invalid": {
  "lineno": 366,
  "symbols_in_volume": [
   "io.BytesIO",
   "pytest.raises",
   "sklearn.datasets.dump_svmlight_file",
   "sklearn.datasets.load_svmlight_file"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_dump_multilabel": {
  "lineno": 287,
  "symbols_in_volume": [
   "io.BytesIO",
   "scipy.sparse.csr_matrix",
   "sklearn.datasets.dump_svmlight_file"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_dump_query_id": {
  "lineno": 379,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.arange",
   "sklearn.datasets.dump_svmlight_file",
   "sklearn.datasets.load_svmlight_file",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_invalid_filename": {
  "lineno": 213,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.datasets.load_svmlight_file"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_compressed": {
  "lineno": 112,
  "symbols_in_volume": [
   "bz2.BZ2File",
   "gzip.open",
   "os.remove",
   "shutil.copyfileobj",
   "sklearn.datasets.load_svmlight_file",
   "sklearn.utils._testing.assert_array_almost_equal",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_invalid_file": {
  "lineno": 140,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.datasets.load_svmlight_file"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_invalid_file2": {
  "lineno": 201,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.datasets.load_svmlight_files"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_invalid_order_file": {
  "lineno": 145,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.datasets.load_svmlight_file"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_large_qid": {
  "lineno": 188,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.arange",
   "numpy.unique",
   "pytest.mark.skip",
   "sklearn.datasets.load_svmlight_file",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_offset_exhaustive_splits": {
  "lineno": 479,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.arange",
   "numpy.array",
   "numpy.concatenate",
   "numpy.random.RandomState",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.vstack",
   "sklearn.datasets.dump_svmlight_file",
   "sklearn.datasets.load_svmlight_file",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_file": {
  "lineno": 29,
  "symbols_in_volume": [
   "sklearn.datasets.load_svmlight_file",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_file_fd": {
  "lineno": 60,
  "symbols_in_volume": [
   "os.O_RDONLY",
   "os.close",
   "os.open",
   "sklearn.datasets.load_svmlight_file",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_file_multilabel": {
  "lineno": 73,
  "symbols_in_volume": [
   "sklearn.datasets.load_svmlight_file"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_file_n_features": {
  "lineno": 93,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.datasets.load_svmlight_file"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_files": {
  "lineno": 78,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "sklearn.datasets.load_svmlight_files",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_with_long_qid": {
  "lineno": 394,
  "symbols_in_volume": [
   "io.BytesIO",
   "sklearn.datasets.dump_svmlight_file",
   "sklearn.datasets.load_svmlight_file",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_with_offsets": {
  "lineno": 441,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.concatenate",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.vstack",
   "sklearn.datasets.dump_svmlight_file",
   "sklearn.datasets.load_svmlight_file",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_with_offsets_error": {
  "lineno": 519,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.datasets.load_svmlight_file"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_with_qid": {
  "lineno": 171,
  "symbols_in_volume": [
   "io.BytesIO",
   "sklearn.datasets.load_svmlight_file",
   "sklearn.datasets.load_svmlight_files",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_zero_based": {
  "lineno": 150,
  "symbols_in_volume": [
   "io.BytesIO",
   "pytest.raises",
   "sklearn.datasets.load_svmlight_file"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_zero_based_auto": {
  "lineno": 156,
  "symbols_in_volume": [
   "io.BytesIO",
   "sklearn.datasets.load_svmlight_file",
   "sklearn.datasets.load_svmlight_files"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_load_zeros": {
  "lineno": 428,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.array",
   "numpy.zeros",
   "scipy.sparse.csr_matrix",
   "sklearn.datasets.dump_svmlight_file",
   "sklearn.datasets.load_svmlight_file",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.datasets.tests.test_svmlight_format.test_not_a_filename": {
  "lineno": 206,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.datasets.load_svmlight_file"
  ],
  "type": "function"
 },
 "sklearn.datasets.twenty_newsgroups": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.datasets.twenty_newsgroups.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition": {
  "lineno": null,
  "symbols_in_volume": [
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "module"
 },
 "sklearn.decomposition._base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.decomposition._base._BasePCA": {
  "lineno": 20,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.decomposition._base._BasePCA.fit": {
  "lineno": 80,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.decomposition._base._BasePCA.get_covariance": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.maximum",
   "numpy.newaxis",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "sklearn.decomposition._base._BasePCA.get_precision": {
  "lineno": 47,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.eye",
   "numpy.maximum",
   "numpy.newaxis",
   "numpy.sqrt",
   "scipy.linalg.inv"
  ],
  "type": "function"
 },
 "sklearn.decomposition._base._BasePCA.inverse_transform": {
  "lineno": 135,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.newaxis",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "sklearn.decomposition._base._BasePCA.transform": {
  "lineno": 98,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "sklearn.decomposition._dict_learning": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.decomposition._dict_learning.DictionaryLearning": {
  "lineno": 1048,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.decomposition._dict_learning.DictionaryLearning.__init__": {
  "lineno": 1182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._dict_learning.DictionaryLearning.fit": {
  "lineno": 1203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._dict_learning.MiniBatchDictionaryLearning": {
  "lineno": 1244,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.decomposition._dict_learning.MiniBatchDictionaryLearning.__init__": {
  "lineno": 1386,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._dict_learning.MiniBatchDictionaryLearning.fit": {
  "lineno": 1409,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._dict_learning.MiniBatchDictionaryLearning.partial_fit": {
  "lineno": 1447,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._dict_learning.SparseCoder": {
  "lineno": 935,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.decomposition._dict_learning.SparseCoder.__init__": {
  "lineno": 1017,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._dict_learning.SparseCoder.fit": {
  "lineno": 1028,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._dict_learning.SparseCodingMixin": {
  "lineno": 878,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.decomposition._dict_learning.SparseCodingMixin._set_sparse_coding_params": {
  "lineno": 881,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._dict_learning.SparseCodingMixin.transform": {
  "lineno": 896,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.maximum",
   "numpy.minimum"
  ],
  "type": "function"
 },
 "sklearn.decomposition._dict_learning._check_positive_coding": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._dict_learning._sparse_encode": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.clip",
   "numpy.dot",
   "numpy.maximum",
   "numpy.newaxis",
   "numpy.seterr",
   "numpy.sign"
  ],
  "type": "function"
 },
 "sklearn.decomposition._dict_learning._update_dict": {
  "lineno": 342,
  "symbols_in_volume": [
   "numpy.clip",
   "numpy.dot",
   "scipy.linalg.get_blas_funcs",
   "sys.stdout.flush",
   "sys.stdout.write"
  ],
  "type": "function"
 },
 "sklearn.decomposition._dict_learning.dict_learning": {
  "lineno": 425,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.c_",
   "numpy.nan",
   "numpy.newaxis",
   "numpy.r_",
   "numpy.sum",
   "numpy.zeros",
   "scipy.linalg.svd",
   "sys.stdout.flush",
   "sys.stdout.write",
   "time.time"
  ],
  "type": "function"
 },
 "sklearn.decomposition._dict_learning.dict_learning_online": {
  "lineno": 620,
  "symbols_in_volume": [
   "itertools.cycle",
   "math.ceil",
   "numpy.dot",
   "numpy.float64",
   "numpy.newaxis",
   "numpy.r_",
   "numpy.require",
   "numpy.zeros",
   "sys.stdout.flush",
   "sys.stdout.write",
   "time.time"
  ],
  "type": "function"
 },
 "sklearn.decomposition._dict_learning.sparse_encode": {
  "lineno": 188,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed",
   "joblib.effective_n_jobs",
   "numpy.dot",
   "numpy.empty"
  ],
  "type": "function"
 },
 "sklearn.decomposition._factor_analysis": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.decomposition._factor_analysis.FactorAnalysis": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.decomposition._factor_analysis.FactorAnalysis.__init__": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._factor_analysis.FactorAnalysis.fit": {
  "lineno": 158,
  "symbols_in_volume": [
   "math.log",
   "math.sqrt",
   "numpy.array",
   "numpy.float64",
   "numpy.inf",
   "numpy.log",
   "numpy.maximum",
   "numpy.mean",
   "numpy.newaxis",
   "numpy.ones",
   "numpy.pi",
   "numpy.sqrt",
   "numpy.sum",
   "numpy.var",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.decomposition._factor_analysis.FactorAnalysis.fit.my_svd": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._factor_analysis.FactorAnalysis.get_covariance": {
  "lineno": 280,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "sklearn.decomposition._factor_analysis.FactorAnalysis.get_precision": {
  "lineno": 296,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.dot",
   "numpy.newaxis",
   "scipy.linalg.inv"
  ],
  "type": "function"
 },
 "sklearn.decomposition._factor_analysis.FactorAnalysis.score": {
  "lineno": 348,
  "symbols_in_volume": [
   "numpy.mean"
  ],
  "type": "function"
 },
 "sklearn.decomposition._factor_analysis.FactorAnalysis.score_samples": {
  "lineno": 325,
  "symbols_in_volume": [
   "math.log",
   "numpy.dot",
   "numpy.pi"
  ],
  "type": "function"
 },
 "sklearn.decomposition._factor_analysis.FactorAnalysis.transform": {
  "lineno": 250,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.eye",
   "scipy.linalg.inv"
  ],
  "type": "function"
 },
 "sklearn.decomposition._fastica": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.decomposition._fastica.FastICA": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.decomposition._fastica.FastICA.__init__": {
  "lineno": 393,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._fastica.FastICA._fit": {
  "lineno": 410,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.dot",
   "numpy.newaxis",
   "numpy.sqrt",
   "scipy.linalg.pinv",
   "scipy.linalg.svd",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.decomposition._fastica.FastICA._fit.g": {
  "lineno": 446,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._fastica.FastICA.fit": {
  "lineno": 561,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._fastica.FastICA.fit_transform": {
  "lineno": 544,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._fastica.FastICA.inverse_transform": {
  "lineno": 603,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "sklearn.decomposition._fastica.FastICA.transform": {
  "lineno": 579,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "sklearn.decomposition._fastica._cube": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._fastica._exp": {
  "lineno": 138,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "sklearn.decomposition._fastica._gs_decorrelation": {
  "lineno": 27,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "sklearn.decomposition._fastica._ica_def": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.dot",
   "numpy.sqrt",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.decomposition._fastica._ica_par": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.dot",
   "numpy.newaxis",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.decomposition._fastica._logcosh": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.tanh"
  ],
  "type": "function"
 },
 "sklearn.decomposition._fastica._sym_decorrelation": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.sqrt",
   "scipy.linalg.eigh"
  ],
  "type": "function"
 },
 "sklearn.decomposition._fastica.fastica": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._incremental_pca": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.decomposition._incremental_pca.IncrementalPCA": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.decomposition._incremental_pca.IncrementalPCA.__init__": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._incremental_pca.IncrementalPCA.fit": {
  "lineno": 171,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.decomposition._incremental_pca.IncrementalPCA.partial_fit": {
  "lineno": 215,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.mean",
   "numpy.repeat",
   "numpy.sqrt",
   "numpy.sum",
   "numpy.vstack",
   "scipy.linalg.svd",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.decomposition._incremental_pca.IncrementalPCA.transform": {
  "lineno": 314,
  "symbols_in_volume": [
   "numpy.vstack",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.decomposition._kernel_pca": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.decomposition._kernel_pca.KernelPCA": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.decomposition._kernel_pca.KernelPCA.__init__": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._kernel_pca.KernelPCA._fit_inverse_transform": {
  "lineno": 254,
  "symbols_in_volume": [
   "scipy.linalg.solve"
  ],
  "type": "function"
 },
 "sklearn.decomposition._kernel_pca.KernelPCA._fit_transform": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.empty_like",
   "scipy.linalg.eigh",
   "scipy.sparse.linalg.eigsh"
  ],
  "type": "function"
 },
 "sklearn.decomposition._kernel_pca.KernelPCA._get_kernel": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._kernel_pca.KernelPCA._pairwise": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._kernel_pca.KernelPCA.fit": {
  "lineno": 265,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "sklearn.decomposition._kernel_pca.KernelPCA.fit_transform": {
  "lineno": 293,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "sklearn.decomposition._kernel_pca.KernelPCA.inverse_transform": {
  "lineno": 341,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "sklearn.decomposition._kernel_pca.KernelPCA.transform": {
  "lineno": 316,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.flatnonzero",
   "numpy.sqrt",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "sklearn.decomposition._lda": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float"
  ],
  "type": "module"
 },
 "sklearn.decomposition._lda.LatentDirichletAllocation": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.decomposition._lda.LatentDirichletAllocation.__init__": {
  "lineno": 288,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._lda.LatentDirichletAllocation._approx_bound": {
  "lineno": 647,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.newaxis",
   "numpy.nonzero",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.decomposition._lda.LatentDirichletAllocation._approx_bound._loglikelihood": {
  "lineno": 673,
  "symbols_in_volume": [
   "numpy.sum",
   "scipy.special.gammaln"
  ],
  "type": "function"
 },
 "sklearn.decomposition._lda.LatentDirichletAllocation._check_non_neg_array": {
  "lineno": 472,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._lda.LatentDirichletAllocation._check_params": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._lda.LatentDirichletAllocation._e_step": {
  "lineno": 356,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed",
   "joblib.effective_n_jobs",
   "numpy.vstack",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.decomposition._lda.LatentDirichletAllocation._em_step": {
  "lineno": 419,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.power"
  ],
  "type": "function"
 },
 "sklearn.decomposition._lda.LatentDirichletAllocation._init_latent_vars": {
  "lineno": 329,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "sklearn.decomposition._lda.LatentDirichletAllocation._more_tags": {
  "lineno": 469,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._lda.LatentDirichletAllocation._perplexity_precomp_distr": {
  "lineno": 744,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "sklearn.decomposition._lda.LatentDirichletAllocation._unnormalized_transform": {
  "lineno": 598,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._lda.LatentDirichletAllocation.fit": {
  "lineno": 527,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.effective_n_jobs"
  ],
  "type": "function"
 },
 "sklearn.decomposition._lda.LatentDirichletAllocation.partial_fit": {
  "lineno": 486,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.effective_n_jobs"
  ],
  "type": "function"
 },
 "sklearn.decomposition._lda.LatentDirichletAllocation.perplexity": {
  "lineno": 792,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._lda.LatentDirichletAllocation.score": {
  "lineno": 723,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._lda.LatentDirichletAllocation.transform": {
  "lineno": 627,
  "symbols_in_volume": [
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.decomposition._lda._update_doc_distribution": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.exp",
   "numpy.nonzero",
   "numpy.ones",
   "numpy.outer",
   "numpy.zeros",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.decomposition._nmf": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float32"
  ],
  "type": "module"
 },
 "sklearn.decomposition._nmf.NMF": {
  "lineno": 1081,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.decomposition._nmf.NMF.__init__": {
  "lineno": 1237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._nmf.NMF._more_tags": {
  "lineno": 1253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._nmf.NMF.fit": {
  "lineno": 1298,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._nmf.NMF.fit_transform": {
  "lineno": 1256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._nmf.NMF.inverse_transform": {
  "lineno": 1340,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "sklearn.decomposition._nmf.NMF.transform": {
  "lineno": 1315,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._nmf._beta_divergence": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "numpy.dot",
   "numpy.log",
   "numpy.product",
   "numpy.sqrt",
   "numpy.sum",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.decomposition._nmf._beta_loss_to_float": {
  "lineno": 234,
  "symbols_in_volume": [
   "numbers.Number"
  ],
  "type": "function"
 },
 "sklearn.decomposition._nmf._check_init": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.shape"
  ],
  "type": "function"
 },
 "sklearn.decomposition._nmf._check_string_param": {
  "lineno": 204,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.decomposition._nmf._compute_regularization": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._nmf._fit_coordinate_descent": {
  "lineno": 427,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._nmf._fit_multiplicative_update": {
  "lineno": 710,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float64",
   "time.time"
  ],
  "type": "function"
 },
 "sklearn.decomposition._nmf._initialize_nmf": {
  "lineno": 249,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.maximum",
   "numpy.minimum",
   "numpy.sqrt",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.decomposition._nmf._multiplicative_update_h": {
  "lineno": 628,
  "symbols_in_volume": [
   "numpy.divide",
   "numpy.dot",
   "numpy.empty",
   "numpy.newaxis",
   "numpy.sum",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.decomposition._nmf._multiplicative_update_w": {
  "lineno": 533,
  "symbols_in_volume": [
   "numpy.divide",
   "numpy.dot",
   "numpy.empty",
   "numpy.newaxis",
   "numpy.sum",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.decomposition._nmf._special_sparse_dot": {
  "lineno": 168,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.empty",
   "numpy.multiply",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.decomposition._nmf._update_coordinate_descent": {
  "lineno": 396,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.dot",
   "numpy.intp"
  ],
  "type": "function"
 },
 "sklearn.decomposition._nmf.non_negative_factorization": {
  "lineno": 844,
  "symbols_in_volume": [
   "numbers.Integral",
   "numbers.Number",
   "numpy.full",
   "numpy.sqrt",
   "numpy.zeros",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.decomposition._nmf.norm": {
  "lineno": 26,
  "symbols_in_volume": [
   "math.sqrt"
  ],
  "type": "function"
 },
 "sklearn.decomposition._nmf.trace_dot": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "sklearn.decomposition._pca": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.decomposition._pca.PCA": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.decomposition._pca.PCA.__init__": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._pca.PCA._fit": {
  "lineno": 381,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.decomposition._pca.PCA._fit_full": {
  "lineno": 423,
  "symbols_in_volume": [
   "numbers.Integral",
   "numpy.mean",
   "numpy.searchsorted",
   "scipy.linalg.svd"
  ],
  "type": "function"
 },
 "sklearn.decomposition._pca.PCA._fit_truncated": {
  "lineno": 486,
  "symbols_in_volume": [
   "numbers.Integral",
   "numpy.mean",
   "numpy.var",
   "scipy.sparse.linalg.svds"
  ],
  "type": "function"
 },
 "sklearn.decomposition._pca.PCA.fit": {
  "lineno": 327,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._pca.PCA.fit_transform": {
  "lineno": 347,
  "symbols_in_volume": [
   "math.sqrt"
  ],
  "type": "function"
 },
 "sklearn.decomposition._pca.PCA.score": {
  "lineno": 585,
  "symbols_in_volume": [
   "numpy.mean"
  ],
  "type": "function"
 },
 "sklearn.decomposition._pca.PCA.score_samples": {
  "lineno": 557,
  "symbols_in_volume": [
   "math.log",
   "numpy.dot",
   "numpy.pi"
  ],
  "type": "function"
 },
 "sklearn.decomposition._pca._assess_dimension_": {
  "lineno": 30,
  "symbols_in_volume": [
   "math.log",
   "numpy.log",
   "numpy.pi",
   "numpy.sum",
   "scipy.special.gammaln"
  ],
  "type": "function"
 },
 "sklearn.decomposition._pca._infer_dimension_": {
  "lineno": 92,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "sklearn.decomposition._sparse_pca": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.decomposition._sparse_pca.MiniBatchSparsePCA": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.decomposition._sparse_pca.MiniBatchSparsePCA.__init__": {
  "lineno": 336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._sparse_pca.MiniBatchSparsePCA.fit": {
  "lineno": 350,
  "symbols_in_volume": [
   "numpy.linalg.norm",
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.decomposition._sparse_pca.SparsePCA": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.decomposition._sparse_pca.SparsePCA.__init__": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._sparse_pca.SparsePCA.fit": {
  "lineno": 152,
  "symbols_in_volume": [
   "numpy.linalg.norm",
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.decomposition._sparse_pca.SparsePCA.transform": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._sparse_pca._check_normalize_components": {
  "lineno": 17,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.decomposition._truncated_svd": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.decomposition._truncated_svd.TruncatedSVD": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.decomposition._truncated_svd.TruncatedSVD.__init__": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._truncated_svd.TruncatedSVD.fit": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition._truncated_svd.TruncatedSVD.fit_transform": {
  "lineno": 146,
  "symbols_in_volume": [
   "numpy.var",
   "scipy.sparse.issparse",
   "scipy.sparse.linalg.svds"
  ],
  "type": "function"
 },
 "sklearn.decomposition._truncated_svd.TruncatedSVD.inverse_transform": {
  "lineno": 215,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "sklearn.decomposition._truncated_svd.TruncatedSVD.transform": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition.base": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.decomposition.base.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition.cdnmf_fast": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.decomposition.cdnmf_fast.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition.dict_learning": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.decomposition.dict_learning.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition.factor_analysis": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.decomposition.factor_analysis.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition.fastica_": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.decomposition.fastica_.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition.incremental_pca": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.decomposition.incremental_pca.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition.kernel_pca": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.decomposition.kernel_pca.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition.nmf": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.decomposition.nmf.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition.online_lda": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.decomposition.online_lda.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition.online_lda_fast": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.decomposition.online_lda_fast.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition.pca": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.decomposition.pca.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition.setup": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.distutils.core.setup"
  ],
  "type": "module"
 },
 "sklearn.decomposition.setup.configuration": {
  "lineno": 6,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.Configuration",
   "numpy.get_include",
   "os.name"
  ],
  "type": "function"
 },
 "sklearn.decomposition.sparse_pca": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.decomposition.sparse_pca.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.decomposition.tests.test_dict_learning": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "module"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_lars_code_positivity": {
  "lineno": 153,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.decomposition.DictionaryLearning"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_lars_dict_positivity": {
  "lineno": 140,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.decomposition.DictionaryLearning"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_lars_positive_parameter": {
  "lineno": 105,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.decomposition.dict_learning"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_lassocd_readonly_data": {
  "lineno": 193,
  "symbols_in_volume": [
   "numpy.dot",
   "sklearn.decomposition.DictionaryLearning",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.utils._testing.TempMemmap",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_nonzero_coefs": {
  "lineno": 205,
  "symbols_in_volume": [
   "numpy.flatnonzero",
   "numpy.newaxis",
   "sklearn.decomposition.DictionaryLearning"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_estimator_shapes": {
  "lineno": 341,
  "symbols_in_volume": [
   "sklearn.decomposition.MiniBatchDictionaryLearning"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_initialization": {
  "lineno": 355,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.decomposition.MiniBatchDictionaryLearning",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_lars_positive_parameter": {
  "lineno": 246,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.decomposition.dict_learning_online"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_overcomplete": {
  "lineno": 348,
  "symbols_in_volume": [
   "sklearn.decomposition.MiniBatchDictionaryLearning"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_partial_fit": {
  "lineno": 373,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.newaxis",
   "numpy.random.RandomState",
   "numpy.sum",
   "sklearn.decomposition.MiniBatchDictionaryLearning",
   "sklearn.decomposition.sparse_encode",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_positivity": {
  "lineno": 294,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.decomposition.dict_learning_online"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_readonly_initialization": {
  "lineno": 364,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.decomposition.MiniBatchDictionaryLearning"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_shapes": {
  "lineno": 236,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.random.RandomState",
   "sklearn.decomposition.dict_learning_online"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_verbosity": {
  "lineno": 316,
  "symbols_in_volume": [
   "io.StringIO",
   "sklearn.decomposition.MiniBatchDictionaryLearning",
   "sklearn.decomposition.dict_learning_online",
   "sys.stdout"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_overcomplete": {
  "lineno": 51,
  "symbols_in_volume": [
   "sklearn.decomposition.DictionaryLearning"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_positivity": {
  "lineno": 113,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.decomposition.DictionaryLearning"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_reconstruction": {
  "lineno": 165,
  "symbols_in_volume": [
   "numpy.dot",
   "sklearn.decomposition.DictionaryLearning",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_reconstruction_parallel": {
  "lineno": 180,
  "symbols_in_volume": [
   "numpy.dot",
   "sklearn.decomposition.DictionaryLearning",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_shapes": {
  "lineno": 40,
  "symbols_in_volume": [
   "sklearn.decomposition.DictionaryLearning"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_split": {
  "lineno": 224,
  "symbols_in_volume": [
   "sklearn.decomposition.DictionaryLearning",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_dict_learning_unknown_fit_algorithm": {
  "lineno": 217,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.decomposition.DictionaryLearning"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_max_iter": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.logical_not",
   "numpy.r_",
   "pytest.warns",
   "sklearn.decomposition.SparseCoder",
   "sklearn.exceptions.ConvergenceWarning"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_max_iter.ricker_function": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.linspace",
   "numpy.pi",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_max_iter.ricker_matrix": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.linspace",
   "numpy.newaxis",
   "numpy.sqrt",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_minibatch_dictionary_learning_lars": {
  "lineno": 280,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.decomposition.MiniBatchDictionaryLearning"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_minibatch_dictionary_learning_positivity": {
  "lineno": 253,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.decomposition.MiniBatchDictionaryLearning"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_coder_estimator": {
  "lineno": 473,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.dot",
   "numpy.newaxis",
   "numpy.random.RandomState",
   "numpy.sqrt",
   "numpy.sum",
   "sklearn.decomposition.SparseCoder"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_coder_parallel_mmap": {
  "lineno": 484,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.random.RandomState",
   "numpy.random.rand",
   "sklearn.decomposition.SparseCoder"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_encode_error": {
  "lineno": 446,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.dot",
   "numpy.newaxis",
   "numpy.random.RandomState",
   "numpy.sqrt",
   "numpy.sum",
   "sklearn.decomposition.sparse_encode"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_encode_error_default_sparsity": {
  "lineno": 456,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.decomposition.sparse_encode",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_encode_input": {
  "lineno": 434,
  "symbols_in_volume": [
   "numpy.newaxis",
   "numpy.random.RandomState",
   "numpy.sum",
   "sklearn.decomposition.sparse_encode",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_encode_positivity": {
  "lineno": 404,
  "symbols_in_volume": [
   "numpy.newaxis",
   "numpy.random.RandomState",
   "numpy.sum",
   "pytest.mark.parametrize",
   "sklearn.decomposition.sparse_encode"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_encode_shapes": {
  "lineno": 394,
  "symbols_in_volume": [
   "numpy.newaxis",
   "numpy.random.RandomState",
   "numpy.sum",
   "sklearn.decomposition.sparse_encode"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_encode_shapes_omp": {
  "lineno": 28,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.random.RandomState",
   "sklearn.decomposition.sparse_encode"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_sparse_encode_unavailable_positivity": {
  "lineno": 422,
  "symbols_in_volume": [
   "numpy.newaxis",
   "numpy.random.RandomState",
   "numpy.sum",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.decomposition.sparse_encode"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_dict_learning.test_unknown_method": {
  "lineno": 465,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.raises",
   "sklearn.decomposition.sparse_encode"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_factor_analysis": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.decomposition.tests.test_factor_analysis.test_factor_analysis": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.all",
   "numpy.cov",
   "numpy.diff",
   "numpy.dot",
   "numpy.eye",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.sum",
   "pytest.raises",
   "sklearn.decomposition.FactorAnalysis",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_warns",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.decomposition.tests.test_fastica.center_and_norm": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.rollaxis"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.test_fastica_convergence_fail": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.c_.T",
   "numpy.ceil",
   "numpy.dot",
   "numpy.linspace",
   "numpy.pi",
   "numpy.random.RandomState",
   "numpy.sin",
   "sklearn.decomposition.FastICA",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.test_fastica_errors": {
  "lineno": 267,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.raises",
   "sklearn.decomposition.FastICA",
   "sklearn.decomposition.fastica"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.test_fastica_nowhiten": {
  "lineno": 139,
  "symbols_in_volume": [
   "sklearn.decomposition.FastICA",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.test_fastica_output_shape": {
  "lineno": 285,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.decomposition.fastica"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.test_fastica_simple": {
  "lineno": 50,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.array",
   "numpy.c_.T",
   "numpy.cos",
   "numpy.dot",
   "numpy.linspace",
   "numpy.random.RandomState",
   "numpy.sign",
   "numpy.sin",
   "numpy.tanh",
   "pytest.mark.parametrize",
   "pytest.raises",
   "scipy.stats.t.rvs",
   "sklearn.decomposition.FastICA",
   "sklearn.decomposition.PCA",
   "sklearn.decomposition.fastica",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.test_fastica_simple.g_test": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.test_fit_transform": {
  "lineno": 216,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.decomposition.FastICA",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.test_gs": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.linalg.svd",
   "numpy.random.RandomState",
   "sklearn.decomposition._fastica._gs_decorrelation"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.test_inverse_transform": {
  "lineno": 237,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.decomposition.FastICA",
   "sklearn.utils._testing.assert_array_almost_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_fastica.test_non_square_fastica": {
  "lineno": 173,
  "symbols_in_volume": [
   "numpy.c_.T",
   "numpy.ceil",
   "numpy.dot",
   "numpy.linspace",
   "numpy.pi",
   "numpy.random.RandomState",
   "numpy.sign",
   "numpy.sin",
   "sklearn.decomposition.fastica",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.datasets.load_iris"
  ],
  "type": "module"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_explained_variances": {
  "lineno": 276,
  "symbols_in_volume": [
   "sklearn.datasets.make_low_rank_matrix",
   "sklearn.decomposition.IncrementalPCA",
   "sklearn.decomposition.PCA",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.eye",
   "numpy.testing.assert_allclose",
   "sklearn.decomposition.IncrementalPCA",
   "sklearn.decomposition.PCA"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_against_pca_iris": {
  "lineno": 253,
  "symbols_in_volume": [
   "numpy.abs",
   "sklearn.decomposition.IncrementalPCA",
   "sklearn.decomposition.PCA",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_against_pca_random_data": {
  "lineno": 263,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.random.RandomState",
   "sklearn.decomposition.IncrementalPCA",
   "sklearn.decomposition.PCA",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_batch_rank": {
  "lineno": 216,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.RandomState",
   "sklearn.decomposition.IncrementalPCA",
   "sklearn.utils._testing.assert_allclose_dense_sparse"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_batch_signs": {
  "lineno": 184,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.RandomState",
   "numpy.sign",
   "sklearn.decomposition.IncrementalPCA",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_batch_values": {
  "lineno": 200,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.RandomState",
   "sklearn.decomposition.IncrementalPCA",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_check_projection": {
  "lineno": 74,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.random.RandomState",
   "numpy.sqrt",
   "sklearn.decomposition.IncrementalPCA",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_inverse": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.decomposition.IncrementalPCA",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_num_features_change": {
  "lineno": 172,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.raises",
   "sklearn.decomposition.IncrementalPCA"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_partial_fit": {
  "lineno": 233,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.RandomState",
   "sklearn.decomposition.IncrementalPCA",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_partial_fit_float_division": {
  "lineno": 365,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose",
   "sklearn.decomposition.IncrementalPCA"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_set_params": {
  "lineno": 149,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.raises",
   "sklearn.decomposition.IncrementalPCA"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_sparse": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.eye",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pytest.raises",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.lil_matrix",
   "sklearn.decomposition.IncrementalPCA",
   "sklearn.decomposition.PCA"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_validation": {
  "lineno": 111,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "sklearn.decomposition.IncrementalPCA"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_n_components_none": {
  "lineno": 131,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.decomposition.IncrementalPCA"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_singular_values": {
  "lineno": 293,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.linalg.norm",
   "numpy.random.RandomState",
   "numpy.sqrt",
   "numpy.sum",
   "sklearn.datasets.make_low_rank_matrix",
   "sklearn.decomposition.IncrementalPCA",
   "sklearn.decomposition.PCA",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_incremental_pca.test_whitening": {
  "lineno": 344,
  "symbols_in_volume": [
   "numpy.abs",
   "sklearn.datasets.make_low_rank_matrix",
   "sklearn.decomposition.IncrementalPCA",
   "sklearn.decomposition.PCA",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_gridsearch_pipeline": {
  "lineno": 219,
  "symbols_in_volume": [
   "numpy.arange",
   "pytest.mark.filterwarnings",
   "sklearn.datasets.make_circles",
   "sklearn.decomposition.KernelPCA",
   "sklearn.linear_model.Perceptron",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.pipeline.Pipeline"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_gridsearch_pipeline_precomputed": {
  "lineno": 235,
  "symbols_in_volume": [
   "numpy.arange",
   "pytest.mark.filterwarnings",
   "sklearn.datasets.make_circles",
   "sklearn.decomposition.KernelPCA",
   "sklearn.linear_model.Perceptron",
   "sklearn.metrics.pairwise.rbf_kernel",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.pipeline.Pipeline"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_conditioning": {
  "lineno": 276,
  "symbols_in_volume": [
   "numpy.all",
   "sklearn.decomposition.KernelPCA",
   "sklearn.utils.validation._check_psd_eigenvalues"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.random.RandomState",
   "sklearn.decomposition.KernelPCA",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca.histogram": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.minimum"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_consistent_transform": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.decomposition.KernelPCA",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_deterministic_output": {
  "lineno": 74,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.tile",
   "numpy.zeros",
   "sklearn.decomposition.KernelPCA",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_invalid_kernel": {
  "lineno": 210,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.raises",
   "sklearn.decomposition.KernelPCA"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_invalid_parameters": {
  "lineno": 56,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.decomposition.KernelPCA"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_linear_kernel": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.random.RandomState",
   "sklearn.decomposition.KernelPCA",
   "sklearn.decomposition.PCA",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_n_components": {
  "lineno": 128,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.decomposition.KernelPCA"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_precomputed": {
  "lineno": 184,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.dot",
   "numpy.random.RandomState",
   "sklearn.decomposition.KernelPCA",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_sparse": {
  "lineno": 89,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.random.RandomState",
   "scipy.sparse.csr_matrix",
   "sklearn.decomposition.KernelPCA",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_leave_zero_eig": {
  "lineno": 158,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.errstate",
   "pytest.warns",
   "sklearn.decomposition.KernelPCA",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_nested_circles": {
  "lineno": 252,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "sklearn.datasets.make_circles",
   "sklearn.decomposition.KernelPCA",
   "sklearn.linear_model.Perceptron"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_kernel_pca.test_remove_zero_eig": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.decomposition.KernelPCA"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.decomposition.tests.test_nmf._beta_divergence_dense": {
  "lineno": 248,
  "symbols_in_volume": [
   "numbers.Number",
   "numpy.array",
   "numpy.dot",
   "numpy.log",
   "numpy.maximum",
   "numpy.sum",
   "sklearn.utils.extmath.squared_norm"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_beta_divergence": {
  "lineno": 283,
  "symbols_in_volume": [
   "numpy.clip",
   "numpy.random.mtrand.RandomState",
   "scipy.sparse.csr_matrix",
   "sklearn.decomposition._nmf._beta_divergence",
   "sklearn.decomposition._nmf._initialize_nmf",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_initialize_close": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.dot",
   "numpy.random.mtrand.RandomState",
   "scipy.linalg.norm",
   "sklearn.decomposition._nmf._initialize_nmf"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_initialize_nn_output": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.random.mtrand.RandomState",
   "sklearn.decomposition._nmf._initialize_nmf"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_initialize_variants": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.random.mtrand.RandomState",
   "sklearn.decomposition._nmf._initialize_nmf",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_n_components_greater_n_features": {
  "lineno": 154,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.random.mtrand.RandomState",
   "sklearn.decomposition.NMF"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_decreasing": {
  "lineno": 460,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.random.mtrand.RandomState",
   "sklearn.decomposition._nmf._beta_divergence",
   "sklearn.decomposition._nmf._initialize_nmf",
   "sklearn.decomposition.non_negative_factorization",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_fit_close": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.random.mtrand.RandomState",
   "pytest.mark.parametrize",
   "sklearn.decomposition.NMF"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_fit_nn_output": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.c_",
   "sklearn.decomposition.NMF",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_inverse_transform": {
  "lineno": 142,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.decomposition.NMF",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_multiplicative_update_sparse": {
  "lineno": 333,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.random.mtrand.RandomState",
   "scipy.sparse.csr_matrix",
   "sklearn.decomposition._nmf._initialize_nmf",
   "sklearn.decomposition.non_negative_factorization",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_negative_beta_loss": {
  "lineno": 383,
  "symbols_in_volume": [
   "numpy.clip",
   "numpy.random.mtrand.RandomState",
   "scipy.sparse.csr_matrix",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_negative_beta_loss._assert_nmf_no_nan": {
  "lineno": 395,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.isnan",
   "sklearn.decomposition.non_negative_factorization"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_regularization": {
  "lineno": 412,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.random.mtrand.RandomState",
   "sklearn.decomposition._nmf.NMF"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_sparse_input": {
  "lineno": 161,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.arange",
   "numpy.random.mtrand.RandomState",
   "scipy.sparse.csc_matrix",
   "sklearn.base.clone",
   "sklearn.decomposition.NMF",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_sparse_transform": {
  "lineno": 184,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.random.mtrand.RandomState",
   "scipy.sparse.csc_matrix",
   "sklearn.decomposition.NMF",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_transform": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.random.mtrand.RandomState",
   "pytest.mark.parametrize",
   "sklearn.decomposition.NMF",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_transform_custom_init": {
  "lineno": 127,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.random.RandomState",
   "numpy.sqrt",
   "sklearn.decomposition.NMF"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_nmf_underflow": {
  "lineno": 498,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.random.RandomState",
   "sklearn.decomposition._nmf._beta_divergence",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_non_negative_factorization_checking": {
  "lineno": 223,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.ones",
   "sklearn.decomposition.non_negative_factorization",
   "sklearn.utils._testing.assert_raise_message",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_non_negative_factorization_consistency": {
  "lineno": 199,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.arange",
   "numpy.random.mtrand.RandomState",
   "sklearn.decomposition.NMF",
   "sklearn.decomposition.non_negative_factorization",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_parameter_checking": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.ones",
   "sklearn.decomposition.NMF",
   "sklearn.decomposition._nmf._initialize_nmf",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_nmf.test_special_sparse_dot": {
  "lineno": 306,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.asarray",
   "numpy.clip",
   "numpy.random.mtrand.RandomState",
   "scipy.sparse.csr_matrix",
   "sklearn.decomposition._nmf._special_sparse_dot",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.decomposition.tests.test_online_lda._build_sparse_mtx": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.full",
   "numpy.int",
   "scipy.linalg.block_diag",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.check_verbosity": {
  "lineno": 370,
  "symbols_in_volume": [
   "io.StringIO",
   "sklearn.decomposition.LatentDirichletAllocation",
   "sys.stdout"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_dirichlet_expectation": {
  "lineno": 356,
  "symbols_in_volume": [
   "numpy.empty_like",
   "numpy.exp",
   "numpy.logspace",
   "numpy.newaxis",
   "numpy.sum",
   "scipy.special.psi",
   "sklearn.decomposition._lda._dirichlet_expectation_1d",
   "sklearn.decomposition._lda._dirichlet_expectation_2d",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_invalid_params": {
  "lineno": 155,
  "symbols_in_volume": [
   "numpy.ones",
   "pytest.raises",
   "sklearn.decomposition.LatentDirichletAllocation"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_default_prior_params": {
  "lineno": 34,
  "symbols_in_volume": [
   "sklearn.decomposition.LatentDirichletAllocation",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_dense_input": {
  "lineno": 98,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.decomposition.LatentDirichletAllocation"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_empty_docs": {
  "lineno": 347,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.zeros",
   "scipy.sparse.csr_matrix",
   "sklearn.decomposition.LatentDirichletAllocation",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_fit_batch": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.decomposition.LatentDirichletAllocation"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_fit_online": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.decomposition.LatentDirichletAllocation"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_fit_perplexity": {
  "lineno": 329,
  "symbols_in_volume": [
   "sklearn.decomposition.LatentDirichletAllocation",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_fit_transform": {
  "lineno": 127,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.decomposition.LatentDirichletAllocation",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_multi_jobs": {
  "lineno": 207,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.decomposition.LatentDirichletAllocation",
   "sklearn.utils._testing.if_safe_multiprocessing_with_blas"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_negative_input": {
  "lineno": 172,
  "symbols_in_volume": [
   "numpy.full",
   "pytest.raises",
   "sklearn.decomposition.LatentDirichletAllocation"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_no_component_error": {
  "lineno": 181,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.raises",
   "sklearn.decomposition.LatentDirichletAllocation",
   "sklearn.exceptions.NotFittedError"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_partial_fit": {
  "lineno": 81,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.decomposition.LatentDirichletAllocation"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_partial_fit_dim_mismatch": {
  "lineno": 140,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.random.randint",
   "pytest.raises",
   "sklearn.decomposition.LatentDirichletAllocation"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_partial_fit_multi_jobs": {
  "lineno": 224,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.decomposition.LatentDirichletAllocation",
   "sklearn.utils._testing.if_safe_multiprocessing_with_blas"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_perplexity": {
  "lineno": 261,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.decomposition.LatentDirichletAllocation"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_preplexity_mismatch": {
  "lineno": 241,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.random.randint",
   "pytest.raises",
   "sklearn.decomposition.LatentDirichletAllocation"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_score": {
  "lineno": 284,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.decomposition.LatentDirichletAllocation"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_score_perplexity": {
  "lineno": 316,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.sum",
   "sklearn.decomposition.LatentDirichletAllocation",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_transform": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.sum",
   "sklearn.decomposition.LatentDirichletAllocation",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_lda_transform_mismatch": {
  "lineno": 193,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.raises",
   "sklearn.decomposition.LatentDirichletAllocation"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_perplexity_input_format": {
  "lineno": 303,
  "symbols_in_volume": [
   "sklearn.decomposition.LatentDirichletAllocation",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_online_lda.test_verbosity": {
  "lineno": 391,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.datasets.load_iris"
  ],
  "type": "module"
 },
 "sklearn.decomposition.tests.test_pca.check_pca_float_dtype_preservation": {
  "lineno": 519,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.random.RandomState",
   "sklearn.decomposition.PCA",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.check_pca_int_dtype_upcast_to_double": {
  "lineno": 541,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.RandomState",
   "sklearn.decomposition.PCA",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_infer_dim_1": {
  "lineno": 325,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.RandomState",
   "sklearn.decomposition.PCA",
   "sklearn.decomposition._pca._assess_dimension_"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_infer_dim_2": {
  "lineno": 339,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.RandomState",
   "sklearn.decomposition.PCA",
   "sklearn.decomposition._pca._infer_dimension_"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_infer_dim_3": {
  "lineno": 353,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.RandomState",
   "sklearn.decomposition.PCA",
   "sklearn.decomposition._pca._infer_dimension_"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_infer_dim_by_explained_variance": {
  "lineno": 366,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.approx",
   "pytest.mark.parametrize",
   "sklearn.decomposition.PCA"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_n_components_mle": {
  "lineno": 289,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.decomposition.PCA"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_n_components_mle_error": {
  "lineno": 300,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.decomposition.PCA"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_n_components_none": {
  "lineno": 276,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.decomposition.PCA"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_no_empty_slice_warning": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.random.uniform",
   "pytest.warns",
   "sklearn.decomposition.PCA"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.eye",
   "pytest.mark.parametrize",
   "sklearn.decomposition.PCA",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_bad_solver": {
  "lineno": 492,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.raises",
   "sklearn.decomposition.PCA"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_check_projection": {
  "lineno": 190,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.random.RandomState",
   "numpy.sqrt",
   "pytest.mark.parametrize",
   "sklearn.decomposition.PCA",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_check_projection_list": {
  "lineno": 205,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.decomposition.PCA",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_deterministic_output": {
  "lineno": 499,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.tile",
   "numpy.zeros",
   "pytest.mark.parametrize",
   "sklearn.decomposition.PCA",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_dim": {
  "lineno": 314,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.RandomState",
   "sklearn.decomposition.PCA"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_dtype_preservation": {
  "lineno": 513,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_explained_variance_empirical": {
  "lineno": 123,
  "symbols_in_volume": [
   "numpy.cov",
   "numpy.linalg.eig",
   "numpy.random.RandomState",
   "numpy.var",
   "pytest.mark.parametrize",
   "sklearn.datasets.make_classification",
   "sklearn.decomposition.PCA",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_explained_variance_equivalence_solver": {
  "lineno": 99,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.decomposition.PCA",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_inverse": {
  "lineno": 216,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.decomposition.PCA",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_sanity_noise_variance": {
  "lineno": 419,
  "symbols_in_volume": [
   "numpy.all",
   "pytest.mark.parametrize",
   "sklearn.datasets.load_digits",
   "sklearn.decomposition.PCA"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_score": {
  "lineno": 380,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.exp",
   "numpy.log",
   "numpy.pi",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.decomposition.PCA",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_score3": {
  "lineno": 402,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.RandomState",
   "numpy.zeros",
   "sklearn.decomposition.PCA"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_score_consistency_solvers": {
  "lineno": 431,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.datasets.load_digits",
   "sklearn.decomposition.PCA",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_singular_values": {
  "lineno": 158,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.linalg.norm",
   "numpy.random.RandomState",
   "numpy.sqrt",
   "numpy.sum",
   "pytest.mark.parametrize",
   "sklearn.decomposition.PCA",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_singular_values_consistency": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.decomposition.PCA",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_sparse_input": {
  "lineno": 481,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "pytest.raises",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.issparse",
   "sklearn.decomposition.PCA"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_svd_solver_auto": {
  "lineno": 459,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.decomposition.PCA",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_validation": {
  "lineno": 234,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.decomposition.PCA"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_pca_zero_noise_variance_edge_cases": {
  "lineno": 443,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.decomposition.PCA"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_pca.test_whitening": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.dot",
   "numpy.linspace",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.zeros",
   "pytest.approx",
   "pytest.mark.parametrize",
   "sklearn.decomposition.PCA",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.decomposition.tests.test_sparse_pca.generate_toy_data": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.zeros",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_correct_shapes": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.decomposition.SparsePCA"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_fit_transform": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.decomposition.SparsePCA",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_fit_transform_parallel": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.random.RandomState",
   "sklearn.decomposition.SparsePCA",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.if_safe_multiprocessing_with_blas"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_fit_transform_tall": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.decomposition.SparsePCA",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_initialization": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.linalg.norm",
   "numpy.random.RandomState",
   "sklearn.decomposition.SparsePCA",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_mini_batch_correct_shapes": {
  "lineno": 118,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.decomposition.MiniBatchSparsePCA"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_mini_batch_fit_transform": {
  "lineno": 133,
  "symbols_in_volume": [
   "joblib.parallel.multiprocessing",
   "numpy.all",
   "numpy.random.RandomState",
   "pytest.mark.skipif",
   "sklearn.decomposition.MiniBatchSparsePCA",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sys.platform"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_pca_vs_spca": {
  "lineno": 175,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.eye",
   "numpy.random.RandomState",
   "numpy.sign",
   "sklearn.decomposition.PCA",
   "sklearn.decomposition.SparsePCA",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_scaling_fit_transform": {
  "lineno": 164,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.decomposition.SparsePCA",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_spca_deprecation_warning": {
  "lineno": 192,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "pytest.warns",
   "sklearn.decomposition.MiniBatchSparsePCA",
   "sklearn.decomposition.SparsePCA"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_spca_error_unormalized_components": {
  "lineno": 202,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.decomposition.MiniBatchSparsePCA",
   "sklearn.decomposition.SparsePCA"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_sparse_pca.test_transform_nan": {
  "lineno": 87,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.isnan",
   "numpy.random.RandomState",
   "sklearn.decomposition.SparsePCA"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.decomposition.tests.test_truncated_svd.X_sparse": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.log",
   "pytest.fixture",
   "scipy.sparse.random",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_attributes": {
  "lineno": 42,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.decomposition.TruncatedSVD"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_explained_variance": {
  "lineno": 89,
  "symbols_in_volume": [
   "numpy.var",
   "pytest.mark.parametrize",
   "sklearn.decomposition.TruncatedSVD",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils._testing.assert_array_less"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_explained_variance_components_10_20": {
  "lineno": 113,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.decomposition.TruncatedSVD",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_integers": {
  "lineno": 81,
  "symbols_in_volume": [
   "numpy.int64",
   "sklearn.decomposition.TruncatedSVD"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_inverse_transform": {
  "lineno": 71,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.decomposition.TruncatedSVD",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_singular_values_consistency": {
  "lineno": 134,
  "symbols_in_volume": [
   "numpy.linalg.norm",
   "numpy.random.RandomState",
   "numpy.sqrt",
   "numpy.sum",
   "pytest.mark.parametrize",
   "sklearn.decomposition.TruncatedSVD",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_singular_values_expected": {
  "lineno": 154,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.random.RandomState",
   "numpy.sqrt",
   "numpy.sum",
   "pytest.mark.parametrize",
   "sklearn.decomposition.TruncatedSVD",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_solvers": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.abs",
   "pytest.mark.parametrize",
   "sklearn.decomposition.TruncatedSVD",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_sparse_formats": {
  "lineno": 59,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.decomposition.TruncatedSVD"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_too_many_components": {
  "lineno": 50,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.decomposition.TruncatedSVD"
  ],
  "type": "function"
 },
 "sklearn.decomposition.tests.test_truncated_svd.test_truncated_svd_eq_pca": {
  "lineno": 176,
  "symbols_in_volume": [
   "sklearn.decomposition.PCA",
   "sklearn.decomposition.TruncatedSVD",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.decomposition.truncated_svd": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.decomposition.truncated_svd.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.discriminant_analysis": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis.__init__": {
  "lineno": 250,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis._solve_eigen": {
  "lineno": 298,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.diag",
   "numpy.dot",
   "numpy.log",
   "numpy.sort",
   "numpy.sum",
   "scipy.linalg.eigh"
  ],
  "type": "function"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis._solve_lsqr": {
  "lineno": 259,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.dot",
   "numpy.log",
   "scipy.linalg.lstsq"
  ],
  "type": "function"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis._solve_svd": {
  "lineno": 347,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.dot",
   "numpy.log",
   "numpy.sqrt",
   "numpy.sum",
   "scipy.linalg.svd"
  ],
  "type": "function"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis.fit": {
  "lineno": 408,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.bincount",
   "numpy.float32",
   "numpy.float64",
   "numpy.isclose",
   "numpy.unique",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis.predict_log_proba": {
  "lineno": 540,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis.predict_proba": {
  "lineno": 518,
  "symbols_in_volume": [
   "numpy.vstack",
   "scipy.special.expit"
  ],
  "type": "function"
 },
 "sklearn.discriminant_analysis.LinearDiscriminantAnalysis.transform": {
  "lineno": 492,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis": {
  "lineno": 556,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.__init__": {
  "lineno": 633,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis._decision_function": {
  "lineno": 706,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.dot",
   "numpy.log",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.decision_function": {
  "lineno": 721,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.fit": {
  "lineno": 640,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.bincount",
   "numpy.dot",
   "numpy.linalg.svd",
   "numpy.sum",
   "numpy.unique",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict": {
  "lineno": 742,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict_log_proba": {
  "lineno": 779,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict_proba": {
  "lineno": 759,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.discriminant_analysis._class_cov": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "numpy.unique",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.discriminant_analysis._class_means": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.add.at",
   "numpy.bincount",
   "numpy.unique",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.discriminant_analysis._cov": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.dummy": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.dummy.DummyClassifier": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.dummy.DummyClassifier.__init__": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.dummy.DummyClassifier._more_tags": {
  "lineno": 356,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.dummy.DummyClassifier.fit": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.atleast_1d",
   "numpy.reshape",
   "scipy.sparse.issparse",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.dummy.DummyClassifier.outputs_2d_": {
  "lineno": 390,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.dummy.DummyClassifier.predict": {
  "lineno": 196,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ravel",
   "numpy.tile",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "sklearn.dummy.DummyClassifier.predict_log_proba": {
  "lineno": 334,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "sklearn.dummy.DummyClassifier.predict_proba": {
  "lineno": 271,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.ones",
   "numpy.where",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.dummy.DummyClassifier.score": {
  "lineno": 359,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.dummy.DummyRegressor": {
  "lineno": 400,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.dummy.DummyRegressor.__init__": {
  "lineno": 457,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.dummy.DummyRegressor._more_tags": {
  "lineno": 575,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.dummy.DummyRegressor.fit": {
  "lineno": 462,
  "symbols_in_volume": [
   "numpy.average",
   "numpy.isscalar",
   "numpy.median",
   "numpy.percentile",
   "numpy.reshape"
  ],
  "type": "function"
 },
 "sklearn.dummy.DummyRegressor.outputs_2d_": {
  "lineno": 616,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.dummy.DummyRegressor.predict": {
  "lineno": 541,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.full",
   "numpy.ravel",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.dummy.DummyRegressor.score": {
  "lineno": 578,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.ensemble": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.ensemble._bagging": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.int32"
  ],
  "type": "module"
 },
 "sklearn.ensemble._bagging.BaggingClassifier": {
  "lineno": 433,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._bagging.BaggingClassifier.__init__": {
  "lineno": 576,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaggingClassifier._set_oob_score": {
  "lineno": 607,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.newaxis",
   "numpy.zeros",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaggingClassifier._validate_estimator": {
  "lineno": 602,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaggingClassifier._validate_y": {
  "lineno": 644,
  "symbols_in_volume": [
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaggingClassifier.decision_function": {
  "lineno": 785,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed"
  ],
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaggingClassifier.predict": {
  "lineno": 652,
  "symbols_in_volume": [
   "numpy.argmax"
  ],
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaggingClassifier.predict_log_proba": {
  "lineno": 727,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed",
   "numpy.log",
   "numpy.logaddexp"
  ],
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaggingClassifier.predict_proba": {
  "lineno": 674,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed"
  ],
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaggingRegressor": {
  "lineno": 835,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._bagging.BaggingRegressor.__init__": {
  "lineno": 970,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaggingRegressor._set_oob_score": {
  "lineno": 1040,
  "symbols_in_volume": [
   "numpy.zeros",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaggingRegressor._validate_estimator": {
  "lineno": 1035,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaggingRegressor.predict": {
  "lineno": 995,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed"
  ],
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaseBagging": {
  "lineno": 186,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.ensemble._bagging.BaseBagging.__init__": {
  "lineno": 193,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaseBagging._fit": {
  "lineno": 248,
  "symbols_in_volume": [
   "itertools.chain.from_iterable",
   "joblib.Parallel",
   "joblib.delayed",
   "numbers.Integral",
   "numpy.float",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaseBagging._get_estimators_indices": {
  "lineno": 403,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaseBagging._parallel_args": {
  "lineno": 245,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaseBagging._set_oob_score": {
  "lineno": 393,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaseBagging._validate_y": {
  "lineno": 397,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaseBagging.estimators_samples_": {
  "lineno": 416,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._bagging.BaseBagging.fit": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._bagging._generate_bagging_indices": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._bagging._generate_indices": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._bagging._parallel_build_estimators": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.bincount",
   "numpy.ones",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "sklearn.ensemble._bagging._parallel_decision_function": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._bagging._parallel_predict_log_proba": {
  "lineno": 147,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.empty",
   "numpy.inf",
   "numpy.int",
   "numpy.logaddexp",
   "numpy.setdiff1d"
  ],
  "type": "function"
 },
 "sklearn.ensemble._bagging._parallel_predict_proba": {
  "lineno": 121,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.ensemble._bagging._parallel_predict_regression": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.ensemble._base.BaseEnsemble": {
  "lineno": 78,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.ensemble._base.BaseEnsemble.__getitem__": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._base.BaseEnsemble.__init__": {
  "lineno": 108,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.ensemble._base.BaseEnsemble.__iter__": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._base.BaseEnsemble.__len__": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._base.BaseEnsemble._make_estimator": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._base.BaseEnsemble._validate_estimator": {
  "lineno": 120,
  "symbols_in_volume": [
   "numbers.Integral"
  ],
  "type": "function"
 },
 "sklearn.ensemble._base._BaseHeterogeneousEnsemble": {
  "lineno": 186,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.ensemble._base._BaseHeterogeneousEnsemble.__init__": {
  "lineno": 212,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.ensemble._base._BaseHeterogeneousEnsemble._validate_estimators": {
  "lineno": 216,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.ensemble._base._BaseHeterogeneousEnsemble.get_params": {
  "lineno": 273,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._base._BaseHeterogeneousEnsemble.named_estimators": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._base._BaseHeterogeneousEnsemble.set_params": {
  "lineno": 255,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._base._parallel_fit_estimator": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._base._partition_estimators": {
  "lineno": 172,
  "symbols_in_volume": [
   "joblib.effective_n_jobs",
   "numpy.cumsum",
   "numpy.full",
   "numpy.int"
  ],
  "type": "function"
 },
 "sklearn.ensemble._base._set_random_states": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.int32"
  ],
  "type": "function"
 },
 "sklearn.ensemble._forest": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.int32"
  ],
  "type": "module"
 },
 "sklearn.ensemble._forest.BaseForest": {
  "lineno": 172,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.ensemble._forest.BaseForest.__init__": {
  "lineno": 180,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.ensemble._forest.BaseForest._set_oob_score": {
  "lineno": 398,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.ensemble._forest.BaseForest._validate_X_predict": {
  "lineno": 407,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._forest.BaseForest._validate_y_class_weight": {
  "lineno": 403,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._forest.BaseForest.apply": {
  "lineno": 207,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed",
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.ensemble._forest.BaseForest.decision_path": {
  "lineno": 232,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed",
   "numpy.array",
   "scipy.sparse.hstack"
  ],
  "type": "function"
 },
 "sklearn.ensemble._forest.BaseForest.feature_importances_": {
  "lineno": 414,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed",
   "numpy.float64",
   "numpy.mean",
   "numpy.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.ensemble._forest.BaseForest.fit": {
  "lineno": 268,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed",
   "numpy.ascontiguousarray",
   "numpy.atleast_1d",
   "numpy.reshape",
   "scipy.sparse.issparse",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.ensemble._forest.ExtraTreesClassifier": {
  "lineno": 1434,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._forest.ExtraTreesClassifier.__init__": {
  "lineno": 1690,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._forest.ExtraTreesRegressor": {
  "lineno": 1739,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._forest.ExtraTreesRegressor.__init__": {
  "lineno": 1950,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._forest.ForestClassifier": {
  "lineno": 458,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.ensemble._forest.ForestClassifier.__init__": {
  "lineno": 466,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.ensemble._forest.ForestClassifier._set_oob_score": {
  "lineno": 492,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.mean",
   "numpy.newaxis",
   "numpy.zeros",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.ensemble._forest.ForestClassifier._validate_y_class_weight": {
  "lineno": 540,
  "symbols_in_volume": [
   "numpy.copy",
   "numpy.int",
   "numpy.unique",
   "numpy.zeros",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.ensemble._forest.ForestClassifier.predict": {
  "lineno": 591,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.empty"
  ],
  "type": "function"
 },
 "sklearn.ensemble._forest.ForestClassifier.predict_log_proba": {
  "lineno": 679,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "sklearn.ensemble._forest.ForestClassifier.predict_proba": {
  "lineno": 631,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed",
   "numpy.atleast_1d",
   "numpy.float64",
   "numpy.zeros",
   "threading.Lock"
  ],
  "type": "function"
 },
 "sklearn.ensemble._forest.ForestRegressor": {
  "lineno": 713,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.ensemble._forest.ForestRegressor.__init__": {
  "lineno": 721,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.ensemble._forest.ForestRegressor._set_oob_score": {
  "lineno": 788,
  "symbols_in_volume": [
   "numpy.newaxis",
   "numpy.zeros",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.ensemble._forest.ForestRegressor.predict": {
  "lineno": 745,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed",
   "numpy.float64",
   "numpy.zeros",
   "threading.Lock"
  ],
  "type": "function"
 },
 "sklearn.ensemble._forest.RandomForestClassifier": {
  "lineno": 836,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._forest.RandomForestClassifier.__init__": {
  "lineno": 1101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._forest.RandomForestRegressor": {
  "lineno": 1150,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._forest.RandomForestRegressor.__init__": {
  "lineno": 1387,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._forest.RandomTreesEmbedding": {
  "lineno": 1997,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._forest.RandomTreesEmbedding.__init__": {
  "lineno": 2133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._forest.RandomTreesEmbedding._set_oob_score": {
  "lineno": 2172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._forest.RandomTreesEmbedding.fit": {
  "lineno": 2175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._forest.RandomTreesEmbedding.fit_transform": {
  "lineno": 2201,
  "symbols_in_volume": [
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.ensemble._forest.RandomTreesEmbedding.transform": {
  "lineno": 2236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._forest._accumulate_prediction": {
  "lineno": 442,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._forest._generate_sample_indices": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._forest._generate_unsampled_indices": {
  "lineno": 125,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.bincount"
  ],
  "type": "function"
 },
 "sklearn.ensemble._forest._get_n_samples_bootstrap": {
  "lineno": 76,
  "symbols_in_volume": [
   "numbers.Integral",
   "numbers.Real"
  ],
  "type": "function"
 },
 "sklearn.ensemble._forest._parallel_build_trees": {
  "lineno": 138,
  "symbols_in_volume": [
   "numpy.bincount",
   "numpy.float64",
   "numpy.ones",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting": {
  "lineno": 1166,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting.__init__": {
  "lineno": 1169,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting._check_initialized": {
  "lineno": 1395,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting._check_params": {
  "lineno": 1257,
  "symbols_in_volume": [
   "numbers.Integral",
   "numpy.log2",
   "numpy.sqrt",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting._clear_state": {
  "lineno": 1359,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.object"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting._compute_partial_dependence_recursion": {
  "lineno": 1717,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.float64",
   "numpy.zeros",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting._fit_stage": {
  "lineno": 1203,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool",
   "numpy.float64"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting._fit_stages": {
  "lineno": 1549,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.bool",
   "numpy.full",
   "numpy.inf",
   "numpy.ones",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting._init_state": {
  "lineno": 1344,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.float64",
   "numpy.object",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting._is_initialized": {
  "lineno": 1392,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting._make_estimator": {
  "lineno": 1634,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting._raw_predict": {
  "lineno": 1653,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting._raw_predict_init": {
  "lineno": 1638,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting._resize_state": {
  "lineno": 1372,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.resize",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting._staged_raw_predict": {
  "lineno": 1660,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting._validate_y": {
  "lineno": 1757,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting.apply": {
  "lineno": 1766,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting.feature_importances_": {
  "lineno": 1688,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.mean",
   "numpy.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.BaseGradientBoosting.fit": {
  "lineno": 1399,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.ones",
   "numpy.unique",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.BinomialDeviance": {
  "lineno": 809,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._gb.BinomialDeviance.__call__": {
  "lineno": 833,
  "symbols_in_volume": [
   "numpy.logaddexp",
   "numpy.mean",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.BinomialDeviance.__init__": {
  "lineno": 823,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.BinomialDeviance._score_to_decision": {
  "lineno": 898,
  "symbols_in_volume": [
   "numpy.argmax"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.BinomialDeviance._score_to_proba": {
  "lineno": 892,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.ones",
   "scipy.special.expit"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.BinomialDeviance._update_terminal_region": {
  "lineno": 868,
  "symbols_in_volume": [
   "numpy.sum",
   "numpy.where"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.BinomialDeviance.init_estimator": {
  "lineno": 830,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.BinomialDeviance.negative_gradient": {
  "lineno": 855,
  "symbols_in_volume": [
   "scipy.special.expit"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.ClassificationLossFunction": {
  "lineno": 788,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.ensemble._gb.ClassificationLossFunction._score_to_decision": {
  "lineno": 801,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.ClassificationLossFunction._score_to_proba": {
  "lineno": 794,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.ExponentialLoss": {
  "lineno": 1001,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._gb.ExponentialLoss.__call__": {
  "lineno": 1028,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.mean",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.ExponentialLoss.__init__": {
  "lineno": 1018,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.ExponentialLoss._score_to_decision": {
  "lineno": 1087,
  "symbols_in_volume": [
   "numpy.int"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.ExponentialLoss._score_to_proba": {
  "lineno": 1081,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.ones",
   "scipy.special.expit"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.ExponentialLoss._update_terminal_region": {
  "lineno": 1063,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.sum",
   "numpy.where"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.ExponentialLoss.init_estimator": {
  "lineno": 1025,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.ExponentialLoss.negative_gradient": {
  "lineno": 1049,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.GradientBoostingClassifier": {
  "lineno": 1802,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._gb.GradientBoostingClassifier.__init__": {
  "lineno": 2064,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.GradientBoostingClassifier._validate_y": {
  "lineno": 2089,
  "symbols_in_volume": [
   "numpy.bincount",
   "numpy.count_nonzero",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.GradientBoostingClassifier.decision_function": {
  "lineno": 2101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.GradientBoostingClassifier.predict": {
  "lineno": 2150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.GradientBoostingClassifier.predict_log_proba": {
  "lineno": 2223,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.GradientBoostingClassifier.predict_proba": {
  "lineno": 2193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.GradientBoostingClassifier.staged_decision_function": {
  "lineno": 2126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.GradientBoostingClassifier.staged_predict": {
  "lineno": 2170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.GradientBoostingClassifier.staged_predict_proba": {
  "lineno": 2247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.GradientBoostingRegressor": {
  "lineno": 2275,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._gb.GradientBoostingRegressor.__init__": {
  "lineno": 2528,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.GradientBoostingRegressor.apply": {
  "lineno": 2592,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.GradientBoostingRegressor.predict": {
  "lineno": 2552,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.GradientBoostingRegressor.staged_predict": {
  "lineno": 2571,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.HuberLossFunction": {
  "lineno": 602,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._gb.HuberLossFunction.__call__": {
  "lineno": 632,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.percentile",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.HuberLossFunction.__init__": {
  "lineno": 624,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.HuberLossFunction._update_terminal_region": {
  "lineno": 694,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.mean",
   "numpy.minimum",
   "numpy.sign",
   "numpy.where"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.HuberLossFunction.init_estimator": {
  "lineno": 629,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.HuberLossFunction.negative_gradient": {
  "lineno": 667,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.float64",
   "numpy.percentile",
   "numpy.sign",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.LeastAbsoluteError": {
  "lineno": 543,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._gb.LeastAbsoluteError.__call__": {
  "lineno": 557,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.LeastAbsoluteError._update_terminal_region": {
  "lineno": 593,
  "symbols_in_volume": [
   "numpy.where"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.LeastAbsoluteError.init_estimator": {
  "lineno": 554,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.LeastAbsoluteError.negative_gradient": {
  "lineno": 577,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.LeastSquaresError": {
  "lineno": 457,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._gb.LeastSquaresError.__call__": {
  "lineno": 473,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.LeastSquaresError._update_terminal_region": {
  "lineno": 538,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.LeastSquaresError.init_estimator": {
  "lineno": 470,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.LeastSquaresError.negative_gradient": {
  "lineno": 493,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.LeastSquaresError.update_terminal_regions": {
  "lineno": 506,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.LogOddsEstimator": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._gb.LogOddsEstimator.fit": {
  "lineno": 174,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.LogOddsEstimator.predict": {
  "lineno": 200,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.float64"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.LossFunction": {
  "lineno": 329,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.ensemble._gb.LossFunction.__call__": {
  "lineno": 357,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.LossFunction.__init__": {
  "lineno": 350,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.LossFunction._update_terminal_region": {
  "lineno": 433,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.LossFunction.init_estimator": {
  "lineno": 353,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.LossFunction.negative_gradient": {
  "lineno": 373,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.LossFunction.update_terminal_regions": {
  "lineno": 386,
  "symbols_in_volume": [
   "numpy.where"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.MeanEstimator": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._gb.MeanEstimator.fit": {
  "lineno": 129,
  "symbols_in_volume": [
   "numpy.average",
   "numpy.mean"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.MeanEstimator.predict": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.float64"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.MultinomialDeviance": {
  "lineno": 903,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._gb.MultinomialDeviance.__call__": {
  "lineno": 929,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.MultinomialDeviance.__init__": {
  "lineno": 920,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.MultinomialDeviance._score_to_decision": {
  "lineno": 996,
  "symbols_in_volume": [
   "numpy.argmax"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.MultinomialDeviance._score_to_proba": {
  "lineno": 992,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.nan_to_num",
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.MultinomialDeviance._update_terminal_region": {
  "lineno": 972,
  "symbols_in_volume": [
   "numpy.sum",
   "numpy.where"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.MultinomialDeviance.init_estimator": {
  "lineno": 926,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.MultinomialDeviance.negative_gradient": {
  "lineno": 955,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.nan_to_num"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.PriorProbabilityEstimator": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._gb.PriorProbabilityEstimator.fit": {
  "lineno": 233,
  "symbols_in_volume": [
   "numpy.bincount",
   "numpy.float64",
   "numpy.ones_like"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.PriorProbabilityEstimator.predict": {
  "lineno": 252,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.float64"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.QuantileEstimator": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._gb.QuantileEstimator.__init__": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.QuantileEstimator.fit": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.percentile"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.QuantileEstimator.predict": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.float64"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.QuantileLossFunction": {
  "lineno": 708,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._gb.QuantileLossFunction.__call__": {
  "lineno": 733,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.QuantileLossFunction.__init__": {
  "lineno": 725,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.QuantileLossFunction._update_terminal_region": {
  "lineno": 777,
  "symbols_in_volume": [
   "numpy.where"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.QuantileLossFunction.init_estimator": {
  "lineno": 730,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.QuantileLossFunction.negative_gradient": {
  "lineno": 761,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.RegressionLossFunction": {
  "lineno": 439,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.ensemble._gb.RegressionLossFunction.__init__": {
  "lineno": 450,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.ScaledLogOddsEstimator": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._gb.VerboseReporter": {
  "lineno": 1091,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._gb.VerboseReporter.__init__": {
  "lineno": 1102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb.VerboseReporter.init": {
  "lineno": 1105,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.VerboseReporter.update": {
  "lineno": 1136,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.ZeroEstimator": {
  "lineno": 272,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._gb.ZeroEstimator.fit": {
  "lineno": 283,
  "symbols_in_volume": [
   "numpy.issubdtype",
   "numpy.signedinteger",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.ZeroEstimator.predict": {
  "lineno": 306,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.float64"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb.ZeroEstimator.predict_proba": {
  "lineno": 325,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.ensemble._gb_losses.BinomialDeviance": {
  "lineno": 564,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._gb_losses.BinomialDeviance.__call__": {
  "lineno": 587,
  "symbols_in_volume": [
   "numpy.logaddexp",
   "numpy.mean",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.BinomialDeviance.__init__": {
  "lineno": 575,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.BinomialDeviance._raw_prediction_to_decision": {
  "lineno": 657,
  "symbols_in_volume": [
   "numpy.argmax"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.BinomialDeviance._raw_prediction_to_proba": {
  "lineno": 651,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.ones",
   "scipy.special.expit"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.BinomialDeviance._update_terminal_region": {
  "lineno": 626,
  "symbols_in_volume": [
   "numpy.sum",
   "numpy.where"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.BinomialDeviance.get_init_raw_predictions": {
  "lineno": 661,
  "symbols_in_volume": [
   "numpy.clip",
   "numpy.finfo",
   "numpy.float32",
   "numpy.float64",
   "numpy.log"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.BinomialDeviance.init_estimator": {
  "lineno": 582,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.BinomialDeviance.negative_gradient": {
  "lineno": 612,
  "symbols_in_volume": [
   "scipy.special.expit"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.ClassificationLossFunction": {
  "lineno": 514,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.ensemble._gb_losses.ClassificationLossFunction._raw_prediction_to_decision": {
  "lineno": 532,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.ClassificationLossFunction._raw_prediction_to_proba": {
  "lineno": 517,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.ClassificationLossFunction.check_init_estimator": {
  "lineno": 548,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.ExponentialLoss": {
  "lineno": 777,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._gb_losses.ExponentialLoss.__call__": {
  "lineno": 801,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.mean",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.ExponentialLoss.__init__": {
  "lineno": 791,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.ExponentialLoss._raw_prediction_to_decision": {
  "lineno": 862,
  "symbols_in_volume": [
   "numpy.int"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.ExponentialLoss._raw_prediction_to_proba": {
  "lineno": 856,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.ones",
   "scipy.special.expit"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.ExponentialLoss._update_terminal_region": {
  "lineno": 838,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.sum",
   "numpy.where"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.ExponentialLoss.get_init_raw_predictions": {
  "lineno": 865,
  "symbols_in_volume": [
   "numpy.clip",
   "numpy.finfo",
   "numpy.float32",
   "numpy.float64",
   "numpy.log"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.ExponentialLoss.init_estimator": {
  "lineno": 798,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.ExponentialLoss.negative_gradient": {
  "lineno": 823,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.HuberLossFunction": {
  "lineno": 325,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._gb_losses.HuberLossFunction.__call__": {
  "lineno": 352,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.percentile",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.HuberLossFunction.__init__": {
  "lineno": 344,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.HuberLossFunction._update_terminal_region": {
  "lineno": 421,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.mean",
   "numpy.minimum",
   "numpy.sign",
   "numpy.where"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.HuberLossFunction.init_estimator": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.HuberLossFunction.negative_gradient": {
  "lineno": 391,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.float64",
   "numpy.percentile",
   "numpy.sign",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.LeastAbsoluteError": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._gb_losses.LeastAbsoluteError.__call__": {
  "lineno": 277,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.LeastAbsoluteError._update_terminal_region": {
  "lineno": 314,
  "symbols_in_volume": [
   "numpy.where"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.LeastAbsoluteError.init_estimator": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.LeastAbsoluteError.negative_gradient": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.LeastSquaresError": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._gb_losses.LeastSquaresError.__call__": {
  "lineno": 194,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.LeastSquaresError._update_terminal_region": {
  "lineno": 261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.LeastSquaresError.init_estimator": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.LeastSquaresError.negative_gradient": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.LeastSquaresError.update_terminal_regions": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.LossFunction": {
  "lineno": 18,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.ensemble._gb_losses.LossFunction.__call__": {
  "lineno": 43,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.LossFunction.__init__": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.LossFunction._update_terminal_region": {
  "lineno": 121,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.LossFunction.get_init_raw_predictions": {
  "lineno": 126,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.LossFunction.init_estimator": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.LossFunction.negative_gradient": {
  "lineno": 59,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.LossFunction.update_terminal_regions": {
  "lineno": 73,
  "symbols_in_volume": [
   "numpy.where"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.MultinomialDeviance": {
  "lineno": 671,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._gb_losses.MultinomialDeviance.__call__": {
  "lineno": 694,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.MultinomialDeviance.__init__": {
  "lineno": 685,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.MultinomialDeviance._raw_prediction_to_decision": {
  "lineno": 765,
  "symbols_in_volume": [
   "numpy.argmax"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.MultinomialDeviance._raw_prediction_to_proba": {
  "lineno": 760,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.nan_to_num",
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.MultinomialDeviance._update_terminal_region": {
  "lineno": 740,
  "symbols_in_volume": [
   "numpy.sum",
   "numpy.where"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.MultinomialDeviance.get_init_raw_predictions": {
  "lineno": 769,
  "symbols_in_volume": [
   "numpy.clip",
   "numpy.finfo",
   "numpy.float32",
   "numpy.float64",
   "numpy.log"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.MultinomialDeviance.init_estimator": {
  "lineno": 691,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.MultinomialDeviance.negative_gradient": {
  "lineno": 722,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.nan_to_num"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.QuantileLossFunction": {
  "lineno": 435,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._gb_losses.QuantileLossFunction.__call__": {
  "lineno": 457,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.QuantileLossFunction.__init__": {
  "lineno": 449,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.QuantileLossFunction._update_terminal_region": {
  "lineno": 503,
  "symbols_in_volume": [
   "numpy.where"
  ],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.QuantileLossFunction.init_estimator": {
  "lineno": 454,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.QuantileLossFunction.negative_gradient": {
  "lineno": 486,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.RegressionLossFunction": {
  "lineno": 148,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.ensemble._gb_losses.RegressionLossFunction.__init__": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.RegressionLossFunction.check_init_estimator": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._gb_losses.RegressionLossFunction.get_init_raw_predictions": {
  "lineno": 176,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.ensemble._hist_gradient_boosting.binning": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper.__init__": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper.fit": {
  "lineno": 139,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper.transform": {
  "lineno": 175,
  "symbols_in_volume": [
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.binning._find_binning_thresholds": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ascontiguousarray",
   "numpy.clip",
   "numpy.isnan",
   "numpy.linspace",
   "numpy.percentile",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting": {
  "lineno": 25,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting.__init__": {
  "lineno": 28,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting._bin_data": {
  "lineno": 491,
  "symbols_in_volume": [
   "numpy.ascontiguousarray",
   "timeit.default_timer"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting._check_early_stopping_loss": {
  "lineno": 449,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting._check_early_stopping_scorer": {
  "lineno": 427,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting._clear_state": {
  "lineno": 401,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting._compute_partial_dependence_recursion": {
  "lineno": 598,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting._encode_y": {
  "lineno": 636,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting._get_loss": {
  "lineno": 632,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting._get_small_trainset": {
  "lineno": 407,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ascontiguousarray"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting._is_fitted": {
  "lineno": 398,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting._more_tags": {
  "lineno": 629,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting._print_iteration_stats": {
  "lineno": 517,
  "symbols_in_volume": [
   "timeit.default_timer"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting._raw_predict": {
  "lineno": 557,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting._should_stop": {
  "lineno": 471,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting._validate_parameters": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting.fit": {
  "lineno": 83,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.iinfo",
   "numpy.isnan",
   "numpy.uint32",
   "numpy.uint8",
   "numpy.zeros",
   "timeit.default_timer"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting.n_iter_": {
  "lineno": 640,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingClassifier": {
  "lineno": 825,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingClassifier.__init__": {
  "lineno": 966,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingClassifier._encode_y": {
  "lineno": 1035,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingClassifier._get_loss": {
  "lineno": 1050,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingClassifier.decision_function": {
  "lineno": 1014,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingClassifier.predict": {
  "lineno": 981,
  "symbols_in_volume": [
   "numpy.argmax"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingClassifier.predict_proba": {
  "lineno": 998,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingRegressor": {
  "lineno": 646,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingRegressor.__init__": {
  "lineno": 782,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingRegressor._encode_y": {
  "lineno": 815,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingRegressor._get_loss": {
  "lineno": 821,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingRegressor.predict": {
  "lineno": 798,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.finfo"
  ],
  "type": "module"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower.__init__": {
  "lineno": 166,
  "symbols_in_volume": [
   "numbers.Integral",
   "numpy.array",
   "numpy.asarray",
   "numpy.uint32",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower._compute_best_split_and_push": {
  "lineno": 285,
  "symbols_in_volume": [
   "heapq.heappush"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower._finalize_leaf": {
  "lineno": 413,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower._finalize_splittable_nodes": {
  "lineno": 427,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower._intilialize_root": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower._validate_parameters": {
  "lineno": 216,
  "symbols_in_volume": [
   "numpy.uint8"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower.grow": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower.make_predictor": {
  "lineno": 436,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower.split_next": {
  "lineno": 303,
  "symbols_in_volume": [
   "heapq.heappop",
   "timeit.default_timer"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower.TreeNode": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower.TreeNode.__init__": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower.TreeNode.__lt__": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.grower._fill_predictor_node_array": {
  "lineno": 454,
  "symbols_in_volume": [
   "numpy.inf"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.BaseLoss": {
  "lineno": 26,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.BaseLoss.get_baseline_prediction": {
  "lineno": 77,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.BaseLoss.init_gradients_and_hessians": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.ones"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.BaseLoss.update_gradients_and_hessians": {
  "lineno": 95,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.BinaryCrossEntropy": {
  "lineno": 213,
  "symbols_in_volume": [
   "scipy.special.expit"
  ],
  "type": "class"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.BinaryCrossEntropy.__call__": {
  "lineno": 228,
  "symbols_in_volume": [
   "numpy.logaddexp"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.BinaryCrossEntropy.get_baseline_prediction": {
  "lineno": 236,
  "symbols_in_volume": [
   "numpy.clip",
   "numpy.finfo",
   "numpy.log",
   "numpy.mean"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.BinaryCrossEntropy.predict_proba": {
  "lineno": 259,
  "symbols_in_volume": [
   "numpy.empty",
   "scipy.special.expit"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.BinaryCrossEntropy.update_gradients_and_hessians": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.CategoricalCrossEntropy": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.CategoricalCrossEntropy.__call__": {
  "lineno": 279,
  "symbols_in_volume": [
   "numpy.zeros_like",
   "scipy.misc.logsumexp"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.CategoricalCrossEntropy.get_baseline_prediction": {
  "lineno": 289,
  "symbols_in_volume": [
   "numpy.clip",
   "numpy.finfo",
   "numpy.log",
   "numpy.mean",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.CategoricalCrossEntropy.predict_proba": {
  "lineno": 304,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.newaxis",
   "scipy.misc.logsumexp"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.CategoricalCrossEntropy.update_gradients_and_hessians": {
  "lineno": 299,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.LeastAbsoluteDeviation": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.LeastAbsoluteDeviation.__call__": {
  "lineno": 175,
  "symbols_in_volume": [
   "numpy.abs"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.LeastAbsoluteDeviation.get_baseline_prediction": {
  "lineno": 182,
  "symbols_in_volume": [
   "numpy.median"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.LeastAbsoluteDeviation.inverse_link_function": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.LeastAbsoluteDeviation.update_gradients_and_hessians": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.LeastAbsoluteDeviation.update_leaves_values": {
  "lineno": 198,
  "symbols_in_volume": [
   "numpy.median"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.LeastSquares": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.LeastSquares.__call__": {
  "lineno": 133,
  "symbols_in_volume": [
   "numpy.power"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.LeastSquares.get_baseline_prediction": {
  "lineno": 140,
  "symbols_in_volume": [
   "numpy.mean"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.LeastSquares.inverse_link_function": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.loss.LeastSquares.update_gradients_and_hessians": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.predictor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.ensemble._hist_gradient_boosting.predictor.TreePredictor": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._hist_gradient_boosting.predictor.TreePredictor.__init__": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.predictor.TreePredictor.compute_partial_dependence": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.predictor.TreePredictor.get_max_depth": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.predictor.TreePredictor.get_n_leaf_nodes": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.predictor.TreePredictor.predict": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.predictor.TreePredictor.predict_binned": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.ensemble._hist_gradient_boosting.common.X_DTYPE"
  ],
  "type": "module"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning._find_binning_thresholds": {
  "lineno": 20,
  "symbols_in_volume": [
   "sklearn.ensemble._hist_gradient_boosting.binning._find_binning_thresholds"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_bin_mapper_idempotence": {
  "lineno": 217,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize",
   "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_bin_mapper_identity_repeated_values": {
  "lineno": 166,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize",
   "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_bin_mapper_identity_small": {
  "lineno": 204,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize",
   "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_bin_mapper_n_features_transform": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.repeat",
   "pytest.raises",
   "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_bin_mapper_random_data": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "numpy.uint8",
   "pytest.mark.parametrize",
   "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_bin_mapper_repeated_values_invariance": {
  "lineno": 179,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.RandomState",
   "numpy.sort",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal",
   "numpy.unique",
   "pytest.mark.parametrize",
   "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_bin_mapper_small_random_data": {
  "lineno": 145,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.argsort",
   "numpy.random.RandomState",
   "numpy.testing.assert_array_equal",
   "numpy.uint8",
   "numpy.unique",
   "pytest.mark.parametrize",
   "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_find_binning_thresholds_low_n_bins": {
  "lineno": 70,
  "symbols_in_volume": [
   "sklearn.ensemble._hist_gradient_boosting.binning._find_binning_thresholds"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_find_binning_thresholds_random_data": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_allclose",
   "sklearn.ensemble._hist_gradient_boosting.binning._find_binning_thresholds"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_find_binning_thresholds_regular_data": {
  "lineno": 28,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_allclose",
   "sklearn.ensemble._hist_gradient_boosting.binning._find_binning_thresholds"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_find_binning_thresholds_small_regular_data": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.linspace",
   "numpy.testing.assert_allclose",
   "sklearn.ensemble._hist_gradient_boosting.binning._find_binning_thresholds"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_infinite_values": {
  "lineno": 303,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal",
   "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper",
   "sklearn.ensemble._hist_gradient_boosting.common.ALMOST_INF"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_invalid_n_bins": {
  "lineno": 79,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_map_to_bins": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.uint8",
   "numpy.zeros_like",
   "pytest.mark.parametrize",
   "sklearn.ensemble._hist_gradient_boosting.binning._find_binning_thresholds",
   "sklearn.ensemble._hist_gradient_boosting.binning._map_to_bins",
   "sklearn.ensemble._hist_gradient_boosting.common.X_BINNED_DTYPE"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_missing_values_support": {
  "lineno": 261,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize",
   "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_n_bins_non_missing": {
  "lineno": 236,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "pytest.mark.parametrize",
   "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_binning.test_subsample": {
  "lineno": 250,
  "symbols_in_volume": [
   "numpy.allclose",
   "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_compare_lightgbm": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "module"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_compare_lightgbm.test_same_predictions_classification": {
  "lineno": 92,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.mean",
   "numpy.random.RandomState",
   "numpy.testing.assert_almost_equal",
   "pytest.mark.parametrize",
   "sklearn.datasets.make_classification",
   "sklearn.ensemble.HistGradientBoostingClassifier",
   "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper",
   "sklearn.ensemble._hist_gradient_boosting.utils.get_equivalent_estimator",
   "sklearn.metrics.accuracy_score",
   "sklearn.model_selection.train_test_split"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_compare_lightgbm.test_same_predictions_multiclass_classification": {
  "lineno": 152,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.float32",
   "numpy.mean",
   "numpy.random.RandomState",
   "numpy.testing.assert_almost_equal",
   "pytest.mark.parametrize",
   "sklearn.datasets.make_classification",
   "sklearn.ensemble.HistGradientBoostingClassifier",
   "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper",
   "sklearn.ensemble._hist_gradient_boosting.utils.get_equivalent_estimator",
   "sklearn.metrics.accuracy_score",
   "sklearn.model_selection.train_test_split"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_compare_lightgbm.test_same_predictions_regression": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.mean",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.datasets.make_regression",
   "sklearn.ensemble.HistGradientBoostingRegressor",
   "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper",
   "sklearn.ensemble._hist_gradient_boosting.utils.get_equivalent_estimator",
   "sklearn.model_selection.train_test_split"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification",
   "sklearn.datasets.make_regression"
  ],
  "type": "module"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_binning_train_validation_are_separated": {
  "lineno": 167,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.random.RandomState",
   "sklearn.ensemble.HistGradientBoostingClassifier",
   "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_crossentropy_binary_problem": {
  "lineno": 429,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.ensemble.HistGradientBoostingClassifier"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_early_stopping_classification": {
  "lineno": 95,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.datasets.make_classification",
   "sklearn.ensemble.HistGradientBoostingClassifier"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_early_stopping_regression": {
  "lineno": 60,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.datasets.make_regression",
   "sklearn.ensemble.HistGradientBoostingRegressor"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_infinite_values": {
  "lineno": 401,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "numpy.testing.assert_allclose",
   "sklearn.ensemble.HistGradientBoostingRegressor"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_infinite_values_missing_values": {
  "lineno": 412,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.inf",
   "numpy.isnan",
   "numpy.nan",
   "sklearn.ensemble.HistGradientBoostingClassifier"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_init_parameters_validation": {
  "lineno": 22,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.ensemble.HistGradientBoostingClassifier",
   "sklearn.ensemble.HistGradientBoostingRegressor"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_invalid_classification_loss": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.zeros",
   "pytest.raises",
   "sklearn.ensemble.HistGradientBoostingClassifier"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_least_absolute_deviation": {
  "lineno": 158,
  "symbols_in_volume": [
   "sklearn.datasets.make_regression",
   "sklearn.ensemble.HistGradientBoostingRegressor"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_missing_values_minmax_imputation": {
  "lineno": 294,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pytest.approx",
   "sklearn.base.clone",
   "sklearn.ensemble.HistGradientBoostingRegressor",
   "sklearn.pipeline.make_pipeline"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_missing_values_minmax_imputation.MinMaxImputer": {
  "lineno": 317,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_missing_values_minmax_imputation.MinMaxImputer.fit": {
  "lineno": 319,
  "symbols_in_volume": [
   "sklearn.preprocessing.MinMaxScaler"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_missing_values_minmax_imputation.MinMaxImputer.transform": {
  "lineno": 325,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_missing_values_minmax_imputation.make_missing_value_data": {
  "lineno": 335,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "numpy.percentile",
   "numpy.random.RandomState",
   "sklearn.datasets.make_regression",
   "sklearn.model_selection.train_test_split",
   "sklearn.preprocessing.KBinsDiscretizer"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_missing_values_resilience": {
  "lineno": 212,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.nan",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.datasets.make_classification",
   "sklearn.datasets.make_regression",
   "sklearn.ensemble.HistGradientBoostingClassifier",
   "sklearn.ensemble.HistGradientBoostingRegressor"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_missing_values_trivial": {
  "lineno": 193,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.nan",
   "numpy.random.RandomState",
   "pytest.approx",
   "sklearn.ensemble.HistGradientBoostingClassifier"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_should_stop": {
  "lineno": 135,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.ensemble.HistGradientBoostingClassifier"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_small_trainset": {
  "lineno": 265,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.random.RandomState",
   "numpy.unique",
   "pytest.approx",
   "sklearn.ensemble.HistGradientBoostingClassifier",
   "sklearn.utils.shuffle"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_string_target_early_stopping": {
  "lineno": 440,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.ensemble.HistGradientBoostingClassifier"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_gradient_boosting.test_zero_division_hessians": {
  "lineno": 248,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.datasets.make_classification",
   "sklearn.ensemble.HistGradientBoostingClassifier"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower._check_children_consistency": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower._make_training_data": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asfortranarray",
   "numpy.ones",
   "numpy.random.RandomState",
   "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
   "sklearn.ensemble._hist_gradient_boosting.common.X_BINNED_DTYPE",
   "sklearn.ensemble._hist_gradient_boosting.common.Y_DTYPE"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower._make_training_data.true_decision_function": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.test_grow_tree": {
  "lineno": 64,
  "symbols_in_volume": [
   "pytest.approx",
   "pytest.mark.parametrize",
   "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.test_init_parameters_validation": {
  "lineno": 299,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.test_input_validation": {
  "lineno": 283,
  "symbols_in_volume": [
   "numpy.ascontiguousarray",
   "numpy.float32",
   "pytest.raises",
   "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.test_max_depth": {
  "lineno": 260,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper",
   "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
   "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.test_min_samples_leaf": {
  "lineno": 186,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper",
   "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
   "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.test_min_samples_leaf_root": {
  "lineno": 231,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper",
   "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
   "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.test_missing_value_predict_only": {
  "lineno": 313,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.asfortranarray",
   "numpy.full",
   "numpy.nan",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.uint8",
   "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
   "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.test_predictor_from_grower": {
  "lineno": 144,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "numpy.uint8",
   "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_grower.test_split_on_nan_with_infinite_values": {
  "lineno": 348,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.inf",
   "numpy.nan",
   "numpy.ones",
   "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper",
   "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
   "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_histogram": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_histogram.test_build_histogram": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal",
   "numpy.uint32",
   "numpy.zeros",
   "pytest.mark.parametrize",
   "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
   "sklearn.ensemble._hist_gradient_boosting.common.HISTOGRAM_DTYPE",
   "sklearn.ensemble._hist_gradient_boosting.common.X_BINNED_DTYPE",
   "sklearn.ensemble._hist_gradient_boosting.histogram._build_histogram",
   "sklearn.ensemble._hist_gradient_boosting.histogram._build_histogram_naive"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_histogram.test_hist_subtraction": {
  "lineno": 144,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.bool",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose",
   "numpy.uint32",
   "numpy.uint8",
   "numpy.zeros",
   "pytest.mark.parametrize",
   "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
   "sklearn.ensemble._hist_gradient_boosting.common.HISTOGRAM_DTYPE",
   "sklearn.ensemble._hist_gradient_boosting.histogram._build_histogram",
   "sklearn.ensemble._hist_gradient_boosting.histogram._build_histogram_no_hessian",
   "sklearn.ensemble._hist_gradient_boosting.histogram._subtract_histograms"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_histogram.test_histogram_sample_order_independence": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal",
   "numpy.uint32",
   "numpy.zeros",
   "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
   "sklearn.ensemble._hist_gradient_boosting.common.HISTOGRAM_DTYPE",
   "sklearn.ensemble._hist_gradient_boosting.common.X_BINNED_DTYPE",
   "sklearn.ensemble._hist_gradient_boosting.histogram._build_histogram",
   "sklearn.ensemble._hist_gradient_boosting.histogram._build_histogram_no_hessian"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_histogram.test_unrolled_equivalent_to_naive": {
  "lineno": 98,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal",
   "numpy.uint32",
   "numpy.uint8",
   "numpy.zeros",
   "pytest.mark.parametrize",
   "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
   "sklearn.ensemble._hist_gradient_boosting.common.HISTOGRAM_DTYPE",
   "sklearn.ensemble._hist_gradient_boosting.histogram._build_histogram",
   "sklearn.ensemble._hist_gradient_boosting.histogram._build_histogram_naive",
   "sklearn.ensemble._hist_gradient_boosting.histogram._build_histogram_no_hessian",
   "sklearn.ensemble._hist_gradient_boosting.histogram._build_histogram_root",
   "sklearn.ensemble._hist_gradient_boosting.histogram._build_histogram_root_no_hessian"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.get_derivatives_helper": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.get_derivatives_helper.get_gradients": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.empty_like",
   "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.get_derivatives_helper.get_hessians": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.empty_like",
   "numpy.full_like",
   "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.test_baseline_binary_crossentropy": {
  "lineno": 167,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.float64",
   "numpy.log",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.zeros",
   "sklearn.ensemble._hist_gradient_boosting.loss._LOSSES",
   "sklearn.utils.assert_all_finite"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.test_baseline_categorical_crossentropy": {
  "lineno": 191,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.float32",
   "numpy.float64",
   "numpy.log",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.zeros",
   "sklearn.ensemble._hist_gradient_boosting.loss._LOSSES",
   "sklearn.utils.assert_all_finite"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.test_baseline_least_absolute_deviation": {
  "lineno": 153,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.median",
   "numpy.random.RandomState",
   "pytest.approx",
   "sklearn.ensemble._hist_gradient_boosting.loss._LOSSES"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.test_baseline_least_squares": {
  "lineno": 139,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.random.RandomState",
   "numpy.testing.assert_almost_equal",
   "sklearn.ensemble._hist_gradient_boosting.loss._LOSSES"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.test_derivatives": {
  "lineno": 47,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "numpy.float64",
   "pytest.mark.parametrize",
   "pytest.mark.skipif",
   "scipy.optimize.newton",
   "sklearn.ensemble._hist_gradient_boosting.common.Y_DTYPE",
   "sklearn.ensemble._hist_gradient_boosting.loss._LOSSES",
   "sklearn.utils.fixes.sp_version"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.test_derivatives.fprime": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.test_derivatives.fprime2": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.test_derivatives.func": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_loss.test_numerical_gradients": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose",
   "numpy.zeros_like",
   "pytest.mark.parametrize",
   "pytest.mark.skipif",
   "sklearn.ensemble._hist_gradient_boosting.common.Y_DTYPE",
   "sklearn.ensemble._hist_gradient_boosting.loss._LOSSES"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_predictor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_predictor.test_boston_dataset": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.ones",
   "pytest.mark.parametrize",
   "sklearn.datasets.load_boston",
   "sklearn.ensemble._hist_gradient_boosting.binning._BinMapper",
   "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
   "sklearn.ensemble._hist_gradient_boosting.grower.TreeGrower",
   "sklearn.metrics.r2_score",
   "sklearn.model_selection.train_test_split"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_predictor.test_infinite_values_and_thresholds": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.inf",
   "numpy.zeros",
   "pytest.mark.parametrize",
   "sklearn.ensemble._hist_gradient_boosting.common.ALMOST_INF",
   "sklearn.ensemble._hist_gradient_boosting.common.PREDICTOR_RECORD_DTYPE",
   "sklearn.ensemble._hist_gradient_boosting.predictor.TreePredictor"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_splitting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_splitting.test_gradient_and_hessian_sanity": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.arange",
   "numpy.array",
   "numpy.asarray",
   "numpy.asfortranarray",
   "numpy.isclose",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.uint32",
   "numpy.uint8",
   "pytest.mark.parametrize",
   "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
   "sklearn.ensemble._hist_gradient_boosting.common.HISTOGRAM_DTYPE",
   "sklearn.ensemble._hist_gradient_boosting.common.X_BINNED_DTYPE",
   "sklearn.ensemble._hist_gradient_boosting.histogram.HistogramBuilder",
   "sklearn.ensemble._hist_gradient_boosting.splitting.Splitter",
   "sklearn.utils._testing.skip_if_32bit"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_splitting.test_histogram_split": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.asfortranarray",
   "numpy.full_like",
   "numpy.ones_like",
   "numpy.random.RandomState",
   "numpy.uint32",
   "numpy.uint8",
   "pytest.mark.parametrize",
   "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
   "sklearn.ensemble._hist_gradient_boosting.common.X_BINNED_DTYPE",
   "sklearn.ensemble._hist_gradient_boosting.histogram.HistogramBuilder",
   "sklearn.ensemble._hist_gradient_boosting.splitting.Splitter"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_splitting.test_min_gain_to_split": {
  "lineno": 239,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.asfortranarray",
   "numpy.ones_like",
   "numpy.random.RandomState",
   "numpy.uint32",
   "numpy.uint8",
   "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
   "sklearn.ensemble._hist_gradient_boosting.common.X_BINNED_DTYPE",
   "sklearn.ensemble._hist_gradient_boosting.histogram.HistogramBuilder",
   "sklearn.ensemble._hist_gradient_boosting.splitting.Splitter"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_splitting.test_split_indices": {
  "lineno": 172,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.arange",
   "numpy.array",
   "numpy.asfortranarray",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.uint32",
   "numpy.uint8",
   "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
   "sklearn.ensemble._hist_gradient_boosting.common.X_BINNED_DTYPE",
   "sklearn.ensemble._hist_gradient_boosting.histogram.HistogramBuilder",
   "sklearn.ensemble._hist_gradient_boosting.splitting.Splitter"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_splitting.test_splitting_missing_values": {
  "lineno": 278,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.asfortranarray",
   "numpy.flatnonzero",
   "numpy.ones",
   "numpy.uint32",
   "numpy.uint8",
   "pytest.mark.parametrize",
   "sklearn.ensemble._hist_gradient_boosting.common.G_H_DTYPE",
   "sklearn.ensemble._hist_gradient_boosting.common.X_BINNED_DTYPE",
   "sklearn.ensemble._hist_gradient_boosting.histogram.HistogramBuilder",
   "sklearn.ensemble._hist_gradient_boosting.splitting.Splitter"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification",
   "sklearn.datasets.make_regression"
  ],
  "type": "module"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start._assert_predictor_equal": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start.test_max_iter_with_warm_start_validation": {
  "lineno": 31,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.ensemble.HistGradientBoostingClassifier",
   "sklearn.ensemble.HistGradientBoostingRegressor"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start.test_random_seeds_warm_start": {
  "lineno": 154,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.ensemble.HistGradientBoostingClassifier",
   "sklearn.ensemble.HistGradientBoostingRegressor"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start.test_random_seeds_warm_start._get_rng": {
  "lineno": 162,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start.test_warm_start_clear": {
  "lineno": 130,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "sklearn.ensemble.HistGradientBoostingClassifier",
   "sklearn.ensemble.HistGradientBoostingRegressor"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start.test_warm_start_early_stopping": {
  "lineno": 92,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.ensemble.HistGradientBoostingClassifier",
   "sklearn.ensemble.HistGradientBoostingRegressor"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start.test_warm_start_equal_n_estimators": {
  "lineno": 113,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.base.clone",
   "sklearn.ensemble.HistGradientBoostingClassifier",
   "sklearn.ensemble.HistGradientBoostingRegressor"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start.test_warm_start_max_depth": {
  "lineno": 72,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.ensemble.HistGradientBoostingClassifier",
   "sklearn.ensemble.HistGradientBoostingRegressor"
  ],
  "type": "function"
 },
 "sklearn.ensemble._hist_gradient_boosting.tests.test_warm_start.test_warm_start_yields_identical_results": {
  "lineno": 49,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.ensemble.HistGradientBoostingClassifier",
   "sklearn.ensemble.HistGradientBoostingRegressor"
  ],
  "type": "function"
 },
 "sklearn.ensemble._iforest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.ensemble._iforest.IsolationForest": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._iforest.IsolationForest.__init__": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._iforest.IsolationForest._compute_chunked_score_samples": {
  "lineno": 403,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.ensemble._iforest.IsolationForest._compute_score_samples": {
  "lineno": 435,
  "symbols_in_volume": [
   "numpy.ravel",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.ensemble._iforest.IsolationForest._parallel_args": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._iforest.IsolationForest._set_oob_score": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._iforest.IsolationForest.decision_function": {
  "lineno": 332,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._iforest.IsolationForest.fit": {
  "lineno": 221,
  "symbols_in_volume": [
   "numbers.Integral",
   "numpy.ceil",
   "numpy.log2",
   "numpy.percentile",
   "scipy.sparse.issparse",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.ensemble._iforest.IsolationForest.predict": {
  "lineno": 309,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "sklearn.ensemble._iforest.IsolationForest.score_samples": {
  "lineno": 364,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._iforest._average_path_length": {
  "lineno": 471,
  "symbols_in_volume": [
   "numpy.euler_gamma",
   "numpy.log",
   "numpy.logical_or",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.ensemble._stacking": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.ensemble._stacking.StackingClassifier": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._stacking.StackingClassifier.__init__": {
  "lineno": 368,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._stacking.StackingClassifier._validate_final_estimator": {
  "lineno": 381,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._stacking.StackingClassifier.decision_function": {
  "lineno": 459,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._stacking.StackingClassifier.fit": {
  "lineno": 389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._stacking.StackingClassifier.predict": {
  "lineno": 415,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._stacking.StackingClassifier.predict_proba": {
  "lineno": 439,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._stacking.StackingClassifier.transform": {
  "lineno": 479,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._stacking.StackingRegressor": {
  "lineno": 497,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._stacking.StackingRegressor.__init__": {
  "lineno": 601,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._stacking.StackingRegressor._validate_final_estimator": {
  "lineno": 613,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._stacking.StackingRegressor.fit": {
  "lineno": 621,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._stacking.StackingRegressor.transform": {
  "lineno": 645,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._stacking._BaseStacking": {
  "lineno": 35,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.ensemble._stacking._BaseStacking.__init__": {
  "lineno": 39,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.ensemble._stacking._BaseStacking._clone_final_estimator": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._stacking._BaseStacking._concatenate_predictions": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.hstack",
   "scipy.sparse.hstack",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.ensemble._stacking._BaseStacking._method_name": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._stacking._BaseStacking._transform": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._stacking._BaseStacking.fit": {
  "lineno": 108,
  "symbols_in_volume": [
   "copy.deepcopy",
   "joblib.Parallel",
   "joblib.delayed",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "sklearn.ensemble._stacking._BaseStacking.predict": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._voting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.ensemble._voting.VotingClassifier": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._voting.VotingClassifier.__init__": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._voting.VotingClassifier._collect_probas": {
  "lineno": 252,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "sklearn.ensemble._voting.VotingClassifier._predict_proba": {
  "lineno": 256,
  "symbols_in_volume": [
   "numpy.average"
  ],
  "type": "function"
 },
 "sklearn.ensemble._voting.VotingClassifier.fit": {
  "lineno": 187,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "sklearn.ensemble._voting.VotingClassifier.predict": {
  "lineno": 224,
  "symbols_in_volume": [
   "numpy.apply_along_axis",
   "numpy.argmax",
   "numpy.bincount"
  ],
  "type": "function"
 },
 "sklearn.ensemble._voting.VotingClassifier.predict_proba": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._voting.VotingClassifier.transform": {
  "lineno": 282,
  "symbols_in_volume": [
   "numpy.hstack"
  ],
  "type": "function"
 },
 "sklearn.ensemble._voting.VotingRegressor": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._voting.VotingRegressor.__init__": {
  "lineno": 379,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._voting.VotingRegressor.fit": {
  "lineno": 384,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._voting.VotingRegressor.predict": {
  "lineno": 409,
  "symbols_in_volume": [
   "numpy.average"
  ],
  "type": "function"
 },
 "sklearn.ensemble._voting.VotingRegressor.transform": {
  "lineno": 429,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._voting._BaseVoting": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._voting._BaseVoting._predict": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "sklearn.ensemble._voting._BaseVoting._weights_not_none": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._voting._BaseVoting.fit": {
  "lineno": 54,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "joblib.Parallel",
   "joblib.delayed"
  ],
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostClassifier": {
  "lineno": 285,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostClassifier.__init__": {
  "lineno": 397,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostClassifier._boost": {
  "lineno": 458,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostClassifier._boost_discrete": {
  "lineno": 561,
  "symbols_in_volume": [
   "numpy.average",
   "numpy.exp",
   "numpy.log",
   "numpy.mean"
  ],
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostClassifier._boost_real": {
  "lineno": 503,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.array",
   "numpy.average",
   "numpy.clip",
   "numpy.exp",
   "numpy.finfo",
   "numpy.mean",
   "numpy.newaxis",
   "scipy.special.xlogy"
  ],
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostClassifier._compute_proba_from_decision": {
  "lineno": 762,
  "symbols_in_volume": [
   "numpy.vstack"
  ],
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostClassifier._validate_estimator": {
  "lineno": 440,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostClassifier.decision_function": {
  "lineno": 669,
  "symbols_in_volume": [
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostClassifier.fit": {
  "lineno": 412,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostClassifier.predict": {
  "lineno": 608,
  "symbols_in_volume": [
   "numpy.argmax"
  ],
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostClassifier.predict_log_proba": {
  "lineno": 842,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostClassifier.predict_proba": {
  "lineno": 781,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostClassifier.staged_decision_function": {
  "lineno": 709,
  "symbols_in_volume": [
   "numpy.copy",
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostClassifier.staged_predict": {
  "lineno": 634,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostClassifier.staged_predict_proba": {
  "lineno": 811,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostRegressor": {
  "lineno": 865,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostRegressor.__init__": {
  "lineno": 952,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostRegressor._boost": {
  "lineno": 1001,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.arange",
   "numpy.exp",
   "numpy.log",
   "numpy.power"
  ],
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostRegressor._get_median_predict": {
  "lineno": 1093,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.argsort",
   "numpy.array",
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostRegressor._validate_estimator": {
  "lineno": 996,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostRegressor.fit": {
  "lineno": 968,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostRegressor.predict": {
  "lineno": 1111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.AdaBoostRegressor.staged_predict": {
  "lineno": 1133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.BaseWeightBoosting": {
  "lineno": 51,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.ensemble._weight_boosting.BaseWeightBoosting.__init__": {
  "lineno": 58,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.BaseWeightBoosting._boost": {
  "lineno": 167,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.BaseWeightBoosting._validate_data": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.BaseWeightBoosting.feature_importances_": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.BaseWeightBoosting.fit": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.float64",
   "numpy.ones",
   "numpy.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting.BaseWeightBoosting.staged_score": {
  "lineno": 207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble._weight_boosting._samme_proba": {
  "lineno": 265,
  "symbols_in_volume": [
   "numpy.clip",
   "numpy.finfo",
   "numpy.log",
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.ensemble.bagging": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.ensemble.bagging.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble.base": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.ensemble.base.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble.forest": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.ensemble.forest.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble.gradient_boosting": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.ensemble.gradient_boosting.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble.iforest": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.ensemble.iforest.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble.partial_dependence": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.ensemble.partial_dependence._grid_from_X": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.unique",
   "scipy.stats.mstats.mquantiles"
  ],
  "type": "function"
 },
 "sklearn.ensemble.partial_dependence.partial_dependence": {
  "lineno": 80,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.float64",
   "numpy.int32",
   "numpy.newaxis",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.ensemble.partial_dependence.plot_partial_dependence": {
  "lineno": 188,
  "symbols_in_volume": [
   "itertools.count",
   "joblib.Parallel",
   "joblib.delayed",
   "matplotlib.pyplot.figure",
   "matplotlib.ticker.MaxNLocator",
   "matplotlib.ticker.ScalarFormatter",
   "matplotlib.transforms.blended_transform_factory",
   "numbers.Integral",
   "numpy.arange",
   "numpy.array",
   "numpy.ceil",
   "numpy.int32",
   "numpy.linspace",
   "numpy.meshgrid",
   "numpy.ndarray",
   "numpy.searchsorted",
   "numpy.size",
   "scipy.stats.mstats.mquantiles"
  ],
  "type": "function"
 },
 "sklearn.ensemble.partial_dependence.plot_partial_dependence.convert_feature": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble.setup": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.distutils.core.setup"
  ],
  "type": "module"
 },
 "sklearn.ensemble.setup.configuration": {
  "lineno": 5,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.Configuration",
   "numpy.get_include"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.ensemble.tests.test_bagging": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.datasets.load_boston",
   "sklearn.datasets.load_iris",
   "sklearn.utils.check_random_state"
  ],
  "type": "module"
 },
 "sklearn.ensemble.tests.test_bagging.DummySizeEstimator": {
  "lineno": 222,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.ensemble.tests.test_bagging.DummySizeEstimator.fit": {
  "lineno": 224,
  "symbols_in_volume": [
   "joblib.hash"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.DummyZeroEstimator": {
  "lineno": 586,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.ensemble.tests.test_bagging.DummyZeroEstimator.fit": {
  "lineno": 588,
  "symbols_in_volume": [
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.DummyZeroEstimator.predict": {
  "lineno": 592,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.replace": {
  "lineno": 799,
  "symbols_in_volume": [
   "numpy.isfinite"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_bagging_classifier_with_missing_inputs": {
  "lineno": 842,
  "symbols_in_volume": [
   "numpy.NINF",
   "numpy.array",
   "numpy.inf",
   "numpy.nan",
   "sklearn.ensemble.BaggingClassifier",
   "sklearn.pipeline.make_pipeline",
   "sklearn.preprocessing.FunctionTransformer",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_bagging_regressor_with_missing_inputs": {
  "lineno": 805,
  "symbols_in_volume": [
   "numpy.NINF",
   "numpy.array",
   "numpy.inf",
   "numpy.nan",
   "sklearn.ensemble.BaggingRegressor",
   "sklearn.pipeline.make_pipeline",
   "sklearn.preprocessing.FunctionTransformer",
   "sklearn.tree.DecisionTreeRegressor",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_bagging_sample_weight_unsupported_but_passed": {
  "lineno": 596,
  "symbols_in_volume": [
   "sklearn.ensemble.BaggingClassifier",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_bagging_small_max_features": {
  "lineno": 872,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.ensemble.BaggingClassifier",
   "sklearn.linear_model.LogisticRegression"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_bagging_with_pipeline": {
  "lineno": 578,
  "symbols_in_volume": [
   "sklearn.ensemble.BaggingClassifier",
   "sklearn.feature_selection.SelectKBest",
   "sklearn.pipeline.make_pipeline",
   "sklearn.tree.DecisionTreeClassifier"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_base_estimator": {
  "lineno": 528,
  "symbols_in_volume": [
   "sklearn.ensemble.BaggingClassifier",
   "sklearn.ensemble.BaggingRegressor",
   "sklearn.linear_model.Perceptron",
   "sklearn.model_selection.train_test_split",
   "sklearn.svm.SVR",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.tree.DecisionTreeRegressor",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_bootstrap_features": {
  "lineno": 268,
  "symbols_in_volume": [
   "numpy.unique",
   "sklearn.ensemble.BaggingRegressor",
   "sklearn.model_selection.train_test_split",
   "sklearn.tree.DecisionTreeRegressor",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_bootstrap_samples": {
  "lineno": 229,
  "symbols_in_volume": [
   "sklearn.ensemble.BaggingRegressor",
   "sklearn.model_selection.train_test_split",
   "sklearn.tree.DecisionTreeRegressor",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_classification": {
  "lineno": 56,
  "symbols_in_volume": [
   "sklearn.dummy.DummyClassifier",
   "sklearn.ensemble.BaggingClassifier",
   "sklearn.linear_model.Perceptron",
   "sklearn.model_selection.ParameterGrid",
   "sklearn.model_selection.train_test_split",
   "sklearn.neighbors.KNeighborsClassifier",
   "sklearn.svm.SVC",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.utils._testing.ignore_warnings",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_error": {
  "lineno": 401,
  "symbols_in_volume": [
   "sklearn.ensemble.BaggingClassifier",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_estimators_samples": {
  "lineno": 706,
  "symbols_in_volume": [
   "sklearn.datasets.make_hastie_10_2",
   "sklearn.ensemble.BaggingClassifier",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_estimators_samples_deterministic": {
  "lineno": 742,
  "symbols_in_volume": [
   "sklearn.datasets.load_iris",
   "sklearn.ensemble.BaggingClassifier",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.pipeline.make_pipeline",
   "sklearn.random_projection.SparseRandomProjection",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_gridsearch": {
  "lineno": 513,
  "symbols_in_volume": [
   "sklearn.ensemble.BaggingClassifier",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_max_samples_consistency": {
  "lineno": 770,
  "symbols_in_volume": [
   "sklearn.datasets.make_hastie_10_2",
   "sklearn.ensemble.BaggingClassifier",
   "sklearn.neighbors.KNeighborsClassifier"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_oob_score_classification": {
  "lineno": 324,
  "symbols_in_volume": [
   "sklearn.ensemble.BaggingClassifier",
   "sklearn.model_selection.train_test_split",
   "sklearn.svm.SVC",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.utils._testing.assert_warns",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_oob_score_consistency": {
  "lineno": 696,
  "symbols_in_volume": [
   "sklearn.datasets.make_hastie_10_2",
   "sklearn.ensemble.BaggingClassifier",
   "sklearn.neighbors.KNeighborsClassifier"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_oob_score_regression": {
  "lineno": 354,
  "symbols_in_volume": [
   "sklearn.ensemble.BaggingRegressor",
   "sklearn.model_selection.train_test_split",
   "sklearn.tree.DecisionTreeRegressor",
   "sklearn.utils._testing.assert_warns",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_oob_score_removed_on_warm_start": {
  "lineno": 684,
  "symbols_in_volume": [
   "sklearn.datasets.make_hastie_10_2",
   "sklearn.ensemble.BaggingClassifier",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_parallel_classification": {
  "lineno": 434,
  "symbols_in_volume": [
   "numpy.hstack",
   "numpy.zeros",
   "sklearn.ensemble.BaggingClassifier",
   "sklearn.model_selection.train_test_split",
   "sklearn.svm.SVC",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_raise_message",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_parallel_regression": {
  "lineno": 487,
  "symbols_in_volume": [
   "sklearn.ensemble.BaggingRegressor",
   "sklearn.model_selection.train_test_split",
   "sklearn.tree.DecisionTreeRegressor",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_probability": {
  "lineno": 292,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.exp",
   "numpy.ones",
   "numpy.sum",
   "sklearn.ensemble.BaggingClassifier",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.model_selection.train_test_split",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_regression": {
  "lineno": 140,
  "symbols_in_volume": [
   "sklearn.dummy.DummyRegressor",
   "sklearn.ensemble.BaggingRegressor",
   "sklearn.model_selection.ParameterGrid",
   "sklearn.model_selection.train_test_split",
   "sklearn.neighbors.KNeighborsRegressor",
   "sklearn.svm.SVR",
   "sklearn.tree.DecisionTreeRegressor",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_set_oob_score_label_encoding": {
  "lineno": 782,
  "symbols_in_volume": [
   "sklearn.ensemble.BaggingClassifier"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_single_estimator": {
  "lineno": 383,
  "symbols_in_volume": [
   "sklearn.ensemble.BaggingRegressor",
   "sklearn.model_selection.train_test_split",
   "sklearn.neighbors.KNeighborsRegressor",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_sparse_classification": {
  "lineno": 80,
  "symbols_in_volume": [
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.ensemble.BaggingClassifier",
   "sklearn.model_selection.train_test_split",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_sparse_classification.CustomSVC": {
  "lineno": 83,
  "symbols_in_volume": [
   "sklearn.svm.SVC"
  ],
  "type": "class"
 },
 "sklearn.ensemble.tests.test_bagging.test_sparse_classification.CustomSVC.fit": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_sparse_regression": {
  "lineno": 162,
  "symbols_in_volume": [
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.ensemble.BaggingRegressor",
   "sklearn.model_selection.train_test_split",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_sparse_regression.CustomSVR": {
  "lineno": 169,
  "symbols_in_volume": [
   "sklearn.svm.SVR"
  ],
  "type": "class"
 },
 "sklearn.ensemble.tests.test_bagging.test_sparse_regression.CustomSVR.fit": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_warm_start": {
  "lineno": 605,
  "symbols_in_volume": [
   "sklearn.datasets.make_hastie_10_2",
   "sklearn.ensemble.BaggingClassifier"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_warm_start_equal_n_estimators": {
  "lineno": 638,
  "symbols_in_volume": [
   "sklearn.datasets.make_hastie_10_2",
   "sklearn.ensemble.BaggingClassifier",
   "sklearn.model_selection.train_test_split",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_warm_start_equivalence": {
  "lineno": 656,
  "symbols_in_volume": [
   "sklearn.datasets.make_hastie_10_2",
   "sklearn.ensemble.BaggingClassifier",
   "sklearn.model_selection.train_test_split",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_warm_start_smaller_n_estimators": {
  "lineno": 629,
  "symbols_in_volume": [
   "sklearn.datasets.make_hastie_10_2",
   "sklearn.ensemble.BaggingClassifier",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_bagging.test_warm_start_with_oob_score_fails": {
  "lineno": 677,
  "symbols_in_volume": [
   "sklearn.datasets.make_hastie_10_2",
   "sklearn.ensemble.BaggingClassifier",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.ensemble.tests.test_base.test_base": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.int32",
   "numpy.random.RandomState",
   "sklearn.datasets.load_iris",
   "sklearn.ensemble.BaggingClassifier",
   "sklearn.linear_model.Perceptron"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_base.test_base_not_int_n_estimators": {
  "lineno": 62,
  "symbols_in_volume": [
   "sklearn.datasets.load_iris",
   "sklearn.ensemble.BaggingClassifier",
   "sklearn.linear_model.Perceptron",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_base.test_base_zero_n_estimators": {
  "lineno": 51,
  "symbols_in_volume": [
   "sklearn.datasets.load_iris",
   "sklearn.ensemble.BaggingClassifier",
   "sklearn.linear_model.Perceptron",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_base.test_set_random_states": {
  "lineno": 78,
  "symbols_in_volume": [
   "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
   "sklearn.ensemble._base._set_random_states",
   "sklearn.linear_model.Perceptron",
   "sklearn.pipeline.Pipeline"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_base.test_set_random_states.AlphaParamPipeline": {
  "lineno": 111,
  "symbols_in_volume": [
   "sklearn.pipeline.Pipeline"
  ],
  "type": "class"
 },
 "sklearn.ensemble.tests.test_base.test_set_random_states.AlphaParamPipeline.get_params": {
  "lineno": 112,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "sklearn.pipeline.Pipeline.get_params"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_base.test_set_random_states.RevParamPipeline": {
  "lineno": 116,
  "symbols_in_volume": [
   "sklearn.pipeline.Pipeline"
  ],
  "type": "class"
 },
 "sklearn.ensemble.tests.test_base.test_set_random_states.RevParamPipeline.get_params": {
  "lineno": 117,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "sklearn.pipeline.Pipeline.get_params"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_base.test_set_random_states.make_steps": {
  "lineno": 97,
  "symbols_in_volume": [
   "sklearn.feature_selection.SelectFromModel",
   "sklearn.linear_model.Perceptron"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_common": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.ensemble.tests.test_common.test_ensemble_heterogeneous_estimators_all_dropped": {
  "lineno": 154,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.datasets.make_classification",
   "sklearn.datasets.make_regression",
   "sklearn.ensemble.StackingClassifier",
   "sklearn.ensemble.StackingRegressor",
   "sklearn.ensemble.VotingClassifier",
   "sklearn.ensemble.VotingRegressor",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.LogisticRegression"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_common.test_ensemble_heterogeneous_estimators_behavior": {
  "lineno": 18,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.base.clone",
   "sklearn.base.is_classifier",
   "sklearn.datasets.make_classification",
   "sklearn.datasets.make_regression",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.ensemble.RandomForestRegressor",
   "sklearn.ensemble.StackingClassifier",
   "sklearn.ensemble.StackingRegressor",
   "sklearn.ensemble.VotingClassifier",
   "sklearn.ensemble.VotingRegressor",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.svm.LinearSVC",
   "sklearn.svm.LinearSVR",
   "sklearn.svm.SVC",
   "sklearn.svm.SVR"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_common.test_ensemble_heterogeneous_estimators_name_validation": {
  "lineno": 110,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.base.ClassifierMixin",
   "sklearn.datasets.make_classification",
   "sklearn.datasets.make_regression",
   "sklearn.ensemble.StackingClassifier",
   "sklearn.ensemble.StackingRegressor",
   "sklearn.ensemble.VotingClassifier",
   "sklearn.ensemble.VotingRegressor",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.LogisticRegression"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_common.test_ensemble_heterogeneous_estimators_type": {
  "lineno": 88,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.base.ClassifierMixin",
   "sklearn.datasets.make_classification",
   "sklearn.datasets.make_regression",
   "sklearn.ensemble.StackingClassifier",
   "sklearn.ensemble.StackingRegressor",
   "sklearn.ensemble.VotingClassifier",
   "sklearn.ensemble.VotingRegressor",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.LogisticRegression"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest": {
  "lineno": null,
  "symbols_in_volume": [
   "joblib.parallel.get_active_backend",
   "joblib.register_parallel_backend",
   "numpy.float32",
   "sklearn.datasets.load_boston",
   "sklearn.datasets.load_iris",
   "sklearn.datasets.make_classification",
   "sklearn.datasets.make_hastie_10_2",
   "sklearn.ensemble.ExtraTreesClassifier",
   "sklearn.ensemble.ExtraTreesRegressor",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.ensemble.RandomForestRegressor",
   "sklearn.ensemble.RandomTreesEmbedding",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "module"
 },
 "sklearn.ensemble.tests.test_forest.MyBackend": {
  "lineno": 1262,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble.tests.test_forest.MyBackend.__init__": {
  "lineno": 1263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.MyBackend.start_call": {
  "lineno": 1267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_1d_input": {
  "lineno": 942,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_boston_criterion": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_class_weight_balanced_and_bootstrap_multi_output": {
  "lineno": 1013,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_class_weight_errors": {
  "lineno": 1032,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.vstack",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_class_weights": {
  "lineno": 965,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.vstack",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_classes_shape": {
  "lineno": 571,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.vstack",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_classification_toy": {
  "lineno": 112,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_decision_path": {
  "lineno": 1205,
  "symbols_in_volume": [
   "numpy.diff",
   "numpy.ones",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_gridsearch": {
  "lineno": 447,
  "symbols_in_volume": [
   "sklearn.model_selection.GridSearchCV"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_importances": {
  "lineno": 220,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.all",
   "numpy.sum",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_iris_criterion": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_max_leaf_nodes_max_depth": {
  "lineno": 729,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_memory_layout": {
  "lineno": 889,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ascontiguousarray",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.tree._classes.SPARSE_SPLITTERS",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_min_samples_leaf": {
  "lineno": 783,
  "symbols_in_volume": [
   "numpy.bincount",
   "numpy.min",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_min_samples_split": {
  "lineno": 748,
  "symbols_in_volume": [
   "numpy.min",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_min_weight_fraction_leaf": {
  "lineno": 819,
  "symbols_in_volume": [
   "numpy.bincount",
   "numpy.linspace",
   "numpy.min",
   "numpy.random.RandomState",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_multioutput": {
  "lineno": 509,
  "symbols_in_volume": [
   "numpy.errstate",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_oob_score": {
  "lineno": 376,
  "symbols_in_volume": [
   "numpy.errstate",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_oob_score_raise_error": {
  "lineno": 419,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_parallel": {
  "lineno": 459,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_pickle": {
  "lineno": 484,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_probability": {
  "lineno": 202,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.exp",
   "numpy.ones",
   "numpy.sum",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_regressor_attributes": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_sparse_input": {
  "lineno": 853,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_warm_start": {
  "lineno": 1062,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_warm_start_clear": {
  "lineno": 1094,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_warm_start_equal_n_estimators": {
  "lineno": 1131,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_warm_start_oob": {
  "lineno": 1157,
  "symbols_in_volume": [
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.check_warm_start_smaller_n_estimators": {
  "lineno": 1116,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_1d_input": {
  "lineno": 955,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_backend_respected": {
  "lineno": 1275,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "joblib.__version__",
   "joblib.parallel_backend",
   "pytest.mark.skipif",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.utils._testing.skip_if_no_parallel"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_boston": {
  "lineno": 180,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_class_weight_balanced_and_bootstrap_multi_output": {
  "lineno": 1027,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_class_weight_errors": {
  "lineno": 1057,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_class_weights": {
  "lineno": 1008,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_classes_shape": {
  "lineno": 589,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_classification_toy": {
  "lineno": 131,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_decision_path": {
  "lineno": 1227,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_distribution": {
  "lineno": 676,
  "symbols_in_volume": [
   "collections.defaultdict",
   "numpy.empty",
   "numpy.random.randint",
   "sklearn.ensemble.ExtraTreesRegressor",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_dtype_convert": {
  "lineno": 1194,
  "symbols_in_volume": [
   "numpy.eye",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_forest_degenerate_feature_importances": {
  "lineno": 1301,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.ones",
   "numpy.zeros",
   "sklearn.ensemble.RandomForestRegressor",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_forest_feature_importances_sum": {
  "lineno": 1293,
  "symbols_in_volume": [
   "math.isclose",
   "sklearn.datasets.make_classification",
   "sklearn.ensemble.RandomForestClassifier"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_gridsearch": {
  "lineno": 453,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_importances": {
  "lineno": 260,
  "symbols_in_volume": [
   "itertools.chain",
   "itertools.product",
   "numpy.float32",
   "numpy.float64",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_importances_asymptotic": {
  "lineno": 274,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.bool",
   "numpy.zeros",
   "sklearn.ensemble.ExtraTreesClassifier",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_importances_asymptotic.binomial": {
  "lineno": 279,
  "symbols_in_volume": [
   "sklearn.utils.fixes.comb"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_importances_asymptotic.entropy": {
  "lineno": 282,
  "symbols_in_volume": [
   "numpy.bincount",
   "numpy.log2"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_importances_asymptotic.mdi_importance": {
  "lineno": 293,
  "symbols_in_volume": [
   "itertools.combinations",
   "itertools.product",
   "numpy.bool",
   "numpy.ones",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_iris": {
  "lineno": 155,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_little_tree_with_small_max_samples": {
  "lineno": 1339,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.ensemble.RandomForestRegressor"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_max_leaf_nodes_max_depth": {
  "lineno": 743,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_max_samples_exceptions": {
  "lineno": 1310,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.nan",
   "numpy.ones",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_memory_layout": {
  "lineno": 936,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_min_impurity_decrease": {
  "lineno": 1248,
  "symbols_in_volume": [
   "sklearn.datasets.make_hastie_10_2",
   "sklearn.ensemble.ExtraTreesClassifier",
   "sklearn.ensemble.ExtraTreesRegressor",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.ensemble.RandomForestRegressor"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_min_impurity_split": {
  "lineno": 1232,
  "symbols_in_volume": [
   "sklearn.datasets.make_hastie_10_2",
   "sklearn.ensemble.ExtraTreesClassifier",
   "sklearn.ensemble.ExtraTreesRegressor",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.ensemble.RandomForestRegressor",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_min_samples_leaf": {
  "lineno": 814,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_min_samples_split": {
  "lineno": 778,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_min_weight_fraction_leaf": {
  "lineno": 848,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_multioutput": {
  "lineno": 536,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_multioutput_string": {
  "lineno": 541,
  "symbols_in_volume": [
   "numpy.errstate",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_oob_score_classifiers": {
  "lineno": 400,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "scipy.sparse.csc_matrix"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_oob_score_raise_error": {
  "lineno": 442,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_oob_score_regressors": {
  "lineno": 411,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "scipy.sparse.csc_matrix"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_parallel": {
  "lineno": 474,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_parallel_train": {
  "lineno": 658,
  "symbols_in_volume": [
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_pickle": {
  "lineno": 499,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_probability": {
  "lineno": 215,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_random_hasher": {
  "lineno": 625,
  "symbols_in_volume": [
   "sklearn.datasets.make_circles",
   "sklearn.decomposition.TruncatedSVD",
   "sklearn.ensemble.RandomTreesEmbedding",
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_random_hasher_sparse_data": {
  "lineno": 650,
  "symbols_in_volume": [
   "scipy.sparse.csc_matrix",
   "sklearn.datasets.make_multilabel_classification",
   "sklearn.ensemble.RandomTreesEmbedding",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_random_trees_dense_equal": {
  "lineno": 607,
  "symbols_in_volume": [
   "sklearn.datasets.make_circles",
   "sklearn.ensemble.RandomTreesEmbedding",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_random_trees_dense_type": {
  "lineno": 594,
  "symbols_in_volume": [
   "numpy.ndarray",
   "sklearn.datasets.make_circles",
   "sklearn.ensemble.RandomTreesEmbedding"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_regressor_attributes": {
  "lineno": 197,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_sparse_input": {
  "lineno": 879,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.datasets.make_multilabel_classification"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_unfitted_feature_importances": {
  "lineno": 367,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.exceptions.NotFittedError"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_warm_start": {
  "lineno": 1089,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_warm_start_clear": {
  "lineno": 1111,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_warm_start_equal_n_estimators": {
  "lineno": 1152,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_warm_start_oob": {
  "lineno": 1189,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_forest.test_warm_start_smaller_n_estimators": {
  "lineno": 1126,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.datasets.load_boston",
   "sklearn.datasets.load_iris",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.ensemble.GradientBoostingRegressor"
  ],
  "type": "module"
 },
 "sklearn.ensemble.tests.test_gradient_boosting._make_multiclass": {
  "lineno": 1298,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.check_boston": {
  "lineno": 216,
  "symbols_in_volume": [
   "numpy.ones",
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.metrics.mean_squared_error",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.check_classification_synthetic": {
  "lineno": 187,
  "symbols_in_volume": [
   "sklearn.datasets.make_hastie_10_2",
   "sklearn.ensemble.GradientBoostingClassifier"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.check_classification_toy": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy.any",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.check_iris": {
  "lineno": 251,
  "symbols_in_volume": [
   "sklearn.ensemble.GradientBoostingClassifier"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.check_sparse_input": {
  "lineno": 1171,
  "symbols_in_volume": [
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.early_stopping_monitor": {
  "lineno": 954,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_boston": {
  "lineno": 245,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_check_inputs": {
  "lineno": 343,
  "symbols_in_volume": [
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.utils._testing.assert_raise_message",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_check_inputs_predict": {
  "lineno": 359,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.newaxis",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_check_inputs_predict_stages": {
  "lineno": 386,
  "symbols_in_volume": [
   "numpy.asfortranarray",
   "numpy.zeros",
   "scipy.sparse.csc_matrix",
   "sklearn.datasets.make_hastie_10_2",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.ensemble._gradient_boosting.predict_stages",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_check_max_features": {
  "lineno": 405,
  "symbols_in_volume": [
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_classification_synthetic": {
  "lineno": 211,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_classification_toy": {
  "lineno": 88,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_classifier_parameter_checks": {
  "lineno": 93,
  "symbols_in_volume": [
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_complete_classification": {
  "lineno": 998,
  "symbols_in_volume": [
   "sklearn.datasets.make_hastie_10_2",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.tree._tree.TREE_LEAF.shape"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_complete_regression": {
  "lineno": 1014,
  "symbols_in_volume": [
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.tree._tree.TREE_LEAF.shape"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_degenerate_targets": {
  "lineno": 587,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.ones",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_early_stopping_n_classes": {
  "lineno": 1372,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.ensemble.GradientBoostingClassifier"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_early_stopping_stratified": {
  "lineno": 1286,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.ensemble.GradientBoostingClassifier"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_feature_importance_regression": {
  "lineno": 435,
  "symbols_in_volume": [
   "numpy.argsort",
   "pytest.mark.network",
   "sklearn.datasets.fetch_california_housing",
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.model_selection.train_test_split"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_feature_importances": {
  "lineno": 314,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "sklearn.ensemble.GradientBoostingRegressor"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_float_class_labels": {
  "lineno": 629,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.float32",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_gbr_degenerate_feature_importances": {
  "lineno": 1392,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.ones",
   "numpy.zeros",
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_gradient_boosting_early_stopping": {
  "lineno": 1215,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.model_selection.train_test_split"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_gradient_boosting_init_wrong_methods": {
  "lineno": 1358,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.preprocessing.OneHotEncoder",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_gradient_boosting_validation_fraction": {
  "lineno": 1250,
  "symbols_in_volume": [
   "sklearn.base.clone",
   "sklearn.datasets.make_classification",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.model_selection.train_test_split"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_gradient_boosting_with_init": {
  "lineno": 1303,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.datasets.make_classification",
   "sklearn.datasets.make_regression",
   "sklearn.dummy.DummyClassifier",
   "sklearn.dummy.DummyRegressor",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.utils._mocking.NoSampleWeightWrapper",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_gradient_boosting_with_init_pipeline": {
  "lineno": 1331,
  "symbols_in_volume": [
   "numpy.ones",
   "pytest.raises",
   "sklearn.datasets.make_regression",
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.linear_model.LinearRegression",
   "sklearn.pipeline.make_pipeline",
   "sklearn.svm.NuSVR"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_iris": {
  "lineno": 265,
  "symbols_in_volume": [
   "numpy.ones",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_loss_function": {
  "lineno": 172,
  "symbols_in_volume": [
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_max_feature_auto": {
  "lineno": 464,
  "symbols_in_volume": [
   "numpy.log2",
   "numpy.sqrt",
   "sklearn.datasets.make_hastie_10_2",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.ensemble.GradientBoostingRegressor"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_max_feature_regression": {
  "lineno": 420,
  "symbols_in_volume": [
   "sklearn.datasets.make_hastie_10_2",
   "sklearn.ensemble.GradientBoostingClassifier"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_max_leaf_nodes_max_depth": {
  "lineno": 1068,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.datasets.make_hastie_10_2"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_mem_layout": {
  "lineno": 656,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ascontiguousarray",
   "numpy.asfortranarray",
   "numpy.int32",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_min_impurity_decrease": {
  "lineno": 1098,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.datasets.make_hastie_10_2"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_min_impurity_split": {
  "lineno": 1084,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.datasets.make_hastie_10_2",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_monitor_early_stopping": {
  "lineno": 962,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.datasets.make_hastie_10_2"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_more_verbose_output": {
  "lineno": 746,
  "symbols_in_volume": [
   "io.StringIO",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sys.stdout"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_non_uniform_weights_toy_edge_case_clf": {
  "lineno": 1157,
  "symbols_in_volume": [
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_non_uniform_weights_toy_edge_case_reg": {
  "lineno": 1142,
  "symbols_in_volume": [
   "sklearn.ensemble.GradientBoostingRegressor"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_oob_improvement": {
  "lineno": 685,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_oob_improvement_raise": {
  "lineno": 697,
  "symbols_in_volume": [
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_oob_multilcass_iris": {
  "lineno": 705,
  "symbols_in_volume": [
   "sklearn.ensemble.GradientBoostingClassifier"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_presort_deprecated": {
  "lineno": 1401,
  "symbols_in_volume": [
   "numpy.r_",
   "numpy.zeros",
   "pytest.mark.parametrize",
   "pytest.warns"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_probability_exponential": {
  "lineno": 1120,
  "symbols_in_volume": [
   "numpy.all",
   "scipy.special.expit",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_probability_log": {
  "lineno": 324,
  "symbols_in_volume": [
   "numpy.all",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_quantile_loss": {
  "lineno": 601,
  "symbols_in_volume": [
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_regression_synthetic": {
  "lineno": 273,
  "symbols_in_volume": [
   "sklearn.datasets.make_friedman1",
   "sklearn.datasets.make_friedman2",
   "sklearn.datasets.make_friedman3",
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.metrics.mean_squared_error",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_regressor_parameter_checks": {
  "lineno": 153,
  "symbols_in_volume": [
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_serialization": {
  "lineno": 567,
  "symbols_in_volume": [
   "cPickle.HIGHEST_PROTOCOL",
   "cPickle.dumps",
   "cPickle.loads",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_shape_y": {
  "lineno": 641,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.int32",
   "numpy.newaxis",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.exceptions.DataConversionWarning",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_sparse_input": {
  "lineno": 1200,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.datasets.make_multilabel_classification",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.utils._testing.skip_if_32bit"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_staged_functions_defensive": {
  "lineno": 548,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.int",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_staged_predict": {
  "lineno": 498,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.fromiter",
   "sklearn.datasets.make_friedman1",
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_staged_predict_proba": {
  "lineno": 520,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.fromiter",
   "sklearn.datasets.make_hastie_10_2",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.exceptions.NotFittedError",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_symbol_labels": {
  "lineno": 618,
  "symbols_in_volume": [
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils.tosequence"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_verbose_output": {
  "lineno": 720,
  "symbols_in_volume": [
   "io.StringIO",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sys.stdout"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start": {
  "lineno": 771,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.datasets.make_hastie_10_2",
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_clear": {
  "lineno": 823,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.datasets.make_hastie_10_2",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_equal_n_estimators": {
  "lineno": 858,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.base.clone",
   "sklearn.datasets.make_hastie_10_2",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_fortran": {
  "lineno": 934,
  "symbols_in_volume": [
   "numpy.asfortranarray",
   "pytest.mark.parametrize",
   "sklearn.datasets.make_hastie_10_2",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_max_depth": {
  "lineno": 808,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.datasets.make_hastie_10_2"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_n_estimators": {
  "lineno": 793,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.datasets.make_hastie_10_2",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_oob": {
  "lineno": 887,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.datasets.make_hastie_10_2",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_oob_switch": {
  "lineno": 872,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.zeros",
   "pytest.mark.parametrize",
   "sklearn.datasets.make_hastie_10_2",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_smaller_n_estimators": {
  "lineno": 848,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.datasets.make_hastie_10_2",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_sparse": {
  "lineno": 905,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.datasets.make_hastie_10_2",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_wo_nestimators_change": {
  "lineno": 1110,
  "symbols_in_volume": [
   "sklearn.ensemble.GradientBoostingClassifier"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_zero_n_estimators": {
  "lineno": 838,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.datasets.make_hastie_10_2",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_zero_estimator_clf": {
  "lineno": 1043,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting.test_zero_estimator_reg": {
  "lineno": 1028,
  "symbols_in_volume": [
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.metrics.mean_squared_error",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_binomial_deviance": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.exp",
   "numpy.logaddexp",
   "numpy.mean",
   "numpy.testing.assert_almost_equal",
   "sklearn.ensemble._gb_losses.BinomialDeviance"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_init_raw_predictions_shapes": {
  "lineno": 179,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.random.RandomState",
   "sklearn.ensemble._gb_losses.BinomialDeviance",
   "sklearn.ensemble._gb_losses.ExponentialLoss",
   "sklearn.ensemble._gb_losses.HuberLossFunction",
   "sklearn.ensemble._gb_losses.LeastAbsoluteError",
   "sklearn.ensemble._gb_losses.LeastSquaresError",
   "sklearn.ensemble._gb_losses.MultinomialDeviance",
   "sklearn.ensemble._gb_losses.QuantileLossFunction"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_init_raw_predictions_values": {
  "lineno": 214,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.median",
   "numpy.percentile",
   "numpy.random.RandomState",
   "numpy.testing.assert_almost_equal",
   "sklearn.ensemble._gb_losses.BinomialDeviance",
   "sklearn.ensemble._gb_losses.ExponentialLoss",
   "sklearn.ensemble._gb_losses.HuberLossFunction",
   "sklearn.ensemble._gb_losses.LeastAbsoluteError",
   "sklearn.ensemble._gb_losses.LeastSquaresError",
   "sklearn.ensemble._gb_losses.MultinomialDeviance",
   "sklearn.ensemble._gb_losses.QuantileLossFunction"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_lad_equals_quantile_50": {
  "lineno": 278,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.random.RandomState",
   "numpy.testing.assert_almost_equal",
   "pytest.mark.parametrize",
   "sklearn.ensemble._gb_losses.LeastAbsoluteError",
   "sklearn.ensemble._gb_losses.QuantileLossFunction"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_quantile_loss_function": {
  "lineno": 136,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.testing.assert_allclose",
   "numpy.zeros_like",
   "sklearn.ensemble._gb_losses.QuantileLossFunction"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_sample_weight_deviance": {
  "lineno": 146,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.ones",
   "numpy.zeros",
   "sklearn.ensemble._gb_losses.LOSS_FUNCTIONS.values",
   "sklearn.ensemble._gb_losses.RegressionLossFunction",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_sample_weight_init_estimators": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_allclose",
   "sklearn.ensemble._gb_losses.LOSS_FUNCTIONS.values",
   "sklearn.ensemble._gb_losses.RegressionLossFunction",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_sample_weight_smoke": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.ones",
   "numpy.testing.assert_almost_equal",
   "sklearn.ensemble._gb_losses.LeastSquaresError",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_weighted_percentile": {
  "lineno": 106,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.float64",
   "numpy.ones",
   "sklearn.utils.stats._weighted_percentile"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_weighted_percentile_equal": {
  "lineno": 118,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.float64",
   "numpy.ones",
   "sklearn.utils.stats._weighted_percentile"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_weighted_percentile_zero_weight": {
  "lineno": 127,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.float64",
   "numpy.ones",
   "sklearn.utils.stats._weighted_percentile"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.datasets.load_boston",
   "sklearn.datasets.load_iris",
   "sklearn.utils.check_random_state"
  ],
  "type": "module"
 },
 "sklearn.ensemble.tests.test_iforest.test_iforest": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.ensemble.IsolationForest",
   "sklearn.model_selection.ParameterGrid",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_iforest_average_path_length": {
  "lineno": 237,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.euler_gamma",
   "numpy.log",
   "numpy.sort",
   "sklearn.ensemble._iforest._average_path_length",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_iforest_chunks_works1": {
  "lineno": 291,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "unittest.mock.Mock",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_iforest_chunks_works2": {
  "lineno": 306,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "unittest.mock.Mock",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_iforest_deprecation": {
  "lineno": 320,
  "symbols_in_volume": [
   "pytest.warns",
   "sklearn.ensemble.IsolationForest"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_iforest_error": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.int64",
   "pytest.raises",
   "pytest.warns",
   "sklearn.ensemble.IsolationForest",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_iforest_parallel_regression": {
  "lineno": 156,
  "symbols_in_volume": [
   "sklearn.ensemble.IsolationForest",
   "sklearn.model_selection.train_test_split",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_iforest_performance": {
  "lineno": 180,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.r_",
   "sklearn.ensemble.IsolationForest",
   "sklearn.metrics.roc_auc_score",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_iforest_sparse": {
  "lineno": 63,
  "symbols_in_volume": [
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.ensemble.IsolationForest",
   "sklearn.model_selection.ParameterGrid",
   "sklearn.model_selection.train_test_split",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_iforest_subsampled_features": {
  "lineno": 226,
  "symbols_in_volume": [
   "sklearn.ensemble.IsolationForest",
   "sklearn.model_selection.train_test_split",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_iforest_warm_start": {
  "lineno": 269,
  "symbols_in_volume": [
   "sklearn.ensemble.IsolationForest",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_iforest_with_uniform_data": {
  "lineno": 327,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.repeat",
   "sklearn.ensemble.IsolationForest"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_iforest_works": {
  "lineno": 204,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.min",
   "pytest.mark.parametrize",
   "sklearn.ensemble.IsolationForest",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_max_samples_attribute": {
  "lineno": 141,
  "symbols_in_volume": [
   "sklearn.ensemble.IsolationForest",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_max_samples_consistency": {
  "lineno": 219,
  "symbols_in_volume": [
   "sklearn.ensemble.IsolationForest"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_recalculate_max_depth": {
  "lineno": 133,
  "symbols_in_volume": [
   "numpy.ceil",
   "numpy.log2",
   "sklearn.ensemble.IsolationForest"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_iforest.test_score_samples": {
  "lineno": 257,
  "symbols_in_volume": [
   "sklearn.ensemble.IsolationForest",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_partial_dependence": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "sklearn.datasets.load_boston",
   "sklearn.datasets.load_iris"
  ],
  "type": "module"
 },
 "sklearn.ensemble.tests.test_partial_dependence.test_partial_dependecy_input": {
  "lineno": 131,
  "symbols_in_volume": [
   "numpy.random.rand",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.ensemble.partial_dependence.partial_dependence",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_partial_dependence.test_partial_dependence_classifier": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.all",
   "numpy.asarray",
   "numpy.ones",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal",
   "numpy.unique",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.ensemble.partial_dependence.partial_dependence",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_partial_dependence.test_partial_dependence_multiclass": {
  "lineno": 75,
  "symbols_in_volume": [
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.ensemble.partial_dependence.partial_dependence",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_partial_dependence.test_partial_dependence_regressor": {
  "lineno": 91,
  "symbols_in_volume": [
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.ensemble.partial_dependence.partial_dependence",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_partial_dependence.test_partial_dependence_sample_weight": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.c_",
   "numpy.corrcoef",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.ravel",
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.ensemble.partial_dependence.partial_dependence",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_partial_dependence.test_plot_partial_dependence": {
  "lineno": 160,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.ensemble.partial_dependence.plot_partial_dependence",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_partial_dependence.test_plot_partial_dependence_input": {
  "lineno": 194,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.filterwarnings",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.ensemble.partial_dependence.plot_partial_dependence",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_partial_dependence.test_plot_partial_dependence_multiclass": {
  "lineno": 231,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.ensemble.partial_dependence.plot_partial_dependence",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_partial_dependence.test_raise_deprecation_warning": {
  "lineno": 269,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.warns",
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.ensemble.partial_dependence.partial_dependence",
   "sklearn.ensemble.partial_dependence.plot_partial_dependence"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.datasets.load_diabetes",
   "sklearn.datasets.load_iris"
  ],
  "type": "module"
 },
 "sklearn.ensemble.tests.test_stacking.NoWeightClassifier": {
  "lineno": 273,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.ClassifierMixin"
  ],
  "type": "class"
 },
 "sklearn.ensemble.tests.test_stacking.NoWeightClassifier.fit": {
  "lineno": 274,
  "symbols_in_volume": [
   "sklearn.dummy.DummyClassifier"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.NoWeightRegressor": {
  "lineno": 264,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.RegressorMixin"
  ],
  "type": "class"
 },
 "sklearn.ensemble.tests.test_stacking.NoWeightRegressor.fit": {
  "lineno": 265,
  "symbols_in_volume": [
   "sklearn.dummy.DummyRegressor"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.NoWeightRegressor.predict": {
  "lineno": 269,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.test_check_estimators_stacking_estimator": {
  "lineno": 369,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize",
   "sklearn.ensemble.StackingClassifier",
   "sklearn.ensemble.StackingRegressor",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.tree.DecisionTreeRegressor",
   "sklearn.utils.estimator_checks.check_estimator",
   "sklearn.utils.estimator_checks.check_no_attributes_set_in_init"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.test_stacking_classifier_drop_binary_prob": {
  "lineno": 248,
  "symbols_in_volume": [
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.ensemble.StackingClassifier",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.preprocessing.scale"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.test_stacking_classifier_drop_column_binary_classification": {
  "lineno": 95,
  "symbols_in_volume": [
   "sklearn.datasets.load_breast_cancer",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.ensemble.StackingClassifier",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.model_selection.train_test_split",
   "sklearn.preprocessing.scale",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.test_stacking_classifier_drop_estimator": {
  "lineno": 120,
  "symbols_in_volume": [
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.ensemble.StackingClassifier",
   "sklearn.model_selection.train_test_split",
   "sklearn.preprocessing.scale",
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.test_stacking_classifier_error": {
  "lineno": 279,
  "symbols_in_volume": [
   "numpy.ones",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.ensemble.StackingClassifier",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.preprocessing.scale",
   "sklearn.svm.LinearSVC",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.test_stacking_classifier_iris": {
  "lineno": 51,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.ensemble.StackingClassifier",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.model_selection.StratifiedKFold",
   "sklearn.model_selection.train_test_split",
   "sklearn.preprocessing.scale",
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.test_stacking_classifier_sparse_passthrough": {
  "lineno": 229,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.issparse",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.ensemble.StackingClassifier",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.model_selection.train_test_split",
   "sklearn.preprocessing.scale",
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.assert_allclose_dense_sparse"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.test_stacking_classifier_stratify_default": {
  "lineno": 386,
  "symbols_in_volume": [
   "sklearn.ensemble.StackingClassifier",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.test_stacking_cv_influence": {
  "lineno": 442,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.base.clone",
   "sklearn.datasets.load_breast_cancer",
   "sklearn.ensemble.StackingClassifier",
   "sklearn.ensemble.StackingRegressor",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.svm.LinearSVC",
   "sklearn.svm.LinearSVR",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.test_stacking_randomness": {
  "lineno": 336,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.base.clone",
   "sklearn.ensemble.StackingClassifier",
   "sklearn.ensemble.StackingRegressor",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.model_selection.KFold",
   "sklearn.svm.LinearSVC",
   "sklearn.svm.LinearSVR",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.test_stacking_regressor_diabetes": {
  "lineno": 165,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.dummy.DummyRegressor",
   "sklearn.ensemble.RandomForestRegressor",
   "sklearn.ensemble.StackingRegressor",
   "sklearn.linear_model.LinearRegression",
   "sklearn.model_selection.KFold",
   "sklearn.model_selection.train_test_split",
   "sklearn.preprocessing.scale",
   "sklearn.svm.LinearSVR",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.test_stacking_regressor_drop_estimator": {
  "lineno": 143,
  "symbols_in_volume": [
   "sklearn.ensemble.RandomForestRegressor",
   "sklearn.ensemble.StackingRegressor",
   "sklearn.model_selection.train_test_split",
   "sklearn.preprocessing.scale",
   "sklearn.svm.LinearSVR",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.test_stacking_regressor_error": {
  "lineno": 310,
  "symbols_in_volume": [
   "numpy.ones",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.ensemble.StackingRegressor",
   "sklearn.linear_model.LinearRegression",
   "sklearn.preprocessing.scale",
   "sklearn.svm.LinearSVR"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.test_stacking_regressor_sparse_passthrough": {
  "lineno": 210,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.issparse",
   "sklearn.ensemble.RandomForestRegressor",
   "sklearn.ensemble.StackingRegressor",
   "sklearn.linear_model.LinearRegression",
   "sklearn.model_selection.train_test_split",
   "sklearn.preprocessing.scale",
   "sklearn.svm.LinearSVR",
   "sklearn.utils._testing.assert_allclose_dense_sparse"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_stacking.test_stacking_with_sample_weight": {
  "lineno": 397,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.ones",
   "pytest.mark.parametrize",
   "sklearn.datasets.load_breast_cancer",
   "sklearn.ensemble.StackingClassifier",
   "sklearn.ensemble.StackingRegressor",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.model_selection.KFold",
   "sklearn.model_selection.train_test_split",
   "sklearn.svm.LinearSVC",
   "sklearn.svm.LinearSVR",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.datasets.load_boston",
   "sklearn.datasets.load_iris"
  ],
  "type": "module"
 },
 "sklearn.ensemble.tests.test_voting.test_check_estimators_voting_estimator": {
  "lineno": 499,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.ensemble.VotingClassifier",
   "sklearn.ensemble.VotingRegressor",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.tree.DecisionTreeRegressor",
   "sklearn.utils.estimator_checks.check_estimator",
   "sklearn.utils.estimator_checks.check_no_attributes_set_in_init"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_deprecate_none_transformer": {
  "lineno": 517,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.warns",
   "sklearn.base.BaseEstimator",
   "sklearn.ensemble.VotingClassifier",
   "sklearn.ensemble.VotingRegressor",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.tree.DecisionTreeRegressor"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_estimator_weights_format": {
  "lineno": 424,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.ensemble.VotingClassifier",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_gridsearch": {
  "lineno": 248,
  "symbols_in_volume": [
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.ensemble.VotingClassifier",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.naive_bayes.GaussianNB"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_majority_label_iris": {
  "lineno": 85,
  "symbols_in_volume": [
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.ensemble.VotingClassifier",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.model_selection.cross_val_score",
   "sklearn.naive_bayes.GaussianNB",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_multilabel": {
  "lineno": 233,
  "symbols_in_volume": [
   "sklearn.datasets.make_multilabel_classification",
   "sklearn.ensemble.VotingClassifier",
   "sklearn.multiclass.OneVsRestClassifier",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_none_estimator_with_weights": {
  "lineno": 473,
  "symbols_in_volume": [
   "numpy.ones",
   "pytest.mark.parametrize",
   "pytest.warns",
   "sklearn.base.clone",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.ensemble.RandomForestRegressor",
   "sklearn.ensemble.VotingClassifier",
   "sklearn.ensemble.VotingRegressor",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.LogisticRegression"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_notfitted": {
  "lineno": 66,
  "symbols_in_volume": [
   "sklearn.dummy.DummyRegressor",
   "sklearn.ensemble.VotingClassifier",
   "sklearn.ensemble.VotingRegressor",
   "sklearn.exceptions.NotFittedError",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_parallel_fit": {
  "lineno": 265,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.ensemble.VotingClassifier",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.naive_bayes.GaussianNB",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_predict_on_toy_problem": {
  "lineno": 153,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.ensemble.VotingClassifier",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.naive_bayes.GaussianNB",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_predict_proba_on_toy_problem": {
  "lineno": 185,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.ensemble.VotingClassifier",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.naive_bayes.GaussianNB",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_predictproba_hardvoting": {
  "lineno": 53,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.ensemble.VotingClassifier",
   "sklearn.linear_model.LogisticRegression"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_sample_weight": {
  "lineno": 286,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.random.RandomState",
   "pytest.raises",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.ensemble.VotingClassifier",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.neighbors.KNeighborsClassifier",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_sample_weight.ClassifierErrorFit": {
  "lineno": 320,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.ClassifierMixin"
  ],
  "type": "class"
 },
 "sklearn.ensemble.tests.test_voting.test_sample_weight.ClassifierErrorFit.fit": {
  "lineno": 321,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_sample_weight_kwargs": {
  "lineno": 328,
  "symbols_in_volume": [
   "numpy.ones",
   "sklearn.ensemble.VotingClassifier"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_sample_weight_kwargs.MockClassifier": {
  "lineno": 330,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.ClassifierMixin"
  ],
  "type": "class"
 },
 "sklearn.ensemble.tests.test_voting.test_sample_weight_kwargs.MockClassifier.fit": {
  "lineno": 332,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_set_estimator_none": {
  "lineno": 361,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "pytest.raises",
   "pytest.warns",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.ensemble.VotingClassifier",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.naive_bayes.GaussianNB",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_tie_situation": {
  "lineno": 97,
  "symbols_in_volume": [
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.ensemble.VotingClassifier",
   "sklearn.linear_model.LogisticRegression"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_transform": {
  "lineno": 441,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.ensemble.VotingClassifier",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.naive_bayes.GaussianNB",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_voting_classifier_estimator_init": {
  "lineno": 38,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.ensemble.VotingClassifier",
   "sklearn.linear_model.LogisticRegression"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_voting_classifier_set_params": {
  "lineno": 342,
  "symbols_in_volume": [
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.ensemble.VotingClassifier",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.naive_bayes.GaussianNB",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_weights_iris": {
  "lineno": 108,
  "symbols_in_volume": [
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.ensemble.VotingClassifier",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.model_selection.cross_val_score",
   "sklearn.naive_bayes.GaussianNB",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_voting.test_weights_regressor": {
  "lineno": 121,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.average",
   "sklearn.dummy.DummyRegressor",
   "sklearn.ensemble.VotingRegressor",
   "sklearn.model_selection.train_test_split",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.datasets.load_boston",
   "sklearn.datasets.load_iris",
   "sklearn.utils.shuffle"
  ],
  "type": "module"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_adaboost_consistent_predict": {
  "lineno": 554,
  "symbols_in_volume": [
   "numpy.argmax",
   "pytest.mark.parametrize",
   "sklearn.datasets.load_digits",
   "sklearn.ensemble.AdaBoostClassifier",
   "sklearn.model_selection.train_test_split",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_adaboost_negative_weight_error": {
  "lineno": 571,
  "symbols_in_volume": [
   "numpy.ones_like",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.ensemble.AdaBoostClassifier",
   "sklearn.ensemble.AdaBoostRegressor"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_adaboostclassifier_without_sample_weight": {
  "lineno": 503,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.dummy.DummyClassifier",
   "sklearn.ensemble.AdaBoostClassifier",
   "sklearn.utils._mocking.NoSampleWeightWrapper",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_adaboostregressor_sample_weight": {
  "lineno": 517,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.ones_like",
   "numpy.random.RandomState",
   "pytest.approx",
   "sklearn.base.clone",
   "sklearn.ensemble.AdaBoostRegressor",
   "sklearn.linear_model.LinearRegression"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_base_estimator": {
  "lineno": 286,
  "symbols_in_volume": [
   "sklearn.ensemble.AdaBoostClassifier",
   "sklearn.ensemble.AdaBoostRegressor",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.ensemble.RandomForestRegressor",
   "sklearn.svm.SVC",
   "sklearn.svm.SVR",
   "sklearn.utils._testing.assert_raises_regexp"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_boston": {
  "lineno": 146,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.ensemble.AdaBoostRegressor"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_classification_toy": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.unique",
   "pytest.mark.parametrize",
   "sklearn.ensemble.AdaBoostClassifier",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_error": {
  "lineno": 271,
  "symbols_in_volume": [
   "numpy.asarray",
   "sklearn.ensemble.AdaBoostClassifier",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_gridsearch": {
  "lineno": 204,
  "symbols_in_volume": [
   "sklearn.ensemble.AdaBoostClassifier",
   "sklearn.ensemble.AdaBoostRegressor",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.tree.DecisionTreeRegressor"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_importances": {
  "lineno": 251,
  "symbols_in_volume": [
   "numpy.newaxis.all",
   "sklearn.datasets.make_classification",
   "sklearn.ensemble.AdaBoostClassifier"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_iris": {
  "lineno": 111,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.unique",
   "sklearn.ensemble.AdaBoostClassifier",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_array_less"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_multidimensional_X": {
  "lineno": 481,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.dummy.DummyClassifier",
   "sklearn.dummy.DummyRegressor",
   "sklearn.ensemble.AdaBoostClassifier",
   "sklearn.ensemble.AdaBoostRegressor"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_oneclass_adaboost_proba": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.ones",
   "sklearn.ensemble.AdaBoostClassifier",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_pickle": {
  "lineno": 223,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "sklearn.ensemble.AdaBoostClassifier",
   "sklearn.ensemble.AdaBoostRegressor"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_regression_toy": {
  "lineno": 104,
  "symbols_in_volume": [
   "sklearn.ensemble.AdaBoostRegressor",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_samme_proba": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.argmax",
   "numpy.argmin",
   "numpy.array",
   "numpy.isfinite",
   "numpy.newaxis",
   "numpy.ones_like",
   "sklearn.ensemble._weight_boosting._samme_proba",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_samme_proba.MockEstimator": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_samme_proba.MockEstimator.predict_proba": {
  "lineno": 68,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sample_weight_adaboost_regressor": {
  "lineno": 462,
  "symbols_in_volume": [
   "sklearn.ensemble.AdaBoostRegressor"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sample_weight_adaboost_regressor.DummyEstimator": {
  "lineno": 468,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sample_weight_adaboost_regressor.DummyEstimator.fit": {
  "lineno": 470,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sample_weight_adaboost_regressor.DummyEstimator.predict": {
  "lineno": 473,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sparse_classification": {
  "lineno": 314,
  "symbols_in_volume": [
   "numpy.ravel",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.dok_matrix",
   "scipy.sparse.lil_matrix",
   "sklearn.datasets.make_multilabel_classification",
   "sklearn.ensemble.AdaBoostClassifier",
   "sklearn.model_selection.train_test_split",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sparse_classification.CustomSVC": {
  "lineno": 317,
  "symbols_in_volume": [
   "sklearn.svm.SVC"
  ],
  "type": "class"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sparse_classification.CustomSVC.fit": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sparse_regression": {
  "lineno": 411,
  "symbols_in_volume": [
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.dok_matrix",
   "scipy.sparse.lil_matrix",
   "sklearn.datasets.make_regression",
   "sklearn.ensemble.AdaBoostRegressor",
   "sklearn.model_selection.train_test_split",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sparse_regression.CustomSVR": {
  "lineno": 414,
  "symbols_in_volume": [
   "sklearn.svm.SVR"
  ],
  "type": "class"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_sparse_regression.CustomSVR.fit": {
  "lineno": 417,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble.tests.test_weight_boosting.test_staged_predict": {
  "lineno": 161,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.ensemble.AdaBoostClassifier",
   "sklearn.ensemble.AdaBoostRegressor",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.ensemble.voting": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.ensemble.voting.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.ensemble.weight_boosting": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.ensemble.weight_boosting.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.exceptions.ChangedBehaviorWarning": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.exceptions.ConvergenceWarning": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.exceptions.DataConversionWarning": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.exceptions.DataDimensionalityWarning": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.exceptions.EfficiencyWarning": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.exceptions.FitFailedWarning": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.exceptions.NonBLASDotWarning": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.exceptions.NotFittedError": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.exceptions.PositiveSpectrumWarning": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.exceptions.SkipTestWarning": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.exceptions.UndefinedMetricWarning": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.experimental": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.experimental.enable_hist_gradient_boosting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.experimental.enable_iterative_imputer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.experimental.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.experimental.tests.test_enable_hist_gradient_boosting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.experimental.tests.test_enable_hist_gradient_boosting.test_imports_strategies": {
  "lineno": 8,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_run_python_script",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "sklearn.experimental.tests.test_enable_iterative_imputer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.experimental.tests.test_enable_iterative_imputer.test_imports_strategies": {
  "lineno": 8,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_run_python_script",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "sklearn.externals": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.externals._arff": {
  "lineno": null,
  "symbols_in_volume": [
   "re.UNICODE",
   "re.compile",
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.externals._arff.ArffDecoder": {
  "lineno": 663,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.externals._arff.ArffDecoder.__init__": {
  "lineno": 666,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff.ArffDecoder._decode": {
  "lineno": 768,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff.ArffDecoder._decode.stream": {
  "lineno": 860,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff.ArffDecoder._decode_attribute": {
  "lineno": 710,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff.ArffDecoder._decode_comment": {
  "lineno": 671,
  "symbols_in_volume": [
   "re.sub"
  ],
  "type": "function"
 },
 "sklearn.externals._arff.ArffDecoder._decode_relation": {
  "lineno": 687,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff.ArffDecoder.decode": {
  "lineno": 875,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff.ArffEncoder": {
  "lineno": 898,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.externals._arff.ArffEncoder._encode_attribute": {
  "lineno": 934,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff.ArffEncoder._encode_comment": {
  "lineno": 901,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff.ArffEncoder._encode_relation": {
  "lineno": 918,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff.ArffEncoder.encode": {
  "lineno": 968,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff.ArffEncoder.iter_encode": {
  "lineno": 978,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff.ArffException": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.externals._arff.ArffException.__init__": {
  "lineno": 323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff.ArffException.__str__": {
  "lineno": 326,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff.BadAttributeFormat": {
  "lineno": 333,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.externals._arff.BadAttributeName": {
  "lineno": 351,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.externals._arff.BadAttributeName.__init__": {
  "lineno": 355,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff.BadAttributeType": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.externals._arff.BadDataFormat": {
  "lineno": 337,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.externals._arff.BadDataFormat.__init__": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff.BadLayout": {
  "lineno": 392,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.externals._arff.BadLayout.__init__": {
  "lineno": 396,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff.BadNominalFormatting": {
  "lineno": 374,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.externals._arff.BadNominalFormatting.__init__": {
  "lineno": 376,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff.BadNominalValue": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.externals._arff.BadNominalValue.__init__": {
  "lineno": 367,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff.BadNumericalValue": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.externals._arff.BadObject": {
  "lineno": 402,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.externals._arff.BadObject.__init__": {
  "lineno": 405,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff.BadObject.__str__": {
  "lineno": 408,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff.BadRelationFormat": {
  "lineno": 329,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.externals._arff.BadStringValue": {
  "lineno": 388,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.externals._arff.COOData": {
  "lineno": 525,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.externals._arff.COOData.decode_rows": {
  "lineno": 526,
  "symbols_in_volume": [
   "itertools.izip"
  ],
  "type": "function"
 },
 "sklearn.externals._arff.COOData.encode_data": {
  "lineno": 552,
  "symbols_in_volume": [
   "itertools.izip"
  ],
  "type": "function"
 },
 "sklearn.externals._arff.Data": {
  "lineno": 521,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.externals._arff.DenseGeneratorData": {
  "lineno": 453,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.externals._arff.DenseGeneratorData._decode_values": {
  "lineno": 473,
  "symbols_in_volume": [
   "itertools.izip"
  ],
  "type": "function"
 },
 "sklearn.externals._arff.DenseGeneratorData.decode_rows": {
  "lineno": 457,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff.DenseGeneratorData.encode_data": {
  "lineno": 484,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff.EncodedNominalConversor": {
  "lineno": 424,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.externals._arff.EncodedNominalConversor.__call__": {
  "lineno": 429,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff.EncodedNominalConversor.__init__": {
  "lineno": 425,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff.LODData": {
  "lineno": 630,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.externals._arff.LODGeneratorData": {
  "lineno": 588,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.externals._arff.LODGeneratorData.decode_rows": {
  "lineno": 589,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff.LODGeneratorData.encode_data": {
  "lineno": 606,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff.NominalConversor": {
  "lineno": 436,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.externals._arff.NominalConversor.__call__": {
  "lineno": 441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff.NominalConversor.__init__": {
  "lineno": 437,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff._DataListMixin": {
  "lineno": 515,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.externals._arff._DataListMixin.decode_rows": {
  "lineno": 517,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff._build_re_values": {
  "lineno": 173,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "function"
 },
 "sklearn.externals._arff._escape_sub_callback": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff._get_data_object_for_decoding": {
  "lineno": 634,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff._get_data_object_for_encoding": {
  "lineno": 648,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff._parse_values": {
  "lineno": 266,
  "symbols_in_volume": [
   "csv.reader"
  ],
  "type": "function"
 },
 "sklearn.externals._arff._unescape_sub_callback": {
  "lineno": 414,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff._unquote": {
  "lineno": 256,
  "symbols_in_volume": [
   "re.sub"
  ],
  "type": "function"
 },
 "sklearn.externals._arff.dump": {
  "lineno": 1079,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff.dumps": {
  "lineno": 1097,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff.encode_string": {
  "lineno": 418,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff.load": {
  "lineno": 1043,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._arff.loads": {
  "lineno": 1061,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._lobpcg": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.externals._lobpcg._applyConstraints": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.dot",
   "scipy.linalg.cho_solve"
  ],
  "type": "function"
 },
 "sklearn.externals._lobpcg._as2d": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.externals._lobpcg._b_orthonormalize": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.matmul",
   "scipy.linalg.LinAlgError",
   "scipy.linalg.cholesky",
   "scipy.linalg.inv"
  ],
  "type": "function"
 },
 "sklearn.externals._lobpcg._get_indx": {
  "lineno": 132,
  "symbols_in_volume": [
   "numpy.argsort"
  ],
  "type": "function"
 },
 "sklearn.externals._lobpcg._makeOperator": {
  "lineno": 75,
  "symbols_in_volume": [
   "scipy.sparse.linalg.aslinearoperator"
  ],
  "type": "function"
 },
 "sklearn.externals._lobpcg._report_nonhermitian": {
  "lineno": 45,
  "symbols_in_volume": [
   "numpy.finfo",
   "scipy.linalg.norm"
  ],
  "type": "function"
 },
 "sklearn.externals._lobpcg._save": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.savetxt"
  ],
  "type": "function"
 },
 "sklearn.externals._lobpcg.bmat": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.bmat",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "sklearn.externals._lobpcg.lobpcg": {
  "lineno": 143,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.diag",
   "numpy.dot",
   "numpy.eye",
   "numpy.matmul",
   "numpy.newaxis",
   "numpy.ones",
   "numpy.sqrt",
   "numpy.sum",
   "numpy.where",
   "numpy.zeros",
   "scipy.linalg.LinAlgError",
   "scipy.linalg.cho_factor",
   "scipy.linalg.eigh"
  ],
  "type": "function"
 },
 "sklearn.externals._lobpcg.lobpcg._handle_gramA_gramB_verbosity": {
  "lineno": 564,
  "symbols_in_volume": [
   "numpy.savetxt"
  ],
  "type": "function"
 },
 "sklearn.externals._pep562": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.externals._pep562.Pep562": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.externals._pep562.Pep562.__dir__": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._pep562.Pep562.__getattr__": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._pep562.Pep562.__init__": {
  "lineno": 37,
  "symbols_in_volume": [
   "sys.modules"
  ],
  "type": "function"
 },
 "sklearn.externals._pilutil": {
  "lineno": null,
  "symbols_in_volume": [
   "PIL.Image",
   "PIL.Image.frombytes",
   "PIL.Image.fromstring"
  ],
  "type": "module"
 },
 "sklearn.externals._pilutil.bytescale": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.uint8"
  ],
  "type": "function"
 },
 "sklearn.externals._pilutil.fromimage": {
  "lineno": 265,
  "symbols_in_volume": [
   "PIL.Image.isImageType",
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.externals._pilutil.imread": {
  "lineno": 151,
  "symbols_in_volume": [
   "PIL.Image.open"
  ],
  "type": "function"
 },
 "sklearn.externals._pilutil.imresize": {
  "lineno": 451,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.floating",
   "numpy.issubdtype",
   "numpy.signedinteger"
  ],
  "type": "function"
 },
 "sklearn.externals._pilutil.imsave": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals._pilutil.toimage": {
  "lineno": 325,
  "symbols_in_volume": [
   "PIL.Image.frombytes",
   "numpy.amax",
   "numpy.amin",
   "numpy.arange",
   "numpy.asarray",
   "numpy.flatnonzero",
   "numpy.float32",
   "numpy.iscomplexobj",
   "numpy.newaxis",
   "numpy.ones",
   "numpy.ravel",
   "numpy.transpose",
   "numpy.uint32",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "sklearn.externals._scipy_linalg": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.externals._scipy_linalg.pinvh": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.conjugate",
   "numpy.dot",
   "numpy.finfo",
   "numpy.max",
   "scipy.linalg.decomp._asarray_validated",
   "scipy.linalg.decomp.eigh"
  ],
  "type": "function"
 },
 "sklearn.externals.conftest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.externals.conftest.pytest_ignore_collect": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals.joblib": {
  "lineno": null,
  "symbols_in_volume": [
   "sys",
   "warnings.warn"
  ],
  "type": "module"
 },
 "sklearn.externals.joblib.numpy_pickle": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.externals.setup": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.externals.setup.configuration": {
  "lineno": 4,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.Configuration"
  ],
  "type": "function"
 },
 "sklearn.externals.six": {
  "lineno": null,
  "symbols_in_volume": [
   "StringIO",
   "StringIO.StringIO",
   "builtins",
   "io.BytesIO",
   "io.StringIO",
   "operator.attrgetter",
   "operator.getitem",
   "operator.itemgetter",
   "operator.methodcaller",
   "sys.maxsize",
   "sys.modules",
   "sys.platform.startswith",
   "sys.version_info",
   "types.ClassType",
   "types.MethodType",
   "warnings.warn"
  ],
  "type": "module"
 },
 "sklearn.externals.six.Iterator": {
  "lineno": 417,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.externals.six.Iterator.next": {
  "lineno": 419,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals.six.Module_six_moves_urllib": {
  "lineno": 332,
  "symbols_in_volume": [
   "sys.modules",
   "types.ModuleType"
  ],
  "type": "class"
 },
 "sklearn.externals.six.Module_six_moves_urllib_error": {
  "lineno": 236,
  "symbols_in_volume": [
   "types.ModuleType"
  ],
  "type": "class"
 },
 "sklearn.externals.six.Module_six_moves_urllib_parse": {
  "lineno": 208,
  "symbols_in_volume": [
   "types.ModuleType"
  ],
  "type": "class"
 },
 "sklearn.externals.six.Module_six_moves_urllib_request": {
  "lineno": 253,
  "symbols_in_volume": [
   "types.ModuleType"
  ],
  "type": "class"
 },
 "sklearn.externals.six.Module_six_moves_urllib_response": {
  "lineno": 299,
  "symbols_in_volume": [
   "types.ModuleType"
  ],
  "type": "class"
 },
 "sklearn.externals.six.Module_six_moves_urllib_robotparser": {
  "lineno": 317,
  "symbols_in_volume": [
   "types.ModuleType"
  ],
  "type": "class"
 },
 "sklearn.externals.six.MovedAttribute": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.externals.six.MovedAttribute.__init__": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals.six.MovedAttribute._resolve": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals.six.MovedModule": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.externals.six.MovedModule.__init__": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals.six.MovedModule._resolve": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals.six.X": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.externals.six.X.__len__": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals.six._LazyDescr": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.externals.six._LazyDescr.__get__": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals.six._LazyDescr.__init__": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals.six._MovedItems": {
  "lineno": 140,
  "symbols_in_volume": [
   "types.ModuleType"
  ],
  "type": "class"
 },
 "sklearn.externals.six._add_doc": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals.six._import_module": {
  "lineno": 80,
  "symbols_in_volume": [
   "sys.modules"
  ],
  "type": "function"
 },
 "sklearn.externals.six.add_metaclass": {
  "lineno": 574,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals.six.add_metaclass.wrapper": {
  "lineno": 576,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals.six.add_move": {
  "lineno": 344,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals.six.advance_iterator": {
  "lineno": 391,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals.six.b": {
  "lineno": 471,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals.six.byte2int": {
  "lineno": 477,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals.six.callable": {
  "lineno": 399,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals.six.create_bound_method": {
  "lineno": 414,
  "symbols_in_volume": [
   "types.MethodType"
  ],
  "type": "function"
 },
 "sklearn.externals.six.exec_": {
  "lineno": 504,
  "symbols_in_volume": [
   "sys._getframe"
  ],
  "type": "function"
 },
 "sklearn.externals.six.get_unbound_function": {
  "lineno": 411,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals.six.indexbytes": {
  "lineno": 479,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals.six.int2byte": {
  "lineno": 459,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals.six.iterbytes": {
  "lineno": 481,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals.six.iteritems": {
  "lineno": 443,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals.six.iterkeys": {
  "lineno": 435,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals.six.iterlists": {
  "lineno": 447,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals.six.itervalues": {
  "lineno": 439,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals.six.print_": {
  "lineno": 522,
  "symbols_in_volume": [
   "sys.stdout"
  ],
  "type": "function"
 },
 "sklearn.externals.six.print_.write": {
  "lineno": 527,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals.six.remove_move": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals.six.reraise": {
  "lineno": 494,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals.six.u": {
  "lineno": 473,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.externals.six.with_metaclass": {
  "lineno": 570,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.feature_extraction._dict_vectorizer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.feature_extraction._dict_vectorizer.DictVectorizer": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.feature_extraction._dict_vectorizer.DictVectorizer.__init__": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction._dict_vectorizer.DictVectorizer._more_tags": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction._dict_vectorizer.DictVectorizer._transform": {
  "lineno": 135,
  "symbols_in_volume": [
   "array.array",
   "collections.abc.Mapping",
   "numpy.empty",
   "numpy.frombuffer",
   "numpy.int32",
   "numpy.intc",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction._dict_vectorizer.DictVectorizer.fit": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction._dict_vectorizer.DictVectorizer.fit_transform": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction._dict_vectorizer.DictVectorizer.get_feature_names": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction._dict_vectorizer.DictVectorizer.inverse_transform": {
  "lineno": 230,
  "symbols_in_volume": [
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction._dict_vectorizer.DictVectorizer.restrict": {
  "lineno": 317,
  "symbols_in_volume": [
   "numpy.where",
   "operator.itemgetter"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction._dict_vectorizer.DictVectorizer.transform": {
  "lineno": 271,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction._dict_vectorizer._tosequence": {
  "lineno": 16,
  "symbols_in_volume": [
   "collections.abc.Mapping"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction._hash": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.feature_extraction._hash.FeatureHasher": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.feature_extraction._hash.FeatureHasher.__init__": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction._hash.FeatureHasher._more_tags": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction._hash.FeatureHasher._validate_params": {
  "lineno": 97,
  "symbols_in_volume": [
   "numbers.Integral",
   "numpy.iinfo",
   "numpy.int32"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction._hash.FeatureHasher.fit": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction._hash.FeatureHasher.transform": {
  "lineno": 130,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction._hash._hashing_transform": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction._hash._iteritems": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction._stop_words": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.feature_extraction.dict_vectorizer": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.feature_extraction.dict_vectorizer.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.hashing": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.feature_extraction.hashing.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.image": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.feature_extraction.image.PatchExtractor": {
  "lineno": 482,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.feature_extraction.image.PatchExtractor.__init__": {
  "lineno": 521,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.image.PatchExtractor._more_tags": {
  "lineno": 581,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.image.PatchExtractor.fit": {
  "lineno": 526,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.image.PatchExtractor.transform": {
  "lineno": 539,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.reshape"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.image._compute_gradient_3d": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.abs"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.image._compute_n_patches": {
  "lineno": 204,
  "symbols_in_volume": [
   "numbers.Integral",
   "numbers.Real"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.image._extract_patches": {
  "lineno": 244,
  "symbols_in_volume": [
   "numbers.Number",
   "numpy.array",
   "numpy.lib.stride_tricks.as_strided"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.image._make_edges_3d": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.hstack",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.image._mask_edges_weights": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.in1d",
   "numpy.logical_and",
   "numpy.searchsorted",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.image._to_graph": {
  "lineno": 87,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.atleast_3d",
   "numpy.bool",
   "numpy.hstack",
   "numpy.int",
   "numpy.ndarray",
   "numpy.ones",
   "numpy.sum",
   "scipy.sparse.coo_matrix"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.image.extract_patches": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.image.extract_patches_2d": {
  "lineno": 343,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.image.grid_to_graph": {
  "lineno": 166,
  "symbols_in_volume": [
   "numpy.int",
   "scipy.sparse.coo_matrix"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.image.img_to_graph": {
  "lineno": 132,
  "symbols_in_volume": [
   "numpy.atleast_3d",
   "scipy.sparse.coo_matrix"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.image.reconstruct_from_patches_2d": {
  "lineno": 438,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.setup": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.feature_extraction.setup.configuration": {
  "lineno": 5,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.Configuration",
   "numpy.get_include",
   "os.name",
   "platform.python_implementation"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.stop_words": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.feature_extraction.stop_words.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.test_deterministic_vocabulary": {
  "lineno": 100,
  "symbols_in_volume": [
   "random.Random",
   "sklearn.feature_extraction.DictVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.test_dictvectorizer": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.int16",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize",
   "scipy.sparse.issparse",
   "sklearn.feature_extraction.DictVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.test_feature_selection": {
  "lineno": 46,
  "symbols_in_volume": [
   "sklearn.feature_extraction.DictVectorizer",
   "sklearn.feature_selection.SelectKBest",
   "sklearn.feature_selection.chi2"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.test_one_of_k": {
  "lineno": 63,
  "symbols_in_volume": [
   "sklearn.feature_extraction.DictVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_dict_vectorizer.test_unseen_or_no_features": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "numpy.zeros",
   "sklearn.feature_extraction.DictVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.utils._testing.fails_if_pypy"
  ],
  "type": "module"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_feature_hasher_dicts": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "sklearn.feature_extraction.FeatureHasher"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_feature_hasher_pairs": {
  "lineno": 73,
  "symbols_in_volume": [
   "numpy.abs",
   "sklearn.feature_extraction.FeatureHasher"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_feature_hasher_pairs_with_string_values": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.testing.assert_array_equal",
   "sklearn.feature_extraction.FeatureHasher"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_feature_hasher_strings": {
  "lineno": 25,
  "symbols_in_volume": [
   "sklearn.feature_extraction.FeatureHasher"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_hash_collisions": {
  "lineno": 160,
  "symbols_in_volume": [
   "sklearn.feature_extraction.FeatureHasher"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_hash_empty_input": {
  "lineno": 104,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "numpy.zeros",
   "sklearn.feature_extraction.FeatureHasher"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_hasher_alternate_sign": {
  "lineno": 147,
  "symbols_in_volume": [
   "sklearn.feature_extraction.FeatureHasher",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_hasher_invalid_input": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.uint16",
   "pytest.raises",
   "sklearn.feature_extraction.FeatureHasher"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_hasher_set_params": {
  "lineno": 133,
  "symbols_in_volume": [
   "numpy.inf",
   "pytest.raises",
   "sklearn.feature_extraction.FeatureHasher"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_hasher_zeros": {
  "lineno": 141,
  "symbols_in_volume": [
   "sklearn.feature_extraction.FeatureHasher"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_feature_hasher.test_hashing_transform_seed": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "pytest.raises",
   "sklearn.feature_extraction._hashing_fast.transform"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.feature_extraction.tests.test_image._downsampled_face": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.float32",
   "scipy.face",
   "scipy.misc.face"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image._make_images": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image._orange_face": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_connect_regions": {
  "lineno": 59,
  "symbols_in_volume": [
   "scipy.face",
   "scipy.misc.face",
   "scipy.ndimage.label",
   "scipy.sparse.csgraph.connected_components",
   "sklearn.feature_extraction.image.img_to_graph",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_connect_regions_with_grid": {
  "lineno": 75,
  "symbols_in_volume": [
   "scipy.face",
   "scipy.misc.face",
   "scipy.ndimage.label",
   "scipy.sparse.csgraph.connected_components",
   "sklearn.feature_extraction.image.grid_to_graph",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_extract_patch_same_size_image": {
  "lineno": 183,
  "symbols_in_volume": [
   "sklearn.feature_extraction.image.extract_patches_2d"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_extract_patches_all": {
  "lineno": 136,
  "symbols_in_volume": [
   "sklearn.feature_extraction.image.extract_patches_2d"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_extract_patches_all_color": {
  "lineno": 145,
  "symbols_in_volume": [
   "sklearn.feature_extraction.image.extract_patches_2d"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_extract_patches_all_rect": {
  "lineno": 154,
  "symbols_in_volume": [
   "sklearn.feature_extraction.image.extract_patches_2d"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_extract_patches_deprecated": {
  "lineno": 340,
  "symbols_in_volume": [
   "pytest.warns",
   "sklearn.feature_extraction.image.extract_patches"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_extract_patches_less_than_max_patches": {
  "lineno": 191,
  "symbols_in_volume": [
   "sklearn.feature_extraction.image.extract_patches_2d"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_extract_patches_max_patches": {
  "lineno": 165,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.feature_extraction.image.extract_patches_2d"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_extract_patches_square": {
  "lineno": 319,
  "symbols_in_volume": [
   "sklearn.feature_extraction.image._extract_patches"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_extract_patches_strided": {
  "lineno": 274,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.prod",
   "sklearn.feature_extraction.image._extract_patches"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_grid_to_graph": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.float64",
   "numpy.int",
   "numpy.int16",
   "numpy.ndarray",
   "numpy.ones",
   "numpy.zeros",
   "scipy.sparse.csgraph.connected_components",
   "sklearn.feature_extraction.image.grid_to_graph"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_img_to_graph": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.mgrid",
   "numpy.testing.assert_array_equal",
   "sklearn.feature_extraction.image.img_to_graph"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_patch_extractor_all_patches": {
  "lineno": 254,
  "symbols_in_volume": [
   "sklearn.feature_extraction.image.PatchExtractor"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_patch_extractor_color": {
  "lineno": 264,
  "symbols_in_volume": [
   "sklearn.feature_extraction.image.PatchExtractor"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_patch_extractor_fit": {
  "lineno": 220,
  "symbols_in_volume": [
   "sklearn.feature_extraction.image.PatchExtractor"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_patch_extractor_max_patches": {
  "lineno": 226,
  "symbols_in_volume": [
   "sklearn.feature_extraction.image.PatchExtractor"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_patch_extractor_max_patches_default": {
  "lineno": 247,
  "symbols_in_volume": [
   "sklearn.feature_extraction.image.PatchExtractor"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_reconstruct_patches_perfect": {
  "lineno": 202,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "sklearn.feature_extraction.image.extract_patches_2d",
   "sklearn.feature_extraction.image.reconstruct_from_patches_2d"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_reconstruct_patches_perfect_color": {
  "lineno": 211,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "sklearn.feature_extraction.image.extract_patches_2d",
   "sklearn.feature_extraction.image.reconstruct_from_patches_2d"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_image.test_width_patch": {
  "lineno": 330,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "sklearn.feature_extraction.image.extract_patches_2d"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.feature_extraction.tests.test_text._check_stop_words_consistency": {
  "lineno": 1174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.lazy_analyze": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.split_tokenize": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.strip_eacute": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_callable_analyzer_change_behavior": {
  "lineno": 1285,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.param",
   "pytest.raises",
   "pytest.warns",
   "sklearn.exceptions.ChangedBehaviorWarning",
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.feature_extraction.text.HashingVectorizer",
   "sklearn.feature_extraction.text.TfidfVectorizer",
   "sklearn.utils._testing.fails_if_pypy"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_callable_analyzer_error": {
  "lineno": 1265,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pytest.xfail",
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.feature_extraction.text.HashingVectorizer",
   "sklearn.feature_extraction.text.TfidfVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_callable_analyzer_reraise_error": {
  "lineno": 1305,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pytest.xfail",
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.feature_extraction.text.HashingVectorizer",
   "sklearn.feature_extraction.text.TfidfVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_callable_analyzer_reraise_error.analyzer": {
  "lineno": 1313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_char_ngram_analyzer": {
  "lineno": 206,
  "symbols_in_volume": [
   "io.StringIO",
   "sklearn.feature_extraction.text.CountVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_char_wb_ngram_analyzer": {
  "lineno": 230,
  "symbols_in_volume": [
   "io.StringIO",
   "sklearn.feature_extraction.text.CountVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_count_binary_occurrences": {
  "lineno": 713,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.testing.assert_array_equal",
   "sklearn.feature_extraction.text.CountVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_count_vectorizer_max_features": {
  "lineno": 641,
  "symbols_in_volume": [
   "numpy.argmax",
   "sklearn.feature_extraction.text.CountVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_count_vectorizer_pipeline_grid_selection": {
  "lineno": 781,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.model_selection.train_test_split",
   "sklearn.pipeline.Pipeline",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_custom_vocabulary": {
  "lineno": 267,
  "symbols_in_volume": [
   "collections.abc.Mapping",
   "collections.defaultdict",
   "functools.partial",
   "sklearn.feature_extraction.text.CountVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_custom_vocabulary_gap_index": {
  "lineno": 307,
  "symbols_in_volume": [
   "sklearn.feature_extraction.text.CountVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_custom_vocabulary_pipeline": {
  "lineno": 288,
  "symbols_in_volume": [
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.feature_extraction.text.TfidfTransformer",
   "sklearn.pipeline.Pipeline"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_custom_vocabulary_repeated_indices": {
  "lineno": 299,
  "symbols_in_volume": [
   "sklearn.feature_extraction.text.CountVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_empty_vocabulary": {
  "lineno": 330,
  "symbols_in_volume": [
   "sklearn.feature_extraction.text.CountVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_sort_features_64bit_sparse_indices": {
  "lineno": 1207,
  "symbols_in_volume": [
   "numpy.int64",
   "scipy.sparse.csr_matrix",
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.utils._testing.skip_if_32bit"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_stop_words": {
  "lineno": 315,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.feature_extraction.text.ENGLISH_STOP_WORDS"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_vocab_dicts_when_pickling": {
  "lineno": 968,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.RandomState",
   "pickle.dumps",
   "pickle.loads",
   "sklearn.feature_extraction.text.CountVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_countvectorizer_vocab_sets_when_pickling": {
  "lineno": 953,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.RandomState",
   "pickle.dumps",
   "pickle.loads",
   "sklearn.feature_extraction.text.CountVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_feature_names": {
  "lineno": 592,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "pytest.raises",
   "sklearn.feature_extraction.text.CountVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_fit_countvectorizer_twice": {
  "lineno": 347,
  "symbols_in_volume": [
   "sklearn.feature_extraction.text.CountVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_hashed_binary_occurrences": {
  "lineno": 736,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.max",
   "sklearn.feature_extraction.text.HashingVectorizer",
   "sklearn.utils._testing.fails_if_pypy"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_hashing_vectorizer": {
  "lineno": 553,
  "symbols_in_volume": [
   "numpy.linalg.norm",
   "numpy.max",
   "numpy.min",
   "sklearn.feature_extraction.text.HashingVectorizer",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.fails_if_pypy"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_hashingvectorizer_nan_in_docs": {
  "lineno": 1054,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_raise_message",
   "sklearn.utils._testing.fails_if_pypy"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_hashingvectorizer_nan_in_docs.func": {
  "lineno": 1061,
  "symbols_in_volume": [
   "numpy.nan",
   "sklearn.feature_extraction.text.HashingVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_non_unique_vocab": {
  "lineno": 1047,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.feature_extraction.text.CountVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_pickling_built_processors": {
  "lineno": 934,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "pytest.mark.parametrize",
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.feature_extraction.text.CountVectorizer.build_analyzer",
   "sklearn.feature_extraction.text.CountVectorizer.build_preprocessor",
   "sklearn.feature_extraction.text.CountVectorizer.build_tokenizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_pickling_transformer": {
  "lineno": 1006,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "pickle.dumps",
   "pickle.loads",
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.feature_extraction.text.TfidfTransformer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_pickling_vectorizer": {
  "lineno": 905,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "pickle.dumps",
   "pickle.loads",
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.feature_extraction.text.HashingVectorizer",
   "sklearn.feature_extraction.text.TfidfVectorizer",
   "sklearn.feature_extraction.text.strip_tags",
   "sklearn.utils.IS_PYPY"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_stop_word_validation_custom_preprocessor": {
  "lineno": 1236,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "re.compile",
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.feature_extraction.text.HashingVectorizer",
   "sklearn.feature_extraction.text.TfidfVectorizer",
   "sklearn.utils._testing.fails_if_pypy"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_stop_word_validation_custom_preprocessor.CustomEstimator": {
  "lineno": 1252,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.feature_extraction.tests.test_text.test_stop_word_validation_custom_preprocessor.CustomEstimator.build_preprocessor": {
  "lineno": 1253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_stop_words_removal": {
  "lineno": 984,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.feature_extraction.text.TfidfVectorizer",
   "sklearn.feature_extraction.text.strip_tags"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_strip_accents": {
  "lineno": 81,
  "symbols_in_volume": [
   "sklearn.feature_extraction.text.strip_accents_unicode"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_sublinear_tf": {
  "lineno": 404,
  "symbols_in_volume": [
   "sklearn.feature_extraction.text.TfidfTransformer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tf_idf_smoothing": {
  "lineno": 354,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "sklearn.feature_extraction.text.TfidfTransformer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidf_no_smoothing": {
  "lineno": 374,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_almost_equal",
   "sklearn.feature_extraction.text.TfidfTransformer",
   "sklearn.utils._testing.SkipTest",
   "sklearn.utils._testing.assert_warns_message",
   "sklearn.utils._testing.clean_warning_registry",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidf_transformer_sparse": {
  "lineno": 1113,
  "symbols_in_volume": [
   "numpy.float64",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.rand",
   "sklearn.feature_extraction.text.TfidfTransformer",
   "sklearn.utils._testing.assert_allclose_dense_sparse"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidf_transformer_type": {
  "lineno": 1106,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "pytest.mark.parametrize",
   "scipy.sparse.rand",
   "sklearn.feature_extraction.text.TfidfTransformer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidf_vectorizer_deprecationwarning": {
  "lineno": 542,
  "symbols_in_volume": [
   "pytest.warns",
   "sklearn.feature_extraction.text.TfidfVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidf_vectorizer_setter": {
  "lineno": 1027,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "sklearn.feature_extraction.text.TfidfVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidf_vectorizer_setters": {
  "lineno": 528,
  "symbols_in_volume": [
   "sklearn.feature_extraction.text.TfidfVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidf_vectorizer_type": {
  "lineno": 1124,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "pytest.mark.parametrize",
   "pytest.warns",
   "sklearn.feature_extraction.text.TfidfVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidf_vectorizer_with_fixed_vocabulary": {
  "lineno": 895,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "sklearn.feature_extraction.text.TfidfVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidfvectorizer_binary": {
  "lineno": 1068,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "sklearn.feature_extraction.text.TfidfVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidfvectorizer_export_idf": {
  "lineno": 1079,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "sklearn.feature_extraction.text.TfidfVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_tfidfvectorizer_invalid_idf_attr": {
  "lineno": 1037,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.feature_extraction.text.TfidfVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_to_ascii": {
  "lineno": 117,
  "symbols_in_volume": [
   "sklearn.feature_extraction.text.strip_accents_ascii"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_transformer_idf_setter": {
  "lineno": 1017,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.feature_extraction.text.TfidfTransformer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_unicode_decode_error": {
  "lineno": 188,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.feature_extraction.text.CountVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_unused_parameters_warn": {
  "lineno": 1326,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.warns",
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.feature_extraction.text.HashingVectorizer",
   "sklearn.feature_extraction.text.TfidfVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer": {
  "lineno": 415,
  "symbols_in_volume": [
   "numpy.sum",
   "numpy.testing.assert_array_almost_equal",
   "pytest.raises",
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.feature_extraction.text.TfidfTransformer",
   "sklearn.feature_extraction.text.TfidfVectorizer",
   "sklearn.feature_extraction.text.strip_accents_ascii"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_inverse_transform": {
  "lineno": 761,
  "symbols_in_volume": [
   "numpy.sort",
   "numpy.testing.assert_array_equal",
   "numpy.unique",
   "pytest.mark.parametrize",
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.feature_extraction.text.TfidfVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_max_df": {
  "lineno": 667,
  "symbols_in_volume": [
   "sklearn.feature_extraction.text.CountVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_max_features": {
  "lineno": 628,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.feature_extraction.text.TfidfVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_min_df": {
  "lineno": 690,
  "symbols_in_volume": [
   "sklearn.feature_extraction.text.CountVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_pipeline_cross_validation": {
  "lineno": 856,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "sklearn.feature_extraction.text.TfidfVectorizer",
   "sklearn.model_selection.cross_val_score",
   "sklearn.pipeline.Pipeline",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_pipeline_grid_selection": {
  "lineno": 817,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "sklearn.feature_extraction.text.TfidfVectorizer",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.model_selection.train_test_split",
   "sklearn.pipeline.Pipeline",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_stop_words_inconsistent": {
  "lineno": 1182,
  "symbols_in_volume": [
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.feature_extraction.text.HashingVectorizer",
   "sklearn.feature_extraction.text.TfidfVectorizer",
   "sklearn.utils._testing.assert_no_warnings",
   "sklearn.utils._testing.assert_warns_message",
   "sklearn.utils._testing.fails_if_pypy"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_string_object_as_input": {
  "lineno": 1093,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.feature_extraction.text.HashingVectorizer",
   "sklearn.feature_extraction.text.TfidfVectorizer",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_unicode": {
  "lineno": 870,
  "symbols_in_volume": [
   "numpy.sort",
   "numpy.testing.assert_array_equal",
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.feature_extraction.text.HashingVectorizer",
   "sklearn.utils._testing.fails_if_pypy"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizer_vocab_clone": {
  "lineno": 1085,
  "symbols_in_volume": [
   "sklearn.base.clone",
   "sklearn.feature_extraction.text.TfidfVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizermixin_is_deprecated": {
  "lineno": 1366,
  "symbols_in_volume": [
   "pytest.warns"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizermixin_is_deprecated.MyVectorizer": {
  "lineno": 1367,
  "symbols_in_volume": [
   "sklearn.feature_extraction.text.VectorizerMixin"
  ],
  "type": "class"
 },
 "sklearn.feature_extraction.tests.test_text.test_vectorizers_invalid_ngram_range": {
  "lineno": 1149,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.xfail",
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.feature_extraction.text.HashingVectorizer",
   "sklearn.feature_extraction.text.TfidfVectorizer",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_word_analyzer_unigrams": {
  "lineno": 138,
  "symbols_in_volume": [
   "io.StringIO",
   "pytest.mark.parametrize",
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.feature_extraction.text.HashingVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_word_analyzer_unigrams_and_bigrams": {
  "lineno": 176,
  "symbols_in_volume": [
   "sklearn.feature_extraction.text.CountVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.test_word_ngram_analyzer": {
  "lineno": 248,
  "symbols_in_volume": [
   "io.StringIO",
   "sklearn.feature_extraction.text.CountVectorizer"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.tests.test_text.uppercase": {
  "lineno": 65,
  "symbols_in_volume": [
   "sklearn.feature_extraction.text.strip_accents_unicode"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.text": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.feature_extraction.text.CountVectorizer": {
  "lineno": 828,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.feature_extraction.text.CountVectorizer.__init__": {
  "lineno": 1025,
  "symbols_in_volume": [
   "numbers.Integral",
   "numpy.int64"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.text.CountVectorizer._count_vocab": {
  "lineno": 1113,
  "symbols_in_volume": [
   "collections.defaultdict",
   "numpy.asarray",
   "numpy.frombuffer",
   "numpy.iinfo",
   "numpy.int32",
   "numpy.int64",
   "numpy.intc",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.text.CountVectorizer._limit_features": {
  "lineno": 1072,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.cumsum",
   "numpy.ones",
   "numpy.where",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.text.CountVectorizer._more_tags": {
  "lineno": 1320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.text.CountVectorizer._sort_features": {
  "lineno": 1058,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.text.CountVectorizer.fit": {
  "lineno": 1173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.text.CountVectorizer.fit_transform": {
  "lineno": 1189,
  "symbols_in_volume": [
   "numbers.Integral"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.text.CountVectorizer.get_feature_names": {
  "lineno": 1306,
  "symbols_in_volume": [
   "operator.itemgetter"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.text.CountVectorizer.inverse_transform": {
  "lineno": 1275,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.array",
   "numpy.asmatrix",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.text.CountVectorizer.transform": {
  "lineno": 1247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.text.HashingVectorizer": {
  "lineno": 537,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.feature_extraction.text.HashingVectorizer.__init__": {
  "lineno": 704,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.text.HashingVectorizer._get_hasher": {
  "lineno": 811,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.text.HashingVectorizer._more_tags": {
  "lineno": 816,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.text.HashingVectorizer.fit": {
  "lineno": 741,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.text.HashingVectorizer.fit_transform": {
  "lineno": 791,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.text.HashingVectorizer.partial_fit": {
  "lineno": 728,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.text.HashingVectorizer.transform": {
  "lineno": 761,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfTransformer": {
  "lineno": 1329,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.feature_extraction.text.TfidfTransformer.__init__": {
  "lineno": 1435,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfTransformer._more_tags": {
  "lineno": 1533,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfTransformer.fit": {
  "lineno": 1442,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.log",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.diags",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfTransformer.idf_": {
  "lineno": 1526,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.float64",
   "scipy.sparse.spdiags"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfTransformer.transform": {
  "lineno": 1474,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.log",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer": {
  "lineno": 1537,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.__init__": {
  "lineno": 1741,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer._check_params": {
  "lineno": 1812,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer._more_tags": {
  "lineno": 1901,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.fit": {
  "lineno": 1819,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.fit_transform": {
  "lineno": 1840,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.idf_": {
  "lineno": 1802,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.norm": {
  "lineno": 1770,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.smooth_idf": {
  "lineno": 1786,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.sublinear_tf": {
  "lineno": 1794,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.transform": {
  "lineno": 1865,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.text.TfidfVectorizer.use_idf": {
  "lineno": 1778,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.text.VectorizerMixin": {
  "lineno": 531,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.feature_extraction.text._VectorizerMixin": {
  "lineno": 187,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "class"
 },
 "sklearn.feature_extraction.text._VectorizerMixin._char_ngrams": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.text._VectorizerMixin._char_wb_ngrams": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.text._VectorizerMixin._check_stop_words_consistency": {
  "lineno": 356,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.text._VectorizerMixin._check_vocabulary": {
  "lineno": 485,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.text._VectorizerMixin._validate_custom_analyzer": {
  "lineno": 393,
  "symbols_in_volume": [
   "tempfile.NamedTemporaryFile",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.text._VectorizerMixin._validate_params": {
  "lineno": 495,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.text._VectorizerMixin._validate_vocabulary": {
  "lineno": 457,
  "symbols_in_volume": [
   "collections.abc.Mapping"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.text._VectorizerMixin._warn_for_unused_params": {
  "lineno": 504,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.text._VectorizerMixin._word_ngrams": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.text._VectorizerMixin.build_analyzer": {
  "lineno": 415,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.text._VectorizerMixin.build_preprocessor": {
  "lineno": 305,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.text._VectorizerMixin.build_tokenizer": {
  "lineno": 333,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.text._VectorizerMixin.decode": {
  "lineno": 192,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.text._VectorizerMixin.get_stop_words": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.text._analyze": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.text._check_stop_list": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.text._document_frequency": {
  "lineno": 820,
  "symbols_in_volume": [
   "numpy.bincount",
   "numpy.diff",
   "scipy.sparse.isspmatrix_csr"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.text._make_int_array": {
  "lineno": 1324,
  "symbols_in_volume": [
   "array.array"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.text._preprocess": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_extraction.text.strip_accents_ascii": {
  "lineno": 142,
  "symbols_in_volume": [
   "unicodedata.normalize"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.text.strip_accents_unicode": {
  "lineno": 114,
  "symbols_in_volume": [
   "unicodedata.combining",
   "unicodedata.normalize"
  ],
  "type": "function"
 },
 "sklearn.feature_extraction.text.strip_tags": {
  "lineno": 162,
  "symbols_in_volume": [
   "re.UNICODE",
   "re.compile"
  ],
  "type": "function"
 },
 "sklearn.feature_selection": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.feature_selection._base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.feature_selection._base.SelectorMixin": {
  "lineno": 17,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.feature_selection._base.SelectorMixin._get_support_mask": {
  "lineno": 49,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.feature_selection._base.SelectorMixin.get_support": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.where"
  ],
  "type": "function"
 },
 "sklearn.feature_selection._base.SelectorMixin.inverse_transform": {
  "lineno": 87,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.cumsum",
   "numpy.diff",
   "numpy.zeros",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.feature_selection._base.SelectorMixin.transform": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.empty",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.feature_selection._from_model": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.feature_selection._from_model.SelectFromModel": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.feature_selection._from_model.SelectFromModel.__init__": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._from_model.SelectFromModel._get_support_mask": {
  "lineno": 168,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.ones_like",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "sklearn.feature_selection._from_model.SelectFromModel._more_tags": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._from_model.SelectFromModel.fit": {
  "lineno": 190,
  "symbols_in_volume": [
   "numbers.Integral"
  ],
  "type": "function"
 },
 "sklearn.feature_selection._from_model.SelectFromModel.partial_fit": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._from_model.SelectFromModel.threshold_": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._from_model._calculate_threshold": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.median"
  ],
  "type": "function"
 },
 "sklearn.feature_selection._from_model._get_feature_importances": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.linalg.norm"
  ],
  "type": "function"
 },
 "sklearn.feature_selection._mutual_info": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.feature_selection._mutual_info._compute_mi": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._mutual_info._compute_mi_cc": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.hstack",
   "numpy.mean",
   "numpy.nextafter",
   "scipy.special.digamma"
  ],
  "type": "function"
 },
 "sklearn.feature_selection._mutual_info._compute_mi_cd": {
  "lineno": 78,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "numpy.mean",
   "numpy.nextafter",
   "numpy.sum",
   "numpy.unique",
   "scipy.special.digamma"
  ],
  "type": "function"
 },
 "sklearn.feature_selection._mutual_info._estimate_mi": {
  "lineno": 195,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.any",
   "numpy.array",
   "numpy.empty",
   "numpy.maximum",
   "numpy.mean",
   "numpy.sum",
   "numpy.zeros",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.feature_selection._mutual_info._iterate_columns": {
  "lineno": 165,
  "symbols_in_volume": [
   "numpy.zeros",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.feature_selection._mutual_info.mutual_info_classif": {
  "lineno": 374,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._mutual_info.mutual_info_regression": {
  "lineno": 295,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._rfe": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.feature_selection._rfe.RFE": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.feature_selection._rfe.RFE.__init__": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._rfe.RFE._estimator_type": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._rfe.RFE._fit": {
  "lineno": 151,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.argsort",
   "numpy.bool",
   "numpy.int",
   "numpy.logical_not",
   "numpy.ones",
   "numpy.ravel",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.feature_selection._rfe.RFE._get_support_mask": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._rfe.RFE._more_tags": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._rfe.RFE.classes_": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._rfe.RFE.decision_function": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._rfe.RFE.fit": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._rfe.RFE.predict": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._rfe.RFE.predict_log_proba": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._rfe.RFE.predict_proba": {
  "lineno": 296,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._rfe.RFE.score": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._rfe.RFECV": {
  "lineno": 340,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.feature_selection._rfe.RFECV.__init__": {
  "lineno": 463,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._rfe.RFECV.fit": {
  "lineno": 473,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed",
   "joblib.effective_n_jobs",
   "numpy.argmax",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.feature_selection._rfe._rfe_single_fit": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.feature_selection._univariate_selection.GenericUnivariateSelect": {
  "lineno": 730,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.feature_selection._univariate_selection.GenericUnivariateSelect.__init__": {
  "lineno": 788,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.GenericUnivariateSelect._check_params": {
  "lineno": 804,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.GenericUnivariateSelect._get_support_mask": {
  "lineno": 813,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.GenericUnivariateSelect._make_selector": {
  "lineno": 793,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.SelectFdr": {
  "lineno": 595,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.feature_selection._univariate_selection.SelectFdr.__init__": {
  "lineno": 651,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.SelectFdr._get_support_mask": {
  "lineno": 655,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.sort",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.SelectFpr": {
  "lineno": 533,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.feature_selection._univariate_selection.SelectFpr.__init__": {
  "lineno": 585,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.SelectFpr._get_support_mask": {
  "lineno": 589,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.SelectFwe": {
  "lineno": 667,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.feature_selection._univariate_selection.SelectFwe.__init__": {
  "lineno": 714,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.SelectFwe._get_support_mask": {
  "lineno": 718,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.SelectKBest": {
  "lineno": 451,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.feature_selection._univariate_selection.SelectKBest.__init__": {
  "lineno": 506,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.SelectKBest._check_params": {
  "lineno": 510,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.SelectKBest._get_support_mask": {
  "lineno": 516,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.ones",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.SelectPercentile": {
  "lineno": 368,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.feature_selection._univariate_selection.SelectPercentile.__init__": {
  "lineno": 422,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.SelectPercentile._check_params": {
  "lineno": 426,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.SelectPercentile._get_support_mask": {
  "lineno": 431,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.ones",
   "numpy.percentile",
   "numpy.where",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection._BaseFilter": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.feature_selection._univariate_selection._BaseFilter.__init__": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection._BaseFilter._check_params": {
  "lineno": 361,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection._BaseFilter.fit": {
  "lineno": 325,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection._chisquare": {
  "lineno": 153,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.errstate",
   "numpy.float64",
   "scipy.special.chdtrc"
  ],
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection._clean_nans": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.chi2": {
  "lineno": 172,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.append",
   "numpy.dot",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.f_classif": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.f_oneway": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.nonzero",
   "numpy.sum",
   "numpy.where",
   "scipy.special.fdtrc",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.feature_selection._univariate_selection.f_regression": {
  "lineno": 231,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.linalg.norm",
   "numpy.mean",
   "numpy.sqrt",
   "scipy.sparse.issparse",
   "scipy.stats.f.sf"
  ],
  "type": "function"
 },
 "sklearn.feature_selection._variance_threshold": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.feature_selection._variance_threshold.VarianceThreshold": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.feature_selection._variance_threshold.VarianceThreshold.__init__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._variance_threshold.VarianceThreshold._get_support_mask": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._variance_threshold.VarianceThreshold._more_tags": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection._variance_threshold.VarianceThreshold.fit": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.float64",
   "numpy.isfinite",
   "numpy.nanmin",
   "numpy.nanvar",
   "numpy.ptp"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.base": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.feature_selection.base.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection.from_model": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.feature_selection.from_model.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection.mutual_info": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.feature_selection.mutual_info.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection.rfe": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.feature_selection.rfe.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.feature_selection.tests.test_base": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array"
  ],
  "type": "module"
 },
 "sklearn.feature_selection.tests.test_base.StepSelector": {
  "lineno": 12,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.feature_selection._base.SelectorMixin"
  ],
  "type": "class"
 },
 "sklearn.feature_selection.tests.test_base.StepSelector.__init__": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_base.StepSelector._get_support_mask": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_base.StepSelector.fit": {
  "lineno": 17,
  "symbols_in_volume": [
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_base.test_get_support": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_base.test_inverse_transform_dense": {
  "lineno": 78,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.testing.assert_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_base.test_inverse_transform_sparse": {
  "lineno": 98,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.testing.assert_array_equal",
   "pytest.raises",
   "scipy.sparse",
   "scipy.sparse.csc_matrix"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_base.test_transform_dense": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.testing.assert_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_base.test_transform_sparse": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.testing.assert_array_equal",
   "pytest.raises",
   "scipy.sparse",
   "scipy.sparse.csc_matrix"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_chi2": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.feature_selection.tests.test_chi2.mkchi2": {
  "lineno": 28,
  "symbols_in_volume": [
   "sklearn.feature_selection.SelectKBest",
   "sklearn.feature_selection.chi2"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_chi2.test_chi2": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "scipy.sparse.csr_matrix",
   "sklearn.feature_selection.chi2",
   "sklearn.feature_selection.chi2.get_support",
   "sklearn.feature_selection.chi2.transform",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_chi2.test_chi2_coo": {
  "lineno": 56,
  "symbols_in_volume": [
   "scipy.sparse.coo_matrix"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_chi2.test_chi2_negative": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "scipy.sparse.csr_matrix",
   "sklearn.feature_selection.chi2"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_chi2.test_chi2_unused_feature": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.nan",
   "sklearn.feature_selection.chi2",
   "sklearn.utils._testing.assert_array_equal",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_chi2.test_chisquare": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.feature_selection._univariate_selection._chisquare",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.feature_selection.tests.test_feature_select.assert_best_scores_kept": {
  "lineno": 272,
  "symbols_in_volume": [
   "numpy.sort",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_boundary_case_ch2": {
  "lineno": 374,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.feature_selection.SelectFdr",
   "sklearn.feature_selection.SelectFpr",
   "sklearn.feature_selection.SelectFwe",
   "sklearn.feature_selection.SelectKBest",
   "sklearn.feature_selection.SelectPercentile",
   "sklearn.feature_selection.chi2",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_f_classif": {
  "lineno": 54,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "sklearn.datasets.make_classification",
   "sklearn.feature_selection.f_classif",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_f_classif_constant_feature": {
  "lineno": 585,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification",
   "sklearn.feature_selection.f_classif",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_f_classif_multi_class": {
  "lineno": 130,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification",
   "sklearn.feature_selection.f_classif"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_f_oneway_ints": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float",
   "numpy.random.RandomState",
   "sklearn.feature_selection.f_oneway",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_f_oneway_vs_scipy_stats": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.random.RandomState",
   "scipy.stats.f_oneway",
   "sklearn.feature_selection.f_oneway"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_f_regression": {
  "lineno": 74,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "sklearn.datasets.make_regression",
   "sklearn.feature_selection.f_regression",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_f_regression_center": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ones",
   "sklearn.feature_selection.f_regression",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_f_regression_input_dtype": {
  "lineno": 100,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float",
   "numpy.int",
   "numpy.random.RandomState",
   "sklearn.feature_selection.f_regression",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_invalid_k": {
  "lineno": 571,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.feature_selection.GenericUnivariateSelect",
   "sklearn.feature_selection.SelectKBest"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_invalid_percentile": {
  "lineno": 321,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.datasets.make_regression",
   "sklearn.feature_selection.GenericUnivariateSelect",
   "sklearn.feature_selection.SelectPercentile"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_mutual_info_classif": {
  "lineno": 614,
  "symbols_in_volume": [
   "numpy.zeros",
   "sklearn.datasets.make_classification",
   "sklearn.feature_selection.GenericUnivariateSelect",
   "sklearn.feature_selection.SelectKBest",
   "sklearn.feature_selection.SelectPercentile",
   "sklearn.feature_selection.mutual_info_classif",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_mutual_info_regression": {
  "lineno": 644,
  "symbols_in_volume": [
   "numpy.zeros",
   "sklearn.datasets.make_regression",
   "sklearn.feature_selection.GenericUnivariateSelect",
   "sklearn.feature_selection.SelectKBest",
   "sklearn.feature_selection.SelectPercentile",
   "sklearn.feature_selection.mutual_info_regression",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_nans": {
  "lineno": 548,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.feature_selection.SelectKBest",
   "sklearn.feature_selection.SelectPercentile",
   "sklearn.feature_selection.f_classif",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_no_feature_selected": {
  "lineno": 593,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.zeros",
   "sklearn.feature_selection.SelectFdr",
   "sklearn.feature_selection.SelectFpr",
   "sklearn.feature_selection.SelectFwe",
   "sklearn.feature_selection.SelectKBest",
   "sklearn.feature_selection.SelectPercentile",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_score_func_error": {
  "lineno": 561,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.feature_selection.GenericUnivariateSelect",
   "sklearn.feature_selection.SelectFdr",
   "sklearn.feature_selection.SelectFpr",
   "sklearn.feature_selection.SelectFwe",
   "sklearn.feature_selection.SelectKBest",
   "sklearn.feature_selection.SelectPercentile"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_scorefunc_multilabel": {
  "lineno": 522,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.feature_selection.SelectKBest",
   "sklearn.feature_selection.SelectPercentile",
   "sklearn.feature_selection.chi2"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_fdr_regression": {
  "lineno": 408,
  "symbols_in_volume": [
   "numpy.mean",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_fdr_regression.single_fdr": {
  "lineno": 412,
  "symbols_in_volume": [
   "numpy.sum",
   "sklearn.datasets.make_regression",
   "sklearn.feature_selection.GenericUnivariateSelect",
   "sklearn.feature_selection.SelectFdr",
   "sklearn.feature_selection.f_regression",
   "sklearn.utils._testing.assert_array_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_fwe_regression": {
  "lineno": 450,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.ones",
   "numpy.sum",
   "numpy.zeros",
   "sklearn.datasets.make_regression",
   "sklearn.feature_selection.GenericUnivariateSelect",
   "sklearn.feature_selection.SelectFwe",
   "sklearn.feature_selection.f_regression",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_heuristics_classif": {
  "lineno": 246,
  "symbols_in_volume": [
   "numpy.zeros",
   "sklearn.datasets.make_classification",
   "sklearn.feature_selection.GenericUnivariateSelect",
   "sklearn.feature_selection.SelectFwe",
   "sklearn.feature_selection.f_classif",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_heuristics_regression": {
  "lineno": 354,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.ones",
   "numpy.sum",
   "numpy.zeros",
   "sklearn.datasets.make_regression",
   "sklearn.feature_selection.GenericUnivariateSelect",
   "sklearn.feature_selection.SelectFpr",
   "sklearn.feature_selection.f_regression",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_kbest_all": {
  "lineno": 221,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification",
   "sklearn.feature_selection.SelectKBest",
   "sklearn.feature_selection.f_classif",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_kbest_classif": {
  "lineno": 200,
  "symbols_in_volume": [
   "numpy.zeros",
   "sklearn.datasets.make_classification",
   "sklearn.feature_selection.GenericUnivariateSelect",
   "sklearn.feature_selection.SelectKBest",
   "sklearn.feature_selection.f_classif",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_kbest_regression": {
  "lineno": 335,
  "symbols_in_volume": [
   "numpy.zeros",
   "sklearn.datasets.make_regression",
   "sklearn.feature_selection.GenericUnivariateSelect",
   "sklearn.feature_selection.SelectKBest",
   "sklearn.feature_selection.f_regression",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_kbest_zero": {
  "lineno": 231,
  "symbols_in_volume": [
   "numpy.zeros",
   "sklearn.datasets.make_classification",
   "sklearn.feature_selection.SelectKBest",
   "sklearn.feature_selection.f_classif",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_percentile_classif": {
  "lineno": 147,
  "symbols_in_volume": [
   "numpy.zeros",
   "sklearn.datasets.make_classification",
   "sklearn.feature_selection.GenericUnivariateSelect",
   "sklearn.feature_selection.SelectPercentile",
   "sklearn.feature_selection.f_classif",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_percentile_classif_sparse": {
  "lineno": 168,
  "symbols_in_volume": [
   "numpy.zeros",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.issparse",
   "sklearn.datasets.make_classification",
   "sklearn.feature_selection.GenericUnivariateSelect",
   "sklearn.feature_selection.SelectPercentile",
   "sklearn.feature_selection.f_classif",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils.safe_mask"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_percentile_regression": {
  "lineno": 279,
  "symbols_in_volume": [
   "numpy.logical_not",
   "numpy.zeros",
   "sklearn.datasets.make_regression",
   "sklearn.feature_selection.GenericUnivariateSelect",
   "sklearn.feature_selection.SelectPercentile",
   "sklearn.feature_selection.f_regression",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_select_percentile_regression_full": {
  "lineno": 304,
  "symbols_in_volume": [
   "numpy.ones",
   "sklearn.datasets.make_regression",
   "sklearn.feature_selection.GenericUnivariateSelect",
   "sklearn.feature_selection.SelectPercentile",
   "sklearn.feature_selection.f_regression",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_selectkbest_tiebreaking": {
  "lineno": 469,
  "symbols_in_volume": [
   "sklearn.feature_selection.SelectKBest",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_selectpercentile_tiebreaking": {
  "lineno": 487,
  "symbols_in_volume": [
   "sklearn.feature_selection.SelectPercentile",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_tied_pvalues": {
  "lineno": 504,
  "symbols_in_volume": [
   "itertools.permutations",
   "numpy.array",
   "sklearn.feature_selection.SelectKBest",
   "sklearn.feature_selection.SelectPercentile",
   "sklearn.feature_selection.chi2"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_feature_select.test_tied_scores": {
  "lineno": 537,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "sklearn.feature_selection.SelectKBest",
   "sklearn.feature_selection.chi2",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.datasets.load_iris"
  ],
  "type": "module"
 },
 "sklearn.feature_selection.tests.test_from_model.FixedImportanceEstimator": {
  "lineno": 87,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.feature_selection.tests.test_from_model.FixedImportanceEstimator.__init__": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.FixedImportanceEstimator.fit": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.NaNTag": {
  "lineno": 20,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.feature_selection.tests.test_from_model.NaNTag._more_tags": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.NaNTagRandomForest": {
  "lineno": 30,
  "symbols_in_volume": [
   "sklearn.ensemble.RandomForestClassifier"
  ],
  "type": "class"
 },
 "sklearn.feature_selection.tests.test_from_model.NaNTagRandomForest._more_tags": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.NoNaNTag": {
  "lineno": 25,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.feature_selection.tests.test_from_model.NoNaNTag._more_tags": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_2d_coef": {
  "lineno": 230,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.linalg.norm",
   "numpy.mean",
   "numpy.median",
   "sklearn.datasets.make_classification",
   "sklearn.feature_selection.SelectFromModel",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.skip_if_32bit"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_allow_nan_tag_comes_from_estimator": {
  "lineno": 370,
  "symbols_in_volume": [
   "sklearn.feature_selection.SelectFromModel"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_calling_fit_reinitializes": {
  "lineno": 278,
  "symbols_in_volume": [
   "sklearn.feature_selection.SelectFromModel",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_coef_default_threshold": {
  "lineno": 216,
  "symbols_in_volume": [
   "numpy.abs",
   "sklearn.datasets.make_classification",
   "sklearn.feature_selection.SelectFromModel",
   "sklearn.linear_model.Lasso",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_feature_importances": {
  "lineno": 174,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.mean",
   "numpy.median",
   "sklearn.datasets.make_classification",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.feature_selection.SelectFromModel",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.skip_if_32bit"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_fit_accepts_nan_inf": {
  "lineno": 343,
  "symbols_in_volume": [
   "numpy.Inf",
   "numpy.NaN",
   "sklearn.ensemble.HistGradientBoostingClassifier",
   "sklearn.feature_selection.SelectFromModel"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_input_estimator_unchanged": {
  "lineno": 52,
  "symbols_in_volume": [
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.feature_selection.SelectFromModel"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_invalid_input": {
  "lineno": 41,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "pytest.raises",
   "sklearn.feature_selection.SelectFromModel",
   "sklearn.linear_model.SGDClassifier"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_max_features": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.argsort",
   "numpy.inf",
   "sklearn.datasets.make_classification",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.feature_selection.SelectFromModel",
   "sklearn.linear_model.Lasso",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_max_features_dim": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.inf",
   "pytest.mark.parametrize",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.feature_selection.SelectFromModel"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_max_features_error": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.inf",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.feature_selection.SelectFromModel"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_max_features_tiebreak": {
  "lineno": 133,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.inf",
   "numpy.where",
   "sklearn.datasets.make_classification",
   "sklearn.feature_selection.SelectFromModel",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_partial_fit": {
  "lineno": 256,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.unique",
   "numpy.vstack",
   "pytest.mark.filterwarnings",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.feature_selection.SelectFromModel",
   "sklearn.linear_model.PassiveAggressiveClassifier",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_prefit": {
  "lineno": 288,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "pytest.raises",
   "sklearn.feature_selection.SelectFromModel",
   "sklearn.linear_model.SGDClassifier",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_sample_weight": {
  "lineno": 194,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.ones",
   "sklearn.datasets.make_classification",
   "sklearn.feature_selection.SelectFromModel",
   "sklearn.linear_model.LogisticRegression"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_threshold_and_max_features": {
  "lineno": 152,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.inf",
   "numpy.newaxis",
   "sklearn.datasets.make_classification",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.feature_selection.SelectFromModel",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_threshold_string": {
  "lineno": 315,
  "symbols_in_volume": [
   "numpy.mean",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.feature_selection.SelectFromModel",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_threshold_without_refitting": {
  "lineno": 329,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "sklearn.feature_selection.SelectFromModel",
   "sklearn.linear_model.SGDClassifier"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_from_model.test_transform_accepts_nan_inf": {
  "lineno": 356,
  "symbols_in_volume": [
   "numpy.Inf",
   "numpy.NaN",
   "sklearn.feature_selection.SelectFromModel"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_mutual_info": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.feature_selection.tests.test_mutual_info.test_compute_mi_cc": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linalg.det",
   "numpy.log",
   "numpy.zeros",
   "sklearn.feature_selection._mutual_info._compute_mi",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_mutual_info.test_compute_mi_cd": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.log",
   "numpy.sum",
   "sklearn.feature_selection._mutual_info._compute_mi",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_mutual_info.test_compute_mi_cd_unique_label": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.hstack",
   "numpy.random.uniform",
   "numpy.sum",
   "sklearn.feature_selection._mutual_info._compute_mi"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_mutual_info.test_compute_mi_dd": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.log",
   "sklearn.feature_selection._mutual_info._compute_mi",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_mutual_info.test_mutual_info_classif_discrete": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.array",
   "sklearn.feature_selection.mutual_info_classif",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_mutual_info.test_mutual_info_classif_mixed": {
  "lineno": 152,
  "symbols_in_volume": [
   "numpy.argsort",
   "sklearn.feature_selection.mutual_info_classif",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_mutual_info.test_mutual_info_options": {
  "lineno": 176,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "pytest.raises",
   "scipy.sparse.csr_matrix",
   "sklearn.feature_selection.mutual_info_classif",
   "sklearn.feature_selection.mutual_info_regression",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_mutual_info.test_mutual_info_regression": {
  "lineno": 128,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.array",
   "numpy.zeros",
   "sklearn.feature_selection.mutual_info_regression",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.feature_selection.tests.test_rfe.MockClassifier": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.feature_selection.tests.test_rfe.MockClassifier.__init__": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.MockClassifier._get_tags": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.MockClassifier.fit": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.ones"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.MockClassifier.get_params": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.MockClassifier.predict": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.MockClassifier.score": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.MockClassifier.set_params": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_number_of_subsets_of_features": {
  "lineno": 283,
  "symbols_in_volume": [
   "numpy.max",
   "sklearn.feature_selection.RFE",
   "sklearn.feature_selection.RFECV",
   "sklearn.svm.SVC",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_number_of_subsets_of_features.formula1": {
  "lineno": 292,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_number_of_subsets_of_features.formula2": {
  "lineno": 295,
  "symbols_in_volume": [
   "numpy.ceil"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfe": {
  "lineno": 82,
  "symbols_in_volume": [
   "numpy.c_",
   "numpy.testing.assert_array_almost_equal",
   "scipy.sparse.csr_matrix",
   "sklearn.datasets.load_iris",
   "sklearn.feature_selection.RFE",
   "sklearn.svm.SVC",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfe_allow_nan_inf_in_x": {
  "lineno": 378,
  "symbols_in_volume": [
   "numpy.Inf",
   "numpy.NaN",
   "pytest.mark.parametrize",
   "sklearn.datasets.load_iris",
   "sklearn.feature_selection.RFE",
   "sklearn.feature_selection.RFECV"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfe_cv_groups": {
  "lineno": 360,
  "symbols_in_volume": [
   "numpy.floor",
   "numpy.linspace",
   "sklearn.datasets.load_iris",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.feature_selection.RFECV",
   "sklearn.model_selection.GroupKFold",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfe_cv_n_jobs": {
  "lineno": 343,
  "symbols_in_volume": [
   "numpy.c_",
   "numpy.testing.assert_array_almost_equal",
   "sklearn.datasets.load_iris",
   "sklearn.feature_selection.RFECV",
   "sklearn.svm.SVC",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfe_estimator_tags": {
  "lineno": 252,
  "symbols_in_volume": [
   "sklearn.datasets.load_iris",
   "sklearn.feature_selection.RFE",
   "sklearn.model_selection.cross_val_score",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfe_features_importance": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.c_",
   "numpy.testing.assert_array_equal",
   "sklearn.datasets.load_iris",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.feature_selection.RFE",
   "sklearn.svm.SVC",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfe_min_step": {
  "lineno": 261,
  "symbols_in_volume": [
   "sklearn.datasets.make_friedman1",
   "sklearn.feature_selection.RFE",
   "sklearn.svm.SVR"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfe_mockclassifier": {
  "lineno": 111,
  "symbols_in_volume": [
   "numpy.c_",
   "sklearn.datasets.load_iris",
   "sklearn.feature_selection.RFE",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfecv": {
  "lineno": 127,
  "symbols_in_volume": [
   "numpy.c_",
   "numpy.ones",
   "numpy.testing.assert_array_equal",
   "scipy.sparse.csr_matrix",
   "sklearn.datasets.load_iris",
   "sklearn.feature_selection.RFECV",
   "sklearn.metrics.get_scorer",
   "sklearn.metrics.make_scorer",
   "sklearn.metrics.zero_one_loss",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.ignore_warnings",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfecv.test_scorer": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfecv_grid_scores_size": {
  "lineno": 232,
  "symbols_in_volume": [
   "numpy.c_",
   "numpy.ceil",
   "sklearn.datasets.load_iris",
   "sklearn.feature_selection.RFECV",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfecv_mockclassifier": {
  "lineno": 199,
  "symbols_in_volume": [
   "numpy.c_",
   "sklearn.datasets.load_iris",
   "sklearn.feature_selection.RFECV",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_rfe.test_rfecv_verbose_output": {
  "lineno": 213,
  "symbols_in_volume": [
   "io.StringIO",
   "numpy.c_",
   "sklearn.datasets.load_iris",
   "sklearn.feature_selection.RFECV",
   "sklearn.svm.SVC",
   "sklearn.utils.check_random_state",
   "sys.stdout"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_variance_threshold": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.test_variance_nan": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.array",
   "numpy.float64",
   "scipy.sparse.bsr_matrix",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.feature_selection.VarianceThreshold",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.test_variance_threshold": {
  "lineno": 28,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "sklearn.feature_selection.VarianceThreshold"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.test_zero_variance": {
  "lineno": 15,
  "symbols_in_volume": [
   "pytest.raises",
   "scipy.sparse.bsr_matrix",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.feature_selection.VarianceThreshold",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.tests.test_variance_threshold.test_zero_variance_floating_point_error": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.var",
   "pytest.raises",
   "pytest.skip",
   "scipy.sparse.bsr_matrix",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.feature_selection.VarianceThreshold"
  ],
  "type": "function"
 },
 "sklearn.feature_selection.univariate_selection": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.feature_selection.univariate_selection.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.feature_selection.variance_threshold": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.feature_selection.variance_threshold.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.gaussian_process._gpc": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.newaxis"
  ],
  "type": "module"
 },
 "sklearn.gaussian_process._gpc.GaussianProcessClassifier": {
  "lineno": 462,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.gaussian_process._gpc.GaussianProcessClassifier.__init__": {
  "lineno": 596,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process._gpc.GaussianProcessClassifier.fit": {
  "lineno": 610,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process._gpc.GaussianProcessClassifier.kernel_": {
  "lineno": 725,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process._gpc.GaussianProcessClassifier.log_marginal_likelihood": {
  "lineno": 734,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.mean"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process._gpc.GaussianProcessClassifier.predict": {
  "lineno": 671,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process._gpc.GaussianProcessClassifier.predict_proba": {
  "lineno": 695,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process._gpc._BinaryGaussianProcessClassifierLaplace": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.gaussian_process._gpc._BinaryGaussianProcessClassifierLaplace.__init__": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process._gpc._BinaryGaussianProcessClassifierLaplace._constrained_optimization": {
  "lineno": 446,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process._gpc._BinaryGaussianProcessClassifierLaplace._posterior_mode": {
  "lineno": 393,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.exp",
   "numpy.eye",
   "numpy.float64",
   "numpy.inf",
   "numpy.log",
   "numpy.log1p",
   "numpy.newaxis",
   "numpy.sqrt",
   "numpy.zeros_like",
   "scipy.linalg.cho_solve",
   "scipy.linalg.cholesky",
   "scipy.special.expit"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process._gpc._BinaryGaussianProcessClassifierLaplace.fit": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.argmin",
   "numpy.copy",
   "numpy.exp",
   "numpy.isfinite",
   "numpy.min",
   "operator.itemgetter"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process._gpc._BinaryGaussianProcessClassifierLaplace.fit.obj_func": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process._gpc._BinaryGaussianProcessClassifierLaplace.log_marginal_likelihood": {
  "lineno": 317,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.einsum",
   "numpy.empty",
   "numpy.newaxis",
   "scipy.linalg.cho_solve",
   "scipy.linalg.solve"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process._gpc._BinaryGaussianProcessClassifierLaplace.predict": {
  "lineno": 250,
  "symbols_in_volume": [
   "numpy.where"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process._gpc._BinaryGaussianProcessClassifierLaplace.predict_proba": {
  "lineno": 275,
  "symbols_in_volume": [
   "numpy.einsum",
   "numpy.newaxis",
   "numpy.pi",
   "numpy.sqrt",
   "numpy.vstack",
   "scipy.linalg.solve",
   "scipy.special.erf"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process._gpr": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.gaussian_process._gpr.GaussianProcessRegressor": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.gaussian_process._gpr.GaussianProcessRegressor.__init__": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process._gpr.GaussianProcessRegressor._constrained_optimization": {
  "lineno": 489,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process._gpr.GaussianProcessRegressor._more_tags": {
  "lineno": 504,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process._gpr.GaussianProcessRegressor.fit": {
  "lineno": 164,
  "symbols_in_volume": [
   "numpy.argmin",
   "numpy.copy",
   "numpy.diag_indices_from",
   "numpy.isfinite",
   "numpy.iterable",
   "numpy.linalg.LinAlgError",
   "numpy.mean",
   "numpy.min",
   "numpy.zeros",
   "operator.itemgetter",
   "scipy.linalg.cho_solve",
   "scipy.linalg.cholesky"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process._gpr.GaussianProcessRegressor.fit.obj_func": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process._gpr.GaussianProcessRegressor.log_marginal_likelihood": {
  "lineno": 407,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.diag_indices_from",
   "numpy.einsum",
   "numpy.eye",
   "numpy.inf",
   "numpy.linalg.LinAlgError",
   "numpy.log",
   "numpy.newaxis",
   "numpy.pi",
   "numpy.zeros_like",
   "scipy.linalg.cho_solve",
   "scipy.linalg.cholesky"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process._gpr.GaussianProcessRegressor.predict": {
  "lineno": 275,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.dot",
   "numpy.einsum",
   "numpy.eye",
   "numpy.sqrt",
   "numpy.zeros",
   "scipy.linalg.cho_solve",
   "scipy.linalg.solve_triangular",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process._gpr.GaussianProcessRegressor.sample_y": {
  "lineno": 369,
  "symbols_in_volume": [
   "numpy.hstack",
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.gpc": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.gaussian_process.gpc.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.gpr": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.gaussian_process.gpr.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.gaussian_process.kernels.CompoundKernel": {
  "lineno": 427,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.gaussian_process.kernels.CompoundKernel.__call__": {
  "lineno": 497,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.dstack",
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.CompoundKernel.__eq__": {
  "lineno": 541,
  "symbols_in_volume": [
   "numpy.all"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.CompoundKernel.__init__": {
  "lineno": 438,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.CompoundKernel.bounds": {
  "lineno": 486,
  "symbols_in_volume": [
   "numpy.vstack"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.CompoundKernel.diag": {
  "lineno": 557,
  "symbols_in_volume": [
   "numpy.vstack"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.CompoundKernel.get_params": {
  "lineno": 441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.CompoundKernel.is_stationary": {
  "lineno": 547,
  "symbols_in_volume": [
   "numpy.all"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.CompoundKernel.requires_vector_input": {
  "lineno": 551,
  "symbols_in_volume": [
   "numpy.any"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.CompoundKernel.theta": {
  "lineno": 473,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.ConstantKernel": {
  "lineno": 1010,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.gaussian_process.kernels.ConstantKernel.__call__": {
  "lineno": 1041,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "numpy.full"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.ConstantKernel.__init__": {
  "lineno": 1032,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.ConstantKernel.__repr__": {
  "lineno": 1108,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.ConstantKernel.diag": {
  "lineno": 1087,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.full"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.ConstantKernel.hyperparameter_constant_value": {
  "lineno": 1036,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.DotProduct": {
  "lineno": 1706,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.gaussian_process.kernels.DotProduct.__call__": {
  "lineno": 1742,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "numpy.empty",
   "numpy.inner"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.DotProduct.__init__": {
  "lineno": 1734,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.DotProduct.__repr__": {
  "lineno": 1810,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.DotProduct.diag": {
  "lineno": 1787,
  "symbols_in_volume": [
   "numpy.einsum"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.DotProduct.hyperparameter_sigma_0": {
  "lineno": 1738,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.DotProduct.is_stationary": {
  "lineno": 1806,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.ExpSineSquared": {
  "lineno": 1593,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.gaussian_process.kernels.ExpSineSquared.__call__": {
  "lineno": 1639,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "numpy.cos",
   "numpy.dstack",
   "numpy.empty",
   "numpy.exp",
   "numpy.newaxis",
   "numpy.pi",
   "numpy.sin",
   "scipy.spatial.distance.cdist",
   "scipy.spatial.distance.pdist",
   "scipy.spatial.distance.squareform"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.ExpSineSquared.__init__": {
  "lineno": 1621,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.ExpSineSquared.__repr__": {
  "lineno": 1701,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.ExpSineSquared.hyperparameter_length_scale": {
  "lineno": 1629,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.ExpSineSquared.hyperparameter_periodicity": {
  "lineno": 1634,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Exponentiation": {
  "lineno": 844,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.gaussian_process.kernels.Exponentiation.__call__": {
  "lineno": 939,
  "symbols_in_volume": [
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Exponentiation.__eq__": {
  "lineno": 934,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Exponentiation.__init__": {
  "lineno": 861,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Exponentiation.__repr__": {
  "lineno": 997,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Exponentiation.bounds": {
  "lineno": 923,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Exponentiation.diag": {
  "lineno": 977,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Exponentiation.get_params": {
  "lineno": 865,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Exponentiation.hyperparameters": {
  "lineno": 885,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Exponentiation.is_stationary": {
  "lineno": 1000,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Exponentiation.requires_vector_input": {
  "lineno": 1004,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Exponentiation.theta": {
  "lineno": 912,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.GenericKernelMixin": {
  "lineno": 414,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.gaussian_process.kernels.GenericKernelMixin.requires_vector_input": {
  "lineno": 421,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Hyperparameter": {
  "lineno": 48,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "class"
 },
 "sklearn.gaussian_process.kernels.Hyperparameter.__eq__": {
  "lineno": 112,
  "symbols_in_volume": [
   "numpy.all"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Hyperparameter.__new__": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "numpy.repeat"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Kernel": {
  "lineno": 120,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.gaussian_process.kernels.Kernel.__add__": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Kernel.__call__": {
  "lineno": 342,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Kernel.__eq__": {
  "lineno": 328,
  "symbols_in_volume": [
   "numpy.any"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Kernel.__mul__": {
  "lineno": 315,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Kernel.__pow__": {
  "lineno": 325,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Kernel.__radd__": {
  "lineno": 310,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Kernel.__repr__": {
  "lineno": 338,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Kernel.__rmul__": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Kernel.bounds": {
  "lineno": 288,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.log",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Kernel.clone_with_theta": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Kernel.diag": {
  "lineno": 346,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Kernel.get_params": {
  "lineno": 126,
  "symbols_in_volume": [
   "inspect.signature",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Kernel.hyperparameters": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Kernel.is_stationary": {
  "lineno": 365,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Kernel.n_dims": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Kernel.requires_vector_input": {
  "lineno": 369,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Kernel.set_params": {
  "lineno": 174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Kernel.theta": {
  "lineno": 259,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.KernelOperator": {
  "lineno": 578,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.gaussian_process.kernels.KernelOperator.__eq__": {
  "lineno": 670,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.KernelOperator.__init__": {
  "lineno": 584,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.KernelOperator.bounds": {
  "lineno": 655,
  "symbols_in_volume": [
   "numpy.vstack"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.KernelOperator.get_params": {
  "lineno": 588,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.KernelOperator.hyperparameters": {
  "lineno": 611,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.KernelOperator.is_stationary": {
  "lineno": 676,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.KernelOperator.requires_vector_input": {
  "lineno": 680,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.KernelOperator.theta": {
  "lineno": 642,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Matern": {
  "lineno": 1327,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.gaussian_process.kernels.Matern.__call__": {
  "lineno": 1371,
  "symbols_in_volume": [
   "math.sqrt",
   "numpy.atleast_2d",
   "numpy.empty",
   "numpy.exp",
   "numpy.fill_diagonal",
   "numpy.finfo",
   "numpy.isfinite",
   "numpy.newaxis",
   "numpy.sqrt",
   "scipy.spatial.distance.cdist",
   "scipy.spatial.distance.pdist",
   "scipy.spatial.distance.squareform",
   "scipy.special.gamma",
   "scipy.special.kv"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Matern.__call__.f": {
  "lineno": 1454,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Matern.__init__": {
  "lineno": 1366,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Matern.__repr__": {
  "lineno": 1465,
  "symbols_in_volume": [
   "numpy.ravel"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.NormalizedKernelMixin": {
  "lineno": 377,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.gaussian_process.kernels.NormalizedKernelMixin.diag": {
  "lineno": 383,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.PairwiseKernel": {
  "lineno": 1828,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.gaussian_process.kernels.PairwiseKernel.__call__": {
  "lineno": 1877,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "numpy.empty"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.PairwiseKernel.__call__.f": {
  "lineno": 1916,
  "symbols_in_volume": [
   "numpy.exp",
   "scipy.special.gamma"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.PairwiseKernel.__init__": {
  "lineno": 1866,
  "symbols_in_volume": [
   "scipy.special.gamma"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.PairwiseKernel.__repr__": {
  "lineno": 1948,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.PairwiseKernel.diag": {
  "lineno": 1924,
  "symbols_in_volume": [
   "numpy.apply_along_axis"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.PairwiseKernel.hyperparameter_gamma": {
  "lineno": 1873,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.PairwiseKernel.is_stationary": {
  "lineno": 1944,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Product": {
  "lineno": 765,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.gaussian_process.kernels.Product.__call__": {
  "lineno": 783,
  "symbols_in_volume": [
   "numpy.dstack",
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Product.__repr__": {
  "lineno": 840,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Product.diag": {
  "lineno": 820,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.RBF": {
  "lineno": 1213,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.gaussian_process.kernels.RBF.__call__": {
  "lineno": 1258,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "numpy.empty",
   "numpy.exp",
   "numpy.fill_diagonal",
   "numpy.newaxis",
   "scipy.spatial.distance.cdist",
   "scipy.spatial.distance.pdist",
   "scipy.spatial.distance.squareform"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.RBF.__init__": {
  "lineno": 1241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.RBF.__repr__": {
  "lineno": 1317,
  "symbols_in_volume": [
   "numpy.ravel"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.RBF.anisotropic": {
  "lineno": 1245,
  "symbols_in_volume": [
   "numpy.iterable"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.RBF.hyperparameter_length_scale": {
  "lineno": 1249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.RationalQuadratic": {
  "lineno": 1477,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.gaussian_process.kernels.RationalQuadratic.__call__": {
  "lineno": 1521,
  "symbols_in_volume": [
   "numpy.atleast_1d",
   "numpy.atleast_2d",
   "numpy.dstack",
   "numpy.empty",
   "numpy.fill_diagonal",
   "numpy.log",
   "numpy.newaxis",
   "scipy.spatial.distance.cdist",
   "scipy.spatial.distance.pdist",
   "scipy.spatial.distance.squareform"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.RationalQuadratic.__init__": {
  "lineno": 1505,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.RationalQuadratic.__repr__": {
  "lineno": 1588,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.RationalQuadratic.hyperparameter_alpha": {
  "lineno": 1517,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.RationalQuadratic.hyperparameter_length_scale": {
  "lineno": 1512,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.StationaryKernelMixin": {
  "lineno": 403,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.gaussian_process.kernels.StationaryKernelMixin.is_stationary": {
  "lineno": 409,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Sum": {
  "lineno": 687,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.gaussian_process.kernels.Sum.__call__": {
  "lineno": 705,
  "symbols_in_volume": [
   "numpy.dstack"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Sum.__repr__": {
  "lineno": 761,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.Sum.diag": {
  "lineno": 741,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.WhiteKernel": {
  "lineno": 1112,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.gaussian_process.kernels.WhiteKernel.__call__": {
  "lineno": 1142,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.eye",
   "numpy.newaxis",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.WhiteKernel.__init__": {
  "lineno": 1133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.WhiteKernel.__repr__": {
  "lineno": 1208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.WhiteKernel.diag": {
  "lineno": 1187,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.full"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels.WhiteKernel.hyperparameter_noise_level": {
  "lineno": 1137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels._approx_fprime": {
  "lineno": 1816,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.kernels._check_length_scale": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.ndim",
   "numpy.squeeze"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.gaussian_process.tests._mini_sequence_kernel": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.gaussian_process.tests._mini_sequence_kernel.MiniSeqKernel": {
  "lineno": 8,
  "symbols_in_volume": [
   "sklearn.gaussian_process.kernels.GenericKernelMixin",
   "sklearn.gaussian_process.kernels.Kernel",
   "sklearn.gaussian_process.kernels.StationaryKernelMixin"
  ],
  "type": "class"
 },
 "sklearn.gaussian_process.tests._mini_sequence_kernel.MiniSeqKernel.__call__": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests._mini_sequence_kernel.MiniSeqKernel.__init__": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.tests._mini_sequence_kernel.MiniSeqKernel._f": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.tests._mini_sequence_kernel.MiniSeqKernel._g": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.tests._mini_sequence_kernel.MiniSeqKernel.clone_with_theta": {
  "lineno": 48,
  "symbols_in_volume": [
   "sklearn.base.clone"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests._mini_sequence_kernel.MiniSeqKernel.diag": {
  "lineno": 45,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests._mini_sequence_kernel.MiniSeqKernel.hyperparameter_baseline_similarity": {
  "lineno": 21,
  "symbols_in_volume": [
   "sklearn.gaussian_process.kernels.Hyperparameter"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.atleast_2d",
   "numpy.empty",
   "numpy.linspace",
   "sklearn.gaussian_process.kernels.ConstantKernel",
   "sklearn.gaussian_process.kernels.RBF"
  ],
  "type": "module"
 },
 "sklearn.gaussian_process.tests.test_gpc.f": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.sin"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_converged_to_local_maximum": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.all",
   "pytest.mark.parametrize",
   "sklearn.gaussian_process.GaussianProcessClassifier"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_custom_optimizer": {
  "lineno": 135,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.gaussian_process.GaussianProcessClassifier"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_custom_optimizer.optimizer": {
  "lineno": 139,
  "symbols_in_volume": [
   "numpy.atleast_1d",
   "numpy.maximum",
   "numpy.minimum",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_lml_gradient": {
  "lineno": 99,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "scipy.optimize.approx_fprime",
   "sklearn.gaussian_process.GaussianProcessClassifier",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_lml_improving": {
  "lineno": 60,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.gaussian_process.GaussianProcessClassifier"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_lml_precomputed": {
  "lineno": 68,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.gaussian_process.GaussianProcessClassifier",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_lml_without_cloning_kernel": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.ones",
   "pytest.mark.parametrize",
   "sklearn.gaussian_process.GaussianProcessClassifier",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_multi_class": {
  "lineno": 158,
  "symbols_in_volume": [
   "numpy.argmax",
   "pytest.mark.parametrize",
   "sklearn.gaussian_process.GaussianProcessClassifier",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_multi_class_n_jobs": {
  "lineno": 171,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.gaussian_process.GaussianProcessClassifier",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_predict_consistent": {
  "lineno": 42,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.gaussian_process.GaussianProcessClassifier",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_predict_consistent_structured": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.gaussian_process.GaussianProcessClassifier",
   "sklearn.gaussian_process.tests._mini_sequence_kernel.MiniSeqKernel",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpc.test_random_starts": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float32",
   "numpy.inf",
   "numpy.random.RandomState",
   "numpy.sin",
   "sklearn.gaussian_process.GaussianProcessClassifier",
   "sklearn.gaussian_process.kernels.ConstantKernel",
   "sklearn.gaussian_process.kernels.RBF"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "sklearn.gaussian_process.kernels.ConstantKernel",
   "sklearn.gaussian_process.kernels.RBF"
  ],
  "type": "module"
 },
 "sklearn.gaussian_process.tests.test_gpr.f": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.sin"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_K_inv_reset": {
  "lineno": 371,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.gaussian_process.GaussianProcessRegressor",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_anisotropic_kernel": {
  "lineno": 185,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.random.RandomState",
   "sklearn.gaussian_process.GaussianProcessRegressor",
   "sklearn.gaussian_process.kernels.RBF"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_converged_to_local_maximum": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.all",
   "pytest.mark.parametrize",
   "sklearn.gaussian_process.GaussianProcessRegressor"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_custom_optimizer": {
  "lineno": 295,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.gaussian_process.GaussianProcessRegressor"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_custom_optimizer.optimizer": {
  "lineno": 299,
  "symbols_in_volume": [
   "numpy.atleast_1d",
   "numpy.maximum",
   "numpy.minimum",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_duplicate_input": {
  "lineno": 331,
  "symbols_in_volume": [
   "numpy.hstack",
   "numpy.linspace",
   "numpy.vstack",
   "pytest.mark.parametrize",
   "sklearn.gaussian_process.GaussianProcessRegressor",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_gpr_correct_error_message": {
  "lineno": 318,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.linalg.LinAlgError",
   "numpy.ones",
   "sklearn.gaussian_process.GaussianProcessRegressor",
   "sklearn.gaussian_process.kernels.DotProduct",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_gpr_interpolation": {
  "lineno": 47,
  "symbols_in_volume": [
   "numpy.diag",
   "pytest.mark.parametrize",
   "sklearn.gaussian_process.GaussianProcessRegressor",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_gpr_interpolation_structured": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.diag",
   "numpy.eye",
   "sklearn.gaussian_process.GaussianProcessRegressor",
   "sklearn.gaussian_process.tests._mini_sequence_kernel.MiniSeqKernel",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_lml_gradient": {
  "lineno": 124,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "scipy.optimize.approx_fprime",
   "sklearn.gaussian_process.GaussianProcessRegressor",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_lml_improving": {
  "lineno": 71,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.gaussian_process.GaussianProcessRegressor"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_lml_precomputed": {
  "lineno": 79,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.gaussian_process.GaussianProcessRegressor"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_lml_without_cloning_kernel": {
  "lineno": 87,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.ones",
   "pytest.mark.parametrize",
   "sklearn.gaussian_process.GaussianProcessRegressor",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_no_fit_default_predict": {
  "lineno": 355,
  "symbols_in_volume": [
   "sklearn.gaussian_process.GaussianProcessRegressor",
   "sklearn.gaussian_process.kernels.ConstantKernel",
   "sklearn.gaussian_process.kernels.RBF",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_no_optimizer": {
  "lineno": 169,
  "symbols_in_volume": [
   "numpy.exp",
   "sklearn.gaussian_process.GaussianProcessRegressor",
   "sklearn.gaussian_process.kernels.RBF"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_predict_cov_vs_std": {
  "lineno": 176,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.sqrt",
   "pytest.mark.parametrize",
   "sklearn.gaussian_process.GaussianProcessRegressor",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_prior": {
  "lineno": 139,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.exp",
   "pytest.mark.parametrize",
   "sklearn.gaussian_process.GaussianProcessRegressor",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_random_starts": {
  "lineno": 200,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float32",
   "numpy.inf",
   "numpy.random.RandomState",
   "numpy.sin",
   "sklearn.gaussian_process.GaussianProcessRegressor",
   "sklearn.gaussian_process.kernels.ConstantKernel",
   "sklearn.gaussian_process.kernels.RBF",
   "sklearn.gaussian_process.kernels.WhiteKernel"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_sample_statistics": {
  "lineno": 154,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.mean",
   "numpy.var",
   "pytest.mark.parametrize",
   "sklearn.gaussian_process.GaussianProcessRegressor",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_solution_inside_bounds": {
  "lineno": 110,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.isfinite",
   "pytest.mark.parametrize",
   "sklearn.gaussian_process.GaussianProcessRegressor",
   "sklearn.utils._testing.assert_array_less"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_y_multioutput": {
  "lineno": 252,
  "symbols_in_volume": [
   "numpy.vstack",
   "sklearn.gaussian_process.GaussianProcessRegressor",
   "sklearn.gaussian_process.kernels.RBF",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_gpr.test_y_normalization": {
  "lineno": 223,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.gaussian_process.GaussianProcessRegressor",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.gaussian_process.kernels.ConstantKernel",
   "sklearn.gaussian_process.kernels.DotProduct",
   "sklearn.gaussian_process.kernels.ExpSineSquared",
   "sklearn.gaussian_process.kernels.Matern",
   "sklearn.gaussian_process.kernels.PairwiseKernel",
   "sklearn.gaussian_process.kernels.RBF",
   "sklearn.gaussian_process.kernels.RationalQuadratic",
   "sklearn.gaussian_process.kernels.WhiteKernel",
   "sklearn.metrics.pairwise.PAIRWISE_KERNEL_FUNCTIONS"
  ],
  "type": "module"
 },
 "sklearn.gaussian_process.tests.test_kernels.check_hyperparameters_equal": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_auto_vs_cross": {
  "lineno": 128,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_compound_kernel_input_type": {
  "lineno": 200,
  "symbols_in_volume": [
   "sklearn.gaussian_process.kernels.CompoundKernel",
   "sklearn.gaussian_process.kernels.RBF",
   "sklearn.gaussian_process.kernels.WhiteKernel"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_kernel_anisotropic": {
  "lineno": 158,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.log",
   "sklearn.gaussian_process.kernels.RBF",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_kernel_clone": {
  "lineno": 218,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.base.clone"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_kernel_clone_after_set_params": {
  "lineno": 235,
  "symbols_in_volume": [
   "numpy.iterable",
   "pytest.mark.parametrize",
   "sklearn.base.clone",
   "sklearn.gaussian_process.kernels.ExpSineSquared",
   "sklearn.gaussian_process.kernels.RationalQuadratic"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_kernel_diag": {
  "lineno": 139,
  "symbols_in_volume": [
   "numpy.diag",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_kernel_gradient": {
  "lineno": 51,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.gaussian_process.kernels._approx_fprime",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_kernel_gradient.eval_kernel_for_theta": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_kernel_input_type": {
  "lineno": 188,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.gaussian_process.kernels.Exponentiation",
   "sklearn.gaussian_process.kernels.KernelOperator"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_kernel_operator_commutative": {
  "lineno": 147,
  "symbols_in_volume": [
   "sklearn.gaussian_process.kernels.RBF",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_kernel_stationary": {
  "lineno": 179,
  "symbols_in_volume": [
   "numpy.diag",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_kernel_theta": {
  "lineno": 71,
  "symbols_in_volume": [
   "inspect.signature",
   "numpy.log",
   "pytest.mark.parametrize",
   "sklearn.gaussian_process.kernels.Exponentiation",
   "sklearn.gaussian_process.kernels.KernelOperator",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_kernel_versus_pairwise": {
  "lineno": 283,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.metrics.pairwise.pairwise_kernels",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_matern_kernel": {
  "lineno": 264,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.exp",
   "numpy.ones",
   "sklearn.gaussian_process.kernels.Matern",
   "sklearn.metrics.pairwise.euclidean_distances",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_rational_quadratic_kernel": {
  "lineno": 368,
  "symbols_in_volume": [
   "sklearn.gaussian_process.kernels.RationalQuadratic",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_repr_kernels": {
  "lineno": 340,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_set_get_params": {
  "lineno": 301,
  "symbols_in_volume": [
   "numpy.exp",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_warns_on_get_params_non_attribute": {
  "lineno": 347,
  "symbols_in_volume": [
   "pytest.warns"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_warns_on_get_params_non_attribute.MyKernel": {
  "lineno": 348,
  "symbols_in_volume": [
   "sklearn.gaussian_process.kernels.Kernel"
  ],
  "type": "class"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_warns_on_get_params_non_attribute.MyKernel.__call__": {
  "lineno": 352,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_warns_on_get_params_non_attribute.MyKernel.__init__": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_warns_on_get_params_non_attribute.MyKernel.diag": {
  "lineno": 355,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "sklearn.gaussian_process.tests.test_kernels.test_warns_on_get_params_non_attribute.MyKernel.is_stationary": {
  "lineno": 358,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.impute": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.impute._base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.impute._base.MissingIndicator": {
  "lineno": 457,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.impute._base.MissingIndicator.__init__": {
  "lineno": 522,
  "symbols_in_volume": [
   "numpy.nan",
   "scipy.sparse"
  ],
  "type": "function"
 },
 "sklearn.impute._base.MissingIndicator._fit": {
  "lineno": 609,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.impute._base.MissingIndicator._get_missing_features_info": {
  "lineno": 529,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.flatnonzero",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.impute._base.MissingIndicator._more_tags": {
  "lineno": 720,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.impute._base.MissingIndicator._validate_input": {
  "lineno": 584,
  "symbols_in_volume": [
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.impute._base.MissingIndicator.fit": {
  "lineno": 642,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.impute._base.MissingIndicator.fit_transform": {
  "lineno": 697,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.impute._base.MissingIndicator.transform": {
  "lineno": 660,
  "symbols_in_volume": [
   "numpy.setdiff1d"
  ],
  "type": "function"
 },
 "sklearn.impute._base.SimpleImputer": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.impute._base.SimpleImputer.__init__": {
  "lineno": 205,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "sklearn.impute._base.SimpleImputer._dense_fit": {
  "lineno": 345,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.empty",
   "numpy.full",
   "numpy.logical_not",
   "numpy.ma.getdata",
   "numpy.ma.getmask",
   "numpy.ma.getmaskarray",
   "numpy.ma.masked_array",
   "numpy.ma.mean",
   "numpy.ma.median",
   "numpy.nan"
  ],
  "type": "function"
 },
 "sklearn.impute._base.SimpleImputer._sparse_fit": {
  "lineno": 308,
  "symbols_in_volume": [
   "numpy.diff",
   "numpy.empty",
   "numpy.nan"
  ],
  "type": "function"
 },
 "sklearn.impute._base.SimpleImputer._validate_input": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.impute._base.SimpleImputer.fit": {
  "lineno": 255,
  "symbols_in_volume": [
   "numbers.Real",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.impute._base.SimpleImputer.transform": {
  "lineno": 396,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.diff",
   "numpy.flatnonzero",
   "numpy.int",
   "numpy.logical_not",
   "numpy.nan",
   "numpy.repeat",
   "numpy.sum",
   "numpy.where",
   "scipy.sparse.issparse",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.impute._base._BaseImputer": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.impute._base._BaseImputer.__init__": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "sklearn.impute._base._BaseImputer._concatenate_indicator": {
  "lineno": 99,
  "symbols_in_volume": [
   "numpy.hstack",
   "scipy.sparse.hstack",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.impute._base._BaseImputer._fit_indicator": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.impute._base._BaseImputer._more_tags": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.impute._base._BaseImputer._transform_indicator": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.impute._base._check_inputs_dtype": {
  "lineno": 22,
  "symbols_in_volume": [
   "numbers.Real"
  ],
  "type": "function"
 },
 "sklearn.impute._base._most_frequent": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.nan",
   "scipy.stats.mode",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.impute._iterative": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "sklearn.impute._iterative.IterativeImputer": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.impute._iterative.IterativeImputer.__init__": {
  "lineno": 208,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "sklearn.impute._iterative.IterativeImputer._get_abs_corr_mat": {
  "lineno": 438,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.clip",
   "numpy.corrcoef",
   "numpy.errstate",
   "numpy.fill_diagonal",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "sklearn.impute._iterative.IterativeImputer._get_neighbor_feat_idx": {
  "lineno": 351,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "sklearn.impute._iterative.IterativeImputer._get_ordered_idx": {
  "lineno": 391,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.argsort",
   "numpy.flatnonzero",
   "numpy.shape"
  ],
  "type": "function"
 },
 "sklearn.impute._iterative.IterativeImputer._impute_one_feature": {
  "lineno": 241,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "numpy.clip",
   "numpy.sum",
   "numpy.zeros",
   "scipy.__version__",
   "scipy.stats.truncnorm"
  ],
  "type": "function"
 },
 "sklearn.impute._iterative.IterativeImputer._initial_imputation": {
  "lineno": 477,
  "symbols_in_volume": [
   "numpy.flatnonzero",
   "numpy.isnan",
   "numpy.logical_not"
  ],
  "type": "function"
 },
 "sklearn.impute._iterative.IterativeImputer.fit": {
  "lineno": 692,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.impute._iterative.IterativeImputer.fit_transform": {
  "lineno": 525,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.all",
   "numpy.inf",
   "numpy.linalg.norm",
   "numpy.max",
   "time.time",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.impute._iterative.IterativeImputer.transform": {
  "lineno": 642,
  "symbols_in_volume": [
   "numpy.all",
   "time.time"
  ],
  "type": "function"
 },
 "sklearn.impute._knn": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.impute._knn.KNNImputer": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.impute._knn.KNNImputer.__init__": {
  "lineno": 98,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "sklearn.impute._knn.KNNImputer._calc_impute": {
  "lineno": 110,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.argpartition",
   "numpy.isnan",
   "numpy.ma.array",
   "numpy.ma.average"
  ],
  "type": "function"
 },
 "sklearn.impute._knn.KNNImputer.fit": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.impute._knn.KNNImputer.transform": {
  "lineno": 190,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.any",
   "numpy.arange",
   "numpy.flatnonzero",
   "numpy.int",
   "numpy.logical_not",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.impute._knn.KNNImputer.transform.process_chunk": {
  "lineno": 235,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.flatnonzero",
   "numpy.isnan",
   "numpy.ma.array",
   "numpy.nonzero"
  ],
  "type": "function"
 },
 "sklearn.impute.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.impute.tests.test_base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.impute.tests.test_base.NoFitIndicatorImputer": {
  "lineno": 15,
  "symbols_in_volume": [
   "sklearn.impute._base._BaseImputer"
  ],
  "type": "class"
 },
 "sklearn.impute.tests.test_base.NoFitIndicatorImputer.fit": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.impute.tests.test_base.NoFitIndicatorImputer.transform": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.impute.tests.test_base.NoTransformIndicatorImputer": {
  "lineno": 23,
  "symbols_in_volume": [
   "sklearn.impute._base._BaseImputer"
  ],
  "type": "class"
 },
 "sklearn.impute.tests.test_base.NoTransformIndicatorImputer.fit": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.impute.tests.test_base.NoTransformIndicatorImputer.transform": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.impute.tests.test_base.data": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_base.test_base_imputer_not_fit": {
  "lineno": 32,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_base.test_base_imputer_not_transform": {
  "lineno": 41,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_common": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.impute.IterativeImputer",
   "sklearn.impute.KNNImputer",
   "sklearn.impute.SimpleImputer"
  ],
  "type": "module"
 },
 "sklearn.impute.tests.test_common.test_imputation_missing_value_in_test_array": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.nan",
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_common.test_imputers_add_indicator": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_common.test_imputers_add_indicator_sparse": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "sklearn.utils._testing.assert_allclose_dense_sparse",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.impute.tests.test_impute._check_statistics": {
  "lineno": 32,
  "symbols_in_volume": [
   "scipy.sparse.csc_matrix",
   "scipy.sparse.issparse",
   "sklearn.impute.SimpleImputer",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.safe_mean": {
  "lineno": 131,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.nan"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.safe_median": {
  "lineno": 125,
  "symbols_in_volume": [
   "numpy.median",
   "numpy.nan"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_const_mostf_error_invalid_types": {
  "lineno": 262,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.nan",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.impute.SimpleImputer"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_constant_error_invalid_type": {
  "lineno": 353,
  "symbols_in_volume": [
   "numpy.full",
   "numpy.nan",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.impute.SimpleImputer"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_constant_float": {
  "lineno": 389,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.nan",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "sklearn.impute.SimpleImputer",
   "sklearn.utils._testing.assert_allclose_dense_sparse"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_constant_integer": {
  "lineno": 366,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.impute.SimpleImputer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_constant_object": {
  "lineno": 416,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pytest.mark.parametrize",
   "sklearn.impute.SimpleImputer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_constant_pandas": {
  "lineno": 440,
  "symbols_in_volume": [
   "io.StringIO",
   "numpy.array",
   "pytest.importorskip",
   "pytest.mark.parametrize",
   "sklearn.impute.SimpleImputer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_copy": {
  "lineno": 497,
  "symbols_in_volume": [
   "numpy.all",
   "sklearn.impute.SimpleImputer",
   "sklearn.random_projection._sparse_random_matrix",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_deletion_warning": {
  "lineno": 98,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.ones",
   "pytest.mark.parametrize",
   "pytest.warns",
   "sklearn.impute.SimpleImputer"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_error_invalid_strategy": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.ones",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.impute.SimpleImputer"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_error_sparse_0": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.ones",
   "pytest.mark.parametrize",
   "pytest.raises",
   "scipy.sparse.csc_matrix",
   "sklearn.impute.SimpleImputer"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_mean_median": {
  "lineno": 137,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.empty",
   "numpy.hstack",
   "numpy.isnan",
   "numpy.nan",
   "numpy.random.RandomState",
   "numpy.repeat",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_mean_median_error_invalid_type": {
  "lineno": 235,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.impute.SimpleImputer"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_mean_median_error_invalid_type_list_pandas": {
  "lineno": 247,
  "symbols_in_volume": [
   "pytest.importorskip",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.impute.SimpleImputer"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_median_special_cases": {
  "lineno": 206,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_most_frequent": {
  "lineno": 280,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_most_frequent_objects": {
  "lineno": 303,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pytest.mark.parametrize",
   "sklearn.impute.SimpleImputer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_most_frequent_pandas": {
  "lineno": 327,
  "symbols_in_volume": [
   "io.StringIO",
   "numpy.array",
   "pytest.importorskip",
   "pytest.mark.parametrize",
   "sklearn.impute.SimpleImputer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_order": {
  "lineno": 1278,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "pytest.warns",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.impute.IterativeImputer"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_pipeline_grid_search": {
  "lineno": 478,
  "symbols_in_volume": [
   "sklearn.impute.SimpleImputer",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.pipeline.Pipeline",
   "sklearn.random_projection._sparse_random_matrix",
   "sklearn.tree.DecisionTreeRegressor"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputation_shape": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "sklearn.impute.IterativeImputer",
   "sklearn.impute.SimpleImputer"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_imputer_without_indicator": {
  "lineno": 1238,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "sklearn.impute.IterativeImputer",
   "sklearn.impute.SimpleImputer"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_inconsistent_dtype_X_missing_values": {
  "lineno": 1191,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.impute.IterativeImputer",
   "sklearn.impute.SimpleImputer"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_additive_matrix": {
  "lineno": 874,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.RandomState",
   "numpy.zeros",
   "sklearn.impute.IterativeImputer",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_all_missing": {
  "lineno": 583,
  "symbols_in_volume": [
   "numpy.zeros",
   "sklearn.impute.IterativeImputer",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_catch_warning": {
  "lineno": 948,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.arange",
   "numpy.isnan",
   "numpy.nan",
   "numpy.random.RandomState",
   "pytest.warns",
   "sklearn.datasets.load_boston",
   "sklearn.impute.IterativeImputer"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_clip": {
  "lineno": 661,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.min",
   "numpy.random.RandomState",
   "sklearn.impute.IterativeImputer",
   "sklearn.random_projection._sparse_random_matrix",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_clip_truncnorm": {
  "lineno": 680,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.min",
   "numpy.random.RandomState",
   "sklearn.impute.IterativeImputer",
   "sklearn.random_projection._sparse_random_matrix",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_early_stopping": {
  "lineno": 913,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.nan",
   "numpy.random.RandomState",
   "sklearn.impute.IterativeImputer",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_error_param": {
  "lineno": 902,
  "symbols_in_volume": [
   "numpy.zeros",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.impute.IterativeImputer"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_estimators": {
  "lineno": 632,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.dummy.DummyRegressor",
   "sklearn.impute.IterativeImputer",
   "sklearn.linear_model.ARDRegression",
   "sklearn.linear_model.BayesianRidge",
   "sklearn.linear_model.RidgeCV",
   "sklearn.random_projection._sparse_random_matrix"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_imputation_order": {
  "lineno": 592,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.arange",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.impute.IterativeImputer",
   "sklearn.random_projection._sparse_random_matrix"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_missing_at_transform": {
  "lineno": 738,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.impute.IterativeImputer",
   "sklearn.impute.SimpleImputer",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_no_missing": {
  "lineno": 814,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.RandomState",
   "sklearn.impute.IterativeImputer",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_one_feature": {
  "lineno": 466,
  "symbols_in_volume": [
   "numpy.nan",
   "pytest.mark.parametrize",
   "sklearn.impute.IterativeImputer"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_rank_one": {
  "lineno": 828,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.nan",
   "numpy.random.RandomState",
   "sklearn.impute.IterativeImputer",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_skip_non_missing": {
  "lineno": 974,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.mean",
   "numpy.nan",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.impute.IterativeImputer",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_transform_recovery": {
  "lineno": 845,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.nan",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.impute.IterativeImputer",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_transform_stochasticity": {
  "lineno": 765,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.random.RandomState",
   "pytest.approx",
   "pytest.importorskip",
   "sklearn.impute.IterativeImputer",
   "sklearn.random_projection._sparse_random_matrix",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_truncated_normal_posterior": {
  "lineno": 702,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.random.RandomState",
   "pytest.importorskip",
   "scipy.stats.kstest",
   "sklearn.impute.IterativeImputer"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_verbose": {
  "lineno": 569,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.impute.IterativeImputer",
   "sklearn.random_projection._sparse_random_matrix"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_iterative_imputer_zero_iters": {
  "lineno": 543,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.nan",
   "numpy.random.RandomState",
   "sklearn.impute.IterativeImputer",
   "sklearn.random_projection._sparse_random_matrix",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_missing_indicator_error": {
  "lineno": 1004,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.impute.MissingIndicator"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_missing_indicator_new": {
  "lineno": 1026,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.int32",
   "numpy.nan",
   "numpy.ndarray",
   "pytest.mark.parametrize",
   "scipy.sparse.bsr_matrix",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.lil_matrix",
   "sklearn.impute.MissingIndicator",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_missing_indicator_no_missing": {
  "lineno": 1213,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.impute.MissingIndicator"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_missing_indicator_raise_on_sparse_with_missing_0": {
  "lineno": 1091,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "pytest.raises",
   "scipy.sparse.bsr_matrix",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.lil_matrix",
   "sklearn.impute.MissingIndicator"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_missing_indicator_sparse_no_explicit_zeros": {
  "lineno": 1225,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "sklearn.impute.MissingIndicator"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_missing_indicator_sparse_param": {
  "lineno": 1118,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.nan",
   "numpy.ndarray",
   "pytest.mark.parametrize",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.issparse",
   "scipy.sparse.lil_matrix",
   "sklearn.impute.MissingIndicator"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_missing_indicator_string": {
  "lineno": 1160,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.impute.MissingIndicator",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_missing_indicator_with_imputer": {
  "lineno": 1168,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pytest.mark.parametrize",
   "sklearn.impute.MissingIndicator",
   "sklearn.impute.SimpleImputer",
   "sklearn.pipeline.make_union",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_impute.test_simple_imputation_add_indicator_sparse_matrix": {
  "lineno": 1249,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pytest.mark.parametrize",
   "scipy.sparse.bsr_matrix",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.issparse",
   "scipy.sparse.lil_matrix",
   "sklearn.impute.SimpleImputer",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_knn": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.impute.tests.test_knn._missing_mean": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.ma.array",
   "numpy.nan",
   "sklearn.utils._mask._get_mask"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_imputer_all_samples_are_neighbors": {
  "lineno": 267,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pytest.mark.parametrize",
   "sklearn.impute.KNNImputer",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_imputer_callable_metric": {
  "lineno": 497,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "sklearn.impute.KNNImputer",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_imputer_callable_metric.custom_callable": {
  "lineno": 500,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.isnan",
   "numpy.ma.array",
   "numpy.nan",
   "numpy.nansum"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_imputer_default_with_invalid_input": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "numpy.nan",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.impute.KNNImputer"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_imputer_distance_weighted_not_enough_neighbors": {
  "lineno": 607,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.average",
   "numpy.nan",
   "pytest.mark.parametrize",
   "sklearn.config_context",
   "sklearn.impute.KNNImputer",
   "sklearn.metrics.pairwise.pairwise_distances",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_imputer_drops_all_nan_features": {
  "lineno": 589,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pytest.mark.parametrize",
   "sklearn.impute.KNNImputer",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_imputer_not_enough_valid_distances": {
  "lineno": 566,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pytest.mark.parametrize",
   "sklearn.impute.KNNImputer",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_imputer_one_n_neighbors": {
  "lineno": 239,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pytest.mark.parametrize",
   "sklearn.impute.KNNImputer",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_imputer_removes_all_na_features": {
  "lineno": 103,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.isnan",
   "numpy.nan",
   "pytest.mark.parametrize",
   "sklearn.impute.KNNImputer",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_imputer_shape": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.rand",
   "pytest.mark.parametrize",
   "sklearn.impute.KNNImputer"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_imputer_verify": {
  "lineno": 157,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pytest.mark.parametrize",
   "sklearn.impute.KNNImputer",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_imputer_weight_distance": {
  "lineno": 341,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.average",
   "numpy.ma.average",
   "numpy.ma.masked_invalid",
   "numpy.nan",
   "numpy.sqrt",
   "pytest.mark.parametrize",
   "sklearn.impute.KNNImputer",
   "sklearn.metrics.pairwise.nan_euclidean_distances",
   "sklearn.metrics.pairwise.pairwise_distances",
   "sklearn.neighbors.KNeighborsRegressor",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_imputer_weight_uniform": {
  "lineno": 299,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pytest.mark.parametrize",
   "sklearn.impute.KNNImputer",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_imputer_weight_uniform.no_weight": {
  "lineno": 327,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_imputer_weight_uniform.uniform_weight": {
  "lineno": 334,
  "symbols_in_volume": [
   "numpy.ones_like"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_imputer_with_simple_example": {
  "lineno": 526,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.mean",
   "numpy.nan",
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize",
   "sklearn.config_context",
   "sklearn.impute.KNNImputer",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_imputer_zero_nan_imputes_the_same": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pytest.mark.parametrize",
   "sklearn.impute.KNNImputer",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.impute.tests.test_knn.test_knn_tags": {
  "lineno": 647,
  "symbols_in_volume": [
   "numpy.nan",
   "pytest.mark.parametrize",
   "sklearn.impute.KNNImputer"
  ],
  "type": "function"
 },
 "sklearn.inspection": {
  "lineno": null,
  "symbols_in_volume": [
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "module"
 },
 "sklearn.inspection._partial_dependence": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.inspection._partial_dependence.PartialDependenceDisplay": {
  "lineno": 725,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.inspection._partial_dependence.PartialDependenceDisplay.__init__": {
  "lineno": 803,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.inspection._partial_dependence.PartialDependenceDisplay.plot": {
  "lineno": 812,
  "symbols_in_volume": [
   "itertools.count",
   "matplotlib.gridspec.GridSpecFromSubplotSpec",
   "matplotlib.pyplot.Axes",
   "matplotlib.pyplot.subplots",
   "matplotlib.transforms.blended_transform_factory",
   "numpy.asarray",
   "numpy.ceil",
   "numpy.empty",
   "numpy.empty_like",
   "numpy.linspace",
   "numpy.meshgrid",
   "numpy.object"
  ],
  "type": "function"
 },
 "sklearn.inspection._partial_dependence._grid_from_X": {
  "lineno": 39,
  "symbols_in_volume": [
   "collections.abc.Iterable",
   "numpy.allclose",
   "numpy.linspace",
   "numpy.unique",
   "scipy.stats.mstats.mquantiles"
  ],
  "type": "function"
 },
 "sklearn.inspection._partial_dependence._partial_dependence_brute": {
  "lineno": 111,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.mean"
  ],
  "type": "function"
 },
 "sklearn.inspection._partial_dependence._partial_dependence_recursion": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.inspection._partial_dependence.partial_dependence": {
  "lineno": 180,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.asarray",
   "numpy.int32",
   "numpy.less",
   "numpy.ndarray",
   "numpy.object",
   "scipy.sparse.issparse",
   "sklearn.ensemble._hist_gradient_boosting.gradient_boosting.BaseHistGradientBoosting"
  ],
  "type": "function"
 },
 "sklearn.inspection._partial_dependence.plot_partial_dependence": {
  "lineno": 416,
  "symbols_in_volume": [
   "itertools.chain.from_iterable",
   "joblib.Parallel",
   "joblib.delayed",
   "matplotlib.pyplot.Axes",
   "numbers.Integral",
   "numpy.arange",
   "numpy.asarray",
   "numpy.object",
   "numpy.searchsorted",
   "numpy.size",
   "scipy.sparse.issparse",
   "scipy.stats.mstats.mquantiles",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.inspection._partial_dependence.plot_partial_dependence.convert_feature": {
  "lineno": 632,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.inspection._permutation_importance": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.inspection._permutation_importance._calculate_permutation_scores": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.inspection._permutation_importance.permutation_importance": {
  "lineno": 40,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed",
   "numpy.array",
   "numpy.iinfo",
   "numpy.int32",
   "numpy.mean",
   "numpy.std"
  ],
  "type": "function"
 },
 "sklearn.inspection.partial_dependence": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.inspection.partial_dependence.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.inspection.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.inspection.tests.test_partial_dependence": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.datasets.load_iris",
   "sklearn.datasets.make_classification",
   "sklearn.datasets.make_regression"
  ],
  "type": "module"
 },
 "sklearn.inspection.tests.test_partial_dependence.NoPredictProbaNoDecisionFunction": {
  "lineno": 296,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.ClassifierMixin"
  ],
  "type": "class"
 },
 "sklearn.inspection.tests.test_partial_dependence.NoPredictProbaNoDecisionFunction.fit": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_grid_from_X": {
  "lineno": 106,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.random.RandomState",
   "sklearn.inspection._partial_dependence._grid_from_X",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_grid_from_X_error": {
  "lineno": 144,
  "symbols_in_volume": [
   "numpy.asarray",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.inspection._partial_dependence._grid_from_X"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_multiclass_multioutput": {
  "lineno": 272,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.datasets.make_classification",
   "sklearn.ensemble.ExtraTreesClassifier",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.inspection.partial_dependence",
   "sklearn.neighbors.KNeighborsClassifier",
   "sklearn.neighbors.RadiusNeighborsClassifier",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.tree.ExtraTreeClassifier"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_output_shape": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.asarray",
   "pytest.mark.parametrize",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.inspection.partial_dependence",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.linear_model.MultiTaskLasso",
   "sklearn.tree.DecisionTreeRegressor"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_partial_dependence_X_list": {
  "lineno": 391,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.datasets.make_classification",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.inspection.partial_dependence",
   "sklearn.linear_model.LinearRegression"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_partial_dependence_dataframe": {
  "lineno": 476,
  "symbols_in_volume": [
   "pytest.importorskip",
   "pytest.mark.parametrize",
   "sklearn.base.clone",
   "sklearn.compose.make_column_transformer",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.inspection.partial_dependence",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.pipeline.make_pipeline",
   "sklearn.preprocessing.RobustScaler",
   "sklearn.preprocessing.StandardScaler",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_partial_dependence_easy_target": {
  "lineno": 235,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.ensemble.HistGradientBoostingRegressor",
   "sklearn.inspection.partial_dependence",
   "sklearn.linear_model.LinearRegression",
   "sklearn.metrics.r2_score",
   "sklearn.preprocessing.PolynomialFeatures"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_partial_dependence_error": {
  "lineno": 303,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.cluster.KMeans",
   "sklearn.datasets.make_classification",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.inspection.partial_dependence",
   "sklearn.linear_model.LinearRegression"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_partial_dependence_feature_type": {
  "lineno": 536,
  "symbols_in_volume": [
   "pytest.importorskip",
   "pytest.mark.parametrize",
   "sklearn.compose.make_column_transformer",
   "sklearn.inspection.partial_dependence",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.pipeline.make_pipeline",
   "sklearn.preprocessing.RobustScaler",
   "sklearn.preprocessing.StandardScaler"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_partial_dependence_helpers": {
  "lineno": 162,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "numpy.int32",
   "pytest.mark.parametrize",
   "sklearn.datasets.make_regression",
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.ensemble.HistGradientBoostingRegressor",
   "sklearn.inspection._partial_dependence._partial_dependence_brute",
   "sklearn.inspection._partial_dependence._partial_dependence_recursion",
   "sklearn.linear_model.LinearRegression"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_partial_dependence_pipeline": {
  "lineno": 449,
  "symbols_in_volume": [
   "sklearn.datasets.load_iris",
   "sklearn.dummy.DummyClassifier",
   "sklearn.inspection.partial_dependence",
   "sklearn.pipeline.make_pipeline",
   "sklearn.preprocessing.StandardScaler",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_partial_dependence_sample_weight": {
  "lineno": 422,
  "symbols_in_volume": [
   "numpy.c_",
   "numpy.corrcoef",
   "numpy.ones",
   "numpy.random.RandomState",
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.inspection.partial_dependence"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_partial_dependence_slice_error": {
  "lineno": 345,
  "symbols_in_volume": [
   "pytest.importorskip",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.datasets.make_classification",
   "sklearn.inspection.partial_dependence",
   "sklearn.linear_model.LogisticRegression"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_partial_dependence_unfitted": {
  "lineno": 565,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.compose.make_column_transformer",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.exceptions.NotFittedError",
   "sklearn.inspection.partial_dependence",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.pipeline.make_pipeline",
   "sklearn.preprocessing.RobustScaler",
   "sklearn.preprocessing.StandardScaler"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_partial_dependence_unknown_feature_indices": {
  "lineno": 361,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.datasets.make_classification",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.inspection.partial_dependence",
   "sklearn.linear_model.LinearRegression"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_partial_dependence_unknown_feature_string": {
  "lineno": 375,
  "symbols_in_volume": [
   "pytest.importorskip",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.datasets.make_classification",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.inspection.partial_dependence",
   "sklearn.linear_model.LinearRegression"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_recursion_decision_function": {
  "lineno": 209,
  "symbols_in_volume": [
   "numpy.mean",
   "pytest.mark.parametrize",
   "sklearn.datasets.make_classification",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.ensemble.HistGradientBoostingClassifier",
   "sklearn.inspection.partial_dependence",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_partial_dependence.test_warning_recursion_non_constant_init": {
  "lineno": 403,
  "symbols_in_volume": [
   "pytest.warns",
   "sklearn.dummy.DummyClassifier",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.inspection.partial_dependence",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_permutation_importance": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.inspection.tests.test_permutation_importance.test_permutation_importance_correlated_feature_regression": {
  "lineno": 27,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.hstack",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.datasets.load_boston",
   "sklearn.ensemble.RandomForestRegressor",
   "sklearn.inspection.permutation_importance"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_permutation_importance.test_permutation_importance_correlated_feature_regression_pandas": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.random.RandomState",
   "pytest.importorskip",
   "pytest.mark.parametrize",
   "sklearn.datasets.load_iris",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.inspection.permutation_importance"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_permutation_importance.test_permutation_importance_equivalence_array_dataframe": {
  "lineno": 201,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.hstack",
   "numpy.testing.assert_allclose",
   "pytest.importorskip",
   "pytest.mark.parametrize",
   "sklearn.datasets.make_regression",
   "sklearn.ensemble.RandomForestRegressor",
   "sklearn.inspection.permutation_importance",
   "sklearn.preprocessing.KBinsDiscretizer"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_permutation_importance.test_permutation_importance_equivalence_sequential_parallel": {
  "lineno": 161,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "sklearn.datasets.make_regression",
   "sklearn.inspection.permutation_importance",
   "sklearn.linear_model.LinearRegression",
   "sklearn.utils.parallel_backend"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_permutation_importance.test_permutation_importance_large_memmaped_data": {
  "lineno": 259,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "pytest.mark.parametrize",
   "sklearn.datasets.make_classification",
   "sklearn.dummy.DummyClassifier",
   "sklearn.inspection.permutation_importance",
   "sklearn.utils._testing._convert_container"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_permutation_importance.test_permutation_importance_linear_regresssion": {
  "lineno": 144,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "sklearn.datasets.make_regression",
   "sklearn.inspection.permutation_importance",
   "sklearn.linear_model.LinearRegression",
   "sklearn.preprocessing.scale"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_permutation_importance.test_permutation_importance_mixed_types": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.allclose",
   "numpy.array",
   "numpy.nan",
   "numpy.random.RandomState",
   "sklearn.impute.SimpleImputer",
   "sklearn.inspection.permutation_importance",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.pipeline.make_pipeline"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_permutation_importance.test_permutation_importance_mixed_types_pandas": {
  "lineno": 117,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.nan",
   "numpy.random.RandomState",
   "pytest.importorskip",
   "sklearn.compose.ColumnTransformer",
   "sklearn.impute.SimpleImputer",
   "sklearn.inspection.permutation_importance",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.pipeline.make_pipeline",
   "sklearn.preprocessing.OneHotEncoder",
   "sklearn.preprocessing.StandardScaler"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_plot_partial_dependence": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "sklearn.datasets.make_classification",
   "sklearn.datasets.make_regression"
  ],
  "type": "module"
 },
 "sklearn.inspection.tests.test_plot_partial_dependence.boston": {
  "lineno": 24,
  "symbols_in_volume": [
   "pytest.fixture",
   "sklearn.datasets.load_boston"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_plot_partial_dependence.clf_boston": {
  "lineno": 29,
  "symbols_in_volume": [
   "pytest.fixture",
   "sklearn.ensemble.GradientBoostingRegressor"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_plot_partial_dependence.test_plot_partial_dependence": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.arange",
   "numpy.linspace",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "scipy.stats.mstats.mquantiles",
   "sklearn.inspection.plot_partial_dependence"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_plot_partial_dependence.test_plot_partial_dependence_custom_axes": {
  "lineno": 162,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_allclose",
   "sklearn.inspection.plot_partial_dependence"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_plot_partial_dependence.test_plot_partial_dependence_dataframe": {
  "lineno": 373,
  "symbols_in_volume": [
   "pytest.importorskip",
   "sklearn.inspection.plot_partial_dependence"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_plot_partial_dependence.test_plot_partial_dependence_error": {
  "lineno": 388,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.inspection.plot_partial_dependence",
   "sklearn.linear_model.LinearRegression"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_plot_partial_dependence.test_plot_partial_dependence_feature_name_reuse": {
  "lineno": 280,
  "symbols_in_volume": [
   "sklearn.inspection.plot_partial_dependence"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_plot_partial_dependence.test_plot_partial_dependence_fig_deprecated": {
  "lineno": 440,
  "symbols_in_volume": [
   "pytest.warns",
   "sklearn.datasets.make_regression",
   "sklearn.inspection.plot_partial_dependence",
   "sklearn.linear_model.LinearRegression"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_plot_partial_dependence.test_plot_partial_dependence_incorrent_num_axes": {
  "lineno": 225,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.inspection.plot_partial_dependence"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_plot_partial_dependence.test_plot_partial_dependence_multiclass": {
  "lineno": 298,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "sklearn.datasets.load_iris",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.inspection.plot_partial_dependence"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_plot_partial_dependence.test_plot_partial_dependence_multiclass_error": {
  "lineno": 423,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.datasets.load_iris",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.inspection.plot_partial_dependence"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_plot_partial_dependence.test_plot_partial_dependence_multioutput": {
  "lineno": 349,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.inspection.plot_partial_dependence",
   "sklearn.linear_model.LinearRegression"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_plot_partial_dependence.test_plot_partial_dependence_passing_numpy_axes": {
  "lineno": 197,
  "symbols_in_volume": [
   "numpy.all",
   "sklearn.inspection.plot_partial_dependence",
   "sklearn.linear_model.LinearRegression"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_plot_partial_dependence.test_plot_partial_dependence_str_features": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_allclose",
   "pytest.importorskip",
   "pytest.mark.parametrize",
   "sklearn.inspection.plot_partial_dependence",
   "sklearn.utils._testing._convert_container"
  ],
  "type": "function"
 },
 "sklearn.inspection.tests.test_plot_partial_dependence.test_plot_partial_dependence_with_same_axes": {
  "lineno": 252,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.inspection.plot_partial_dependence"
  ],
  "type": "function"
 },
 "sklearn.isotonic": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.isotonic.IsotonicRegression": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.isotonic.IsotonicRegression.__getstate__": {
  "lineno": 403,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.isotonic.IsotonicRegression.__init__": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.isotonic.IsotonicRegression.__setstate__": {
  "lineno": 410,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.isotonic.IsotonicRegression._build_f": {
  "lineno": 235,
  "symbols_in_volume": [
   "scipy.interpolate.interp1d"
  ],
  "type": "function"
 },
 "sklearn.isotonic.IsotonicRegression._build_y": {
  "lineno": 252,
  "symbols_in_volume": [
   "numpy.lexsort",
   "numpy.logical_or",
   "numpy.max",
   "numpy.min",
   "numpy.not_equal",
   "numpy.ones"
  ],
  "type": "function"
 },
 "sklearn.isotonic.IsotonicRegression._check_fit_data": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.isotonic.IsotonicRegression._more_tags": {
  "lineno": 419,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.isotonic.IsotonicRegression.fit": {
  "lineno": 304,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64"
  ],
  "type": "function"
 },
 "sklearn.isotonic.IsotonicRegression.predict": {
  "lineno": 388,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.isotonic.IsotonicRegression.transform": {
  "lineno": 348,
  "symbols_in_volume": [
   "numpy.clip",
   "numpy.float64"
  ],
  "type": "function"
 },
 "sklearn.isotonic.check_increasing": {
  "lineno": 20,
  "symbols_in_volume": [
   "math.log",
   "math.sqrt",
   "math.tanh",
   "numpy.sign",
   "scipy.stats.spearmanr",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.isotonic.isotonic_regression": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.clip",
   "numpy.float32",
   "numpy.float64",
   "numpy.inf",
   "numpy.ones",
   "numpy.s_"
  ],
  "type": "function"
 },
 "sklearn.kernel_approximation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.kernel_approximation.AdditiveChi2Sampler": {
  "lineno": 242,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.kernel_approximation.AdditiveChi2Sampler.__init__": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.kernel_approximation.AdditiveChi2Sampler._more_tags": {
  "lineno": 428,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.kernel_approximation.AdditiveChi2Sampler._transform_dense": {
  "lineno": 374,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.cosh",
   "numpy.hstack",
   "numpy.log",
   "numpy.pi",
   "numpy.sin",
   "numpy.sqrt",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "sklearn.kernel_approximation.AdditiveChi2Sampler._transform_sparse": {
  "lineno": 400,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.cosh",
   "numpy.log",
   "numpy.pi",
   "numpy.sin",
   "numpy.sqrt",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.hstack"
  ],
  "type": "function"
 },
 "sklearn.kernel_approximation.AdditiveChi2Sampler.fit": {
  "lineno": 313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.kernel_approximation.AdditiveChi2Sampler.transform": {
  "lineno": 343,
  "symbols_in_volume": [
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.kernel_approximation.Nystroem": {
  "lineno": 432,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.kernel_approximation.Nystroem.__init__": {
  "lineno": 524,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.kernel_approximation.Nystroem._get_kernel_params": {
  "lineno": 602,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.kernel_approximation.Nystroem.fit": {
  "lineno": 534,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.maximum",
   "numpy.sqrt",
   "scipy.linalg.svd",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.kernel_approximation.Nystroem.transform": {
  "lineno": 576,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "sklearn.kernel_approximation.RBFSampler": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.kernel_approximation.RBFSampler.__init__": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.kernel_approximation.RBFSampler.fit": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.pi",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "sklearn.kernel_approximation.RBFSampler.transform": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "sklearn.kernel_approximation.SkewedChi2Sampler": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.kernel_approximation.SkewedChi2Sampler.__init__": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.kernel_approximation.SkewedChi2Sampler.fit": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.pi",
   "numpy.tan"
  ],
  "type": "function"
 },
 "sklearn.kernel_approximation.SkewedChi2Sampler.transform": {
  "lineno": 211,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.log",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "sklearn.kernel_ridge": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.kernel_ridge.KernelRidge": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.kernel_ridge.KernelRidge.__init__": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.kernel_ridge.KernelRidge._get_kernel": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.kernel_ridge.KernelRidge._pairwise": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.kernel_ridge.KernelRidge.fit": {
  "lineno": 130,
  "symbols_in_volume": [
   "numpy.atleast_1d"
  ],
  "type": "function"
 },
 "sklearn.kernel_ridge.KernelRidge.predict": {
  "lineno": 175,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "sklearn.linear_model": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.linear_model._base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.linear_model._base.LinearClassifierMixin": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._base.LinearClassifierMixin._predict_proba_lr": {
  "lineno": 300,
  "symbols_in_volume": [
   "numpy.vstack",
   "scipy.special.expit"
  ],
  "type": "function"
 },
 "sklearn.linear_model._base.LinearClassifierMixin.decision_function": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._base.LinearClassifierMixin.predict": {
  "lineno": 279,
  "symbols_in_volume": [
   "numpy.int"
  ],
  "type": "function"
 },
 "sklearn.linear_model._base.LinearModel": {
  "lineno": 197,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.linear_model._base.LinearModel._decision_function": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._base.LinearModel._set_intercept": {
  "lineno": 229,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "sklearn.linear_model._base.LinearModel.fit": {
  "lineno": 200,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.linear_model._base.LinearModel.predict": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._base.LinearRegression": {
  "lineno": 375,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._base.LinearRegression.__init__": {
  "lineno": 460,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._base.LinearRegression.fit": {
  "lineno": 467,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed",
   "numpy.ravel",
   "numpy.vstack",
   "scipy.linalg.lstsq",
   "scipy.sparse.issparse",
   "scipy.sparse.linalg.LinearOperator"
  ],
  "type": "function"
 },
 "sklearn.linear_model._base.LinearRegression.fit.matvec": {
  "lineno": 510,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._base.LinearRegression.fit.rmatvec": {
  "lineno": 513,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.linear_model._base.SparseCoefMixin": {
  "lineno": 317,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._base.SparseCoefMixin.densify": {
  "lineno": 323,
  "symbols_in_volume": [
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.linear_model._base.SparseCoefMixin.sparsify": {
  "lineno": 343,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "sklearn.linear_model._base._pre_fit": {
  "lineno": 542,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.dot",
   "numpy.empty",
   "numpy.find_common_type",
   "numpy.ones",
   "numpy.zeros",
   "scipy.sparse.isspmatrix",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.linear_model._base._preprocess_data": {
  "lineno": 101,
  "symbols_in_volume": [
   "numbers.Number",
   "numpy.asarray",
   "numpy.average",
   "numpy.ones",
   "numpy.sqrt",
   "numpy.zeros",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.linear_model._base._rescale_data": {
  "lineno": 182,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.full",
   "numpy.sqrt",
   "scipy.sparse.dia_matrix"
  ],
  "type": "function"
 },
 "sklearn.linear_model._base.make_dataset": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.ascontiguousarray",
   "numpy.float32",
   "numpy.iinfo",
   "numpy.int32",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.linear_model._bayes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.linear_model._bayes.ARDRegression": {
  "lineno": 384,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._bayes.ARDRegression.__init__": {
  "lineno": 494,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._bayes.ARDRegression.fit": {
  "lineno": 511,
  "symbols_in_volume": [
   "math.log",
   "numpy.abs",
   "numpy.copy",
   "numpy.diag",
   "numpy.dot",
   "numpy.finfo",
   "numpy.float64",
   "numpy.log",
   "numpy.ones",
   "numpy.sum",
   "numpy.var",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.linear_model._bayes.ARDRegression.fit.update_coeff": {
  "lineno": 570,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "sklearn.linear_model._bayes.ARDRegression.fit.update_sigma": {
  "lineno": 558,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.eye",
   "numpy.reshape"
  ],
  "type": "function"
 },
 "sklearn.linear_model._bayes.ARDRegression.predict": {
  "lineno": 620,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "sklearn.linear_model._bayes.BayesianRidge": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._bayes.BayesianRidge.__init__": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._bayes.BayesianRidge._log_marginal_likelihood": {
  "lineno": 349,
  "symbols_in_volume": [
   "math.log",
   "numpy.array",
   "numpy.full",
   "numpy.log",
   "numpy.pi",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.linear_model._bayes.BayesianRidge._update_coef_": {
  "lineno": 326,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.newaxis",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.linear_model._bayes.BayesianRidge.fit": {
  "lineno": 168,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.copy",
   "numpy.dot",
   "numpy.finfo",
   "numpy.float64",
   "numpy.newaxis",
   "numpy.sum",
   "numpy.var",
   "scipy.linalg.svd"
  ],
  "type": "function"
 },
 "sklearn.linear_model._bayes.BayesianRidge.predict": {
  "lineno": 294,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.linear_model._coordinate_descent.ElasticNet": {
  "lineno": 502,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._coordinate_descent.ElasticNet.__init__": {
  "lineno": 642,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.ElasticNet._decision_function": {
  "lineno": 777,
  "symbols_in_volume": [
   "scipy.sparse.isspmatrix"
  ],
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.ElasticNet.fit": {
  "lineno": 659,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.float32",
   "numpy.float64",
   "numpy.newaxis",
   "numpy.zeros",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.ElasticNet.sparse_coef_": {
  "lineno": 772,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.ElasticNetCV": {
  "lineno": 1396,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._coordinate_descent.ElasticNetCV.__init__": {
  "lineno": 1578,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.ElasticNetCV._more_tags": {
  "lineno": 1600,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.Lasso": {
  "lineno": 800,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._coordinate_descent.Lasso.__init__": {
  "lineno": 919,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.LassoCV": {
  "lineno": 1228,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._coordinate_descent.LassoCV.__init__": {
  "lineno": 1382,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.LassoCV._more_tags": {
  "lineno": 1393,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.LinearModelCV": {
  "lineno": 1031,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.linear_model._coordinate_descent.LinearModelCV.__init__": {
  "lineno": 1034,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.LinearModelCV.fit": {
  "lineno": 1055,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed",
   "joblib.effective_n_jobs",
   "numpy.argmin",
   "numpy.asarray",
   "numpy.atleast_1d",
   "numpy.float32",
   "numpy.float64",
   "numpy.inf",
   "numpy.may_share_memory",
   "numpy.mean",
   "numpy.ndarray",
   "numpy.reshape",
   "numpy.rollaxis",
   "numpy.sort",
   "numpy.squeeze",
   "numpy.tile",
   "scipy.sparse.isspmatrix"
  ],
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.MultiTaskElasticNet": {
  "lineno": 1607,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._coordinate_descent.MultiTaskElasticNet.__init__": {
  "lineno": 1719,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.MultiTaskElasticNet._more_tags": {
  "lineno": 1797,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.MultiTaskElasticNet.fit": {
  "lineno": 1733,
  "symbols_in_volume": [
   "numpy.asfortranarray",
   "numpy.float32",
   "numpy.float64",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV": {
  "lineno": 1918,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV.__init__": {
  "lineno": 2084,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV._more_tags": {
  "lineno": 2104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.MultiTaskLasso": {
  "lineno": 1801,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._coordinate_descent.MultiTaskLasso.__init__": {
  "lineno": 1903,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.MultiTaskLassoCV": {
  "lineno": 2108,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._coordinate_descent.MultiTaskLassoCV.__init__": {
  "lineno": 2257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.MultiTaskLassoCV._more_tags": {
  "lineno": 2268,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent._alpha_grid": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.finfo",
   "numpy.log10",
   "numpy.logspace",
   "numpy.newaxis",
   "numpy.sqrt",
   "numpy.sum",
   "scipy.sparse.isspmatrix"
  ],
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent._path_residuals": {
  "lineno": 934,
  "symbols_in_volume": [
   "numpy.atleast_1d",
   "numpy.dot",
   "numpy.flatnonzero",
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.enet_path": {
  "lineno": 266,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.asfortranarray",
   "numpy.empty",
   "numpy.float32",
   "numpy.float64",
   "numpy.ndarray",
   "numpy.sort",
   "numpy.zeros",
   "scipy.sparse.isspmatrix",
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "sklearn.linear_model._coordinate_descent.lasso_path": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._huber": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.linear_model._huber.HuberRegressor": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._huber.HuberRegressor.__init__": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._huber.HuberRegressor.fit": {
  "lineno": 236,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.concatenate",
   "numpy.finfo",
   "numpy.float32",
   "numpy.float64",
   "numpy.inf",
   "numpy.tile",
   "numpy.zeros",
   "scipy.optimize.minimize"
  ],
  "type": "function"
 },
 "sklearn.linear_model._huber._huber_loss_and_gradient": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.count_nonzero",
   "numpy.dot",
   "numpy.ones_like",
   "numpy.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.linear_model._least_angle": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.linear_model._least_angle.Lars": {
  "lineno": 764,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._least_angle.Lars.__init__": {
  "lineno": 856,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float"
  ],
  "type": "function"
 },
 "sklearn.linear_model._least_angle.Lars._fit": {
  "lineno": 878,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.linear_model._least_angle.Lars._get_gram": {
  "lineno": 868,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "sklearn.linear_model._least_angle.Lars.fit": {
  "lineno": 936,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._least_angle.LarsCV": {
  "lineno": 1232,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._least_angle.LarsCV.__init__": {
  "lineno": 1347,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float"
  ],
  "type": "function"
 },
 "sklearn.linear_model._least_angle.LarsCV._more_tags": {
  "lineno": 1361,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._least_angle.LarsCV.fit": {
  "lineno": 1364,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed",
   "numpy.all",
   "numpy.argmin",
   "numpy.concatenate",
   "numpy.empty",
   "numpy.isfinite",
   "numpy.mean",
   "numpy.newaxis",
   "numpy.r_",
   "numpy.unique",
   "scipy.interpolate.interp1d",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.linear_model._least_angle.LassoLars": {
  "lineno": 972,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._least_angle.LassoLars.__init__": {
  "lineno": 1092,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float"
  ],
  "type": "function"
 },
 "sklearn.linear_model._least_angle.LassoLarsCV": {
  "lineno": 1445,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._least_angle.LassoLarsCV.__init__": {
  "lineno": 1588,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float"
  ],
  "type": "function"
 },
 "sklearn.linear_model._least_angle.LassoLarsIC": {
  "lineno": 1607,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._least_angle.LassoLarsIC.__init__": {
  "lineno": 1721,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float"
  ],
  "type": "function"
 },
 "sklearn.linear_model._least_angle.LassoLarsIC._more_tags": {
  "lineno": 1735,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._least_angle.LassoLarsIC.fit": {
  "lineno": 1738,
  "symbols_in_volume": [
   "math.log",
   "numpy.abs",
   "numpy.any",
   "numpy.argmin",
   "numpy.dot",
   "numpy.finfo",
   "numpy.int",
   "numpy.mean",
   "numpy.newaxis",
   "numpy.sum",
   "numpy.var",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.linear_model._least_angle._check_copy_and_writeable": {
  "lineno": 1111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._least_angle._lars_path_residues": {
  "lineno": 1117,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.finfo",
   "numpy.flatnonzero",
   "numpy.float",
   "numpy.newaxis",
   "numpy.sqrt",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.linear_model._least_angle._lars_path_solver": {
  "lineno": 284,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.append",
   "numpy.arange",
   "numpy.argmax",
   "numpy.array",
   "numpy.delete",
   "numpy.dot",
   "numpy.empty",
   "numpy.fabs",
   "numpy.finfo",
   "numpy.float",
   "numpy.float32",
   "numpy.int8",
   "numpy.isfinite",
   "numpy.newaxis",
   "numpy.ones_like",
   "numpy.r_",
   "numpy.resize",
   "numpy.sign",
   "numpy.sqrt",
   "numpy.sum",
   "numpy.where",
   "numpy.zeros",
   "numpy.zeros_like",
   "scipy.linalg.get_blas_funcs",
   "scipy.linalg.lapack.get_lapack_funcs",
   "scipy.linalg.solve_triangular",
   "sys.stdout.flush",
   "sys.stdout.write",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.linear_model._least_angle.lars_path": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.linear_model._least_angle.lars_path_gram": {
  "lineno": 168,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float"
  ],
  "type": "function"
 },
 "sklearn.linear_model._logistic": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.linear_model._logistic.LogisticRegression": {
  "lineno": 1191,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._logistic.LogisticRegression.__init__": {
  "lineno": 1437,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._logistic.LogisticRegression.fit": {
  "lineno": 1459,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed",
   "joblib.effective_n_jobs",
   "numbers.Number",
   "numpy.append",
   "numpy.array",
   "numpy.asarray",
   "numpy.float32",
   "numpy.float64",
   "numpy.inf",
   "numpy.int32",
   "numpy.newaxis",
   "numpy.unique",
   "numpy.zeros",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.linear_model._logistic.LogisticRegression.predict_log_proba": {
  "lineno": 1662,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "sklearn.linear_model._logistic.LogisticRegression.predict_proba": {
  "lineno": 1619,
  "symbols_in_volume": [
   "numpy.c_"
  ],
  "type": "function"
 },
 "sklearn.linear_model._logistic.LogisticRegressionCV": {
  "lineno": 1684,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._logistic.LogisticRegressionCV.__init__": {
  "lineno": 1929,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._logistic.LogisticRegressionCV.fit": {
  "lineno": 1952,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed",
   "numbers.Number",
   "numpy.arange",
   "numpy.argmax",
   "numpy.asarray",
   "numpy.empty",
   "numpy.float64",
   "numpy.mean",
   "numpy.reshape",
   "numpy.swapaxes",
   "numpy.tile",
   "numpy.transpose",
   "numpy.zeros",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.linear_model._logistic.LogisticRegressionCV.score": {
  "lineno": 2248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._logistic._check_multi_class": {
  "lineno": 462,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._logistic._check_solver": {
  "lineno": 432,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._logistic._intercept_dot": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._logistic._log_reg_scoring_path": {
  "lineno": 998,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.newaxis",
   "numpy.ones",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.linear_model._logistic._logistic_grad_hess": {
  "lineno": 173,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty_like",
   "numpy.newaxis",
   "numpy.ones",
   "numpy.squeeze",
   "scipy.sparse.dia_matrix",
   "scipy.sparse.issparse",
   "scipy.special.expit"
  ],
  "type": "function"
 },
 "sklearn.linear_model._logistic._logistic_grad_hess.Hs": {
  "lineno": 235,
  "symbols_in_volume": [
   "numpy.empty_like"
  ],
  "type": "function"
 },
 "sklearn.linear_model._logistic._logistic_loss": {
  "lineno": 137,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.ones",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.linear_model._logistic._logistic_loss_and_grad": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.empty_like",
   "numpy.ones",
   "numpy.sum",
   "scipy.special.expit"
  ],
  "type": "function"
 },
 "sklearn.linear_model._logistic._logistic_regression_path": {
  "lineno": 651,
  "symbols_in_volume": [
   "numbers.Integral",
   "numpy.array",
   "numpy.concatenate",
   "numpy.expand_dims",
   "numpy.float64",
   "numpy.hstack",
   "numpy.int32",
   "numpy.logspace",
   "numpy.newaxis",
   "numpy.ones",
   "numpy.reshape",
   "numpy.searchsorted",
   "numpy.unique",
   "numpy.zeros",
   "scipy.optimize.minimize"
  ],
  "type": "function"
 },
 "sklearn.linear_model._logistic._multinomial_grad_hess": {
  "lineno": 359,
  "symbols_in_volume": [
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.linear_model._logistic._multinomial_grad_hess.hessp": {
  "lineno": 408,
  "symbols_in_volume": [
   "numpy.newaxis",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.linear_model._logistic._multinomial_loss": {
  "lineno": 250,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.linear_model._logistic._multinomial_loss_grad": {
  "lineno": 306,
  "symbols_in_volume": [
   "numpy.newaxis",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.linear_model._logistic.logistic_regression_path": {
  "lineno": 479,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._omp": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.linear_model._omp.OrthogonalMatchingPursuit": {
  "lineno": 542,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._omp.OrthogonalMatchingPursuit.__init__": {
  "lineno": 619,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._omp.OrthogonalMatchingPursuit.fit": {
  "lineno": 627,
  "symbols_in_volume": [
   "numpy.newaxis",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.linear_model._omp.OrthogonalMatchingPursuitCV": {
  "lineno": 756,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._omp.OrthogonalMatchingPursuitCV.__init__": {
  "lineno": 856,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._omp.OrthogonalMatchingPursuitCV.fit": {
  "lineno": 866,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed",
   "numpy.argmin",
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.linear_model._omp._cholesky_omp": {
  "lineno": 26,
  "symbols_in_volume": [
   "math.sqrt",
   "numpy.abs",
   "numpy.arange",
   "numpy.argmax",
   "numpy.asfortranarray",
   "numpy.dot",
   "numpy.empty",
   "numpy.empty_like",
   "numpy.finfo",
   "scipy.linalg.get_blas_funcs",
   "scipy.linalg.lapack.get_lapack_funcs",
   "scipy.linalg.norm",
   "scipy.linalg.solve_triangular",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.linear_model._omp._gram_omp": {
  "lineno": 139,
  "symbols_in_volume": [
   "math.sqrt",
   "numpy.abs",
   "numpy.arange",
   "numpy.argmax",
   "numpy.asfortranarray",
   "numpy.dot",
   "numpy.empty",
   "numpy.empty_like",
   "numpy.finfo",
   "numpy.inner",
   "scipy.linalg.get_blas_funcs",
   "scipy.linalg.lapack.get_lapack_funcs",
   "scipy.linalg.solve_triangular",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.linear_model._omp._omp_path_residues": {
  "lineno": 679,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.flatnonzero",
   "numpy.newaxis",
   "numpy.sqrt",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.linear_model._omp.orthogonal_mp": {
  "lineno": 265,
  "symbols_in_volume": [
   "numpy.asfortranarray",
   "numpy.dot",
   "numpy.squeeze",
   "numpy.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.linear_model._omp.orthogonal_mp_gram": {
  "lineno": 407,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.newaxis",
   "numpy.squeeze",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.linear_model._passive_aggressive": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.linear_model._passive_aggressive.PassiveAggressiveClassifier": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._passive_aggressive.PassiveAggressiveClassifier.__init__": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._passive_aggressive.PassiveAggressiveClassifier.fit": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._passive_aggressive.PassiveAggressiveClassifier.partial_fit": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._passive_aggressive.PassiveAggressiveRegressor": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._passive_aggressive.PassiveAggressiveRegressor.__init__": {
  "lineno": 392,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._passive_aggressive.PassiveAggressiveRegressor.fit": {
  "lineno": 440,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._passive_aggressive.PassiveAggressiveRegressor.partial_fit": {
  "lineno": 417,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._perceptron": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.linear_model._perceptron.Perceptron": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._perceptron.Perceptron.__init__": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._ransac": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.spacing"
  ],
  "type": "module"
 },
 "sklearn.linear_model._ransac.RANSACRegressor": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._ransac.RANSACRegressor.__init__": {
  "lineno": 206,
  "symbols_in_volume": [
   "numpy.inf"
  ],
  "type": "function"
 },
 "sklearn.linear_model._ransac.RANSACRegressor.fit": {
  "lineno": 226,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.arange",
   "numpy.ceil",
   "numpy.inf",
   "numpy.median",
   "numpy.sum",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.linear_model._ransac.RANSACRegressor.predict": {
  "lineno": 450,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._ransac.RANSACRegressor.score": {
  "lineno": 468,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._ransac._dynamic_max_trials": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.ceil",
   "numpy.log"
  ],
  "type": "function"
 },
 "sklearn.linear_model._ridge": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.linear_model._ridge.Ridge": {
  "lineno": 605,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._ridge.Ridge.__init__": {
  "lineno": 738,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._ridge.Ridge.fit": {
  "lineno": 747,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._ridge.RidgeCV": {
  "lineno": 1593,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._ridge.RidgeClassifier": {
  "lineno": 769,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._ridge.RidgeClassifier.__init__": {
  "lineno": 899,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._ridge.RidgeClassifier.classes_": {
  "lineno": 955,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._ridge.RidgeClassifier.fit": {
  "lineno": 908,
  "symbols_in_volume": [
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.linear_model._ridge.RidgeClassifierCV": {
  "lineno": 1706,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._ridge.RidgeClassifierCV.__init__": {
  "lineno": 1817,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._ridge.RidgeClassifierCV.classes_": {
  "lineno": 1863,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._ridge.RidgeClassifierCV.fit": {
  "lineno": 1825,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._ridge._BaseRidge": {
  "lineno": 524,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.linear_model._ridge._BaseRidge.__init__": {
  "lineno": 525,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.linear_model._ridge._BaseRidge.fit": {
  "lineno": 538,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "scipy.sparse.issparse",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.linear_model._ridge._BaseRidgeCV": {
  "lineno": 1520,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._ridge._BaseRidgeCV.__init__": {
  "lineno": 1521,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "sklearn.linear_model._ridge._BaseRidgeCV.fit": {
  "lineno": 1533,
  "symbols_in_volume": [
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.linear_model._ridge._RidgeGCV": {
  "lineno": 1060,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._ridge._RidgeGCV.__init__": {
  "lineno": 1099,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "sklearn.linear_model._ridge._RidgeGCV._compute_covariance": {
  "lineno": 1172,
  "symbols_in_volume": [
   "numpy.outer",
   "numpy.zeros",
   "scipy.sparse.dia_matrix"
  ],
  "type": "function"
 },
 "sklearn.linear_model._ridge._RidgeGCV._compute_gram": {
  "lineno": 1122,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.outer",
   "numpy.zeros",
   "scipy.sparse.dia_matrix",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.linear_model._ridge._RidgeGCV._decomp_diag": {
  "lineno": 1111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._ridge._RidgeGCV._diag_dot": {
  "lineno": 1115,
  "symbols_in_volume": [
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.linear_model._ridge._RidgeGCV._eigen_decompose_covariance": {
  "lineno": 1292,
  "symbols_in_volume": [
   "numpy.empty",
   "scipy.sparse.linalg.eigh"
  ],
  "type": "function"
 },
 "sklearn.linear_model._ridge._RidgeGCV._eigen_decompose_gram": {
  "lineno": 1255,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.outer",
   "scipy.sparse.linalg.eigh"
  ],
  "type": "function"
 },
 "sklearn.linear_model._ridge._RidgeGCV._solve_eigen_covariance": {
  "lineno": 1364,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._ridge._RidgeGCV._solve_eigen_covariance_intercept": {
  "lineno": 1334,
  "symbols_in_volume": [
   "numpy.newaxis",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.linear_model._ridge._RidgeGCV._solve_eigen_covariance_no_intercept": {
  "lineno": 1317,
  "symbols_in_volume": [
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.linear_model._ridge._RidgeGCV._solve_eigen_gram": {
  "lineno": 1269,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.linalg.norm",
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.linear_model._ridge._RidgeGCV._solve_svd_design_matrix": {
  "lineno": 1391,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.linalg.norm",
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.linear_model._ridge._RidgeGCV._sparse_multidot_diag": {
  "lineno": 1217,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "sklearn.linear_model._ridge._RidgeGCV._svd_decompose_design_matrix": {
  "lineno": 1377,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.hstack",
   "numpy.zeros",
   "scipy.sparse.linalg.svd"
  ],
  "type": "function"
 },
 "sklearn.linear_model._ridge._RidgeGCV.fit": {
  "lineno": 1412,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.argmax",
   "numpy.float64",
   "numpy.ones",
   "numpy.sqrt",
   "numpy.zeros",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.linear_model._ridge._RidgeGCV.fit.identity_estimator": {
  "lineno": 1493,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._ridge._XT_CenterStackOp": {
  "lineno": 1024,
  "symbols_in_volume": [
   "scipy.sparse.linalg.LinearOperator"
  ],
  "type": "class"
 },
 "sklearn.linear_model._ridge._XT_CenterStackOp.__init__": {
  "lineno": 1031,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._ridge._XT_CenterStackOp._matmat": {
  "lineno": 1049,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.empty"
  ],
  "type": "function"
 },
 "sklearn.linear_model._ridge._XT_CenterStackOp._matvec": {
  "lineno": 1038,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.empty"
  ],
  "type": "function"
 },
 "sklearn.linear_model._ridge._X_CenterStackOp": {
  "lineno": 994,
  "symbols_in_volume": [
   "scipy.sparse.linalg.LinearOperator"
  ],
  "type": "class"
 },
 "sklearn.linear_model._ridge._X_CenterStackOp.__init__": {
  "lineno": 1001,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._ridge._X_CenterStackOp._matmat": {
  "lineno": 1014,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._ridge._X_CenterStackOp._matvec": {
  "lineno": 1008,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._ridge._X_CenterStackOp._transpose": {
  "lineno": 1020,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._ridge._check_gcv_mode": {
  "lineno": 960,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._ridge._find_smallest_angle": {
  "lineno": 976,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.argmax"
  ],
  "type": "function"
 },
 "sklearn.linear_model._ridge._get_valid_accept_sparse": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._ridge._ridge_regression": {
  "lineno": 382,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.empty",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.repeat",
   "numpy.zeros",
   "scipy.sparse.issparse",
   "scipy.sparse.linalg.LinAlgError"
  ],
  "type": "function"
 },
 "sklearn.linear_model._ridge._solve_cholesky": {
  "lineno": 135,
  "symbols_in_volume": [
   "numpy.array_equal",
   "numpy.empty",
   "scipy.sparse.linalg.solve"
  ],
  "type": "function"
 },
 "sklearn.linear_model._ridge._solve_cholesky_kernel": {
  "lineno": 159,
  "symbols_in_volume": [
   "numpy.atleast_1d",
   "numpy.empty",
   "numpy.linalg.LinAlgError",
   "numpy.ndarray",
   "numpy.newaxis",
   "numpy.outer",
   "numpy.sqrt",
   "scipy.sparse.linalg.lstsq",
   "scipy.sparse.linalg.solve",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.linear_model._ridge._solve_lsqr": {
  "lineno": 117,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.int32",
   "numpy.sqrt",
   "scipy.sparse.linalg.lsqr"
  ],
  "type": "function"
 },
 "sklearn.linear_model._ridge._solve_sparse_cg": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.empty",
   "scipy.sparse.linalg.LinearOperator",
   "scipy.sparse.linalg.aslinearoperator",
   "scipy.sparse.linalg.cg",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.linear_model._ridge._solve_sparse_cg._get_rescaled_operator": {
  "lineno": 41,
  "symbols_in_volume": [
   "scipy.sparse.linalg.LinearOperator"
  ],
  "type": "function"
 },
 "sklearn.linear_model._ridge._solve_sparse_cg._get_rescaled_operator.matvec": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._ridge._solve_sparse_cg._get_rescaled_operator.rmatvec": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.linear_model._ridge._solve_sparse_cg.create_mv": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._ridge._solve_sparse_cg.create_mv._mv": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._ridge._solve_svd": {
  "lineno": 220,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.newaxis",
   "numpy.zeros",
   "scipy.sparse.linalg.svd"
  ],
  "type": "function"
 },
 "sklearn.linear_model._ridge.ridge_regression": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._sag": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.linear_model._sag.get_auto_step_size": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._sag.sag_solver": {
  "lineno": 87,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.vstack",
   "numpy.zeros",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.int32"
  ],
  "type": "module"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGD": {
  "lineno": 68,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGD.__init__": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGD._allocate_parameter_mem": {
  "lineno": 181,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.float64",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGD._get_learning_rate_type": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGD._get_loss_function": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGD._get_penalty_type": {
  "lineno": 174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGD._make_validation_score_cb": {
  "lineno": 280,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGD._make_validation_split": {
  "lineno": 242,
  "symbols_in_volume": [
   "numpy.uint8",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGD._validate_params": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGD.fit": {
  "lineno": 118,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGD.set_params": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGDClassifier": {
  "lineno": 435,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.__init__": {
  "lineno": 450,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGDClassifier._fit": {
  "lineno": 518,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.inf",
   "numpy.unique",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGDClassifier._fit_binary": {
  "lineno": 560,
  "symbols_in_volume": [
   "numpy.atleast_1d"
  ],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGDClassifier._fit_multiclass": {
  "lineno": 587,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed",
   "numpy.atleast_1d"
  ],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGDClassifier._partial_fit": {
  "lineno": 471,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.fit": {
  "lineno": 679,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.partial_fit": {
  "lineno": 631,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGDRegressor": {
  "lineno": 1071,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGDRegressor.__init__": {
  "lineno": 1081,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGDRegressor._decision_function": {
  "lineno": 1222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGDRegressor._fit": {
  "lineno": 1157,
  "symbols_in_volume": [
   "numpy.inf",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGDRegressor._fit_regressor": {
  "lineno": 1256,
  "symbols_in_volume": [
   "numpy.atleast_1d",
   "numpy.iinfo",
   "numpy.inf",
   "numpy.int32"
  ],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGDRegressor._partial_fit": {
  "lineno": 1098,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGDRegressor.fit": {
  "lineno": 1191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGDRegressor.partial_fit": {
  "lineno": 1126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.BaseSGDRegressor.predict": {
  "lineno": 1242,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.SGDClassifier": {
  "lineno": 714,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._stochastic_gradient.SGDClassifier.__init__": {
  "lineno": 936,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.SGDClassifier._check_proba": {
  "lineno": 953,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.SGDClassifier._predict_log_proba": {
  "lineno": 1067,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.SGDClassifier._predict_proba": {
  "lineno": 998,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.clip",
   "numpy.ones"
  ],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.SGDClassifier.predict_log_proba": {
  "lineno": 1041,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.SGDClassifier.predict_proba": {
  "lineno": 958,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.SGDRegressor": {
  "lineno": 1340,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._stochastic_gradient.SGDRegressor.__init__": {
  "lineno": 1528,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient._ValidationScoreCallback": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._stochastic_gradient._ValidationScoreCallback.__call__": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.atleast_1d"
  ],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient._ValidationScoreCallback.__init__": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient._prepare_fit_binary": {
  "lineno": 290,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.ones"
  ],
  "type": "function"
 },
 "sklearn.linear_model._stochastic_gradient.fit_binary": {
  "lineno": 322,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf"
  ],
  "type": "function"
 },
 "sklearn.linear_model._theil_sen": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.double",
   "numpy.finfo"
  ],
  "type": "module"
 },
 "sklearn.linear_model._theil_sen.TheilSenRegressor": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model._theil_sen.TheilSenRegressor.__init__": {
  "lineno": 296,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._theil_sen.TheilSenRegressor._check_subparams": {
  "lineno": 309,
  "symbols_in_volume": [
   "numpy.rint",
   "scipy.special.binom"
  ],
  "type": "function"
 },
 "sklearn.linear_model._theil_sen.TheilSenRegressor.fit": {
  "lineno": 346,
  "symbols_in_volume": [
   "itertools.combinations",
   "joblib.Parallel",
   "joblib.delayed",
   "joblib.effective_n_jobs",
   "numpy.array_split",
   "numpy.rint",
   "numpy.vstack",
   "scipy.special.binom"
  ],
  "type": "function"
 },
 "sklearn.linear_model._theil_sen._breakdown_point": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model._theil_sen._lstsq": {
  "lineno": 151,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.ones",
   "numpy.zeros",
   "scipy.linalg.lapack.get_lapack_funcs"
  ],
  "type": "function"
 },
 "sklearn.linear_model._theil_sen._modified_weiszfeld_step": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.newaxis",
   "numpy.sqrt",
   "numpy.sum",
   "scipy.linalg.norm"
  ],
  "type": "function"
 },
 "sklearn.linear_model._theil_sen._spatial_median": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.median",
   "numpy.sum",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.linear_model.base": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.linear_model.base.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.bayes": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.linear_model.bayes.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.cd_fast": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.linear_model.cd_fast.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.coordinate_descent": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.linear_model.coordinate_descent.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.huber": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.linear_model.huber.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.least_angle": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.linear_model.least_angle.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.logistic": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.linear_model.logistic.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.omp": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.linear_model.omp.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.passive_aggressive": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.linear_model.passive_aggressive.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.perceptron": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.linear_model.perceptron.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.ransac": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.linear_model.ransac.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.ridge": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.linear_model.ridge.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.sag": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.linear_model.sag.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.sag_fast": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.linear_model.sag_fast.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.setup": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.distutils.core.setup"
  ],
  "type": "module"
 },
 "sklearn.linear_model.setup.configuration": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.Configuration",
   "numpy.get_include",
   "os.name",
   "sklearn._build_utils.gen_from_templates"
  ],
  "type": "function"
 },
 "sklearn.linear_model.sgd_fast": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.linear_model.sgd_fast.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.stochastic_gradient": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.linear_model.stochastic_gradient.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.linear_model.tests.test_base": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "module"
 },
 "sklearn.linear_model.tests.test_base.test_csr_preprocess_data": {
  "lineno": 339,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "sklearn.datasets.make_regression",
   "sklearn.linear_model._base._preprocess_data"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_dtype_preprocess_data": {
  "lineno": 370,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.float32",
   "numpy.float64",
   "sklearn.linear_model._base._preprocess_data",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_fit_intercept": {
  "lineno": 117,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.linear_model.LinearRegression"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_fused_types_make_dataset": {
  "lineno": 450,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float32",
   "numpy.float64",
   "scipy.sparse.csr_matrix",
   "sklearn.datasets.load_iris",
   "sklearn.linear_model._base.make_dataset",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_linear_regression": {
  "lineno": 30,
  "symbols_in_volume": [
   "sklearn.linear_model.LinearRegression",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_linear_regression_multiple_outcome": {
  "lineno": 175,
  "symbols_in_volume": [
   "numpy.vstack",
   "sklearn.datasets.make_regression",
   "sklearn.linear_model.LinearRegression",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_linear_regression_sample_weights": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.diag",
   "numpy.ones",
   "numpy.random.RandomState",
   "scipy.linalg.solve",
   "sklearn.linear_model.LinearRegression",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_linear_regression_sparse": {
  "lineno": 139,
  "symbols_in_volume": [
   "numpy.newaxis",
   "scipy.sparse.eye",
   "sklearn.linear_model.LinearRegression",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_linear_regression_sparse_equal_dense": {
  "lineno": 155,
  "symbols_in_volume": [
   "pytest.approx",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "sklearn.linear_model.LinearRegression",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_linear_regression_sparse_multiple_outcome": {
  "lineno": 191,
  "symbols_in_volume": [
   "numpy.vstack",
   "scipy.sparse.coo_matrix",
   "sklearn.datasets.make_sparse_uncorrelated",
   "sklearn.linear_model.LinearRegression",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_preprocess_copy_data_no_checks": {
  "lineno": 348,
  "symbols_in_volume": [
   "numpy.may_share_memory",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "sklearn.datasets.make_regression",
   "sklearn.linear_model._base._preprocess_data"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_preprocess_data": {
  "lineno": 208,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.ones",
   "numpy.sqrt",
   "numpy.std",
   "numpy.zeros",
   "sklearn.linear_model._base._preprocess_data",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_preprocess_data_multioutput": {
  "lineno": 242,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.zeros",
   "scipy.sparse.csc_matrix",
   "sklearn.linear_model._base._preprocess_data",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_preprocess_data_weighted": {
  "lineno": 268,
  "symbols_in_volume": [
   "numpy.average",
   "numpy.mean",
   "numpy.ones",
   "numpy.sqrt",
   "sklearn.linear_model._base._preprocess_data",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_raises_value_error_if_sample_weights_greater_than_1d": {
  "lineno": 96,
  "symbols_in_volume": [
   "sklearn.linear_model.LinearRegression"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_rescale_data": {
  "lineno": 436,
  "symbols_in_volume": [
   "numpy.newaxis",
   "numpy.sqrt",
   "sklearn.linear_model._base._rescale_data",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_base.test_sparse_preprocess_data_with_return_mean": {
  "lineno": 301,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.ones",
   "numpy.sqrt",
   "numpy.std",
   "numpy.zeros",
   "scipy.sparse.rand",
   "sklearn.linear_model._base._preprocess_data",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.datasets.load_diabetes"
  ],
  "type": "module"
 },
 "sklearn.linear_model.tests.test_bayes.test_ard_accuracy_on_easy_problem": {
  "lineno": 208,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.random.RandomState",
   "pytest.mark.skipif",
   "sklearn.linear_model.ARDRegression"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_bayesian_initial_params": {
  "lineno": 128,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linspace",
   "numpy.vander",
   "sklearn.linear_model.BayesianRidge",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_bayesian_ridge_parameter": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.linear_model.BayesianRidge",
   "sklearn.linear_model.Ridge",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_bayesian_ridge_score_values": {
  "lineno": 44,
  "symbols_in_volume": [
   "math.log",
   "numpy.dot",
   "numpy.eye",
   "numpy.finfo",
   "numpy.float64",
   "numpy.pi",
   "numpy.var",
   "scipy.linalg.pinvh",
   "sklearn.linear_model.BayesianRidge",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils.extmath.fast_logdet"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_bayesian_ridge_scores": {
  "lineno": 34,
  "symbols_in_volume": [
   "sklearn.linear_model.BayesianRidge"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_bayesian_sample_weights": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.linear_model.BayesianRidge",
   "sklearn.linear_model.Ridge",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_n_iter": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.linear_model.BayesianRidge",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_prediction_bayesian_ridge_ard_with_constant_input": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.full",
   "sklearn.linear_model.ARDRegression",
   "sklearn.linear_model.BayesianRidge",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_return_std": {
  "lineno": 227,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.random",
   "sklearn.linear_model.ARDRegression",
   "sklearn.linear_model.BayesianRidge",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_return_std.f": {
  "lineno": 229,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_return_std.f_noise": {
  "lineno": 232,
  "symbols_in_volume": [
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_std_bayesian_ridge_ard_with_constant_input": {
  "lineno": 159,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.full",
   "sklearn.linear_model.ARDRegression",
   "sklearn.linear_model.BayesianRidge",
   "sklearn.utils._testing.assert_array_less",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_toy_ard_object": {
  "lineno": 192,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.linear_model.ARDRegression",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_toy_bayesian_ridge_object": {
  "lineno": 116,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.linear_model.BayesianRidge",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_bayes.test_update_of_sigma_in_ard": {
  "lineno": 177,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.linear_model.ARDRegression"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.build_dataset": {
  "lineno": 127,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_1d_multioutput_enet_and_multitask_enet_cv": {
  "lineno": 481,
  "symbols_in_volume": [
   "numpy.newaxis",
   "sklearn.linear_model.ElasticNetCV",
   "sklearn.linear_model.MultiTaskElasticNetCV",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_1d_multioutput_lasso_and_multitask_lasso_cv": {
  "lineno": 494,
  "symbols_in_volume": [
   "numpy.newaxis",
   "sklearn.linear_model.LassoCV",
   "sklearn.linear_model.MultiTaskLassoCV",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_check_input_false": {
  "lineno": 652,
  "symbols_in_volume": [
   "sklearn.linear_model.ElasticNet",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_coef_shape_not_zero": {
  "lineno": 804,
  "symbols_in_volume": [
   "numpy.c_",
   "numpy.ones",
   "sklearn.linear_model.Lasso"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_convergence_warnings": {
  "lineno": 839,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.warns",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.linear_model.MultiTaskElasticNet"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_coordinate_descent": {
  "lineno": 822,
  "symbols_in_volume": [
   "numpy.ones",
   "pytest.mark.parametrize",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.linear_model.Lasso",
   "sklearn.linear_model.MultiTaskLasso",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_copy_X_False_check_input_False": {
  "lineno": 682,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.not_equal",
   "sklearn.linear_model.ElasticNet"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_copy_X_True": {
  "lineno": 670,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.linear_model.ElasticNet",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_cv_positive_constraint": {
  "lineno": 343,
  "symbols_in_volume": [
   "sklearn.linear_model.ElasticNetCV"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_float_precision": {
  "lineno": 718,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.hstack",
   "numpy.newaxis",
   "sklearn.linear_model.ElasticNet",
   "sklearn.linear_model.MultiTaskElasticNet",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_l1_ratio": {
  "lineno": 772,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.linear_model.ElasticNetCV",
   "sklearn.linear_model.MultiTaskElasticNetCV",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_raise_message",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_multitarget": {
  "lineno": 431,
  "symbols_in_volume": [
   "sklearn.linear_model.ElasticNet",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_path": {
  "lineno": 232,
  "symbols_in_volume": [
   "numpy.newaxis",
   "pytest.mark.filterwarnings",
   "sklearn.linear_model.ElasticNetCV",
   "sklearn.linear_model.MultiTaskElasticNetCV",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_path_positive": {
  "lineno": 625,
  "symbols_in_volume": [
   "numpy.all",
   "sklearn.linear_model.enet_path",
   "sklearn.linear_model.lasso_path",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_positive_constraint": {
  "lineno": 334,
  "symbols_in_volume": [
   "sklearn.linear_model.ElasticNet"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_enet_toy": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "sklearn.linear_model.ElasticNet",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lassoCV_does_not_set_precompute": {
  "lineno": 869,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.linear_model.LassoCV"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lassoCV_does_not_set_precompute.LassoMock": {
  "lineno": 879,
  "symbols_in_volume": [
   "sklearn.linear_model.Lasso"
  ],
  "type": "class"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lassoCV_does_not_set_precompute.LassoMock.fit": {
  "lineno": 880,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_alpha_warning": {
  "lineno": 313,
  "symbols_in_volume": [
   "sklearn.linear_model.Lasso",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_cv": {
  "lineno": 146,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.searchsorted",
   "numpy.testing.assert_approx_equal",
   "scipy.interpolate.interp1d",
   "sklearn.linear_model.LassoCV",
   "sklearn.linear_model.LassoLarsCV",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_cv_positive_constraint": {
  "lineno": 191,
  "symbols_in_volume": [
   "sklearn.linear_model.LassoCV"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_cv_with_some_model_selection": {
  "lineno": 173,
  "symbols_in_volume": [
   "sklearn.datasets.load_diabetes",
   "sklearn.linear_model.LassoCV",
   "sklearn.model_selection.StratifiedKFold",
   "sklearn.pipeline.make_pipeline",
   "sklearn.preprocessing.StandardScaler"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_non_float_y": {
  "lineno": 705,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.linear_model.ElasticNet",
   "sklearn.linear_model.Lasso",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_path_return_models_vs_new_return_gives_same_coefficients": {
  "lineno": 208,
  "symbols_in_volume": [
   "numpy.array",
   "scipy.interpolate.interp1d",
   "sklearn.linear_model.lars_path",
   "sklearn.linear_model.lasso_path",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_positive_constraint": {
  "lineno": 321,
  "symbols_in_volume": [
   "sklearn.linear_model.Lasso"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_readonly_data": {
  "lineno": 408,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.linear_model.Lasso",
   "sklearn.utils._testing.TempMemmap",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_toy": {
  "lineno": 41,
  "symbols_in_volume": [
   "sklearn.linear_model.Lasso",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_lasso_zero": {
  "lineno": 30,
  "symbols_in_volume": [
   "sklearn.linear_model.Lasso",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_multi_task_lasso_and_enet": {
  "lineno": 392,
  "symbols_in_volume": [
   "numpy.c_",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.linear_model.MultiTaskElasticNet",
   "sklearn.linear_model.MultiTaskLasso",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_multi_task_lasso_cv_dtype": {
  "lineno": 893,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.linear_model.MultiTaskLassoCV",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_multi_task_lasso_readonly_data": {
  "lineno": 421,
  "symbols_in_volume": [
   "numpy.c_",
   "sklearn.linear_model.MultiTaskLasso",
   "sklearn.utils._testing.TempMemmap",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_multioutput_enetcv_error": {
  "lineno": 447,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.linear_model.ElasticNetCV",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_multitask_enet_and_lasso_cv": {
  "lineno": 455,
  "symbols_in_volume": [
   "sklearn.linear_model.MultiTaskElasticNetCV",
   "sklearn.linear_model.MultiTaskLassoCV",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_overrided_gram_matrix": {
  "lineno": 694,
  "symbols_in_volume": [
   "sklearn.linear_model.ElasticNet",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_path_parameters": {
  "lineno": 290,
  "symbols_in_volume": [
   "sklearn.linear_model.ElasticNetCV",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_precompute_invalid_argument": {
  "lineno": 523,
  "symbols_in_volume": [
   "sklearn.linear_model.ElasticNet",
   "sklearn.linear_model.ElasticNetCV",
   "sklearn.linear_model.LassoCV",
   "sklearn.utils._testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_random_descent": {
  "lineno": 580,
  "symbols_in_volume": [
   "numpy.hstack",
   "numpy.newaxis",
   "scipy.sparse.csr_matrix",
   "sklearn.linear_model.ElasticNet",
   "sklearn.linear_model.MultiTaskElasticNet",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_sparse_dense_descent_paths": {
  "lineno": 642,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "sklearn.linear_model.enet_path",
   "sklearn.linear_model.lasso_path",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_sparse_input_convergence_warning": {
  "lineno": 855,
  "symbols_in_volume": [
   "numpy.float32",
   "pytest.warns",
   "scipy.sparse.csr_matrix",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.linear_model.ElasticNet",
   "sklearn.linear_model.Lasso"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_sparse_input_dtype_enet_and_lassocv": {
  "lineno": 506,
  "symbols_in_volume": [
   "numpy.float32",
   "scipy.sparse.csr_matrix",
   "sklearn.linear_model.ElasticNetCV",
   "sklearn.linear_model.LassoCV",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_uniform_targets": {
  "lineno": 361,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.finfo",
   "numpy.random.RandomState",
   "sklearn.linear_model.ElasticNetCV",
   "sklearn.linear_model.LassoCV",
   "sklearn.linear_model.MultiTaskElasticNetCV",
   "sklearn.linear_model.MultiTaskLassoCV",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_warm_start": {
  "lineno": 302,
  "symbols_in_volume": [
   "sklearn.linear_model.ElasticNet",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_warm_start_convergence": {
  "lineno": 535,
  "symbols_in_volume": [
   "sklearn.linear_model.ElasticNet"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_warm_start_convergence_with_regularizer_decrement": {
  "lineno": 557,
  "symbols_in_volume": [
   "copy.deepcopy",
   "sklearn.datasets.load_boston",
   "sklearn.linear_model.ElasticNet"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_coordinate_descent.test_warm_start_multitask_lasso": {
  "lineno": 810,
  "symbols_in_volume": [
   "numpy.c_",
   "sklearn.linear_model.MultiTaskLasso",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.linear_model.tests.test_huber.make_regression_with_outliers": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.datasets.make_regression"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber.test_huber_and_sgd_same_results": {
  "lineno": 147,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "sklearn.linear_model.HuberRegressor",
   "sklearn.linear_model.SGDRegressor",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber.test_huber_better_r2_score": {
  "lineno": 186,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.dot",
   "sklearn.linear_model.HuberRegressor",
   "sklearn.linear_model.Ridge"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber.test_huber_bool": {
  "lineno": 209,
  "symbols_in_volume": [
   "sklearn.datasets.make_regression",
   "sklearn.linear_model.HuberRegressor"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber.test_huber_equals_lr_for_high_epsilon": {
  "lineno": 32,
  "symbols_in_volume": [
   "sklearn.linear_model.HuberRegressor",
   "sklearn.linear_model.LinearRegression",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber.test_huber_gradient": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.random.RandomState",
   "scipy.optimize.check_grad",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber.test_huber_gradient.grad_func": {
  "lineno": 59,
  "symbols_in_volume": [
   "sklearn.linear_model._huber._huber_loss_and_gradient"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber.test_huber_gradient.loss_func": {
  "lineno": 56,
  "symbols_in_volume": [
   "sklearn.linear_model._huber._huber_loss_and_gradient"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber.test_huber_max_iter": {
  "lineno": 43,
  "symbols_in_volume": [
   "sklearn.linear_model.HuberRegressor"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber.test_huber_sample_weights": {
  "lineno": 73,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.concatenate",
   "numpy.mean",
   "numpy.ones",
   "numpy.vstack",
   "scipy.sparse.csr_matrix",
   "sklearn.linear_model.HuberRegressor",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber.test_huber_scaling_invariant": {
  "lineno": 129,
  "symbols_in_volume": [
   "numpy.all",
   "sklearn.linear_model.HuberRegressor",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber.test_huber_sparse": {
  "lineno": 117,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "sklearn.linear_model.HuberRegressor",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_huber.test_huber_warm_start": {
  "lineno": 170,
  "symbols_in_volume": [
   "sklearn.linear_model.HuberRegressor",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.dot",
   "sklearn.datasets.load_diabetes"
  ],
  "type": "module"
 },
 "sklearn.linear_model.tests.test_least_angle._assert_same_lars_path_result": {
  "lineno": 77,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_all_precomputed": {
  "lineno": 102,
  "symbols_in_volume": [
   "numpy.dot",
   "sklearn.linear_model.lars_path",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_collinearity": {
  "lineno": 138,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.isnan",
   "numpy.random.RandomState",
   "numpy.zeros",
   "numpy.zeros_like",
   "sklearn.linear_model.lars_path",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_estimatorclasses_positive_constraint": {
  "lineno": 537,
  "symbols_in_volume": [
   "sklearn.linear_model"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lars_add_features": {
  "lineno": 384,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.arange",
   "numpy.isfinite",
   "numpy.newaxis",
   "sklearn.linear_model.Lars"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lars_cv": {
  "lineno": 432,
  "symbols_in_volume": [
   "numpy.testing.assert_array_less",
   "sklearn.linear_model.LassoLarsCV"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lars_cv_max_iter": {
  "lineno": 448,
  "symbols_in_volume": [
   "numpy.c_",
   "numpy.errstate",
   "numpy.random.RandomState",
   "sklearn.linear_model.LassoLarsCV",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lars_lstsq": {
  "lineno": 114,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "numpy.__version__",
   "numpy.linalg.lstsq",
   "pytest.mark.filterwarnings",
   "sklearn.linear_model.LassoLars",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lars_n_nonzero_coefs": {
  "lineno": 395,
  "symbols_in_volume": [
   "sklearn.linear_model.Lars"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lars_path_gram_equivalent": {
  "lineno": 83,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.linear_model.lars_path",
   "sklearn.linear_model.lars_path_gram"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lars_path_positive_constraint": {
  "lineno": 501,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.linear_model.lars_path"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lars_path_readonly_data": {
  "lineno": 490,
  "symbols_in_volume": [
   "sklearn.linear_model._least_angle._lars_path_residues",
   "sklearn.model_selection.train_test_split",
   "sklearn.utils._testing.TempMemmap"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lars_precompute": {
  "lineno": 199,
  "symbols_in_volume": [
   "numpy.dot",
   "pytest.mark.parametrize",
   "sklearn.linear_model.Lars",
   "sklearn.linear_model.LarsCV",
   "sklearn.linear_model.LassoLarsIC",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_gives_lstsq_solution": {
  "lineno": 128,
  "symbols_in_volume": [
   "numpy.linalg.lstsq",
   "pytest.mark.filterwarnings",
   "sklearn.linear_model.lars_path",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_copyX_behaviour": {
  "lineno": 704,
  "symbols_in_volume": [
   "numpy.array_equal",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.linear_model._least_angle.LassoLarsIC"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_fit_copyX_behaviour": {
  "lineno": 720,
  "symbols_in_volume": [
   "numpy.array_equal",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.linear_model._least_angle.LassoLarsIC"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_ic": {
  "lineno": 467,
  "symbols_in_volume": [
   "numpy.c_",
   "numpy.max",
   "numpy.random.RandomState",
   "numpy.where",
   "sklearn.linear_model.LassoLarsIC",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_path_length": {
  "lineno": 312,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.diff",
   "sklearn.linear_model.LassoLars",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_R_implementation": {
  "lineno": 608,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.mean",
   "numpy.newaxis",
   "numpy.sqrt",
   "numpy.sum",
   "sklearn.linear_model.LassoLars",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_lasso_cd": {
  "lineno": 249,
  "symbols_in_volume": [
   "numpy.linspace",
   "scipy.linalg.norm",
   "sklearn.linear_model.Lasso",
   "sklearn.linear_model.LassoLars",
   "sklearn.linear_model.lars_path"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_lasso_cd_early_stopping": {
  "lineno": 286,
  "symbols_in_volume": [
   "scipy.linalg.norm",
   "sklearn.linear_model.Lasso",
   "sklearn.linear_model.lars_path"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_lasso_cd_ill_conditioned": {
  "lineno": 323,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dot",
   "numpy.random.RandomState",
   "numpy.sign",
   "numpy.zeros",
   "sklearn.linear_model.lars_path",
   "sklearn.linear_model.lasso_path",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_lasso_cd_ill_conditioned2": {
  "lineno": 355,
  "symbols_in_volume": [
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.linear_model.Lasso",
   "sklearn.linear_model.LassoLars",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_lasso_cd_ill_conditioned2.objective_function": {
  "lineno": 368,
  "symbols_in_volume": [
   "numpy.dot",
   "scipy.linalg.norm"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_lasso_cd_positive": {
  "lineno": 556,
  "symbols_in_volume": [
   "numpy.linspace",
   "scipy.linalg.norm",
   "sklearn.linear_model.Lasso",
   "sklearn.linear_model.LassoLars",
   "sklearn.linear_model.lars_path"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_multitarget": {
  "lineno": 404,
  "symbols_in_volume": [
   "numpy.vstack",
   "sklearn.linear_model.Lars",
   "sklearn.linear_model.LassoLars",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_no_path": {
  "lineno": 162,
  "symbols_in_volume": [
   "sklearn.linear_model.lars_path",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_no_path_all_precomputed": {
  "lineno": 184,
  "symbols_in_volume": [
   "numpy.dot",
   "sklearn.linear_model.lars_path",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_no_path_precomputed": {
  "lineno": 173,
  "symbols_in_volume": [
   "sklearn.linear_model.lars_path",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_rank_deficient_design": {
  "lineno": 222,
  "symbols_in_volume": [
   "numpy.dot",
   "scipy.linalg.norm",
   "sklearn.linear_model.Lasso",
   "sklearn.linear_model.LassoLars"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_simple": {
  "lineno": 28,
  "symbols_in_volume": [
   "io.StringIO",
   "numpy.dot",
   "numpy.max",
   "sklearn.linear_model.lars_path",
   "sys.stdout"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_simple_precomputed": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.max",
   "sklearn.linear_model.lars_path"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_singular_matrix": {
  "lineno": 214,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.linear_model.lars_path",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_least_angle.test_x_none_gram_none_raises_value_error": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.dot",
   "sklearn.linear_model.lars_path",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic": {
  "lineno": null,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "sklearn.datasets.load_iris"
  ],
  "type": "module"
 },
 "sklearn.linear_model.tests.test_logistic._compute_class_weight_dictionary": {
  "lineno": 884,
  "symbols_in_volume": [
   "numpy.unique",
   "sklearn.utils.compute_class_weight"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.check_predictions": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.unique",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_LogisticRegressionCV_GridSearchCV_elastic_net": {
  "lineno": 1498,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.logspace",
   "pytest.mark.parametrize",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.linear_model._logistic.LogisticRegressionCV",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.model_selection.StratifiedKFold"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr": {
  "lineno": 1531,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.logspace",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.linear_model._logistic.LogisticRegressionCV",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.model_selection.StratifiedKFold",
   "sklearn.model_selection.train_test_split"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_LogisticRegressionCV_elasticnet_attribute_shapes": {
  "lineno": 1589,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.linspace",
   "numpy.logspace",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model._logistic.LogisticRegressionCV"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_LogisticRegressionCV_no_refit": {
  "lineno": 1563,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.logspace",
   "pytest.mark.parametrize",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model._logistic.LogisticRegressionCV"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_LogisticRegression_elastic_net_objective": {
  "lineno": 1467,
  "symbols_in_volume": [
   "numpy.logspace",
   "pytest.mark.parametrize",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.preprocessing.scale"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_LogisticRegression_elastic_net_objective.enet_objective": {
  "lineno": 1488,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.dot",
   "numpy.sum",
   "sklearn.metrics.log_loss"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_check_solver_option": {
  "lineno": 205,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.linear_model._logistic.LogisticRegressionCV",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_consistency_path": {
  "lineno": 349,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.logspace",
   "numpy.random.RandomState",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.linear_model._logistic._logistic_regression_path",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_dtype_match": {
  "lineno": 1309,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "os.name",
   "pytest.mark.parametrize",
   "pytest.skip",
   "scipy.sparse.csr_matrix",
   "sklearn.base.clone",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.utils._IS_32BIT",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_elastic_net_coeffs": {
  "lineno": 1401,
  "symbols_in_volume": [
   "numpy.allclose",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model._logistic.LogisticRegression"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_elastic_net_l1_l2_equivalence": {
  "lineno": 1422,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_elastic_net_versus_sgd": {
  "lineno": 1650,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.logspace",
   "pytest.mark.parametrize",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model.SGDClassifier",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.preprocessing.scale",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_elastic_net_vs_l1_l2": {
  "lineno": 1441,
  "symbols_in_volume": [
   "numpy.linspace",
   "pytest.mark.parametrize",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.model_selection.train_test_split"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_error": {
  "lineno": 82,
  "symbols_in_volume": [
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.linear_model._logistic.LogisticRegressionCV",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_inconsistent_input": {
  "lineno": 313,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.random.RandomState",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_intercept_logistic_helper": {
  "lineno": 620,
  "symbols_in_volume": [
   "numpy.hstack",
   "numpy.newaxis",
   "numpy.ones",
   "numpy.random.RandomState",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model._logistic._logistic_grad_hess",
   "sklearn.linear_model._logistic._logistic_loss",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_l1_ratio_param": {
  "lineno": 1616,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.utils._testing.assert_raise_message",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_l1_ratios_param": {
  "lineno": 1632,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.linear_model._logistic.LogisticRegressionCV",
   "sklearn.utils._testing.assert_raise_message",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_liblinear_decision_function_zero": {
  "lineno": 1004,
  "symbols_in_volume": [
   "numpy.zeros",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_liblinear_dual_random_state": {
  "lineno": 408,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_liblinear_logregcv_sparse": {
  "lineno": 1020,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model._logistic.LogisticRegressionCV"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_cv": {
  "lineno": 508,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.random.RandomState",
   "numpy.sign",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.linear_model._logistic.LogisticRegressionCV",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_cv_mock_scorer": {
  "lineno": 105,
  "symbols_in_volume": [
   "sklearn.linear_model._logistic.LogisticRegressionCV"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_cv_mock_scorer.MockScorer": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_cv_mock_scorer.MockScorer.__call__": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_cv_mock_scorer.MockScorer.__init__": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_cv_multinomial_score": {
  "lineno": 535,
  "symbols_in_volume": [
   "numpy.arange",
   "pytest.mark.parametrize",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.linear_model._logistic._log_reg_scoring_path",
   "sklearn.metrics.get_scorer",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_cv_score_does_not_warn_by_default": {
  "lineno": 138,
  "symbols_in_volume": [
   "pytest.warns",
   "sklearn.linear_model._logistic.LogisticRegressionCV"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_cv_sparse": {
  "lineno": 605,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model._logistic.LogisticRegressionCV",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_grad_hess": {
  "lineno": 459,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.full",
   "numpy.linspace",
   "numpy.newaxis",
   "numpy.random.RandomState",
   "numpy.sign",
   "numpy.zeros",
   "numpy.zeros_like",
   "scipy.linalg.lstsq",
   "scipy.sparse.csr_matrix",
   "sklearn.linear_model._logistic._logistic_grad_hess",
   "sklearn.linear_model._logistic._logistic_loss",
   "sklearn.linear_model._logistic._logistic_loss_and_grad",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_loss_and_grad": {
  "lineno": 429,
  "symbols_in_volume": [
   "numpy.zeros",
   "scipy.optimize.approx_fprime",
   "scipy.sparse.csr_matrix",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model._logistic._logistic_loss_and_grad",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_class_weights": {
  "lineno": 892,
  "symbols_in_volume": [
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_cv_refit": {
  "lineno": 1121,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.linear_model._logistic.LogisticRegressionCV",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_multi_class_auto": {
  "lineno": 1692,
  "symbols_in_volume": [
   "numpy.allclose",
   "pytest.mark.parametrize",
   "pytest.xfail",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.linear_model._logistic.LogisticRegressionCV",
   "sklearn.utils._testing.assert_allclose",
   "sys.platform"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_multi_class_auto.fit": {
  "lineno": 1702,
  "symbols_in_volume": [
   "sklearn.base.clone"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_multinomial": {
  "lineno": 924,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.linear_model._logistic.LogisticRegressionCV",
   "sklearn.preprocessing.StandardScaler",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_path_coefs_multinomial": {
  "lineno": 1672,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model._logistic._logistic_regression_path",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_path_convergence_fail": {
  "lineno": 387,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.random.RandomState",
   "pytest.warns",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.linear_model._logistic._logistic_regression_path"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_path_deprecation": {
  "lineno": 1741,
  "symbols_in_volume": [
   "sklearn.linear_model._logistic.logistic_regression_path",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_sample_weights": {
  "lineno": 810,
  "symbols_in_volume": [
   "numpy.ones",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.linear_model._logistic.LogisticRegressionCV",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_solvers": {
  "lineno": 712,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regression_solvers_multiclass": {
  "lineno": 738,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logistic_regressioncv_class_weights": {
  "lineno": 766,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification",
   "sklearn.linear_model._logistic.LogisticRegressionCV",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logisticregression_liblinear_sample_weight": {
  "lineno": 1777,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.hstack",
   "numpy.ones",
   "numpy.vstack",
   "pytest.mark.parametrize",
   "sklearn.base.clone",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils.shuffle"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logreg_intercept_scaling": {
  "lineno": 1036,
  "symbols_in_volume": [
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logreg_intercept_scaling_zero": {
  "lineno": 1048,
  "symbols_in_volume": [
   "sklearn.linear_model._logistic.LogisticRegression"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logreg_l1": {
  "lineno": 1056,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.zeros",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logreg_l1_sparse_data": {
  "lineno": 1084,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.random.RandomState",
   "numpy.zeros",
   "scipy.sparse.csr_matrix",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_logreg_predict_proba_multinomial": {
  "lineno": 1148,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.metrics.log_loss"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_lr_liblinear_warning": {
  "lineno": 147,
  "symbols_in_volume": [
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.utils._testing.assert_warns_message",
   "sklearn.utils._testing.skip_if_no_parallel"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_max_iter": {
  "lineno": 1169,
  "symbols_in_volume": [
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_multinomial_binary": {
  "lineno": 251,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.array",
   "numpy.intp",
   "numpy.mean",
   "pytest.mark.parametrize",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_multinomial_binary_probabilities": {
  "lineno": 273,
  "symbols_in_volume": [
   "numpy.c_",
   "numpy.exp",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_multinomial_grad_hess": {
  "lineno": 973,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.array",
   "numpy.dot",
   "numpy.linspace",
   "numpy.newaxis",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.zeros",
   "scipy.linalg.lstsq",
   "sklearn.linear_model._logistic._multinomial_grad_hess",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_multinomial_logistic_regression_string_inputs": {
  "lineno": 568,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.unique",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.linear_model._logistic.LogisticRegressionCV",
   "sklearn.preprocessing.LabelEncoder",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_multinomial_validation": {
  "lineno": 199,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_n_iter": {
  "lineno": 1188,
  "symbols_in_volume": [
   "numpy.unique",
   "pytest.mark.parametrize",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.linear_model._logistic.LogisticRegressionCV"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_nan": {
  "lineno": 340,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.nan",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_ovr_multinomial_iris": {
  "lineno": 653,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.newaxis",
   "sklearn.linear_model._logistic.LogisticRegressionCV",
   "sklearn.model_selection.StratifiedKFold",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_penalty_none": {
  "lineno": 1748,
  "symbols_in_volume": [
   "numpy.inf",
   "pytest.mark.parametrize",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.linear_model._logistic.LogisticRegressionCV",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raise_message",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_predict_2_classes": {
  "lineno": 67,
  "symbols_in_volume": [
   "sklearn.linear_model._logistic.LogisticRegression"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_predict_3_classes": {
  "lineno": 160,
  "symbols_in_volume": [
   "sklearn.linear_model._logistic.LogisticRegression"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_predict_iris": {
  "lineno": 165,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.ones",
   "numpy.unique",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_saga_sparse": {
  "lineno": 1028,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model._logistic.LogisticRegressionCV"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_saga_vs_liblinear": {
  "lineno": 1269,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.logspace",
   "scipy.sparse.csr_matrix",
   "sklearn.datasets.load_iris",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_scores_attribute_layout_elasticnet": {
  "lineno": 1810,
  "symbols_in_volume": [
   "pytest.approx",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.linear_model._logistic.LogisticRegressionCV",
   "sklearn.model_selection.StratifiedKFold",
   "sklearn.model_selection.cross_val_score"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_sparsify": {
  "lineno": 290,
  "symbols_in_volume": [
   "scipy.sparse.coo_matrix",
   "scipy.sparse.issparse",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_warm_start": {
  "lineno": 1237,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.sum",
   "pytest.mark.parametrize",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_warm_start_converge_LR": {
  "lineno": 1380,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.concatenate",
   "numpy.random.RandomState",
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.metrics.log_loss",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_logistic.test_write_parameters": {
  "lineno": 331,
  "symbols_in_volume": [
   "sklearn.linear_model._logistic.LogisticRegression",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.dot",
   "sklearn.datasets.make_sparse_coded_signal"
  ],
  "type": "module"
 },
 "sklearn.linear_model.tests.test_omp.test_bad_input": {
  "lineno": 84,
  "symbols_in_volume": [
   "sklearn.linear_model.orthogonal_mp",
   "sklearn.linear_model.orthogonal_mp_gram",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_correct_shapes": {
  "lineno": 31,
  "symbols_in_volume": [
   "sklearn.linear_model.orthogonal_mp"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_correct_shapes_gram": {
  "lineno": 38,
  "symbols_in_volume": [
   "sklearn.linear_model.orthogonal_mp_gram"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_estimator": {
  "lineno": 119,
  "symbols_in_volume": [
   "numpy.count_nonzero",
   "sklearn.linear_model.OrthogonalMatchingPursuit",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_identical_regressors": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.zeros",
   "sklearn.linear_model.orthogonal_mp",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_n_nonzero_coefs": {
  "lineno": 45,
  "symbols_in_volume": [
   "numpy.count_nonzero",
   "sklearn.linear_model.orthogonal_mp"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_no_atoms": {
  "lineno": 172,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.dot",
   "numpy.zeros_like",
   "sklearn.linear_model.orthogonal_mp",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_omp_cv": {
  "lineno": 201,
  "symbols_in_volume": [
   "sklearn.linear_model.OrthogonalMatchingPursuit",
   "sklearn.linear_model.OrthogonalMatchingPursuitCV",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_omp_path": {
  "lineno": 181,
  "symbols_in_volume": [
   "sklearn.linear_model.orthogonal_mp",
   "sklearn.linear_model.orthogonal_mp_gram",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_omp_reaches_least_squares": {
  "lineno": 215,
  "symbols_in_volume": [
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.OrthogonalMatchingPursuit",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_omp_return_path_prop_with_gram": {
  "lineno": 192,
  "symbols_in_volume": [
   "sklearn.linear_model.orthogonal_mp",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_orthogonal_mp_gram_readonly": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.flatnonzero",
   "sklearn.linear_model.orthogonal_mp_gram",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_perfect_signal_recovery": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.flatnonzero",
   "sklearn.linear_model.orthogonal_mp",
   "sklearn.linear_model.orthogonal_mp_gram",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_swapped_regressors": {
  "lineno": 157,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.flatnonzero",
   "numpy.zeros",
   "sklearn.linear_model.orthogonal_mp",
   "sklearn.linear_model.orthogonal_mp_gram",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_tol": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.sum",
   "sklearn.linear_model.orthogonal_mp"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_unreachable_accuracy": {
  "lineno": 72,
  "symbols_in_volume": [
   "sklearn.linear_model.orthogonal_mp",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_with_without_gram": {
  "lineno": 60,
  "symbols_in_volume": [
   "sklearn.linear_model.orthogonal_mp",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_omp.test_with_without_gram_tol": {
  "lineno": 66,
  "symbols_in_volume": [
   "sklearn.linear_model.orthogonal_mp",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange",
   "scipy.sparse.csr_matrix",
   "sklearn.datasets.load_iris",
   "sklearn.utils.check_random_state"
  ],
  "type": "module"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.MyPassiveAggressive": {
  "lineno": 26,
  "symbols_in_volume": [
   "sklearn.base.ClassifierMixin"
  ],
  "type": "class"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.MyPassiveAggressive.__init__": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.MyPassiveAggressive.fit": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.dot",
   "numpy.float64",
   "numpy.sign",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.MyPassiveAggressive.project": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_class_weights": {
  "lineno": 144,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.filterwarnings",
   "sklearn.linear_model.PassiveAggressiveClassifier",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_classifier_accuracy": {
  "lineno": 71,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "sklearn.linear_model.PassiveAggressiveClassifier"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_classifier_correctness": {
  "lineno": 120,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize",
   "sklearn.linear_model.PassiveAggressiveClassifier",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_classifier_partial_fit": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.unique",
   "pytest.mark.filterwarnings",
   "sklearn.linear_model.PassiveAggressiveClassifier"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_classifier_refit": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.unique",
   "pytest.mark.filterwarnings",
   "sklearn.linear_model.PassiveAggressiveClassifier",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_classifier_undefined_methods": {
  "lineno": 137,
  "symbols_in_volume": [
   "sklearn.linear_model.PassiveAggressiveClassifier",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_equal_class_weight": {
  "lineno": 176,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "sklearn.linear_model.PassiveAggressiveClassifier",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_partial_fit_weight_class_balanced": {
  "lineno": 168,
  "symbols_in_volume": [
   "numpy.unique",
   "pytest.mark.filterwarnings",
   "sklearn.linear_model.PassiveAggressiveClassifier",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_regressor_correctness": {
  "lineno": 269,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize",
   "sklearn.linear_model.PassiveAggressiveRegressor",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_regressor_mse": {
  "lineno": 226,
  "symbols_in_volume": [
   "numpy.mean",
   "pytest.mark.filterwarnings",
   "sklearn.linear_model.PassiveAggressiveRegressor"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_regressor_partial_fit": {
  "lineno": 248,
  "symbols_in_volume": [
   "numpy.mean",
   "pytest.mark.filterwarnings",
   "sklearn.linear_model.PassiveAggressiveRegressor"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_regressor_undefined_methods": {
  "lineno": 288,
  "symbols_in_volume": [
   "sklearn.linear_model.PassiveAggressiveRegressor",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_wrong_class_weight_format": {
  "lineno": 211,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.filterwarnings",
   "sklearn.linear_model.PassiveAggressiveClassifier",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_passive_aggressive.test_wrong_class_weight_label": {
  "lineno": 199,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.filterwarnings",
   "sklearn.linear_model.PassiveAggressiveClassifier",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_perceptron": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange",
   "scipy.sparse.csr_matrix",
   "sklearn.datasets.load_iris",
   "sklearn.utils.check_random_state"
  ],
  "type": "module"
 },
 "sklearn.linear_model.tests.test_perceptron.MyPerceptron": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.linear_model.tests.test_perceptron.MyPerceptron.__init__": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_perceptron.MyPerceptron.fit": {
  "lineno": 27,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_perceptron.MyPerceptron.predict": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "numpy.sign"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_perceptron.MyPerceptron.project": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_perceptron.test_perceptron_accuracy": {
  "lineno": 47,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "sklearn.linear_model.Perceptron"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_perceptron.test_perceptron_correctness": {
  "lineno": 57,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "sklearn.linear_model.Perceptron",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_perceptron.test_undefined_methods": {
  "lineno": 71,
  "symbols_in_volume": [
   "sklearn.linear_model.Perceptron",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.column_stack",
   "numpy.newaxis",
   "numpy.random.RandomState",
   "numpy.unique"
  ],
  "type": "module"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_default_residual_threshold": {
  "lineno": 397,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.ones_like",
   "numpy.testing.assert_array_equal",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.RANSACRegressor"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_dynamic_max_trials": {
  "lineno": 413,
  "symbols_in_volume": [
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.RANSACRegressor",
   "sklearn.linear_model._ransac._dynamic_max_trials",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_exceed_max_skips": {
  "lineno": 198,
  "symbols_in_volume": [
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.RANSACRegressor",
   "sklearn.utils._testing.assert_raises_regexp"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_exceed_max_skips.is_data_valid": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_fit_sample_weight": {
  "lineno": 453,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.bool_",
   "numpy.ndarray.flatten",
   "numpy.ones",
   "numpy.ones_like",
   "numpy.repeat",
   "numpy.testing.assert_array_equal",
   "sklearn.linear_model.Lasso",
   "sklearn.linear_model.RANSACRegressor",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_inliers_outliers": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.ones_like",
   "numpy.testing.assert_array_equal",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.RANSACRegressor"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_is_data_valid": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.RANSACRegressor",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_is_data_valid.is_data_valid": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_is_model_valid": {
  "lineno": 68,
  "symbols_in_volume": [
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.RANSACRegressor",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_is_model_valid.is_model_valid": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_max_trials": {
  "lineno": 83,
  "symbols_in_volume": [
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.RANSACRegressor",
   "sklearn.linear_model._ransac._dynamic_max_trials",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_min_n_samples": {
  "lineno": 299,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.RANSACRegressor",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_multi_dimensional_targets": {
  "lineno": 335,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.column_stack",
   "numpy.ones_like",
   "numpy.testing.assert_array_equal",
   "pytest.mark.filterwarnings",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.RANSACRegressor"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_no_valid_data": {
  "lineno": 166,
  "symbols_in_volume": [
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.RANSACRegressor",
   "sklearn.utils._testing.assert_raises_regexp"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_no_valid_data.is_data_valid": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_no_valid_model": {
  "lineno": 182,
  "symbols_in_volume": [
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.RANSACRegressor",
   "sklearn.utils._testing.assert_raises_regexp"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_no_valid_model.is_model_valid": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_none_estimator": {
  "lineno": 284,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.RANSACRegressor"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_predict": {
  "lineno": 137,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_array_equal",
   "numpy.zeros",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.RANSACRegressor"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_resid_thresh_no_inliers": {
  "lineno": 151,
  "symbols_in_volume": [
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.RANSACRegressor",
   "sklearn.utils._testing.assert_raises_regexp"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_residual_loss": {
  "lineno": 356,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.column_stack",
   "numpy.sum",
   "numpy.testing.assert_array_almost_equal",
   "pytest.mark.filterwarnings",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.RANSACRegressor"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_score": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.zeros",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.RANSACRegressor"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_sparse_coo": {
  "lineno": 239,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.ones_like",
   "numpy.testing.assert_array_equal",
   "scipy.sparse.coo_matrix",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.RANSACRegressor"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_sparse_csc": {
  "lineno": 269,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.ones_like",
   "numpy.testing.assert_array_equal",
   "scipy.sparse.csc_matrix",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.RANSACRegressor"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_sparse_csr": {
  "lineno": 254,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.ones_like",
   "numpy.testing.assert_array_equal",
   "scipy.sparse.csr_matrix",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.RANSACRegressor"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_stop_n_inliers": {
  "lineno": 102,
  "symbols_in_volume": [
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.RANSACRegressor"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_stop_score": {
  "lineno": 112,
  "symbols_in_volume": [
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.RANSACRegressor"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_warn_exceed_max_skips": {
  "lineno": 215,
  "symbols_in_volume": [
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.RANSACRegressor",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ransac.test_ransac_warn_exceed_max_skips.is_data_valid": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.RandomState",
   "scipy.sparse.csr_matrix",
   "sklearn.datasets.load_diabetes",
   "sklearn.datasets.load_iris"
  ],
  "type": "module"
 },
 "sklearn.linear_model.tests.test_ridge._make_sparse_offset_regression": {
  "lineno": 369,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.random.RandomState",
   "sklearn.datasets.make_regression"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge._test_multi_ridge_diabetes": {
  "lineno": 670,
  "symbols_in_volume": [
   "numpy.vstack",
   "sklearn.linear_model.Ridge",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge._test_ridge_classifiers": {
  "lineno": 685,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.unique",
   "sklearn.linear_model.RidgeClassifier",
   "sklearn.linear_model.RidgeClassifierCV",
   "sklearn.model_selection.KFold"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge._test_ridge_cv": {
  "lineno": 647,
  "symbols_in_volume": [
   "numpy.float64",
   "sklearn.linear_model.RidgeCV",
   "sklearn.model_selection.KFold"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge._test_ridge_cv_normalize": {
  "lineno": 637,
  "symbols_in_volume": [
   "sklearn.linear_model.Ridge",
   "sklearn.linear_model.RidgeCV",
   "sklearn.model_selection.GridSearchCV"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge._test_ridge_diabetes": {
  "lineno": 664,
  "symbols_in_volume": [
   "numpy.round",
   "sklearn.linear_model.Ridge"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge._test_ridge_loo": {
  "lineno": 583,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.vstack",
   "pytest.approx",
   "sklearn.linear_model.RidgeCV",
   "sklearn.linear_model._ridge._RidgeGCV",
   "sklearn.metrics.get_scorer",
   "sklearn.metrics.make_scorer",
   "sklearn.metrics.mean_squared_error",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge._test_tolerance": {
  "lineno": 701,
  "symbols_in_volume": [
   "sklearn.linear_model.Ridge"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.check_dense_sparse": {
  "lineno": 713,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_X_CenterStackOp": {
  "lineno": 314,
  "symbols_in_volume": [
   "numpy.hstack",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "sklearn.linear_model._ridge._X_CenterStackOp",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_check_gcv_mode_choice": {
  "lineno": 566,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "sklearn.datasets.make_regression",
   "sklearn.linear_model._ridge._check_gcv_mode"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_check_gcv_mode_error": {
  "lineno": 556,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.datasets.make_regression",
   "sklearn.linear_model.RidgeCV",
   "sklearn.linear_model._ridge._check_gcv_mode"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_class_weight_vs_sample_weight": {
  "lineno": 776,
  "symbols_in_volume": [
   "numpy.ones",
   "pytest.mark.parametrize",
   "sklearn.linear_model.RidgeClassifier",
   "sklearn.linear_model.RidgeClassifierCV",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_class_weights": {
  "lineno": 740,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.linear_model.RidgeClassifier",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_class_weights_cv": {
  "lineno": 805,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.linear_model.RidgeClassifierCV",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_compute_covariance": {
  "lineno": 349,
  "symbols_in_volume": [
   "numpy.average",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.sqrt",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "sklearn.linear_model._ridge._RidgeGCV",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_compute_gram": {
  "lineno": 329,
  "symbols_in_volume": [
   "numpy.average",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.sqrt",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "sklearn.linear_model._ridge._RidgeGCV",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_dense_sparse": {
  "lineno": 723,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_dtype_match": {
  "lineno": 1150,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float32",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.linear_model.Ridge",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_dtype_match_cholesky": {
  "lineno": 1181,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.random.RandomState",
   "sklearn.linear_model.Ridge",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_n_iter": {
  "lineno": 1019,
  "symbols_in_volume": [
   "numpy.tile",
   "sklearn.linear_model.Ridge",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_primal_dual_relationship": {
  "lineno": 100,
  "symbols_in_volume": [
   "numpy.dot",
   "sklearn.linear_model._ridge._solve_cholesky",
   "sklearn.linear_model._ridge._solve_cholesky_kernel",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_raises_value_error_if_sample_weights_greater_than_1d": {
  "lineno": 897,
  "symbols_in_volume": [
   "numpy.newaxis",
   "numpy.random.RandomState",
   "sklearn.linear_model.Ridge",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_raises_value_error_if_sample_weights_greater_than_1d.fit_ridge_not_ok": {
  "lineno": 921,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_raises_value_error_if_sample_weights_greater_than_1d.fit_ridge_not_ok_2": {
  "lineno": 924,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_raises_value_error_if_solver_not_supported": {
  "lineno": 995,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_raises_value_error_if_solver_not_supported.func": {
  "lineno": 1005,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.ones",
   "sklearn.linear_model.ridge_regression"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.linear_model.Ridge"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_classifier_cv_store_cv_values": {
  "lineno": 848,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.linear_model.RidgeClassifierCV"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_classifier_no_support_multilabel": {
  "lineno": 1145,
  "symbols_in_volume": [
   "sklearn.datasets.make_multilabel_classification",
   "sklearn.linear_model.RidgeClassifier",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_fit_intercept_sparse": {
  "lineno": 1038,
  "symbols_in_volume": [
   "numpy.allclose",
   "pytest.mark.parametrize",
   "pytest.warns",
   "scipy.sparse.csr_matrix",
   "sklearn.linear_model.Ridge"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_fit_intercept_sparse_error": {
  "lineno": 1065,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "scipy.sparse.csr_matrix",
   "sklearn.linear_model.Ridge"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_fit_intercept_sparse_sag": {
  "lineno": 1075,
  "symbols_in_volume": [
   "numpy.allclose",
   "pytest.warns",
   "scipy.sparse.csr_matrix",
   "sklearn.linear_model.Ridge"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_gcv_sample_weights": {
  "lineno": 496,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.random.RandomState",
   "numpy.repeat",
   "numpy.sum",
   "pytest.approx",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "sklearn.linear_model.Ridge",
   "sklearn.linear_model.RidgeCV",
   "sklearn.model_selection.GroupKFold",
   "sklearn.model_selection.cross_val_predict",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_gcv_vs_ridge_loo_cv": {
  "lineno": 429,
  "symbols_in_volume": [
   "numpy.asarray",
   "pytest.approx",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "sklearn.linear_model.RidgeCV",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_individual_penalties": {
  "lineno": 288,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.random.RandomState",
   "sklearn.linear_model.Ridge",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_intercept": {
  "lineno": 227,
  "symbols_in_volume": [
   "numpy.c_",
   "numpy.random.RandomState",
   "sklearn.linear_model.Ridge",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_loo_cv_asym_scoring": {
  "lineno": 469,
  "symbols_in_volume": [
   "pytest.approx",
   "sklearn.linear_model.RidgeCV",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_regression_check_arguments_validity": {
  "lineno": 1095,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.ones",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "sklearn.linear_model.ridge_regression",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils._testing.assert_raises_regex",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_regression_convergence_fail": {
  "lineno": 147,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.linear_model.ridge_regression",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_regression_dtype_stability": {
  "lineno": 1211,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.float32",
   "numpy.float32.dtype",
   "numpy.float64",
   "numpy.float64.dtype",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.linear_model.ridge_regression",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_regression_sample_weights": {
  "lineno": 123,
  "symbols_in_volume": [
   "numpy.newaxis",
   "numpy.random.RandomState",
   "numpy.sqrt",
   "sklearn.linear_model.ridge_regression",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_sag_with_X_fortran": {
  "lineno": 1242,
  "symbols_in_volume": [
   "numpy.asfortranarray",
   "sklearn.datasets.make_regression",
   "sklearn.linear_model.Ridge"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_sample_weights": {
  "lineno": 157,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.concatenate",
   "numpy.diag",
   "numpy.eye",
   "numpy.ones",
   "numpy.random.RandomState",
   "scipy.linalg.solve",
   "sklearn.linear_model.Ridge",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_shapes": {
  "lineno": 203,
  "symbols_in_volume": [
   "numpy.c_",
   "numpy.newaxis",
   "numpy.random.RandomState",
   "sklearn.linear_model.Ridge"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_singular": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.random.RandomState",
   "sklearn.linear_model.Ridge"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_sparse_svd": {
  "lineno": 733,
  "symbols_in_volume": [
   "scipy.sparse.csc_matrix",
   "sklearn.linear_model.Ridge",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridge_vs_lstsq": {
  "lineno": 267,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.Ridge",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridgecv_int_alphas": {
  "lineno": 967,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.linear_model.RidgeCV"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridgecv_negative_alphas": {
  "lineno": 977,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.linear_model.RidgeCV",
   "sklearn.utils._testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridgecv_sample_weight": {
  "lineno": 873,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.linear_model.Ridge",
   "sklearn.linear_model.RidgeCV",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.model_selection.KFold",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_ridgecv_store_cv_values": {
  "lineno": 821,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.linear_model.RidgeCV",
   "sklearn.utils._testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_solver_consistency": {
  "lineno": 394,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.arange",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "sklearn.linear_model.Ridge",
   "sklearn.linear_model.RidgeCV",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_sparse_cg_max_iter": {
  "lineno": 1013,
  "symbols_in_volume": [
   "sklearn.linear_model.Ridge"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_sparse_design_with_sample_weights": {
  "lineno": 936,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.dok_matrix",
   "scipy.sparse.lil_matrix",
   "sklearn.linear_model.Ridge",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_ridge.test_toy_ridge_object": {
  "lineno": 245,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.ndarray",
   "numpy.vstack",
   "sklearn.linear_model.Ridge",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.datasets.load_iris"
  ],
  "type": "module"
 },
 "sklearn.linear_model.tests.test_sag.get_pobj": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.get_step_size": {
  "lineno": 225,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.log_dloss": {
  "lineno": 33,
  "symbols_in_volume": [
   "math.exp"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.log_loss": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.log",
   "numpy.mean"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.sag": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.random.RandomState",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.sag_sparse": {
  "lineno": 121,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.int",
   "numpy.zeros",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.squared_dloss": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.squared_loss": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.mean"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_binary_classifier_class_weight": {
  "lineno": 620,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.unique",
   "pytest.mark.filterwarnings",
   "scipy.sparse.csr_matrix",
   "sklearn.base.clone",
   "sklearn.datasets.make_blobs",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.preprocessing.LabelEncoder",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.compute_class_weight"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_classifier_matching": {
  "lineno": 233,
  "symbols_in_volume": [
   "numpy.atleast_1d",
   "numpy.atleast_2d",
   "sklearn.datasets.make_blobs",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_classifier_results": {
  "lineno": 596,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.random.RandomState",
   "numpy.sign",
   "scipy.sparse.csr_matrix",
   "sklearn.base.clone",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_classifier_single_class": {
  "lineno": 733,
  "symbols_in_volume": [
   "sklearn.linear_model.LogisticRegression",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_get_auto_step_size": {
  "lineno": 412,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "sklearn.linear_model._sag.get_auto_step_size",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_raise_message",
   "sklearn.utils.extmath.row_norms"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_multiclass_classifier_class_weight": {
  "lineno": 670,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "numpy.unique",
   "numpy.vstack",
   "pytest.mark.filterwarnings",
   "scipy.sparse.csr_matrix",
   "sklearn.base.clone",
   "sklearn.datasets.make_blobs",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.preprocessing.LabelEncoder",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.compute_class_weight"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_multinomial_loss": {
  "lineno": 761,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.float64",
   "numpy.unique",
   "numpy.vstack",
   "sklearn.linear_model._base.make_dataset",
   "sklearn.linear_model._logistic._multinomial_loss_grad",
   "sklearn.linear_model._sag_fast._multinomial_grad_loss_all_samples",
   "sklearn.preprocessing.LabelBinarizer",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_multinomial_loss_ground_truth": {
  "lineno": 792,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.exp",
   "numpy.newaxis",
   "numpy.newaxis.sum",
   "numpy.vstack",
   "sklearn.linear_model._logistic._multinomial_loss_grad",
   "sklearn.preprocessing.LabelBinarizer",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.fixes.logsumexp"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_regressor_matching": {
  "lineno": 272,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.linear_model.Ridge",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_sag_classifier_computed_correctly": {
  "lineno": 494,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.unique",
   "pytest.mark.filterwarnings",
   "scipy.sparse.csr_matrix",
   "sklearn.base.clone",
   "sklearn.datasets.make_blobs",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_sag_classifier_raises_error": {
  "lineno": 828,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model.LogisticRegression"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_sag_multiclass_computed_correctly": {
  "lineno": 537,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "numpy.unique",
   "numpy.vstack",
   "pytest.mark.filterwarnings",
   "scipy.sparse.csr_matrix",
   "sklearn.base.clone",
   "sklearn.datasets.make_blobs",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_sag_pobj_matches_logistic_regression": {
  "lineno": 303,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "scipy.sparse.csr_matrix",
   "sklearn.base.clone",
   "sklearn.datasets.make_blobs",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_sag_pobj_matches_ridge_regression": {
  "lineno": 333,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.filterwarnings",
   "scipy.sparse.csr_matrix",
   "sklearn.base.clone",
   "sklearn.linear_model.Ridge",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_sag_regressor": {
  "lineno": 456,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.random.RandomState",
   "scipy.sparse.csr_matrix",
   "sklearn.base.clone",
   "sklearn.linear_model.Ridge"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_sag_regressor_computed_correctly": {
  "lineno": 365,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.random.RandomState",
   "pytest.mark.filterwarnings",
   "scipy.sparse.csr_matrix",
   "sklearn.base.clone",
   "sklearn.linear_model.Ridge",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sag.test_step_size_alpha_error": {
  "lineno": 745,
  "symbols_in_volume": [
   "sklearn.linear_model.LogisticRegression",
   "sklearn.linear_model.Ridge",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.filterwarnings",
   "sklearn.datasets.load_iris"
  ],
  "type": "module"
 },
 "sklearn.linear_model.tests.test_sgd.SGDClassifier": {
  "lineno": 75,
  "symbols_in_volume": [
   "sklearn.linear_model.SGDClassifier"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.SGDRegressor": {
  "lineno": 80,
  "symbols_in_volume": [
   "sklearn.linear_model.SGDRegressor"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.SparseSGDClassifier": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.SparseSGDRegressor": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd._SparseSGDClassifier": {
  "lineno": 42,
  "symbols_in_volume": [
   "sklearn.linear_model.SGDClassifier"
  ],
  "type": "class"
 },
 "sklearn.linear_model.tests.test_sgd._SparseSGDClassifier.decision_function": {
  "lineno": 51,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd._SparseSGDClassifier.fit": {
  "lineno": 43,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd._SparseSGDClassifier.partial_fit": {
  "lineno": 47,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd._SparseSGDClassifier.predict_proba": {
  "lineno": 55,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd._SparseSGDRegressor": {
  "lineno": 60,
  "symbols_in_volume": [
   "sklearn.linear_model.SGDRegressor"
  ],
  "type": "class"
 },
 "sklearn.linear_model.tests.test_sgd._SparseSGDRegressor.decision_function": {
  "lineno": 69,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "sklearn.linear_model.SGDRegressor.decision_function"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd._SparseSGDRegressor.fit": {
  "lineno": 61,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "sklearn.linear_model.SGDRegressor.fit"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd._SparseSGDRegressor.partial_fit": {
  "lineno": 65,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "sklearn.linear_model.SGDRegressor.partial_fit"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd._test_gradient_common": {
  "lineno": 1428,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd._test_warm_start": {
  "lineno": 194,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd._update_kwargs": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.asgd": {
  "lineno": 138,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_SGDClassifier_fit_for_all_backends": {
  "lineno": 1571,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "joblib.__version__",
   "joblib.parallel_backend",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "pytest.mark.skipif",
   "pytest.skip",
   "scipy.sparse",
   "scipy.sparse.random",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_adaptive_longer_than_constant": {
  "lineno": 344,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_argument_coef": {
  "lineno": 478,
  "symbols_in_volume": [
   "numpy.zeros",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_average_binary_computed_correctly": {
  "lineno": 514,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.random.RandomState",
   "numpy.sign",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_average_sparse": {
  "lineno": 1139,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_balanced_weight": {
  "lineno": 857,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.concatenate",
   "numpy.random.RandomState",
   "numpy.vstack",
   "pytest.mark.parametrize",
   "sklearn.metrics.f1_score",
   "sklearn.preprocessing.scale",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_class_weights": {
  "lineno": 784,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_clone": {
  "lineno": 241,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.base.clone",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_early_stopping": {
  "lineno": 332,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_elasticnet_convergence": {
  "lineno": 1243,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.linear_model.ElasticNet",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_equal_class_weight": {
  "lineno": 806,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_fit_then_partial_fit": {
  "lineno": 994,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_gradient_epsilon_insensitive": {
  "lineno": 1520,
  "symbols_in_volume": [
   "sklearn.linear_model._sgd_fast.EpsilonInsensitive"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_gradient_hinge": {
  "lineno": 1435,
  "symbols_in_volume": [
   "sklearn.linear_model._sgd_fast.Hinge"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_gradient_huber": {
  "lineno": 1497,
  "symbols_in_volume": [
   "sklearn.linear_model._sgd_fast.Huber"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_gradient_log": {
  "lineno": 1469,
  "symbols_in_volume": [
   "numpy.exp",
   "sklearn.linear_model._sgd_fast.Log",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_gradient_modified_huber": {
  "lineno": 1508,
  "symbols_in_volume": [
   "sklearn.linear_model._sgd_fast.ModifiedHuber"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_gradient_squared_epsilon_insensitive": {
  "lineno": 1531,
  "symbols_in_volume": [
   "sklearn.linear_model._sgd_fast.SquaredEpsilonInsensitive"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_gradient_squared_hinge": {
  "lineno": 1458,
  "symbols_in_volume": [
   "sklearn.linear_model._sgd_fast.SquaredHinge"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_gradient_squared_loss": {
  "lineno": 1486,
  "symbols_in_volume": [
   "sklearn.linear_model._sgd_fast.SquaredLoss"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_input_format": {
  "lineno": 229,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.c_",
   "numpy.newaxis",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_l1_ratio": {
  "lineno": 1317,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_large_regularization": {
  "lineno": 1386,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.zeros_like",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_late_onset_averaging_not_reached": {
  "lineno": 276,
  "symbols_in_volume": [
   "numpy.unique",
   "pytest.mark.parametrize",
   "sklearn.base.is_classifier",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_late_onset_averaging_reached": {
  "lineno": 293,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_loss_function_epsilon": {
  "lineno": 1310,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_multi_core_gridsearch_and_early_stopping": {
  "lineno": 1554,
  "symbols_in_volume": [
   "numpy.logspace",
   "sklearn.model_selection.RandomizedSearchCV"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_multi_thread_multi_class_and_early_stopping": {
  "lineno": 1542,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_multiple_fit": {
  "lineno": 1056,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.preprocessing.LabelEncoder"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_n_iter_no_change": {
  "lineno": 391,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_not_enough_sample_for_early_stopping": {
  "lineno": 405,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_numerical_stability_large_gradient": {
  "lineno": 1375,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.isfinite"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_partial_fit": {
  "lineno": 1272,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_partial_fit_binary": {
  "lineno": 940,
  "symbols_in_volume": [
   "numpy.unique",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_partial_fit_equal_fit": {
  "lineno": 1290,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_partial_fit_equal_fit_classif": {
  "lineno": 1004,
  "symbols_in_volume": [
   "numpy.unique",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_partial_fit_exception": {
  "lineno": 933,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_partial_fit_multiclass": {
  "lineno": 961,
  "symbols_in_volume": [
   "numpy.unique",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_partial_fit_multiclass_average": {
  "lineno": 979,
  "symbols_in_volume": [
   "numpy.unique",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_partial_fit_weight_class_balanced": {
  "lineno": 562,
  "symbols_in_volume": [
   "numpy.unique",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_raises_regexp"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_plain_has_no_average_attr": {
  "lineno": 256,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_provide_coef": {
  "lineno": 485,
  "symbols_in_volume": [
   "numpy.zeros",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_regression_losses": {
  "lineno": 1026,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.random.RandomState",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sample_weights": {
  "lineno": 906,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_set_coef_multiclass": {
  "lineno": 638,
  "symbols_in_volume": [
   "numpy.zeros",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_set_intercept": {
  "lineno": 493,
  "symbols_in_volume": [
   "numpy.zeros",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_set_intercept_binary": {
  "lineno": 508,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_set_intercept_to_intercept": {
  "lineno": 545,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_at_least_two_labels": {
  "lineno": 555,
  "symbols_in_volume": [
   "numpy.ones",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_averaged_computed_correctly": {
  "lineno": 1079,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_averaged_partial_fit": {
  "lineno": 1109,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_bad_alpha": {
  "lineno": 172,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_bad_alpha_for_optimal_learning_rate": {
  "lineno": 323,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_bad_eta0": {
  "lineno": 441,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_bad_l1_ratio": {
  "lineno": 429,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_bad_learning_rate_schedule": {
  "lineno": 435,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_bad_loss": {
  "lineno": 187,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_bad_penalty": {
  "lineno": 179,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_clf": {
  "lineno": 417,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_early_stopping_param": {
  "lineno": 460,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_early_stopping_with_partial_fit": {
  "lineno": 501,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_epsilon_insensitive": {
  "lineno": 1189,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.random.RandomState",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_huber_fit": {
  "lineno": 1217,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.random.RandomState",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_l1": {
  "lineno": 753,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.RandomState",
   "numpy.zeros",
   "pickle.dumps",
   "pickle.loads",
   "pytest.mark.parametrize",
   "scipy.sparse.issparse",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_least_squares_fit": {
  "lineno": 1163,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.random.RandomState",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_max_iter_param": {
  "lineno": 448,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_multiclass": {
  "lineno": 579,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_multiclass_average": {
  "lineno": 590,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "numpy.unique",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_multiclass_njobs": {
  "lineno": 627,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_multiclass_with_init_coef": {
  "lineno": 615,
  "symbols_in_volume": [
   "numpy.zeros",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_n_iter_no_change": {
  "lineno": 472,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_predict_proba_method_access": {
  "lineno": 658,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.linear_model.SGDClassifier.loss_functions"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_proba": {
  "lineno": 683,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.argmax",
   "numpy.argmin",
   "numpy.argsort",
   "numpy.log",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_reg": {
  "lineno": 1071,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_shuffle_param": {
  "lineno": 454,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_sgd_validation_fraction": {
  "lineno": 466,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_tol_parameter": {
  "lineno": 1398,
  "symbols_in_volume": [
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.preprocessing.StandardScaler",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_underflow_or_overlow": {
  "lineno": 1340,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.errstate",
   "numpy.int32",
   "numpy.isfinite",
   "numpy.random.RandomState",
   "numpy.unique",
   "sklearn.preprocessing.MinMaxScaler",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raises_regexp"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_validation_set_not_used_for_training": {
  "lineno": 356,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.sort",
   "pytest.mark.parametrize",
   "sklearn.base.is_classifier",
   "sklearn.model_selection.ShuffleSplit",
   "sklearn.model_selection.StratifiedShuffleSplit",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_warm_start": {
  "lineno": 221,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_warm_start_multiclass": {
  "lineno": 1051,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_weights_multiplied": {
  "lineno": 838,
  "symbols_in_volume": [
   "numpy.copy",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_wrong_class_weight_format": {
  "lineno": 831,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_wrong_class_weight_label": {
  "lineno": 824,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sgd.test_wrong_sample_weights": {
  "lineno": 925,
  "symbols_in_volume": [
   "numpy.arange",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent._test_sparse_enet_not_as_toy_dataset": {
  "lineno": 145,
  "symbols_in_volume": [
   "numpy.sum",
   "sklearn.linear_model.ElasticNet",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.make_sparse_data": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.dot",
   "numpy.random.RandomState",
   "numpy.ravel",
   "scipy.sparse.csc_matrix"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_enet_multitarget": {
  "lineno": 214,
  "symbols_in_volume": [
   "sklearn.linear_model.ElasticNet",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_enet_toy_explicit_sparse_input": {
  "lineno": 81,
  "symbols_in_volume": [
   "scipy.sparse.lil_matrix",
   "sklearn.linear_model.ElasticNet",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_enet_toy_list_input": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.array",
   "scipy.sparse.csc_matrix",
   "sklearn.linear_model.ElasticNet",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_lasso_zero": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.array",
   "scipy.sparse.csc_matrix",
   "sklearn.linear_model.Lasso",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_normalize_option": {
  "lineno": 23,
  "symbols_in_volume": [
   "scipy.sparse.csc_matrix",
   "sklearn.linear_model.ElasticNet",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_path_parameters": {
  "lineno": 232,
  "symbols_in_volume": [
   "sklearn.linear_model.ElasticNetCV",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_same_multiple_output_sparse_dense": {
  "lineno": 269,
  "symbols_in_volume": [
   "numpy.array",
   "scipy.sparse.coo_matrix",
   "sklearn.linear_model.ElasticNet",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_same_output_sparse_dense_lasso_and_enet_cv": {
  "lineno": 247,
  "symbols_in_volume": [
   "sklearn.linear_model.ElasticNetCV",
   "sklearn.linear_model.LassoCV",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_sparse_coef": {
  "lineno": 14,
  "symbols_in_volume": [
   "scipy.sparse.isspmatrix",
   "sklearn.linear_model.ElasticNet"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_sparse_enet_coordinate_descent": {
  "lineno": 293,
  "symbols_in_volume": [
   "numpy.ones",
   "scipy.sparse.csc_matrix",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.linear_model.Lasso",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_sparse_enet_not_as_toy_dataset": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_sparse_coordinate_descent.test_sparse_lasso_not_as_toy_dataset": {
  "lineno": 190,
  "symbols_in_volume": [
   "numpy.sum",
   "sklearn.linear_model.Lasso",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_1d": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.newaxis",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_2d": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.gen_toy_problem_4d": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.no_stdout_stderr": {
  "lineno": 22,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "os.devnull",
   "sys.stderr",
   "sys.stdout"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_calc_breakdown_point": {
  "lineno": 195,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.sqrt",
   "sklearn.linear_model._theil_sen._breakdown_point"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_checksubparams_n_subsamples_if_less_samples_than_features": {
  "lineno": 218,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.linear_model.TheilSenRegressor",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_checksubparams_negative_subpopulation": {
  "lineno": 200,
  "symbols_in_volume": [
   "sklearn.linear_model.TheilSenRegressor",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_checksubparams_too_few_subsamples": {
  "lineno": 206,
  "symbols_in_volume": [
   "sklearn.linear_model.TheilSenRegressor",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_checksubparams_too_many_subsamples": {
  "lineno": 212,
  "symbols_in_volume": [
   "sklearn.linear_model.TheilSenRegressor",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_less_samples_than_features": {
  "lineno": 267,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.testing.assert_array_almost_equal",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.TheilSenRegressor"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_modweiszfeld_step_1d": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_array_less",
   "sklearn.linear_model._theil_sen._modified_weiszfeld_step"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_modweiszfeld_step_2d": {
  "lineno": 118,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_almost_equal",
   "sklearn.linear_model._theil_sen._modified_weiszfeld_step"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_spatial_median_1d": {
  "lineno": 132,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.median",
   "numpy.random.RandomState",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_array_equal",
   "sklearn.linear_model._theil_sen._spatial_median"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_spatial_median_2d": {
  "lineno": 145,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_warns",
   "scipy.optimize.fmin_bfgs",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.linear_model._theil_sen._spatial_median"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_spatial_median_2d.cost_func": {
  "lineno": 149,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.sum",
   "scipy.linalg.norm"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_subpopulation": {
  "lineno": 227,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "sklearn.linear_model.TheilSenRegressor"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_subsamples": {
  "lineno": 235,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.TheilSenRegressor"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_theil_sen_1d": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.testing.assert_array_almost_equal",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.TheilSenRegressor"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_theil_sen_1d_no_intercept": {
  "lineno": 171,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.testing.assert_array_almost_equal",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.TheilSenRegressor",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_theil_sen_2d": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "scipy.linalg.norm",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.TheilSenRegressor"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_theil_sen_parallel": {
  "lineno": 254,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "scipy.linalg.norm",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.TheilSenRegressor"
  ],
  "type": "function"
 },
 "sklearn.linear_model.tests.test_theil_sen.test_verbosity": {
  "lineno": 244,
  "symbols_in_volume": [
   "sklearn.linear_model.TheilSenRegressor"
  ],
  "type": "function"
 },
 "sklearn.linear_model.theil_sen": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.linear_model.theil_sen.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.manifold": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.manifold._isomap": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.manifold._isomap.Isomap": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.manifold._isomap.Isomap.__init__": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.manifold._isomap.Isomap._fit_transform": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.manifold._isomap.Isomap.fit": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.manifold._isomap.Isomap.fit_transform": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.manifold._isomap.Isomap.reconstruction_error": {
  "lineno": 177,
  "symbols_in_volume": [
   "numpy.sqrt",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.manifold._isomap.Isomap.training_data_": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.manifold._isomap.Isomap.transform": {
  "lineno": 238,
  "symbols_in_volume": [
   "numpy.min",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.manifold._locally_linear": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.manifold._locally_linear.LocallyLinearEmbedding": {
  "lineno": 521,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.manifold._locally_linear.LocallyLinearEmbedding.__init__": {
  "lineno": 636,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.manifold._locally_linear.LocallyLinearEmbedding._fit_transform": {
  "lineno": 653,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.manifold._locally_linear.LocallyLinearEmbedding.fit": {
  "lineno": 669,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.manifold._locally_linear.LocallyLinearEmbedding.fit_transform": {
  "lineno": 686,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.manifold._locally_linear.LocallyLinearEmbedding.transform": {
  "lineno": 703,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.empty"
  ],
  "type": "function"
 },
 "sklearn.manifold._locally_linear.barycenter_kneighbors_graph": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.arange",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "sklearn.manifold._locally_linear.barycenter_weights": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.empty",
   "numpy.ones",
   "numpy.sum",
   "numpy.trace",
   "scipy.linalg.solve"
  ],
  "type": "function"
 },
 "sklearn.manifold._locally_linear.locally_linear_embedding": {
  "lineno": 188,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.empty",
   "numpy.float64",
   "numpy.full",
   "numpy.linalg.norm",
   "numpy.median",
   "numpy.meshgrid",
   "numpy.ones",
   "numpy.outer",
   "numpy.searchsorted",
   "numpy.sqrt",
   "numpy.where",
   "numpy.zeros",
   "scipy.linalg.eigh",
   "scipy.linalg.qr",
   "scipy.linalg.svd",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.eye"
  ],
  "type": "function"
 },
 "sklearn.manifold._locally_linear.null_space": {
  "lineno": 110,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.argsort",
   "numpy.sum",
   "scipy.linalg.eigh",
   "scipy.sparse.linalg.eigsh"
  ],
  "type": "function"
 },
 "sklearn.manifold._mds": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.manifold._mds.MDS": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.manifold._mds.MDS.__init__": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.manifold._mds.MDS._pairwise": {
  "lineno": 376,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.manifold._mds.MDS.fit": {
  "lineno": 380,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.manifold._mds.MDS.fit_transform": {
  "lineno": 400,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.manifold._mds._smacof_single": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dot",
   "numpy.sqrt",
   "numpy.tri"
  ],
  "type": "function"
 },
 "sklearn.manifold._mds.smacof": {
  "lineno": 133,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed",
   "joblib.effective_n_jobs",
   "numpy.argmin",
   "numpy.asarray",
   "numpy.iinfo",
   "numpy.int32",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.manifold._spectral_embedding": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.manifold._spectral_embedding.SpectralEmbedding": {
  "lineno": 353,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.manifold._spectral_embedding.SpectralEmbedding.__init__": {
  "lineno": 448,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.manifold._spectral_embedding.SpectralEmbedding._get_affinity_matrix": {
  "lineno": 464,
  "symbols_in_volume": [
   "scipy.sparse.issparse",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.manifold._spectral_embedding.SpectralEmbedding._pairwise": {
  "lineno": 459,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.manifold._spectral_embedding.SpectralEmbedding.fit": {
  "lineno": 518,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.manifold._spectral_embedding.SpectralEmbedding.fit_transform": {
  "lineno": 559,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.manifold._spectral_embedding._graph_connected_component": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.logical_or",
   "numpy.where",
   "numpy.zeros",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.manifold._spectral_embedding._graph_is_connected": {
  "lineno": 68,
  "symbols_in_volume": [
   "scipy.sparse.csgraph.connected_components",
   "scipy.sparse.isspmatrix"
  ],
  "type": "function"
 },
 "sklearn.manifold._spectral_embedding._set_diag": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.unique",
   "scipy.sparse.csgraph.laplacian",
   "scipy.sparse.csgraph.laplacian.col",
   "scipy.sparse.csgraph.laplacian.data",
   "scipy.sparse.csgraph.laplacian.flat",
   "scipy.sparse.csgraph.laplacian.row",
   "scipy.sparse.csgraph.laplacian.shape",
   "scipy.sparse.csgraph.laplacian.tocoo",
   "scipy.sparse.csgraph.laplacian.tocsr",
   "scipy.sparse.csgraph.laplacian.todia",
   "scipy.sparse.isspmatrix"
  ],
  "type": "function"
 },
 "sklearn.manifold._spectral_embedding.spectral_embedding": {
  "lineno": 135,
  "symbols_in_volume": [
   "numpy.float64",
   "pyamg.smoothed_aggregation_solver",
   "scipy.linalg.eigh",
   "scipy.sparse.csgraph.laplacian",
   "scipy.sparse.csgraph.laplacian.shape",
   "scipy.sparse.csgraph.laplacian.toarray",
   "scipy.sparse.eye",
   "scipy.sparse.issparse",
   "scipy.sparse.isspmatrix",
   "scipy.sparse.linalg.eigsh",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.manifold._t_sne": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.double",
   "numpy.finfo"
  ],
  "type": "module"
 },
 "sklearn.manifold._t_sne.TSNE": {
  "lineno": 472,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.manifold._t_sne.TSNE.__init__": {
  "lineno": 636,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.manifold._t_sne.TSNE._fit": {
  "lineno": 657,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.any",
   "numpy.float32",
   "numpy.float64",
   "numpy.isfinite",
   "numpy.ndarray",
   "scipy.sparse.issparse",
   "time.time"
  ],
  "type": "function"
 },
 "sklearn.manifold._t_sne.TSNE._tsne": {
  "lineno": 800,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.manifold._t_sne.TSNE.fit": {
  "lineno": 890,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.manifold._t_sne.TSNE.fit_transform": {
  "lineno": 866,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.manifold._t_sne._gradient_descent": {
  "lineno": 270,
  "symbols_in_volume": [
   "numpy.clip",
   "numpy.finfo",
   "numpy.float",
   "numpy.inf",
   "numpy.invert",
   "numpy.ones_like",
   "numpy.zeros_like",
   "scipy.linalg.norm",
   "time.time"
  ],
  "type": "function"
 },
 "sklearn.manifold._t_sne._joint_probabilities": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.maximum",
   "numpy.sum",
   "scipy.spatial.distance.squareform"
  ],
  "type": "function"
 },
 "sklearn.manifold._t_sne._joint_probabilities_nn": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.all",
   "numpy.float32",
   "numpy.isfinite",
   "numpy.maximum",
   "scipy.sparse.csr_matrix",
   "time.time"
  ],
  "type": "function"
 },
 "sklearn.manifold._t_sne._kl_divergence": {
  "lineno": 119,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.log",
   "numpy.maximum",
   "numpy.nan",
   "numpy.ndarray",
   "numpy.ravel",
   "numpy.sum",
   "scipy.spatial.distance.pdist",
   "scipy.spatial.distance.squareform"
  ],
  "type": "function"
 },
 "sklearn.manifold._t_sne._kl_divergence_bh": {
  "lineno": 191,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.int64",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.manifold._t_sne.trustworthiness": {
  "lineno": 399,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.argsort",
   "numpy.fill_diagonal",
   "numpy.inf",
   "numpy.newaxis",
   "numpy.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.manifold.isomap": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.manifold.isomap.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.manifold.locally_linear": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.manifold.locally_linear.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.manifold.mds": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.manifold.mds.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.manifold.setup": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.distutils.core.setup"
  ],
  "type": "module"
 },
 "sklearn.manifold.setup.configuration": {
  "lineno": 6,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.Configuration",
   "numpy.get_include",
   "os.name"
  ],
  "type": "function"
 },
 "sklearn.manifold.spectral_embedding_": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.manifold.spectral_embedding_.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.manifold.t_sne": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.manifold.t_sne.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.manifold.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.manifold.tests.test_isomap": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.manifold.tests.test_isomap.test_different_metric": {
  "lineno": 144,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "pytest.raises",
   "sklearn.datasets.make_blobs",
   "sklearn.manifold.Isomap"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_isomap.test_different_metric.custom_metric": {
  "lineno": 146,
  "symbols_in_volume": [
   "numpy.sqrt",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_isomap.test_isomap_clone_bug": {
  "lineno": 169,
  "symbols_in_volume": [
   "numpy.random.rand",
   "sklearn.manifold.Isomap"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_isomap.test_isomap_reconstruction_error": {
  "lineno": 44,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.array",
   "numpy.concatenate",
   "numpy.linalg.norm",
   "numpy.random.RandomState",
   "numpy.testing.assert_almost_equal",
   "sklearn.manifold.Isomap",
   "sklearn.neighbors.kneighbors_graph",
   "sklearn.preprocessing.KernelCenterer"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_isomap.test_isomap_simple_grid": {
  "lineno": 18,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.array",
   "numpy.testing.assert_array_almost_equal",
   "sklearn.manifold.Isomap",
   "sklearn.neighbors.kneighbors_graph"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_isomap.test_pipeline": {
  "lineno": 106,
  "symbols_in_volume": [
   "sklearn.datasets.make_blobs",
   "sklearn.manifold.Isomap",
   "sklearn.neighbors.KNeighborsClassifier",
   "sklearn.pipeline.Pipeline"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_isomap.test_pipeline_with_nearest_neighbors_transformer": {
  "lineno": 118,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "sklearn.datasets.make_blobs",
   "sklearn.manifold.Isomap",
   "sklearn.neighbors.KNeighborsTransformer",
   "sklearn.pipeline.make_pipeline"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_isomap.test_sparse_input": {
  "lineno": 179,
  "symbols_in_volume": [
   "scipy.sparse.rand",
   "sklearn.manifold.Isomap"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_isomap.test_transform": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.random.RandomState",
   "numpy.sqrt",
   "sklearn.datasets.make_s_curve",
   "sklearn.manifold.Isomap"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_locally_linear": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.manifold.tests.test_locally_linear.test_barycenter_kneighbors_graph": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.ones",
   "numpy.sum",
   "numpy.testing.assert_array_almost_equal",
   "scipy.linalg.norm",
   "sklearn.manifold._locally_linear.barycenter_kneighbors_graph"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_locally_linear.test_integer_input": {
  "lineno": 140,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.manifold.LocallyLinearEmbedding"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_locally_linear.test_lle_init_parameters": {
  "lineno": 104,
  "symbols_in_volume": [
   "numpy.random.rand",
   "sklearn.manifold.LocallyLinearEmbedding",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_locally_linear.test_lle_manifold": {
  "lineno": 73,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.abs",
   "numpy.arange",
   "numpy.array",
   "numpy.c_",
   "numpy.dot",
   "numpy.random.RandomState",
   "scipy.linalg.norm",
   "sklearn.manifold.LocallyLinearEmbedding",
   "sklearn.manifold._locally_linear.barycenter_kneighbors_graph"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_locally_linear.test_lle_simple_grid": {
  "lineno": 38,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.array",
   "numpy.dot",
   "numpy.random.RandomState",
   "numpy.testing.assert_almost_equal",
   "scipy.linalg.norm",
   "sklearn.manifold.LocallyLinearEmbedding",
   "sklearn.manifold._locally_linear.barycenter_kneighbors_graph"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_locally_linear.test_pipeline": {
  "lineno": 116,
  "symbols_in_volume": [
   "sklearn.datasets.make_blobs",
   "sklearn.manifold.LocallyLinearEmbedding",
   "sklearn.neighbors.KNeighborsClassifier",
   "sklearn.pipeline.Pipeline"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_locally_linear.test_singular_matrix": {
  "lineno": 130,
  "symbols_in_volume": [
   "numpy.ones",
   "pytest.raises",
   "sklearn.manifold.locally_linear_embedding",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_mds": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.manifold.tests.test_mds.test_MDS": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.manifold._mds.MDS"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_mds.test_smacof": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_almost_equal",
   "sklearn.manifold._mds.smacof"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_mds.test_smacof_error": {
  "lineno": 27,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "sklearn.manifold._mds.smacof"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.datasets.make_blobs"
  ],
  "type": "module"
 },
 "sklearn.manifold.tests.test_spectral_embedding._check_with_col_sign_flipping": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_connectivity": {
  "lineno": 284,
  "symbols_in_volume": [
   "numpy.array",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.manifold._spectral_embedding._graph_is_connected"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_pipeline_spectral_clustering": {
  "lineno": 246,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.filterwarnings",
   "sklearn.cluster.KMeans",
   "sklearn.manifold.SpectralEmbedding",
   "sklearn.metrics.normalized_mutual_info_score",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_precomputed_nearest_neighbors_filtering": {
  "lineno": 145,
  "symbols_in_volume": [
   "sklearn.manifold.SpectralEmbedding",
   "sklearn.neighbors.NearestNeighbors",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_sparse_graph_connected_component": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.RandomState",
   "scipy.sparse.coo_matrix",
   "sklearn.manifold._spectral_embedding._graph_connected_component",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_amg_solver": {
  "lineno": 186,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.importorskip",
   "pytest.mark.filterwarnings",
   "scipy.sparse.coo_matrix",
   "sklearn.manifold.SpectralEmbedding"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_amg_solver_failure": {
  "lineno": 220,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.random.RandomState",
   "pytest.importorskip",
   "pytest.mark.filterwarnings",
   "sklearn.datasets.make_blobs",
   "sklearn.manifold.SpectralEmbedding"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_callable_affinity": {
  "lineno": 162,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "sklearn.manifold.SpectralEmbedding",
   "sklearn.metrics.pairwise.rbf_kernel",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_deterministic": {
  "lineno": 304,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.manifold.spectral_embedding",
   "sklearn.metrics.pairwise.rbf_kernel",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_first_eigen_vector": {
  "lineno": 336,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.std",
   "pytest.approx",
   "sklearn.manifold.spectral_embedding",
   "sklearn.metrics.pairwise.rbf_kernel"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_precomputed_affinity": {
  "lineno": 128,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "sklearn.manifold.SpectralEmbedding",
   "sklearn.metrics.pairwise.rbf_kernel",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_two_components": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.float32",
   "numpy.random.RandomState",
   "numpy.zeros",
   "sklearn.manifold.SpectralEmbedding",
   "sklearn.manifold._spectral_embedding._graph_connected_component",
   "sklearn.metrics.normalized_mutual_info_score"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_unknown_affinity": {
  "lineno": 276,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.raises",
   "sklearn.manifold.SpectralEmbedding"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_unknown_eigensolver": {
  "lineno": 267,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.raises",
   "sklearn.manifold.SpectralEmbedding"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_unnormalized": {
  "lineno": 314,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "scipy.linalg.eigh",
   "scipy.sparse.csgraph.laplacian",
   "sklearn.manifold.spectral_embedding",
   "sklearn.metrics.pairwise.rbf_kernel",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.extmath._deterministic_vector_sign_flip"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.hstack",
   "numpy.linspace",
   "numpy.meshgrid"
  ],
  "type": "module"
 },
 "sklearn.manifold.tests.test_t_sne._run_answer_test": {
  "lineno": 542,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.int64",
   "numpy.zeros",
   "scipy.sparse.csr_matrix",
   "scipy.spatial.distance.squareform",
   "sklearn.manifold._barnes_hut_tsne.gradient",
   "sklearn.manifold._t_sne._joint_probabilities",
   "sklearn.metrics.pairwise.pairwise_distances",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.assert_uniform_grid": {
  "lineno": 795,
  "symbols_in_volume": [
   "numpy.mean",
   "sklearn.neighbors.NearestNeighbors"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_64bit": {
  "lineno": 602,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "pytest.mark.parametrize",
   "sklearn.manifold.TSNE",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_accessible_kl_divergence": {
  "lineno": 734,
  "symbols_in_volume": [
   "io.StringIO",
   "sklearn.manifold.TSNE",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils.check_random_state",
   "sys.stdout",
   "sys.stdout.close",
   "sys.stdout.getvalue"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_angle_out_of_range_checks": {
  "lineno": 419,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "sklearn.manifold.TSNE"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_answer_gradient_four_points": {
  "lineno": 494,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_answer_gradient_two_points": {
  "lineno": 479,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_bad_precomputed_distances": {
  "lineno": 317,
  "symbols_in_volume": [
   "numpy.asarray",
   "pytest.mark.parametrize",
   "pytest.raises",
   "scipy.sparse.csr_matrix",
   "sklearn.manifold.TSNE"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_barnes_hut_angle": {
  "lineno": 634,
  "symbols_in_volume": [
   "scipy.spatial.distance.squareform",
   "sklearn.manifold._t_sne._joint_probabilities",
   "sklearn.manifold._t_sne._joint_probabilities_nn",
   "sklearn.manifold._t_sne._kl_divergence",
   "sklearn.manifold._t_sne._kl_divergence_bh",
   "sklearn.metrics.pairwise.pairwise_distances",
   "sklearn.neighbors.NearestNeighbors",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_bh_match_exact": {
  "lineno": 810,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.testing.assert_allclose",
   "sklearn.manifold.TSNE",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_binary_perplexity_stability": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.float32",
   "sklearn.manifold._t_sne._joint_probabilities_nn",
   "sklearn.manifold._utils._binary_search_perplexity",
   "sklearn.neighbors.NearestNeighbors",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_binary_search": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.double",
   "numpy.exp",
   "numpy.finfo",
   "numpy.float32",
   "numpy.log",
   "numpy.maximum",
   "numpy.mean",
   "numpy.sum",
   "sklearn.manifold._utils._binary_search_perplexity",
   "sklearn.metrics.pairwise.pairwise_distances",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_binary_search_neighbors": {
  "lineno": 118,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.array",
   "numpy.float32",
   "numpy.linspace",
   "sklearn.manifold._utils._binary_search_perplexity",
   "sklearn.metrics.pairwise.pairwise_distances",
   "sklearn.neighbors.NearestNeighbors",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_chebyshev_metric": {
  "lineno": 585,
  "symbols_in_volume": [
   "sklearn.manifold.TSNE",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_distance_not_available": {
  "lineno": 401,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "sklearn.manifold.TSNE"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_early_exaggeration_too_small": {
  "lineno": 303,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "sklearn.manifold.TSNE"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_early_exaggeration_used": {
  "lineno": 444,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.float32",
   "sklearn.manifold.TSNE",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_exact_no_precomputed_sparse": {
  "lineno": 332,
  "symbols_in_volume": [
   "pytest.raises",
   "scipy.sparse.csr_matrix",
   "sklearn.manifold.TSNE"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_fit_csr_matrix": {
  "lineno": 265,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "sklearn.manifold.TSNE",
   "sklearn.manifold._t_sne.trustworthiness",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_gradient": {
  "lineno": 190,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.fill_diagonal",
   "numpy.float32",
   "scipy.optimize.check_grad",
   "sklearn.manifold._t_sne._joint_probabilities",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_gradient.fun": {
  "lineno": 207,
  "symbols_in_volume": [
   "sklearn.manifold._t_sne._kl_divergence"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_gradient.grad": {
  "lineno": 210,
  "symbols_in_volume": [
   "sklearn.manifold._t_sne._kl_divergence"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_gradient_bh_multithread_match_sequential": {
  "lineno": 831,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.testing.assert_allclose",
   "sklearn.manifold._t_sne._joint_probabilities_nn",
   "sklearn.manifold._t_sne._kl_divergence_bh",
   "sklearn.neighbors.NearestNeighbors",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_gradient_descent_stops": {
  "lineno": 43,
  "symbols_in_volume": [
   "io.StringIO",
   "numpy.zeros",
   "sklearn.manifold._t_sne._gradient_descent",
   "sys.stdout",
   "sys.stdout.close",
   "sys.stdout.getvalue"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_gradient_descent_stops.ObjectiveSmallGradient": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.manifold.tests.test_t_sne.test_gradient_descent_stops.ObjectiveSmallGradient.__call__": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_gradient_descent_stops.ObjectiveSmallGradient.__init__": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_gradient_descent_stops.flat_function": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_high_perplexity_precomputed_sparse_distances": {
  "lineno": 338,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "scipy.sparse.csr_matrix",
   "sklearn.manifold.TSNE"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_init_ndarray": {
  "lineno": 387,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.zeros",
   "sklearn.manifold.TSNE",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_init_ndarray_precomputed": {
  "lineno": 394,
  "symbols_in_volume": [
   "numpy.zeros",
   "sklearn.manifold.TSNE"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_init_not_available": {
  "lineno": 379,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "sklearn.manifold.TSNE"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_kl_divergence_not_nan": {
  "lineno": 620,
  "symbols_in_volume": [
   "numpy.isnan",
   "pytest.mark.parametrize",
   "sklearn.manifold.TSNE",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_method_not_available": {
  "lineno": 412,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "sklearn.manifold.TSNE"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_min_grad_norm": {
  "lineno": 691,
  "symbols_in_volume": [
   "io.StringIO",
   "numpy.array",
   "sklearn.manifold.TSNE",
   "sklearn.utils.check_random_state",
   "sys.stdout",
   "sys.stdout.close",
   "sys.stdout.getvalue"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_n_components_range": {
  "lineno": 437,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "sklearn.manifold.TSNE"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_n_iter_used": {
  "lineno": 463,
  "symbols_in_volume": [
   "numpy.float32",
   "sklearn.manifold.TSNE",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_n_iter_without_progress": {
  "lineno": 666,
  "symbols_in_volume": [
   "io.StringIO",
   "sklearn.manifold.TSNE",
   "sklearn.utils._testing.skip_if_32bit",
   "sklearn.utils.check_random_state",
   "sys.stdout",
   "sys.stdout.close",
   "sys.stdout.getvalue"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_non_positive_computed_distances": {
  "lineno": 368,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "sklearn.manifold.TSNE"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_non_positive_computed_distances.metric": {
  "lineno": 370,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_optimization_minimizes_kl_divergence": {
  "lineno": 251,
  "symbols_in_volume": [
   "sklearn.datasets.make_blobs",
   "sklearn.manifold.TSNE",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_pca_initialization_not_compatible_with_precomputed_kernel": {
  "lineno": 428,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "sklearn.manifold.TSNE"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_preserve_trustworthiness_approximately": {
  "lineno": 237,
  "symbols_in_volume": [
   "numpy.float32",
   "pytest.mark.parametrize",
   "sklearn.manifold.TSNE",
   "sklearn.manifold._t_sne.trustworthiness",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_preserve_trustworthiness_approximately_with_precomputed_distances": {
  "lineno": 279,
  "symbols_in_volume": [
   "scipy.spatial.distance.pdist",
   "scipy.spatial.distance.squareform",
   "sklearn.manifold.TSNE",
   "sklearn.manifold._t_sne.trustworthiness",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_reduction_to_one_component": {
  "lineno": 593,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.isfinite",
   "sklearn.manifold.TSNE",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_skip_num_points_gradient": {
  "lineno": 516,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_sparse_precomputed_distance": {
  "lineno": 348,
  "symbols_in_volume": [
   "scipy.sparse.issparse",
   "sklearn.exceptions.EfficiencyWarning",
   "sklearn.manifold.TSNE",
   "sklearn.metrics.pairwise.pairwise_distances",
   "sklearn.neighbors.kneighbors_graph",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.ignore_warnings",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_too_few_iterations": {
  "lineno": 310,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "sklearn.manifold.TSNE"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_trustworthiness": {
  "lineno": 217,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "sklearn.manifold._t_sne.trustworthiness",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_trustworthiness_not_euclidean_metric": {
  "lineno": 293,
  "symbols_in_volume": [
   "sklearn.manifold._t_sne.trustworthiness",
   "sklearn.metrics.pairwise.pairwise_distances",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_tsne_n_jobs": {
  "lineno": 881,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "sklearn.manifold.TSNE",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_tsne_with_different_distance_metrics": {
  "lineno": 863,
  "symbols_in_volume": [
   "numpy.float32",
   "sklearn.manifold.TSNE",
   "sklearn.metrics.pairwise.cosine_distances",
   "sklearn.metrics.pairwise.manhattan_distances",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_uniform_grid": {
  "lineno": 762,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.manifold.TSNE"
  ],
  "type": "function"
 },
 "sklearn.manifold.tests.test_t_sne.test_verbose": {
  "lineno": 563,
  "symbols_in_volume": [
   "io.StringIO",
   "sklearn.manifold.TSNE",
   "sklearn.utils.check_random_state",
   "sys.stdout",
   "sys.stdout.close",
   "sys.stdout.getvalue"
  ],
  "type": "function"
 },
 "sklearn.metrics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.metrics._base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.metrics._base._average_binary_score": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.average",
   "numpy.isclose",
   "numpy.multiply",
   "numpy.repeat",
   "numpy.reshape",
   "numpy.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.metrics._base._average_multiclass_ovo_score": {
  "lineno": 134,
  "symbols_in_volume": [
   "itertools.combinations",
   "numpy.average",
   "numpy.empty",
   "numpy.logical_or",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.metrics._classification": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.metrics._classification._check_set_wise_labels": {
  "lineno": 1291,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.metrics._classification._check_targets": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.union1d",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "sklearn.metrics._classification._check_zero_division": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics._classification._prf_divide": {
  "lineno": 1230,
  "symbols_in_volume": [
   "numpy.any"
  ],
  "type": "function"
 },
 "sklearn.metrics._classification._warn_prf": {
  "lineno": 1277,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.metrics._classification._weighted_sum": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.average",
   "numpy.dot"
  ],
  "type": "function"
 },
 "sklearn.metrics._classification.accuracy_score": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics._classification.balanced_accuracy_score": {
  "lineno": 1793,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.diag",
   "numpy.errstate",
   "numpy.isnan",
   "numpy.mean",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.metrics._classification.brier_score_loss": {
  "lineno": 2421,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array_equal",
   "numpy.average",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.metrics._classification.classification_report": {
  "lineno": 1870,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.sum",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.metrics._classification.cohen_kappa_score": {
  "lineno": 528,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.arange",
   "numpy.int",
   "numpy.ones",
   "numpy.outer",
   "numpy.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.metrics._classification.confusion_matrix": {
  "lineno": 196,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.asarray",
   "numpy.errstate",
   "numpy.float64",
   "numpy.int64",
   "numpy.logical_and",
   "numpy.nan_to_num",
   "numpy.ones",
   "scipy.sparse.coo_matrix"
  ],
  "type": "function"
 },
 "sklearn.metrics._classification.f1_score": {
  "lineno": 978,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics._classification.fbeta_score": {
  "lineno": 1102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics._classification.hamming_loss": {
  "lineno": 2068,
  "symbols_in_volume": [
   "numpy.mean",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.metrics._classification.hinge_loss": {
  "lineno": 2300,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.average",
   "numpy.clip",
   "numpy.max",
   "numpy.ones_like",
   "numpy.ravel",
   "numpy.size",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.metrics._classification.jaccard_score": {
  "lineno": 682,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.array",
   "numpy.average"
  ],
  "type": "function"
 },
 "sklearn.metrics._classification.jaccard_similarity_score": {
  "lineno": 608,
  "symbols_in_volume": [
   "numpy.errstate",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.metrics._classification.log_loss": {
  "lineno": 2176,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.clip",
   "numpy.log",
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.metrics._classification.matthews_corrcoef": {
  "lineno": 821,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.float64",
   "numpy.hstack",
   "numpy.isnan",
   "numpy.sqrt",
   "numpy.trace"
  ],
  "type": "function"
 },
 "sklearn.metrics._classification.multilabel_confusion_matrix": {
  "lineno": 325,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array_equal",
   "numpy.asarray",
   "numpy.bincount",
   "numpy.hstack",
   "numpy.max",
   "numpy.min",
   "numpy.searchsorted",
   "numpy.setdiff1d",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.metrics._classification.precision_recall_fscore_support": {
  "lineno": 1325,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.average",
   "numpy.isposinf"
  ],
  "type": "function"
 },
 "sklearn.metrics._classification.precision_score": {
  "lineno": 1557,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics._classification.recall_score": {
  "lineno": 1676,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics._classification.zero_one_loss": {
  "lineno": 908,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.metrics._plot": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.metrics._plot.base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.metrics._plot.base._check_classifer_response_method": {
  "lineno": 1,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics._plot.confusion_matrix": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay.__init__": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay.plot": {
  "lineno": 46,
  "symbols_in_volume": [
   "itertools.product",
   "matplotlib.pyplot.setp",
   "matplotlib.pyplot.subplots",
   "numpy.arange",
   "numpy.empty_like"
  ],
  "type": "function"
 },
 "sklearn.metrics._plot.confusion_matrix.plot_confusion_matrix": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics._plot.precision_recall_curve": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.metrics._plot.precision_recall_curve.PrecisionRecallDisplay": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.metrics._plot.precision_recall_curve.PrecisionRecallDisplay.__init__": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics._plot.precision_recall_curve.PrecisionRecallDisplay.plot": {
  "lineno": 50,
  "symbols_in_volume": [
   "matplotlib.pyplot.subplots"
  ],
  "type": "function"
 },
 "sklearn.metrics._plot.precision_recall_curve.plot_precision_recall_curve": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics._plot.roc_curve": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.metrics._plot.roc_curve.RocCurveDisplay": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.metrics._plot.roc_curve.RocCurveDisplay.__init__": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics._plot.roc_curve.RocCurveDisplay.plot": {
  "lineno": 63,
  "symbols_in_volume": [
   "matplotlib.pyplot.subplots"
  ],
  "type": "function"
 },
 "sklearn.metrics._plot.roc_curve.plot_roc_curve": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics._plot.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings"
  ],
  "type": "module"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.data": {
  "lineno": 30,
  "symbols_in_volume": [
   "pytest.fixture",
   "sklearn.datasets.make_classification"
  ],
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.fitted_clf": {
  "lineno": 37,
  "symbols_in_volume": [
   "pytest.fixture",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.n_classes": {
  "lineno": 25,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.test_confusion_matrix_contrast": {
  "lineno": 193,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.eye",
   "numpy.testing.assert_allclose",
   "sklearn.metrics.ConfusionMatrixDisplay"
  ],
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.test_confusion_matrix_display": {
  "lineno": 159,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal",
   "sklearn.metrics.confusion_matrix",
   "sklearn.metrics.plot_confusion_matrix"
  ],
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.test_confusion_matrix_pipeline": {
  "lineno": 230,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.compose.make_column_transformer",
   "sklearn.exceptions.NotFittedError",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.metrics.confusion_matrix",
   "sklearn.metrics.plot_confusion_matrix",
   "sklearn.pipeline.make_pipeline",
   "sklearn.preprocessing.StandardScaler"
  ],
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.test_confusion_matrix_text_format": {
  "lineno": 249,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize",
   "sklearn.metrics.confusion_matrix",
   "sklearn.metrics.plot_confusion_matrix"
  ],
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.test_error_on_invalid_option": {
  "lineno": 57,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.metrics.plot_confusion_matrix"
  ],
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.test_error_on_regressor": {
  "lineno": 48,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.metrics.plot_confusion_matrix",
   "sklearn.svm.SVR"
  ],
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.test_plot_confusion_matrix": {
  "lineno": 101,
  "symbols_in_volume": [
   "matplotlib.image.AxesImage",
   "numpy.array",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize",
   "sklearn.metrics.confusion_matrix",
   "sklearn.metrics.plot_confusion_matrix"
  ],
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.test_plot_confusion_matrix_custom_labels": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize",
   "sklearn.metrics.confusion_matrix",
   "sklearn.metrics.plot_confusion_matrix"
  ],
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_confusion_matrix.y_pred": {
  "lineno": 42,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings"
  ],
  "type": "module"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.test_error_bad_response": {
  "lineno": 50,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.datasets.make_classification",
   "sklearn.metrics.plot_precision_recall_curve"
  ],
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.test_error_bad_response.MyClassifier": {
  "lineno": 63,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.ClassifierMixin"
  ],
  "type": "class"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.test_error_bad_response.MyClassifier.fit": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.test_errors": {
  "lineno": 25,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.datasets.make_classification",
   "sklearn.exceptions.NotFittedError",
   "sklearn.metrics.plot_precision_recall_curve",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.tree.DecisionTreeRegressor"
  ],
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.test_plot_precision_recall": {
  "lineno": 75,
  "symbols_in_volume": [
   "matplotlib.axes.Axes",
   "matplotlib.figure.Figure",
   "matplotlib.lines.Line2D",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose",
   "pytest.approx",
   "pytest.mark.parametrize",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.metrics.average_precision_score",
   "sklearn.metrics.plot_precision_recall_curve",
   "sklearn.metrics.precision_recall_curve"
  ],
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.test_plot_precision_recall_curve_estimator_name_multiple_calls": {
  "lineno": 158,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.metrics.plot_precision_recall_curve"
  ],
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.test_precision_recall_curve_pipeline": {
  "lineno": 125,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.compose.make_column_transformer",
   "sklearn.datasets.make_classification",
   "sklearn.exceptions.NotFittedError",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.metrics.plot_precision_recall_curve",
   "sklearn.pipeline.make_pipeline",
   "sklearn.preprocessing.StandardScaler"
  ],
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_precision_recall.test_precision_recall_curve_string_labels": {
  "lineno": 138,
  "symbols_in_volume": [
   "pytest.approx",
   "sklearn.datasets.load_breast_cancer",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.metrics.average_precision_score",
   "sklearn.metrics.plot_precision_recall_curve",
   "sklearn.pipeline.make_pipeline",
   "sklearn.preprocessing.StandardScaler"
  ],
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings"
  ],
  "type": "module"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve.data": {
  "lineno": 23,
  "symbols_in_volume": [
   "pytest.fixture",
   "sklearn.datasets.load_iris"
  ],
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve.data_binary": {
  "lineno": 28,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve.test_plot_roc_curve": {
  "lineno": 69,
  "symbols_in_volume": [
   "matplotlib.axes.Axes",
   "matplotlib.figure.Figure",
   "matplotlib.lines.Line2D",
   "numpy.array",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.metrics.auc",
   "sklearn.metrics.plot_roc_curve",
   "sklearn.metrics.roc_curve"
  ],
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve.test_plot_roc_curve_error_no_response": {
  "lineno": 44,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.metrics.plot_roc_curve"
  ],
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve.test_plot_roc_curve_error_no_response.MyClassifier": {
  "lineno": 58,
  "symbols_in_volume": [
   "sklearn.base.ClassifierMixin"
  ],
  "type": "class"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve.test_plot_roc_curve_error_no_response.MyClassifier.fit": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve.test_plot_roc_curve_error_non_binary": {
  "lineno": 34,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.metrics.plot_roc_curve",
   "sklearn.tree.DecisionTreeClassifier"
  ],
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve.test_plot_roc_curve_estimator_name_multiple_calls": {
  "lineno": 138,
  "symbols_in_volume": [
   "sklearn.linear_model.LogisticRegression",
   "sklearn.metrics.plot_roc_curve"
  ],
  "type": "function"
 },
 "sklearn.metrics._plot.tests.test_plot_roc_curve.test_roc_curve_not_fitted_errors": {
  "lineno": 123,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.compose.make_column_transformer",
   "sklearn.exceptions.NotFittedError",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.metrics.plot_roc_curve",
   "sklearn.pipeline.make_pipeline",
   "sklearn.preprocessing.StandardScaler"
  ],
  "type": "function"
 },
 "sklearn.metrics._ranking": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.metrics._ranking._binary_clf_curve": {
  "lineno": 498,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.array_equal",
   "numpy.diff",
   "numpy.r_",
   "numpy.unique",
   "numpy.where"
  ],
  "type": "function"
 },
 "sklearn.metrics._ranking._binary_roc_auc_score": {
  "lineno": 218,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.interp",
   "numpy.searchsorted",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.metrics._ranking._check_dcg_target_type": {
  "lineno": 1156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics._ranking._dcg_sample_scores": {
  "lineno": 1046,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.argsort",
   "numpy.asarray",
   "numpy.cumsum",
   "numpy.log",
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.metrics._ranking._multiclass_roc_auc_score": {
  "lineno": 398,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array_equal",
   "numpy.setdiff1d"
  ],
  "type": "function"
 },
 "sklearn.metrics._ranking._ndcg_sample_scores": {
  "lineno": 1272,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics._ranking._tie_averaged_dcg": {
  "lineno": 1107,
  "symbols_in_volume": [
   "numpy.add.at",
   "numpy.cumsum",
   "numpy.diff",
   "numpy.empty",
   "numpy.unique",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.metrics._ranking.auc": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.any",
   "numpy.diff",
   "numpy.memmap",
   "numpy.trapz"
  ],
  "type": "function"
 },
 "sklearn.metrics._ranking.average_precision_score": {
  "lineno": 104,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.metrics._ranking.average_precision_score._binary_uninterpolated_average_precision": {
  "lineno": 193,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.diff",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.metrics._ranking.coverage_error": {
  "lineno": 902,
  "symbols_in_volume": [
   "numpy.average",
   "numpy.logical_not",
   "numpy.ma.masked_array"
  ],
  "type": "function"
 },
 "sklearn.metrics._ranking.dcg_score": {
  "lineno": 1166,
  "symbols_in_volume": [
   "numpy.average"
  ],
  "type": "function"
 },
 "sklearn.metrics._ranking.label_ranking_average_precision_score": {
  "lineno": 816,
  "symbols_in_volume": [
   "numpy.sum",
   "scipy.sparse.csr_matrix",
   "scipy.stats.rankdata"
  ],
  "type": "function"
 },
 "sklearn.metrics._ranking.label_ranking_loss": {
  "lineno": 961,
  "symbols_in_volume": [
   "numpy.average",
   "numpy.bincount",
   "numpy.dot",
   "numpy.errstate",
   "numpy.logical_or",
   "numpy.unique",
   "numpy.zeros",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "sklearn.metrics._ranking.ndcg_score": {
  "lineno": 1323,
  "symbols_in_volume": [
   "numpy.average"
  ],
  "type": "function"
 },
 "sklearn.metrics._ranking.precision_recall_curve": {
  "lineno": 597,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.r_"
  ],
  "type": "function"
 },
 "sklearn.metrics._ranking.roc_auc_score": {
  "lineno": 246,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.metrics._ranking.roc_curve": {
  "lineno": 686,
  "symbols_in_volume": [
   "numpy.diff",
   "numpy.logical_or",
   "numpy.nan",
   "numpy.r_",
   "numpy.repeat",
   "numpy.where",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.metrics._regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.metrics._regression._check_reg_targets": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics._regression.explained_variance_score": {
  "lineno": 396,
  "symbols_in_volume": [
   "numpy.average",
   "numpy.ones"
  ],
  "type": "function"
 },
 "sklearn.metrics._regression.max_error": {
  "lineno": 626,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.max"
  ],
  "type": "function"
 },
 "sklearn.metrics._regression.mean_absolute_error": {
  "lineno": 121,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.average"
  ],
  "type": "function"
 },
 "sklearn.metrics._regression.mean_gamma_deviance": {
  "lineno": 799,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics._regression.mean_poisson_deviance": {
  "lineno": 762,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics._regression.mean_squared_error": {
  "lineno": 192,
  "symbols_in_volume": [
   "numpy.average",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "sklearn.metrics._regression.mean_squared_log_error": {
  "lineno": 267,
  "symbols_in_volume": [
   "numpy.log1p"
  ],
  "type": "function"
 },
 "sklearn.metrics._regression.mean_tweedie_deviance": {
  "lineno": 659,
  "symbols_in_volume": [
   "numpy.average",
   "numpy.float32",
   "numpy.float64",
   "numpy.log",
   "numpy.maximum",
   "numpy.newaxis",
   "numpy.power",
   "scipy.special.xlogy"
  ],
  "type": "function"
 },
 "sklearn.metrics._regression.median_absolute_error": {
  "lineno": 333,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.average",
   "numpy.median"
  ],
  "type": "function"
 },
 "sklearn.metrics._regression.r2_score": {
  "lineno": 488,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.average",
   "numpy.float64",
   "numpy.newaxis",
   "numpy.ones",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.metrics._scorer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.metrics._scorer._BaseScorer": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.metrics._scorer._BaseScorer.__call__": {
  "lineno": 141,
  "symbols_in_volume": [
   "functools.partial",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.metrics._scorer._BaseScorer.__init__": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics._scorer._BaseScorer.__repr__": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics._scorer._BaseScorer._factory_args": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics._scorer._MultimetricScorer": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.metrics._scorer._MultimetricScorer.__call__": {
  "lineno": 78,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "sklearn.metrics._scorer._MultimetricScorer.__init__": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics._scorer._MultimetricScorer._use_cache": {
  "lineno": 93,
  "symbols_in_volume": [
   "collections.Counter"
  ],
  "type": "function"
 },
 "sklearn.metrics._scorer._PredictScorer": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.metrics._scorer._PredictScorer._score": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics._scorer._ProbaScorer": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.metrics._scorer._ProbaScorer._factory_args": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics._scorer._ProbaScorer._score": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics._scorer._ThresholdScorer": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.metrics._scorer._ThresholdScorer._factory_args": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics._scorer._ThresholdScorer._score": {
  "lineno": 267,
  "symbols_in_volume": [
   "numpy.vstack"
  ],
  "type": "function"
 },
 "sklearn.metrics._scorer._cached_call": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics._scorer._check_multimetric_scoring": {
  "lineno": 436,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics._scorer._passthrough_scorer": {
  "lineno": 369,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics._scorer.check_scoring": {
  "lineno": 374,
  "symbols_in_volume": [
   "collections.abc.Iterable"
  ],
  "type": "function"
 },
 "sklearn.metrics._scorer.get_scorer": {
  "lineno": 338,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics._scorer.make_scorer": {
  "lineno": 531,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.base": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.metrics.base.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.classification": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.metrics.classification.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.cluster": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.metrics.cluster._bicluster": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.metrics.cluster._bicluster._check_rows_and_columns": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.cluster._bicluster._jaccard": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.cluster._bicluster._pairwise_similarity": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster._bicluster.consensus_score": {
  "lineno": 47,
  "symbols_in_volume": [
   "scipy.optimize.linear_sum_assignment"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster._supervised": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.metrics.cluster._supervised._comb2": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.cluster._supervised._generalized_average": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster._supervised.adjusted_mutual_info_score": {
  "lineno": 651,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float64",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster._supervised.adjusted_rand_score": {
  "lineno": 138,
  "symbols_in_volume": [
   "numpy.ravel",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster._supervised.check_clusterings": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.cluster._supervised.completeness_score": {
  "lineno": 395,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.cluster._supervised.contingency_matrix": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.int",
   "numpy.ones",
   "numpy.unique",
   "scipy.sparse",
   "scipy.sparse.coo_matrix"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster._supervised.entropy": {
  "lineno": 949,
  "symbols_in_volume": [
   "math.log",
   "numpy.bincount",
   "numpy.float64",
   "numpy.log",
   "numpy.sum",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster._supervised.fowlkes_mallows_score": {
  "lineno": 872,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.dot",
   "numpy.int64",
   "numpy.sqrt",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster._supervised.homogeneity_completeness_v_measure": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.cluster._supervised.homogeneity_score": {
  "lineno": 325,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.cluster._supervised.mutual_info_score": {
  "lineno": 565,
  "symbols_in_volume": [
   "math.log",
   "numpy.int32",
   "numpy.int64",
   "numpy.log",
   "numpy.ndarray",
   "numpy.nonzero",
   "numpy.ravel",
   "scipy.sparse.find",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster._supervised.normalized_mutual_info_score": {
  "lineno": 772,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float64",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster._supervised.v_measure_score": {
  "lineno": 465,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.cluster._unsupervised": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.metrics.cluster._unsupervised._silhouette_reduce": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.bincount",
   "numpy.inf",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster._unsupervised.calinski_harabasz_score": {
  "lineno": 250,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster._unsupervised.calinski_harabaz_score": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.cluster._unsupervised.check_number_of_labels": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.cluster._unsupervised.davies_bouldin_score": {
  "lineno": 309,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.average",
   "numpy.float",
   "numpy.inf",
   "numpy.max",
   "numpy.mean",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster._unsupervised.silhouette_samples": {
  "lineno": 152,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.abs",
   "numpy.any",
   "numpy.bincount",
   "numpy.concatenate",
   "numpy.diagonal",
   "numpy.errstate",
   "numpy.finfo",
   "numpy.maximum",
   "numpy.nan_to_num"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster._unsupervised.silhouette_score": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.mean"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.bicluster": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.metrics.cluster.bicluster.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.cluster.expected_mutual_info_fast": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.metrics.cluster.expected_mutual_info_fast.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.cluster.setup": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.distutils.core.setup"
  ],
  "type": "module"
 },
 "sklearn.metrics.cluster.setup.configuration": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.Configuration",
   "numpy.get_include",
   "os.name"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.supervised": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.metrics.cluster.supervised.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.metrics.cluster.tests.test_bicluster": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.metrics.cluster.tests.test_bicluster.test_consensus_score": {
  "lineno": 23,
  "symbols_in_volume": [
   "sklearn.metrics.consensus_score"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_bicluster.test_consensus_score_issue2445": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.metrics.consensus_score",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_bicluster.test_jaccard": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.metrics.cluster._bicluster._jaccard"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_common": {
  "lineno": null,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.random.RandomState",
   "sklearn.metrics.cluster.adjusted_mutual_info_score",
   "sklearn.metrics.cluster.adjusted_rand_score",
   "sklearn.metrics.cluster.calinski_harabasz_score",
   "sklearn.metrics.cluster.completeness_score",
   "sklearn.metrics.cluster.davies_bouldin_score",
   "sklearn.metrics.cluster.fowlkes_mallows_score",
   "sklearn.metrics.cluster.homogeneity_score",
   "sklearn.metrics.cluster.mutual_info_score",
   "sklearn.metrics.cluster.normalized_mutual_info_score",
   "sklearn.metrics.cluster.silhouette_score",
   "sklearn.metrics.cluster.v_measure_score"
  ],
  "type": "module"
 },
 "sklearn.metrics.cluster.tests.test_common.test_format_invariance": {
  "lineno": 150,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_common.test_format_invariance.generate_formats": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_common.test_inf_nan_input": {
  "lineno": 195,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.nan",
   "numpy.random.randint",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_common.test_non_symmetry": {
  "lineno": 97,
  "symbols_in_volume": [
   "pytest.approx",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_common.test_normalized_output": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.approx",
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_common.test_permute_labels": {
  "lineno": 127,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randint",
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_common.test_single_sample": {
  "lineno": 188,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_common.test_symmetric_non_symmetric_union": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_common.test_symmetry": {
  "lineno": 87,
  "symbols_in_volume": [
   "pytest.approx",
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.metrics.cluster.adjusted_mutual_info_score",
   "sklearn.metrics.cluster.adjusted_rand_score",
   "sklearn.metrics.cluster.completeness_score",
   "sklearn.metrics.cluster.homogeneity_score",
   "sklearn.metrics.cluster.normalized_mutual_info_score",
   "sklearn.metrics.cluster.v_measure_score"
  ],
  "type": "module"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_adjusted_mutual_info_score": {
  "lineno": 192,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.metrics.cluster.adjusted_mutual_info_score",
   "sklearn.metrics.cluster.contingency_matrix",
   "sklearn.metrics.cluster.expected_mutual_information",
   "sklearn.metrics.cluster.mutual_info_score",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_adjustment_for_chance": {
  "lineno": 178,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.testing.assert_array_almost_equal",
   "sklearn.metrics.cluster.adjusted_rand_score",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_beta_parameter": {
  "lineno": 117,
  "symbols_in_volume": [
   "sklearn.metrics.cluster.homogeneity_completeness_v_measure",
   "sklearn.metrics.cluster.v_measure_score",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_complete_but_not_homogeneous_labeling": {
  "lineno": 97,
  "symbols_in_volume": [
   "sklearn.metrics.cluster.homogeneity_completeness_v_measure",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_contingency_matrix": {
  "lineno": 247,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.histogram2d",
   "numpy.testing.assert_array_almost_equal",
   "sklearn.metrics.cluster.contingency_matrix"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_contingency_matrix_sparse": {
  "lineno": 259,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_almost_equal",
   "pytest.raises",
   "sklearn.metrics.cluster.contingency_matrix"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_entropy": {
  "lineno": 241,
  "symbols_in_volume": [
   "sklearn.metrics.cluster.entropy",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_error_messages_on_wrong_input": {
  "lineno": 34,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_exactly_zero_info_score": {
  "lineno": 269,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int",
   "numpy.logspace",
   "numpy.ones",
   "sklearn.metrics.cluster.adjusted_mutual_info_score",
   "sklearn.metrics.cluster.normalized_mutual_info_score",
   "sklearn.metrics.cluster.v_measure_score",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_expected_mutual_info_overflow": {
  "lineno": 223,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.metrics.cluster.expected_mutual_information"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_fowlkes_mallows_score": {
  "lineno": 302,
  "symbols_in_volume": [
   "numpy.sqrt",
   "sklearn.metrics.cluster.fowlkes_mallows_score",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_fowlkes_mallows_score_properties": {
  "lineno": 319,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.sqrt",
   "sklearn.metrics.cluster.fowlkes_mallows_score",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_generalized_average": {
  "lineno": 51,
  "symbols_in_volume": [
   "sklearn.metrics.cluster._supervised._generalized_average"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_homogeneous_but_not_complete_labeling": {
  "lineno": 87,
  "symbols_in_volume": [
   "sklearn.metrics.cluster.homogeneity_completeness_v_measure",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_int_overflow_mutual_info_fowlkes_mallows_score": {
  "lineno": 229,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.metrics.cluster.fowlkes_mallows_score",
   "sklearn.metrics.cluster.mutual_info_score",
   "sklearn.utils.assert_all_finite"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_non_consecutive_labels": {
  "lineno": 142,
  "symbols_in_volume": [
   "sklearn.metrics.cluster.adjusted_rand_score",
   "sklearn.metrics.cluster.homogeneity_completeness_v_measure",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_not_complete_and_not_homogeneous_labeling": {
  "lineno": 107,
  "symbols_in_volume": [
   "sklearn.metrics.cluster.homogeneity_completeness_v_measure",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_perfect_matches": {
  "lineno": 61,
  "symbols_in_volume": [
   "sklearn.metrics.cluster.adjusted_mutual_info_score",
   "sklearn.metrics.cluster.normalized_mutual_info_score",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.test_v_measure_and_mutual_information": {
  "lineno": 286,
  "symbols_in_volume": [
   "numpy.int",
   "numpy.logspace",
   "numpy.random.RandomState",
   "sklearn.metrics.cluster.entropy",
   "sklearn.metrics.cluster.mutual_info_score",
   "sklearn.metrics.cluster.normalized_mutual_info_score",
   "sklearn.metrics.cluster.v_measure_score",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_supervised.uniform_labelings_scores": {
  "lineno": 164,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.zeros",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.assert_raises_on_all_points_same_cluster": {
  "lineno": 196,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.RandomState",
   "pytest.raises"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.assert_raises_on_only_one_label": {
  "lineno": 189,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.zeros",
   "pytest.raises"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.test_calinski_harabasz_score": {
  "lineno": 203,
  "symbols_in_volume": [
   "numpy.ones",
   "pytest.approx",
   "sklearn.metrics.cluster.calinski_harabasz_score"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.test_cluster_size_1": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isnan",
   "sklearn.metrics.cluster.silhouette_samples",
   "sklearn.metrics.cluster.silhouette_score",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.test_correct_labelsize": {
  "lineno": 131,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.unique",
   "numpy.zeros",
   "pytest.raises",
   "sklearn.datasets.load_iris",
   "sklearn.metrics.cluster.silhouette_score"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.test_davies_bouldin_score": {
  "lineno": 233,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.sqrt",
   "pytest.approx",
   "pytest.warns",
   "sklearn.metrics.cluster.davies_bouldin_score"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.test_deprecated_calinski_harabaz_score": {
  "lineno": 224,
  "symbols_in_volume": [
   "numpy.ones",
   "sklearn.metrics.cluster.calinski_harabaz_score",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.test_non_encoded_labels": {
  "lineno": 151,
  "symbols_in_volume": [
   "sklearn.datasets.load_iris",
   "sklearn.metrics.cluster.silhouette_samples",
   "sklearn.metrics.cluster.silhouette_score",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.test_non_numpy_labels": {
  "lineno": 161,
  "symbols_in_volume": [
   "sklearn.datasets.load_iris",
   "sklearn.metrics.cluster.silhouette_score"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.test_silhouette": {
  "lineno": 17,
  "symbols_in_volume": [
   "pytest.approx",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.dok_matrix",
   "scipy.sparse.lil_matrix",
   "sklearn.datasets.load_iris",
   "sklearn.metrics.cluster.silhouette_score",
   "sklearn.metrics.pairwise_distances"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.test_silhouette_nonzero_diag": {
  "lineno": 169,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.finfo",
   "numpy.float32",
   "numpy.float64",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.metrics.cluster.silhouette_samples",
   "sklearn.metrics.pairwise_distances"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.tests.test_unsupervised.test_silhouette_paper_example": {
  "lineno": 82,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.tril_indices",
   "numpy.zeros",
   "pytest.approx",
   "sklearn.metrics.cluster.silhouette_samples",
   "sklearn.metrics.cluster.silhouette_score"
  ],
  "type": "function"
 },
 "sklearn.metrics.cluster.unsupervised": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.metrics.cluster.unsupervised.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.pairwise": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.metrics.pairwise._argmin_min_reduce": {
  "lineno": 500,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "sklearn.metrics.pairwise._check_chunk_size": {
  "lineno": 1408,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.pairwise._dist_wrapper": {
  "lineno": 1334,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.pairwise._euclidean_distances_upcast": {
  "lineno": 431,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.float32",
   "numpy.float64",
   "numpy.newaxis",
   "numpy.prod",
   "numpy.sqrt",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.metrics.pairwise._pairwise_callable": {
  "lineno": 1365,
  "symbols_in_volume": [
   "itertools.combinations",
   "itertools.product",
   "numpy.empty",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.metrics.pairwise._parallel_pairwise": {
  "lineno": 1339,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed",
   "joblib.effective_n_jobs",
   "numpy.empty",
   "numpy.fill_diagonal"
  ],
  "type": "function"
 },
 "sklearn.metrics.pairwise._precompute_metric_params": {
  "lineno": 1429,
  "symbols_in_volume": [
   "numpy.cov",
   "numpy.linalg.inv",
   "numpy.var",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "sklearn.metrics.pairwise._return_float_dtype": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.float",
   "numpy.float32",
   "numpy.ndarray",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.metrics.pairwise.additive_chi2_kernel": {
  "lineno": 1181,
  "symbols_in_volume": [
   "numpy.zeros",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.metrics.pairwise.check_paired_arrays": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.pairwise.check_pairwise_arrays": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.pairwise.chi2_kernel": {
  "lineno": 1242,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "sklearn.metrics.pairwise.cosine_distances": {
  "lineno": 795,
  "symbols_in_volume": [
   "numpy.clip",
   "numpy.diag_indices_from"
  ],
  "type": "function"
 },
 "sklearn.metrics.pairwise.cosine_similarity": {
  "lineno": 1132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.pairwise.distance_metrics": {
  "lineno": 1306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.pairwise.euclidean_distances": {
  "lineno": 195,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "numpy.fill_diagonal",
   "numpy.float32",
   "numpy.maximum",
   "numpy.newaxis",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "sklearn.metrics.pairwise.haversine_distances": {
  "lineno": 666,
  "symbols_in_volume": [
   "sklearn.neighbors.DistanceMetric.get_metric"
  ],
  "type": "function"
 },
 "sklearn.metrics.pairwise.kernel_metrics": {
  "lineno": 1783,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.pairwise.laplacian_kernel": {
  "lineno": 1098,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "sklearn.metrics.pairwise.linear_kernel": {
  "lineno": 969,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.pairwise.manhattan_distances": {
  "lineno": 714,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.newaxis",
   "numpy.zeros",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.issparse",
   "scipy.spatial.distance.cdist"
  ],
  "type": "function"
 },
 "sklearn.metrics.pairwise.nan_euclidean_distances": {
  "lineno": 316,
  "symbols_in_volume": [
   "numpy.clip",
   "numpy.dot",
   "numpy.fill_diagonal",
   "numpy.maximum",
   "numpy.nan",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "sklearn.metrics.pairwise.paired_cosine_distances": {
  "lineno": 877,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.pairwise.paired_distances": {
  "lineno": 911,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.metrics.pairwise.paired_euclidean_distances": {
  "lineno": 833,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.pairwise.paired_manhattan_distances": {
  "lineno": 853,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.squeeze",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.metrics.pairwise.pairwise_distances": {
  "lineno": 1609,
  "symbols_in_volume": [
   "functools.partial",
   "joblib.effective_n_jobs",
   "scipy.sparse.issparse",
   "scipy.spatial.distance.cdist",
   "scipy.spatial.distance.pdist",
   "scipy.spatial.distance.squareform",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.metrics.pairwise.pairwise_distances_argmin": {
  "lineno": 592,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.pairwise.pairwise_distances_argmin_min": {
  "lineno": 506,
  "symbols_in_volume": [
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "sklearn.metrics.pairwise.pairwise_distances_chunked": {
  "lineno": 1447,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.pairwise.pairwise_kernels": {
  "lineno": 1823,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "sklearn.metrics.pairwise.polynomial_kernel": {
  "lineno": 995,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.pairwise.rbf_kernel": {
  "lineno": 1065,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "sklearn.metrics.pairwise.sigmoid_kernel": {
  "lineno": 1031,
  "symbols_in_volume": [
   "numpy.tanh"
  ],
  "type": "function"
 },
 "sklearn.metrics.pairwise_fast": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.metrics.pairwise_fast.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.ranking": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.metrics.ranking.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.regression": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.metrics.regression.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.scorer": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.metrics.scorer.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.setup": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.distutils.core.setup"
  ],
  "type": "module"
 },
 "sklearn.metrics.setup.configuration": {
  "lineno": 6,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.Configuration",
   "os.name"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.metrics.tests.test_classification": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.metrics.tests.test_classification.make_prediction": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.c_",
   "numpy.random.RandomState",
   "sklearn.datasets.load_iris",
   "sklearn.svm.SVC",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test__check_targets": {
  "lineno": 1922,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.array",
   "numpy.squeeze",
   "pytest.raises",
   "sklearn.metrics._classification._check_targets",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test__check_targets_multiclass_with_both_y_true_and_y_pred_binary": {
  "lineno": 2018,
  "symbols_in_volume": [
   "sklearn.metrics._classification._check_targets"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_average_binary_jaccard_score": {
  "lineno": 1349,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.exceptions.UndefinedMetricWarning",
   "sklearn.metrics.jaccard_score",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_average_precision_score_duplicate_values": {
  "lineno": 325,
  "symbols_in_volume": [
   "sklearn.metrics.average_precision_score"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_average_precision_score_score_non_binary_class": {
  "lineno": 312,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.metrics.average_precision_score",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_average_precision_score_tied_values": {
  "lineno": 336,
  "symbols_in_volume": [
   "sklearn.metrics.average_precision_score"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_balanced_accuracy_score": {
  "lineno": 2248,
  "symbols_in_volume": [
   "numpy.full_like",
   "numpy.unique",
   "pytest.approx",
   "pytest.mark.parametrize",
   "sklearn.metrics.balanced_accuracy_score",
   "sklearn.metrics.recall_score",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_balanced_accuracy_score_unseen": {
  "lineno": 2243,
  "symbols_in_volume": [
   "sklearn.metrics.balanced_accuracy_score",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_brier_score_loss": {
  "lineno": 2206,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "re.escape",
   "scipy.linalg.norm",
   "sklearn.metrics.brier_score_loss",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_dictionary_output": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.arange",
   "sklearn.datasets.load_iris",
   "sklearn.metrics.classification_report",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_labels_target_names_unequal_length": {
  "lineno": 1113,
  "symbols_in_volume": [
   "sklearn.metrics.classification_report",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_multiclass": {
  "lineno": 948,
  "symbols_in_volume": [
   "numpy.arange",
   "sklearn.datasets.load_iris",
   "sklearn.metrics.classification_report"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_multiclass_balanced": {
  "lineno": 971,
  "symbols_in_volume": [
   "sklearn.metrics.classification_report"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_multiclass_with_digits": {
  "lineno": 1009,
  "symbols_in_volume": [
   "numpy.arange",
   "sklearn.datasets.load_iris",
   "sklearn.metrics.classification_report"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_multiclass_with_label_detection": {
  "lineno": 989,
  "symbols_in_volume": [
   "sklearn.datasets.load_iris",
   "sklearn.metrics.classification_report"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_multiclass_with_long_string_label": {
  "lineno": 1090,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.metrics.classification_report"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_multiclass_with_string_label": {
  "lineno": 1032,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.metrics.classification_report"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_multiclass_with_unicode_label": {
  "lineno": 1068,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.metrics.classification_report"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_no_labels_target_names_unequal_length": {
  "lineno": 1126,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.metrics.classification_report"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_classification_report_zero_division_warning": {
  "lineno": 158,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.metrics.classification_report",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_cohen_kappa": {
  "lineno": 571,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.array",
   "sklearn.metrics.cohen_kappa_score",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_confusion_matrix_binary": {
  "lineno": 380,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_confusion_matrix_binary.test": {
  "lineno": 384,
  "symbols_in_volume": [
   "numpy.sqrt",
   "sklearn.metrics.confusion_matrix",
   "sklearn.metrics.matthews_corrcoef",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_confusion_matrix_dtype": {
  "lineno": 919,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.float32",
   "numpy.float64",
   "numpy.full",
   "numpy.int32",
   "numpy.int64",
   "numpy.ones",
   "numpy.uint32",
   "numpy.uint64",
   "sklearn.metrics.confusion_matrix"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_confusion_matrix_multiclass_subset_labels": {
  "lineno": 892,
  "symbols_in_volume": [
   "numpy.max",
   "pytest.raises",
   "sklearn.metrics.confusion_matrix",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_confusion_matrix_normalize": {
  "lineno": 531,
  "symbols_in_volume": [
   "itertools.chain",
   "itertools.permutations",
   "pytest.mark.parametrize",
   "sklearn.metrics.confusion_matrix",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_confusion_matrix_normalize_single_class": {
  "lineno": 553,
  "symbols_in_volume": [
   "pytest.approx",
   "pytest.warns",
   "sklearn.metrics.confusion_matrix"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_confusion_matrix_normalize_wrong_option": {
  "lineno": 546,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.metrics.confusion_matrix"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_fscore_warnings": {
  "lineno": 1870,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.array",
   "pytest.mark.parametrize",
   "sklearn.metrics.f1_score",
   "sklearn.metrics.fbeta_score",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_hinge_loss_binary": {
  "lineno": 2025,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.metrics.hinge_loss"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_hinge_loss_multiclass": {
  "lineno": 2035,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.clip",
   "numpy.mean",
   "sklearn.metrics.hinge_loss"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_hinge_loss_multiclass_invariance_lists": {
  "lineno": 2096,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.clip",
   "numpy.mean",
   "sklearn.metrics.hinge_loss"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_hinge_loss_multiclass_missing_labels_with_labels_none": {
  "lineno": 2059,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "sklearn.metrics.hinge_loss"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_hinge_loss_multiclass_with_missing_labels": {
  "lineno": 2073,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.clip",
   "numpy.mean",
   "sklearn.metrics.hinge_loss"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_jaccard_score_validation": {
  "lineno": 1210,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "sklearn.metrics.jaccard_score",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_log_loss": {
  "lineno": 2123,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.clip",
   "numpy.log",
   "numpy.mean",
   "pytest.raises",
   "sklearn.metrics.log_loss",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_log_loss_pandas_input": {
  "lineno": 2189,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.Series",
   "sklearn.metrics.log_loss",
   "sklearn.utils._mocking.MockDataFrame",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_matthews_corrcoef": {
  "lineno": 648,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.where",
   "pytest.raises",
   "sklearn.metrics.matthews_corrcoef",
   "sklearn.preprocessing.label_binarize",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_warns_div0"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_matthews_corrcoef_against_jurman": {
  "lineno": 617,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.sqrt",
   "numpy.sum",
   "sklearn.metrics.confusion_matrix",
   "sklearn.metrics.matthews_corrcoef",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_matthews_corrcoef_against_numpy_corrcoef": {
  "lineno": 608,
  "symbols_in_volume": [
   "numpy.corrcoef",
   "numpy.random.RandomState",
   "sklearn.metrics.matthews_corrcoef",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_matthews_corrcoef_multiclass": {
  "lineno": 690,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.sqrt",
   "sklearn.metrics.matthews_corrcoef",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_matthews_corrcoef_nan": {
  "lineno": 602,
  "symbols_in_volume": [
   "sklearn.metrics.matthews_corrcoef",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_matthews_corrcoef_overflow": {
  "lineno": 745,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.repeat",
   "pytest.mark.parametrize",
   "sklearn.metrics.matthews_corrcoef",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_matthews_corrcoef_overflow.mcc_safe": {
  "lineno": 750,
  "symbols_in_volume": [
   "numpy.sqrt",
   "sklearn.metrics.confusion_matrix"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_matthews_corrcoef_overflow.random_ys": {
  "lineno": 762,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multiclass_jaccard_score": {
  "lineno": 1316,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.array",
   "sklearn.metrics.jaccard_score",
   "sklearn.preprocessing.LabelBinarizer",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multilabel_accuracy_score_subset_accuracy": {
  "lineno": 174,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.logical_not",
   "numpy.zeros",
   "sklearn.metrics.accuracy_score"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multilabel_classification_report": {
  "lineno": 1138,
  "symbols_in_volume": [
   "sklearn.datasets.make_multilabel_classification",
   "sklearn.metrics.classification_report",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multilabel_confusion_matrix_binary": {
  "lineno": 402,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multilabel_confusion_matrix_binary.test": {
  "lineno": 406,
  "symbols_in_volume": [
   "sklearn.metrics.multilabel_confusion_matrix",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multilabel_confusion_matrix_errors": {
  "lineno": 499,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "sklearn.metrics.multilabel_confusion_matrix"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multilabel_confusion_matrix_multiclass": {
  "lineno": 416,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multilabel_confusion_matrix_multiclass.test": {
  "lineno": 420,
  "symbols_in_volume": [
   "sklearn.metrics.multilabel_confusion_matrix",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multilabel_confusion_matrix_multilabel": {
  "lineno": 448,
  "symbols_in_volume": [
   "numpy.array",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.metrics.multilabel_confusion_matrix",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multilabel_hamming_loss": {
  "lineno": 1185,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.zeros",
   "numpy.zeros_like",
   "scipy.spatial.distance.hamming",
   "sklearn.metrics.hamming_loss",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multilabel_jaccard_score": {
  "lineno": 1245,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.logical_not",
   "numpy.zeros",
   "pytest.raises",
   "sklearn.exceptions.UndefinedMetricWarning",
   "sklearn.metrics.jaccard_score",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multilabel_jaccard_similarity_score_deprecation": {
  "lineno": 2266,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.array",
   "numpy.logical_not",
   "numpy.zeros",
   "sklearn.metrics.jaccard_similarity_score",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_multilabel_zero_one_loss_subset": {
  "lineno": 1171,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.logical_not",
   "numpy.zeros",
   "sklearn.metrics.zero_one_loss"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_no_labels": {
  "lineno": 1585,
  "symbols_in_volume": [
   "numpy.zeros",
   "numpy.zeros_like",
   "pytest.mark.parametrize",
   "sklearn.metrics.fbeta_score",
   "sklearn.metrics.precision_recall_fscore_support",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_no_warnings"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_no_labels_average_none": {
  "lineno": 1627,
  "symbols_in_volume": [
   "numpy.zeros",
   "numpy.zeros_like",
   "pytest.mark.parametrize",
   "sklearn.metrics.fbeta_score",
   "sklearn.metrics.precision_recall_fscore_support",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_no_warnings"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_no_labels_average_none_warn": {
  "lineno": 1664,
  "symbols_in_volume": [
   "numpy.zeros",
   "numpy.zeros_like",
   "pytest.warns",
   "sklearn.exceptions.UndefinedMetricWarning",
   "sklearn.metrics.fbeta_score",
   "sklearn.metrics.precision_recall_fscore_support",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_no_labels_check_warnings": {
  "lineno": 1607,
  "symbols_in_volume": [
   "numpy.zeros",
   "numpy.zeros_like",
   "pytest.mark.parametrize",
   "pytest.warns",
   "sklearn.exceptions.UndefinedMetricWarning",
   "sklearn.metrics.fbeta_score",
   "sklearn.metrics.precision_recall_fscore_support",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_binary": {
  "lineno": 188,
  "symbols_in_volume": [
   "sklearn.metrics.f1_score",
   "sklearn.metrics.fbeta_score",
   "sklearn.metrics.precision_recall_fscore_support",
   "sklearn.metrics.precision_score",
   "sklearn.metrics.recall_score",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_no_warnings"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_binary_averaged": {
  "lineno": 852,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.average",
   "numpy.bincount",
   "numpy.mean",
   "sklearn.metrics.precision_recall_fscore_support"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_multiclass": {
  "lineno": 780,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.metrics.f1_score",
   "sklearn.metrics.fbeta_score",
   "sklearn.metrics.precision_recall_fscore_support",
   "sklearn.metrics.precision_score",
   "sklearn.metrics.recall_score",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_multilabel_1": {
  "lineno": 1374,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.average",
   "numpy.mean",
   "sklearn.metrics.fbeta_score",
   "sklearn.metrics.precision_recall_fscore_support",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_multilabel_2": {
  "lineno": 1443,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.average",
   "numpy.mean",
   "sklearn.metrics.fbeta_score",
   "sklearn.metrics.precision_recall_fscore_support",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_with_an_empty_prediction": {
  "lineno": 1511,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.average",
   "numpy.mean",
   "pytest.mark.parametrize",
   "sklearn.metrics.fbeta_score",
   "sklearn.metrics.precision_recall_fscore_support",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f_binary_single_class": {
  "lineno": 218,
  "symbols_in_volume": [
   "pytest.approx",
   "sklearn.metrics.f1_score",
   "sklearn.metrics.fbeta_score",
   "sklearn.metrics.precision_score",
   "sklearn.metrics.recall_score",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f_extra_labels": {
  "lineno": 236,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.mean",
   "pytest.raises",
   "sklearn.metrics.precision_recall_fscore_support",
   "sklearn.metrics.recall_score",
   "sklearn.preprocessing.label_binarize",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f_ignored_labels": {
  "lineno": 286,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.arange",
   "sklearn.metrics.recall_score",
   "sklearn.preprocessing.label_binarize",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_f_unused_pos_label": {
  "lineno": 369,
  "symbols_in_volume": [
   "sklearn.metrics.precision_recall_fscore_support",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_recall_fscore_support_errors": {
  "lineno": 349,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.metrics.precision_recall_fscore_support",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_refcall_f1_score_multilabel_unordered_labels": {
  "lineno": 837,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "sklearn.metrics.precision_recall_fscore_support",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_precision_warnings": {
  "lineno": 1840,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "sklearn.metrics.precision_score",
   "sklearn.utils._testing.assert_no_warnings",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_prf_average_binary_data_non_binary": {
  "lineno": 1899,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.array",
   "pytest.raises",
   "sklearn.metrics.f1_score",
   "sklearn.metrics.fbeta_score",
   "sklearn.metrics.precision_score",
   "sklearn.metrics.recall_score"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_prf_no_warnings_if_zero_division_set": {
  "lineno": 1767,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "sklearn.metrics.precision_recall_fscore_support",
   "sklearn.utils._testing.assert_no_warnings",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_prf_warnings": {
  "lineno": 1692,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.exceptions.UndefinedMetricWarning",
   "sklearn.metrics.precision_recall_fscore_support",
   "sklearn.utils._testing.assert_warns_message",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_recall_warnings": {
  "lineno": 1811,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "sklearn.metrics.recall_score",
   "sklearn.utils._testing.assert_no_warnings",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_classification.test_zero_precision_recall": {
  "lineno": 872,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.seterr",
   "sklearn.metrics.f1_score",
   "sklearn.metrics.precision_score",
   "sklearn.metrics.recall_score",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common": {
  "lineno": null,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.inf",
   "numpy.nan",
   "numpy.newaxis",
   "sklearn.metrics.accuracy_score",
   "sklearn.metrics.average_precision_score",
   "sklearn.metrics.balanced_accuracy_score",
   "sklearn.metrics.brier_score_loss",
   "sklearn.metrics.cohen_kappa_score",
   "sklearn.metrics.confusion_matrix",
   "sklearn.metrics.coverage_error",
   "sklearn.metrics.dcg_score",
   "sklearn.metrics.explained_variance_score",
   "sklearn.metrics.f1_score",
   "sklearn.metrics.fbeta_score",
   "sklearn.metrics.hamming_loss",
   "sklearn.metrics.hinge_loss",
   "sklearn.metrics.jaccard_score",
   "sklearn.metrics.label_ranking_average_precision_score",
   "sklearn.metrics.label_ranking_loss",
   "sklearn.metrics.log_loss",
   "sklearn.metrics.matthews_corrcoef",
   "sklearn.metrics.max_error",
   "sklearn.metrics.mean_absolute_error",
   "sklearn.metrics.mean_gamma_deviance",
   "sklearn.metrics.mean_poisson_deviance",
   "sklearn.metrics.mean_squared_error",
   "sklearn.metrics.mean_tweedie_deviance",
   "sklearn.metrics.median_absolute_error",
   "sklearn.metrics.multilabel_confusion_matrix",
   "sklearn.metrics.ndcg_score",
   "sklearn.metrics.precision_score",
   "sklearn.metrics.r2_score",
   "sklearn.metrics.recall_score",
   "sklearn.metrics.roc_auc_score",
   "sklearn.metrics.roc_curve",
   "sklearn.metrics.zero_one_loss"
  ],
  "type": "module"
 },
 "sklearn.metrics.tests.test_common._check_averaging": {
  "lineno": 1020,
  "symbols_in_volume": [
   "numpy.average",
   "numpy.mean",
   "numpy.sum",
   "pytest.raises",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common._require_positive_targets": {
  "lineno": 496,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.check_averaging": {
  "lineno": 1064,
  "symbols_in_volume": [
   "sklearn.utils.multiclass.type_of_target"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.check_sample_weight_invariance": {
  "lineno": 1151,
  "symbols_in_volume": [
   "numpy.copy",
   "numpy.hstack",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.repeat",
   "pytest.raises",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils._testing.ignore_warnings",
   "sklearn.utils.validation._num_samples"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.check_single_sample": {
  "lineno": 814,
  "symbols_in_volume": [
   "itertools.product",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.check_single_sample_multioutput": {
  "lineno": 831,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.array",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.precision_recall_curve_padded_thresholds": {
  "lineno": 176,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.pad",
   "sklearn.metrics.precision_recall_curve"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_averaging_binary_multilabel_all_zeroes": {
  "lineno": 1126,
  "symbols_in_volume": [
   "numpy.zeros",
   "sklearn.metrics._base._average_binary_score",
   "sklearn.metrics.precision_score"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_averaging_multiclass": {
  "lineno": 1080,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.preprocessing.LabelBinarizer",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_averaging_multilabel": {
  "lineno": 1096,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.datasets.make_multilabel_classification",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_averaging_multilabel_all_ones": {
  "lineno": 1139,
  "symbols_in_volume": [
   "numpy.ones",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_averaging_multilabel_all_zeroes": {
  "lineno": 1114,
  "symbols_in_volume": [
   "numpy.zeros",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_binary_sample_weight_invariance": {
  "lineno": 1246,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_classification_inf_nan_input": {
  "lineno": 805,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_classification_invariance_string_vs_numbers_labels": {
  "lineno": 703,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.array",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.ignore_warnings",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_format_invariance_with_1d_vectors": {
  "lineno": 617,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.reshape",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.ignore_warnings",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_multiclass_sample_weight_invariance": {
  "lineno": 1265,
  "symbols_in_volume": [
   "numpy.exp",
   "pytest.mark.parametrize",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_multilabel_label_permutations_invariance": {
  "lineno": 1335,
  "symbols_in_volume": [
   "itertools.permutations",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_multilabel_representation_invariance": {
  "lineno": 883,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.vstack",
   "scipy.sparse.coo_matrix",
   "sklearn.datasets.make_multilabel_classification",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_multilabel_sample_weight_invariance": {
  "lineno": 1287,
  "symbols_in_volume": [
   "numpy.vstack",
   "pytest.mark.parametrize",
   "sklearn.datasets.make_multilabel_classification",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_multioutput_number_of_output_differ": {
  "lineno": 855,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_multioutput_regression_invariance_to_dimension_shuffling": {
  "lineno": 865,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_no_averaging_labels": {
  "lineno": 1311,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.unique",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_normalize_option_binary_classification": {
  "lineno": 954,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils._testing.assert_array_less",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_normalize_option_multiclass_classification": {
  "lineno": 971,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils._testing.assert_array_less",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_normalize_option_multilabel_classification": {
  "lineno": 988,
  "symbols_in_volume": [
   "sklearn.datasets.make_multilabel_classification",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils._testing.assert_array_less"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_not_symmetric_metric": {
  "lineno": 544,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_raise_value_error_multilabel_sequences": {
  "lineno": 938,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_regression_sample_weight_invariance": {
  "lineno": 1231,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_regression_thresholded_inf_nan_input": {
  "lineno": 795,
  "symbols_in_volume": [
   "itertools.chain",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_sample_order_invariance": {
  "lineno": 562,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils._testing.ignore_warnings",
   "sklearn.utils.shuffle",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_sample_order_invariance_multilabel_and_multioutput": {
  "lineno": 581,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils._testing.ignore_warnings",
   "sklearn.utils.shuffle",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_single_sample": {
  "lineno": 838,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_single_sample_multioutput": {
  "lineno": 849,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_symmetric_metric": {
  "lineno": 517,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_symmetry_consistency": {
  "lineno": 504,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_thresholded_invariance_string_vs_numbers_labels": {
  "lineno": 753,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.array",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.ignore_warnings",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_thresholded_metric_permutation_invariance": {
  "lineno": 1380,
  "symbols_in_volume": [
   "itertools.permutations",
   "numpy.arange",
   "numpy.exp",
   "numpy.take",
   "numpy.zeros",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_common.test_thresholded_multilabel_multioutput_permutations_invariance": {
  "lineno": 1356,
  "symbols_in_volume": [
   "itertools.permutations",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "module"
 },
 "sklearn.metrics.tests.test_pairwise._reduce_func": {
  "lineno": 468,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.callable_rbf_kernel": {
  "lineno": 239,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "sklearn.metrics.pairwise.rbf_kernel"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.check_pairwise_distances_chunked": {
  "lineno": 536,
  "symbols_in_volume": [
   "numpy.vstack",
   "sklearn.metrics.pairwise.pairwise_distances",
   "sklearn.metrics.pairwise.pairwise_distances_chunked",
   "sklearn.utils._testing.assert_array_almost_equal",
   "types.GeneratorType"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_check_XB_returned": {
  "lineno": 1142,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.resize",
   "sklearn.metrics.pairwise.check_paired_arrays",
   "sklearn.metrics.pairwise.check_pairwise_arrays",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_check_dense_matrices": {
  "lineno": 1133,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.resize",
   "sklearn.metrics.pairwise.check_pairwise_arrays",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_check_different_dimensions": {
  "lineno": 1158,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.resize",
   "pytest.raises",
   "sklearn.metrics.pairwise.check_paired_arrays",
   "sklearn.metrics.pairwise.check_pairwise_arrays"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_check_invalid_dimensions": {
  "lineno": 1170,
  "symbols_in_volume": [
   "numpy.arange",
   "pytest.raises",
   "sklearn.metrics.pairwise.check_pairwise_arrays"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_check_preserve_type": {
  "lineno": 1229,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float",
   "numpy.float32",
   "numpy.resize",
   "sklearn.metrics.pairwise.check_pairwise_arrays"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_check_sparse_arrays": {
  "lineno": 1184,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.issparse",
   "sklearn.metrics.pairwise.check_pairwise_arrays"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_check_tuple_input": {
  "lineno": 1217,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.metrics.pairwise.check_pairwise_arrays",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_chi_square_kernel": {
  "lineno": 975,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.diag",
   "numpy.exp",
   "numpy.float",
   "numpy.float32",
   "numpy.int32",
   "numpy.isfinite",
   "numpy.random.RandomState",
   "numpy.sum",
   "pytest.raises",
   "scipy.sparse.csr_matrix",
   "sklearn.metrics.pairwise.additive_chi2_kernel",
   "sklearn.metrics.pairwise.chi2_kernel",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_cosine_distances": {
  "lineno": 904,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.all",
   "numpy.diag_indices_from",
   "numpy.random.RandomState",
   "numpy.vstack",
   "sklearn.metrics.pairwise.cosine_distances",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_cosine_similarity": {
  "lineno": 1112,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "scipy.sparse.csr_matrix",
   "sklearn.metrics.pairwise.pairwise_kernels",
   "sklearn.preprocessing.normalize",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_euclidean_distances": {
  "lineno": 663,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "scipy.spatial.distance.cdist",
   "sklearn.metrics.pairwise.euclidean_distances",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_euclidean_distances_extreme_values": {
  "lineno": 756,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "pytest.mark.parametrize",
   "pytest.mark.xfail",
   "pytest.param",
   "scipy.spatial.distance.cdist",
   "sklearn.metrics.pairwise.euclidean_distances",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_euclidean_distances_known_result": {
  "lineno": 618,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "sklearn.metrics.pairwise.euclidean_distances",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_euclidean_distances_sym": {
  "lineno": 689,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "scipy.spatial.distance.pdist",
   "scipy.spatial.distance.squareform",
   "sklearn.metrics.pairwise.euclidean_distances",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_euclidean_distances_upcast": {
  "lineno": 710,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.maximum",
   "numpy.random.RandomState",
   "numpy.sqrt",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "scipy.spatial.distance.cdist",
   "sklearn.metrics.pairwise._euclidean_distances_upcast",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_euclidean_distances_upcast_sym": {
  "lineno": 736,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.maximum",
   "numpy.random.RandomState",
   "numpy.sqrt",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "scipy.spatial.distance.pdist",
   "scipy.spatial.distance.squareform",
   "sklearn.metrics.pairwise._euclidean_distances_upcast",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_euclidean_distances_with_norms": {
  "lineno": 630,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.random.RandomState",
   "numpy.zeros_like",
   "pytest.mark.parametrize",
   "pytest.raises",
   "scipy.sparse.csr_matrix",
   "sklearn.metrics.pairwise.euclidean_distances",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_haversine_distances": {
  "lineno": 934,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.RandomState",
   "pytest.raises",
   "sklearn.metrics.pairwise.haversine_distances",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_haversine_distances.slow_haversine_distances": {
  "lineno": 936,
  "symbols_in_volume": [
   "numpy.arcsin",
   "numpy.cos",
   "numpy.sin",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_kernel_sparse": {
  "lineno": 1047,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "sklearn.metrics.pairwise.cosine_similarity",
   "sklearn.metrics.pairwise.laplacian_kernel",
   "sklearn.metrics.pairwise.linear_kernel",
   "sklearn.metrics.pairwise.polynomial_kernel",
   "sklearn.metrics.pairwise.rbf_kernel",
   "sklearn.metrics.pairwise.sigmoid_kernel",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_kernel_symmetry": {
  "lineno": 1035,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.metrics.pairwise.cosine_similarity",
   "sklearn.metrics.pairwise.laplacian_kernel",
   "sklearn.metrics.pairwise.linear_kernel",
   "sklearn.metrics.pairwise.polynomial_kernel",
   "sklearn.metrics.pairwise.rbf_kernel",
   "sklearn.metrics.pairwise.sigmoid_kernel",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_laplacian_kernel": {
  "lineno": 1076,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.diag",
   "numpy.ones",
   "numpy.random.RandomState",
   "sklearn.metrics.pairwise.laplacian_kernel",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_linear_kernel": {
  "lineno": 1060,
  "symbols_in_volume": [
   "numpy.linalg.norm",
   "numpy.random.RandomState",
   "sklearn.metrics.pairwise.linear_kernel",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_nan_euclidean_distances_2x2": {
  "lineno": 801,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.sqrt",
   "pytest.mark.parametrize",
   "sklearn.metrics.pairwise.nan_euclidean_distances",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_nan_euclidean_distances_complete_nan": {
  "lineno": 832,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pytest.mark.parametrize",
   "sklearn.metrics.pairwise.nan_euclidean_distances",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_nan_euclidean_distances_equal_to_euclidean_distance": {
  "lineno": 775,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.metrics.pairwise.euclidean_distances",
   "sklearn.metrics.pairwise.nan_euclidean_distances",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_nan_euclidean_distances_infinite_values": {
  "lineno": 787,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.metrics.pairwise.nan_euclidean_distances"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_nan_euclidean_distances_not_trival": {
  "lineno": 846,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.sqrt",
   "pytest.mark.parametrize",
   "sklearn.metrics.pairwise.nan_euclidean_distances",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_nan_euclidean_distances_one_feature_match_positive": {
  "lineno": 887,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.nan",
   "pytest.mark.parametrize",
   "sklearn.metrics.pairwise.nan_euclidean_distances",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_no_data_conversion_warning": {
  "lineno": 191,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.warns",
   "sklearn.metrics.pairwise.pairwise_distances"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_paired_distances": {
  "lineno": 356,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "sklearn.metrics.pairwise.PAIRED_DISTANCES.items",
   "sklearn.metrics.pairwise.PAIRWISE_DISTANCE_FUNCTIONS",
   "sklearn.metrics.pairwise.paired_distances",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_paired_distances_callable": {
  "lineno": 378,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.random.RandomState",
   "pytest.raises",
   "sklearn.metrics.pairwise.paired_distances",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_paired_euclidean_distances": {
  "lineno": 959,
  "symbols_in_volume": [
   "sklearn.metrics.pairwise.paired_euclidean_distances",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_paired_manhattan_distances": {
  "lineno": 967,
  "symbols_in_volume": [
   "sklearn.metrics.pairwise.paired_manhattan_distances",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_boolean_distance": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.random.RandomState",
   "numpy.sum",
   "pytest.mark.parametrize",
   "pytest.warns",
   "sklearn.exceptions.DataConversionWarning",
   "sklearn.metrics.pairwise.PAIRWISE_BOOLEAN_FUNCTIONS",
   "sklearn.metrics.pairwise.pairwise_distances",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_callable_nonstrict_metric": {
  "lineno": 278,
  "symbols_in_volume": [
   "sklearn.metrics.pairwise.pairwise_distances"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_distances": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.pi",
   "numpy.random.RandomState",
   "pytest.raises",
   "scipy.sparse.csr_matrix",
   "scipy.spatial.distance.cityblock",
   "scipy.spatial.distance.cosine",
   "scipy.spatial.distance.minkowski",
   "sklearn.metrics.pairwise.cosine_distances",
   "sklearn.metrics.pairwise.euclidean_distances",
   "sklearn.metrics.pairwise.haversine_distances",
   "sklearn.metrics.pairwise.manhattan_distances",
   "sklearn.metrics.pairwise.nan_euclidean_distances",
   "sklearn.metrics.pairwise.pairwise_distances",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_distances_argmin_min": {
  "lineno": 398,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.ndarray",
   "numpy.random.RandomState",
   "numpy.testing.assert_almost_equal",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.dok_matrix",
   "scipy.spatial.distance.minkowski",
   "sklearn.metrics.pairwise.pairwise_distances",
   "sklearn.metrics.pairwise.pairwise_distances_argmin",
   "sklearn.metrics.pairwise.pairwise_distances_argmin_min",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_distances_chunked": {
  "lineno": 575,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.raises",
   "sklearn.metrics.pairwise.pairwise_distances",
   "sklearn.metrics.pairwise.pairwise_distances_chunked",
   "sklearn.utils._testing.ignore_warnings",
   "types.GeneratorType"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_distances_chunked_diagonal": {
  "lineno": 553,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.random.RandomState",
   "numpy.vstack",
   "pytest.mark.parametrize",
   "sklearn.metrics.pairwise.pairwise_distances_chunked",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_distances_chunked_reduce": {
  "lineno": 472,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.vstack",
   "sklearn.metrics.pairwise.pairwise_distances",
   "sklearn.metrics.pairwise.pairwise_distances_chunked",
   "sklearn.utils._testing.assert_allclose",
   "types.GeneratorType"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_distances_chunked_reduce_invalid": {
  "lineno": 513,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.concatenate",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.metrics.pairwise.pairwise_distances_chunked"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_distances_chunked_reduce_none": {
  "lineno": 486,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.metrics.pairwise.pairwise_distances_chunked",
   "types.GeneratorType"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_distances_chunked_reduce_valid": {
  "lineno": 499,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.dok_matrix",
   "sklearn.metrics.pairwise.pairwise_distances_chunked"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_distances_data_derived_params": {
  "lineno": 1255,
  "symbols_in_volume": [
   "numpy.cov",
   "numpy.linalg.inv",
   "numpy.random.RandomState",
   "numpy.var",
   "numpy.vstack",
   "pytest.mark.parametrize",
   "scipy.spatial.distance.cdist",
   "scipy.spatial.distance.pdist",
   "scipy.spatial.distance.squareform",
   "sklearn.config_context",
   "sklearn.metrics.pairwise.pairwise_distances",
   "sklearn.metrics.pairwise.pairwise_distances_chunked",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_kernels": {
  "lineno": 286,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "pytest.raises",
   "scipy.sparse.csr_matrix",
   "sklearn.metrics.pairwise.PAIRWISE_KERNEL_FUNCTIONS",
   "sklearn.metrics.pairwise.pairwise_kernels",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_kernels_callable": {
  "lineno": 324,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.metrics.pairwise.pairwise_kernels",
   "sklearn.metrics.pairwise.rbf_kernel",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_kernels_filter_param": {
  "lineno": 343,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.raises",
   "sklearn.metrics.pairwise.pairwise_kernels",
   "sklearn.metrics.pairwise.rbf_kernel",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_parallel": {
  "lineno": 245,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "pytest.raises",
   "scipy.sparse.csr_matrix",
   "scipy.spatial.distance.wminkowski",
   "sklearn.metrics.pairwise.pairwise_distances",
   "sklearn.metrics.pairwise.pairwise_kernels",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_precomputed": {
  "lineno": 200,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray",
   "numpy.zeros",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.metrics.pairwise.pairwise_distances",
   "sklearn.metrics.pairwise.pairwise_kernels"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_precomputed_non_negative": {
  "lineno": 230,
  "symbols_in_volume": [
   "numpy.full",
   "pytest.raises",
   "sklearn.metrics.pairwise.pairwise_distances"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_pairwise_similarity_sparse_output": {
  "lineno": 1088,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.issparse",
   "sklearn.metrics.pairwise.cosine_similarity",
   "sklearn.metrics.pairwise.linear_kernel",
   "sklearn.metrics.pairwise.pairwise_kernels",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_parallel_pairwise_distances_diagonal": {
  "lineno": 565,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.metrics.pairwise.pairwise_distances",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.test_rbf_kernel": {
  "lineno": 1068,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.random.RandomState",
   "sklearn.metrics.pairwise.rbf_kernel",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_pairwise.tuplify": {
  "lineno": 1206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.metrics.tests.test_ranking._auc": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.sum",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking._average_precision": {
  "lineno": 100,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.sum",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking._average_precision_slow": {
  "lineno": 130,
  "symbols_in_volume": [
   "sklearn.metrics.precision_recall_curve"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking._my_lrap": {
  "lineno": 1071,
  "symbols_in_volume": [
   "numpy.bincount",
   "numpy.empty",
   "numpy.unique",
   "sklearn.utils.validation.check_array",
   "sklearn.utils.validation.check_consistent_length"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking._partial_roc_auc_score": {
  "lineno": 149,
  "symbols_in_volume": [
   "sklearn.metrics.auc"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking._partial_roc_auc_score._partial_roc": {
  "lineno": 154,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.argmax",
   "numpy.interp",
   "sklearn.metrics.roc_curve"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking._test_dcg_score_for": {
  "lineno": 1337,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.log2",
   "numpy.sort",
   "pytest.approx",
   "sklearn.metrics._ranking._dcg_sample_scores"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking._test_ndcg_score_for": {
  "lineno": 1433,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.zeros",
   "pytest.approx",
   "sklearn.metrics._ranking._dcg_sample_scores",
   "sklearn.metrics._ranking._ndcg_sample_scores"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking._test_precision_recall_curve": {
  "lineno": 733,
  "symbols_in_volume": [
   "numpy.zeros_like",
   "sklearn.metrics.average_precision_score",
   "sklearn.metrics.precision_recall_curve",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.check_alternative_lrap_implementation": {
  "lineno": 1109,
  "symbols_in_volume": [
   "sklearn.datasets.make_multilabel_classification",
   "sklearn.metrics.label_ranking_average_precision_score",
   "sklearn.random_projection._sparse_random_matrix",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.check_lrap_error_raised": {
  "lineno": 1005,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.check_lrap_only_ties": {
  "lineno": 1031,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.zeros",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.check_lrap_toy": {
  "lineno": 927,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.check_lrap_without_tie_and_increasing_score": {
  "lineno": 1047,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.zeros",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.check_zero_or_all_relevant_labels": {
  "lineno": 983,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.zeros",
   "numpy.zeros_like",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.make_prediction": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.c_",
   "numpy.random.RandomState",
   "sklearn.datasets.load_iris",
   "sklearn.svm.SVC",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_alternative_lrap_implementation": {
  "lineno": 1153,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.metrics.label_ranking_average_precision_score"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_auc": {
  "lineno": 417,
  "symbols_in_volume": [
   "sklearn.metrics.auc",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_auc_errors": {
  "lineno": 436,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "re.escape",
   "sklearn.metrics.auc"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_auc_score_non_binary_class": {
  "lineno": 633,
  "symbols_in_volume": [
   "numpy.full",
   "numpy.ones",
   "numpy.zeros",
   "pytest.raises",
   "sklearn.metrics.roc_auc_score",
   "sklearn.utils.validation.check_random_state",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_average_precision_constant_values": {
  "lineno": 870,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.zeros",
   "sklearn.metrics.average_precision_score"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_average_precision_score_pos_label_errors": {
  "lineno": 884,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "sklearn.metrics.average_precision_score"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_binary_clf_curve_implicit_pos_label": {
  "lineno": 678,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.metrics.precision_recall_curve",
   "sklearn.metrics.roc_curve"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_binary_clf_curve_multiclass_error": {
  "lineno": 665,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.metrics.precision_recall_curve",
   "sklearn.metrics.roc_curve",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_coverage_error": {
  "lineno": 1182,
  "symbols_in_volume": [
   "sklearn.metrics.coverage_error",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_coverage_tie_handling": {
  "lineno": 1230,
  "symbols_in_volume": [
   "sklearn.metrics.coverage_error",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_dcg_score": {
  "lineno": 1329,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.datasets.make_multilabel_classification"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_dcg_ties": {
  "lineno": 1349,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.log2",
   "numpy.zeros",
   "pytest.approx",
   "sklearn.metrics._ranking._dcg_sample_scores"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_label_ranking_avp": {
  "lineno": 1136,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.metrics.label_ranking_average_precision_score"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_label_ranking_loss": {
  "lineno": 1246,
  "symbols_in_volume": [
   "numpy.array",
   "scipy.sparse.csr_matrix",
   "sklearn.metrics.label_ranking_loss",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_lrap_error_raised": {
  "lineno": 1149,
  "symbols_in_volume": [
   "sklearn.metrics.label_ranking_average_precision_score"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_lrap_sample_weighting_zero_labels": {
  "lineno": 1163,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool",
   "numpy.sum",
   "sklearn.metrics.label_ranking_average_precision_score",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_multiclass_ovo_roc_auc_toydata": {
  "lineno": 454,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.average",
   "pytest.mark.parametrize",
   "sklearn.metrics.roc_auc_score",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_multiclass_ovo_roc_auc_toydata_binary": {
  "lineno": 506,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "sklearn.metrics.roc_auc_score",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_multiclass_ovr_roc_auc_toydata": {
  "lineno": 534,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "sklearn.metrics.roc_auc_score",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_ndcg_ignore_ties_with_k": {
  "lineno": 1369,
  "symbols_in_volume": [
   "numpy.arange",
   "pytest.approx",
   "sklearn.metrics.ndcg_score"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_ndcg_invariant": {
  "lineno": 1375,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.RandomState",
   "pytest.approx",
   "sklearn.metrics.ndcg_score"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_ndcg_score": {
  "lineno": 1425,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.datasets.make_multilabel_classification"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_ndcg_toy_examples": {
  "lineno": 1387,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.eye",
   "numpy.log10",
   "numpy.log2",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.tile",
   "pytest.approx",
   "pytest.mark.parametrize",
   "sklearn.metrics._ranking._dcg_sample_scores",
   "sklearn.metrics._ranking._ndcg_sample_scores",
   "sklearn.metrics.dcg_score",
   "sklearn.metrics.ndcg_score"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_partial_roc_auc_score": {
  "lineno": 1448,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linspace",
   "pytest.raises",
   "sklearn.metrics.roc_auc_score",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_precision_recall_curve": {
  "lineno": 713,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.where",
   "sklearn.metrics.precision_recall_curve",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_precision_recall_curve_errors": {
  "lineno": 751,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.metrics.precision_recall_curve"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_precision_recall_curve_toydata": {
  "lineno": 757,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "pytest.raises",
   "sklearn.metrics.average_precision_score",
   "sklearn.metrics.precision_recall_curve",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_ranking_appropriate_input_shape": {
  "lineno": 1299,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.metrics.label_ranking_loss"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_ranking_loss_ties_handling": {
  "lineno": 1315,
  "symbols_in_volume": [
   "sklearn.metrics.label_ranking_loss",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_auc_score_multiclass_error": {
  "lineno": 605,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.metrics.roc_auc_score",
   "sklearn.utils.extmath.softmax",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_auc_score_multiclass_labels_error": {
  "lineno": 568,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.metrics.roc_auc_score"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve": {
  "lineno": 177,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.metrics.auc",
   "sklearn.metrics.roc_auc_score",
   "sklearn.metrics.roc_curve",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve_confidence": {
  "lineno": 232,
  "symbols_in_volume": [
   "sklearn.metrics.auc",
   "sklearn.metrics.roc_curve",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve_drop_intermediate": {
  "lineno": 388,
  "symbols_in_volume": [
   "sklearn.metrics.roc_curve",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve_end_points": {
  "lineno": 192,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.RandomState",
   "sklearn.metrics.roc_curve"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve_fpr_tpr_increasing": {
  "lineno": 405,
  "symbols_in_volume": [
   "numpy.diff",
   "numpy.repeat",
   "sklearn.metrics.roc_curve"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve_hard": {
  "lineno": 243,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.zeros",
   "sklearn.metrics.auc",
   "sklearn.metrics.roc_curve",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve_multi": {
  "lineno": 224,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.metrics.roc_curve"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve_one_label": {
  "lineno": 271,
  "symbols_in_volume": [
   "numpy.full",
   "numpy.nan",
   "sklearn.exceptions.UndefinedMetricWarning",
   "sklearn.metrics.roc_curve",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_curve_toydata": {
  "lineno": 292,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pytest.raises",
   "sklearn.exceptions.UndefinedMetricWarning",
   "sklearn.metrics.roc_auc_score",
   "sklearn.metrics.roc_curve",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_roc_returns_consistency": {
  "lineno": 205,
  "symbols_in_volume": [
   "numpy.sum",
   "sklearn.metrics.roc_curve",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_ranking.test_score_scale_invariance": {
  "lineno": 902,
  "symbols_in_volume": [
   "sklearn.metrics.average_precision_score",
   "sklearn.metrics.roc_auc_score"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.metrics.tests.test_regression.test__check_reg_targets": {
  "lineno": 146,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.reshape",
   "pytest.raises",
   "sklearn.metrics._regression._check_reg_targets",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_regression.test__check_reg_targets_exception": {
  "lineno": 174,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.metrics._regression._check_reg_targets"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_regression.test_multioutput_regression": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.metrics.mean_absolute_error",
   "sklearn.metrics.mean_squared_error",
   "sklearn.metrics.mean_squared_log_error",
   "sklearn.metrics.median_absolute_error",
   "sklearn.metrics.r2_score",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_regression.test_regression_custom_weights": {
  "lineno": 237,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.log",
   "sklearn.metrics.explained_variance_score",
   "sklearn.metrics.mean_absolute_error",
   "sklearn.metrics.mean_squared_error",
   "sklearn.metrics.mean_squared_log_error",
   "sklearn.metrics.r2_score",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_regression.test_regression_metrics": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.log",
   "numpy.sqrt",
   "numpy.sum",
   "sklearn.metrics.explained_variance_score",
   "sklearn.metrics.max_error",
   "sklearn.metrics.mean_absolute_error",
   "sklearn.metrics.mean_squared_error",
   "sklearn.metrics.mean_squared_log_error",
   "sklearn.metrics.mean_tweedie_deviance",
   "sklearn.metrics.median_absolute_error",
   "sklearn.metrics.r2_score",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_regression.test_regression_metrics_at_limits": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pytest.raises",
   "sklearn.metrics.explained_variance_score",
   "sklearn.metrics.max_error",
   "sklearn.metrics.mean_absolute_error",
   "sklearn.metrics.mean_squared_error",
   "sklearn.metrics.mean_squared_log_error",
   "sklearn.metrics.mean_tweedie_deviance",
   "sklearn.metrics.median_absolute_error",
   "sklearn.metrics.r2_score",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_regression.test_regression_multioutput_array": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.log",
   "numpy.mean",
   "sklearn.metrics.explained_variance_score",
   "sklearn.metrics.mean_absolute_error",
   "sklearn.metrics.mean_squared_error",
   "sklearn.metrics.mean_squared_log_error",
   "sklearn.metrics.r2_score",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_regression.test_regression_single_sample": {
  "lineno": 263,
  "symbols_in_volume": [
   "numpy.isnan",
   "pytest.mark.parametrize",
   "pytest.warns",
   "sklearn.metrics.r2_score"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_regression.test_tweedie_deviance_continuity": {
  "lineno": 275,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose",
   "sklearn.metrics.mean_tweedie_deviance"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.metrics.tests.test_score_objects.DummyScorer": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.metrics.tests.test_score_objects.DummyScorer.__call__": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithFit": {
  "lineno": 135,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithFit.fit": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithFitAndPredict": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithFitAndPredict.fit": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithFitAndPredict.predict": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithFitAndScore": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithFitAndScore.fit": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithFitAndScore.score": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.EstimatorWithoutFit": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.metrics.tests.test_score_objects._make_estimators": {
  "lineno": 88,
  "symbols_in_volume": [
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.tree.DecisionTreeRegressor"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects._require_positive_y": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.check_multimetric_scoring_single_metric_wrapper": {
  "lineno": 207,
  "symbols_in_volume": [
   "sklearn.metrics._scorer._check_multimetric_scoring"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.check_scoring_validator_for_single_metric_usecases": {
  "lineno": 172,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.metrics._scorer._PredictScorer",
   "sklearn.metrics._scorer._passthrough_scorer",
   "sklearn.metrics.check_scoring",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.setup_module": {
  "lineno": 110,
  "symbols_in_volume": [
   "joblib.dump",
   "joblib.load",
   "os.path.join",
   "sklearn.datasets.make_classification",
   "sklearn.datasets.make_multilabel_classification",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.teardown_module": {
  "lineno": 123,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_all_scorers_repr": {
  "lineno": 166,
  "symbols_in_volume": [
   "sklearn.metrics.SCORERS.items"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_check_scoring_and_check_multimetric_scoring": {
  "lineno": 225,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.metrics._scorer._PredictScorer",
   "sklearn.metrics._scorer._check_multimetric_scoring",
   "sklearn.metrics.accuracy_score",
   "sklearn.metrics.check_scoring",
   "sklearn.metrics.make_scorer",
   "sklearn.metrics.precision_score",
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_check_scoring_gridsearchcv": {
  "lineno": 272,
  "symbols_in_volume": [
   "sklearn.metrics._scorer._PredictScorer",
   "sklearn.metrics.check_scoring",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.model_selection.cross_val_score",
   "sklearn.pipeline.make_pipeline",
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_classification_scores": {
  "lineno": 299,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "sklearn.datasets.make_blobs",
   "sklearn.metrics.f1_score",
   "sklearn.metrics.fbeta_score",
   "sklearn.metrics.get_scorer",
   "sklearn.metrics.jaccard_score",
   "sklearn.metrics.make_scorer",
   "sklearn.metrics.precision_score",
   "sklearn.metrics.recall_score",
   "sklearn.model_selection.train_test_split",
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_deprecated_scorer": {
  "lineno": 556,
  "symbols_in_volume": [
   "pytest.warns",
   "sklearn.datasets.make_blobs",
   "sklearn.metrics.get_scorer",
   "sklearn.model_selection.train_test_split",
   "sklearn.tree.DecisionTreeClassifier"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_make_scorer": {
  "lineno": 292,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.metrics.make_scorer"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_multiclass_roc_no_proba_scorer_errors": {
  "lineno": 710,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model.Perceptron",
   "sklearn.metrics.get_scorer"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_multiclass_roc_proba_scorer": {
  "lineno": 676,
  "symbols_in_volume": [
   "functools.partial",
   "pytest.approx",
   "pytest.mark.parametrize",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.metrics.get_scorer",
   "sklearn.metrics.roc_auc_score"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_multiclass_roc_proba_scorer_label": {
  "lineno": 694,
  "symbols_in_volume": [
   "pytest.approx",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.metrics.make_scorer",
   "sklearn.metrics.roc_auc_score"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_multimetric_scorer_calls_method_once": {
  "lineno": 567,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.c_",
   "numpy.random.rand",
   "pytest.mark.parametrize",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.metrics._scorer._MultimetricScorer",
   "sklearn.metrics._scorer._check_multimetric_scoring",
   "unittest.mock.Mock"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_multimetric_scorer_calls_method_once_classifier_no_decision": {
  "lineno": 605,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.metrics._scorer._MultimetricScorer",
   "sklearn.metrics._scorer._check_multimetric_scoring"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_multimetric_scorer_calls_method_once_classifier_no_decision.MockKNeighborsClassifier": {
  "lineno": 608,
  "symbols_in_volume": [
   "sklearn.neighbors.KNeighborsClassifier"
  ],
  "type": "class"
 },
 "sklearn.metrics.tests.test_score_objects.test_multimetric_scorer_calls_method_once_classifier_no_decision.MockKNeighborsClassifier.predict_proba": {
  "lineno": 609,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_multimetric_scorer_calls_method_once_regressor_threshold": {
  "lineno": 628,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.metrics._scorer._MultimetricScorer",
   "sklearn.metrics._scorer._check_multimetric_scoring"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_multimetric_scorer_calls_method_once_regressor_threshold.MockDecisionTreeRegressor": {
  "lineno": 631,
  "symbols_in_volume": [
   "sklearn.tree.DecisionTreeRegressor"
  ],
  "type": "class"
 },
 "sklearn.metrics.tests.test_score_objects.test_multimetric_scorer_calls_method_once_regressor_threshold.MockDecisionTreeRegressor.predict": {
  "lineno": 632,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_multimetric_scorer_sanity_check": {
  "lineno": 651,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "sklearn.datasets.make_classification",
   "sklearn.metrics._scorer._MultimetricScorer",
   "sklearn.metrics._scorer._check_multimetric_scoring",
   "sklearn.metrics.get_scorer",
   "sklearn.tree.DecisionTreeClassifier"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_raises_on_score_list": {
  "lineno": 462,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.datasets.make_blobs",
   "sklearn.metrics.f1_score",
   "sklearn.metrics.make_scorer",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.model_selection.cross_val_score",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_regression_scorers": {
  "lineno": 344,
  "symbols_in_volume": [
   "sklearn.datasets.load_diabetes",
   "sklearn.linear_model.Ridge",
   "sklearn.metrics.get_scorer",
   "sklearn.metrics.r2_score",
   "sklearn.model_selection.train_test_split",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_scorer_memmap_input": {
  "lineno": 523,
  "symbols_in_volume": [
   "numbers.Number",
   "pytest.mark.parametrize",
   "sklearn.metrics.SCORERS",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_scorer_sample_weight": {
  "lineno": 476,
  "symbols_in_volume": [
   "numpy.ones_like",
   "sklearn.datasets.make_classification",
   "sklearn.datasets.make_multilabel_classification",
   "sklearn.metrics.SCORERS.items",
   "sklearn.model_selection.train_test_split",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_scoring_is_not_metric": {
  "lineno": 545,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.cluster.KMeans",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.linear_model.Ridge",
   "sklearn.metrics.check_scoring",
   "sklearn.metrics.cluster.adjusted_rand_score",
   "sklearn.metrics.f1_score",
   "sklearn.metrics.r2_score",
   "sklearn.metrics.roc_auc_score"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_supervised_cluster_scorers": {
  "lineno": 450,
  "symbols_in_volume": [
   "sklearn.cluster.KMeans",
   "sklearn.datasets.make_blobs",
   "sklearn.metrics.cluster",
   "sklearn.metrics.get_scorer",
   "sklearn.model_selection.train_test_split",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_thresholded_scorers": {
  "lineno": 356,
  "symbols_in_volume": [
   "numpy.zeros_like",
   "pytest.raises",
   "sklearn.datasets.make_blobs",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.metrics.get_scorer",
   "sklearn.metrics.log_loss",
   "sklearn.metrics.roc_auc_score",
   "sklearn.model_selection.train_test_split",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.tree.DecisionTreeRegressor",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.metrics.tests.test_score_objects.test_thresholded_scorers_multilabel_indicator_data": {
  "lineno": 407,
  "symbols_in_volume": [
   "numpy.vstack",
   "sklearn.datasets.make_multilabel_classification",
   "sklearn.metrics.get_scorer",
   "sklearn.metrics.roc_auc_score",
   "sklearn.model_selection.train_test_split",
   "sklearn.multiclass.OneVsRestClassifier",
   "sklearn.svm.LinearSVC",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.mixture": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.mixture._base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.mixture._base.BaseMixture": {
  "lineno": 65,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.mixture._base.BaseMixture.__init__": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture._check_initial_parameters": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture._check_parameters": {
  "lineno": 122,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture._e_step": {
  "lineno": 280,
  "symbols_in_volume": [
   "numpy.mean"
  ],
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture._estimate_log_prob": {
  "lineno": 466,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture._estimate_log_prob_resp": {
  "lineno": 482,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture._estimate_log_weights": {
  "lineno": 456,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture._estimate_weighted_log_prob": {
  "lineno": 443,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture._get_parameters": {
  "lineno": 313,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture._initialize": {
  "lineno": 158,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture._initialize_parameters": {
  "lineno": 132,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.newaxis",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture._m_step": {
  "lineno": 299,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture._print_verbose_msg_init_beg": {
  "lineno": 508,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture._print_verbose_msg_init_end": {
  "lineno": 528,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture._print_verbose_msg_iter_end": {
  "lineno": 517,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture._set_parameters": {
  "lineno": 317,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture.fit": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture.fit_predict": {
  "lineno": 195,
  "symbols_in_volume": [
   "numpy.infty",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture.predict": {
  "lineno": 356,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture.predict_proba": {
  "lineno": 374,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture.sample": {
  "lineno": 394,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.full",
   "numpy.sqrt",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture.score": {
  "lineno": 340,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.mixture._base.BaseMixture.score_samples": {
  "lineno": 321,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.mixture._base._check_X": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64"
  ],
  "type": "function"
 },
 "sklearn.mixture._base._check_shape": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture.__init__": {
  "lineno": 310,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._check_means_parameters": {
  "lineno": 370,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64"
  ],
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._check_parameters": {
  "lineno": 332,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._check_precision_parameters": {
  "lineno": 396,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._check_weights_parameters": {
  "lineno": 358,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._checkcovariance_prior_parameter": {
  "lineno": 414,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "numpy.cov",
   "numpy.float32",
   "numpy.float64",
   "numpy.var"
  ],
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._compute_lower_bound": {
  "lineno": 697,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.float64",
   "numpy.log",
   "numpy.sum",
   "scipy.special.betaln"
  ],
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._estimate_log_prob": {
  "lineno": 682,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.log",
   "numpy.newaxis",
   "numpy.sum",
   "scipy.special.digamma"
  ],
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._estimate_log_weights": {
  "lineno": 669,
  "symbols_in_volume": [
   "numpy.cumsum",
   "numpy.hstack",
   "numpy.sum",
   "scipy.special.digamma"
  ],
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._estimate_means": {
  "lineno": 489,
  "symbols_in_volume": [
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._estimate_precisions": {
  "lineno": 503,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._estimate_weights": {
  "lineno": 471,
  "symbols_in_volume": [
   "numpy.cumsum",
   "numpy.hstack"
  ],
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._estimate_wishart_diag": {
  "lineno": 592,
  "symbols_in_volume": [
   "numpy.newaxis",
   "numpy.square"
  ],
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._estimate_wishart_full": {
  "lineno": 528,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.newaxis",
   "numpy.outer"
  ],
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._estimate_wishart_spherical": {
  "lineno": 621,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.square"
  ],
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._estimate_wishart_tied": {
  "lineno": 562,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._get_parameters": {
  "lineno": 746,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._initialize": {
  "lineno": 455,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._m_step": {
  "lineno": 650,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture.BayesianGaussianMixture._set_parameters": {
  "lineno": 752,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cumprod",
   "numpy.dot",
   "numpy.hstack",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture._log_dirichlet_norm": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.sum",
   "scipy.special.gammaln"
  ],
  "type": "function"
 },
 "sklearn.mixture._bayesian_mixture._log_wishart_norm": {
  "lineno": 38,
  "symbols_in_volume": [
   "math.log",
   "numpy.arange",
   "numpy.newaxis",
   "numpy.sum",
   "scipy.special.gammaln"
  ],
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.mixture._gaussian_mixture.GaussianMixture": {
  "lineno": 434,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.mixture._gaussian_mixture.GaussianMixture.__init__": {
  "lineno": 588,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture.GaussianMixture._check_parameters": {
  "lineno": 604,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture.GaussianMixture._compute_lower_bound": {
  "lineno": 686,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture.GaussianMixture._estimate_log_prob": {
  "lineno": 679,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture.GaussianMixture._estimate_log_weights": {
  "lineno": 683,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture.GaussianMixture._get_parameters": {
  "lineno": 689,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture.GaussianMixture._initialize": {
  "lineno": 627,
  "symbols_in_volume": [
   "numpy.array",
   "scipy.linalg.cholesky"
  ],
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture.GaussianMixture._m_step": {
  "lineno": 660,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture.GaussianMixture._n_parameters": {
  "lineno": 711,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture.GaussianMixture._set_parameters": {
  "lineno": 693,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.empty"
  ],
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture.GaussianMixture.aic": {
  "lineno": 740,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture.GaussianMixture.bic": {
  "lineno": 725,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture._check_means": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64"
  ],
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture._check_precision_matrix": {
  "lineno": 83,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.allclose",
   "scipy.linalg.eigvalsh"
  ],
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture._check_precision_positivity": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.less_equal"
  ],
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture._check_precisions": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64"
  ],
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture._check_precisions_full": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture._check_weights": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.allclose",
   "numpy.float32",
   "numpy.float64",
   "numpy.greater",
   "numpy.less",
   "numpy.max",
   "numpy.min",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture._compute_log_det_cholesky": {
  "lineno": 340,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.log",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture._compute_precision_cholesky": {
  "lineno": 288,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.empty",
   "numpy.eye",
   "numpy.less_equal",
   "numpy.sqrt",
   "scipy.linalg.LinAlgError",
   "scipy.linalg.cholesky",
   "scipy.linalg.solve_triangular"
  ],
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture._estimate_gaussian_covariances_diag": {
  "lineno": 199,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture._estimate_gaussian_covariances_full": {
  "lineno": 142,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.empty"
  ],
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture._estimate_gaussian_covariances_spherical": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture._estimate_gaussian_covariances_tied": {
  "lineno": 171,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture._estimate_gaussian_parameters": {
  "lineno": 249,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.finfo",
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.mixture._gaussian_mixture._estimate_log_gaussian_prob": {
  "lineno": 380,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.empty",
   "numpy.log",
   "numpy.outer",
   "numpy.pi",
   "numpy.square",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.mixture.base": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.mixture.base.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.mixture.bayesian_mixture": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.mixture.bayesian_mixture.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.mixture.gaussian_mixture": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.mixture.gaussian_mixture.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.mixture.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.mixture.tests.test_bayesian_mixture": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_bayesian_mixture_check_is_fitted": {
  "lineno": 243,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.mixture.BayesianGaussianMixture",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_bayesian_mixture_covariance_type": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.mixture.BayesianGaussianMixture",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_bayesian_mixture_fit_predict": {
  "lineno": 429,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.random.RandomState",
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize",
   "sklearn.mixture.BayesianGaussianMixture",
   "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_bayesian_mixture_fit_predict_n_init": {
  "lineno": 454,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.mixture.BayesianGaussianMixture",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_bayesian_mixture_mean_prior_initialisation": {
  "lineno": 121,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.mixture.BayesianGaussianMixture",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_bayesian_mixture_precisions_prior_initialisation": {
  "lineno": 170,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "numpy.cov",
   "numpy.diag",
   "numpy.random.RandomState",
   "numpy.var",
   "sklearn.mixture.BayesianGaussianMixture",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_bayesian_mixture_predict_predict_proba": {
  "lineno": 463,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.exceptions.NotFittedError",
   "sklearn.metrics.cluster.adjusted_rand_score",
   "sklearn.mixture.BayesianGaussianMixture",
   "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_bayesian_mixture_weight_concentration_prior_type": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.mixture.BayesianGaussianMixture",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_bayesian_mixture_weights": {
  "lineno": 255,
  "symbols_in_volume": [
   "numpy.cumprod",
   "numpy.hstack",
   "numpy.random.RandomState",
   "numpy.sum",
   "sklearn.mixture.BayesianGaussianMixture",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_bayesian_mixture_weights_prior_initialisation": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.mixture.BayesianGaussianMixture",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_check_covariance_precision": {
  "lineno": 371,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.eye",
   "numpy.ones",
   "numpy.random.RandomState",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.mixture.BayesianGaussianMixture",
   "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_compare_covar_type": {
  "lineno": 313,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.diag",
   "numpy.mean",
   "numpy.newaxis",
   "numpy.random.RandomState",
   "sklearn.mixture.BayesianGaussianMixture",
   "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_invariant_translation": {
  "lineno": 404,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.mixture.BayesianGaussianMixture",
   "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_log_dirichlet_norm": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.sum",
   "scipy.special.gammaln",
   "sklearn.mixture._bayesian_mixture._log_dirichlet_norm",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_log_wishart_norm": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.arange",
   "numpy.empty",
   "numpy.log",
   "numpy.newaxis",
   "numpy.random.RandomState",
   "numpy.sum",
   "scipy.special.gammaln",
   "sklearn.mixture._bayesian_mixture._log_wishart_norm",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_bayesian_mixture.test_monotonic_likelihood": {
  "lineno": 285,
  "symbols_in_volume": [
   "numpy.infty",
   "numpy.random.RandomState",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.mixture.BayesianGaussianMixture",
   "sklearn.mixture.tests.test_gaussian_mixture.RandomData",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.RandomData": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.RandomData.__init__": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.full",
   "numpy.hstack",
   "numpy.int",
   "numpy.round",
   "scipy.linalg.inv",
   "sklearn.datasets.make_spd_matrix"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture._naive_lmvnpdf_diag": {
  "lineno": 464,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.sqrt",
   "scipy.stats.norm.logpdf"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.generate_data": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.eye",
   "numpy.random.RandomState",
   "numpy.round",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_bic_1d_1component": {
  "lineno": 723,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.mixture.GaussianMixture",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_check_X": {
  "lineno": 175,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.mixture._base._check_X",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_check_means": {
  "lineno": 244,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.mixture.GaussianMixture",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_check_precisions": {
  "lineno": 267,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.full",
   "numpy.ones",
   "numpy.random.RandomState",
   "sklearn.mixture.GaussianMixture",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_check_weights": {
  "lineno": 199,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.min",
   "numpy.random.RandomState",
   "numpy.sum",
   "sklearn.mixture.GaussianMixture",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_compute_log_det_cholesky": {
  "lineno": 442,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.log",
   "numpy.prod",
   "numpy.random.RandomState",
   "scipy.linalg.det",
   "sklearn.mixture._gaussian_mixture._compute_log_det_cholesky",
   "sklearn.mixture._gaussian_mixture._compute_precision_cholesky",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_convergence_detected_with_warm_start": {
  "lineno": 828,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.mixture.GaussianMixture",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_aic_bic": {
  "lineno": 739,
  "symbols_in_volume": [
   "numpy.cov",
   "numpy.log",
   "numpy.pi",
   "numpy.random.RandomState",
   "numpy.sqrt",
   "sklearn.mixture.GaussianMixture",
   "sklearn.utils.extmath.fast_logdet"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_attributes": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.mixture.GaussianMixture",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_estimate_log_prob_resp": {
  "lineno": 521,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.random.RandomState",
   "sklearn.mixture.GaussianMixture",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_fit": {
  "lineno": 608,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.diag",
   "numpy.eye",
   "numpy.random.RandomState",
   "numpy.sort",
   "numpy.trace",
   "sklearn.covariance.EmpiricalCovariance",
   "sklearn.mixture.GaussianMixture",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_fit_best_params": {
  "lineno": 656,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.RandomState",
   "sklearn.mixture.GaussianMixture",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_fit_convergence_warning": {
  "lineno": 677,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.mixture.GaussianMixture",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_fit_predict": {
  "lineno": 571,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.random.RandomState",
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize",
   "sklearn.metrics.cluster.adjusted_rand_score",
   "sklearn.mixture.GaussianMixture",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_fit_predict_n_init": {
  "lineno": 599,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.mixture.GaussianMixture",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_log_probabilities": {
  "lineno": 472,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.diag",
   "numpy.random.RandomState",
   "numpy.sqrt",
   "sklearn.mixture._gaussian_mixture._estimate_log_gaussian_prob",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_n_parameters": {
  "lineno": 710,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.mixture.GaussianMixture"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_predict_predict_proba": {
  "lineno": 546,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.exceptions.NotFittedError",
   "sklearn.metrics.cluster.adjusted_rand_score",
   "sklearn.mixture.GaussianMixture",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_verbose": {
  "lineno": 760,
  "symbols_in_volume": [
   "io.StringIO",
   "numpy.random.RandomState",
   "sklearn.mixture.GaussianMixture",
   "sys.stdout"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_suffstat_sk_spherical": {
  "lineno": 419,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.ones",
   "numpy.random.RandomState",
   "sklearn.mixture._gaussian_mixture._compute_precision_cholesky",
   "sklearn.mixture._gaussian_mixture._estimate_gaussian_covariances_spherical",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_init": {
  "lineno": 1029,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.mixture.GaussianMixture",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_monotonic_likelihood": {
  "lineno": 897,
  "symbols_in_volume": [
   "numpy.infty",
   "numpy.random.RandomState",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.mixture.GaussianMixture",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_multiple_init": {
  "lineno": 695,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.mixture.GaussianMixture"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_property": {
  "lineno": 956,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "scipy.linalg.inv",
   "sklearn.mixture.GaussianMixture",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_regularisation": {
  "lineno": 930,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.vstack",
   "numpy.zeros",
   "sklearn.mixture.GaussianMixture",
   "sklearn.utils._testing.assert_raise_message",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_sample": {
  "lineno": 978,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cov",
   "numpy.diag",
   "numpy.mean",
   "numpy.random.RandomState",
   "numpy.var",
   "sklearn.exceptions.NotFittedError",
   "sklearn.mixture.GaussianMixture",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_score": {
  "lineno": 847,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.exceptions.NotFittedError",
   "sklearn.mixture.GaussianMixture",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_raise_message",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_score_samples": {
  "lineno": 878,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.exceptions.NotFittedError",
   "sklearn.mixture.GaussianMixture",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_suffstat_sk_diag": {
  "lineno": 394,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.dot",
   "numpy.newaxis",
   "numpy.random.RandomState",
   "sklearn.covariance.EmpiricalCovariance",
   "sklearn.mixture._gaussian_mixture._compute_precision_cholesky",
   "sklearn.mixture._gaussian_mixture._estimate_gaussian_covariances_diag",
   "sklearn.mixture._gaussian_mixture._estimate_gaussian_covariances_full",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_suffstat_sk_full": {
  "lineno": 323,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.sqrt",
   "numpy.zeros",
   "scipy.linalg.inv",
   "sklearn.covariance.EmpiricalCovariance",
   "sklearn.mixture._gaussian_mixture._compute_precision_cholesky",
   "sklearn.mixture._gaussian_mixture._estimate_gaussian_covariances_full",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_suffstat_sk_tied": {
  "lineno": 365,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.newaxis",
   "numpy.random.RandomState",
   "numpy.sum",
   "scipy.linalg.inv",
   "sklearn.covariance.EmpiricalCovariance",
   "sklearn.mixture._gaussian_mixture._compute_precision_cholesky",
   "sklearn.mixture._gaussian_mixture._estimate_gaussian_covariances_full",
   "sklearn.mixture._gaussian_mixture._estimate_gaussian_covariances_tied",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_gaussian_mixture.test_warm_start": {
  "lineno": 781,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize",
   "sklearn.mixture.GaussianMixture",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.mixture.tests.test_mixture": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.mixture.tests.test_mixture.test_gaussian_mixture_n_iter": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.mixture.BayesianGaussianMixture",
   "sklearn.mixture.GaussianMixture"
  ],
  "type": "function"
 },
 "sklearn.model_selection": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.model_selection._search": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.model_selection._search.BaseSearchCV": {
  "lineno": 393,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.model_selection._search.BaseSearchCV.__init__": {
  "lineno": 397,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "numpy.nan"
  ],
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV._check_is_fitted": {
  "lineno": 450,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV._estimator_type": {
  "lineno": 413,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV._format_results": {
  "lineno": 753,
  "symbols_in_volume": [
   "collections.defaultdict",
   "functools.partial",
   "numpy.array",
   "numpy.empty",
   "numpy.int",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV._format_results._store": {
  "lineno": 772,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.average",
   "numpy.float64",
   "numpy.int32",
   "numpy.newaxis",
   "numpy.sqrt",
   "scipy.stats.rankdata"
  ],
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV._pairwise": {
  "lineno": 417,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV._run_search": {
  "lineno": 569,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV.classes_": {
  "lineno": 564,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV.decision_function": {
  "lineno": 513,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV.fit": {
  "lineno": 603,
  "symbols_in_volume": [
   "joblib.Parallel",
   "numbers.Integral",
   "time.time"
  ],
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV.fit.evaluate_candidates": {
  "lineno": 673,
  "symbols_in_volume": [
   "itertools.product",
   "joblib.delayed"
  ],
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV.inverse_transform": {
  "lineno": 547,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV.predict": {
  "lineno": 462,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV.predict_log_proba": {
  "lineno": 496,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV.predict_proba": {
  "lineno": 479,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV.score": {
  "lineno": 422,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._search.BaseSearchCV.transform": {
  "lineno": 530,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._search.GridSearchCV": {
  "lineno": 841,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.model_selection._search.GridSearchCV.__init__": {
  "lineno": 1137,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "sklearn.model_selection._search.GridSearchCV._run_search": {
  "lineno": 1149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._search.ParameterGrid": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.model_selection._search.ParameterGrid.__getitem__": {
  "lineno": 140,
  "symbols_in_volume": [
   "numpy.product"
  ],
  "type": "function"
 },
 "sklearn.model_selection._search.ParameterGrid.__init__": {
  "lineno": 90,
  "symbols_in_volume": [
   "collections.abc.Iterable",
   "collections.abc.Mapping"
  ],
  "type": "function"
 },
 "sklearn.model_selection._search.ParameterGrid.__iter__": {
  "lineno": 113,
  "symbols_in_volume": [
   "itertools.product"
  ],
  "type": "function"
 },
 "sklearn.model_selection._search.ParameterGrid.__len__": {
  "lineno": 133,
  "symbols_in_volume": [
   "functools.partial",
   "functools.reduce",
   "itertools.product",
   "operator.mul"
  ],
  "type": "function"
 },
 "sklearn.model_selection._search.ParameterSampler": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.model_selection._search.ParameterSampler.__init__": {
  "lineno": 238,
  "symbols_in_volume": [
   "collections.abc.Iterable",
   "collections.abc.Mapping"
  ],
  "type": "function"
 },
 "sklearn.model_selection._search.ParameterSampler.__iter__": {
  "lineno": 262,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.model_selection._search.ParameterSampler.__len__": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._search.RandomizedSearchCV": {
  "lineno": 1154,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.model_selection._search.RandomizedSearchCV.__init__": {
  "lineno": 1466,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "sklearn.model_selection._search.RandomizedSearchCV._run_search": {
  "lineno": 1480,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._search._check_param_grid": {
  "lineno": 373,
  "symbols_in_volume": [
   "collections.abc.Sequence",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "sklearn.model_selection._search.fit_grid_point": {
  "lineno": 305,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "sklearn.model_selection._split": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.model_selection._split.BaseCrossValidator": {
  "lineno": 48,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.model_selection._split.BaseCrossValidator.__repr__": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split.BaseCrossValidator._iter_test_indices": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split.BaseCrossValidator._iter_test_masks": {
  "lineno": 87,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.model_selection._split.BaseCrossValidator.get_n_splits": {
  "lineno": 101,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.model_selection._split.BaseCrossValidator.split": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.logical_not"
  ],
  "type": "function"
 },
 "sklearn.model_selection._split.BaseShuffleSplit": {
  "lineno": 1287,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.model_selection._split.BaseShuffleSplit.__init__": {
  "lineno": 1290,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split.BaseShuffleSplit.__repr__": {
  "lineno": 1357,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split.BaseShuffleSplit._iter_indices": {
  "lineno": 1332,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.model_selection._split.BaseShuffleSplit.get_n_splits": {
  "lineno": 1336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split.BaseShuffleSplit.split": {
  "lineno": 1298,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split.GroupKFold": {
  "lineno": 449,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.model_selection._split.GroupKFold.__init__": {
  "lineno": 499,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split.GroupKFold._iter_test_indices": {
  "lineno": 502,
  "symbols_in_volume": [
   "numpy.argmin",
   "numpy.argsort",
   "numpy.bincount",
   "numpy.unique",
   "numpy.where",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.model_selection._split.GroupKFold.split": {
  "lineno": 539,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split.GroupShuffleSplit": {
  "lineno": 1448,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.model_selection._split.GroupShuffleSplit.__init__": {
  "lineno": 1516,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split.GroupShuffleSplit._iter_indices": {
  "lineno": 1525,
  "symbols_in_volume": [
   "numpy.flatnonzero",
   "numpy.in1d",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.model_selection._split.GroupShuffleSplit.split": {
  "lineno": 1539,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split.KFold": {
  "lineno": 360,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.model_selection._split.KFold.__init__": {
  "lineno": 429,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split.KFold._iter_test_indices": {
  "lineno": 433,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.full",
   "numpy.int"
  ],
  "type": "function"
 },
 "sklearn.model_selection._split.LeaveOneGroupOut": {
  "lineno": 837,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.model_selection._split.LeaveOneGroupOut._iter_test_masks": {
  "lineno": 879,
  "symbols_in_volume": [
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.model_selection._split.LeaveOneGroupOut.get_n_splits": {
  "lineno": 892,
  "symbols_in_volume": [
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.model_selection._split.LeaveOneGroupOut.split": {
  "lineno": 919,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split.LeaveOneOut": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.model_selection._split.LeaveOneOut._iter_test_indices": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split.LeaveOneOut.get_n_splits": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split.LeavePGroupsOut": {
  "lineno": 946,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.model_selection._split.LeavePGroupsOut.__init__": {
  "lineno": 1002,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split.LeavePGroupsOut._iter_test_masks": {
  "lineno": 1005,
  "symbols_in_volume": [
   "itertools.combinations",
   "numpy.array",
   "numpy.bool",
   "numpy.unique",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.model_selection._split.LeavePGroupsOut.get_n_splits": {
  "lineno": 1023,
  "symbols_in_volume": [
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.model_selection._split.LeavePGroupsOut.split": {
  "lineno": 1050,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split.LeavePOut": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.model_selection._split.LeavePOut.__init__": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split.LeavePOut._iter_test_indices": {
  "lineno": 239,
  "symbols_in_volume": [
   "itertools.combinations",
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.model_selection._split.LeavePOut.get_n_splits": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split.PredefinedSplit": {
  "lineno": 1811,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.model_selection._split.PredefinedSplit.__init__": {
  "lineno": 1849,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.model_selection._split.PredefinedSplit._iter_test_masks": {
  "lineno": 1883,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.where",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.model_selection._split.PredefinedSplit.get_n_splits": {
  "lineno": 1891,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split.PredefinedSplit.split": {
  "lineno": 1855,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.logical_not"
  ],
  "type": "function"
 },
 "sklearn.model_selection._split.RepeatedKFold": {
  "lineno": 1181,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.model_selection._split.RepeatedKFold.__init__": {
  "lineno": 1229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split.RepeatedStratifiedKFold": {
  "lineno": 1234,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.model_selection._split.RepeatedStratifiedKFold.__init__": {
  "lineno": 1282,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split.ShuffleSplit": {
  "lineno": 1361,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.model_selection._split.ShuffleSplit.__init__": {
  "lineno": 1424,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split.ShuffleSplit._iter_indices": {
  "lineno": 1433,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split.StratifiedKFold": {
  "lineno": 566,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.model_selection._split.StratifiedKFold.__init__": {
  "lineno": 635,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split.StratifiedKFold._iter_test_masks": {
  "lineno": 691,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split.StratifiedKFold._make_test_folds": {
  "lineno": 638,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.arange",
   "numpy.asarray",
   "numpy.bincount",
   "numpy.empty",
   "numpy.min",
   "numpy.sort",
   "numpy.unique",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.model_selection._split.StratifiedKFold.split": {
  "lineno": 696,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split.StratifiedShuffleSplit": {
  "lineno": 1572,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.model_selection._split.StratifiedShuffleSplit.__init__": {
  "lineno": 1633,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split.StratifiedShuffleSplit._iter_indices": {
  "lineno": 1642,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.array",
   "numpy.bincount",
   "numpy.cumsum",
   "numpy.min",
   "numpy.split",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.model_selection._split.StratifiedShuffleSplit.split": {
  "lineno": 1703,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split.TimeSeriesSplit": {
  "lineno": 734,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.model_selection._split.TimeSeriesSplit.__init__": {
  "lineno": 788,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split.TimeSeriesSplit.split": {
  "lineno": 792,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "sklearn.model_selection._split._BaseKFold": {
  "lineno": 269,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.model_selection._split._BaseKFold.__init__": {
  "lineno": 272,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "numbers.Integral",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.model_selection._split._BaseKFold.get_n_splits": {
  "lineno": 338,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split._BaseKFold.split": {
  "lineno": 303,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split._CVIterableWrapper": {
  "lineno": 1913,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.model_selection._split._CVIterableWrapper.__init__": {
  "lineno": 1915,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split._CVIterableWrapper.get_n_splits": {
  "lineno": 1918,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split._CVIterableWrapper.split": {
  "lineno": 1939,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split._RepeatedSplits": {
  "lineno": 1077,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.model_selection._split._RepeatedSplits.__init__": {
  "lineno": 1101,
  "symbols_in_volume": [
   "numbers.Integral"
  ],
  "type": "function"
 },
 "sklearn.model_selection._split._RepeatedSplits.__repr__": {
  "lineno": 1177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split._RepeatedSplits.get_n_splits": {
  "lineno": 1150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split._RepeatedSplits.split": {
  "lineno": 1117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._split._build_repr": {
  "lineno": 2154,
  "symbols_in_volume": [
   "inspect.signature",
   "warnings.catch_warnings",
   "warnings.filters.pop",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.model_selection._split._validate_shuffle_split": {
  "lineno": 1741,
  "symbols_in_volume": [
   "math.ceil",
   "math.floor",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "sklearn.model_selection._split.check_cv": {
  "lineno": 1965,
  "symbols_in_volume": [
   "collections.abc.Iterable",
   "numbers.Integral"
  ],
  "type": "function"
 },
 "sklearn.model_selection._split.train_test_split": {
  "lineno": 2020,
  "symbols_in_volume": [
   "itertools.chain.from_iterable",
   "numpy.arange"
  ],
  "type": "function"
 },
 "sklearn.model_selection._validation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.model_selection._validation._aggregate_score_dicts": {
  "lineno": 1481,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "sklearn.model_selection._validation._check_is_permutation": {
  "lineno": 915,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.model_selection._validation._enforce_prediction_order": {
  "lineno": 858,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.full",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.model_selection._validation._fit_and_predict": {
  "lineno": 790,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection._validation._fit_and_score": {
  "lineno": 394,
  "symbols_in_volume": [
   "numbers.Number",
   "numpy.nan",
   "time.time",
   "traceback.format_exception_only",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.model_selection._validation._incremental_fit_estimator": {
  "lineno": 1331,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.split",
   "time.time"
  ],
  "type": "function"
 },
 "sklearn.model_selection._validation._permutation_test_score": {
  "lineno": 1057,
  "symbols_in_volume": [
   "numpy.mean"
  ],
  "type": "function"
 },
 "sklearn.model_selection._validation._score": {
  "lineno": 579,
  "symbols_in_volume": [
   "contextlib.suppress",
   "numbers.Number"
  ],
  "type": "function"
 },
 "sklearn.model_selection._validation._shuffle": {
  "lineno": 1068,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.model_selection._validation._translate_train_sizes": {
  "lineno": 1272,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.clip",
   "numpy.floating",
   "numpy.int",
   "numpy.issubdtype",
   "numpy.max",
   "numpy.min",
   "numpy.unique",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.model_selection._validation.cross_val_predict": {
  "lineno": 614,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed",
   "numpy.arange",
   "numpy.asarray",
   "numpy.concatenate",
   "numpy.empty",
   "numpy.int",
   "numpy.zeros_like",
   "scipy.sparse.issparse",
   "scipy.sparse.vstack"
  ],
  "type": "function"
 },
 "sklearn.model_selection._validation.cross_val_score": {
  "lineno": 263,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "sklearn.model_selection._validation.cross_validate": {
  "lineno": 40,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed",
   "numpy.array",
   "numpy.nan"
  ],
  "type": "function"
 },
 "sklearn.model_selection._validation.learning_curve": {
  "lineno": 1080,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed",
   "numpy.array",
   "numpy.asarray",
   "numpy.linspace",
   "numpy.nan",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.model_selection._validation.permutation_test_score": {
  "lineno": 939,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed",
   "numpy.array",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.model_selection._validation.validation_curve": {
  "lineno": 1365,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed",
   "numpy.asarray",
   "numpy.nan"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.model_selection.tests.common": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.model_selection.tests.common.OneTimeSplitter": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.model_selection.tests.common.OneTimeSplitter.__init__": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.ones",
   "sklearn.model_selection.KFold"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.common.OneTimeSplitter.get_n_splits": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.common.OneTimeSplitter.split": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "module"
 },
 "sklearn.model_selection.tests.test_search.BrokenClassifier": {
  "lineno": 551,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.model_selection.tests.test_search.BrokenClassifier.__init__": {
  "lineno": 554,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.BrokenClassifier.fit": {
  "lineno": 557,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.BrokenClassifier.predict": {
  "lineno": 561,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.FailingClassifier": {
  "lineno": 1421,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.model_selection.tests.test_search.FailingClassifier.__init__": {
  "lineno": 1426,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.FailingClassifier.fit": {
  "lineno": 1429,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.FailingClassifier.predict": {
  "lineno": 1433,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.FailingClassifier.score": {
  "lineno": 1436,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.LinearSVCNoScore": {
  "lineno": 114,
  "symbols_in_volume": [
   "sklearn.svm.LinearSVC"
  ],
  "type": "class"
 },
 "sklearn.model_selection.tests.test_search.LinearSVCNoScore.score": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.MockClassifier": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.model_selection.tests.test_search.MockClassifier.__init__": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.MockClassifier.fit": {
  "lineno": 81,
  "symbols_in_volume": [
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.MockClassifier.get_params": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.MockClassifier.inverse_transform": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.MockClassifier.predict": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.MockClassifier.score": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.MockClassifier.set_params": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.MockClassifier.transform": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.assert_grid_iter_equals_getitem": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.check_cv_results_array_types": {
  "lineno": 817,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int32",
   "numpy.ma.MaskedArray"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.check_cv_results_keys": {
  "lineno": 834,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.compare_cv_results_multimetric_with_single": {
  "lineno": 1153,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.testing.assert_equal",
   "pytest.mark.filterwarnings",
   "re.sub",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.compare_refit_methods_when_refit_with_acc": {
  "lineno": 1185,
  "symbols_in_volume": [
   "sklearn.datasets.make_blobs",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_SearchCV_with_fit_params": {
  "lineno": 222,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.ones",
   "numpy.zeros",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.model_selection.RandomizedSearchCV",
   "sklearn.utils._mocking.CheckingClassifier"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_X_as_list": {
  "lineno": 696,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.model_selection.KFold",
   "sklearn.utils._mocking.CheckingClassifier"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test__custom_fit_no_run_search": {
  "lineno": 1721,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test__custom_fit_no_run_search.BadSearchCV": {
  "lineno": 1732,
  "symbols_in_volume": [
   "sklearn.model_selection._search.BaseSearchCV"
  ],
  "type": "class"
 },
 "sklearn.model_selection.tests.test_search.test__custom_fit_no_run_search.BadSearchCV.__init__": {
  "lineno": 1733,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test__custom_fit_no_run_search.NoRunSearchSearchCV": {
  "lineno": 1722,
  "symbols_in_volume": [
   "sklearn.model_selection._search.BaseSearchCV"
  ],
  "type": "class"
 },
 "sklearn.model_selection.tests.test_search.test__custom_fit_no_run_search.NoRunSearchSearchCV.__init__": {
  "lineno": 1723,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test__custom_fit_no_run_search.NoRunSearchSearchCV.fit": {
  "lineno": 1726,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_classes__property": {
  "lineno": 325,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "sklearn.linear_model.Ridge",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_custom_run_search": {
  "lineno": 1668,
  "symbols_in_volume": [
   "pytest.warns",
   "sklearn.datasets.make_classification",
   "sklearn.tree.DecisionTreeRegressor"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_custom_run_search.CustomSearchCV": {
  "lineno": 1687,
  "symbols_in_volume": [
   "sklearn.model_selection._search.BaseSearchCV"
  ],
  "type": "class"
 },
 "sklearn.model_selection.tests.test_search.test_custom_run_search.CustomSearchCV.__init__": {
  "lineno": 1688,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_custom_run_search.CustomSearchCV._run_search": {
  "lineno": 1691,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_custom_run_search.check_results": {
  "lineno": 1669,
  "symbols_in_volume": [
   "numpy.asanyarray",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_custom_run_search.fit_grid": {
  "lineno": 1683,
  "symbols_in_volume": [
   "sklearn.model_selection.GridSearchCV"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_deprecated_grid_search_iid": {
  "lineno": 1742,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.warns",
   "sklearn.datasets.make_blobs",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_empty_cv_iterator_error": {
  "lineno": 1754,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.linear_model.Ridge",
   "sklearn.model_selection.KFold",
   "sklearn.model_selection.RandomizedSearchCV"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_fit_grid_point": {
  "lineno": 1309,
  "symbols_in_volume": [
   "sklearn.base.clone",
   "sklearn.datasets.make_classification",
   "sklearn.metrics.accuracy_score",
   "sklearn.metrics.make_scorer",
   "sklearn.model_selection.StratifiedKFold",
   "sklearn.model_selection.fit_grid_point",
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_grid_search": {
  "lineno": 179,
  "symbols_in_volume": [
   "io.StringIO",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raises",
   "sys.stdout"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_grid_search_allows_nans": {
  "lineno": 1409,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float64",
   "numpy.nan",
   "sklearn.impute.SimpleImputer",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.pipeline.Pipeline"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_grid_search_bad_param_grid": {
  "lineno": 428,
  "symbols_in_volume": [
   "numpy.ones",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.assert_raise_message",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_grid_search_correct_score_results": {
  "lineno": 1274,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.in1d",
   "sklearn.datasets.make_blobs",
   "sklearn.metrics.f1_score",
   "sklearn.metrics.roc_auc_score",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.model_selection.StratifiedKFold",
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_grid_search_cv_results": {
  "lineno": 842,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_grid_search_cv_results_multimetric": {
  "lineno": 1093,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "sklearn.datasets.make_classification",
   "sklearn.metrics.accuracy_score",
   "sklearn.metrics.make_scorer",
   "sklearn.metrics.recall_score",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_grid_search_cv_splits_consistency": {
  "lineno": 1578,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.model_selection.KFold",
   "sklearn.model_selection.tests.common.OneTimeSplitter",
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.assert_array_almost_equal",
   "types.GeneratorType"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_grid_search_cv_splits_consistency._pop_time_keys": {
  "lineno": 1613,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_grid_search_error": {
  "lineno": 396,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_grid_search_failing_classifier": {
  "lineno": 1440,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.isnan",
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.model_selection._validation.FitFailedWarning",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_grid_search_failing_classifier.get_cand_scores": {
  "lineno": 1460,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_grid_search_failing_classifier_raise": {
  "lineno": 1487,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_grid_search_groups": {
  "lineno": 298,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.model_selection.GroupKFold",
   "sklearn.model_selection.GroupShuffleSplit",
   "sklearn.model_selection.LeaveOneGroupOut",
   "sklearn.model_selection.LeavePGroupsOut",
   "sklearn.model_selection.StratifiedKFold",
   "sklearn.model_selection.StratifiedShuffleSplit",
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_grid_search_no_score": {
  "lineno": 243,
  "symbols_in_volume": [
   "sklearn.datasets.make_blobs",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.assert_raise_message",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_grid_search_one_grid_point": {
  "lineno": 405,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_grid_search_pipeline_steps": {
  "lineno": 204,
  "symbols_in_volume": [
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.Ridge",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.pipeline.Pipeline"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_grid_search_precomputed_kernel": {
  "lineno": 513,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.mean",
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_grid_search_precomputed_kernel_error_nonsquare": {
  "lineno": 541,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.zeros",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_grid_search_score_method": {
  "lineno": 269,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_grid_search_sparse": {
  "lineno": 457,
  "symbols_in_volume": [
   "numpy.mean",
   "scipy.sparse.csr_matrix",
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_grid_search_sparse_scoring": {
  "lineno": 478,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "sklearn.datasets.make_classification",
   "sklearn.metrics.make_scorer",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_grid_search_sparse_scoring.f1_loss": {
  "lineno": 501,
  "symbols_in_volume": [
   "sklearn.metrics.f1_score"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_grid_search_when_param_grid_includes_range": {
  "lineno": 419,
  "symbols_in_volume": [
   "sklearn.model_selection.GridSearchCV"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_grid_search_with_multioutput_data": {
  "lineno": 1354,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "sklearn.datasets.make_multilabel_classification",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.model_selection.KFold",
   "sklearn.model_selection.RandomizedSearchCV",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.tree.DecisionTreeRegressor",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_gridsearch_nd": {
  "lineno": 684,
  "symbols_in_volume": [
   "numpy.arange",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.utils._mocking.CheckingClassifier"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_gridsearch_no_predict": {
  "lineno": 777,
  "symbols_in_volume": [
   "sklearn.datasets.make_blobs",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.neighbors.KernelDensity"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_gridsearch_no_predict.custom_scoring": {
  "lineno": 780,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_no_refit": {
  "lineno": 364,
  "symbols_in_volume": [
   "sklearn.exceptions.NotFittedError",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_pandas_input": {
  "lineno": 720,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "pandas.DataFrame",
   "pandas.Series",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.utils._mocking.CheckingClassifier",
   "sklearn.utils._mocking.MockDataFrame",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_pandas_input.check_df": {
  "lineno": 737,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_pandas_input.check_series": {
  "lineno": 740,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_param_sampler": {
  "lineno": 792,
  "symbols_in_volume": [
   "scipy.stats.uniform",
   "sklearn.model_selection.ParameterSampler",
   "sklearn.utils.fixes.sp_version"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_parameter_grid": {
  "lineno": 142,
  "symbols_in_volume": [
   "collections.abc.Iterable",
   "collections.abc.Sized",
   "itertools.chain",
   "itertools.product",
   "sklearn.model_selection.ParameterGrid",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_parameters_sampler_replacement": {
  "lineno": 1502,
  "symbols_in_volume": [
   "scipy.stats.bernoulli",
   "sklearn.model_selection.ParameterGrid",
   "sklearn.model_selection.ParameterSampler",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_pickle": {
  "lineno": 1337,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.model_selection.RandomizedSearchCV",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_predict_proba_disabled": {
  "lineno": 1400,
  "symbols_in_volume": [
   "numpy.arange",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_random_search_bad_cv": {
  "lineno": 1776,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.linear_model.Ridge",
   "sklearn.model_selection.RandomizedSearchCV"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_random_search_bad_cv.BrokenKFold": {
  "lineno": 1779,
  "symbols_in_volume": [
   "sklearn.model_selection.KFold"
  ],
  "type": "class"
 },
 "sklearn.model_selection.tests.test_search.test_random_search_bad_cv.BrokenKFold.get_n_splits": {
  "lineno": 1780,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_random_search_cv_results": {
  "lineno": 895,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "scipy.stats.expon",
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.RandomizedSearchCV",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_random_search_cv_results_multimetric": {
  "lineno": 1116,
  "symbols_in_volume": [
   "numpy.logspace",
   "pytest.mark.filterwarnings",
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.RandomizedSearchCV",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_refit": {
  "lineno": 565,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_refit_callable": {
  "lineno": 578,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_refit_callable.refit_callable": {
  "lineno": 583,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_refit_callable_invalid_type": {
  "lineno": 616,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_refit_callable_invalid_type.refit_callable_invalid_type": {
  "lineno": 621,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_refit_callable_multi_metric": {
  "lineno": 659,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification",
   "sklearn.metrics.accuracy_score",
   "sklearn.metrics.make_scorer",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_refit_callable_multi_metric.refit_callable": {
  "lineno": 663,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_refit_callable_out_bound": {
  "lineno": 637,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.model_selection.RandomizedSearchCV",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_refit_callable_out_bound.refit_callable_out_bound": {
  "lineno": 644,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_scalar_fit_param": {
  "lineno": 1845,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "scipy.stats.uniform",
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.model_selection.RandomizedSearchCV"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_scalar_fit_param.TestEstimator": {
  "lineno": 1854,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.ClassifierMixin"
  ],
  "type": "class"
 },
 "sklearn.model_selection.tests.test_search.test_scalar_fit_param.TestEstimator.__init__": {
  "lineno": 1855,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_scalar_fit_param.TestEstimator.fit": {
  "lineno": 1858,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_scalar_fit_param.TestEstimator.predict": {
  "lineno": 1861,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_scalar_fit_param_compat": {
  "lineno": 1870,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "scipy.stats.uniform",
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.model_selection.RandomizedSearchCV",
   "sklearn.model_selection.train_test_split"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_scalar_fit_param_compat._FitParamClassifier": {
  "lineno": 1886,
  "symbols_in_volume": [
   "sklearn.linear_model.SGDClassifier"
  ],
  "type": "class"
 },
 "sklearn.model_selection.tests.test_search.test_scalar_fit_param_compat._FitParamClassifier.fit": {
  "lineno": 1888,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_scalar_fit_param_compat._fit_param_callable": {
  "lineno": 1900,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_search_cv__pairwise_property_delegated_to_base_estimator": {
  "lineno": 1798,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.model_selection.GridSearchCV"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_search_cv__pairwise_property_equivalence_of_precomputed": {
  "lineno": 1815,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification",
   "sklearn.metrics.pairwise.euclidean_distances",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.neighbors.KNeighborsClassifier"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_search_cv_results_none_param": {
  "lineno": 1233,
  "symbols_in_volume": [
   "sklearn.model_selection.GridSearchCV",
   "sklearn.model_selection.KFold",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.tree.DecisionTreeRegressor",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_search_cv_results_rank_tie_breaking": {
  "lineno": 1202,
  "symbols_in_volume": [
   "numpy.allclose",
   "sklearn.datasets.make_blobs",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.model_selection.RandomizedSearchCV",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_search_cv_timing": {
  "lineno": 1246,
  "symbols_in_volume": [
   "numpy.all",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.model_selection.RandomizedSearchCV",
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_search_default_iid": {
  "lineno": 941,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool",
   "numpy.mean",
   "numpy.ones",
   "numpy.std",
   "numpy.where",
   "pytest.approx",
   "pytest.mark.parametrize",
   "sklearn.datasets.make_blobs",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.model_selection.RandomizedSearchCV",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_search_iid_param": {
  "lineno": 995,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool",
   "numpy.mean",
   "numpy.ones",
   "numpy.sqrt",
   "numpy.std",
   "numpy.where",
   "pytest.mark.filterwarnings",
   "sklearn.datasets.make_blobs",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.model_selection.RandomizedSearchCV",
   "sklearn.model_selection.cross_val_score",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_search_train_scores_set_to_false": {
  "lineno": 1569,
  "symbols_in_volume": [
   "numpy.arange",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_stochastic_gradient_loss_param": {
  "lineno": 1539,
  "symbols_in_volume": [
   "numpy.arange",
   "sklearn.linear_model.SGDClassifier",
   "sklearn.model_selection.GridSearchCV"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_transform_inverse_transform_round_trip": {
  "lineno": 1659,
  "symbols_in_volume": [
   "sklearn.model_selection.GridSearchCV",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_trivial_cv_results_attr": {
  "lineno": 352,
  "symbols_in_volume": [
   "sklearn.model_selection.GridSearchCV",
   "sklearn.model_selection.RandomizedSearchCV"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_unsupervised_grid_search": {
  "lineno": 751,
  "symbols_in_volume": [
   "sklearn.cluster.KMeans",
   "sklearn.datasets.make_blobs",
   "sklearn.model_selection.GridSearchCV"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_validate_parameter_input": {
  "lineno": 128,
  "symbols_in_volume": [
   "functools.partial",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.model_selection.ParameterGrid",
   "sklearn.model_selection.ParameterSampler"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_search.test_y_as_list": {
  "lineno": 708,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.model_selection.KFold",
   "sklearn.utils._mocking.CheckingClassifier"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.eye",
   "numpy.ones",
   "scipy.sparse.coo_matrix",
   "sklearn.datasets.load_digits"
  ],
  "type": "module"
 },
 "sklearn.model_selection.tests.test_split.MockClassifier": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.model_selection.tests.test_split.MockClassifier.__init__": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.MockClassifier.fit": {
  "lineno": 73,
  "symbols_in_volume": [
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.MockClassifier.get_params": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.MockClassifier.predict": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.MockClassifier.score": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.abs"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split._check_time_series_max_train_size": {
  "lineno": 1487,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.check_cv_coverage": {
  "lineno": 230,
  "symbols_in_volume": [
   "sklearn.utils.validation._num_samples"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.check_valid_split": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_2d_y": {
  "lineno": 191,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.model_selection.GroupKFold",
   "sklearn.model_selection.GroupShuffleSplit",
   "sklearn.model_selection.KFold",
   "sklearn.model_selection.LeaveOneGroupOut",
   "sklearn.model_selection.LeaveOneOut",
   "sklearn.model_selection.LeavePGroupsOut",
   "sklearn.model_selection.LeavePOut",
   "sklearn.model_selection.PredefinedSplit",
   "sklearn.model_selection.RepeatedKFold",
   "sklearn.model_selection.RepeatedStratifiedKFold",
   "sklearn.model_selection.ShuffleSplit",
   "sklearn.model_selection.StratifiedKFold",
   "sklearn.model_selection.StratifiedShuffleSplit",
   "sklearn.model_selection.TimeSeriesSplit"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_build_repr": {
  "lineno": 1528,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_build_repr.MockSplitter": {
  "lineno": 1529,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.model_selection.tests.test_split.test_build_repr.MockSplitter.__init__": {
  "lineno": 1530,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_build_repr.MockSplitter.__repr__": {
  "lineno": 1535,
  "symbols_in_volume": [
   "sklearn.model_selection._split._build_repr"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_check_cv": {
  "lineno": 1292,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "sklearn.model_selection.KFold",
   "sklearn.model_selection.StratifiedKFold",
   "sklearn.model_selection.check_cv",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_cross_validator_with_default_params": {
  "lineno": 129,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.testing.assert_equal",
   "sklearn.model_selection.KFold",
   "sklearn.model_selection.LeaveOneGroupOut",
   "sklearn.model_selection.LeaveOneOut",
   "sklearn.model_selection.LeavePGroupsOut",
   "sklearn.model_selection.LeavePOut",
   "sklearn.model_selection.PredefinedSplit",
   "sklearn.model_selection.ShuffleSplit",
   "sklearn.model_selection.StratifiedKFold",
   "sklearn.utils._testing.assert_raise_message",
   "sklearn.utils._testing.ignore_warnings",
   "sklearn.utils.fixes.comb"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_cv_iterable_wrapper": {
  "lineno": 1331,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "sklearn.model_selection.KFold",
   "sklearn.model_selection.check_cv"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_get_n_splits_for_repeated_kfold": {
  "lineno": 1027,
  "symbols_in_volume": [
   "sklearn.model_selection.RepeatedKFold"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_get_n_splits_for_repeated_stratified_kfold": {
  "lineno": 1035,
  "symbols_in_volume": [
   "sklearn.model_selection.RepeatedStratifiedKFold"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_group_kfold": {
  "lineno": 1358,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.intersect1d",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.unique",
   "numpy.zeros",
   "sklearn.model_selection.GroupKFold",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raises_regexp",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_group_shuffle_split": {
  "lineno": 832,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.asarray",
   "numpy.in1d",
   "numpy.intersect1d",
   "numpy.ones",
   "numpy.unique",
   "sklearn.model_selection.GroupShuffleSplit",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_group_shuffle_split_default_test_size": {
  "lineno": 611,
  "symbols_in_volume": [
   "numpy.ones",
   "pytest.mark.parametrize",
   "sklearn.model_selection.GroupShuffleSplit"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_kfold_balance": {
  "lineno": 426,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.min",
   "numpy.ones",
   "numpy.sum",
   "sklearn.model_selection.KFold"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_kfold_can_detect_dependent_samples_on_digits": {
  "lineno": 534,
  "symbols_in_volume": [
   "sklearn.model_selection.KFold",
   "sklearn.model_selection.StratifiedKFold",
   "sklearn.model_selection.cross_val_score",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_kfold_indices": {
  "lineno": 298,
  "symbols_in_volume": [
   "numpy.ones",
   "sklearn.model_selection.KFold"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_kfold_no_shuffle": {
  "lineno": 314,
  "symbols_in_volume": [
   "sklearn.model_selection.KFold",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_kfold_valueerrors": {
  "lineno": 251,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.model_selection.KFold",
   "sklearn.model_selection.StratifiedKFold",
   "sklearn.utils._testing.assert_raise_message",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils._testing.assert_warns_message",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_leave_group_out_changing_groups": {
  "lineno": 927,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "sklearn.model_selection.LeaveOneGroupOut",
   "sklearn.model_selection.LeavePGroupsOut",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_leave_one_out_empty_trainset": {
  "lineno": 1569,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.model_selection.LeaveOneOut"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_leave_one_p_group_out": {
  "lineno": 869,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.inf",
   "numpy.intersect1d",
   "numpy.nan",
   "numpy.ones",
   "numpy.unique",
   "sklearn.model_selection.LeaveOneGroupOut",
   "sklearn.model_selection.LeavePGroupsOut",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raise_message",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_leave_one_p_group_out_error_on_fewer_number_of_groups": {
  "lineno": 952,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ones",
   "sklearn.model_selection.LeaveOneGroupOut",
   "sklearn.model_selection.LeavePGroupsOut",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_leave_p_out_empty_trainset": {
  "lineno": 1579,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.model_selection.LeavePOut"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_nested_cv": {
  "lineno": 1510,
  "symbols_in_volume": [
   "itertools.combinations_with_replacement",
   "numpy.random.RandomState",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model.Ridge",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.model_selection.GroupKFold",
   "sklearn.model_selection.LeaveOneGroupOut",
   "sklearn.model_selection.LeaveOneOut",
   "sklearn.model_selection.StratifiedKFold",
   "sklearn.model_selection.StratifiedShuffleSplit",
   "sklearn.model_selection.cross_val_score"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_predefinedsplit_with_kfold_split": {
  "lineno": 815,
  "symbols_in_volume": [
   "numpy.full",
   "numpy.unique",
   "sklearn.model_selection.KFold",
   "sklearn.model_selection.PredefinedSplit",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_random_state_shuffle_false": {
  "lineno": 1589,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.warns",
   "sklearn.model_selection.KFold",
   "sklearn.model_selection.StratifiedKFold"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_repeated_cv_repr": {
  "lineno": 985,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.model_selection.RepeatedKFold",
   "sklearn.model_selection.RepeatedStratifiedKFold"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_repeated_cv_value_errors": {
  "lineno": 977,
  "symbols_in_volume": [
   "sklearn.model_selection.RepeatedKFold",
   "sklearn.model_selection.RepeatedStratifiedKFold",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_repeated_kfold_determinstic_split": {
  "lineno": 996,
  "symbols_in_volume": [
   "sklearn.model_selection.RepeatedKFold",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_repeated_stratified_kfold_determinstic_split": {
  "lineno": 1043,
  "symbols_in_volume": [
   "sklearn.model_selection.RepeatedStratifiedKFold",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_shuffle_kfold": {
  "lineno": 453,
  "symbols_in_volume": [
   "itertools.combinations",
   "numpy.intersect1d",
   "numpy.ones",
   "numpy.zeros",
   "sklearn.model_selection.KFold"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_shuffle_kfold_stratifiedkfold_reproducibility": {
  "lineno": 475,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "pytest.raises",
   "sklearn.model_selection.KFold",
   "sklearn.model_selection.StratifiedKFold"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_shuffle_split": {
  "lineno": 578,
  "symbols_in_volume": [
   "numpy.int32",
   "sklearn.model_selection.ShuffleSplit",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_shuffle_split_default_test_size": {
  "lineno": 592,
  "symbols_in_volume": [
   "numpy.ones",
   "pytest.mark.parametrize",
   "sklearn.model_selection.ShuffleSplit",
   "sklearn.model_selection.StratifiedShuffleSplit"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_shuffle_split_empty_trainset": {
  "lineno": 1541,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.model_selection.GroupShuffleSplit",
   "sklearn.model_selection.ShuffleSplit",
   "sklearn.model_selection.StratifiedShuffleSplit"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_shuffle_stratifiedkfold": {
  "lineno": 510,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ones",
   "sklearn.model_selection.StratifiedKFold"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_shufflesplit_errors": {
  "lineno": 1249,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.model_selection.ShuffleSplit"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_shufflesplit_reproducible": {
  "lineno": 1262,
  "symbols_in_volume": [
   "sklearn.model_selection.ShuffleSplit",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratified_kfold_label_invariance": {
  "lineno": 402,
  "symbols_in_volume": [
   "itertools.permutations",
   "numpy.array",
   "numpy.ones",
   "numpy.take",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratified_kfold_label_invariance.get_splits": {
  "lineno": 412,
  "symbols_in_volume": [
   "sklearn.model_selection.StratifiedKFold"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratified_kfold_no_shuffle": {
  "lineno": 337,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.ones_like",
   "numpy.testing.assert_equal",
   "sklearn.model_selection.KFold",
   "sklearn.model_selection.StratifiedKFold",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratified_kfold_ratios": {
  "lineno": 380,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bincount",
   "numpy.ones",
   "numpy.ptp",
   "pytest.mark.parametrize",
   "sklearn.model_selection.StratifiedKFold",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratified_shuffle_split_even": {
  "lineno": 701,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "numpy.unique",
   "sklearn.model_selection.StratifiedShuffleSplit",
   "sklearn.model_selection._split._validate_shuffle_split"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratified_shuffle_split_even.assert_counts_are_ok": {
  "lineno": 707,
  "symbols_in_volume": [
   "scipy.stats.binom"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratified_shuffle_split_init": {
  "lineno": 630,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "sklearn.model_selection.StratifiedShuffleSplit",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratified_shuffle_split_iter": {
  "lineno": 666,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asanyarray",
   "numpy.bincount",
   "numpy.ceil",
   "numpy.concatenate",
   "numpy.lib.arraysetops.intersect1d",
   "numpy.ones",
   "numpy.unique",
   "sklearn.model_selection.StratifiedShuffleSplit",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratified_shuffle_split_multilabel": {
  "lineno": 769,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.intersect1d",
   "numpy.mean",
   "numpy.ones_like",
   "numpy.union1d",
   "sklearn.model_selection.StratifiedShuffleSplit",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratified_shuffle_split_multilabel_many_labels": {
  "lineno": 792,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.mean",
   "numpy.ones_like",
   "sklearn.model_selection.StratifiedShuffleSplit"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratified_shuffle_split_overlap_train_test_bug": {
  "lineno": 751,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.intersect1d",
   "numpy.ones_like",
   "numpy.union1d",
   "sklearn.model_selection.StratifiedShuffleSplit",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratified_shuffle_split_respects_test_size": {
  "lineno": 655,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "sklearn.model_selection.StratifiedShuffleSplit"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratifiedkfold_balance": {
  "lineno": 436,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.min",
   "numpy.ones",
   "numpy.sum",
   "sklearn.model_selection.StratifiedKFold"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_stratifiedshufflesplit_list_input": {
  "lineno": 1270,
  "symbols_in_volume": [
   "numpy.hstack",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "sklearn.model_selection.StratifiedShuffleSplit"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_time_series_cv": {
  "lineno": 1449,
  "symbols_in_volume": [
   "sklearn.model_selection.TimeSeriesSplit",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raises_regexp"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_time_series_max_train_size": {
  "lineno": 1495,
  "symbols_in_volume": [
   "numpy.zeros",
   "sklearn.model_selection.TimeSeriesSplit"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_train_test_split": {
  "lineno": 1142,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.sum",
   "scipy.sparse.coo_matrix",
   "sklearn.model_selection.train_test_split",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_train_test_split_allow_nans": {
  "lineno": 1284,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float64",
   "numpy.nan",
   "numpy.repeat",
   "sklearn.model_selection.train_test_split"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_train_test_split_default_test_size": {
  "lineno": 1129,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.model_selection.train_test_split"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_train_test_split_empty_trainset": {
  "lineno": 1553,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.model_selection.train_test_split"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_train_test_split_errors": {
  "lineno": 1075,
  "symbols_in_volume": [
   "numpy.float32",
   "pytest.raises",
   "sklearn.model_selection.train_test_split"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_train_test_split_invalid_sizes1": {
  "lineno": 1101,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.model_selection.train_test_split"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_train_test_split_invalid_sizes2": {
  "lineno": 1116,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.model_selection.train_test_split"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_train_test_split_list_input": {
  "lineno": 1228,
  "symbols_in_volume": [
   "numpy.hstack",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "sklearn.model_selection.train_test_split"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_train_test_split_mock_pandas": {
  "lineno": 1219,
  "symbols_in_volume": [
   "sklearn.model_selection.train_test_split",
   "sklearn.utils._mocking.MockDataFrame"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_train_test_split_pandas": {
  "lineno": 1190,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "sklearn.model_selection.train_test_split",
   "sklearn.utils._mocking.MockDataFrame",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_split.test_train_test_split_sparse": {
  "lineno": 1207,
  "symbols_in_volume": [
   "numpy.arange",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.model_selection.train_test_split"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.eye",
   "numpy.ones",
   "scipy.sparse.coo_matrix"
  ],
  "type": "module"
 },
 "sklearn.model_selection.tests.test_validation.MockClassifier": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.model_selection.tests.test_validation.MockClassifier.__init__": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockClassifier.fit": {
  "lineno": 168,
  "symbols_in_volume": [
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockClassifier.get_params": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockClassifier.predict": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockClassifier.score": {
  "lineno": 217,
  "symbols_in_volume": [
   "numpy.abs"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockEstimatorWithParameter": {
  "lineno": 127,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.model_selection.tests.test_validation.MockEstimatorWithParameter.__init__": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockEstimatorWithParameter._is_training_data": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockEstimatorWithParameter.fit": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockEstimatorWithParameter.predict": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockEstimatorWithParameter.score": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockEstimatorWithSingleFitCallAllowed": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.model_selection.tests.test_validation.MockEstimatorWithSingleFitCallAllowed.fit": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockEstimatorWithSingleFitCallAllowed.predict": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockImprovingEstimator": {
  "lineno": 87,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.model_selection.tests.test_validation.MockImprovingEstimator.__init__": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockImprovingEstimator._is_training_data": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockImprovingEstimator.fit": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockImprovingEstimator.predict": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockImprovingEstimator.score": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockIncrementalImprovingEstimator": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.model_selection.tests.test_validation.MockIncrementalImprovingEstimator.__init__": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockIncrementalImprovingEstimator._is_training_data": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.MockIncrementalImprovingEstimator.partial_fit": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.RFWithDecisionFunction": {
  "lineno": 1452,
  "symbols_in_volume": [
   "sklearn.ensemble.RandomForestClassifier"
  ],
  "type": "class"
 },
 "sklearn.model_selection.tests.test_validation.RFWithDecisionFunction.decision_function": {
  "lineno": 1456,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.check_cross_val_predict_binary": {
  "lineno": 1299,
  "symbols_in_volume": [
   "numpy.zeros",
   "sklearn.base.clone",
   "sklearn.model_selection.KFold",
   "sklearn.model_selection.cross_val_predict",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.check_cross_val_predict_multiclass": {
  "lineno": 1319,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float64",
   "numpy.full",
   "numpy.ix_",
   "numpy.unique",
   "sklearn.base.clone",
   "sklearn.model_selection.KFold",
   "sklearn.model_selection.cross_val_predict",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.check_cross_val_predict_multilabel": {
  "lineno": 1344,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.finfo",
   "numpy.float64",
   "numpy.full",
   "numpy.ix_",
   "numpy.newaxis",
   "numpy.unique",
   "sklearn.base.clone",
   "sklearn.model_selection.KFold",
   "sklearn.model_selection.cross_val_predict",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.check_cross_val_predict_with_method_binary": {
  "lineno": 1391,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.check_cross_val_predict_with_method_multiclass": {
  "lineno": 1399,
  "symbols_in_volume": [
   "sklearn.datasets.load_iris",
   "sklearn.utils.shuffle"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.check_cross_validate_multi_metric": {
  "lineno": 442,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.ndarray",
   "sklearn.metrics.make_scorer",
   "sklearn.metrics.r2_score",
   "sklearn.model_selection.cross_validate",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.check_cross_validate_single_metric": {
  "lineno": 398,
  "symbols_in_volume": [
   "sklearn.model_selection.cross_validate",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.get_expected_predictions": {
  "lineno": 1512,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.full",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_check_is_permutation": {
  "lineno": 1270,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.delete",
   "numpy.hstack",
   "numpy.random.RandomState",
   "sklearn.model_selection._validation._check_is_permutation"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict": {
  "lineno": 767,
  "symbols_in_volume": [
   "numpy.median",
   "numpy.zeros_like",
   "scipy.sparse.coo_matrix",
   "sklearn.cluster.KMeans",
   "sklearn.datasets.load_boston",
   "sklearn.datasets.load_iris",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.linear_model.Ridge",
   "sklearn.model_selection.KFold",
   "sklearn.model_selection.LeaveOneOut",
   "sklearn.model_selection.cross_val_predict",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict.BadCV": {
  "lineno": 798,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict.BadCV.split": {
  "lineno": 799,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_class_subset": {
  "lineno": 1532,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.repeat",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.model_selection.KFold",
   "sklearn.model_selection.cross_val_predict",
   "sklearn.preprocessing.LabelEncoder",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.shuffle"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_decision_function_shape": {
  "lineno": 816,
  "symbols_in_volume": [
   "numpy.argsort",
   "sklearn.datasets.load_digits",
   "sklearn.datasets.load_iris",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.linear_model.RidgeClassifier",
   "sklearn.model_selection.KFold",
   "sklearn.model_selection.cross_val_predict",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.assert_raise_message",
   "sklearn.utils._testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_input_types": {
  "lineno": 891,
  "symbols_in_volume": [
   "numpy.column_stack",
   "numpy.newaxis",
   "scipy.sparse.coo_matrix",
   "sklearn.datasets.load_iris",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.linear_model.Ridge",
   "sklearn.model_selection.cross_val_predict",
   "sklearn.utils._mocking.CheckingClassifier",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_method_checking": {
  "lineno": 1414,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "sklearn.datasets.load_iris",
   "sklearn.linear_model.SGDClassifier",
   "sklearn.utils.shuffle"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_pandas": {
  "lineno": 938,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pytest.mark.filterwarnings",
   "sklearn.model_selection.cross_val_predict",
   "sklearn.utils._mocking.CheckingClassifier",
   "sklearn.utils._mocking.MockDataFrame"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_predict_log_proba_shape": {
  "lineno": 877,
  "symbols_in_volume": [
   "sklearn.datasets.load_iris",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.model_selection.cross_val_predict"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_predict_proba_shape": {
  "lineno": 863,
  "symbols_in_volume": [
   "sklearn.datasets.load_iris",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.model_selection.cross_val_predict"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_sparse_prediction": {
  "lineno": 1284,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "sklearn.datasets.make_multilabel_classification",
   "sklearn.model_selection.cross_val_predict",
   "sklearn.multiclass.OneVsRestClassifier",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_unbalanced": {
  "lineno": 957,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.ones",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.model_selection.StratifiedKFold",
   "sklearn.model_selection.cross_val_predict",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_with_method": {
  "lineno": 1407,
  "symbols_in_volume": [
   "sklearn.linear_model.LogisticRegression"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_with_method_multilabel_ovr": {
  "lineno": 1437,
  "symbols_in_volume": [
   "sklearn.datasets.make_multilabel_classification",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.multiclass.OneVsRestClassifier"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_with_method_multilabel_rf": {
  "lineno": 1464,
  "symbols_in_volume": [
   "sklearn.datasets.make_multilabel_classification",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_with_method_multilabel_rf_rare_class": {
  "lineno": 1495,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.RandomState",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_predict_with_method_rare_class": {
  "lineno": 1481,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.RandomState",
   "sklearn.linear_model.LogisticRegression",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score": {
  "lineno": 235,
  "symbols_in_volume": [
   "numpy.column_stack",
   "numpy.newaxis",
   "sklearn.model_selection.cross_val_score",
   "sklearn.utils._mocking.CheckingClassifier",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_allow_nans": {
  "lineno": 738,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float64",
   "numpy.nan",
   "numpy.repeat",
   "sklearn.impute.SimpleImputer",
   "sklearn.model_selection.cross_val_score",
   "sklearn.pipeline.Pipeline"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_errors": {
  "lineno": 622,
  "symbols_in_volume": [
   "sklearn.model_selection.cross_val_score",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_errors.BrokenEstimator": {
  "lineno": 623,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_fit_params": {
  "lineno": 574,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.eye",
   "numpy.full",
   "numpy.ones",
   "numpy.unique",
   "scipy.sparse.coo_matrix",
   "sklearn.model_selection.cross_val_score"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_fit_params.assert_fit_params": {
  "lineno": 587,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_mask": {
  "lineno": 529,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.zeros",
   "sklearn.datasets.load_iris",
   "sklearn.model_selection.KFold",
   "sklearn.model_selection.cross_val_score",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_multilabel": {
  "lineno": 750,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.metrics.make_scorer",
   "sklearn.metrics.precision_score",
   "sklearn.model_selection.cross_val_score",
   "sklearn.neighbors.KNeighborsClassifier",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_pandas": {
  "lineno": 510,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pytest.mark.filterwarnings",
   "sklearn.model_selection.cross_val_score",
   "sklearn.utils._mocking.CheckingClassifier",
   "sklearn.utils._mocking.MockDataFrame"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_precomputed": {
  "lineno": 548,
  "symbols_in_volume": [
   "numpy.dot",
   "sklearn.datasets.load_iris",
   "sklearn.model_selection.cross_val_score",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_predict_groups": {
  "lineno": 491,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.GroupKFold",
   "sklearn.model_selection.GroupShuffleSplit",
   "sklearn.model_selection.LeaveOneGroupOut",
   "sklearn.model_selection.LeavePGroupsOut",
   "sklearn.model_selection.cross_val_predict",
   "sklearn.model_selection.cross_val_score",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_score_func": {
  "lineno": 606,
  "symbols_in_volume": [
   "sklearn.metrics.make_scorer",
   "sklearn.model_selection.cross_val_score",
   "sklearn.utils._testing.assert_array_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_score_func.score_func": {
  "lineno": 610,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_sparse_fit_params": {
  "lineno": 975,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.ones",
   "scipy.sparse.coo_matrix",
   "sklearn.datasets.load_iris",
   "sklearn.model_selection.cross_val_score",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_with_score_func_classification": {
  "lineno": 629,
  "symbols_in_volume": [
   "sklearn.datasets.load_iris",
   "sklearn.model_selection.cross_val_score",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_val_score_with_score_func_regression": {
  "lineno": 650,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.datasets.make_regression",
   "sklearn.linear_model.Ridge",
   "sklearn.metrics.explained_variance_score",
   "sklearn.metrics.make_scorer",
   "sklearn.model_selection.cross_val_score",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_validate": {
  "lineno": 356,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.base.clone",
   "sklearn.datasets.make_classification",
   "sklearn.datasets.make_regression",
   "sklearn.linear_model.Ridge",
   "sklearn.metrics.check_scoring",
   "sklearn.model_selection.KFold",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_validate_invalid_scoring_param": {
  "lineno": 286,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification",
   "sklearn.metrics.accuracy_score",
   "sklearn.metrics.confusion_matrix",
   "sklearn.metrics.make_scorer",
   "sklearn.metrics.precision_recall_fscore_support",
   "sklearn.metrics.precision_score",
   "sklearn.model_selection.cross_validate",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_cross_validate_many_jobs": {
  "lineno": 276,
  "symbols_in_volume": [
   "sklearn.datasets.load_iris",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.model_selection.cross_validate",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_fit_and_score_failing": {
  "lineno": 1620,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ones",
   "sklearn.exceptions.FitFailedWarning",
   "sklearn.model_selection._validation._fit_and_score",
   "sklearn.model_selection.cross_val_score",
   "sklearn.model_selection.cross_validate",
   "sklearn.model_selection.learning_curve",
   "sklearn.model_selection.tests.test_search.FailingClassifier",
   "sklearn.model_selection.tests.test_search.FailingClassifier.FAILING_PARAMETER",
   "sklearn.model_selection.validation_curve",
   "sklearn.utils._testing.assert_raise_message",
   "sklearn.utils._testing.assert_warns",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_fit_and_score_verbosity": {
  "lineno": 1690,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.ShuffleSplit",
   "sklearn.model_selection._validation._fit_and_score",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_fit_and_score_working": {
  "lineno": 1672,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.ShuffleSplit",
   "sklearn.model_selection._validation._fit_and_score",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_gridsearchcv_cross_val_predict_with_method": {
  "lineno": 1426,
  "symbols_in_volume": [
   "sklearn.datasets.load_iris",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.utils.shuffle"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve": {
  "lineno": 984,
  "symbols_in_volume": [
   "numpy.linspace",
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.KFold",
   "sklearn.model_selection.learning_curve",
   "sklearn.model_selection.tests.common.OneTimeSplitter",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve_batch_and_incremental_learning_are_equal": {
  "lineno": 1102,
  "symbols_in_volume": [
   "numpy.linspace",
   "pytest.mark.filterwarnings",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model.PassiveAggressiveClassifier",
   "sklearn.model_selection.learning_curve",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve_incremental_learning": {
  "lineno": 1070,
  "symbols_in_volume": [
   "numpy.linspace",
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.learning_curve",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve_incremental_learning_not_possible": {
  "lineno": 1060,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.learning_curve",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve_incremental_learning_unsupervised": {
  "lineno": 1086,
  "symbols_in_volume": [
   "numpy.linspace",
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.learning_curve",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve_n_sample_range_out_of_bounds": {
  "lineno": 1127,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.learning_curve",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve_remove_duplicate_sample_sizes": {
  "lineno": 1144,
  "symbols_in_volume": [
   "numpy.linspace",
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.learning_curve",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve_unsupervised": {
  "lineno": 1027,
  "symbols_in_volume": [
   "numpy.linspace",
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.learning_curve",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve_verbose": {
  "lineno": 1041,
  "symbols_in_volume": [
   "io.StringIO",
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.learning_curve",
   "sys.stdout",
   "sys.stdout.close",
   "sys.stdout.getvalue"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve_with_boolean_indices": {
  "lineno": 1155,
  "symbols_in_volume": [
   "numpy.linspace",
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.KFold",
   "sklearn.model_selection.learning_curve",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_learning_curve_with_shuffle": {
  "lineno": 1171,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linspace",
   "pytest.mark.filterwarnings",
   "sklearn.linear_model.PassiveAggressiveClassifier",
   "sklearn.model_selection.GroupKFold",
   "sklearn.model_selection.learning_curve",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_permutation_score": {
  "lineno": 676,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.mod",
   "numpy.ones",
   "scipy.sparse.coo_matrix",
   "sklearn.datasets.load_iris",
   "sklearn.metrics.make_scorer",
   "sklearn.model_selection.StratifiedKFold",
   "sklearn.model_selection.permutation_test_score",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_permutation_score.custom_score": {
  "lineno": 706,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_permutation_test_score_allow_nans": {
  "lineno": 726,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float64",
   "numpy.nan",
   "numpy.repeat",
   "sklearn.impute.SimpleImputer",
   "sklearn.model_selection.permutation_test_score",
   "sklearn.pipeline.Pipeline"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_permutation_test_score_pandas": {
  "lineno": 1600,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pytest.mark.filterwarnings",
   "sklearn.datasets.load_iris",
   "sklearn.model_selection.permutation_test_score",
   "sklearn.utils._mocking.CheckingClassifier",
   "sklearn.utils._mocking.MockDataFrame"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_score": {
  "lineno": 1712,
  "symbols_in_volume": [
   "sklearn.model_selection._validation._score",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_score.two_params_scorer": {
  "lineno": 1715,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_score_memmap": {
  "lineno": 1573,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.memmap",
   "os.unlink",
   "sklearn.datasets.load_iris",
   "sklearn.model_selection.cross_val_score",
   "sklearn.utils._testing.assert_raises",
   "tempfile.NamedTemporaryFile",
   "time.sleep"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_validation_curve": {
  "lineno": 1207,
  "symbols_in_volume": [
   "numpy.linspace",
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.validation_curve",
   "sklearn.utils._testing.assert_array_almost_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_validation_curve_clone_estimator": {
  "lineno": 1224,
  "symbols_in_volume": [
   "numpy.linspace",
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.validation_curve"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.test_validation_curve_cv_splits_consistency": {
  "lineno": 1236,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.hstack",
   "numpy.vsplit",
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.KFold",
   "sklearn.model_selection.tests.common.OneTimeSplitter",
   "sklearn.model_selection.validation_curve",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.model_selection.tests.test_validation.three_params_scorer": {
  "lineno": 1686,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.multiclass": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.multiclass.OneVsOneClassifier": {
  "lineno": 462,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.multiclass.OneVsOneClassifier.__init__": {
  "lineno": 505,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.multiclass.OneVsOneClassifier._pairwise": {
  "lineno": 655,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.multiclass.OneVsOneClassifier.decision_function": {
  "lineno": 617,
  "symbols_in_volume": [
   "numpy.vstack"
  ],
  "type": "function"
 },
 "sklearn.multiclass.OneVsOneClassifier.fit": {
  "lineno": 509,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.multiclass.OneVsOneClassifier.n_classes_": {
  "lineno": 651,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.multiclass.OneVsOneClassifier.partial_fit": {
  "lineno": 543,
  "symbols_in_volume": [
   "itertools.combinations",
   "joblib.Parallel",
   "joblib.delayed",
   "numpy.setdiff1d",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.multiclass.OneVsOneClassifier.predict": {
  "lineno": 595,
  "symbols_in_volume": [
   "numpy.int"
  ],
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.multiclass.OneVsRestClassifier.__init__": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier._first_estimator": {
  "lineno": 432,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier._pairwise": {
  "lineno": 427,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier.coef_": {
  "lineno": 408,
  "symbols_in_volume": [
   "numpy.vstack",
   "scipy.sparse.issparse",
   "scipy.sparse.vstack"
  ],
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier.decision_function": {
  "lineno": 379,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier.fit": {
  "lineno": 207,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed"
  ],
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier.intercept_": {
  "lineno": 419,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier.multilabel_": {
  "lineno": 399,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier.n_classes_": {
  "lineno": 404,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier.partial_fit": {
  "lineno": 243,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed",
   "numpy.setdiff1d",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier.predict": {
  "lineno": 299,
  "symbols_in_volume": [
   "array.array",
   "numpy.empty",
   "numpy.inf",
   "numpy.maximum",
   "numpy.ones",
   "numpy.where",
   "numpy.zeros",
   "scipy.sparse.csc_matrix"
  ],
  "type": "function"
 },
 "sklearn.multiclass.OneVsRestClassifier.predict_proba": {
  "lineno": 340,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.concatenate",
   "numpy.newaxis",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.multiclass.OutputCodeClassifier": {
  "lineno": 661,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.multiclass.OutputCodeClassifier.__init__": {
  "lineno": 743,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.multiclass.OutputCodeClassifier.fit": {
  "lineno": 750,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed",
   "numpy.array",
   "numpy.int",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.multiclass.OutputCodeClassifier.predict": {
  "lineno": 799,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.multiclass._ConstantPredictor": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.multiclass._ConstantPredictor.decision_function": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.repeat"
  ],
  "type": "function"
 },
 "sklearn.multiclass._ConstantPredictor.fit": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.multiclass._ConstantPredictor.predict": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.repeat"
  ],
  "type": "function"
 },
 "sklearn.multiclass._ConstantPredictor.predict_proba": {
  "lineno": 125,
  "symbols_in_volume": [
   "numpy.hstack",
   "numpy.repeat"
  ],
  "type": "function"
 },
 "sklearn.multiclass._check_estimator": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.multiclass._fit_binary": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.unique",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.multiclass._fit_ovo_binary": {
  "lineno": 437,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.empty",
   "numpy.int",
   "numpy.logical_or"
  ],
  "type": "function"
 },
 "sklearn.multiclass._partial_fit_binary": {
  "lineno": 83,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.multiclass._partial_fit_ovo_binary": {
  "lineno": 450,
  "symbols_in_volume": [
   "numpy.logical_or",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "sklearn.multiclass._predict_binary": {
  "lineno": 89,
  "symbols_in_volume": [
   "numpy.ravel"
  ],
  "type": "function"
 },
 "sklearn.multioutput": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.multioutput.ClassifierChain": {
  "lineno": 534,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.multioutput.ClassifierChain._more_tags": {
  "lineno": 691,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.multioutput.ClassifierChain.decision_function": {
  "lineno": 660,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.empty_like",
   "numpy.hstack",
   "numpy.zeros",
   "scipy.sparse.hstack",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.multioutput.ClassifierChain.fit": {
  "lineno": 611,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.multioutput.ClassifierChain.predict_proba": {
  "lineno": 631,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.empty_like",
   "numpy.hstack",
   "numpy.zeros",
   "scipy.sparse.hstack",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.multioutput.MultiOutputClassifier": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.multioutput.MultiOutputClassifier.__init__": {
  "lineno": 338,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.multioutput.MultiOutputClassifier._more_tags": {
  "lineno": 423,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.multioutput.MultiOutputClassifier._predict_proba": {
  "lineno": 390,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.multioutput.MultiOutputClassifier.fit": {
  "lineno": 341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.multioutput.MultiOutputClassifier.predict_proba": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.multioutput.MultiOutputClassifier.score": {
  "lineno": 395,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.mean"
  ],
  "type": "function"
 },
 "sklearn.multioutput.MultiOutputEstimator": {
  "lineno": 783,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.multioutput.MultiOutputRegressor": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.multioutput.MultiOutputRegressor.__init__": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.multioutput.MultiOutputRegressor.partial_fit": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.multioutput.MultiOutputRegressor.score": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.multioutput.RegressorChain": {
  "lineno": 696,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.multioutput.RegressorChain._more_tags": {
  "lineno": 778,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.multioutput.RegressorChain.fit": {
  "lineno": 761,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.multioutput._BaseChain": {
  "lineno": 428,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.multioutput._BaseChain.__init__": {
  "lineno": 429,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.multioutput._BaseChain.fit": {
  "lineno": 435,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "numpy.array",
   "numpy.expand_dims",
   "numpy.hstack",
   "numpy.zeros",
   "scipy.sparse.hstack",
   "scipy.sparse.issparse",
   "scipy.sparse.lil_matrix"
  ],
  "type": "function"
 },
 "sklearn.multioutput._BaseChain.predict": {
  "lineno": 499,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.empty_like",
   "numpy.hstack",
   "numpy.zeros",
   "scipy.sparse.hstack",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.multioutput._MultiOutputEstimator": {
  "lineno": 63,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.multioutput._MultiOutputEstimator.__init__": {
  "lineno": 65,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.multioutput._MultiOutputEstimator._more_tags": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.multioutput._MultiOutputEstimator.fit": {
  "lineno": 124,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed"
  ],
  "type": "function"
 },
 "sklearn.multioutput._MultiOutputEstimator.partial_fit": {
  "lineno": 70,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed"
  ],
  "type": "function"
 },
 "sklearn.multioutput._MultiOutputEstimator.predict": {
  "lineno": 173,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "sklearn.multioutput._fit_estimator": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.multioutput._partial_fit_estimator": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.naive_bayes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.naive_bayes.BaseDiscreteNB": {
  "lineno": 1232,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.naive_bayes.BaseNB": {
  "lineno": 1225,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.naive_bayes.BernoulliNB": {
  "lineno": 885,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.naive_bayes.BernoulliNB.__init__": {
  "lineno": 963,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.naive_bayes.BernoulliNB._check_X": {
  "lineno": 970,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.naive_bayes.BernoulliNB._check_X_y": {
  "lineno": 976,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.naive_bayes.BernoulliNB._count": {
  "lineno": 982,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.naive_bayes.BernoulliNB._joint_log_likelihood": {
  "lineno": 995,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.log"
  ],
  "type": "function"
 },
 "sklearn.naive_bayes.BernoulliNB._update_feature_log_prob": {
  "lineno": 987,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "sklearn.naive_bayes.CategoricalNB": {
  "lineno": 1012,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.naive_bayes.CategoricalNB.__init__": {
  "lineno": 1074,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.naive_bayes.CategoricalNB._check_X": {
  "lineno": 1149,
  "symbols_in_volume": [
   "numpy.any"
  ],
  "type": "function"
 },
 "sklearn.naive_bayes.CategoricalNB._check_X_y": {
  "lineno": 1159,
  "symbols_in_volume": [
   "numpy.any"
  ],
  "type": "function"
 },
 "sklearn.naive_bayes.CategoricalNB._count": {
  "lineno": 1174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.naive_bayes.CategoricalNB._count._update_cat_count": {
  "lineno": 1182,
  "symbols_in_volume": [
   "numpy.bincount",
   "numpy.int64",
   "numpy.nonzero"
  ],
  "type": "function"
 },
 "sklearn.naive_bayes.CategoricalNB._count._update_cat_count_dims": {
  "lineno": 1175,
  "symbols_in_volume": [
   "numpy.pad"
  ],
  "type": "function"
 },
 "sklearn.naive_bayes.CategoricalNB._init_counters": {
  "lineno": 1169,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.naive_bayes.CategoricalNB._joint_log_likelihood": {
  "lineno": 1212,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.naive_bayes.CategoricalNB._update_feature_log_prob": {
  "lineno": 1202,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "sklearn.naive_bayes.CategoricalNB.fit": {
  "lineno": 1079,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.naive_bayes.CategoricalNB.partial_fit": {
  "lineno": 1105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.naive_bayes.ComplementNB": {
  "lineno": 774,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.naive_bayes.ComplementNB.__init__": {
  "lineno": 848,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.naive_bayes.ComplementNB._count": {
  "lineno": 858,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.naive_bayes.ComplementNB._joint_log_likelihood": {
  "lineno": 877,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.naive_bayes.ComplementNB._more_tags": {
  "lineno": 855,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.naive_bayes.ComplementNB._update_feature_log_prob": {
  "lineno": 865,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "sklearn.naive_bayes.GaussianNB": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.naive_bayes.GaussianNB.__init__": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.naive_bayes.GaussianNB._check_X": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.naive_bayes.GaussianNB._joint_log_likelihood": {
  "lineno": 446,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.log",
   "numpy.pi",
   "numpy.size",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.naive_bayes.GaussianNB._partial_fit": {
  "lineno": 329,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.asarray",
   "numpy.float64",
   "numpy.in1d",
   "numpy.isclose",
   "numpy.unique",
   "numpy.var",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.naive_bayes.GaussianNB._update_mean_variance": {
  "lineno": 213,
  "symbols_in_volume": [
   "numpy.average",
   "numpy.mean",
   "numpy.var"
  ],
  "type": "function"
 },
 "sklearn.naive_bayes.GaussianNB.fit": {
  "lineno": 184,
  "symbols_in_volume": [
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.naive_bayes.GaussianNB.partial_fit": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.naive_bayes.MultinomialNB": {
  "lineno": 663,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.naive_bayes.MultinomialNB.__init__": {
  "lineno": 746,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.naive_bayes.MultinomialNB._count": {
  "lineno": 754,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.naive_bayes.MultinomialNB._joint_log_likelihood": {
  "lineno": 768,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.naive_bayes.MultinomialNB._more_tags": {
  "lineno": 751,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.naive_bayes.MultinomialNB._update_feature_log_prob": {
  "lineno": 760,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "sklearn.naive_bayes._BaseDiscreteNB": {
  "lineno": 462,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.naive_bayes._BaseDiscreteNB._check_X": {
  "lineno": 471,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.naive_bayes._BaseDiscreteNB._check_X_y": {
  "lineno": 474,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.naive_bayes._BaseDiscreteNB._check_alpha": {
  "lineno": 497,
  "symbols_in_volume": [
   "numpy.maximum",
   "numpy.min",
   "numpy.ndarray",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.naive_bayes._BaseDiscreteNB._get_coef": {
  "lineno": 648,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.naive_bayes._BaseDiscreteNB._get_intercept": {
  "lineno": 652,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.naive_bayes._BaseDiscreteNB._init_counters": {
  "lineno": 641,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.naive_bayes._BaseDiscreteNB._more_tags": {
  "lineno": 659,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.naive_bayes._BaseDiscreteNB._update_class_log_prior": {
  "lineno": 477,
  "symbols_in_volume": [
   "numpy.full",
   "numpy.log",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.naive_bayes._BaseDiscreteNB.fit": {
  "lineno": 590,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.atleast_2d",
   "numpy.concatenate",
   "numpy.float64"
  ],
  "type": "function"
 },
 "sklearn.naive_bayes._BaseDiscreteNB.partial_fit": {
  "lineno": 511,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "numpy.concatenate",
   "numpy.float64"
  ],
  "type": "function"
 },
 "sklearn.naive_bayes._BaseNB": {
  "lineno": 40,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.naive_bayes._BaseNB._check_X": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.naive_bayes._BaseNB._joint_log_likelihood": {
  "lineno": 43,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.naive_bayes._BaseNB.predict": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.argmax"
  ],
  "type": "function"
 },
 "sklearn.naive_bayes._BaseNB.predict_log_proba": {
  "lineno": 80,
  "symbols_in_volume": [
   "numpy.atleast_2d"
  ],
  "type": "function"
 },
 "sklearn.naive_bayes._BaseNB.predict_proba": {
  "lineno": 102,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "sklearn.neighbors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.neighbors._base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.neighbors._base.KNeighborsMixin": {
  "lineno": 494,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.neighbors._base.KNeighborsMixin._kneighbors_reduce_func": {
  "lineno": 497,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.argpartition",
   "numpy.argsort",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "sklearn.neighbors._base.KNeighborsMixin.kneighbors": {
  "lineno": 532,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "functools.partial",
   "joblib.Parallel",
   "joblib.__version__",
   "joblib.delayed",
   "joblib.effective_n_jobs",
   "numbers.Integral",
   "numpy.all",
   "numpy.arange",
   "numpy.reshape",
   "numpy.vstack",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.neighbors._base.KNeighborsMixin.kneighbors_graph": {
  "lineno": 706,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ones",
   "numpy.ravel",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "sklearn.neighbors._base.NeighborsBase": {
  "lineno": 289,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.neighbors._base.NeighborsBase.__init__": {
  "lineno": 292,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.neighbors._base.NeighborsBase._check_algorithm_metric": {
  "lineno": 307,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.neighbors._base.NeighborsBase._fit": {
  "lineno": 349,
  "symbols_in_volume": [
   "numbers.Integral",
   "numpy.inf",
   "scipy.sparse.issparse",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.neighbors._base.NeighborsBase._pairwise": {
  "lineno": 479,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._base.RadiusNeighborsMixin": {
  "lineno": 792,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.neighbors._base.RadiusNeighborsMixin._radius_neighbors_reduce_func": {
  "lineno": 795,
  "symbols_in_volume": [
   "numpy.sqrt",
   "numpy.where"
  ],
  "type": "function"
 },
 "sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors": {
  "lineno": 829,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "functools.partial",
   "joblib.Parallel",
   "joblib.__version__",
   "joblib.delayed",
   "joblib.effective_n_jobs",
   "numpy.hstack",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors_graph": {
  "lineno": 1003,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.concatenate",
   "numpy.cumsum",
   "numpy.ones",
   "numpy.zeros",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "sklearn.neighbors._base.SupervisedFloatMixin": {
  "lineno": 1091,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.neighbors._base.SupervisedFloatMixin.fit": {
  "lineno": 1092,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._base.SupervisedIntegerMixin": {
  "lineno": 1111,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.neighbors._base.SupervisedIntegerMixin.fit": {
  "lineno": 1112,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.int",
   "numpy.unique",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.neighbors._base.UnsupervisedMixin": {
  "lineno": 1154,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.neighbors._base.UnsupervisedMixin.fit": {
  "lineno": 1155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._base._check_precomputed": {
  "lineno": 134,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.argsort",
   "numpy.diff",
   "scipy.sparse.issparse",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.neighbors._base._check_weights": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._base._get_weights": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.dtype",
   "numpy.errstate",
   "numpy.isinf"
  ],
  "type": "function"
 },
 "sklearn.neighbors._base._is_sorted_by_data": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.neighbors._base._kneighbors_from_graph": {
  "lineno": 192,
  "symbols_in_volume": [
   "numpy.diff"
  ],
  "type": "function"
 },
 "sklearn.neighbors._base._kneighbors_from_graph.extract": {
  "lineno": 227,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.tile"
  ],
  "type": "function"
 },
 "sklearn.neighbors._base._radius_neighbors_from_graph": {
  "lineno": 242,
  "symbols_in_volume": [
   "numpy.compress",
   "numpy.concatenate",
   "numpy.cumsum",
   "numpy.intp",
   "numpy.split"
  ],
  "type": "function"
 },
 "sklearn.neighbors._base._tree_query_parallel_helper": {
  "lineno": 485,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._base._tree_query_radius_parallel_helper": {
  "lineno": 783,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._classification": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.neighbors._classification.KNeighborsClassifier": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.neighbors._classification.KNeighborsClassifier.__init__": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._classification.KNeighborsClassifier.predict": {
  "lineno": 157,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.empty",
   "numpy.intp",
   "scipy.stats.mode"
  ],
  "type": "function"
 },
 "sklearn.neighbors._classification.KNeighborsClassifier.predict_proba": {
  "lineno": 199,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.newaxis",
   "numpy.ones_like",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.neighbors._classification.RadiusNeighborsClassifier": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.neighbors._classification.RadiusNeighborsClassifier.__init__": {
  "lineno": 377,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._classification.RadiusNeighborsClassifier.fit": {
  "lineno": 390,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.bincount"
  ],
  "type": "function"
 },
 "sklearn.neighbors._classification.RadiusNeighborsClassifier.predict": {
  "lineno": 451,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.flatnonzero"
  ],
  "type": "function"
 },
 "sklearn.neighbors._classification.RadiusNeighborsClassifier.predict_proba": {
  "lineno": 493,
  "symbols_in_volume": [
   "numpy.bincount",
   "numpy.bool",
   "numpy.flatnonzero",
   "numpy.newaxis",
   "numpy.zeros",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.neighbors._graph": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.neighbors._graph.KNeighborsTransformer": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.neighbors._graph.KNeighborsTransformer.__init__": {
  "lineno": 282,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._graph.KNeighborsTransformer.fit_transform": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._graph.KNeighborsTransformer.transform": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._graph.RadiusNeighborsTransformer": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.neighbors._graph.RadiusNeighborsTransformer.__init__": {
  "lineno": 421,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._graph.RadiusNeighborsTransformer.fit_transform": {
  "lineno": 449,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._graph.RadiusNeighborsTransformer.transform": {
  "lineno": 430,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._graph._check_params": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._graph._query_include_self": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._graph.kneighbors_graph": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._graph.radius_neighbors_graph": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._kde": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.neighbors._kde.KernelDensity": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.neighbors._kde.KernelDensity.__init__": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._kde.KernelDensity._choose_algorithm": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._kde.KernelDensity.fit": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._kde.KernelDensity.sample": {
  "lineno": 223,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.atleast_2d",
   "numpy.cumsum",
   "numpy.int64",
   "numpy.newaxis",
   "numpy.searchsorted",
   "numpy.sqrt",
   "scipy.special.gammainc"
  ],
  "type": "function"
 },
 "sklearn.neighbors._kde.KernelDensity.score": {
  "lineno": 202,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.neighbors._kde.KernelDensity.score_samples": {
  "lineno": 171,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "sklearn.neighbors._lof": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.neighbors._lof.LocalOutlierFactor": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.neighbors._lof.LocalOutlierFactor.__init__": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._lof.LocalOutlierFactor._decision_function": {
  "lineno": 377,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._lof.LocalOutlierFactor._fit_predict": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._lof.LocalOutlierFactor._local_reachability_density": {
  "lineno": 482,
  "symbols_in_volume": [
   "numpy.maximum",
   "numpy.mean"
  ],
  "type": "function"
 },
 "sklearn.neighbors._lof.LocalOutlierFactor._predict": {
  "lineno": 311,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "sklearn.neighbors._lof.LocalOutlierFactor._score_samples": {
  "lineno": 442,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.neighbors._lof.LocalOutlierFactor.decision_function": {
  "lineno": 340,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._lof.LocalOutlierFactor.fit": {
  "lineno": 231,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.newaxis",
   "numpy.percentile",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.neighbors._lof.LocalOutlierFactor.fit_predict": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._lof.LocalOutlierFactor.predict": {
  "lineno": 283,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._lof.LocalOutlierFactor.score_samples": {
  "lineno": 405,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._nca": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.neighbors._nca.NeighborhoodComponentsAnalysis": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.neighbors._nca.NeighborhoodComponentsAnalysis.__init__": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._nca.NeighborhoodComponentsAnalysis._callback": {
  "lineno": 441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._nca.NeighborhoodComponentsAnalysis._initialize": {
  "lineno": 375,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.ndarray",
   "numpy.unique",
   "sys.stdout.flush",
   "time.time"
  ],
  "type": "function"
 },
 "sklearn.neighbors._nca.NeighborhoodComponentsAnalysis._loss_grad_lbfgs": {
  "lineno": 454,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.fill_diagonal",
   "numpy.inf",
   "numpy.sum",
   "sys.stdout.flush",
   "time.time"
  ],
  "type": "function"
 },
 "sklearn.neighbors._nca.NeighborhoodComponentsAnalysis._validate_params": {
  "lineno": 266,
  "symbols_in_volume": [
   "numbers.Integral",
   "numbers.Real",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "sklearn.neighbors._nca.NeighborhoodComponentsAnalysis.fit": {
  "lineno": 174,
  "symbols_in_volume": [
   "numpy.newaxis",
   "scipy.optimize.minimize",
   "time.time",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.neighbors._nca.NeighborhoodComponentsAnalysis.transform": {
  "lineno": 242,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "sklearn.neighbors._nearest_centroid": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.neighbors._nearest_centroid.NearestCentroid": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.neighbors._nearest_centroid.NearestCentroid.__init__": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._nearest_centroid.NearestCentroid.fit": {
  "lineno": 89,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.clip",
   "numpy.empty",
   "numpy.float64",
   "numpy.mean",
   "numpy.median",
   "numpy.newaxis",
   "numpy.sign",
   "numpy.sqrt",
   "numpy.sum",
   "numpy.where",
   "numpy.zeros",
   "scipy.sparse.issparse",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.neighbors._nearest_centroid.NearestCentroid.predict": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.neighbors._regression.KNeighborsRegressor": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.neighbors._regression.KNeighborsRegressor.__init__": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._regression.KNeighborsRegressor._pairwise": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._regression.KNeighborsRegressor.predict": {
  "lineno": 158,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.float64",
   "numpy.mean",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.neighbors._regression.RadiusNeighborsRegressor": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.neighbors._regression.RadiusNeighborsRegressor.__init__": {
  "lineno": 310,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors._regression.RadiusNeighborsRegressor.predict": {
  "lineno": 322,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.array",
   "numpy.average",
   "numpy.full_like",
   "numpy.isnan",
   "numpy.mean",
   "numpy.nan",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.neighbors._unsupervised": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.neighbors._unsupervised.NearestNeighbors": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.neighbors._unsupervised.NearestNeighbors.__init__": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors.ball_tree": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.neighbors.ball_tree.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors.base": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.neighbors.base.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors.classification": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.neighbors.classification.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors.dist_metrics": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.neighbors.dist_metrics.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors.graph": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.neighbors.graph.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors.kd_tree": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.neighbors.kd_tree.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors.kde": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.neighbors.kde.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors.lof": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.neighbors.lof.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors.nca": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.neighbors.nca.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors.nearest_centroid": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.neighbors.nearest_centroid.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors.quad_tree": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.neighbors.quad_tree.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors.regression": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.neighbors.regression.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors.setup": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.neighbors.setup.configuration": {
  "lineno": 4,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.Configuration",
   "numpy.get_include",
   "os.name",
   "os.path.join"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.neighbors.tests.test_ball_tree": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.random.RandomState"
  ],
  "type": "module"
 },
 "sklearn.neighbors.tests.test_ball_tree.brute_force_neighbors": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.argsort",
   "sklearn.neighbors.DistanceMetric.get_metric"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_ball_tree.compute_kernel_slow": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.exp",
   "numpy.pi",
   "numpy.sqrt",
   "sklearn.neighbors._ball_tree.kernel_norm"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_ball_tree.dist_func": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde": {
  "lineno": 125,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.neighbors._ball_tree.BallTree",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query_metrics": {
  "lineno": 47,
  "symbols_in_volume": [
   "itertools.chain",
   "numpy.testing.assert_array_almost_equal",
   "pytest.mark.parametrize",
   "sklearn.neighbors._ball_tree.BallTree",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query_radius": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.sqrt",
   "numpy.testing.assert_array_almost_equal",
   "numpy.where",
   "numpy.zeros",
   "sklearn.neighbors._ball_tree.BallTree",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query_radius_distance": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.sqrt",
   "numpy.testing.assert_array_almost_equal",
   "numpy.zeros",
   "sklearn.neighbors._ball_tree.BallTree",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_ball_tree.test_ball_tree_two_point": {
  "lineno": 164,
  "symbols_in_volume": [
   "numpy.linspace",
   "sklearn.neighbors.DistanceMetric.get_metric",
   "sklearn.neighbors._ball_tree.BallTree",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_ball_tree.test_ball_tree_two_point.check_two_point": {
  "lineno": 174,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_ball_tree.test_gaussian_kde": {
  "lineno": 147,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.std",
   "numpy.testing.assert_array_almost_equal",
   "scipy.stats.gaussian_kde",
   "sklearn.neighbors._ball_tree.BallTree",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_ball_tree.test_neighbors_heap": {
  "lineno": 184,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.argsort",
   "numpy.testing.assert_array_almost_equal",
   "sklearn.neighbors._ball_tree.DTYPE",
   "sklearn.neighbors._ball_tree.ITYPE",
   "sklearn.neighbors._ball_tree.NeighborsHeap"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_ball_tree.test_node_heap": {
  "lineno": 203,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.testing.assert_array_almost_equal",
   "sklearn.neighbors._ball_tree.DTYPE",
   "sklearn.neighbors._ball_tree.nodeheap_sort"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_ball_tree.test_query_haversine": {
  "lineno": 233,
  "symbols_in_volume": [
   "numpy.pi",
   "numpy.testing.assert_array_almost_equal",
   "sklearn.neighbors._ball_tree.BallTree",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_ball_tree.test_simultaneous_sort": {
  "lineno": 213,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.argsort",
   "numpy.testing.assert_array_almost_equal",
   "numpy.zeros",
   "sklearn.neighbors._ball_tree.DTYPE",
   "sklearn.neighbors._ball_tree.ITYPE",
   "sklearn.neighbors._ball_tree.simultaneous_sort"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.dot",
   "sklearn.utils.check_random_state"
  ],
  "type": "module"
 },
 "sklearn.neighbors.tests.test_dist_metrics.check_cdist": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "sklearn.neighbors.DistanceMetric.get_metric"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.check_cdist_bool": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "sklearn.neighbors.DistanceMetric.get_metric"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.check_pdist": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "sklearn.neighbors.DistanceMetric.get_metric"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.check_pdist_bool": {
  "lineno": 103,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "numpy.isnan",
   "numpy.testing.assert_array_almost_equal",
   "scipy.__version__",
   "sklearn.neighbors.DistanceMetric.get_metric"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.check_pickle": {
  "lineno": 132,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "pickle.dumps",
   "pickle.loads",
   "sklearn.neighbors.DistanceMetric.get_metric"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.dist_func": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_bad_pyfunc_metric": {
  "lineno": 182,
  "symbols_in_volume": [
   "numpy.ones",
   "sklearn.neighbors.BallTree",
   "sklearn.utils._testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_bad_pyfunc_metric.wrong_distance": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_cdist": {
  "lineno": 53,
  "symbols_in_volume": [
   "itertools.product",
   "pytest.mark.parametrize",
   "scipy.spatial.distance.cdist"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_cdist_bool_metric": {
  "lineno": 63,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "scipy.spatial.distance.cdist"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_haversine_metric": {
  "lineno": 140,
  "symbols_in_volume": [
   "numpy.random.random",
   "numpy.sin",
   "numpy.testing.assert_array_almost_equal",
   "numpy.zeros_like",
   "sklearn.neighbors.DistanceMetric.get_metric"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_haversine_metric.haversine_slow": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.arcsin",
   "numpy.cos",
   "numpy.sin",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_input_data_size": {
  "lineno": 192,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "sklearn.neighbors.DistanceMetric.get_metric",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_input_data_size.custom_metric": {
  "lineno": 195,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_pdist": {
  "lineno": 81,
  "symbols_in_volume": [
   "itertools.product",
   "pytest.mark.parametrize",
   "scipy.spatial.distance.cdist"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_pdist_bool_metrics": {
  "lineno": 91,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "scipy.spatial.distance.cdist"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_pickle": {
  "lineno": 114,
  "symbols_in_volume": [
   "itertools.product",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_pickle_bool_metrics": {
  "lineno": 123,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "pickle.dumps",
   "pickle.loads",
   "pytest.mark.parametrize",
   "sklearn.neighbors.DistanceMetric.get_metric"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_dist_metrics.test_pyfunc_metric": {
  "lineno": 161,
  "symbols_in_volume": [
   "numpy.random.random",
   "numpy.testing.assert_array_almost_equal",
   "pickle.dumps",
   "pickle.loads",
   "sklearn.neighbors.DistanceMetric.get_metric"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_graph": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.neighbors.tests.test_graph._has_explicit_diagonal": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_graph.test_explicit_diagonal": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.random.RandomState",
   "sklearn.neighbors.KNeighborsTransformer"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_graph.test_transformer_result": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.percentile",
   "numpy.random.RandomState",
   "sklearn.metrics.euclidean_distances",
   "sklearn.neighbors.KNeighborsTransformer",
   "sklearn.neighbors.RadiusNeighborsTransformer",
   "sklearn.neighbors._base._is_sorted_by_data"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kd_tree": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.neighbors.tests.test_kd_tree.check_results": {
  "lineno": 80,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kd_tree.compute_kernel_slow": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.exp",
   "numpy.pi",
   "numpy.sqrt",
   "sklearn.neighbors._kd_tree.kernel_norm"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kd_tree.test_gaussian_kde": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.std",
   "numpy.testing.assert_array_almost_equal",
   "scipy.stats.gaussian_kde",
   "sklearn.neighbors._kd_tree.KDTree",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde": {
  "lineno": 88,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.neighbors._kd_tree.KDTree",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query_radius": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.sqrt",
   "numpy.testing.assert_array_almost_equal",
   "numpy.where",
   "numpy.zeros",
   "sklearn.neighbors._kd_tree.KDTree",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query_radius_distance": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.sqrt",
   "numpy.testing.assert_array_almost_equal",
   "numpy.zeros",
   "sklearn.neighbors._kd_tree.KDTree",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kd_tree.test_kd_tree_two_point": {
  "lineno": 125,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_array_almost_equal",
   "pytest.mark.parametrize",
   "sklearn.neighbors.DistanceMetric.get_metric",
   "sklearn.neighbors._kd_tree.KDTree",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kd_tree.test_neighbors_heap": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.argsort",
   "numpy.random.RandomState",
   "numpy.testing.assert_array_almost_equal",
   "sklearn.neighbors._kd_tree.DTYPE",
   "sklearn.neighbors._kd_tree.ITYPE",
   "sklearn.neighbors._kd_tree.NeighborsHeap"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kd_tree.test_node_heap": {
  "lineno": 161,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.random.RandomState",
   "numpy.testing.assert_array_almost_equal",
   "sklearn.neighbors._kd_tree.DTYPE",
   "sklearn.neighbors._kd_tree.nodeheap_sort"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kd_tree.test_simultaneous_sort": {
  "lineno": 172,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.argsort",
   "numpy.random.RandomState",
   "numpy.testing.assert_array_almost_equal",
   "numpy.zeros",
   "sklearn.neighbors._kd_tree.DTYPE",
   "sklearn.neighbors._kd_tree.ITYPE",
   "sklearn.neighbors._kd_tree.simultaneous_sort"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kde": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.neighbors.tests.test_kde.check_results": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.prod",
   "sklearn.neighbors.KernelDensity",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kde.compute_kernel_slow": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.exp",
   "numpy.pi",
   "numpy.sqrt",
   "sklearn.neighbors._ball_tree.kernel_norm"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kde.test_kde_algorithm_metric_choice": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.neighbors.KDTree.valid_metrics",
   "sklearn.neighbors.KernelDensity",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kde.test_kde_badargs": {
  "lineno": 129,
  "symbols_in_volume": [
   "numpy.random.random",
   "sklearn.neighbors.KernelDensity",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kde.test_kde_pipeline_gridsearch": {
  "lineno": 147,
  "symbols_in_volume": [
   "sklearn.datasets.make_blobs",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.neighbors.KernelDensity",
   "sklearn.pipeline.make_pipeline",
   "sklearn.preprocessing.StandardScaler"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kde.test_kde_sample_weights": {
  "lineno": 159,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.full",
   "numpy.int8",
   "numpy.max",
   "numpy.random.RandomState",
   "numpy.repeat",
   "sklearn.neighbors.KDTree.valid_metrics",
   "sklearn.neighbors.KernelDensity",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kde.test_kde_score": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kde.test_kernel_density": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kde.test_kernel_density_sampling": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.random.RandomState",
   "sklearn.neighbors.KernelDensity",
   "sklearn.neighbors.NearestNeighbors",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kde.test_pickling": {
  "lineno": 222,
  "symbols_in_volume": [
   "joblib.dump",
   "joblib.load",
   "numpy.reshape",
   "pytest.mark.parametrize",
   "sklearn.neighbors.KernelDensity",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_kde.test_sample_weight_invalid": {
  "lineno": 207,
  "symbols_in_volume": [
   "numpy.reshape",
   "pytest.raises",
   "sklearn.neighbors.KernelDensity"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.datasets.load_iris",
   "sklearn.utils.check_random_state"
  ],
  "type": "module"
 },
 "sklearn.neighbors.tests.test_lof.test_contamination": {
  "lineno": 148,
  "symbols_in_volume": [
   "sklearn.neighbors.LocalOutlierFactor",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof.test_hasattr_prediction": {
  "lineno": 189,
  "symbols_in_volume": [
   "sklearn.neighbors.LocalOutlierFactor"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof.test_lof": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.min",
   "numpy.testing.assert_array_equal",
   "sklearn.neighbors.LocalOutlierFactor"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof.test_lof_performance": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.r_",
   "sklearn.metrics.roc_auc_score",
   "sklearn.neighbors.LocalOutlierFactor",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof.test_lof_precomputed": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.metrics.pairwise_distances",
   "sklearn.neighbors.LocalOutlierFactor",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof.test_lof_values": {
  "lineno": 75,
  "symbols_in_volume": [
   "math.sqrt",
   "sklearn.neighbors.LocalOutlierFactor",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof.test_n_neighbors_attribute": {
  "lineno": 121,
  "symbols_in_volume": [
   "sklearn.neighbors.LocalOutlierFactor",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof.test_novelty_errors": {
  "lineno": 154,
  "symbols_in_volume": [
   "sklearn.neighbors.LocalOutlierFactor",
   "sklearn.utils._testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof.test_novelty_training_scores": {
  "lineno": 171,
  "symbols_in_volume": [
   "sklearn.neighbors.LocalOutlierFactor",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof.test_novelty_true_common_tests": {
  "lineno": 210,
  "symbols_in_volume": [
   "sklearn.neighbors.LocalOutlierFactor",
   "sklearn.utils.estimator_checks.check_estimator"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof.test_predicted_outlier_number": {
  "lineno": 217,
  "symbols_in_volume": [
   "numpy.sum",
   "sklearn.neighbors.LocalOutlierFactor",
   "sklearn.utils.estimator_checks.check_outlier_corruption"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_lof.test_score_samples": {
  "lineno": 133,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "sklearn.neighbors.LocalOutlierFactor"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.finfo",
   "sklearn.datasets.load_iris",
   "sklearn.utils.check_random_state"
  ],
  "type": "module"
 },
 "sklearn.neighbors.tests.test_nca.test_auto_init": {
  "lineno": 282,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.testing.assert_array_almost_equal",
   "numpy.tile",
   "pytest.mark.parametrize",
   "sklearn.clone",
   "sklearn.neighbors.NeighborhoodComponentsAnalysis"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_callback": {
  "lineno": 464,
  "symbols_in_volume": [
   "sklearn.neighbors.NeighborhoodComponentsAnalysis",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_callback.my_cb": {
  "lineno": 473,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_convergence_warning": {
  "lineno": 515,
  "symbols_in_volume": [
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.neighbors.NeighborhoodComponentsAnalysis",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_expected_transformation_shape": {
  "lineno": 488,
  "symbols_in_volume": [
   "sklearn.neighbors.NeighborhoodComponentsAnalysis"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_expected_transformation_shape.TransformationStorer": {
  "lineno": 493,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.neighbors.tests.test_nca.test_expected_transformation_shape.TransformationStorer.__init__": {
  "lineno": 495,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.newaxis",
   "sklearn.neighbors.NeighborhoodComponentsAnalysis"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_expected_transformation_shape.TransformationStorer.callback": {
  "lineno": 503,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_finite_differences": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.linalg.norm",
   "numpy.newaxis",
   "numpy.random.RandomState",
   "numpy.testing.assert_almost_equal",
   "scipy.optimize.check_grad",
   "sklearn.datasets.make_classification",
   "sklearn.neighbors.NeighborhoodComponentsAnalysis"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_finite_differences.fun": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_finite_differences.grad": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_init_transformation": {
  "lineno": 221,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.datasets.make_blobs",
   "sklearn.neighbors.NeighborhoodComponentsAnalysis",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_n_components": {
  "lineno": 187,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.RandomState",
   "sklearn.neighbors.NeighborhoodComponentsAnalysis",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_no_verbose": {
  "lineno": 408,
  "symbols_in_volume": [
   "sklearn.neighbors.NeighborhoodComponentsAnalysis"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_one_class": {
  "lineno": 453,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "sklearn.neighbors.NeighborhoodComponentsAnalysis"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_parameters_valid_types": {
  "lineno": 523,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.int32",
   "pytest.mark.parametrize",
   "sklearn.neighbors.NeighborhoodComponentsAnalysis"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_params_validation": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.RandomState",
   "sklearn.neighbors.NeighborhoodComponentsAnalysis",
   "sklearn.utils._testing.assert_raise_message",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_simple_example": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "sklearn.metrics.pairwise_distances",
   "sklearn.neighbors.NeighborhoodComponentsAnalysis"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_singleton_class": {
  "lineno": 417,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "numpy.where",
   "sklearn.neighbors.NeighborhoodComponentsAnalysis"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_toy_example_collapse_points": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.newaxis",
   "numpy.random.RandomState",
   "numpy.testing.assert_array_almost_equal",
   "numpy.vstack",
   "sklearn.neighbors.NeighborhoodComponentsAnalysis"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_toy_example_collapse_points.LossStorer": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.neighbors.tests.test_nca.test_toy_example_collapse_points.LossStorer.__init__": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.newaxis",
   "sklearn.neighbors.NeighborhoodComponentsAnalysis"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_toy_example_collapse_points.LossStorer.callback": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_transformation_dimensions": {
  "lineno": 164,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "sklearn.neighbors.NeighborhoodComponentsAnalysis",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_verbose": {
  "lineno": 367,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "re.match",
   "re.split",
   "sklearn.datasets.make_blobs",
   "sklearn.neighbors.NeighborhoodComponentsAnalysis"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_warm_start_effectiveness": {
  "lineno": 337,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.sum",
   "sklearn.neighbors.NeighborhoodComponentsAnalysis"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nca.test_warm_start_validation": {
  "lineno": 318,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification",
   "sklearn.neighbors.NeighborhoodComponentsAnalysis",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nearest_centroid": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "scipy.sparse.csr_matrix",
   "sklearn.datasets.load_iris"
  ],
  "type": "module"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.test_classification_toy": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "sklearn.neighbors.NearestCentroid"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.test_iris": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.mean",
   "sklearn.neighbors.NearestCentroid"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.test_iris_shrinkage": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.mean",
   "sklearn.neighbors.NearestCentroid"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.test_manhattan_metric": {
  "lineno": 140,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "sklearn.neighbors.NearestCentroid"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.test_pickle": {
  "lineno": 82,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "pickle.dumps",
   "pickle.loads",
   "sklearn.neighbors.NearestCentroid"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.test_precomputed": {
  "lineno": 57,
  "symbols_in_volume": [
   "sklearn.neighbors.NearestCentroid",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.test_predict_translated_data": {
  "lineno": 123,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.testing.assert_array_equal",
   "sklearn.neighbors.NearestCentroid"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.test_shrinkage_correct": {
  "lineno": 99,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_almost_equal",
   "sklearn.neighbors.NearestCentroid"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_nearest_centroid.test_shrinkage_threshold_decoded_y": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.testing.assert_array_equal",
   "sklearn.neighbors.NearestCentroid"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors": {
  "lineno": null,
  "symbols_in_volume": [
   "joblib.parallel.BACKENDS.keys",
   "numpy.asarray",
   "numpy.inf",
   "numpy.random.RandomState",
   "scipy.sparse.bsr_matrix",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.dok_matrix",
   "scipy.sparse.lil_matrix",
   "sklearn.datasets.load_digits",
   "sklearn.datasets.load_iris",
   "sklearn.neighbors.kneighbors_graph",
   "sklearn.neighbors.radius_neighbors_graph",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "module"
 },
 "sklearn.neighbors.tests.test_neighbors._weight_func": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.errstate"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.check_object_arrays": {
  "lineno": 1364,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.check_precomputed": {
  "lineno": 139,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.RandomState",
   "sklearn.exceptions.EfficiencyWarning",
   "sklearn.neighbors.NearestNeighbors",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_KNeighborsClassifier_multioutput": {
  "lineno": 735,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.vstack",
   "sklearn.model_selection.train_test_split",
   "sklearn.neighbors.KNeighborsClassifier",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_KNeighborsRegressor_multioutput_uniform_weight": {
  "lineno": 807,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.array",
   "numpy.mean",
   "sklearn.model_selection.train_test_split",
   "sklearn.neighbors.KNeighborsRegressor",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_RadiusNeighborsClassifier_multioutput": {
  "lineno": 676,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.vstack",
   "sklearn.model_selection.train_test_split",
   "sklearn.neighbors.RadiusNeighborsClassifier",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_RadiusNeighborsRegressor_multioutput": {
  "lineno": 932,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.abs",
   "numpy.all",
   "numpy.random.RandomState",
   "numpy.sqrt",
   "numpy.vstack",
   "sklearn.neighbors.RadiusNeighborsRegressor"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_RadiusNeighborsRegressor_multioutput_with_uniform_weight": {
  "lineno": 902,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.array",
   "numpy.mean",
   "sklearn.model_selection.train_test_split",
   "sklearn.neighbors.RadiusNeighborsRegressor",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_callable_metric": {
  "lineno": 1242,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.neighbors.NearestNeighbors",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_callable_metric.custom_metric": {
  "lineno": 1244,
  "symbols_in_volume": [
   "numpy.sqrt",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_check_precomputed": {
  "lineno": 260,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.random.RandomState",
   "scipy.sparse.csr_matrix",
   "sklearn.exceptions.EfficiencyWarning",
   "sklearn.neighbors._base._check_precomputed",
   "sklearn.neighbors._base._is_sorted_by_data",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_dtype_convert": {
  "lineno": 1565,
  "symbols_in_volume": [
   "numpy.eye",
   "sklearn.neighbors.KNeighborsClassifier",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_include_self_neighbors_graph": {
  "lineno": 1478,
  "symbols_in_volume": [
   "sklearn.neighbors.kneighbors_graph",
   "sklearn.neighbors.radius_neighbors_graph",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_is_sorted_by_data": {
  "lineno": 236,
  "symbols_in_volume": [
   "numpy.arange",
   "scipy.sparse.csr_matrix",
   "sklearn.neighbors._base._is_sorted_by_data"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_k_and_radius_neighbors_X_None": {
  "lineno": 1398,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.neighbors.NearestNeighbors",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_k_and_radius_neighbors_duplicates": {
  "lineno": 1430,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "numpy.zeros",
   "sklearn.neighbors.NearestNeighbors",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_k_and_radius_neighbors_train_is_not_query": {
  "lineno": 1369,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.neighbors.NearestNeighbors",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_kneighbors_classifier": {
  "lineno": 358,
  "symbols_in_volume": [
   "numpy.int",
   "numpy.random.RandomState",
   "sklearn.neighbors.KNeighborsClassifier",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_kneighbors_classifier_float_labels": {
  "lineno": 386,
  "symbols_in_volume": [
   "numpy.float",
   "numpy.int",
   "numpy.random.RandomState",
   "sklearn.neighbors.KNeighborsClassifier",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_kneighbors_classifier_predict_proba": {
  "lineno": 401,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.neighbors.KNeighborsClassifier",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_kneighbors_classifier_sparse": {
  "lineno": 712,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.int",
   "numpy.random.RandomState",
   "sklearn.neighbors.KNeighborsClassifier",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_kneighbors_graph": {
  "lineno": 1029,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.eye",
   "sklearn.neighbors.kneighbors_graph",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_kneighbors_graph_sparse": {
  "lineno": 1069,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "scipy.sparse.csr_matrix",
   "sklearn.neighbors.kneighbors_graph",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_kneighbors_regressor": {
  "lineno": 781,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.random.RandomState",
   "numpy.sqrt",
   "sklearn.neighbors.KNeighborsRegressor"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_kneighbors_regressor_multioutput": {
  "lineno": 834,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.abs",
   "numpy.all",
   "numpy.random.RandomState",
   "numpy.sqrt",
   "numpy.vstack",
   "sklearn.neighbors.KNeighborsRegressor"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_kneighbors_regressor_sparse": {
  "lineno": 959,
  "symbols_in_volume": [
   "numpy.int",
   "numpy.mean",
   "numpy.random.RandomState",
   "sklearn.exceptions.EfficiencyWarning",
   "sklearn.metrics.pairwise.pairwise_distances",
   "sklearn.neighbors.KNeighborsRegressor",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_knn_forcing_backend": {
  "lineno": 1546,
  "symbols_in_volume": [
   "joblib.parallel_backend",
   "pytest.mark.parametrize",
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.train_test_split",
   "sklearn.neighbors.KNeighborsClassifier"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_metric_params_interface": {
  "lineno": 1312,
  "symbols_in_volume": [
   "sklearn.neighbors.KNeighborsClassifier",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_n_neighbors_datatype": {
  "lineno": 117,
  "symbols_in_volume": [
   "sklearn.neighbors.NearestNeighbors",
   "sklearn.utils._testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_neighbors_badargs": {
  "lineno": 1125,
  "symbols_in_volume": [
   "numpy.ones",
   "scipy.sparse.csr_matrix",
   "sklearn.neighbors.KNeighborsClassifier",
   "sklearn.neighbors.KNeighborsRegressor",
   "sklearn.neighbors.NearestNeighbors",
   "sklearn.neighbors.RadiusNeighborsClassifier",
   "sklearn.neighbors.RadiusNeighborsRegressor",
   "sklearn.utils._testing.assert_raise_message",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_neighbors_digits": {
  "lineno": 1009,
  "symbols_in_volume": [
   "numpy.arange",
   "sklearn.neighbors.KNeighborsClassifier"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_neighbors_iris": {
  "lineno": 988,
  "symbols_in_volume": [
   "numpy.mean",
   "sklearn.neighbors.KNeighborsClassifier",
   "sklearn.neighbors.KNeighborsRegressor",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_neighbors_metrics": {
  "lineno": 1185,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.inf",
   "sklearn.metrics",
   "sklearn.neighbors.KDTree.valid_metrics",
   "sklearn.neighbors.NearestNeighbors",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_neighbors_regressors_zero_distance": {
  "lineno": 601,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.neighbors.KNeighborsRegressor",
   "sklearn.neighbors.RadiusNeighborsRegressor",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_non_euclidean_kneighbors": {
  "lineno": 1328,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.sort",
   "sklearn.metrics.pairwise.pairwise_distances",
   "sklearn.neighbors.NearestNeighbors",
   "sklearn.neighbors.kneighbors_graph",
   "sklearn.neighbors.radius_neighbors_graph",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_not_fitted_error_gets_raised": {
  "lineno": 132,
  "symbols_in_volume": [
   "sklearn.exceptions.NotFittedError",
   "sklearn.neighbors.NearestNeighbors",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_pairwise_boolean_distance": {
  "lineno": 1605,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.exceptions.DataConversionWarning",
   "sklearn.neighbors.NearestNeighbors",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_pipeline_with_nearest_neighbors_transformer": {
  "lineno": 1637,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.base.clone",
   "sklearn.neighbors.KNeighborsRegressor",
   "sklearn.neighbors.KNeighborsTransformer",
   "sklearn.neighbors.RadiusNeighborsRegressor",
   "sklearn.neighbors.RadiusNeighborsTransformer",
   "sklearn.pipeline.make_pipeline",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_precomputed_cross_validation": {
  "lineno": 302,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.metrics.pairwise.pairwise_distances",
   "sklearn.model_selection.cross_val_score",
   "sklearn.neighbors.KNeighborsClassifier",
   "sklearn.neighbors.KNeighborsRegressor",
   "sklearn.neighbors.RadiusNeighborsClassifier",
   "sklearn.neighbors.RadiusNeighborsRegressor",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_precomputed_dense": {
  "lineno": 190,
  "symbols_in_volume": [
   "sklearn.neighbors.KNeighborsClassifier",
   "sklearn.neighbors.KNeighborsRegressor",
   "sklearn.neighbors.RadiusNeighborsClassifier",
   "sklearn.neighbors.RadiusNeighborsRegressor"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_precomputed_dense.make_train_test": {
  "lineno": 191,
  "symbols_in_volume": [
   "sklearn.metrics.pairwise_distances"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_precomputed_sparse_invalid": {
  "lineno": 278,
  "symbols_in_volume": [
   "numpy.array",
   "scipy.sparse.csr_matrix",
   "sklearn.exceptions.EfficiencyWarning",
   "sklearn.neighbors.NearestNeighbors",
   "sklearn.utils._testing.assert_raises_regex",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_precomputed_sparse_knn": {
  "lineno": 202,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.neighbors.KNeighborsClassifier",
   "sklearn.neighbors.KNeighborsRegressor"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_precomputed_sparse_knn.make_train_test": {
  "lineno": 204,
  "symbols_in_volume": [
   "sklearn.neighbors.NearestNeighbors"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_precomputed_sparse_radius": {
  "lineno": 218,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.neighbors.RadiusNeighborsClassifier",
   "sklearn.neighbors.RadiusNeighborsRegressor"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_precomputed_sparse_radius.make_train_test": {
  "lineno": 220,
  "symbols_in_volume": [
   "sklearn.neighbors.NearestNeighbors"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_predict_sparse_ball_kd_tree": {
  "lineno": 1317,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "scipy.sparse.csr_matrix",
   "sklearn.neighbors.KNeighborsClassifier",
   "sklearn.neighbors.KNeighborsRegressor",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_boundary_handling": {
  "lineno": 633,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.neighbors.NearestNeighbors",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_classifier": {
  "lineno": 433,
  "symbols_in_volume": [
   "numpy.int",
   "numpy.random.RandomState",
   "sklearn.neighbors.RadiusNeighborsClassifier",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_classifier_outlier_labeling": {
  "lineno": 486,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.neighbors.RadiusNeighborsClassifier",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_classifier_outlier_labeling.check_array_exception": {
  "lineno": 520,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_classifier_outlier_labeling.check_dtype_exception": {
  "lineno": 526,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_classifier_outlier_labeling.check_exception": {
  "lineno": 574,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_classifier_outlier_labeling.check_warning": {
  "lineno": 546,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_classifier_when_no_neighbors": {
  "lineno": 460,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.neighbors.RadiusNeighborsClassifier",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_classifier_zero_distance": {
  "lineno": 580,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.neighbors.RadiusNeighborsClassifier",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_graph": {
  "lineno": 1087,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.neighbors.radius_neighbors_graph",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_graph_sparse": {
  "lineno": 1107,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "scipy.sparse.csr_matrix",
   "sklearn.neighbors.radius_neighbors_graph",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_predict_proba": {
  "lineno": 1619,
  "symbols_in_volume": [
   "numpy.where",
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.train_test_split",
   "sklearn.neighbors.RadiusNeighborsClassifier",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_regressor": {
  "lineno": 861,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.full",
   "numpy.isnan",
   "numpy.random.RandomState",
   "numpy.sqrt",
   "sklearn.neighbors.RadiusNeighborsRegressor",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_returns_array_of_objects": {
  "lineno": 652,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "numpy.ones",
   "scipy.sparse.csr_matrix",
   "sklearn.neighbors.NearestNeighbors",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_same_knn_parallel": {
  "lineno": 1493,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.train_test_split",
   "sklearn.neighbors.KNeighborsClassifier",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_same_radius_neighbors_parallel": {
  "lineno": 1519,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.train_test_split",
   "sklearn.neighbors.RadiusNeighborsClassifier",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_sparse_metric_callable": {
  "lineno": 1575,
  "symbols_in_volume": [
   "numpy.array",
   "scipy.sparse.csr_matrix",
   "sklearn.neighbors.NearestNeighbors",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_sparse_metric_callable.sparse_metric": {
  "lineno": 1576,
  "symbols_in_volume": [
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_unsupervised_inputs": {
  "lineno": 98,
  "symbols_in_volume": [
   "sklearn.neighbors.BallTree",
   "sklearn.neighbors.KDTree",
   "sklearn.neighbors.NearestNeighbors",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_unsupervised_kneighbors": {
  "lineno": 71,
  "symbols_in_volume": [
   "sklearn.neighbors.NearestNeighbors",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_unsupervised_radius_neighbors": {
  "lineno": 317,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.random.RandomState",
   "sklearn.neighbors.NearestNeighbors",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors.test_valid_brute_metric_for_auto_algorithm": {
  "lineno": 1262,
  "symbols_in_volume": [
   "numpy.dot",
   "scipy.sparse.csr_matrix",
   "sklearn.metrics.pairwise_distances",
   "sklearn.neighbors.NearestNeighbors",
   "sklearn.neighbors.VALID_METRICS",
   "sklearn.neighbors.VALID_METRICS_SPARSE"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors_pipeline": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.neighbors.tests.test_neighbors_pipeline.test_dbscan": {
  "lineno": 71,
  "symbols_in_volume": [
   "sklearn.cluster.DBSCAN",
   "sklearn.cluster.tests.common.generate_clustered_data",
   "sklearn.neighbors.RadiusNeighborsTransformer",
   "sklearn.pipeline.make_pipeline",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors_pipeline.test_isomap": {
  "lineno": 88,
  "symbols_in_volume": [
   "sklearn.datasets.make_blobs",
   "sklearn.manifold.Isomap",
   "sklearn.neighbors.KNeighborsTransformer",
   "sklearn.pipeline.make_pipeline",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors_pipeline.test_kneighbors_regressor": {
  "lineno": 180,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.base.clone",
   "sklearn.neighbors.KNeighborsRegressor",
   "sklearn.neighbors.KNeighborsTransformer",
   "sklearn.neighbors.RadiusNeighborsRegressor",
   "sklearn.neighbors.RadiusNeighborsTransformer",
   "sklearn.pipeline.make_pipeline",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors_pipeline.test_lof_novelty_false": {
  "lineno": 139,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.neighbors.KNeighborsTransformer",
   "sklearn.neighbors.LocalOutlierFactor",
   "sklearn.pipeline.make_pipeline",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors_pipeline.test_lof_novelty_true": {
  "lineno": 159,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.neighbors.KNeighborsTransformer",
   "sklearn.neighbors.LocalOutlierFactor",
   "sklearn.pipeline.make_pipeline",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors_pipeline.test_spectral_clustering": {
  "lineno": 29,
  "symbols_in_volume": [
   "sklearn.cluster.SpectralClustering",
   "sklearn.datasets.make_blobs",
   "sklearn.neighbors.KNeighborsTransformer",
   "sklearn.pipeline.make_pipeline",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors_pipeline.test_spectral_embedding": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.datasets.make_blobs",
   "sklearn.manifold.SpectralEmbedding",
   "sklearn.neighbors.KNeighborsTransformer",
   "sklearn.pipeline.make_pipeline",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors_pipeline.test_tsne": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.manifold.TSNE",
   "sklearn.neighbors.KNeighborsTransformer",
   "sklearn.pipeline.make_pipeline",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors_tree": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.random.RandomState"
  ],
  "type": "module"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.brute_force_neighbors": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.argsort",
   "sklearn.neighbors.DistanceMetric.get_metric"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.dist_func": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.test_nn_tree_query": {
  "lineno": 45,
  "symbols_in_volume": [
   "itertools.chain",
   "numpy.testing.assert_array_almost_equal",
   "pytest.mark.parametrize",
   "sklearn.neighbors._ball_tree.BallTree",
   "sklearn.neighbors._kd_tree.KDTree",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_neighbors_tree.test_pickle": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "pickle.dumps",
   "pickle.loads",
   "pytest.mark.parametrize",
   "sklearn.neighbors._ball_tree.BallTree",
   "sklearn.neighbors._kd_tree.KDTree",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_quad_tree": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.neighbors.tests.test_quad_tree.test_qt_insert_duplicate": {
  "lineno": 83,
  "symbols_in_volume": [
   "numpy.r_",
   "pytest.mark.parametrize",
   "sklearn.neighbors._quad_tree._QuadTree",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_quad_tree.test_quad_tree_pickle": {
  "lineno": 64,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "pytest.mark.parametrize",
   "sklearn.neighbors._quad_tree._QuadTree",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_quad_tree.test_quadtree_boundary_computation": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "sklearn.neighbors._quad_tree._QuadTree"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_quad_tree.test_quadtree_similar_point": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "sklearn.neighbors._quad_tree._QuadTree"
  ],
  "type": "function"
 },
 "sklearn.neighbors.tests.test_quad_tree.test_summarize": {
  "lineno": 103,
  "symbols_in_volume": [
   "sklearn.neighbors._quad_tree._QuadTree.test_summarize"
  ],
  "type": "function"
 },
 "sklearn.neighbors.typedefs": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.neighbors.typedefs.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neighbors.unsupervised": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.neighbors.unsupervised.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.neural_network._base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.neural_network._base.binary_log_loss": {
  "lineno": 224,
  "symbols_in_volume": [
   "scipy.special.xlogy"
  ],
  "type": "function"
 },
 "sklearn.neural_network._base.identity": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network._base.inplace_identity_derivative": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network._base.inplace_logistic_derivative": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network._base.inplace_relu_derivative": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network._base.inplace_tanh_derivative": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network._base.log_loss": {
  "lineno": 198,
  "symbols_in_volume": [
   "numpy.append",
   "scipy.special.xlogy"
  ],
  "type": "function"
 },
 "sklearn.neural_network._base.logistic": {
  "lineno": 30,
  "symbols_in_volume": [
   "scipy.special.expit"
  ],
  "type": "function"
 },
 "sklearn.neural_network._base.relu": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.clip",
   "numpy.finfo"
  ],
  "type": "function"
 },
 "sklearn.neural_network._base.softmax": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.neural_network._base.squared_loss": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network._base.tanh": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.tanh"
  ],
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron": {
  "lineno": 41,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron.__init__": {
  "lineno": 50,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron._backprop": {
  "lineno": 181,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron._compute_loss_grad": {
  "lineno": 117,
  "symbols_in_volume": [
   "numpy.mean"
  ],
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron._fit": {
  "lineno": 312,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.array",
   "numpy.clip",
   "numpy.empty",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron._fit_lbfgs": {
  "lineno": 430,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron._fit_stochastic": {
  "lineno": 474,
  "symbols_in_volume": [
   "numpy.clip",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron._forward_pass": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron._init_coef": {
  "lineno": 297,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron._initialize": {
  "lineno": 258,
  "symbols_in_volume": [
   "numpy.inf"
  ],
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron._loss_grad_lbfgs": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron._partial_fit": {
  "lineno": 651,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron._predict": {
  "lineno": 654,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron._unpack": {
  "lineno": 82,
  "symbols_in_volume": [
   "numpy.reshape"
  ],
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron._update_no_improvement_count": {
  "lineno": 580,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron._validate_hyperparameters": {
  "lineno": 378,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron.fit": {
  "lineno": 611,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.BaseMultilayerPerceptron.partial_fit": {
  "lineno": 629,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.MLPClassifier": {
  "lineno": 691,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.neural_network._multilayer_perceptron.MLPClassifier.__init__": {
  "lineno": 907,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.MLPClassifier._partial_fit": {
  "lineno": 1027,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.MLPClassifier._validate_input": {
  "lineno": 930,
  "symbols_in_volume": [
   "numpy.setdiff1d"
  ],
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.MLPClassifier.fit": {
  "lineno": 978,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.MLPClassifier.partial_fit": {
  "lineno": 997,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.MLPClassifier.predict": {
  "lineno": 957,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.MLPClassifier.predict_log_proba": {
  "lineno": 1039,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.MLPClassifier.predict_proba": {
  "lineno": 1057,
  "symbols_in_volume": [
   "numpy.vstack"
  ],
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.MLPRegressor": {
  "lineno": 1083,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.neural_network._multilayer_perceptron.MLPRegressor.__init__": {
  "lineno": 1295,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.MLPRegressor._validate_input": {
  "lineno": 1338,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron.MLPRegressor.predict": {
  "lineno": 1319,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network._multilayer_perceptron._pack": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.hstack"
  ],
  "type": "function"
 },
 "sklearn.neural_network._rbm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.neural_network._rbm.BernoulliRBM": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.neural_network._rbm.BernoulliRBM.__init__": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network._rbm.BernoulliRBM._fit": {
  "lineno": 258,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.dot",
   "numpy.floor"
  ],
  "type": "function"
 },
 "sklearn.neural_network._rbm.BernoulliRBM._free_energy": {
  "lineno": 186,
  "symbols_in_volume": [
   "numpy.logaddexp"
  ],
  "type": "function"
 },
 "sklearn.neural_network._rbm.BernoulliRBM._mean_hiddens": {
  "lineno": 129,
  "symbols_in_volume": [
   "scipy.special.expit"
  ],
  "type": "function"
 },
 "sklearn.neural_network._rbm.BernoulliRBM._sample_hiddens": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network._rbm.BernoulliRBM._sample_visibles": {
  "lineno": 165,
  "symbols_in_volume": [
   "numpy.dot",
   "scipy.special.expit"
  ],
  "type": "function"
 },
 "sklearn.neural_network._rbm.BernoulliRBM.fit": {
  "lineno": 326,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ceil",
   "numpy.float64",
   "numpy.zeros",
   "time.time"
  ],
  "type": "function"
 },
 "sklearn.neural_network._rbm.BernoulliRBM.gibbs": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network._rbm.BernoulliRBM.partial_fit": {
  "lineno": 224,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.float64",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.neural_network._rbm.BernoulliRBM.score_samples": {
  "lineno": 288,
  "symbols_in_volume": [
   "numpy.arange",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.neural_network._rbm.BernoulliRBM.transform": {
  "lineno": 111,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "sklearn.neural_network._stochastic_optimizers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.neural_network._stochastic_optimizers.AdamOptimizer": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.neural_network._stochastic_optimizers.AdamOptimizer.__init__": {
  "lineno": 231,
  "symbols_in_volume": [
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "sklearn.neural_network._stochastic_optimizers.AdamOptimizer._get_updates": {
  "lineno": 242,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "sklearn.neural_network._stochastic_optimizers.BaseOptimizer": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.neural_network._stochastic_optimizers.BaseOptimizer.__init__": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network._stochastic_optimizers.BaseOptimizer.iteration_ends": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network._stochastic_optimizers.BaseOptimizer.trigger_stopping": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network._stochastic_optimizers.BaseOptimizer.update_params": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network._stochastic_optimizers.SGDOptimizer": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.neural_network._stochastic_optimizers.SGDOptimizer.__init__": {
  "lineno": 118,
  "symbols_in_volume": [
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "sklearn.neural_network._stochastic_optimizers.SGDOptimizer._get_updates": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network._stochastic_optimizers.SGDOptimizer.iteration_ends": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network._stochastic_optimizers.SGDOptimizer.trigger_stopping": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network.multilayer_perceptron": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.neural_network.multilayer_perceptron.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network.rbm": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.neural_network.rbm.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.neural_network.tests.test_mlp": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.datasets.load_boston",
   "sklearn.datasets.load_digits",
   "sklearn.datasets.load_iris",
   "sklearn.preprocessing.MinMaxScaler",
   "sklearn.preprocessing.StandardScaler"
  ],
  "type": "module"
 },
 "sklearn.neural_network.tests.test_mlp.test_adaptive_learning_rate": {
  "lineno": 629,
  "symbols_in_volume": [
   "sklearn.neural_network.MLPClassifier"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_alpha": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.arange",
   "numpy.array",
   "numpy.sum",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.neural_network.MLPClassifier",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_early_stopping": {
  "lineno": 613,
  "symbols_in_volume": [
   "sklearn.neural_network.MLPClassifier"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_early_stopping_stratified": {
  "lineno": 710,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.neural_network.MLPClassifier"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_fit": {
  "lineno": 78,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "numpy.testing.assert_almost_equal",
   "numpy.zeros_like",
   "sklearn.neural_network.MLPClassifier"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_gradient": {
  "lineno": 169,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.empty",
   "numpy.eye",
   "numpy.hstack",
   "numpy.mod",
   "numpy.random.RandomState",
   "numpy.size",
   "numpy.testing.assert_almost_equal",
   "numpy.zeros",
   "sklearn.neural_network.MLPClassifier",
   "sklearn.preprocessing.LabelBinarizer"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_gradient.loss_grad_fun": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_lbfgs_classification": {
  "lineno": 232,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.neural_network.MLPClassifier"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_lbfgs_classification_maxfun": {
  "lineno": 268,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.warns",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.neural_network.MLPClassifier"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_lbfgs_regression": {
  "lineno": 253,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.neural_network.MLPRegressor"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_lbfgs_regression_maxfun": {
  "lineno": 283,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pytest.warns",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.neural_network.MLPRegressor"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_learning_rate_warmstart": {
  "lineno": 302,
  "symbols_in_volume": [
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.neural_network.MLPClassifier",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_multilabel_classification": {
  "lineno": 323,
  "symbols_in_volume": [
   "sklearn.datasets.make_multilabel_classification",
   "sklearn.neural_network.MLPClassifier"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_multioutput_regression": {
  "lineno": 348,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "sklearn.datasets.make_regression",
   "sklearn.neural_network.MLPRegressor"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_n_iter_no_change": {
  "lineno": 666,
  "symbols_in_volume": [
   "sklearn.neural_network.MLPClassifier"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_n_iter_no_change_inf": {
  "lineno": 685,
  "symbols_in_volume": [
   "numpy.inf",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.neural_network.MLPClassifier",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_params_errors": {
  "lineno": 440,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.neural_network.MLPClassifier"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_partial_fit_classes_error": {
  "lineno": 358,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.neural_network.MLPClassifier"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_partial_fit_classification": {
  "lineno": 368,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "numpy.unique",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.neural_network.MLPClassifier",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_partial_fit_errors": {
  "lineno": 427,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.neural_network.MLPClassifier"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_partial_fit_regression": {
  "lineno": 401,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "sklearn.neural_network.MLPRegressor",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_partial_fit_unseen_classes": {
  "lineno": 390,
  "symbols_in_volume": [
   "sklearn.neural_network.MLPClassifier"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_predict_proba_binary": {
  "lineno": 473,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.testing.assert_array_equal",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.metrics.roc_auc_score",
   "sklearn.neural_network.MLPClassifier",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_predict_proba_multiclass": {
  "lineno": 497,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.testing.assert_array_equal",
   "numpy.unique",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.neural_network.MLPClassifier",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_predict_proba_multilabel": {
  "lineno": 518,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.testing.assert_array_equal",
   "sklearn.datasets.make_multilabel_classification",
   "sklearn.neural_network.MLPClassifier"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_shuffle": {
  "lineno": 542,
  "symbols_in_volume": [
   "numpy.array_equal",
   "sklearn.datasets.make_regression",
   "sklearn.neural_network.MLPRegressor"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_sparse_matrices": {
  "lineno": 569,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_array_equal",
   "scipy.sparse.csr_matrix",
   "sklearn.neural_network.MLPClassifier"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_tolerance": {
  "lineno": 586,
  "symbols_in_volume": [
   "sklearn.neural_network.MLPClassifier"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_verbose_sgd": {
  "lineno": 596,
  "symbols_in_volume": [
   "io.StringIO",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.neural_network.MLPClassifier",
   "sklearn.utils._testing.ignore_warnings",
   "sys.stdout"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_mlp.test_warm_start": {
  "lineno": 639,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.unique",
   "pytest.raises",
   "re.escape",
   "sklearn.neural_network.MLPClassifier",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.datasets.load_digits"
  ],
  "type": "module"
 },
 "sklearn.neural_network.tests.test_rbm.test_fit": {
  "lineno": 18,
  "symbols_in_volume": [
   "sklearn.neural_network.BernoulliRBM",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_fit_gibbs": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.RandomState",
   "sklearn.neural_network.BernoulliRBM",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_fit_gibbs_sparse": {
  "lineno": 111,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.RandomState",
   "scipy.sparse.csc_matrix",
   "sklearn.neural_network.BernoulliRBM",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_gibbs_smoke": {
  "lineno": 127,
  "symbols_in_volume": [
   "numpy.all",
   "sklearn.neural_network.BernoulliRBM",
   "sklearn.utils.validation.assert_all_finite"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_partial_fit": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.array_split",
   "numpy.ceil",
   "sklearn.neural_network.BernoulliRBM",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_rbm_verbose": {
  "lineno": 165,
  "symbols_in_volume": [
   "io.StringIO",
   "sklearn.neural_network.BernoulliRBM",
   "sys.stdout"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_sample_hiddens": {
  "lineno": 83,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.random.RandomState",
   "sklearn.neural_network.BernoulliRBM",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_score_samples": {
  "lineno": 140,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.errstate",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.vstack",
   "numpy.zeros",
   "scipy.sparse.lil_matrix",
   "sklearn.neural_network.BernoulliRBM",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_small_sparse": {
  "lineno": 59,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "sklearn.neural_network.BernoulliRBM"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_small_sparse_partial_fit": {
  "lineno": 65,
  "symbols_in_volume": [
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.neural_network.BernoulliRBM",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_sparse_and_verbose": {
  "lineno": 175,
  "symbols_in_volume": [
   "io.StringIO",
   "re.match",
   "scipy.sparse.csc_matrix",
   "sklearn.neural_network.BernoulliRBM",
   "sys.stdout",
   "sys.stdout.getvalue"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_rbm.test_transform": {
  "lineno": 47,
  "symbols_in_volume": [
   "sklearn.neural_network.BernoulliRBM",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers.test_adam_optimizer": {
  "lineno": 80,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.random",
   "numpy.sqrt",
   "numpy.zeros",
   "sklearn.neural_network._stochastic_optimizers.AdamOptimizer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers.test_base_optimizer": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.zeros",
   "sklearn.neural_network._stochastic_optimizers.BaseOptimizer"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers.test_sgd_optimizer_momentum": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.random",
   "numpy.zeros",
   "sklearn.neural_network._stochastic_optimizers.SGDOptimizer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers.test_sgd_optimizer_nesterovs_momentum": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.random",
   "numpy.zeros",
   "sklearn.neural_network._stochastic_optimizers.SGDOptimizer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers.test_sgd_optimizer_no_momentum": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.random.random",
   "numpy.zeros",
   "sklearn.neural_network._stochastic_optimizers.SGDOptimizer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.neural_network.tests.test_stochastic_optimizers.test_sgd_optimizer_trigger_stopping": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.zeros",
   "sklearn.neural_network._stochastic_optimizers.SGDOptimizer"
  ],
  "type": "function"
 },
 "sklearn.pipeline": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.pipeline.FeatureUnion": {
  "lineno": 751,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.pipeline.FeatureUnion.__init__": {
  "lineno": 808,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion._iter": {
  "lineno": 867,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion._log_message": {
  "lineno": 950,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion._parallel_func": {
  "lineno": 955,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed"
  ],
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion._update_transformer_list": {
  "lineno": 994,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion._validate_transformers": {
  "lineno": 844,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion.fit": {
  "lineno": 895,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion.fit_transform": {
  "lineno": 919,
  "symbols_in_volume": [
   "numpy.hstack",
   "numpy.zeros",
   "scipy.sparse.hstack",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion.get_feature_names": {
  "lineno": 877,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion.get_params": {
  "lineno": 816,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion.set_params": {
  "lineno": 832,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.FeatureUnion.transform": {
  "lineno": 968,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed",
   "numpy.hstack",
   "numpy.zeros",
   "scipy.sparse.hstack",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.pipeline.Pipeline": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.pipeline.Pipeline.__getitem__": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.__init__": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.__len__": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.Pipeline._estimator_type": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.Pipeline._final_estimator": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.Pipeline._fit": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.Pipeline._inverse_transform": {
  "lineno": 584,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.Pipeline._iter": {
  "lineno": 194,
  "symbols_in_volume": [
   "itertools.islice"
  ],
  "type": "function"
 },
 "sklearn.pipeline.Pipeline._log_message": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.Pipeline._pairwise": {
  "lineno": 625,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.Pipeline._transform": {
  "lineno": 554,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.Pipeline._validate_steps": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.classes_": {
  "lineno": 621,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.decision_function": {
  "lineno": 474,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.fit": {
  "lineno": 324,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.fit_predict": {
  "lineno": 422,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.fit_transform": {
  "lineno": 357,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.get_params": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.inverse_transform": {
  "lineno": 560,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.named_steps": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.predict": {
  "lineno": 395,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.predict_log_proba": {
  "lineno": 512,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.predict_proba": {
  "lineno": 455,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.score": {
  "lineno": 591,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.score_samples": {
  "lineno": 493,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.set_params": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.Pipeline.transform": {
  "lineno": 531,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline._fit_one": {
  "lineno": 737,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline._fit_transform_one": {
  "lineno": 714,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline._name_estimators": {
  "lineno": 631,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "sklearn.pipeline._transform_one": {
  "lineno": 706,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.make_pipeline": {
  "lineno": 656,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.pipeline.make_union": {
  "lineno": 1001,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.preprocessing._data": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.preprocessing._data.Binarizer": {
  "lineno": 1880,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.preprocessing._data.Binarizer.__init__": {
  "lineno": 1934,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.Binarizer._more_tags": {
  "lineno": 1967,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.Binarizer.fit": {
  "lineno": 1938,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.Binarizer.transform": {
  "lineno": 1951,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.KernelCenterer": {
  "lineno": 1971,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.preprocessing._data.KernelCenterer.__init__": {
  "lineno": 2011,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.KernelCenterer._pairwise": {
  "lineno": 2068,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.KernelCenterer.fit": {
  "lineno": 2015,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.KernelCenterer.transform": {
  "lineno": 2040,
  "symbols_in_volume": [
   "numpy.newaxis",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.MaxAbsScaler": {
  "lineno": 855,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.preprocessing._data.MaxAbsScaler.__init__": {
  "lineno": 916,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.MaxAbsScaler._more_tags": {
  "lineno": 1028,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.MaxAbsScaler._reset": {
  "lineno": 919,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.MaxAbsScaler.fit": {
  "lineno": 932,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.MaxAbsScaler.inverse_transform": {
  "lineno": 1009,
  "symbols_in_volume": [
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.MaxAbsScaler.partial_fit": {
  "lineno": 946,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.maximum",
   "numpy.nanmax",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.MaxAbsScaler.transform": {
  "lineno": 990,
  "symbols_in_volume": [
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.MinMaxScaler": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.preprocessing._data.MinMaxScaler.__init__": {
  "lineno": 299,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.MinMaxScaler._more_tags": {
  "lineno": 440,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.MinMaxScaler._reset": {
  "lineno": 303,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.MinMaxScaler.fit": {
  "lineno": 319,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.MinMaxScaler.inverse_transform": {
  "lineno": 418,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.MinMaxScaler.partial_fit": {
  "lineno": 341,
  "symbols_in_volume": [
   "numpy.maximum",
   "numpy.minimum",
   "numpy.nanmax",
   "numpy.nanmin",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.MinMaxScaler.transform": {
  "lineno": 396,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.Normalizer": {
  "lineno": 1742,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.preprocessing._data.Normalizer.__init__": {
  "lineno": 1800,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.Normalizer._more_tags": {
  "lineno": 1832,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.Normalizer.fit": {
  "lineno": 1804,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.Normalizer.transform": {
  "lineno": 1817,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.PolynomialFeatures": {
  "lineno": 1369,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.preprocessing._data.PolynomialFeatures.__init__": {
  "lineno": 1440,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.PolynomialFeatures._combinations": {
  "lineno": 1447,
  "symbols_in_volume": [
   "itertools.chain.from_iterable",
   "itertools.combinations",
   "itertools.combinations_with_replacement"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.PolynomialFeatures.fit": {
  "lineno": 1494,
  "symbols_in_volume": [
   "itertools.combinations"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.PolynomialFeatures.get_feature_names": {
  "lineno": 1464,
  "symbols_in_volume": [
   "numpy.where"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.PolynomialFeatures.powers_": {
  "lineno": 1454,
  "symbols_in_volume": [
   "itertools.combinations",
   "numpy.bincount",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.PolynomialFeatures.transform": {
  "lineno": 1516,
  "symbols_in_volume": [
   "itertools.combinations",
   "numpy.empty",
   "numpy.multiply",
   "numpy.ones",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.hstack",
   "scipy.sparse.isspmatrix",
   "scipy.sparse.isspmatrix_csc",
   "scipy.sparse.isspmatrix_csr"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.PowerTransformer": {
  "lineno": 2688,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.preprocessing._data.PowerTransformer.__init__": {
  "lineno": 2771,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.PowerTransformer._box_cox_inverse_tranform": {
  "lineno": 2902,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.PowerTransformer._box_cox_optimize": {
  "lineno": 2957,
  "symbols_in_volume": [
   "numpy.isnan",
   "scipy.stats.boxcox"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.PowerTransformer._check_input": {
  "lineno": 2993,
  "symbols_in_volume": [
   "numpy.nanmin",
   "numpy.warnings.catch_warnings",
   "numpy.warnings.filterwarnings"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.PowerTransformer._fit": {
  "lineno": 2799,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "scipy.special.boxcox"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.PowerTransformer._more_tags": {
  "lineno": 3035,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.PowerTransformer._yeo_johnson_inverse_transform": {
  "lineno": 2913,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.power",
   "numpy.spacing",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.PowerTransformer._yeo_johnson_optimize": {
  "lineno": 2969,
  "symbols_in_volume": [
   "numpy.isnan",
   "scipy.optimize.brent"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.PowerTransformer._yeo_johnson_optimize._neg_log_likelihood": {
  "lineno": 2976,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.log",
   "numpy.log1p",
   "numpy.sign"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.PowerTransformer._yeo_johnson_transform": {
  "lineno": 2935,
  "symbols_in_volume": [
   "numpy.log1p",
   "numpy.power",
   "numpy.spacing",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.PowerTransformer.fit": {
  "lineno": 2776,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.PowerTransformer.fit_transform": {
  "lineno": 2796,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.PowerTransformer.inverse_transform": {
  "lineno": 2856,
  "symbols_in_volume": [
   "numpy.errstate"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.PowerTransformer.transform": {
  "lineno": 2828,
  "symbols_in_volume": [
   "numpy.errstate",
   "scipy.special.boxcox"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.QuantileTransformer": {
  "lineno": 2132,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.preprocessing._data.QuantileTransformer.__init__": {
  "lineno": 2231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.QuantileTransformer._check_inputs": {
  "lineno": 2441,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.errstate",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.QuantileTransformer._check_is_fitted": {
  "lineno": 2462,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.QuantileTransformer._dense_fit": {
  "lineno": 2241,
  "symbols_in_volume": [
   "numpy.maximum.accumulate",
   "numpy.nanpercentile",
   "numpy.transpose",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.QuantileTransformer._more_tags": {
  "lineno": 2547,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.QuantileTransformer._sparse_fit": {
  "lineno": 2271,
  "symbols_in_volume": [
   "numpy.maximum.accumulate",
   "numpy.nanpercentile",
   "numpy.transpose",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.QuantileTransformer._transform": {
  "lineno": 2472,
  "symbols_in_volume": [
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.QuantileTransformer._transform_col": {
  "lineno": 2372,
  "symbols_in_volume": [
   "numpy.clip",
   "numpy.errstate",
   "numpy.interp",
   "numpy.isnan",
   "numpy.spacing",
   "scipy.stats.norm.cdf",
   "scipy.stats.norm.ppf"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.QuantileTransformer.fit": {
  "lineno": 2319,
  "symbols_in_volume": [
   "numpy.linspace",
   "scipy.sparse.issparse",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.QuantileTransformer.inverse_transform": {
  "lineno": 2526,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.QuantileTransformer.transform": {
  "lineno": 2505,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.RobustScaler": {
  "lineno": 1091,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.preprocessing._data.RobustScaler.__init__": {
  "lineno": 1181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.RobustScaler._more_tags": {
  "lineno": 1285,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.RobustScaler.fit": {
  "lineno": 1188,
  "symbols_in_volume": [
   "numpy.nanmedian",
   "numpy.nanpercentile",
   "numpy.transpose",
   "numpy.zeros",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.RobustScaler.inverse_transform": {
  "lineno": 1262,
  "symbols_in_volume": [
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.RobustScaler.transform": {
  "lineno": 1239,
  "symbols_in_volume": [
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.StandardScaler": {
  "lineno": 520,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.preprocessing._data.StandardScaler.__init__": {
  "lineno": 635,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.StandardScaler._more_tags": {
  "lineno": 851,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.StandardScaler._reset": {
  "lineno": 640,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.StandardScaler.fit": {
  "lineno": 654,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.StandardScaler.inverse_transform": {
  "lineno": 811,
  "symbols_in_volume": [
   "numpy.asarray",
   "scipy.sparse.issparse",
   "scipy.sparse.isspmatrix_csr"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.StandardScaler.partial_fit": {
  "lineno": 671,
  "symbols_in_volume": [
   "numbers.Integral",
   "numpy.int64",
   "numpy.isnan",
   "numpy.ptp",
   "numpy.repeat",
   "numpy.sqrt",
   "numpy.zeros",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.StandardScaler.transform": {
  "lineno": 780,
  "symbols_in_volume": [
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data._handle_zeros_in_scale": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.isscalar",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.add_dummy_feature": {
  "lineno": 2073,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.concatenate",
   "numpy.full",
   "numpy.hstack",
   "numpy.zeros",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.issparse",
   "scipy.sparse.isspmatrix_coo",
   "scipy.sparse.isspmatrix_csc"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.binarize": {
  "lineno": 1836,
  "symbols_in_volume": [
   "numpy.logical_not",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.maxabs_scale": {
  "lineno": 1032,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.minmax_scale": {
  "lineno": 444,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.normalize": {
  "lineno": 1644,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.diff",
   "numpy.max",
   "numpy.newaxis",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.power_transform": {
  "lineno": 3039,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.quantile_transform": {
  "lineno": 2551,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._data.robust_scale": {
  "lineno": 1289,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._data.scale": {
  "lineno": 81,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.asarray",
   "numpy.nanmean",
   "numpy.nanstd",
   "numpy.rollaxis",
   "numpy.sqrt",
   "scipy.sparse.issparse",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._discretization": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.preprocessing._discretization.KBinsDiscretizer": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.preprocessing._discretization.KBinsDiscretizer.__init__": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._discretization.KBinsDiscretizer._validate_n_bins": {
  "lineno": 213,
  "symbols_in_volume": [
   "numbers.Integral",
   "numbers.Number",
   "numpy.full",
   "numpy.int",
   "numpy.where"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._discretization.KBinsDiscretizer.fit": {
  "lineno": 123,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.asarray",
   "numpy.ediff1d",
   "numpy.inf",
   "numpy.linspace",
   "numpy.percentile",
   "numpy.r_",
   "numpy.zeros",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._discretization.KBinsDiscretizer.inverse_transform": {
  "lineno": 286,
  "symbols_in_volume": [
   "numpy.int_"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._discretization.KBinsDiscretizer.transform": {
  "lineno": 247,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.clip",
   "numpy.digitize"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._encoders": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.preprocessing._encoders.OneHotEncoder": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.preprocessing._encoders.OneHotEncoder.__init__": {
  "lineno": 271,
  "symbols_in_volume": [
   "numpy.float64",
   "scipy.sparse"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OneHotEncoder._compute_drop_idx": {
  "lineno": 293,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.int_",
   "numpy.where",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OneHotEncoder._validate_keywords": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OneHotEncoder.fit": {
  "lineno": 329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OneHotEncoder.fit_transform": {
  "lineno": 351,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OneHotEncoder.get_feature_names": {
  "lineno": 509,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OneHotEncoder.inverse_transform": {
  "lineno": 423,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.delete",
   "numpy.empty",
   "numpy.find_common_type"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OneHotEncoder.transform": {
  "lineno": 374,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cumsum",
   "numpy.insert",
   "numpy.ones",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OrdinalEncoder": {
  "lineno": 545,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.preprocessing._encoders.OrdinalEncoder.__init__": {
  "lineno": 608,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OrdinalEncoder.fit": {
  "lineno": 612,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OrdinalEncoder.inverse_transform": {
  "lineno": 650,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.find_common_type"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._encoders.OrdinalEncoder.transform": {
  "lineno": 633,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._encoders._BaseEncoder": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.preprocessing._encoders._BaseEncoder._check_X": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.issubdtype",
   "numpy.object",
   "numpy.str_"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._encoders._BaseEncoder._fit": {
  "lineno": 73,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.sort"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._encoders._BaseEncoder._get_feature": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._encoders._BaseEncoder._more_tags": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._encoders._BaseEncoder._transform": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.bool",
   "numpy.int",
   "numpy.ones",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._function_transformer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.preprocessing._function_transformer.FunctionTransformer": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.preprocessing._function_transformer.FunctionTransformer.__init__": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._function_transformer.FunctionTransformer._check_input": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._function_transformer.FunctionTransformer._check_inverse_transform": {
  "lineno": 98,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._function_transformer.FunctionTransformer._more_tags": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._function_transformer.FunctionTransformer._transform": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._function_transformer.FunctionTransformer.fit": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._function_transformer.FunctionTransformer.inverse_transform": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._function_transformer.FunctionTransformer.transform": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._function_transformer._identity": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._label": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.preprocessing._label.LabelBinarizer": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.preprocessing._label.LabelBinarizer.__init__": {
  "lineno": 396,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._label.LabelBinarizer._more_tags": {
  "lineno": 537,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._label.LabelBinarizer.fit": {
  "lineno": 411,
  "symbols_in_volume": [
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._label.LabelBinarizer.fit_transform": {
  "lineno": 435,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._label.LabelBinarizer.inverse_transform": {
  "lineno": 488,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._label.LabelBinarizer.transform": {
  "lineno": 457,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._label.LabelEncoder": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.preprocessing._label.LabelEncoder._more_tags": {
  "lineno": 301,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._label.LabelEncoder.fit": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._label.LabelEncoder.fit_transform": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._label.LabelEncoder.inverse_transform": {
  "lineno": 276,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.asarray",
   "numpy.setdiff1d"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._label.LabelEncoder.transform": {
  "lineno": 255,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._label.MultiLabelBinarizer": {
  "lineno": 789,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.preprocessing._label.MultiLabelBinarizer.__init__": {
  "lineno": 851,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._label.MultiLabelBinarizer._build_cache": {
  "lineno": 952,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._label.MultiLabelBinarizer._more_tags": {
  "lineno": 1027,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._label.MultiLabelBinarizer._transform": {
  "lineno": 959,
  "symbols_in_volume": [
   "array.array",
   "numpy.ones",
   "scipy.sparse.csr_matrix",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._label.MultiLabelBinarizer.fit": {
  "lineno": 855,
  "symbols_in_volume": [
   "itertools.chain.from_iterable",
   "numpy.empty",
   "numpy.int"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._label.MultiLabelBinarizer.fit_transform": {
  "lineno": 883,
  "symbols_in_volume": [
   "collections.defaultdict",
   "numpy.array",
   "numpy.empty",
   "numpy.int",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._label.MultiLabelBinarizer.inverse_transform": {
  "lineno": 993,
  "symbols_in_volume": [
   "numpy.setdiff1d",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._label.MultiLabelBinarizer.transform": {
  "lineno": 926,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._label._encode": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing._label._encode_check_unknown": {
  "lineno": 121,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.in1d",
   "numpy.ones",
   "numpy.setdiff1d",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._label._encode_numpy": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.searchsorted",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._label._encode_python": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._label._inverse_binarize_multiclass": {
  "lineno": 701,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.arange",
   "numpy.asarray",
   "numpy.diff",
   "numpy.flatnonzero",
   "numpy.repeat",
   "numpy.searchsorted",
   "numpy.setdiff1d",
   "numpy.where",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._label._inverse_binarize_thresholding": {
  "lineno": 745,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.int",
   "numpy.repeat",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.preprocessing._label.label_binarize": {
  "lineno": 541,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.asarray",
   "numpy.cumsum",
   "numpy.empty_like",
   "numpy.hstack",
   "numpy.in1d",
   "numpy.int",
   "numpy.searchsorted",
   "numpy.sort",
   "numpy.zeros",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.data": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.preprocessing.data.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing.label": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.preprocessing.label.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing.setup": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.preprocessing.setup.configuration": {
  "lineno": 4,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.Configuration",
   "numpy.get_include",
   "os.name"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.preprocessing.tests.test_common": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.datasets.load_iris"
  ],
  "type": "module"
 },
 "sklearn.preprocessing.tests.test_common._get_valid_samples_by_column": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.isnan"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_common.test_missing_value_handling": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.any",
   "numpy.isnan",
   "numpy.nan",
   "numpy.nanmin",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "pytest.warns",
   "scipy.sparse.bsr_matrix",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.dia_matrix",
   "scipy.sparse.dok_matrix",
   "scipy.sparse.lil_matrix",
   "sklearn.base.clone",
   "sklearn.model_selection.train_test_split",
   "sklearn.preprocessing.MaxAbsScaler",
   "sklearn.preprocessing.MinMaxScaler",
   "sklearn.preprocessing.PowerTransformer",
   "sklearn.preprocessing.QuantileTransformer",
   "sklearn.preprocessing.RobustScaler",
   "sklearn.preprocessing.StandardScaler",
   "sklearn.preprocessing.maxabs_scale",
   "sklearn.preprocessing.minmax_scale",
   "sklearn.preprocessing.power_transform",
   "sklearn.preprocessing.quantile_transform",
   "sklearn.preprocessing.robust_scale",
   "sklearn.preprocessing.scale",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils._testing.assert_array_equal",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.datasets.load_iris"
  ],
  "type": "module"
 },
 "sklearn.preprocessing.tests.test_data._check_dim_1axis": {
  "lineno": 82,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data._check_identity_scalers_attributes": {
  "lineno": 874,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.assert_correct_incr": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_add_dummy_feature": {
  "lineno": 2144,
  "symbols_in_volume": [
   "sklearn.preprocessing._data.add_dummy_feature",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_add_dummy_feature_coo": {
  "lineno": 2150,
  "symbols_in_volume": [
   "scipy.sparse.coo_matrix",
   "scipy.sparse.isspmatrix_coo",
   "sklearn.preprocessing._data.add_dummy_feature",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_add_dummy_feature_csc": {
  "lineno": 2157,
  "symbols_in_volume": [
   "scipy.sparse.csc_matrix",
   "scipy.sparse.isspmatrix_csc",
   "sklearn.preprocessing._data.add_dummy_feature",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_add_dummy_feature_csr": {
  "lineno": 2164,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "scipy.sparse.isspmatrix_csr",
   "sklearn.preprocessing._data.add_dummy_feature",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_binarizer": {
  "lineno": 2034,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.sum",
   "pytest.raises",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.issparse",
   "sklearn.preprocessing._data.Binarizer"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_center_kernel": {
  "lineno": 2090,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.random.RandomState",
   "sklearn.preprocessing._data.KernelCenterer",
   "sklearn.preprocessing._data.StandardScaler",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_cv_pipeline_precomputed": {
  "lineno": 2115,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "sklearn.model_selection.cross_val_predict",
   "sklearn.pipeline.Pipeline",
   "sklearn.preprocessing._data.KernelCenterer",
   "sklearn.svm.SVR",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_deprecated_quantile_transform_copy": {
  "lineno": 1537,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.preprocessing._data.quantile_transform",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_fit_cold_start": {
  "lineno": 2171,
  "symbols_in_volume": [
   "sklearn.preprocessing._data.MaxAbsScaler",
   "sklearn.preprocessing._data.MinMaxScaler",
   "sklearn.preprocessing._data.StandardScaler"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_fit_transform": {
  "lineno": 2135,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.preprocessing._data.Binarizer",
   "sklearn.preprocessing._data.Normalizer",
   "sklearn.preprocessing._data.StandardScaler",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_handle_zeros_in_scale": {
  "lineno": 472,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.preprocessing._data._handle_zeros_in_scale",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_maxabs_scaler_1d": {
  "lineno": 1746,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.ones",
   "sklearn.preprocessing._data.MaxAbsScaler",
   "sklearn.preprocessing._data.maxabs_scale",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_maxabs_scaler_large_negative_value": {
  "lineno": 1718,
  "symbols_in_volume": [
   "sklearn.preprocessing._data.MaxAbsScaler",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_maxabs_scaler_partial_fit": {
  "lineno": 1780,
  "symbols_in_volume": [
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.preprocessing._data.MaxAbsScaler",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.gen_batches"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_maxabs_scaler_transform_one_row_csr": {
  "lineno": 1734,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "sklearn.preprocessing._data.MaxAbsScaler",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_maxabs_scaler_zero_variance_features": {
  "lineno": 1669,
  "symbols_in_volume": [
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.preprocessing._data.MaxAbsScaler",
   "sklearn.preprocessing._data.maxabs_scale",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_min_max_scaler_1d": {
  "lineno": 746,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "numpy.zeros",
   "sklearn.preprocessing._data.MinMaxScaler",
   "sklearn.preprocessing._data.minmax_scale",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_min_max_scaler_iris": {
  "lineno": 666,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.preprocessing._data.MinMaxScaler",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_min_max_scaler_zero_variance_features": {
  "lineno": 698,
  "symbols_in_volume": [
   "sklearn.preprocessing._data.MinMaxScaler",
   "sklearn.preprocessing._data.minmax_scale",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_minmax_scale_axis1": {
  "lineno": 739,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.min",
   "sklearn.preprocessing._data.minmax_scale",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_minmax_scaler_partial_fit": {
  "lineno": 481,
  "symbols_in_volume": [
   "sklearn.preprocessing._data.MinMaxScaler",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.gen_batches"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_normalize": {
  "lineno": 1984,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.ones",
   "numpy.random.RandomState",
   "pytest.raises",
   "scipy.sparse.csr_matrix",
   "sklearn.preprocessing._data.normalize",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_normalizer_l1": {
  "lineno": 1838,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.linalg.norm",
   "numpy.random.RandomState",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.lil_matrix",
   "sklearn.preprocessing._data.Normalizer",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_normalizer_l2": {
  "lineno": 1887,
  "symbols_in_volume": [
   "numpy.linalg.norm",
   "numpy.random.RandomState",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.lil_matrix",
   "sklearn.preprocessing._data.Normalizer",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_normalizer_max": {
  "lineno": 1935,
  "symbols_in_volume": [
   "numpy.linalg.norm",
   "numpy.random.RandomState",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.lil_matrix",
   "sklearn.preprocessing._data.Normalizer",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_optimization_power_transformer": {
  "lineno": 2359,
  "symbols_in_volume": [
   "numpy.linalg.norm",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.preprocessing._data.PowerTransformer",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_partial_fit_sparse_input": {
  "lineno": 623,
  "symbols_in_volume": [
   "numpy.array",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.preprocessing._data.StandardScaler",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_polynomial_feature_array_order": {
  "lineno": 152,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.isfortran",
   "sklearn.preprocessing._data.PolynomialFeatures"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_polynomial_feature_array_order.is_c_contiguous": {
  "lineno": 155,
  "symbols_in_volume": [
   "numpy.isfortran"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_polynomial_feature_names": {
  "lineno": 130,
  "symbols_in_volume": [
   "numpy.arange",
   "sklearn.preprocessing._data.PolynomialFeatures",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_polynomial_features": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.hstack",
   "numpy.newaxis",
   "numpy.ones_like",
   "sklearn.preprocessing._data.PolynomialFeatures",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_polynomial_features_csc_X": {
  "lineno": 163,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "scipy.sparse.csc_matrix",
   "sklearn.preprocessing._data.PolynomialFeatures",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_polynomial_features_csr_X": {
  "lineno": 187,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "sklearn.preprocessing._data.PolynomialFeatures",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_polynomial_features_csr_X_degree_4": {
  "lineno": 252,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.random",
   "sklearn.preprocessing._data.PolynomialFeatures",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_polynomial_features_csr_X_dim_edges": {
  "lineno": 269,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.random",
   "sklearn.preprocessing._data.PolynomialFeatures",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_polynomial_features_csr_X_floats": {
  "lineno": 209,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.random",
   "sklearn.preprocessing._data.PolynomialFeatures",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_polynomial_features_csr_X_zero_row": {
  "lineno": 229,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.random",
   "sklearn.preprocessing._data.PolynomialFeatures",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transform_default_method": {
  "lineno": 2492,
  "symbols_in_volume": [
   "numpy.abs",
   "sklearn.preprocessing._data.power_transform",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_warns_message",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_1d": {
  "lineno": 2220,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.ndarray",
   "scipy.stats.boxcox",
   "sklearn.preprocessing._data.PowerTransformer",
   "sklearn.preprocessing._data.power_transform",
   "sklearn.preprocessing._data.scale",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_2d": {
  "lineno": 2247,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.ndarray",
   "scipy.stats.boxcox",
   "sklearn.preprocessing._data.PowerTransformer",
   "sklearn.preprocessing._data.power_transform",
   "sklearn.preprocessing._data.scale",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_boxcox_strictly_positive_exception": {
  "lineno": 2277,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.zeros",
   "pytest.raises",
   "sklearn.preprocessing._data.PowerTransformer",
   "sklearn.preprocessing._data.power_transform"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_copy_False": {
  "lineno": 2462,
  "symbols_in_volume": [
   "numpy.abs",
   "pytest.mark.parametrize",
   "sklearn.preprocessing._data.PowerTransformer",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_copy_True": {
  "lineno": 2434,
  "symbols_in_volume": [
   "numpy.abs",
   "pytest.mark.parametrize",
   "sklearn.preprocessing._data.PowerTransformer",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_fit_transform": {
  "lineno": 2422,
  "symbols_in_volume": [
   "numpy.abs",
   "pytest.mark.parametrize",
   "sklearn.preprocessing._data.PowerTransformer",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_inverse": {
  "lineno": 2208,
  "symbols_in_volume": [
   "numpy.abs",
   "pytest.mark.parametrize",
   "sklearn.preprocessing._data.PowerTransformer",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_lambda_one": {
  "lineno": 2349,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "sklearn.preprocessing._data.PowerTransformer",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_lambda_zero": {
  "lineno": 2339,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "sklearn.preprocessing._data.PowerTransformer",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_method_exception": {
  "lineno": 2329,
  "symbols_in_volume": [
   "numpy.abs",
   "pytest.raises",
   "sklearn.preprocessing._data.PowerTransformer"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_nans": {
  "lineno": 2399,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.concatenate",
   "numpy.full_like",
   "numpy.isnan",
   "numpy.nan",
   "pytest.mark.parametrize",
   "sklearn.preprocessing._data.PowerTransformer",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils.shuffle"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_notfitted": {
  "lineno": 2198,
  "symbols_in_volume": [
   "numpy.abs",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.exceptions.NotFittedError",
   "sklearn.preprocessing._data.PowerTransformer"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_shape_exception": {
  "lineno": 2312,
  "symbols_in_volume": [
   "numpy.abs",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.preprocessing._data.PowerTransformer"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_power_transformer_yeojohnson_any_input": {
  "lineno": 2305,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.zeros",
   "pytest.mark.parametrize",
   "sklearn.preprocessing._data.power_transform"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transform_and_inverse": {
  "lineno": 1513,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.preprocessing._data.BOUNDS_THRESHOLD",
   "sklearn.preprocessing._data.QuantileTransformer",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transform_axis1": {
  "lineno": 1457,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.filterwarnings",
   "sklearn.preprocessing._data.quantile_transform",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transform_bounds": {
  "lineno": 1468,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.max",
   "numpy.min",
   "numpy.random.random",
   "scipy.sparse.csc_matrix",
   "sklearn.preprocessing._data.QuantileTransformer",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transform_check_error": {
  "lineno": 1203,
  "symbols_in_volume": [
   "numpy.transpose",
   "pytest.raises",
   "pytest.warns",
   "scipy.sparse.csc_matrix",
   "sklearn.preprocessing._data.QuantileTransformer"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transform_dense_toy": {
  "lineno": 1347,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linspace",
   "numpy.sort",
   "numpy.tile",
   "sklearn.preprocessing._data.QuantileTransformer",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transform_iris": {
  "lineno": 1182,
  "symbols_in_volume": [
   "scipy.sparse.csc_matrix",
   "sklearn.preprocessing._data.QuantileTransformer",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transform_nan": {
  "lineno": 1523,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isnan",
   "numpy.nan",
   "sklearn.preprocessing._data.QuantileTransformer"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transform_sparse_ignore_zeros": {
  "lineno": 1279,
  "symbols_in_volume": [
   "numpy.array",
   "scipy.sparse.csc_matrix",
   "sklearn.preprocessing._data.QuantileTransformer",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transform_sparse_toy": {
  "lineno": 1422,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.max",
   "numpy.min",
   "scipy.sparse.csc_matrix",
   "sklearn.preprocessing._data.QuantileTransformer",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transform_subsampling": {
  "lineno": 1377,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.linspace",
   "numpy.max",
   "numpy.random.sample",
   "numpy.ravel",
   "numpy.sort",
   "numpy.unique",
   "scipy.sparse.rand",
   "sklearn.preprocessing._data.QuantileTransformer"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transform_valid_axis": {
  "lineno": 2187,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.filterwarnings",
   "pytest.raises",
   "sklearn.preprocessing._data.quantile_transform"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_quantile_transformer_sorted_quantiles": {
  "lineno": 1549,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.diff",
   "pytest.mark.parametrize",
   "sklearn.preprocessing._data.QuantileTransformer",
   "sklearn.utils._testing._convert_container"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scale_1d_array": {
  "lineno": 1627,
  "symbols_in_volume": [
   "numpy.median",
   "numpy.percentile",
   "sklearn.preprocessing._data.robust_scale",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scale_axis1": {
  "lineno": 1618,
  "symbols_in_volume": [
   "numpy.median",
   "numpy.percentile",
   "sklearn.preprocessing._data.robust_scale",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scaler_2d_arrays": {
  "lineno": 1108,
  "symbols_in_volume": [
   "numpy.median",
   "numpy.random.RandomState",
   "sklearn.preprocessing._data.RobustScaler",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scaler_attributes": {
  "lineno": 1070,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.random.randn",
   "pytest.mark.parametrize",
   "pytest.skip",
   "scipy.sparse.issparse",
   "scipy.sparse.rand",
   "sklearn.preprocessing._data.RobustScaler"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scaler_col_zero_sparse": {
  "lineno": 1093,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pytest.approx",
   "scipy.sparse.csr_matrix",
   "sklearn.preprocessing._data.RobustScaler",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scaler_equivalence_dense_sparse": {
  "lineno": 1121,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.float64",
   "numpy.zeros",
   "pytest.mark.parametrize",
   "scipy.sparse.rand",
   "sklearn.preprocessing._data.RobustScaler",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scaler_error_sparse": {
  "lineno": 1062,
  "symbols_in_volume": [
   "pytest.raises",
   "scipy.sparse.rand",
   "sklearn.preprocessing._data.RobustScaler"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scaler_invalid_range": {
  "lineno": 1569,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.preprocessing._data.RobustScaler"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scaler_iris": {
  "lineno": 1158,
  "symbols_in_volume": [
   "numpy.median",
   "numpy.percentile",
   "sklearn.preprocessing._data.RobustScaler",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scaler_iris_quantiles": {
  "lineno": 1170,
  "symbols_in_volume": [
   "numpy.median",
   "numpy.percentile",
   "sklearn.preprocessing._data.RobustScaler",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scaler_transform_one_row_csr": {
  "lineno": 1144,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.RandomState",
   "scipy.sparse.csr_matrix",
   "sklearn.preprocessing._data.RobustScaler",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_robust_scaler_zero_variance_features": {
  "lineno": 1636,
  "symbols_in_volume": [
   "sklearn.preprocessing._data.RobustScaler",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_scale_1d": {
  "lineno": 348,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.preprocessing._data.scale",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_scale_function_without_centering": {
  "lineno": 1583,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.isnan",
   "numpy.random.RandomState",
   "pytest.raises",
   "scipy.sparse.csr_matrix",
   "sklearn.preprocessing._data.scale",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.sparsefuncs.mean_variance_axis"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_scale_input_finiteness_validation": {
  "lineno": 1054,
  "symbols_in_volume": [
   "numpy.inf",
   "pytest.raises",
   "sklearn.preprocessing._data.scale"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_scale_sparse_with_mean_raise_exception": {
  "lineno": 1021,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.raises",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.preprocessing._data.StandardScaler",
   "sklearn.preprocessing._data.scale"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_scaler_2d_arrays": {
  "lineno": 395,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.isnan",
   "numpy.random.RandomState",
   "sklearn.preprocessing._data.StandardScaler",
   "sklearn.preprocessing._data.scale",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_scaler_float16_overflow": {
  "lineno": 447,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.errstate",
   "numpy.float16",
   "numpy.float64",
   "numpy.isfinite",
   "numpy.random.RandomState",
   "sklearn.preprocessing._data.StandardScaler",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_scaler_int": {
  "lineno": 931,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.float",
   "numpy.isnan",
   "numpy.random.RandomState",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.preprocessing._data.StandardScaler",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils.sparsefuncs.mean_variance_axis",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_scaler_n_samples_seen_with_nan": {
  "lineno": 852,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.float64",
   "numpy.nan",
   "pytest.mark.parametrize",
   "pytest.skip",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.issparse",
   "sklearn.preprocessing._data.StandardScaler",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_scaler_return_identity": {
  "lineno": 881,
  "symbols_in_volume": [
   "itertools.combinations",
   "numpy.array",
   "numpy.float64",
   "scipy.sparse.csr_matrix",
   "sklearn.base.clone",
   "sklearn.preprocessing._data.StandardScaler",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils._testing.assert_allclose_dense_sparse"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_scaler_without_centering": {
  "lineno": 786,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.isnan",
   "numpy.random.RandomState",
   "pytest.raises",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.preprocessing._data.StandardScaler",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils.sparsefuncs.mean_variance_axis"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_scaler_without_copy": {
  "lineno": 1000,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.preprocessing._data.StandardScaler",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_standard_scaler_1d": {
  "lineno": 293,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "numpy.zeros_like",
   "sklearn.preprocessing._data.StandardScaler",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_standard_scaler_dtype": {
  "lineno": 334,
  "symbols_in_volume": [
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.random.RandomState",
   "sklearn.preprocessing._data.StandardScaler"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_standard_scaler_numerical_stability": {
  "lineno": 360,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.full",
   "numpy.log",
   "numpy.zeros",
   "sklearn.preprocessing._data.scale",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_no_warnings",
   "sklearn.utils._testing.assert_warns_message",
   "sklearn.utils._testing.skip_if_32bit"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_standard_scaler_partial_fit": {
  "lineno": 531,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.ones",
   "numpy.std",
   "numpy.var",
   "numpy.zeros",
   "sklearn.preprocessing._data.StandardScaler",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.gen_batches"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_standard_scaler_partial_fit_numerical_stability": {
  "lineno": 577,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.random.RandomState",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.preprocessing._data.StandardScaler",
   "sklearn.preprocessing._data.scale",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_standard_scaler_trasform_with_partial_fit": {
  "lineno": 639,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.zeros",
   "sklearn.preprocessing._data.StandardScaler",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_less",
   "sklearn.utils.gen_batches"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.test_yeo_johnson_darwin_example": {
  "lineno": 2389,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "sklearn.preprocessing._data.PowerTransformer"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_data.toarray": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.preprocessing.tests.test_discretization.test_encode_options": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.arange",
   "scipy.sparse.issparse",
   "sklearn.preprocessing.KBinsDiscretizer",
   "sklearn.preprocessing.OneHotEncoder",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_fit_transform": {
  "lineno": 21,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.preprocessing.KBinsDiscretizer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_fit_transform_n_bins_array": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "sklearn.preprocessing.KBinsDiscretizer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_invalid_encode_option": {
  "lineno": 151,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.preprocessing.KBinsDiscretizer"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_invalid_n_bins": {
  "lineno": 38,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.preprocessing.KBinsDiscretizer"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_invalid_n_bins_array": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.full",
   "pytest.raises",
   "sklearn.preprocessing.KBinsDiscretizer"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_invalid_n_features": {
  "lineno": 103,
  "symbols_in_volume": [
   "numpy.arange",
   "pytest.raises",
   "sklearn.preprocessing.KBinsDiscretizer"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_invalid_strategy_option": {
  "lineno": 183,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.preprocessing.KBinsDiscretizer"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_inverse_transform": {
  "lineno": 217,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.preprocessing.KBinsDiscretizer",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_nonuniform_strategies": {
  "lineno": 192,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "sklearn.preprocessing.KBinsDiscretizer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_numeric_stability": {
  "lineno": 140,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "sklearn.preprocessing.KBinsDiscretizer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_overwrite": {
  "lineno": 247,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.preprocessing.KBinsDiscretizer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_percentile_numeric_stability": {
  "lineno": 273,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.preprocessing.KBinsDiscretizer",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_redundant_bins": {
  "lineno": 261,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.preprocessing.KBinsDiscretizer",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_same_min_max": {
  "lineno": 111,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.zeros",
   "pytest.mark.parametrize",
   "sklearn.preprocessing.KBinsDiscretizer",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_warns_message",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_transform_1d_behavior": {
  "lineno": 128,
  "symbols_in_volume": [
   "numpy.arange",
   "pytest.raises",
   "sklearn.preprocessing.KBinsDiscretizer"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_transform_outside_fit_range": {
  "lineno": 235,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "sklearn.preprocessing.KBinsDiscretizer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_discretization.test_valid_n_bins": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.int",
   "sklearn.preprocessing.KBinsDiscretizer"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.preprocessing.tests.test_encoders.check_categorical_onehot": {
  "lineno": 194,
  "symbols_in_volume": [
   "scipy.sparse.isspmatrix_csr",
   "sklearn.preprocessing.OneHotEncoder",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_X_is_not_1D": {
  "lineno": 268,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.preprocessing.OneHotEncoder"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_X_is_not_1D_pandas": {
  "lineno": 281,
  "symbols_in_volume": [
   "pytest.importorskip",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.preprocessing.OneHotEncoder"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_categories": {
  "lineno": 613,
  "symbols_in_volume": [
   "numpy.int_",
   "numpy.ndarray",
   "pytest.mark.parametrize",
   "sklearn.preprocessing.OneHotEncoder",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_encoder_dtypes": {
  "lineno": 516,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.integer",
   "numpy.issubdtype",
   "sklearn.preprocessing.OneHotEncoder",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_encoder_dtypes_pandas": {
  "lineno": 541,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.importorskip",
   "sklearn.preprocessing.OneHotEncoder",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_encoders_has_categorical_tags": {
  "lineno": 637,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.preprocessing.OneHotEncoder",
   "sklearn.preprocessing.OrdinalEncoder"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_invalid_drop_length": {
  "lineno": 605,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.preprocessing.OneHotEncoder"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder": {
  "lineno": 207,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "sklearn.preprocessing.OneHotEncoder",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_categories": {
  "lineno": 292,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.integer",
   "numpy.issubdtype",
   "numpy.object_",
   "numpy.str_",
   "pytest.mark.parametrize",
   "sklearn.preprocessing.OneHotEncoder"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_diff_n_features": {
  "lineno": 45,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "sklearn.preprocessing.OneHotEncoder"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_drop_manual": {
  "lineno": 567,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.preprocessing.OneHotEncoder",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_dtype": {
  "lineno": 110,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "pytest.mark.parametrize",
   "sklearn.preprocessing.OneHotEncoder",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_dtype_pandas": {
  "lineno": 125,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "pytest.importorskip",
   "pytest.mark.parametrize",
   "sklearn.preprocessing.OneHotEncoder",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_feature_names": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pytest.raises",
   "sklearn.preprocessing.OneHotEncoder",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_feature_names_drop": {
  "lineno": 386,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pytest.mark.parametrize",
   "sklearn.preprocessing.OneHotEncoder",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_feature_names_unicode": {
  "lineno": 172,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.preprocessing.OneHotEncoder",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_handle_unknown": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "sklearn.preprocessing.OneHotEncoder",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_handle_unknown_strings": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.preprocessing.OneHotEncoder",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_invalid_params": {
  "lineno": 586,
  "symbols_in_volume": [
   "numpy.asarray",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.preprocessing.OneHotEncoder"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_inverse": {
  "lineno": 223,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "pytest.raises",
   "re.escape",
   "sklearn.preprocessing.OneHotEncoder",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_not_fitted": {
  "lineno": 83,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "sklearn.exceptions.NotFittedError",
   "sklearn.preprocessing.OneHotEncoder"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_pandas": {
  "lineno": 377,
  "symbols_in_volume": [
   "pytest.importorskip",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_raise_missing": {
  "lineno": 401,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pytest.importorskip",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.preprocessing.OneHotEncoder"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_set_params": {
  "lineno": 182,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.preprocessing.OneHotEncoder"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_sparse_dense": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.array",
   "scipy.sparse.issparse",
   "sklearn.preprocessing.OneHotEncoder",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_specified_categories": {
  "lineno": 312,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.object_",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.preprocessing.OneHotEncoder",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_specified_categories_mixed_columns": {
  "lineno": 363,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.issubdtype",
   "numpy.object_",
   "sklearn.preprocessing.OneHotEncoder",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_unsorted_categories": {
  "lineno": 344,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.issubdtype",
   "numpy.object_",
   "pytest.raises",
   "sklearn.preprocessing.OneHotEncoder",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_one_hot_encoder_warning": {
  "lineno": 561,
  "symbols_in_volume": [
   "numpy.testing.assert_no_warnings",
   "sklearn.preprocessing.OneHotEncoder"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_ordinal_encoder": {
  "lineno": 431,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "sklearn.preprocessing.OrdinalEncoder",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_ordinal_encoder_inverse": {
  "lineno": 473,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "re.escape",
   "sklearn.preprocessing.OrdinalEncoder",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_ordinal_encoder_raise_categories_shape": {
  "lineno": 505,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "sklearn.preprocessing.OrdinalEncoder"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_ordinal_encoder_raise_missing": {
  "lineno": 487,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.preprocessing.OrdinalEncoder"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.test_ordinal_encoder_specified_categories": {
  "lineno": 445,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.object_",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.preprocessing.OrdinalEncoder",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_encoders.toarray": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_function_transformer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.preprocessing.tests.test_function_transformer._make_func": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_function_transformer._make_func._func": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_function_transformer.test_check_inverse": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.around",
   "numpy.array",
   "numpy.expm1",
   "numpy.float64",
   "numpy.log1p",
   "numpy.sqrt",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.issparse",
   "sklearn.preprocessing.FunctionTransformer",
   "sklearn.utils._testing.assert_allclose_dense_sparse",
   "sklearn.utils._testing.assert_no_warnings",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_function_transformer.test_delegate_to_func": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.arange",
   "sklearn.preprocessing.FunctionTransformer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_function_transformer.test_function_transformer_frame": {
  "lineno": 155,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pytest.importorskip",
   "sklearn.preprocessing.FunctionTransformer"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_function_transformer.test_inverse_transform": {
  "lineno": 99,
  "symbols_in_volume": [
   "numpy.around",
   "numpy.array",
   "numpy.sqrt",
   "sklearn.preprocessing.FunctionTransformer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_function_transformer.test_kw_arg": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.around",
   "numpy.linspace",
   "sklearn.preprocessing.FunctionTransformer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_function_transformer.test_kw_arg_reset": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.around",
   "numpy.linspace",
   "sklearn.preprocessing.FunctionTransformer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_function_transformer.test_kw_arg_update": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.around",
   "numpy.linspace",
   "sklearn.preprocessing.FunctionTransformer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_function_transformer.test_np_log": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.log1p",
   "sklearn.preprocessing.FunctionTransformer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.datasets.load_iris"
  ],
  "type": "module"
 },
 "sklearn.preprocessing.tests.test_label.check_binarized_results": {
  "lineno": 508,
  "symbols_in_volume": [
   "pytest.raises",
   "scipy.sparse.issparse",
   "sklearn.preprocessing._label.LabelBinarizer",
   "sklearn.preprocessing._label._inverse_binarize_multiclass",
   "sklearn.preprocessing._label._inverse_binarize_thresholding",
   "sklearn.preprocessing._label.label_binarize",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils.multiclass.type_of_target"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_encode_check_unknown": {
  "lineno": 638,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "sklearn.preprocessing._label._encode"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_encode_util": {
  "lineno": 619,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "sklearn.preprocessing._label._encode",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_invalid_input_label_binarize": {
  "lineno": 602,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.preprocessing._label.label_binarize"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_inverse_binarize_multiclass": {
  "lineno": 611,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "scipy.sparse.csr_matrix",
   "sklearn.preprocessing._label._inverse_binarize_multiclass",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_binarize_binary": {
  "lineno": 550,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_binarize_multiclass": {
  "lineno": 569,
  "symbols_in_volume": [
   "numpy.eye",
   "pytest.raises",
   "sklearn.preprocessing._label.label_binarize"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_binarize_multilabel": {
  "lineno": 583,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.dok_matrix",
   "scipy.sparse.lil_matrix",
   "sklearn.preprocessing._label.label_binarize"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_binarize_with_class_order": {
  "lineno": 490,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.preprocessing._label.label_binarize",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_binarizer": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.array",
   "scipy.sparse.issparse",
   "sklearn.preprocessing._label.LabelBinarizer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_binarizer_errors": {
  "lineno": 128,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "scipy.sparse.csr_matrix",
   "sklearn.preprocessing._label.LabelBinarizer",
   "sklearn.preprocessing._label._inverse_binarize_thresholding",
   "sklearn.preprocessing._label.label_binarize",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_binarizer_set_label_encoding": {
  "lineno": 104,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.preprocessing._label.LabelBinarizer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_binarizer_unseen_labels": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.preprocessing._label.LabelBinarizer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_encoder": {
  "lineno": 184,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.preprocessing._label.LabelEncoder",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_encoder_empty_array": {
  "lineno": 254,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "sklearn.preprocessing._label.LabelEncoder",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_encoder_errors": {
  "lineno": 231,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.preprocessing._label.LabelEncoder"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_encoder_negative_ints": {
  "lineno": 210,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.preprocessing._label.LabelEncoder",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_label_encoder_str_bad_shape": {
  "lineno": 222,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.preprocessing._label.LabelEncoder"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_multilabel_binarizer": {
  "lineno": 315,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.preprocessing._label.MultiLabelBinarizer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_multilabel_binarizer_empty_sample": {
  "lineno": 342,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.preprocessing._label.MultiLabelBinarizer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_multilabel_binarizer_given_classes": {
  "lineno": 367,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.hstack",
   "pytest.raises",
   "sklearn.preprocessing._label.MultiLabelBinarizer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_multilabel_binarizer_inverse_validation": {
  "lineno": 471,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "sklearn.preprocessing._label.MultiLabelBinarizer"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_multilabel_binarizer_multiple_calls": {
  "lineno": 401,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.preprocessing._label.MultiLabelBinarizer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_multilabel_binarizer_non_integer_labels": {
  "lineno": 436,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "sklearn.preprocessing._label.MultiLabelBinarizer",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._to_object_array"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_multilabel_binarizer_non_unique": {
  "lineno": 464,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.preprocessing._label.MultiLabelBinarizer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_multilabel_binarizer_same_length_sequence": {
  "lineno": 419,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.preprocessing._label.MultiLabelBinarizer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_multilabel_binarizer_unknown_class": {
  "lineno": 351,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.preprocessing._label.MultiLabelBinarizer",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.test_sparse_output_multilabel_binarizer": {
  "lineno": 271,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.issparse",
   "sklearn.preprocessing._label.MultiLabelBinarizer",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.preprocessing.tests.test_label.toarray": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.random_projection": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.random_projection.BaseRandomProjection": {
  "lineno": 307,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.random_projection.BaseRandomProjection.__init__": {
  "lineno": 314,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.random_projection.BaseRandomProjection._make_random_matrix": {
  "lineno": 322,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.random_projection.BaseRandomProjection.fit": {
  "lineno": 341,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.random_projection.BaseRandomProjection.transform": {
  "lineno": 405,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.random_projection.GaussianRandomProjection": {
  "lineno": 433,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.random_projection.GaussianRandomProjection.__init__": {
  "lineno": 495,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.random_projection.GaussianRandomProjection._make_random_matrix": {
  "lineno": 502,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.random_projection.SparseRandomProjection": {
  "lineno": 525,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.random_projection.SparseRandomProjection.__init__": {
  "lineno": 633,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.random_projection.SparseRandomProjection._make_random_matrix": {
  "lineno": 643,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.random_projection._check_density": {
  "lineno": 133,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "sklearn.random_projection._check_input_size": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.random_projection._gaussian_random_matrix": {
  "lineno": 161,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "sklearn.random_projection._sparse_random_matrix": {
  "lineno": 211,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.size",
   "numpy.sqrt",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "sklearn.random_projection.gaussian_random_matrix": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.random_projection.johnson_lindenstrauss_min_dim": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.asarray",
   "numpy.int",
   "numpy.log"
  ],
  "type": "function"
 },
 "sklearn.random_projection.sparse_random_matrix": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.semi_supervised": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.semi_supervised._label_propagation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.semi_supervised._label_propagation.BaseLabelPropagation": {
  "lineno": 74,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.semi_supervised._label_propagation.BaseLabelPropagation.__init__": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.semi_supervised._label_propagation.BaseLabelPropagation._build_graph": {
  "lineno": 150,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.semi_supervised._label_propagation.BaseLabelPropagation._get_kernel": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.semi_supervised._label_propagation.BaseLabelPropagation.fit": {
  "lineno": 204,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.argmax",
   "numpy.asarray",
   "numpy.copy",
   "numpy.multiply",
   "numpy.newaxis",
   "numpy.sum",
   "numpy.unique",
   "numpy.where",
   "numpy.zeros",
   "scipy.sparse.isspmatrix",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.semi_supervised._label_propagation.BaseLabelPropagation.predict": {
  "lineno": 155,
  "symbols_in_volume": [
   "numpy.argmax"
  ],
  "type": "function"
 },
 "sklearn.semi_supervised._label_propagation.BaseLabelPropagation.predict_proba": {
  "lineno": 170,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.atleast_2d",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.semi_supervised._label_propagation.LabelPropagation": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.semi_supervised._label_propagation.LabelPropagation.__init__": {
  "lineno": 378,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.semi_supervised._label_propagation.LabelPropagation._build_graph": {
  "lineno": 384,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.diag",
   "numpy.newaxis",
   "scipy.sparse.isspmatrix"
  ],
  "type": "function"
 },
 "sklearn.semi_supervised._label_propagation.LabelPropagation.fit": {
  "lineno": 400,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.semi_supervised._label_propagation.LabelSpreading": {
  "lineno": 404,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.semi_supervised._label_propagation.LabelSpreading.__init__": {
  "lineno": 491,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.semi_supervised._label_propagation.LabelSpreading._build_graph": {
  "lineno": 499,
  "symbols_in_volume": [
   "scipy.sparse.csgraph.laplacian",
   "scipy.sparse.isspmatrix"
  ],
  "type": "function"
 },
 "sklearn.semi_supervised.label_propagation": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.semi_supervised.label_propagation.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.semi_supervised.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.semi_supervised.tests.test_label_propagation": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.metrics.pairwise.rbf_kernel",
   "sklearn.semi_supervised._label_propagation.LabelPropagation",
   "sklearn.semi_supervised._label_propagation.LabelSpreading"
  ],
  "type": "module"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.test_convergence_speed": {
  "lineno": 129,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "sklearn.semi_supervised._label_propagation.LabelSpreading"
  ],
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.test_convergence_warning": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.semi_supervised._label_propagation.LabelPropagation",
   "sklearn.semi_supervised._label_propagation.LabelSpreading",
   "sklearn.utils._testing.assert_no_warnings",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.test_distribution": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.test_fit_transduction": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.test_label_propagation_closed_form": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dot",
   "numpy.eye",
   "numpy.linalg.inv",
   "numpy.meshgrid",
   "numpy.newaxis",
   "numpy.testing.assert_array_almost_equal",
   "numpy.zeros",
   "sklearn.datasets.make_classification",
   "sklearn.semi_supervised._label_propagation.LabelPropagation"
  ],
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.test_label_spreading_closed_form": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dot",
   "numpy.eye",
   "numpy.linalg.inv",
   "numpy.newaxis",
   "numpy.testing.assert_array_almost_equal",
   "numpy.zeros",
   "sklearn.datasets.make_classification",
   "sklearn.semi_supervised._label_propagation.LabelSpreading"
  ],
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.test_predict": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.test_predict_proba": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.test_predict_sparse_callable_kernel": {
  "lineno": 160,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.train_test_split",
   "sklearn.semi_supervised._label_propagation.LabelPropagation",
   "sklearn.semi_supervised._label_propagation.LabelSpreading"
  ],
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.test_predict_sparse_callable_kernel.topk_rbf": {
  "lineno": 164,
  "symbols_in_volume": [
   "numpy.exp",
   "scipy.sparse.issparse",
   "sklearn.neighbors.NearestNeighbors"
  ],
  "type": "function"
 },
 "sklearn.semi_supervised.tests.test_label_propagation.test_valid_alpha": {
  "lineno": 120,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.datasets.make_classification",
   "sklearn.semi_supervised._label_propagation.LabelSpreading"
  ],
  "type": "function"
 },
 "sklearn.setup": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.distutils.core.setup"
  ],
  "type": "module"
 },
 "sklearn.setup.configuration": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.Configuration",
   "numpy.get_include",
   "os.name",
   "sklearn._build_utils.cythonize_extensions",
   "sklearn._build_utils.deprecated_modules._create_deprecated_modules_files",
   "sys.argv"
  ],
  "type": "function"
 },
 "sklearn.setup_module": {
  "lineno": 100,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.int32",
   "numpy.random.seed",
   "numpy.random.uniform",
   "os.environ.get",
   "random.seed"
  ],
  "type": "function"
 },
 "sklearn.svm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.svm._base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.svm._base.BaseLibSVM": {
  "lineno": 59,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.svm._base.BaseLibSVM.__init__": {
  "lineno": 72,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM._compute_kernel": {
  "lineno": 364,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.float64",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM._decision_function": {
  "lineno": 375,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM._dense_decision_function": {
  "lineno": 405,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM._dense_fit": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM._dense_predict": {
  "lineno": 319,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM._get_coef": {
  "lineno": 488,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM._pairwise": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM._sparse_decision_function": {
  "lineno": 421,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.float64"
  ],
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM._sparse_fit": {
  "lineno": 262,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.float64",
   "numpy.tile",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM._sparse_predict": {
  "lineno": 341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM._validate_for_predict": {
  "lineno": 443,
  "symbols_in_volume": [
   "numpy.float64",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.issparse",
   "scipy.sparse.isspmatrix"
  ],
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM._validate_targets": {
  "lineno": 215,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.float64"
  ],
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM._warn_from_fit_status": {
  "lineno": 225,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM.coef_": {
  "lineno": 470,
  "symbols_in_volume": [
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM.fit": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.float64",
   "numpy.iinfo",
   "scipy.sparse.isspmatrix"
  ],
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM.n_support_": {
  "lineno": 491,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.svm._base.BaseLibSVM.predict": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.svm._base.BaseSVC": {
  "lineno": 507,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.svm._base.BaseSVC.__init__": {
  "lineno": 509,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.svm._base.BaseSVC._check_proba": {
  "lineno": 601,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.svm._base.BaseSVC._dense_predict_proba": {
  "lineno": 681,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.svm._base.BaseSVC._get_coef": {
  "lineno": 720,
  "symbols_in_volume": [
   "numpy.vstack",
   "scipy.sparse.issparse",
   "scipy.sparse.vstack"
  ],
  "type": "function"
 },
 "sklearn.svm._base.BaseSVC._predict_log_proba": {
  "lineno": 678,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "sklearn.svm._base.BaseSVC._predict_proba": {
  "lineno": 639,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.svm._base.BaseSVC._sparse_predict_proba": {
  "lineno": 698,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.float64"
  ],
  "type": "function"
 },
 "sklearn.svm._base.BaseSVC._validate_targets": {
  "lineno": 523,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.float64",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.svm._base.BaseSVC.decision_function": {
  "lineno": 537,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.svm._base.BaseSVC.predict": {
  "lineno": 568,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.asarray",
   "numpy.intp"
  ],
  "type": "function"
 },
 "sklearn.svm._base.BaseSVC.predict_log_proba": {
  "lineno": 648,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.svm._base.BaseSVC.predict_proba": {
  "lineno": 609,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.svm._base._fit_liblinear": {
  "lineno": 796,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.empty",
   "numpy.float64",
   "numpy.iinfo",
   "numpy.require",
   "scipy.sparse.issparse",
   "scipy.sparse.isspmatrix",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.svm._base._get_liblinear_solver_type": {
  "lineno": 736,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.svm._base._one_vs_one_coef": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.cumsum",
   "numpy.hstack"
  ],
  "type": "function"
 },
 "sklearn.svm._bounds": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.svm._bounds.l1_min_c": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.dot",
   "numpy.full",
   "numpy.max",
   "numpy.size"
  ],
  "type": "function"
 },
 "sklearn.svm._classes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.svm._classes.LinearSVC": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.svm._classes.LinearSVC.__init__": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.svm._classes.LinearSVC.fit": {
  "lineno": 195,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.unique",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.svm._classes.LinearSVR": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.svm._classes.LinearSVR.__init__": {
  "lineno": 370,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.svm._classes.LinearSVR.fit": {
  "lineno": 385,
  "symbols_in_volume": [
   "numpy.float64",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.svm._classes.NuSVC": {
  "lineno": 656,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.svm._classes.NuSVC.__init__": {
  "lineno": 844,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.svm._classes.NuSVR": {
  "lineno": 995,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.svm._classes.NuSVR.__init__": {
  "lineno": 1109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.svm._classes.OneClassSVM": {
  "lineno": 1120,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.svm._classes.OneClassSVM.__init__": {
  "lineno": 1222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.svm._classes.OneClassSVM.decision_function": {
  "lineno": 1262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.svm._classes.OneClassSVM.fit": {
  "lineno": 1231,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "sklearn.svm._classes.OneClassSVM.predict": {
  "lineno": 1293,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.intp"
  ],
  "type": "function"
 },
 "sklearn.svm._classes.OneClassSVM.score_samples": {
  "lineno": 1279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.svm._classes.SVC": {
  "lineno": 438,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.svm._classes.SVC.__init__": {
  "lineno": 639,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.svm._classes.SVR": {
  "lineno": 860,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.svm._classes.SVR.__init__": {
  "lineno": 984,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.svm.base": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.svm.base.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.svm.bounds": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.svm.bounds.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.svm.classes": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.svm.classes.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.svm.liblinear": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.svm.liblinear.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.svm.libsvm": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.svm.libsvm.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.svm.libsvm_sparse": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.svm.libsvm_sparse.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.svm.setup": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.distutils.core.setup"
  ],
  "type": "module"
 },
 "sklearn.svm.setup.configuration": {
  "lineno": 6,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.Configuration",
   "numpy.get_include",
   "os.name",
   "os.path.join"
  ],
  "type": "function"
 },
 "sklearn.svm.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.svm.tests.test_bounds": {
  "lineno": null,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix"
  ],
  "type": "module"
 },
 "sklearn.svm.tests.test_bounds.check_l1_min_c": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.asarray",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.svm.LinearSVC",
   "sklearn.svm._bounds.l1_min_c"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_bounds.test_ill_posed_min_c": {
  "lineno": 66,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.svm._bounds.l1_min_c"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_bounds.test_l1_min_c": {
  "lineno": 20,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_bounds.test_l1_min_c_l2_loss": {
  "lineno": 37,
  "symbols_in_volume": [
   "sklearn.svm._bounds.l1_min_c",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_bounds.test_unsupported_loss": {
  "lineno": 73,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.svm._bounds.l1_min_c"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.RandomState",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.dok_matrix",
   "scipy.sparse.lil_matrix",
   "sklearn.datasets.load_iris"
  ],
  "type": "module"
 },
 "sklearn.svm.tests.test_sparse.check_svm_model_equal": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "scipy.sparse.issparse",
   "scipy.sparse.isspmatrix",
   "sklearn.svm.OneClassSVM",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_consistent_proba": {
  "lineno": 355,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_error": {
  "lineno": 189,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "pytest.raises",
   "sklearn.svm.NuSVC",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_linearsvc": {
  "lineno": 209,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_linearsvc_iris": {
  "lineno": 228,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_array_equal",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_sample_weights": {
  "lineno": 268,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_sparse_decision_function": {
  "lineno": 163,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.int",
   "numpy.testing.assert_array_almost_equal",
   "sklearn.svm.SVC",
   "sklearn.utils.extmath.safe_sparse_dot"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_sparse_liblinear_intercept_handling": {
  "lineno": 279,
  "symbols_in_volume": [
   "sklearn.svm.LinearSVC",
   "sklearn.svm.tests.test_svm.test_dense_liblinear_intercept_handling"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_sparse_oneclasssvm": {
  "lineno": 284,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "sklearn.datasets",
   "sklearn.datasets.make_blobs",
   "sklearn.svm.OneClassSVM",
   "sklearn.utils._testing.skip_if_32bit"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_sparse_realdata": {
  "lineno": 301,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_sparse_svc_clone_with_callable_kernel": {
  "lineno": 330,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.testing.assert_array_equal",
   "sklearn.base.clone",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_svc": {
  "lineno": 76,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "sklearn.datasets",
   "sklearn.datasets.make_blobs",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.skip_if_32bit"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_svc_iris": {
  "lineno": 147,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_svc_with_custom_kernel": {
  "lineno": 139,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_svc_with_custom_kernel.kfunc": {
  "lineno": 140,
  "symbols_in_volume": [
   "sklearn.utils.extmath.safe_sparse_dot"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_timeout": {
  "lineno": 348,
  "symbols_in_volume": [
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_unsorted_indices": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "scipy.sparse.csr_matrix",
   "sklearn.datasets.load_digits",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_unsorted_indices.scramble_indices": {
  "lineno": 114,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_sparse.test_weight": {
  "lineno": 253,
  "symbols_in_volume": [
   "numpy.sum",
   "scipy.sparse.csr_matrix",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.svm.LinearSVC",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.datasets.load_iris",
   "sklearn.utils.check_random_state"
  ],
  "type": "module"
 },
 "sklearn.svm.tests.test_svm.test_auto_weight": {
  "lineno": 581,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.argmax",
   "numpy.delete",
   "numpy.unique",
   "numpy.where",
   "sklearn.exceptions.UndefinedMetricWarning",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.metrics.f1_score",
   "sklearn.svm.LinearSVC",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.ignore_warnings",
   "sklearn.utils.compute_class_weight"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_bad_input": {
  "lineno": 610,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ascontiguousarray",
   "numpy.asfortranarray",
   "numpy.dot",
   "numpy.testing.assert_array_equal",
   "numpy.tile",
   "pytest.raises",
   "scipy.sparse.lil_matrix",
   "sklearn.svm.LinearSVC",
   "sklearn.svm.NuSVC",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_consistent_proba": {
  "lineno": 1032,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_crammer_singer_binary": {
  "lineno": 868,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_decision_function": {
  "lineno": 331,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.int",
   "numpy.testing.assert_array_almost_equal",
   "sklearn.metrics.pairwise.rbf_kernel",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_decision_function_shape": {
  "lineno": 363,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.testing.assert_array_equal",
   "sklearn.datasets.make_blobs",
   "sklearn.model_selection.train_test_split",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_decision_function_shape_two_class": {
  "lineno": 1107,
  "symbols_in_volume": [
   "sklearn.datasets.make_blobs",
   "sklearn.multiclass.OneVsRestClassifier",
   "sklearn.svm.NuSVC",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_dense_liblinear_intercept_handling": {
  "lineno": 892,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_array_almost_equal",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_gamma_auto": {
  "lineno": 1193,
  "symbols_in_volume": [
   "sklearn.svm.SVC",
   "sklearn.utils._testing.assert_no_warnings"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_gamma_scale": {
  "lineno": 1200,
  "symbols_in_volume": [
   "numpy.sqrt",
   "numpy.testing.assert_almost_equal",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.assert_no_warnings"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_hasattr_predict_proba": {
  "lineno": 1085,
  "symbols_in_volume": [
   "sklearn.exceptions.NotFittedError",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_immutable_coef_property": {
  "lineno": 949,
  "symbols_in_volume": [
   "numpy.arange",
   "pytest.raises",
   "sklearn.svm.NuSVC",
   "sklearn.svm.NuSVR",
   "sklearn.svm.OneClassSVM",
   "sklearn.svm.SVC",
   "sklearn.svm.SVR"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_liblinear_set_coef": {
  "lineno": 925,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_array_equal",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_libsvm_iris": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.mean",
   "numpy.sort",
   "numpy.testing.assert_array_equal",
   "sklearn.svm.SVC",
   "sklearn.svm._libsvm.cross_validation",
   "sklearn.svm._libsvm.fit",
   "sklearn.svm._libsvm.predict"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_libsvm_parameters": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linear_svc_intercept_scaling": {
  "lineno": 1066,
  "symbols_in_volume": [
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linear_svm_convergence_warnings": {
  "lineno": 1041,
  "symbols_in_volume": [
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.svm.LinearSVC",
   "sklearn.svm.LinearSVR",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linear_svx_uppercase_loss_penality_raises_error": {
  "lineno": 772,
  "symbols_in_volume": [
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvc": {
  "lineno": 787,
  "symbols_in_volume": [
   "numpy.int",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_array_equal",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvc_crammer_singer": {
  "lineno": 817,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.dot",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_array_equal",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvc_fit_sampleweight": {
  "lineno": 837,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.repeat",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal",
   "sklearn.svm.LinearSVC",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvc_iris": {
  "lineno": 879,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.mean",
   "numpy.testing.assert_array_equal",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvc_parameters": {
  "lineno": 712,
  "symbols_in_volume": [
   "itertools.product",
   "pytest.raises",
   "sklearn.datasets.make_classification",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvc_verbose": {
  "lineno": 965,
  "symbols_in_volume": [
   "os.dup",
   "os.dup2",
   "os.pipe",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvm_liblinear_sample_weight": {
  "lineno": 1213,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.hstack",
   "numpy.ones",
   "numpy.testing.assert_allclose",
   "numpy.vstack",
   "pytest.mark.parametrize",
   "sklearn.base.clone",
   "sklearn.svm.LinearSVC",
   "sklearn.svm.LinearSVR",
   "sklearn.utils.shuffle"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvr": {
  "lineno": 182,
  "symbols_in_volume": [
   "numpy.linalg.norm",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_almost_equal",
   "sklearn.datasets.load_diabetes",
   "sklearn.svm.LinearSVR",
   "sklearn.svm.SVR"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvr_fit_sampleweight": {
  "lineno": 197,
  "symbols_in_volume": [
   "numpy.linalg.norm",
   "numpy.ones",
   "numpy.repeat",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_almost_equal",
   "sklearn.datasets.load_diabetes",
   "sklearn.svm.LinearSVR",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_linearsvx_loss_penalty_deprecations": {
  "lineno": 740,
  "symbols_in_volume": [
   "sklearn.svm.LinearSVC",
   "sklearn.svm.LinearSVR",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_lsvc_intercept_scaling_zero": {
  "lineno": 1077,
  "symbols_in_volume": [
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_n_support_oneclass_svr": {
  "lineno": 1252,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "sklearn.svm.OneClassSVM",
   "sklearn.svm.SVR"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_negative_sample_weights_mask_all_samples": {
  "lineno": 496,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.svm.NuSVC",
   "sklearn.svm.NuSVR",
   "sklearn.svm.OneClassSVM",
   "sklearn.svm.SVC",
   "sklearn.svm.SVR"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_negative_weight_equal_coeffs": {
  "lineno": 563,
  "symbols_in_volume": [
   "numpy.abs",
   "pytest.approx",
   "pytest.mark.parametrize",
   "sklearn.svm.NuSVC",
   "sklearn.svm.NuSVR",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_negative_weights_svc_leave_just_one_label": {
  "lineno": 522,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.svm.NuSVC",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_negative_weights_svc_leave_two_labels": {
  "lineno": 543,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "sklearn.svm.NuSVC",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_oneclass": {
  "lineno": 245,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_array_equal",
   "pytest.raises",
   "sklearn.svm.OneClassSVM"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_oneclass_decision_function": {
  "lineno": 261,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.r_",
   "numpy.testing.assert_array_equal",
   "sklearn.svm.OneClassSVM",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_oneclass_score_samples": {
  "lineno": 291,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "sklearn.svm.OneClassSVM"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_ovr_decision_function": {
  "lineno": 1116,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.argmax",
   "numpy.array",
   "numpy.min",
   "numpy.testing.assert_array_equal",
   "numpy.vstack",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_precomputed": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.mean",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_array_equal",
   "numpy.zeros_like",
   "pytest.raises",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_probability": {
  "lineno": 313,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.exp",
   "numpy.mean",
   "numpy.ones",
   "numpy.sum",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_array_almost_equal",
   "sklearn.svm.NuSVC",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_sparse_fit_support_vectors_empty": {
  "lineno": 699,
  "symbols_in_volume": [
   "numpy.array",
   "scipy.sparse.csr_matrix",
   "sklearn.svm.SVR"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_sparse_precomputed": {
  "lineno": 689,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svc_bad_kernel": {
  "lineno": 1007,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svc_clone_with_callable_kernel": {
  "lineno": 979,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_array_equal",
   "sklearn.base.clone",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svc_invalid_break_ties_param": {
  "lineno": 1158,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.datasets.make_blobs",
   "sklearn.svm",
   "sklearn.svm.NuSVC",
   "sklearn.svm.SVC",
   "sklearn.svm.predict"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svc_ovr_tie_breaking": {
  "lineno": 1169,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.argmax",
   "numpy.c_",
   "numpy.linspace",
   "numpy.meshgrid",
   "pytest.mark.parametrize",
   "sklearn.datasets.make_blobs",
   "sklearn.svm",
   "sklearn.svm.NuSVC",
   "sklearn.svm.SVC",
   "sklearn.svm.decision_function",
   "sklearn.svm.predict"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svm_classifier_sided_sample_weight": {
  "lineno": 431,
  "symbols_in_volume": [
   "pytest.approx",
   "pytest.mark.parametrize",
   "sklearn.svm.NuSVC",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svm_equivalence_sample_weight_C": {
  "lineno": 486,
  "symbols_in_volume": [
   "numpy.repeat",
   "numpy.testing.assert_allclose",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svm_gamma_error": {
  "lineno": 662,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.datasets.load_diabetes",
   "sklearn.datasets.load_iris",
   "sklearn.svm.NuSVC",
   "sklearn.svm.NuSVR",
   "sklearn.svm.OneClassSVM",
   "sklearn.svm.SVC",
   "sklearn.svm.SVR"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svm_regressor_sided_sample_weight": {
  "lineno": 457,
  "symbols_in_volume": [
   "pytest.approx",
   "pytest.mark.parametrize",
   "sklearn.svm.NuSVR",
   "sklearn.svm.SVR"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svr": {
  "lineno": 164,
  "symbols_in_volume": [
   "numpy.ones",
   "sklearn.datasets.load_diabetes",
   "sklearn.svm.LinearSVR",
   "sklearn.svm.NuSVR",
   "sklearn.svm.SVR"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svr_coef_sign": {
  "lineno": 1053,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.random.RandomState",
   "numpy.testing.assert_array_almost_equal",
   "sklearn.svm.LinearSVR",
   "sklearn.svm.NuSVR",
   "sklearn.svm.SVR"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svr_errors": {
  "lineno": 234,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "sklearn.svm.SVR"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_svr_predict": {
  "lineno": 390,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.testing.assert_array_almost_equal",
   "sklearn.metrics.pairwise.rbf_kernel",
   "sklearn.svm.SVR"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_timeout": {
  "lineno": 1013,
  "symbols_in_volume": [
   "numpy.dot",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_tweak_params": {
  "lineno": 298,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_unfitted": {
  "lineno": 1019,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.svm.NuSVR",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_unicode_kernel": {
  "lineno": 678,
  "symbols_in_volume": [
   "numpy.float64",
   "sklearn.svm.SVC",
   "sklearn.svm._libsvm.cross_validation"
  ],
  "type": "function"
 },
 "sklearn.svm.tests.test_svm.test_weight": {
  "lineno": 412,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "sklearn.datasets.make_classification",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.metrics.f1_score",
   "sklearn.svm.LinearSVC",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.tests.test_base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.tests.test_base.Buggy": {
  "lineno": 83,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.tests.test_base.Buggy.__init__": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_base.DiamondOverwriteTag": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.tests.test_base.DiamondOverwriteTag._more_tags": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_base.DontPickleAttributeMixin": {
  "lineno": 405,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.tests.test_base.DontPickleAttributeMixin.__getstate__": {
  "lineno": 406,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_base.DontPickleAttributeMixin.__setstate__": {
  "lineno": 411,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_base.InheritDiamondOverwriteTag": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.tests.test_base.K": {
  "lineno": 38,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.tests.test_base.K.__init__": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_base.ModifyInitParams": {
  "lineno": 74,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.tests.test_base.ModifyInitParams.__init__": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.tests.test_base.MultiInheritanceEstimator": {
  "lineno": 416,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.tests.test_base.MultiInheritanceEstimator.__init__": {
  "lineno": 417,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_base.MyEstimator": {
  "lineno": 31,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.tests.test_base.MyEstimator.__init__": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_base.NaNTag": {
  "lineno": 50,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.tests.test_base.NaNTag._more_tags": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_base.NoEstimator": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.tests.test_base.NoEstimator.__init__": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_base.NoEstimator.fit": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_base.NoEstimator.predict": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_base.NoNaNTag": {
  "lineno": 55,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.tests.test_base.NoNaNTag._more_tags": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_base.OverrideTag": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.tests.test_base.OverrideTag._more_tags": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_base.SingleInheritanceEstimator": {
  "lineno": 453,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.tests.test_base.SingleInheritanceEstimator.__getstate__": {
  "lineno": 458,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_base.SingleInheritanceEstimator.__init__": {
  "lineno": 454,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_base.T": {
  "lineno": 44,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.tests.test_base.T.__init__": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_base.TreeBadVersion": {
  "lineno": 350,
  "symbols_in_volume": [
   "sklearn.tree.DecisionTreeClassifier"
  ],
  "type": "class"
 },
 "sklearn.tests.test_base.TreeBadVersion.__getstate__": {
  "lineno": 351,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_base.TreeNoVersion": {
  "lineno": 373,
  "symbols_in_volume": [
   "sklearn.tree.DecisionTreeClassifier"
  ],
  "type": "class"
 },
 "sklearn.tests.test_base.TreeNoVersion.__getstate__": {
  "lineno": 374,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_base.VargEstimator": {
  "lineno": 101,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.tests.test_base.VargEstimator.__init__": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone": {
  "lineno": 110,
  "symbols_in_volume": [
   "numpy.zeros",
   "sklearn.base.clone",
   "sklearn.feature_selection.SelectFpr",
   "sklearn.feature_selection.f_classif"
  ],
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone_2": {
  "lineno": 128,
  "symbols_in_volume": [
   "sklearn.base.clone",
   "sklearn.feature_selection.SelectFpr",
   "sklearn.feature_selection.f_classif"
  ],
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone_buggy": {
  "lineno": 142,
  "symbols_in_volume": [
   "sklearn.base.clone",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone_empty_array": {
  "lineno": 158,
  "symbols_in_volume": [
   "numpy.array",
   "scipy.sparse.csr_matrix",
   "sklearn.base.clone",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone_estimator_types": {
  "lineno": 190,
  "symbols_in_volume": [
   "sklearn.base.clone"
  ],
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone_nan": {
  "lineno": 169,
  "symbols_in_volume": [
   "numpy.nan",
   "sklearn.base.clone"
  ],
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone_pandas_dataframe": {
  "lineno": 299,
  "symbols_in_volume": [
   "numpy.arange",
   "sklearn.base.clone",
   "sklearn.utils._mocking.MockDataFrame"
  ],
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone_pandas_dataframe.DummyEstimator": {
  "lineno": 301,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "sklearn.tests.test_base.test_clone_pandas_dataframe.DummyEstimator.__init__": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone_pandas_dataframe.DummyEstimator.fit": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone_pandas_dataframe.DummyEstimator.transform": {
  "lineno": 323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_base.test_clone_sparse_matrices": {
  "lineno": 177,
  "symbols_in_volume": [
   "numpy.eye",
   "scipy.sparse",
   "sklearn.base.clone",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_base.test_get_params": {
  "lineno": 218,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_base.test_is_classifier": {
  "lineno": 229,
  "symbols_in_volume": [
   "sklearn.base.is_classifier",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.pipeline.Pipeline",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.tests.test_base.test_pickle_version_no_warning_is_issued_with_non_sklearn_estimator": {
  "lineno": 393,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "sklearn.datasets.load_iris",
   "sklearn.utils._testing.assert_no_warnings"
  ],
  "type": "function"
 },
 "sklearn.tests.test_base.test_pickle_version_warning_is_issued_upon_different_version": {
  "lineno": 363,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "sklearn.__version__",
   "sklearn.datasets.load_iris",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.tests.test_base.test_pickle_version_warning_is_issued_when_no_version_info_in_pickle": {
  "lineno": 378,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "sklearn.__version__",
   "sklearn.datasets.load_iris",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.tests.test_base.test_pickle_version_warning_is_not_raised_with_matching_version": {
  "lineno": 337,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "sklearn.datasets.load_iris",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.utils._testing.assert_no_warnings"
  ],
  "type": "function"
 },
 "sklearn.tests.test_base.test_pickling_when_getstate_is_overwritten_by_mixin": {
  "lineno": 422,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads"
  ],
  "type": "function"
 },
 "sklearn.tests.test_base.test_pickling_when_getstate_is_overwritten_by_mixin_outside_of_sklearn": {
  "lineno": 433,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_base.test_pickling_works_when_getstate_is_overwritten_in_the_child_class": {
  "lineno": 464,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.tests.test_base.test_regressormixin_score_multioutput": {
  "lineno": 494,
  "symbols_in_volume": [
   "sklearn.linear_model.LinearRegression",
   "sklearn.utils._testing.assert_no_warnings",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.tests.test_base.test_repr": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_base.test_score_sample_weight": {
  "lineno": 277,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.datasets.load_boston",
   "sklearn.datasets.load_iris",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.tree.DecisionTreeRegressor"
  ],
  "type": "function"
 },
 "sklearn.tests.test_base.test_set_params": {
  "lineno": 238,
  "symbols_in_volume": [
   "sklearn.pipeline.Pipeline",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_base.test_set_params_passes_all_parameters": {
  "lineno": 251,
  "symbols_in_volume": [
   "sklearn.model_selection.GridSearchCV",
   "sklearn.pipeline.Pipeline"
  ],
  "type": "function"
 },
 "sklearn.tests.test_base.test_set_params_passes_all_parameters.TestDecisionTree": {
  "lineno": 255,
  "symbols_in_volume": [
   "sklearn.tree.DecisionTreeClassifier"
  ],
  "type": "class"
 },
 "sklearn.tests.test_base.test_set_params_passes_all_parameters.TestDecisionTree.set_params": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_base.test_set_params_updates_valid_params": {
  "lineno": 269,
  "symbols_in_volume": [
   "sklearn.model_selection.GridSearchCV",
   "sklearn.svm.SVC",
   "sklearn.tree.DecisionTreeClassifier"
  ],
  "type": "function"
 },
 "sklearn.tests.test_base.test_str": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_base.test_tag_inheritance": {
  "lineno": 475,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_base.test_warns_on_get_params_non_attribute": {
  "lineno": 516,
  "symbols_in_volume": [
   "pytest.warns"
  ],
  "type": "function"
 },
 "sklearn.tests.test_base.test_warns_on_get_params_non_attribute.MyEstimator": {
  "lineno": 517,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.tests.test_base.test_warns_on_get_params_non_attribute.MyEstimator.__init__": {
  "lineno": 518,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_base.test_warns_on_get_params_non_attribute.MyEstimator.fit": {
  "lineno": 521,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_build": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.tests.test_build.test_openmp_parallelism_enabled": {
  "lineno": 9,
  "symbols_in_volume": [
   "os.getenv",
   "pytest.skip",
   "sklearn.__version__.endswith",
   "sklearn.utils._openmp_helpers._openmp_parallelism_enabled",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "sklearn.tests.test_calibration": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.tests.test_calibration.test_calibration": {
  "lineno": 27,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "scipy.sparse.csr_matrix",
   "sklearn.calibration.CalibratedClassifierCV",
   "sklearn.datasets.make_classification",
   "sklearn.ensemble.RandomForestRegressor",
   "sklearn.metrics.brier_score_loss",
   "sklearn.naive_bayes.MultinomialNB",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_accepts_ndarray": {
  "lineno": 323,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.calibration.CalibratedClassifierCV",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_accepts_ndarray.MockTensorClassifier": {
  "lineno": 330,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.tests.test_calibration.test_calibration_accepts_ndarray.MockTensorClassifier.decision_function": {
  "lineno": 337,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_accepts_ndarray.MockTensorClassifier.fit": {
  "lineno": 333,
  "symbols_in_volume": [
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_curve": {
  "lineno": 241,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.calibration.calibration_curve",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_less_classes": {
  "lineno": 304,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.arange",
   "numpy.hstack",
   "numpy.random.randn",
   "numpy.zeros",
   "sklearn.calibration.CalibratedClassifierCV",
   "sklearn.model_selection.LeaveOneOut",
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_multiclass": {
  "lineno": 127,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "numpy.sum",
   "sklearn.calibration.CalibratedClassifierCV",
   "sklearn.datasets.make_blobs",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.metrics.log_loss",
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_multiclass.softmax": {
  "lineno": 153,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_nan_imputer": {
  "lineno": 276,
  "symbols_in_volume": [
   "numpy.nan",
   "sklearn.calibration.CalibratedClassifierCV",
   "sklearn.datasets.make_classification",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.impute.SimpleImputer",
   "sklearn.pipeline.Pipeline"
  ],
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_prefit": {
  "lineno": 182,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.array",
   "numpy.random.RandomState",
   "scipy.sparse.csr_matrix",
   "sklearn.calibration.CalibratedClassifierCV",
   "sklearn.datasets.make_classification",
   "sklearn.metrics.brier_score_loss",
   "sklearn.naive_bayes.MultinomialNB",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_calibration_prob_sum": {
  "lineno": 290,
  "symbols_in_volume": [
   "numpy.ones",
   "sklearn.calibration.CalibratedClassifierCV",
   "sklearn.datasets.make_classification",
   "sklearn.model_selection.LeaveOneOut",
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_sample_weight": {
  "lineno": 102,
  "symbols_in_volume": [
   "numpy.linalg.norm",
   "numpy.random.RandomState",
   "sklearn.calibration.CalibratedClassifierCV",
   "sklearn.datasets.make_classification",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "sklearn.tests.test_calibration.test_sigmoid_calibration": {
  "lineno": 223,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.exp",
   "numpy.vstack",
   "sklearn.calibration._SigmoidCalibration",
   "sklearn.calibration._sigmoid_calibration",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_check_build": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.tests.test_check_build.test_raise_build_error": {
  "lineno": 13,
  "symbols_in_volume": [
   "sklearn.__check_build.raise_build_error",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_common": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.tests.test_common._sample_func": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_common._tested_estimators": {
  "lineno": 77,
  "symbols_in_volume": [
   "sklearn.base.BiclusterMixin",
   "sklearn.utils._testing.SkipTest",
   "sklearn.utils.all_estimators",
   "sklearn.utils.estimator_checks._construct_instance"
  ],
  "type": "function"
 },
 "sklearn.tests.test_common._tested_linear_classifiers": {
  "lineno": 151,
  "symbols_in_volume": [
   "sklearn.linear_model._base.LinearClassifierMixin",
   "sklearn.utils.all_estimators",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "sklearn.tests.test_common.test_all_estimator_no_base_class": {
  "lineno": 42,
  "symbols_in_volume": [
   "sklearn.utils.all_estimators"
  ],
  "type": "function"
 },
 "sklearn.tests.test_common.test_all_tests_are_importable": {
  "lineno": 202,
  "symbols_in_volume": [
   "pkgutil.walk_packages",
   "re.compile",
   "sklearn.__path__"
  ],
  "type": "function"
 },
 "sklearn.tests.test_common.test_check_estimator_generate_only": {
  "lineno": 99,
  "symbols_in_volume": [
   "inspect.isgenerator",
   "pytest.raises",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.utils._testing.SkipTest",
   "sklearn.utils.estimator_checks.check_estimator"
  ],
  "type": "function"
 },
 "sklearn.tests.test_common.test_class_weight_balanced_linear_classifiers": {
  "lineno": 166,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils.estimator_checks.check_class_weight_balanced_linear_classifier"
  ],
  "type": "function"
 },
 "sklearn.tests.test_common.test_configure": {
  "lineno": 121,
  "symbols_in_volume": [
   "os.chdir",
   "os.getcwd",
   "os.path.abspath",
   "os.path.exists",
   "os.path.join",
   "pytest.importorskip",
   "sklearn.__path__",
   "sklearn.utils._testing.ignore_warnings",
   "sys.argv",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.tests.test_common.test_estimators": {
  "lineno": 89,
  "symbols_in_volume": [
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.utils._testing.ignore_warnings",
   "sklearn.utils.estimator_checks._set_checking_parameters",
   "sklearn.utils.estimator_checks.parametrize_with_checks"
  ],
  "type": "function"
 },
 "sklearn.tests.test_common.test_import_all_consistency": {
  "lineno": 172,
  "symbols_in_volume": [
   "pkgutil.walk_packages",
   "sklearn.__path__",
   "sklearn.utils.IS_PYPY",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.tests.test_common.test_parameters_default_constructible": {
  "lineno": 50,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils.all_estimators",
   "sklearn.utils.estimator_checks.check_parameters_default_constructible"
  ],
  "type": "function"
 },
 "sklearn.tests.test_common.test_root_import_all_completeness": {
  "lineno": 193,
  "symbols_in_volume": [
   "pkgutil.walk_packages",
   "sklearn.__all__",
   "sklearn.__path__"
  ],
  "type": "function"
 },
 "sklearn.tests.test_common.test_set_check_estimator_ids": {
  "lineno": 63,
  "symbols_in_volume": [
   "functools.partial",
   "pytest.mark.parametrize",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.utils.estimator_checks._set_check_estimator_ids"
  ],
  "type": "function"
 },
 "sklearn.tests.test_config": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.tests.test_config.test_config_context": {
  "lineno": 5,
  "symbols_in_volume": [
   "sklearn.config_context",
   "sklearn.get_config",
   "sklearn.set_config",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_config.test_config_context_exception": {
  "lineno": 48,
  "symbols_in_volume": [
   "sklearn.config_context",
   "sklearn.get_config"
  ],
  "type": "function"
 },
 "sklearn.tests.test_config.test_set_config": {
  "lineno": 59,
  "symbols_in_volume": [
   "sklearn.get_config",
   "sklearn.set_config",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.c_",
   "numpy.zeros"
  ],
  "type": "module"
 },
 "sklearn.tests.test_discriminant_analysis.test_covariance": {
  "lineno": 476,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dot",
   "sklearn.datasets.make_blobs",
   "sklearn.discriminant_analysis._cov",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_coefs": {
  "lineno": 187,
  "symbols_in_volume": [
   "sklearn.datasets.make_blobs",
   "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_dimension_warning": {
  "lineno": 332,
  "symbols_in_volume": [
   "numpy.tile",
   "pytest.mark.parametrize",
   "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
   "sklearn.exceptions.ChangedBehaviorWarning",
   "sklearn.utils._testing.assert_no_warnings",
   "sklearn.utils._testing.assert_warns_message",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_dtype_match": {
  "lineno": 369,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "pytest.mark.parametrize",
   "sklearn.discriminant_analysis.LinearDiscriminantAnalysis"
  ],
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_explained_variance_ratio": {
  "lineno": 223,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_numeric_consistency_float32_float64": {
  "lineno": 382,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_orthogonality": {
  "lineno": 249,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.arange",
   "numpy.array",
   "numpy.cov",
   "numpy.dot",
   "numpy.eye",
   "numpy.newaxis.reshape",
   "numpy.repeat",
   "numpy.sqrt",
   "numpy.sum",
   "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_predict": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.exp",
   "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_predict_proba": {
  "lineno": 98,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.hstack",
   "numpy.newaxis",
   "numpy.sum",
   "pytest.approx",
   "pytest.mark.parametrize",
   "scipy.linalg.inv",
   "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_predict_proba.discriminant_func": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.exp"
  ],
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_predict_proba.generate_dataset": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.hstack",
   "numpy.vstack",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_priors": {
  "lineno": 167,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_raise_message",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_scaling": {
  "lineno": 282,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.vstack",
   "sklearn.discriminant_analysis.LinearDiscriminantAnalysis"
  ],
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_store_covariance": {
  "lineno": 300,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_lda_transform": {
  "lineno": 208,
  "symbols_in_volume": [
   "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_qda": {
  "lineno": 394,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.exp",
   "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_qda_priors": {
  "lineno": 420,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.sum",
   "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis"
  ],
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_qda_regularization": {
  "lineno": 453,
  "symbols_in_volume": [
   "numpy.any",
   "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_qda_store_covariance": {
  "lineno": 433,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_discriminant_analysis.test_raises_value_error_on_same_number_of_classes_and_samples": {
  "lineno": 490,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.discriminant_analysis.LinearDiscriminantAnalysis"
  ],
  "type": "function"
 },
 "sklearn.tests.test_docstring_parameters": {
  "lineno": null,
  "symbols_in_volume": [
   "pkgutil.walk_packages",
   "sklearn.__path__",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "module"
 },
 "sklearn.tests.test_docstring_parameters.test_docstring_parameters": {
  "lineno": 56,
  "symbols_in_volume": [
   "importlib.import_module",
   "inspect.getmembers",
   "inspect.isabstract",
   "inspect.isclass",
   "inspect.isfunction",
   "inspect.signature",
   "numpydoc.docscrape.ClassDoc",
   "pytest.mark.filterwarnings",
   "pytest.mark.skipif",
   "sklearn.utils.IS_PYPY",
   "sklearn.utils._testing.SkipTest",
   "sklearn.utils._testing._get_func_name",
   "sklearn.utils._testing.check_docstring_parameters",
   "sklearn.utils.deprecation._is_deprecated",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "sklearn.tests.test_docstring_parameters.test_tabs": {
  "lineno": 137,
  "symbols_in_volume": [
   "importlib.import_module",
   "inspect.getsource",
   "pkgutil.walk_packages",
   "sklearn.__path__",
   "sklearn.externals._pep562.Pep562",
   "sklearn.utils.IS_PYPY",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.tests.test_dummy._check_behavior_2d": {
  "lineno": 45,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.base.clone"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy._check_behavior_2d_for_constant": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.base.clone"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy._check_equality_regressor": {
  "lineno": 78,
  "symbols_in_volume": [
   "numpy.tile",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy._check_predict_proba": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.atleast_1d",
   "numpy.log",
   "numpy.ones",
   "numpy.reshape",
   "numpy.unique",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_classification_sample_weight": {
  "lineno": 565,
  "symbols_in_volume": [
   "sklearn.dummy.DummyClassifier",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_classifier_exceptions": {
  "lineno": 258,
  "symbols_in_volume": [
   "sklearn.dummy.DummyClassifier",
   "sklearn.exceptions.NotFittedError",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_classifier_prediction_independent_of_X": {
  "lineno": 236,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.dummy.DummyClassifier",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_classifier_score_with_None": {
  "lineno": 219,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "sklearn.dummy.DummyClassifier"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_constant_size_multioutput_regressor": {
  "lineno": 493,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.dummy.DummyRegressor",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_constant_strategy": {
  "lineno": 502,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "sklearn.dummy.DummyClassifier",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_constant_strategy_exceptions": {
  "lineno": 537,
  "symbols_in_volume": [
   "numpy.transpose",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.dummy.DummyClassifier"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_constant_strategy_multioutput": {
  "lineno": 519,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.hstack",
   "numpy.ones",
   "numpy.zeros",
   "sklearn.dummy.DummyClassifier",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_constant_strategy_multioutput_regressor": {
  "lineno": 443,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.dummy.DummyRegressor"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_constant_strategy_regressor": {
  "lineno": 427,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.dummy.DummyRegressor",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_constant_strategy_sparse_target": {
  "lineno": 574,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.hstack",
   "numpy.ones",
   "numpy.zeros",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.issparse",
   "sklearn.dummy.DummyClassifier",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_constants_not_specified_regressor": {
  "lineno": 485,
  "symbols_in_volume": [
   "sklearn.dummy.DummyRegressor",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_dtype_of_classifier_probas": {
  "lineno": 748,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.zeros",
   "pytest.mark.parametrize",
   "sklearn.dummy.DummyClassifier"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_dummy_classifier_on_3D_array": {
  "lineno": 685,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.dummy.DummyClassifier",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_dummy_regressor_on_3D_array": {
  "lineno": 675,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.dummy.DummyRegressor",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_dummy_regressor_return_std": {
  "lineno": 698,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.dummy.DummyRegressor",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_dummy_regressor_sample_weight": {
  "lineno": 657,
  "symbols_in_volume": [
   "numpy.average",
   "numpy.random.RandomState",
   "sklearn.dummy.DummyRegressor",
   "sklearn.utils.stats._weighted_percentile"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_mean_strategy_multioutput_regressor": {
  "lineno": 278,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.random.RandomState",
   "sklearn.dummy.DummyRegressor"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_mean_strategy_regressor": {
  "lineno": 266,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.random.RandomState",
   "sklearn.dummy.DummyRegressor",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_median_strategy_multioutput_regressor": {
  "lineno": 317,
  "symbols_in_volume": [
   "numpy.median",
   "numpy.random.RandomState",
   "sklearn.dummy.DummyRegressor"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_median_strategy_regressor": {
  "lineno": 305,
  "symbols_in_volume": [
   "numpy.median",
   "numpy.random.RandomState",
   "sklearn.dummy.DummyRegressor",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_most_frequent_and_prior_strategy": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.ones",
   "sklearn.dummy.DummyClassifier",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_most_frequent_and_prior_strategy_multioutput": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.hstack",
   "numpy.ones",
   "numpy.zeros",
   "sklearn.dummy.DummyClassifier",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_most_frequent_and_prior_strategy_sparse_target": {
  "lineno": 638,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.hstack",
   "numpy.ones",
   "numpy.zeros",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.issparse",
   "sklearn.dummy.DummyClassifier",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_most_frequent_and_prior_strategy_with_2d_column_y": {
  "lineno": 104,
  "symbols_in_volume": [
   "sklearn.dummy.DummyClassifier",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_outputs_2d_deprecation": {
  "lineno": 760,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.warns",
   "sklearn.dummy.DummyClassifier",
   "sklearn.dummy.DummyRegressor"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_quantile_invalid": {
  "lineno": 398,
  "symbols_in_volume": [
   "sklearn.dummy.DummyRegressor",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_quantile_strategy_empty_train": {
  "lineno": 422,
  "symbols_in_volume": [
   "sklearn.dummy.DummyRegressor",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_quantile_strategy_multioutput_regressor": {
  "lineno": 364,
  "symbols_in_volume": [
   "numpy.median",
   "numpy.percentile",
   "numpy.random.RandomState",
   "sklearn.dummy.DummyRegressor"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_quantile_strategy_regressor": {
  "lineno": 340,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.median",
   "numpy.min",
   "numpy.percentile",
   "numpy.random.RandomState",
   "sklearn.dummy.DummyRegressor",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_regressor_exceptions": {
  "lineno": 300,
  "symbols_in_volume": [
   "sklearn.dummy.DummyRegressor",
   "sklearn.exceptions.NotFittedError",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_regressor_prediction_independent_of_X": {
  "lineno": 727,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.dummy.DummyRegressor",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_regressor_score_with_None": {
  "lineno": 711,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize",
   "sklearn.dummy.DummyRegressor"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_strategy_stratified_deprecated_for_prior": {
  "lineno": 770,
  "symbols_in_volume": [
   "pytest.warns",
   "sklearn.dummy.DummyClassifier"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_stratified_strategy": {
  "lineno": 139,
  "symbols_in_volume": [
   "numpy.bincount",
   "sklearn.dummy.DummyClassifier",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_stratified_strategy_multioutput": {
  "lineno": 153,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bincount",
   "sklearn.dummy.DummyClassifier",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_stratified_strategy_sparse_target": {
  "lineno": 615,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bincount",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.issparse",
   "sklearn.dummy.DummyClassifier",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_string_labels": {
  "lineno": 211,
  "symbols_in_volume": [
   "sklearn.dummy.DummyClassifier",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_uniform_strategy": {
  "lineno": 176,
  "symbols_in_volume": [
   "numpy.bincount",
   "sklearn.dummy.DummyClassifier",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_uniform_strategy_multioutput": {
  "lineno": 190,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bincount",
   "sklearn.dummy.DummyClassifier",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_uniform_strategy_sparse_target_warning": {
  "lineno": 592,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bincount",
   "scipy.sparse.csc_matrix",
   "sklearn.dummy.DummyClassifier",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_unknown_strategey_regressor": {
  "lineno": 477,
  "symbols_in_volume": [
   "sklearn.dummy.DummyRegressor",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_dummy.test_y_mean_attribute_regressor": {
  "lineno": 467,
  "symbols_in_volume": [
   "numpy.mean",
   "sklearn.dummy.DummyRegressor"
  ],
  "type": "function"
 },
 "sklearn.tests.test_import_deprecations": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.tests.test_import_deprecations.test_import_is_deprecated": {
  "lineno": 15,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.skip",
   "sklearn._build_utils.deprecated_modules._DEPRECATED_MODULES",
   "sklearn.utils._testing.assert_run_python_script",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "sklearn.tests.test_init": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.tests.test_init.test_import_skl": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_isotonic": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.tests.test_isotonic.test_assert_raises_exceptions": {
  "lineno": 243,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.isotonic.IsotonicRegression",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_check_ci_warn": {
  "lineno": 79,
  "symbols_in_volume": [
   "sklearn.isotonic.check_increasing",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_check_increasing_down": {
  "lineno": 61,
  "symbols_in_volume": [
   "sklearn.isotonic.check_increasing",
   "sklearn.utils._testing.assert_no_warnings"
  ],
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_check_increasing_down_extreme": {
  "lineno": 70,
  "symbols_in_volume": [
   "sklearn.isotonic.check_increasing",
   "sklearn.utils._testing.assert_no_warnings"
  ],
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_check_increasing_small_number_of_samples": {
  "lineno": 35,
  "symbols_in_volume": [
   "sklearn.isotonic.check_increasing",
   "sklearn.utils._testing.assert_no_warnings"
  ],
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_check_increasing_up": {
  "lineno": 43,
  "symbols_in_volume": [
   "sklearn.isotonic.check_increasing",
   "sklearn.utils._testing.assert_no_warnings"
  ],
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_check_increasing_up_extreme": {
  "lineno": 52,
  "symbols_in_volume": [
   "sklearn.isotonic.check_increasing",
   "sklearn.utils._testing.assert_no_warnings"
  ],
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_fast_predict": {
  "lineno": 427,
  "symbols_in_volume": [
   "numpy.less",
   "numpy.random.RandomState",
   "scipy.special.expit",
   "sklearn.isotonic.IsotonicRegression",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_copy_before_fit": {
  "lineno": 463,
  "symbols_in_volume": [
   "copy.copy",
   "sklearn.isotonic.IsotonicRegression"
  ],
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_dtype": {
  "lineno": 469,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "sklearn.isotonic.IsotonicRegression",
   "sklearn.isotonic.isotonic_regression",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_duplicate_min_entry": {
  "lineno": 372,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.isfinite",
   "sklearn.isotonic.IsotonicRegression"
  ],
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_min_max_boundaries": {
  "lineno": 268,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.round",
   "sklearn.isotonic.IsotonicRegression",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_mismatched_dtype": {
  "lineno": 490,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "pytest.mark.parametrize",
   "sklearn.isotonic.IsotonicRegression"
  ],
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.mean",
   "numpy.ones",
   "numpy.random.permutation",
   "sklearn.isotonic.IsotonicRegression",
   "sklearn.isotonic.isotonic_regression",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_auto_decreasing": {
  "lineno": 205,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "sklearn.isotonic.IsotonicRegression",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_auto_increasing": {
  "lineno": 224,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "sklearn.isotonic.IsotonicRegression",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_oob_bad": {
  "lineno": 333,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "sklearn.isotonic.IsotonicRegression",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_oob_bad_after": {
  "lineno": 345,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "sklearn.isotonic.IsotonicRegression",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_oob_clip": {
  "lineno": 303,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "sklearn.isotonic.IsotonicRegression"
  ],
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_oob_nan": {
  "lineno": 319,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.isnan",
   "sklearn.isotonic.IsotonicRegression"
  ],
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_oob_raise": {
  "lineno": 290,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "sklearn.isotonic.IsotonicRegression",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_pickle": {
  "lineno": 359,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "pickle.HIGHEST_PROTOCOL",
   "pickle.dumps",
   "pickle.loads",
   "sklearn.isotonic.IsotonicRegression"
  ],
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_reversed": {
  "lineno": 198,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.ones",
   "sklearn.isotonic.IsotonicRegression",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_ties_max": {
  "lineno": 131,
  "symbols_in_volume": [
   "sklearn.isotonic.IsotonicRegression",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_ties_min": {
  "lineno": 118,
  "symbols_in_volume": [
   "sklearn.isotonic.IsotonicRegression",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_ties_secondary_": {
  "lineno": 144,
  "symbols_in_volume": [
   "sklearn.isotonic.IsotonicRegression",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_regression_with_ties_in_differently_sized_groups": {
  "lineno": 174,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.isotonic.IsotonicRegression",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_sample_weight": {
  "lineno": 279,
  "symbols_in_volume": [
   "sklearn.isotonic.IsotonicRegression",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_sample_weight_parameter_default_value": {
  "lineno": 252,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.log",
   "numpy.ones",
   "numpy.random.RandomState",
   "sklearn.isotonic.IsotonicRegression",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_ymin_ymax": {
  "lineno": 382,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "sklearn.isotonic.isotonic_regression"
  ],
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_isotonic_zero_weight_loop": {
  "lineno": 405,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.random.RandomState",
   "sklearn.isotonic.IsotonicRegression"
  ],
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_make_unique_dtype": {
  "lineno": 503,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.ones_like",
   "sklearn.isotonic._make_unique",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_isotonic.test_permutation_invariance": {
  "lineno": 20,
  "symbols_in_volume": [
   "sklearn.isotonic.IsotonicRegression",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils.shuffle"
  ],
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.newaxis",
   "numpy.random.RandomState"
  ],
  "type": "module"
 },
 "sklearn.tests.test_kernel_approximation.test_additive_chi2_sampler": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.newaxis",
   "scipy.sparse.csr_matrix",
   "sklearn.kernel_approximation.AdditiveChi2Sampler",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_input_validation": {
  "lineno": 140,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "sklearn.kernel_approximation.AdditiveChi2Sampler",
   "sklearn.kernel_approximation.RBFSampler",
   "sklearn.kernel_approximation.SkewedChi2Sampler"
  ],
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_nystroem_approximation": {
  "lineno": 152,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.random.RandomState",
   "sklearn.kernel_approximation.Nystroem",
   "sklearn.metrics.pairwise.kernel_metrics",
   "sklearn.metrics.pairwise.rbf_kernel",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_nystroem_approximation.linear_kernel": {
  "lineno": 167,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_nystroem_callable": {
  "lineno": 229,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.raises",
   "sklearn.kernel_approximation.Nystroem"
  ],
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_nystroem_callable.linear_kernel": {
  "lineno": 247,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_nystroem_callable.logging_histogram_kernel": {
  "lineno": 235,
  "symbols_in_volume": [
   "numpy.minimum"
  ],
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_nystroem_default_parameters": {
  "lineno": 181,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.random.RandomState",
   "sklearn.kernel_approximation.Nystroem",
   "sklearn.metrics.pairwise.chi2_kernel",
   "sklearn.metrics.pairwise.rbf_kernel",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_nystroem_poly_kernel_params": {
  "lineno": 217,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.random.RandomState",
   "sklearn.kernel_approximation.Nystroem",
   "sklearn.metrics.pairwise.polynomial_kernel",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_nystroem_precomputed_kernel": {
  "lineno": 259,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.random.RandomState",
   "pytest.raises",
   "sklearn.kernel_approximation.Nystroem",
   "sklearn.metrics.pairwise.polynomial_kernel",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_nystroem_singular_kernel": {
  "lineno": 201,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.dot",
   "numpy.isfinite",
   "numpy.random.RandomState",
   "numpy.vstack",
   "sklearn.kernel_approximation.Nystroem",
   "sklearn.metrics.pairwise.rbf_kernel",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_rbf_sampler": {
  "lineno": 121,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.dot",
   "numpy.max",
   "numpy.mean",
   "sklearn.kernel_approximation.RBFSampler",
   "sklearn.metrics.pairwise.rbf_kernel"
  ],
  "type": "function"
 },
 "sklearn.tests.test_kernel_approximation.test_skewed_chi2_sampler": {
  "lineno": 81,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.exp",
   "numpy.isfinite",
   "numpy.log",
   "numpy.newaxis",
   "sklearn.kernel_approximation.SkewedChi2Sampler",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_kernel_ridge": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.datasets.make_regression"
  ],
  "type": "module"
 },
 "sklearn.tests.test_kernel_ridge.test_kernel_ridge": {
  "lineno": 19,
  "symbols_in_volume": [
   "sklearn.kernel_ridge.KernelRidge",
   "sklearn.linear_model.Ridge",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_kernel_ridge.test_kernel_ridge_csc": {
  "lineno": 32,
  "symbols_in_volume": [
   "sklearn.kernel_ridge.KernelRidge",
   "sklearn.linear_model.Ridge",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_kernel_ridge.test_kernel_ridge_csr": {
  "lineno": 25,
  "symbols_in_volume": [
   "sklearn.kernel_ridge.KernelRidge",
   "sklearn.linear_model.Ridge",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_kernel_ridge.test_kernel_ridge_multi_output": {
  "lineno": 78,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.kernel_ridge.KernelRidge",
   "sklearn.linear_model.Ridge",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_kernel_ridge.test_kernel_ridge_precomputed": {
  "lineno": 49,
  "symbols_in_volume": [
   "sklearn.kernel_ridge.KernelRidge",
   "sklearn.metrics.pairwise.pairwise_kernels",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_kernel_ridge.test_kernel_ridge_precomputed_kernel_unchanged": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.dot",
   "sklearn.kernel_ridge.KernelRidge",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_kernel_ridge.test_kernel_ridge_sample_weights": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.random.RandomState",
   "sklearn.kernel_ridge.KernelRidge",
   "sklearn.linear_model.Ridge",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_kernel_ridge.test_kernel_ridge_singular_kernel": {
  "lineno": 39,
  "symbols_in_volume": [
   "sklearn.kernel_ridge.KernelRidge",
   "sklearn.linear_model.Ridge",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.tests.test_metaestimators": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.ensemble.BaggingClassifier",
   "sklearn.feature_selection.RFE",
   "sklearn.feature_selection.RFECV",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.model_selection.RandomizedSearchCV",
   "sklearn.pipeline.Pipeline"
  ],
  "type": "module"
 },
 "sklearn.tests.test_metaestimators.DelegatorData": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.tests.test_metaestimators.DelegatorData.__init__": {
  "lineno": 19,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification"
  ],
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation": {
  "lineno": 48,
  "symbols_in_volume": [
   "sklearn.exceptions.NotFittedError",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator": {
  "lineno": 58,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.__init__": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator._check_fit": {
  "lineno": 67,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.decision_function": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.fit": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.inverse_transform": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.predict": {
  "lineno": 80,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.predict_log_proba": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.predict_proba": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.score": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.transform": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.hides": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_metaestimators.test_metaestimator_delegation.hides.wrapper": {
  "lineno": 51,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.datasets.load_iris"
  ],
  "type": "module"
 },
 "sklearn.tests.test_multiclass.test_check_classification_targets": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.utils._testing.assert_raise_message",
   "sklearn.utils.multiclass.check_classification_targets",
   "sklearn.utils.multiclass.type_of_target"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ecoc_exceptions": {
  "lineno": 676,
  "symbols_in_volume": [
   "sklearn.multiclass.OutputCodeClassifier",
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ecoc_fit_predict": {
  "lineno": 681,
  "symbols_in_volume": [
   "sklearn.multiclass.OutputCodeClassifier",
   "sklearn.naive_bayes.MultinomialNB",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ecoc_float_y": {
  "lineno": 704,
  "symbols_in_volume": [
   "sklearn.multiclass.OutputCodeClassifier",
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ecoc_gridsearch": {
  "lineno": 694,
  "symbols_in_volume": [
   "sklearn.model_selection.GridSearchCV",
   "sklearn.multiclass.OutputCodeClassifier",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_decision_function": {
  "lineno": 549,
  "symbols_in_volume": [
   "numpy.round",
   "numpy.unique",
   "numpy.zeros",
   "sklearn.multiclass.OneVsOneClassifier",
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_exceptions": {
  "lineno": 470,
  "symbols_in_volume": [
   "sklearn.multiclass.OneVsOneClassifier",
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_fit_on_list": {
  "lineno": 475,
  "symbols_in_volume": [
   "sklearn.multiclass.OneVsOneClassifier",
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_fit_predict": {
  "lineno": 486,
  "symbols_in_volume": [
   "sklearn.multiclass.OneVsOneClassifier",
   "sklearn.naive_bayes.MultinomialNB",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_float_y": {
  "lineno": 667,
  "symbols_in_volume": [
   "sklearn.multiclass.OneVsOneClassifier",
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_gridsearch": {
  "lineno": 596,
  "symbols_in_volume": [
   "sklearn.model_selection.GridSearchCV",
   "sklearn.multiclass.OneVsOneClassifier",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_one_class": {
  "lineno": 658,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.eye",
   "sklearn.multiclass.OneVsOneClassifier",
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_partial_fit_predict": {
  "lineno": 498,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.random.rand",
   "numpy.unique",
   "re.escape",
   "sklearn.datasets.load_iris",
   "sklearn.multiclass.OneVsOneClassifier",
   "sklearn.naive_bayes.MultinomialNB",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_raises_regexp"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_string_y": {
  "lineno": 648,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.eye",
   "sklearn.multiclass.OneVsOneClassifier",
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_ties": {
  "lineno": 606,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.array",
   "numpy.round",
   "pytest.mark.filterwarnings",
   "sklearn.linear_model.Perceptron",
   "sklearn.multiclass.OneVsOneClassifier",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovo_ties2": {
  "lineno": 633,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.filterwarnings",
   "sklearn.linear_model.Perceptron",
   "sklearn.multiclass.OneVsOneClassifier"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_always_present": {
  "lineno": 187,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "numpy.unique",
   "numpy.zeros",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.multiclass.OneVsRestClassifier",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_binary": {
  "lineno": 244,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.linear_model.ElasticNet",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.linear_model.Ridge",
   "sklearn.naive_bayes.MultinomialNB",
   "sklearn.svm.LinearSVC",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_binary.conduct_test": {
  "lineno": 252,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.array",
   "sklearn.multiclass.OneVsRestClassifier",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_coef_": {
  "lineno": 441,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "scipy.sparse.issparse",
   "sklearn.multiclass.OneVsRestClassifier",
   "sklearn.svm.LinearSVC",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_coef_exceptions": {
  "lineno": 458,
  "symbols_in_volume": [
   "sklearn.multiclass.OneVsRestClassifier",
   "sklearn.svm.LinearSVC",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_exceptions": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.multiclass.OneVsRestClassifier",
   "sklearn.naive_bayes.MultinomialNB",
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_fit_predict": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.mean",
   "sklearn.multiclass.OneVsRestClassifier",
   "sklearn.naive_bayes.MultinomialNB",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_fit_predict_sparse": {
  "lineno": 146,
  "symbols_in_volume": [
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.dok_matrix",
   "scipy.sparse.issparse",
   "scipy.sparse.lil_matrix",
   "sklearn.datasets.make_multilabel_classification",
   "sklearn.multiclass.OneVsRestClassifier",
   "sklearn.naive_bayes.MultinomialNB",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_fit_predict_svc": {
  "lineno": 300,
  "symbols_in_volume": [
   "sklearn.multiclass.OneVsRestClassifier",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_gridsearch": {
  "lineno": 420,
  "symbols_in_volume": [
   "sklearn.model_selection.GridSearchCV",
   "sklearn.multiclass.OneVsRestClassifier",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_multiclass": {
  "lineno": 218,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.linear_model.ElasticNet",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.Ridge",
   "sklearn.multiclass.OneVsRestClassifier",
   "sklearn.naive_bayes.MultinomialNB",
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_multilabel": {
  "lineno": 282,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.linear_model.ElasticNet",
   "sklearn.linear_model.Lasso",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.Ridge",
   "sklearn.multiclass.OneVsRestClassifier",
   "sklearn.naive_bayes.MultinomialNB",
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_multilabel_dataset": {
  "lineno": 307,
  "symbols_in_volume": [
   "sklearn.datasets.make_multilabel_classification",
   "sklearn.metrics.precision_score",
   "sklearn.metrics.recall_score",
   "sklearn.multiclass.OneVsRestClassifier",
   "sklearn.naive_bayes.MultinomialNB",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_multilabel_decision_function": {
  "lineno": 394,
  "symbols_in_volume": [
   "sklearn.datasets.make_multilabel_classification",
   "sklearn.multiclass.OneVsRestClassifier",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_multilabel_predict_proba": {
  "lineno": 331,
  "symbols_in_volume": [
   "sklearn.datasets.make_multilabel_classification",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.multiclass.OneVsRestClassifier",
   "sklearn.naive_bayes.MultinomialNB",
   "sklearn.svm.SVC",
   "sklearn.svm.SVR",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_ovo_regressor": {
  "lineno": 128,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.unique",
   "sklearn.multiclass.OneVsOneClassifier",
   "sklearn.multiclass.OneVsRestClassifier",
   "sklearn.tree.DecisionTreeRegressor",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_partial_fit": {
  "lineno": 80,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.mean",
   "numpy.random.randn",
   "numpy.unique",
   "pytest.mark.filterwarnings",
   "sklearn.linear_model.SGDClassifier",
   "sklearn.multiclass.OneVsRestClassifier",
   "sklearn.naive_bayes.MultinomialNB",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils.shuffle"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_partial_fit_exceptions": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.random.randn",
   "numpy.unique",
   "sklearn.multiclass.OneVsRestClassifier",
   "sklearn.naive_bayes.MultinomialNB",
   "sklearn.utils._testing.assert_raises_regexp"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_pipeline": {
  "lineno": 429,
  "symbols_in_volume": [
   "sklearn.multiclass.OneVsRestClassifier",
   "sklearn.pipeline.Pipeline",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_single_label_decision_function": {
  "lineno": 409,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification",
   "sklearn.multiclass.OneVsRestClassifier",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_ovr_single_label_predict_proba": {
  "lineno": 373,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.multiclass.OneVsRestClassifier",
   "sklearn.naive_bayes.MultinomialNB",
   "sklearn.svm.SVR",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_pairwise_attribute": {
  "lineno": 732,
  "symbols_in_volume": [
   "sklearn.multiclass.OneVsOneClassifier",
   "sklearn.multiclass.OneVsRestClassifier",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_pairwise_cross_val_score": {
  "lineno": 744,
  "symbols_in_volume": [
   "numpy.dot",
   "sklearn.model_selection.cross_val_score",
   "sklearn.multiclass.OneVsOneClassifier",
   "sklearn.multiclass.OneVsRestClassifier",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multiclass.test_pairwise_indices": {
  "lineno": 716,
  "symbols_in_volume": [
   "numpy.dot",
   "sklearn.multiclass.OneVsOneClassifier",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multioutput": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.column_stack",
   "numpy.unique",
   "sklearn.datasets.load_iris",
   "sklearn.utils.shuffle"
  ],
  "type": "module"
 },
 "sklearn.tests.test_multioutput.generate_multilabel_dataset_with_correlations": {
  "lineno": 409,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.datasets.make_classification"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_base_chain_crossval_fit_and_predict": {
  "lineno": 529,
  "symbols_in_volume": [
   "numpy.all",
   "sklearn.base.clone",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.linear_model.Ridge",
   "sklearn.metrics.jaccard_score",
   "sklearn.metrics.mean_squared_error",
   "sklearn.multioutput.ClassifierChain",
   "sklearn.multioutput.RegressorChain"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_base_chain_fit_and_predict": {
  "lineno": 478,
  "symbols_in_volume": [
   "sklearn.base.ClassifierMixin",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.linear_model.Ridge",
   "sklearn.multioutput.ClassifierChain",
   "sklearn.multioutput.RegressorChain",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_base_chain_fit_and_predict_with_sparse_data_and_cv": {
  "lineno": 497,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.linear_model.Ridge",
   "sklearn.multioutput.ClassifierChain",
   "sklearn.multioutput.RegressorChain"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_base_chain_random_order": {
  "lineno": 509,
  "symbols_in_volume": [
   "sklearn.base.clone",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.linear_model.Ridge",
   "sklearn.multioutput.ClassifierChain",
   "sklearn.multioutput.RegressorChain",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_classifier_chain_fit_and_predict_with_linear_svc": {
  "lineno": 424,
  "symbols_in_volume": [
   "sklearn.multioutput.ClassifierChain",
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_classifier_chain_fit_and_predict_with_sparse_data": {
  "lineno": 440,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.multioutput.ClassifierChain",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_classifier_chain_vs_independent_models": {
  "lineno": 456,
  "symbols_in_volume": [
   "sklearn.linear_model.LogisticRegression",
   "sklearn.metrics.jaccard_score",
   "sklearn.multiclass.OneVsRestClassifier",
   "sklearn.multioutput.ClassifierChain"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_deprecation": {
  "lineno": 568,
  "symbols_in_volume": [
   "pytest.warns",
   "sklearn.linear_model.SGDRegressor"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_deprecation.A": {
  "lineno": 569,
  "symbols_in_volume": [
   "sklearn.multioutput.MultiOutputEstimator",
   "sklearn.multioutput.MultiOutputRegressor"
  ],
  "type": "class"
 },
 "sklearn.tests.test_multioutput.test_hasattr_multi_output_predict_proba": {
  "lineno": 179,
  "symbols_in_volume": [
   "sklearn.linear_model.SGDClassifier",
   "sklearn.multioutput.MultiOutputClassifier"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_output_classes_": {
  "lineno": 550,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.multioutput.ClassifierChain",
   "sklearn.multioutput.MultiOutputClassifier",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_output_classification": {
  "lineno": 265,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.dstack",
   "sklearn.base.clone",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.multioutput.MultiOutputClassifier",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_output_classification_partial_fit": {
  "lineno": 223,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "sklearn.base.clone",
   "sklearn.linear_model.SGDClassifier",
   "sklearn.multioutput.MultiOutputClassifier",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_output_classification_partial_fit_no_first_classes_exception": {
  "lineno": 256,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "sklearn.linear_model.SGDClassifier",
   "sklearn.multioutput.MultiOutputClassifier",
   "sklearn.utils._testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_output_classification_partial_fit_parallelism": {
  "lineno": 166,
  "symbols_in_volume": [
   "joblib.cpu_count",
   "sklearn.linear_model.SGDClassifier",
   "sklearn.multioutput.MultiOutputClassifier"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_output_classification_partial_fit_sample_weights": {
  "lineno": 372,
  "symbols_in_volume": [
   "numpy.asarray",
   "pytest.mark.filterwarnings",
   "sklearn.linear_model.SGDClassifier",
   "sklearn.multioutput.MultiOutputClassifier",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_output_classification_sample_weights": {
  "lineno": 351,
  "symbols_in_volume": [
   "numpy.asarray",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.multioutput.MultiOutputClassifier",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_output_exceptions": {
  "lineno": 392,
  "symbols_in_volume": [
   "numpy.column_stack",
   "pytest.raises",
   "sklearn.exceptions.NotFittedError",
   "sklearn.multioutput.MultiOutputClassifier",
   "sklearn.svm.LinearSVC",
   "sklearn.utils._testing.assert_raise_message",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_output_predict_proba": {
  "lineno": 195,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.linear_model.SGDClassifier",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.multioutput.MultiOutputClassifier"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_output_predict_proba.custom_scorer": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_target_regression": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.zeros_like",
   "sklearn.datasets.make_regression",
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.multioutput.MultiOutputRegressor",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_target_regression_one_target": {
  "lineno": 78,
  "symbols_in_volume": [
   "sklearn.datasets.make_regression",
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.multioutput.MultiOutputRegressor",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_target_regression_partial_fit": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.zeros_like",
   "pytest.mark.filterwarnings",
   "sklearn.datasets.make_regression",
   "sklearn.linear_model.Lasso",
   "sklearn.linear_model.SGDRegressor",
   "sklearn.multioutput.MultiOutputRegressor",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_target_sample_weight_partial_fit": {
  "lineno": 117,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "sklearn.linear_model.SGDRegressor",
   "sklearn.multioutput.MultiOutputRegressor"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_target_sample_weights": {
  "lineno": 134,
  "symbols_in_volume": [
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.multioutput.MultiOutputRegressor",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_target_sample_weights_api": {
  "lineno": 102,
  "symbols_in_volume": [
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.linear_model.Lasso",
   "sklearn.multioutput.MultiOutputRegressor",
   "sklearn.utils._testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multi_target_sparse_regression": {
  "lineno": 85,
  "symbols_in_volume": [
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.dok_matrix",
   "scipy.sparse.lil_matrix",
   "sklearn.datasets.make_regression",
   "sklearn.linear_model.Lasso",
   "sklearn.multioutput.MultiOutputRegressor",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multiclass_multioutput_estimator": {
  "lineno": 296,
  "symbols_in_volume": [
   "sklearn.base.clone",
   "sklearn.multiclass.OneVsRestClassifier",
   "sklearn.multioutput.MultiOutputClassifier",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "sklearn.tests.test_multioutput.test_multiclass_multioutput_estimator_predict_proba": {
  "lineno": 315,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.concatenate",
   "numpy.random.RandomState",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.multioutput.MultiOutputClassifier",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int",
   "numpy.random.RandomState"
  ],
  "type": "module"
 },
 "sklearn.tests.test_naive_bayes.test_alpha": {
  "lineno": 698,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.naive_bayes.BernoulliNB",
   "sklearn.naive_bayes.CategoricalNB",
   "sklearn.naive_bayes.MultinomialNB",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_raise_message",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_alpha_vector": {
  "lineno": 751,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.log",
   "sklearn.naive_bayes.MultinomialNB",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_bnb": {
  "lineno": 516,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.exp",
   "numpy.sum",
   "sklearn.naive_bayes.BernoulliNB",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_bnb_feature_log_prob": {
  "lineno": 562,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.log",
   "numpy.tile",
   "sklearn.naive_bayes.BernoulliNB",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_categoricalnb": {
  "lineno": 651,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.naive_bayes.CategoricalNB",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_check_accuracy_on_digits": {
  "lineno": 793,
  "symbols_in_volume": [
   "numpy.logical_or",
   "sklearn.datasets.load_digits",
   "sklearn.model_selection.cross_val_score",
   "sklearn.naive_bayes.BernoulliNB",
   "sklearn.naive_bayes.GaussianNB",
   "sklearn.naive_bayes.MultinomialNB"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_cnb": {
  "lineno": 585,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.log",
   "numpy.zeros",
   "sklearn.naive_bayes.ComplementNB",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_deprecations": {
  "lineno": 827,
  "symbols_in_volume": [
   "pytest.warns"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_deprecations.A": {
  "lineno": 829,
  "symbols_in_volume": [
   "sklearn.naive_bayes.BaseNB",
   "sklearn.naive_bayes.GaussianNB"
  ],
  "type": "class"
 },
 "sklearn.tests.test_naive_bayes.test_deprecations.B": {
  "lineno": 832,
  "symbols_in_volume": [
   "sklearn.naive_bayes.BaseDiscreteNB",
   "sklearn.naive_bayes.CategoricalNB"
  ],
  "type": "class"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_coef_intercept_shape": {
  "lineno": 413,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.naive_bayes.BernoulliNB",
   "sklearn.naive_bayes.MultinomialNB"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_input_check_fit": {
  "lineno": 276,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.naive_bayes.BernoulliNB",
   "sklearn.naive_bayes.CategoricalNB",
   "sklearn.naive_bayes.GaussianNB",
   "sklearn.naive_bayes.MultinomialNB",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_input_check_partial_fit": {
  "lineno": 289,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.unique",
   "pytest.mark.parametrize",
   "sklearn.naive_bayes.BernoulliNB",
   "sklearn.naive_bayes.CategoricalNB",
   "sklearn.naive_bayes.MultinomialNB",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_partial_fit": {
  "lineno": 205,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.sum",
   "pytest.mark.parametrize",
   "sklearn.naive_bayes.BernoulliNB",
   "sklearn.naive_bayes.CategoricalNB",
   "sklearn.naive_bayes.MultinomialNB",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_pickle": {
  "lineno": 253,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.unique",
   "pickle.dump",
   "pickle.load",
   "pytest.mark.parametrize",
   "sklearn.naive_bayes.BernoulliNB",
   "sklearn.naive_bayes.CategoricalNB",
   "sklearn.naive_bayes.GaussianNB",
   "sklearn.naive_bayes.MultinomialNB",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_predict_proba": {
  "lineno": 311,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.exp",
   "numpy.sum",
   "sklearn.naive_bayes.BernoulliNB",
   "sklearn.naive_bayes.MultinomialNB",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_prior": {
  "lineno": 197,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.log",
   "pytest.mark.parametrize",
   "sklearn.naive_bayes.BernoulliNB",
   "sklearn.naive_bayes.CategoricalNB",
   "sklearn.naive_bayes.MultinomialNB",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_provide_prior": {
  "lineno": 354,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.exp",
   "pytest.mark.parametrize",
   "sklearn.naive_bayes.BernoulliNB",
   "sklearn.naive_bayes.CategoricalNB",
   "sklearn.naive_bayes.MultinomialNB",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_provide_prior_with_partial_fit": {
  "lineno": 369,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.datasets.load_iris",
   "sklearn.model_selection.train_test_split",
   "sklearn.naive_bayes.BernoulliNB",
   "sklearn.naive_bayes.CategoricalNB",
   "sklearn.naive_bayes.MultinomialNB",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_sample_weight_multiclass": {
  "lineno": 389,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "pytest.mark.parametrize",
   "sklearn.naive_bayes.BernoulliNB",
   "sklearn.naive_bayes.CategoricalNB",
   "sklearn.naive_bayes.MultinomialNB",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_discretenb_uniform_prior": {
  "lineno": 342,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.exp",
   "pytest.mark.parametrize",
   "sklearn.naive_bayes.BernoulliNB",
   "sklearn.naive_bayes.CategoricalNB",
   "sklearn.naive_bayes.MultinomialNB",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.log",
   "sklearn.naive_bayes.GaussianNB",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_check_update_with_no_data": {
  "lineno": 150,
  "symbols_in_volume": [
   "numpy.empty",
   "sklearn.naive_bayes.GaussianNB._update_mean_variance"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_naive_bayes_scale_invariance": {
  "lineno": 187,
  "symbols_in_volume": [
   "sklearn.datasets.load_iris",
   "sklearn.naive_bayes.GaussianNB",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_neg_priors": {
  "lineno": 103,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.naive_bayes.GaussianNB",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_partial_fit": {
  "lineno": 173,
  "symbols_in_volume": [
   "numpy.unique",
   "sklearn.naive_bayes.GaussianNB",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_pfit_wrong_nb_features": {
  "lineno": 163,
  "symbols_in_volume": [
   "numpy.hstack",
   "sklearn.naive_bayes.GaussianNB",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_prior": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.naive_bayes.GaussianNB",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_prior_greater_one": {
  "lineno": 137,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.naive_bayes.GaussianNB",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_prior_large_bias": {
  "lineno": 143,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.naive_bayes.GaussianNB"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_priors": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.naive_bayes.GaussianNB",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_priors_sum_isclose": {
  "lineno": 118,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.naive_bayes.GaussianNB"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_sample_weight": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.bincount",
   "numpy.ones",
   "sklearn.naive_bayes.GaussianNB",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_gnb_wrong_nb_priors": {
  "lineno": 130,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.naive_bayes.GaussianNB",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_mnb_prior_unobserved_targets": {
  "lineno": 478,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.naive_bayes.MultinomialNB",
   "sklearn.utils._testing.assert_no_warnings"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_mnb_sample_weight": {
  "lineno": 505,
  "symbols_in_volume": [
   "numpy.exp",
   "sklearn.naive_bayes.MultinomialNB",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_naive_bayes.test_mnnb": {
  "lineno": 426,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.unique",
   "pytest.mark.parametrize",
   "sklearn.naive_bayes.MultinomialNB",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline": {
  "lineno": null,
  "symbols_in_volume": [
   "itertools.product",
   "sklearn.datasets.load_iris",
   "sklearn.pipeline.FeatureUnion",
   "sklearn.pipeline.Pipeline"
  ],
  "type": "module"
 },
 "sklearn.tests.test_pipeline.DummyEstimatorParams": {
  "lineno": 148,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.tests.test_pipeline.DummyEstimatorParams.fit": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.DummyEstimatorParams.predict": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.DummyMemory": {
  "lineno": 1001,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.tests.test_pipeline.DummyMemory.cache": {
  "lineno": 1002,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.DummyTransf": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.tests.test_pipeline.DummyTransf.fit": {
  "lineno": 140,
  "symbols_in_volume": [
   "numpy.mean",
   "time.time"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.FitParamT": {
  "lineno": 114,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.tests.test_pipeline.FitParamT.__init__": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.FitParamT.fit": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.FitParamT.fit_predict": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.FitParamT.predict": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.FitParamT.score": {
  "lineno": 131,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.Mult": {
  "lineno": 92,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.tests.test_pipeline.Mult.__init__": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.Mult.fit": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.Mult.inverse_transform": {
  "lineno": 102,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.Mult.predict": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.Mult.score": {
  "lineno": 110,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.Mult.transform": {
  "lineno": 99,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.NoFit": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.tests.test_pipeline.NoFit.__init__": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.NoInvTransf": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.tests.test_pipeline.NoInvTransf.transform": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.NoTrans": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.tests.test_pipeline.NoTrans.fit": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.NoTrans.get_params": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.NoTrans.set_params": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.Transf": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.tests.test_pipeline.Transf.inverse_transform": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.Transf.transform": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.TransfFitParams": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.tests.test_pipeline.TransfFitParams.fit": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.WrongDummyMemory": {
  "lineno": 1006,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.tests.test_pipeline.test_classes_property": {
  "lineno": 859,
  "symbols_in_volume": [
   "numpy.unique",
   "sklearn.feature_selection.SelectKBest",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.pipeline.make_pipeline",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_feature_union": {
  "lineno": 453,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "sklearn.base.clone",
   "sklearn.decomposition.TruncatedSVD",
   "sklearn.feature_selection.SelectKBest",
   "sklearn.pipeline.FeatureUnion",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_no_warnings",
   "sklearn.utils._testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_feature_union_feature_names": {
  "lineno": 843,
  "symbols_in_volume": [
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.pipeline.FeatureUnion",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_feature_union_fit_params": {
  "lineno": 1164,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.pipeline.FeatureUnion"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_feature_union_fit_params.Dummy": {
  "lineno": 1166,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "sklearn.tests.test_pipeline.test_feature_union_fit_params.Dummy.fit": {
  "lineno": 1167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_feature_union_fit_params.Dummy.transform": {
  "lineno": 1172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_feature_union_parallel": {
  "lineno": 797,
  "symbols_in_volume": [
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.pipeline.FeatureUnion",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_feature_union_warns_with_none": {
  "lineno": 1188,
  "symbols_in_volume": [
   "pytest.warns",
   "sklearn.pipeline.FeatureUnion"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_feature_union_weights": {
  "lineno": 765,
  "symbols_in_volume": [
   "sklearn.decomposition.PCA",
   "sklearn.feature_selection.SelectKBest",
   "sklearn.pipeline.FeatureUnion",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_fit_predict_on_pipeline": {
  "lineno": 394,
  "symbols_in_volume": [
   "sklearn.cluster.KMeans",
   "sklearn.pipeline.Pipeline",
   "sklearn.preprocessing.StandardScaler",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_fit_predict_on_pipeline_without_fit_predict": {
  "lineno": 419,
  "symbols_in_volume": [
   "sklearn.decomposition.PCA",
   "sklearn.pipeline.Pipeline",
   "sklearn.preprocessing.StandardScaler",
   "sklearn.utils._testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_fit_predict_with_intermediate_fit_params": {
  "lineno": 430,
  "symbols_in_volume": [
   "sklearn.pipeline.Pipeline"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_make_pipeline": {
  "lineno": 744,
  "symbols_in_volume": [
   "sklearn.pipeline.Pipeline",
   "sklearn.pipeline.make_pipeline",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_make_pipeline_memory": {
  "lineno": 1088,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "joblib.Memory",
   "joblib.__version__",
   "shutil.rmtree",
   "sklearn.pipeline.make_pipeline",
   "sklearn.svm.SVC",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_make_union": {
  "lineno": 502,
  "symbols_in_volume": [
   "sklearn.decomposition.PCA",
   "sklearn.pipeline.make_union"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_make_union_kwargs": {
  "lineno": 511,
  "symbols_in_volume": [
   "sklearn.decomposition.PCA",
   "sklearn.pipeline.make_union",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_correctly_adjusts_steps": {
  "lineno": 623,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "sklearn.pipeline.Pipeline"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_ducktyping": {
  "lineno": 716,
  "symbols_in_volume": [
   "sklearn.pipeline.make_pipeline"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_fit_params": {
  "lineno": 257,
  "symbols_in_volume": [
   "sklearn.pipeline.Pipeline",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_fit_transform": {
  "lineno": 544,
  "symbols_in_volume": [
   "sklearn.pipeline.Pipeline",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_index": {
  "lineno": 568,
  "symbols_in_volume": [
   "sklearn.pipeline.Pipeline",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_init": {
  "lineno": 159,
  "symbols_in_volume": [
   "sklearn.base.clone",
   "sklearn.feature_selection.SelectKBest",
   "sklearn.feature_selection.f_classif",
   "sklearn.pipeline.Pipeline",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.assert_no_warnings",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils._testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_init_tuple": {
  "lineno": 230,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.pipeline.Pipeline"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_memory": {
  "lineno": 1023,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "joblib.Memory",
   "joblib.__version__",
   "shutil.rmtree",
   "sklearn.base.clone",
   "sklearn.pipeline.Pipeline",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.assert_array_equal",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_methods_anova": {
  "lineno": 242,
  "symbols_in_volume": [
   "sklearn.feature_selection.SelectKBest",
   "sklearn.feature_selection.f_classif",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.pipeline.Pipeline"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_methods_pca_svm": {
  "lineno": 320,
  "symbols_in_volume": [
   "sklearn.decomposition.PCA",
   "sklearn.pipeline.Pipeline",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_methods_preprocessing_svm": {
  "lineno": 364,
  "symbols_in_volume": [
   "numpy.unique",
   "sklearn.decomposition.PCA",
   "sklearn.pipeline.Pipeline",
   "sklearn.preprocessing.StandardScaler",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_named_steps": {
  "lineno": 606,
  "symbols_in_volume": [
   "sklearn.pipeline.Pipeline"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_param_error": {
  "lineno": 1104,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.pipeline.make_pipeline"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_raise_set_params_error": {
  "lineno": 299,
  "symbols_in_volume": [
   "sklearn.linear_model.LinearRegression",
   "sklearn.pipeline.Pipeline",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_sample_weight_supported": {
  "lineno": 274,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.pipeline.Pipeline"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_sample_weight_unsupported": {
  "lineno": 285,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.pipeline.Pipeline",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_score_samples_pca_lof": {
  "lineno": 335,
  "symbols_in_volume": [
   "sklearn.decomposition.PCA",
   "sklearn.neighbors.LocalOutlierFactor",
   "sklearn.pipeline.Pipeline",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_slice": {
  "lineno": 557,
  "symbols_in_volume": [
   "sklearn.pipeline.Pipeline",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_transform": {
  "lineno": 525,
  "symbols_in_volume": [
   "sklearn.decomposition.PCA",
   "sklearn.pipeline.Pipeline",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_with_cache_attribute": {
  "lineno": 1010,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.pipeline.Pipeline",
   "sklearn.utils._testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_pipeline_wrong_memory": {
  "lineno": 987,
  "symbols_in_volume": [
   "sklearn.pipeline.Pipeline",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_predict_with_predict_params": {
  "lineno": 443,
  "symbols_in_volume": [
   "sklearn.pipeline.Pipeline"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_score_samples_on_pipeline_without_score_samples": {
  "lineno": 351,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.pipeline.make_pipeline"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_set_feature_union_step_drop": {
  "lineno": 902,
  "symbols_in_volume": [
   "numpy.asarray",
   "pytest.mark.parametrize",
   "pytest.warns",
   "sklearn.pipeline.FeatureUnion",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_set_feature_union_steps": {
  "lineno": 873,
  "symbols_in_volume": [
   "numpy.asarray",
   "sklearn.pipeline.FeatureUnion",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_set_params_nested_pipeline": {
  "lineno": 977,
  "symbols_in_volume": [
   "sklearn.dummy.DummyRegressor",
   "sklearn.linear_model.Lasso",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.pipeline.Pipeline"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_set_pipeline_step_passthrough": {
  "lineno": 644,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "sklearn.pipeline.Pipeline",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_set_pipeline_step_passthrough.make": {
  "lineno": 652,
  "symbols_in_volume": [
   "sklearn.pipeline.Pipeline"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_set_pipeline_steps": {
  "lineno": 580,
  "symbols_in_volume": [
   "sklearn.pipeline.Pipeline",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_step_name_validation": {
  "lineno": 944,
  "symbols_in_volume": [
   "sklearn.pipeline.FeatureUnion",
   "sklearn.pipeline.Pipeline",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.tests.test_pipeline.test_verbose": {
  "lineno": 1148,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "re.match"
  ],
  "type": "function"
 },
 "sklearn.tests.test_random_projection": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.random_projection.GaussianRandomProjection",
   "sklearn.random_projection.SparseRandomProjection",
   "sklearn.random_projection._gaussian_random_matrix",
   "sklearn.random_projection._sparse_random_matrix"
  ],
  "type": "module"
 },
 "sklearn.tests.test_random_projection.check_input_size_random_matrix": {
  "lineno": 84,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_random_projection.check_input_with_sparse_random_matrix": {
  "lineno": 109,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_random_projection.check_size_generated": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tests.test_random_projection.check_zero_mean_and_unit_norm": {
  "lineno": 99,
  "symbols_in_volume": [
   "numpy.linalg.norm",
   "numpy.mean",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_random_projection.densify": {
  "lineno": 48,
  "symbols_in_volume": [
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.tests.test_random_projection.make_sparse_random_data": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "scipy.sparse.coo_matrix"
  ],
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_SparseRandomProjection_output_representation": {
  "lineno": 269,
  "symbols_in_volume": [
   "numpy.ndarray",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.issparse",
   "sklearn.random_projection.SparseRandomProjection"
  ],
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_basic_property_of_random_matrix": {
  "lineno": 117,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_basic_property_of_sparse_random_matrix": {
  "lineno": 125,
  "symbols_in_volume": [
   "functools.partial",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_correct_RandomProjection_dimensions_embedding": {
  "lineno": 292,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_deprecations": {
  "lineno": 359,
  "symbols_in_volume": [
   "pytest.warns",
   "sklearn.random_projection.gaussian_random_matrix",
   "sklearn.random_projection.sparse_random_matrix"
  ],
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_gaussian_random_matrix": {
  "lineno": 134,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.var",
   "sklearn.random_projection._gaussian_random_matrix",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_input_size_jl_min_dim": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy.full",
   "numpy.random.randint",
   "sklearn.random_projection.johnson_lindenstrauss_min_dim",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_invalid_jl_domain": {
  "lineno": 63,
  "symbols_in_volume": [
   "sklearn.random_projection.johnson_lindenstrauss_min_dim",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_random_projection_embedding_quality": {
  "lineno": 239,
  "symbols_in_volume": [
   "sklearn.metrics.euclidean_distances"
  ],
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_random_projection_transformer_invalid_input": {
  "lineno": 212,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_sparse_random_matrix": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.size",
   "numpy.sqrt",
   "numpy.unique",
   "numpy.var",
   "sklearn.random_projection._sparse_random_matrix",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_sparse_random_projection_transformer_invalid_density": {
  "lineno": 200,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_too_many_samples_to_find_a_safe_embedding": {
  "lineno": 227,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_try_to_transform_before_fit": {
  "lineno": 221,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_warning_n_components_greater_than_n_features": {
  "lineno": 336,
  "symbols_in_volume": [
   "sklearn.exceptions.DataDimensionalityWarning",
   "sklearn.utils._testing.assert_warns"
  ],
  "type": "function"
 },
 "sklearn.tests.test_random_projection.test_works_with_sparse_data": {
  "lineno": 345,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tests.test_site_joblib": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.tests.test_site_joblib.test_old_pickle": {
  "lineno": 3,
  "symbols_in_volume": [
   "joblib.load"
  ],
  "type": "function"
 },
 "sklearn.tree": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.tree._classes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.tree._classes.BaseDecisionTree": {
  "lineno": 77,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.tree._classes.BaseDecisionTree.__init__": {
  "lineno": 84,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.tree._classes.BaseDecisionTree._prune_tree": {
  "lineno": 500,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.atleast_1d",
   "numpy.intp"
  ],
  "type": "function"
 },
 "sklearn.tree._classes.BaseDecisionTree._validate_X_predict": {
  "lineno": 377,
  "symbols_in_volume": [
   "numpy.intc",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.tree._classes.BaseDecisionTree.apply": {
  "lineno": 447,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._classes.BaseDecisionTree.cost_complexity_pruning_path": {
  "lineno": 523,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._classes.BaseDecisionTree.decision_path": {
  "lineno": 475,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._classes.BaseDecisionTree.feature_importances_": {
  "lineno": 562,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._classes.BaseDecisionTree.fit": {
  "lineno": 140,
  "symbols_in_volume": [
   "math.ceil",
   "numbers.Integral",
   "numpy.array",
   "numpy.ascontiguousarray",
   "numpy.atleast_1d",
   "numpy.copy",
   "numpy.iinfo",
   "numpy.int",
   "numpy.int32",
   "numpy.intc",
   "numpy.intp",
   "numpy.log2",
   "numpy.reshape",
   "numpy.sqrt",
   "numpy.sum",
   "numpy.unique",
   "numpy.zeros",
   "scipy.sparse.issparse",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.tree._classes.BaseDecisionTree.get_depth": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._classes.BaseDecisionTree.get_n_leaves": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._classes.BaseDecisionTree.predict": {
  "lineno": 395,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.tree._classes.DecisionTreeClassifier": {
  "lineno": 585,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.tree._classes.DecisionTreeClassifier.__init__": {
  "lineno": 804,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._classes.DecisionTreeClassifier.fit": {
  "lineno": 835,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._classes.DecisionTreeClassifier.predict_log_proba": {
  "lineno": 928,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "sklearn.tree._classes.DecisionTreeClassifier.predict_proba": {
  "lineno": 880,
  "symbols_in_volume": [
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.tree._classes.DecisionTreeRegressor": {
  "lineno": 957,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.tree._classes.DecisionTreeRegressor.__init__": {
  "lineno": 1155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._classes.DecisionTreeRegressor.classes_": {
  "lineno": 1228,
  "symbols_in_volume": [
   "numpy.array",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.tree._classes.DecisionTreeRegressor.fit": {
  "lineno": 1184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._classes.DecisionTreeRegressor.n_classes_": {
  "lineno": 1236,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intp",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.tree._classes.ExtraTreeClassifier": {
  "lineno": 1245,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.tree._classes.ExtraTreeClassifier.__init__": {
  "lineno": 1440,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._classes.ExtraTreeRegressor": {
  "lineno": 1470,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.tree._classes.ExtraTreeRegressor.__init__": {
  "lineno": 1651,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._export": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.tree._export.Sentinel": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.tree._export.Sentinel.__repr__": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._export._BaseTreeExporter": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.tree._export._BaseTreeExporter.__init__": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._export._BaseTreeExporter.get_color": {
  "lineno": 198,
  "symbols_in_volume": [
   "numpy.argmax"
  ],
  "type": "function"
 },
 "sklearn.tree._export._BaseTreeExporter.get_fill_color": {
  "lineno": 221,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.min",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.tree._export._BaseTreeExporter.node_to_str": {
  "lineno": 246,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.argmax",
   "numpy.around",
   "numpy.equal",
   "numpy.mod"
  ],
  "type": "function"
 },
 "sklearn.tree._export._DOTTreeExporter": {
  "lineno": 351,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.tree._export._DOTTreeExporter.__init__": {
  "lineno": 352,
  "symbols_in_volume": [
   "numbers.Integral"
  ],
  "type": "function"
 },
 "sklearn.tree._export._DOTTreeExporter.export": {
  "lineno": 390,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._export._DOTTreeExporter.head": {
  "lineno": 420,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._export._DOTTreeExporter.recurse": {
  "lineno": 447,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.tree._export._DOTTreeExporter.tail": {
  "lineno": 411,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._export._MPLTreeExporter": {
  "lineno": 509,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.tree._export._MPLTreeExporter.__init__": {
  "lineno": 510,
  "symbols_in_volume": [
   "numbers.Integral"
  ],
  "type": "function"
 },
 "sklearn.tree._export._MPLTreeExporter._make_tree": {
  "lineno": 545,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._export._MPLTreeExporter.export": {
  "lineno": 559,
  "symbols_in_volume": [
   "matplotlib.pyplot.gca",
   "matplotlib.text.Annotation"
  ],
  "type": "function"
 },
 "sklearn.tree._export._MPLTreeExporter.recurse": {
  "lineno": 609,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._export._color_brew": {
  "lineno": 28,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "sklearn.tree._export._compute_depth": {
  "lineno": 774,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._export._compute_depth.compute_depth_": {
  "lineno": 778,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._export.export_graphviz": {
  "lineno": 643,
  "symbols_in_volume": [
   "io.StringIO"
  ],
  "type": "function"
 },
 "sklearn.tree._export.export_text": {
  "lineno": 794,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._export.export_text._add_leaf": {
  "lineno": 889,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._export.export_text.print_tree_recurse": {
  "lineno": 900,
  "symbols_in_volume": [
   "numpy.argmax"
  ],
  "type": "function"
 },
 "sklearn.tree._export.plot_tree": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._reingold_tilford": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.tree._reingold_tilford.DrawTree": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.tree._reingold_tilford.DrawTree.__init__": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._reingold_tilford.DrawTree.__repr__": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._reingold_tilford.DrawTree.__str__": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._reingold_tilford.DrawTree.get_lmost_sibling": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._reingold_tilford.DrawTree.lbrother": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._reingold_tilford.DrawTree.left": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._reingold_tilford.DrawTree.max_extents": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.max"
  ],
  "type": "function"
 },
 "sklearn.tree._reingold_tilford.DrawTree.right": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._reingold_tilford.Tree": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.tree._reingold_tilford.Tree.__init__": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._reingold_tilford.ancestor": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._reingold_tilford.apportion": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._reingold_tilford.buchheim": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._reingold_tilford.execute_shifts": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._reingold_tilford.first_walk": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._reingold_tilford.move_subtree": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._reingold_tilford.second_walk": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree._reingold_tilford.third_walk": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree.export": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.tree.export.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree.setup": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.distutils.core.setup"
  ],
  "type": "module"
 },
 "sklearn.tree.setup.configuration": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.Configuration",
   "numpy.get_include",
   "os.name"
  ],
  "type": "function"
 },
 "sklearn.tree.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.tree.tests.test_export": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.tree.tests.test_export.test_export_text": {
  "lineno": 331,
  "symbols_in_volume": [
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.tree.DecisionTreeRegressor",
   "sklearn.tree.export_text",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_export.test_export_text_errors": {
  "lineno": 313,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.tree.export_text"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_export.test_friedman_mse_in_graphviz": {
  "lineno": 253,
  "symbols_in_volume": [
   "io.StringIO",
   "re.finditer",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.tree.DecisionTreeRegressor",
   "sklearn.tree.export_graphviz"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_export.test_graphviz_errors": {
  "lineno": 212,
  "symbols_in_volume": [
   "io.StringIO",
   "pytest.raises",
   "sklearn.exceptions.NotFittedError",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.tree.export_graphviz"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_export.test_graphviz_toy": {
  "lineno": 25,
  "symbols_in_volume": [
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.tree.DecisionTreeRegressor",
   "sklearn.tree.export_graphviz"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_export.test_plot_tree_entropy": {
  "lineno": 415,
  "symbols_in_volume": [
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.tree.plot_tree"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_export.test_plot_tree_gini": {
  "lineno": 434,
  "symbols_in_volume": [
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.tree.plot_tree"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_export.test_precision": {
  "lineno": 268,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "re.finditer",
   "re.search",
   "sklearn.base.is_classifier",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.tree.DecisionTreeRegressor",
   "sklearn.tree.export_graphviz"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_reingold_tilford": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.tree._reingold_tilford.Tree"
  ],
  "type": "module"
 },
 "sklearn.tree.tests.test_reingold_tilford.test_buchheim": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.unique",
   "pytest.mark.parametrize",
   "sklearn.tree._reingold_tilford.buchheim"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_reingold_tilford.test_buchheim.walk_tree": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.RandomState",
   "numpy.zeros",
   "scipy.sparse.csc_matrix",
   "sklearn.datasets.load_boston",
   "sklearn.datasets.load_digits",
   "sklearn.datasets.load_iris",
   "sklearn.datasets.make_multilabel_classification",
   "sklearn.random_projection._sparse_random_matrix",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.tree.DecisionTreeRegressor",
   "sklearn.tree.ExtraTreeClassifier",
   "sklearn.tree.ExtraTreeRegressor",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "module"
 },
 "sklearn.tree.tests.test_tree._check_min_weight_leaf_split_level": {
  "lineno": 1563,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.assert_is_subtree": {
  "lineno": 1899,
  "symbols_in_volume": [
   "sklearn.tree._tree.TREE_UNDEFINED",
   "sklearn.tree.children_left",
   "sklearn.tree.children_right",
   "sklearn.tree.impurity",
   "sklearn.tree.max_depth",
   "sklearn.tree.n_node_samples",
   "sklearn.tree.node_count",
   "sklearn.tree.threshold",
   "sklearn.tree.value",
   "sklearn.tree.weighted_n_node_samples",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.assert_pruning_creates_subtree": {
  "lineno": 1885,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.assert_tree_equal": {
  "lineno": 153,
  "symbols_in_volume": [
   "numpy.logical_not",
   "sklearn.tree._tree.TREE_LEAF",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_class_weight_errors": {
  "lineno": 1184,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.vstack",
   "pytest.raises"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_class_weights": {
  "lineno": 1136,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.vstack",
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_decision_path": {
  "lineno": 1639,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.ones",
   "sklearn.tree._tree.TREE_LEAF",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_explicit_sparse_zeros": {
  "lineno": 1466,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.arange",
   "numpy.array",
   "numpy.concatenate",
   "numpy.float32",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.tree",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_min_weight_fraction_leaf": {
  "lineno": 644,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.bincount",
   "numpy.float32",
   "numpy.linspace",
   "numpy.min",
   "numpy.sum",
   "sklearn.datasets",
   "sklearn.datasets.astype"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_min_weight_fraction_leaf_with_min_samples_leaf": {
  "lineno": 715,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.bincount",
   "numpy.float32",
   "numpy.linspace",
   "numpy.min",
   "sklearn.datasets",
   "sklearn.datasets.astype"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_min_weight_leaf_split_level": {
  "lineno": 1573,
  "symbols_in_volume": [
   "numpy.array",
   "scipy.sparse.csc_matrix"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_no_sparse_y_support": {
  "lineno": 1672,
  "symbols_in_volume": [
   "pytest.raises",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_public_apply": {
  "lineno": 1590,
  "symbols_in_volume": [
   "sklearn.tree._tree.DTYPE",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_public_apply_sparse": {
  "lineno": 1599,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "sklearn.tree._tree.DTYPE",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_raise_error_on_1d_input": {
  "lineno": 1540,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_sparse_criterion": {
  "lineno": 1437,
  "symbols_in_volume": [
   "sklearn.tree",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_sparse_input": {
  "lineno": 1331,
  "symbols_in_volume": [
   "numpy.float32",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.tree",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.check_sparse_parameters": {
  "lineno": 1393,
  "symbols_in_volume": [
   "sklearn.tree",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_1d_input": {
  "lineno": 1557,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_arrayrepr": {
  "lineno": 303,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_arrays_persist": {
  "lineno": 1241,
  "symbols_in_volume": [
   "sklearn.tree.DecisionTreeClassifier"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_behaviour_constant_feature_after_splits": {
  "lineno": 1263,
  "symbols_in_volume": [
   "numpy.transpose",
   "numpy.vstack",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_big_input": {
  "lineno": 1294,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.repeat",
   "sklearn.tree.DecisionTreeClassifier"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_boston": {
  "lineno": 263,
  "symbols_in_volume": [
   "itertools.product",
   "sklearn.metrics.mean_squared_error"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_class_weight_errors": {
  "lineno": 1207,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_class_weights": {
  "lineno": 1179,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_classes_deprecated": {
  "lineno": 1951,
  "symbols_in_volume": [
   "pytest.warns",
   "sklearn.tree.DecisionTreeRegressor"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_classes_shape": {
  "lineno": 985,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.vstack",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_classification_toy": {
  "lineno": 182,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_criterion_copy": {
  "lineno": 1782,
  "symbols_in_volume": [
   "copy.copy",
   "copy.deepcopy",
   "numpy.arange",
   "numpy.intp",
   "sklearn.tree._classes.CRITERIA_CLF.items",
   "sklearn.tree._classes.CRITERIA_REG.items",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_criterion_copy._pickle_copy": {
  "lineno": 1789,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_decision_path": {
  "lineno": 1667,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_decision_path_hardcoded": {
  "lineno": 1631,
  "symbols_in_volume": [
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_decision_tree_memmap": {
  "lineno": 1826,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.random.RandomState",
   "numpy.zeros",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.utils._testing.TempMemmap"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_empty_leaf_infinite_threshold": {
  "lineno": 1809,
  "symbols_in_volume": [
   "numpy.isfinite",
   "numpy.nan_to_num",
   "numpy.random.RandomState",
   "numpy.where",
   "scipy.sparse.csc_matrix",
   "sklearn.tree",
   "sklearn.tree.DecisionTreeRegressor",
   "sklearn.tree._tree.TREE_LEAF",
   "sklearn.tree.apply",
   "sklearn.tree.tree_.children_left",
   "sklearn.tree.tree_.threshold"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_error": {
  "lineno": 489,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.asfortranarray",
   "numpy.dot",
   "pytest.raises",
   "sklearn.exceptions.NotFittedError",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_explicit_sparse_zeros": {
  "lineno": 1535,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_huge_allocations": {
  "lineno": 1310,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.randn",
   "pytest.raises",
   "sklearn.tree.DecisionTreeClassifier",
   "struct.calcsize"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_importances": {
  "lineno": 355,
  "symbols_in_volume": [
   "numpy.sum",
   "sklearn.datasets.make_classification",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_importances_gini_equal_mse": {
  "lineno": 393,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.tree.DecisionTreeRegressor",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_importances_raises": {
  "lineno": 386,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.tree.DecisionTreeClassifier"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_iris": {
  "lineno": 245,
  "symbols_in_volume": [
   "itertools.product",
   "sklearn.metrics.accuracy_score"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_mae": {
  "lineno": 1685,
  "symbols_in_volume": [
   "numpy.ones",
   "sklearn.tree.DecisionTreeRegressor",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_max_features": {
  "lineno": 419,
  "symbols_in_volume": [
   "numpy.log2",
   "numpy.sqrt",
   "pytest.raises"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_max_leaf_nodes": {
  "lineno": 1212,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.datasets.make_hastie_10_2"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_max_leaf_nodes_max_depth": {
  "lineno": 1232,
  "symbols_in_volume": [
   "sklearn.datasets.make_hastie_10_2"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_memory_layout": {
  "lineno": 1017,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.asarray",
   "numpy.ascontiguousarray",
   "numpy.float32",
   "numpy.float64",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_min_impurity_decrease": {
  "lineno": 841,
  "symbols_in_volume": [
   "itertools.product",
   "pickle.dumps",
   "pickle.loads",
   "sklearn.datasets.make_classification",
   "sklearn.tree._tree.TREE_LEAF"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_min_impurity_split": {
  "lineno": 788,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.asfortranarray",
   "sklearn.tree._tree.DTYPE",
   "sklearn.tree._tree.TREE_LEAF",
   "sklearn.utils._testing.assert_warns",
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_min_samples_leaf": {
  "lineno": 611,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.asfortranarray",
   "numpy.bincount",
   "numpy.min",
   "sklearn.tree._tree.DTYPE"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_min_samples_split": {
  "lineno": 580,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.asfortranarray",
   "numpy.min",
   "sklearn.tree._tree.DTYPE"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_min_weight_fraction_leaf_on_dense_input": {
  "lineno": 705,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_min_weight_fraction_leaf_on_sparse_input": {
  "lineno": 710,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_min_weight_fraction_leaf_with_min_samples_leaf_on_dense_input": {
  "lineno": 777,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_min_weight_fraction_leaf_with_min_samples_leaf_on_sparse_input": {
  "lineno": 782,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_min_weight_leaf_split_level": {
  "lineno": 1585,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_multioutput": {
  "lineno": 929,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_no_sparse_y_support": {
  "lineno": 1679,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_numerical_stability": {
  "lineno": 332,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_only_constant_features": {
  "lineno": 1253,
  "symbols_in_volume": [
   "numpy.zeros",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_presort_deprecated": {
  "lineno": 1618,
  "symbols_in_volume": [
   "numpy.r_",
   "numpy.zeros",
   "pytest.mark.parametrize",
   "pytest.warns",
   "sklearn.tree",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.tree.DecisionTreeRegressor",
   "sklearn.tree.fit"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_probability": {
  "lineno": 284,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.exp",
   "numpy.ones",
   "numpy.sum",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_prune_single_node_tree": {
  "lineno": 1873,
  "symbols_in_volume": [
   "sklearn.tree.DecisionTreeClassifier"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_prune_tree_classifier_are_subtrees": {
  "lineno": 1835,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.diff",
   "pytest.mark.parametrize",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.tree.ExtraTreeClassifier"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_prune_tree_raises_negative_ccp_alpha": {
  "lineno": 1935,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.tree.DecisionTreeClassifier"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_prune_tree_regression_are_subtrees": {
  "lineno": 1854,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.diff",
   "pytest.mark.parametrize",
   "sklearn.tree.DecisionTreeRegressor",
   "sklearn.tree.ExtraTreeRegressor"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_public_apply_all_trees": {
  "lineno": 1608,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_public_apply_sparse_trees": {
  "lineno": 1613,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_pure_set": {
  "lineno": 314,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_realloc": {
  "lineno": 1304,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.tree._utils._realloc_test"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_regression_toy": {
  "lineno": 210,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_sample_weight": {
  "lineno": 1059,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.bincount",
   "numpy.newaxis",
   "numpy.ones",
   "numpy.zeros",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.tree._tree.TREE_LEAF",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_sample_weight_invalid": {
  "lineno": 1110,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.newaxis",
   "numpy.ones",
   "numpy.random.rand",
   "pytest.raises",
   "sklearn.tree.DecisionTreeClassifier"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_sparse": {
  "lineno": 1457,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_sparse_input": {
  "lineno": 1372,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_sparse_input_reg_trees": {
  "lineno": 1384,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_unbalanced_iris": {
  "lineno": 1005,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils.compute_sample_weight"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_weighted_classification_toy": {
  "lineno": 196,
  "symbols_in_volume": [
   "numpy.full",
   "numpy.ones",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_with_only_one_non_constant_features": {
  "lineno": 1276,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.full",
   "numpy.hstack",
   "numpy.zeros",
   "sklearn.utils._testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.tree.tests.test_tree.test_xor": {
  "lineno": 224,
  "symbols_in_volume": [
   "numpy.indices",
   "numpy.vstack",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.tree.tree": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.tree.tree.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils": {
  "lineno": null,
  "symbols_in_volume": [
   "platform.python_implementation",
   "struct.calcsize"
  ],
  "type": "module"
 },
 "sklearn.utils.Bunch": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.Bunch.__dir__": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.Bunch.__getattr__": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.Bunch.__init__": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.Bunch.__setattr__": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.Bunch.__setstate__": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.Memory": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.Parallel": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils._approximate_mode": {
  "lineno": 1042,
  "symbols_in_volume": [
   "numpy.floor",
   "numpy.int",
   "numpy.sort",
   "numpy.unique",
   "numpy.where"
  ],
  "type": "function"
 },
 "sklearn.utils._array_indexing": {
  "lineno": 190,
  "symbols_in_volume": [
   "numpy.asarray",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.utils._chunk_generator": {
  "lineno": 732,
  "symbols_in_volume": [
   "itertools.islice"
  ],
  "type": "function"
 },
 "sklearn.utils._determine_key_type": {
  "lineno": 228,
  "symbols_in_volume": [
   "numpy.bool_"
  ],
  "type": "function"
 },
 "sklearn.utils._get_column_indices": {
  "lineno": 418,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.atleast_1d"
  ],
  "type": "function"
 },
 "sklearn.utils._joblib": {
  "lineno": null,
  "symbols_in_volume": [
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "module"
 },
 "sklearn.utils._list_indexing": {
  "lineno": 216,
  "symbols_in_volume": [
   "itertools.compress",
   "numpy.isscalar"
  ],
  "type": "function"
 },
 "sklearn.utils._mask": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.utils._mask._get_mask": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.equal",
   "numpy.isnan",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.utils._message_with_time": {
  "lineno": 917,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._mocking": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.utils._mocking.ArraySlicingWrapper": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils._mocking.ArraySlicingWrapper.__getitem__": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._mocking.ArraySlicingWrapper.__init__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._mocking.CheckingClassifier": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils._mocking.CheckingClassifier.__init__": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._mocking.CheckingClassifier._more_tags": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._mocking.CheckingClassifier.fit": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.utils._mocking.CheckingClassifier.predict": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.int",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.utils._mocking.CheckingClassifier.score": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._mocking.MockDataFrame": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils._mocking.MockDataFrame.__array__": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._mocking.MockDataFrame.__eq__": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._mocking.MockDataFrame.__init__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._mocking.MockDataFrame.__len__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._mocking.MockDataFrame.__ne__": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._mocking.NoSampleWeightWrapper": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils._mocking.NoSampleWeightWrapper.__init__": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._mocking.NoSampleWeightWrapper._more_tags": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._mocking.NoSampleWeightWrapper.fit": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._mocking.NoSampleWeightWrapper.predict": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._mocking.NoSampleWeightWrapper.predict_proba": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._pandas_indexing": {
  "lineno": 202,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "sklearn.utils._pprint": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.utils._pprint.KeyValTuple": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils._pprint.KeyValTuple.__repr__": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._pprint.KeyValTupleParam": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils._pprint._EstimatorPrettyPrinter": {
  "lineno": 104,
  "symbols_in_volume": [
   "pprint.PrettyPrinter",
   "pprint.PrettyPrinter._dispatch.copy"
  ],
  "type": "class"
 },
 "sklearn.utils._pprint._EstimatorPrettyPrinter.__init__": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._pprint._EstimatorPrettyPrinter._format_dict_items": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._pprint._EstimatorPrettyPrinter._format_items": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._pprint._EstimatorPrettyPrinter._format_params": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._pprint._EstimatorPrettyPrinter._format_params_or_dict_items": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._pprint._EstimatorPrettyPrinter._pprint_estimator": {
  "lineno": 172,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "sklearn.utils._pprint._EstimatorPrettyPrinter._pprint_key_val_tuple": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._pprint._EstimatorPrettyPrinter.format": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._pprint._changed_params": {
  "lineno": 87,
  "symbols_in_volume": [
   "inspect.signature"
  ],
  "type": "function"
 },
 "sklearn.utils._pprint._safe_repr": {
  "lineno": 332,
  "symbols_in_volume": [
   "pprint._builtin_scalars",
   "pprint._recursion",
   "pprint._safe_tuple"
  ],
  "type": "function"
 },
 "sklearn.utils._print_elapsed_time": {
  "lineno": 944,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "timeit.default_timer"
  ],
  "type": "function"
 },
 "sklearn.utils._safe_indexing": {
  "lineno": 340,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._show_versions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.utils._show_versions._get_deps_info": {
  "lineno": 35,
  "symbols_in_volume": [
   "importlib.import_module",
   "sys.modules"
  ],
  "type": "function"
 },
 "sklearn.utils._show_versions._get_deps_info.get_version": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._show_versions._get_sys_info": {
  "lineno": 15,
  "symbols_in_volume": [
   "platform.platform",
   "sys.executable",
   "sys.version.replace"
  ],
  "type": "function"
 },
 "sklearn.utils._show_versions.show_versions": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._testing": {
  "lineno": null,
  "symbols_in_volume": [
   "joblib.parallel.mp",
   "os.environ.get",
   "pytest.mark.skipif",
   "pytest.mark.xfail",
   "sklearn.utils.IS_PYPY",
   "sklearn.utils._IS_32BIT",
   "sklearn.utils.deprecated",
   "sys.platform",
   "unittest.TestCase",
   "unittest.case.SkipTest"
  ],
  "type": "module"
 },
 "sklearn.utils._testing.TempMemmap": {
  "lineno": 651,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils._testing.TempMemmap.__enter__": {
  "lineno": 662,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._testing.TempMemmap.__exit__": {
  "lineno": 667,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._testing.TempMemmap.__init__": {
  "lineno": 658,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._testing._IgnoreWarnings": {
  "lineno": 301,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils._testing._IgnoreWarnings.__call__": {
  "lineno": 321,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._testing._IgnoreWarnings.__call__.wrapper": {
  "lineno": 323,
  "symbols_in_volume": [
   "functools.wraps",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.utils._testing._IgnoreWarnings.__enter__": {
  "lineno": 340,
  "symbols_in_volume": [
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.utils._testing._IgnoreWarnings.__exit__": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._testing._IgnoreWarnings.__init__": {
  "lineno": 314,
  "symbols_in_volume": [
   "sys.modules"
  ],
  "type": "function"
 },
 "sklearn.utils._testing._IgnoreWarnings.__repr__": {
  "lineno": 331,
  "symbols_in_volume": [
   "sys.modules"
  ],
  "type": "function"
 },
 "sklearn.utils._testing._convert_container": {
  "lineno": 917,
  "symbols_in_volume": [
   "numpy.asarray",
   "pytest.importorskip",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "sklearn.utils._testing._delete_folder": {
  "lineno": 636,
  "symbols_in_volume": [
   "os.path.exists",
   "shutil.rmtree",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.utils._testing._get_args": {
  "lineno": 692,
  "symbols_in_volume": [
   "inspect.signature"
  ],
  "type": "function"
 },
 "sklearn.utils._testing._get_func_name": {
  "lineno": 712,
  "symbols_in_volume": [
   "inspect.getmodule"
  ],
  "type": "function"
 },
 "sklearn.utils._testing.all_estimators": {
  "lineno": 441,
  "symbols_in_volume": [
   "inspect.getmembers",
   "inspect.isclass",
   "operator.itemgetter",
   "pkgutil.walk_packages",
   "sklearn.__path__",
   "sklearn.base.BaseEstimator",
   "sklearn.base.ClassifierMixin",
   "sklearn.base.ClusterMixin",
   "sklearn.base.RegressorMixin",
   "sklearn.base.TransformerMixin",
   "sklearn.utils.IS_PYPY",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.utils._testing.all_estimators.is_abstract": {
  "lineno": 487,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._testing.assert_allclose_dense_sparse": {
  "lineno": 399,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.utils._testing.assert_no_warnings": {
  "lineno": 234,
  "symbols_in_volume": [
   "numpy",
   "numpy.VisibleDeprecationWarning",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.utils._testing.assert_raise_message": {
  "lineno": 357,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._testing.assert_run_python_script": {
  "lineno": 864,
  "symbols_in_volume": [
   "os.close",
   "os.environ.copy",
   "os.environ.get",
   "os.path.dirname",
   "os.path.join",
   "os.path.normpath",
   "os.pathsep.join",
   "os.unlink",
   "sklearn.__file__",
   "subprocess.CalledProcessError",
   "subprocess.STDOUT",
   "subprocess.TimeoutExpired",
   "subprocess.check_output",
   "sys.executable",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "sklearn.utils._testing.assert_warns": {
  "lineno": 99,
  "symbols_in_volume": [
   "numpy",
   "numpy.VisibleDeprecationWarning",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.utils._testing.assert_warns_div0": {
  "lineno": 210,
  "symbols_in_volume": [
   "numpy.divide",
   "numpy.errstate",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.utils._testing.assert_warns_message": {
  "lineno": 142,
  "symbols_in_volume": [
   "numpy",
   "numpy.VisibleDeprecationWarning",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.utils._testing.check_docstring_parameters": {
  "lineno": 738,
  "symbols_in_volume": [
   "difflib.ndiff",
   "inspect.isdatadescriptor",
   "numpydoc.docscrape.FunctionDoc",
   "pprint.pformat",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "sklearn.utils._testing.check_skip_network": {
  "lineno": 631,
  "symbols_in_volume": [
   "os.environ.get"
  ],
  "type": "function"
 },
 "sklearn.utils._testing.clean_warning_registry": {
  "lineno": 616,
  "symbols_in_volume": [
   "sys.modules.values"
  ],
  "type": "function"
 },
 "sklearn.utils._testing.create_memmap_backed_data": {
  "lineno": 671,
  "symbols_in_volume": [
   "atexit.register",
   "functools.partial",
   "joblib.dump",
   "joblib.load",
   "os.path.join",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "sklearn.utils._testing.ignore_warnings": {
  "lineno": 259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._testing.set_random_state": {
  "lineno": 561,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils._to_object_array": {
  "lineno": 846,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "sklearn.utils.all_estimators": {
  "lineno": 1152,
  "symbols_in_volume": [
   "importlib.import_module",
   "inspect.getmembers",
   "inspect.isclass",
   "operator.itemgetter",
   "pathlib.Path",
   "pkgutil.walk_packages",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.utils.all_estimators.is_abstract": {
  "lineno": 1203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.axis0_safe_slice": {
  "lineno": 155,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.utils.check_matplotlib_support": {
  "lineno": 1111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.check_pandas_support": {
  "lineno": 1131,
  "symbols_in_volume": [
   "pandas"
  ],
  "type": "function"
 },
 "sklearn.utils.class_weight": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.utils.class_weight.compute_class_weight": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.bincount",
   "numpy.float64",
   "numpy.in1d",
   "numpy.ones",
   "numpy.searchsorted"
  ],
  "type": "function"
 },
 "sklearn.utils.class_weight.compute_sample_weight": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.atleast_1d",
   "numpy.float64",
   "numpy.in1d",
   "numpy.prod",
   "numpy.reshape",
   "numpy.searchsorted",
   "numpy.take",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.utils.deprecation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.utils.deprecation._is_deprecated": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.deprecation._raise_dep_warning_if_not_pytest": {
  "lineno": 127,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.utils.deprecation.deprecated": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.deprecation.deprecated.__call__": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.deprecation.deprecated.__init__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.deprecation.deprecated._decorate_class": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.deprecation.deprecated._decorate_class.wrapped": {
  "lineno": 67,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.utils.deprecation.deprecated._decorate_fun": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.deprecation.deprecated._decorate_fun.wrapped": {
  "lineno": 85,
  "symbols_in_volume": [
   "functools.wraps",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.utils.deprecation.deprecated._decorate_property": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.deprecation.deprecated._decorate_property.wrapped": {
  "lineno": 100,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.utils.deprecation.deprecated._update_doc": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.estimator_checks": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.utils.estimator_checks.NotAnArray": {
  "lineno": 554,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.estimator_checks._NotAnArray": {
  "lineno": 532,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.estimator_checks._NotAnArray.__array__": {
  "lineno": 544,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.estimator_checks._NotAnArray.__array_function__": {
  "lineno": 547,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.estimator_checks._NotAnArray.__init__": {
  "lineno": 541,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks._apply_on_subsets": {
  "lineno": 989,
  "symbols_in_volume": [
   "numpy.ravel",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks._boston_subset": {
  "lineno": 434,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.estimator_checks._check_transformer": {
  "lineno": 1181,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.c_"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks._choose_check_classifiers_labels": {
  "lineno": 2099,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.estimator_checks._construct_instance": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.estimator_checks._enforce_estimator_tags_y": {
  "lineno": 2561,
  "symbols_in_volume": [
   "numpy.reshape"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks._generate_class_checks": {
  "lineno": 346,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks._generate_instance_checks": {
  "lineno": 340,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks._generate_sparse_matrix": {
  "lineno": 611,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.estimator_checks._is_pairwise": {
  "lineno": 561,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.estimator_checks._is_pairwise_metric": {
  "lineno": 577,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.estimator_checks._is_public_parameter": {
  "lineno": 899,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.estimator_checks._pairwise_estimator_convert_X": {
  "lineno": 601,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.estimator_checks._safe_tags": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.estimator_checks._set_check_estimator_ids": {
  "lineno": 283,
  "symbols_in_volume": [
   "functools.partial",
   "re.sub"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks._set_checking_parameters": {
  "lineno": 451,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.estimator_checks._yield_all_checks": {
  "lineno": 239,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks._yield_checks": {
  "lineno": 75,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks._yield_classifier_checks": {
  "lineno": 117,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks._yield_clustering_checks": {
  "lineno": 211,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks._yield_outliers_checks": {
  "lineno": 222,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks._yield_regressor_checks": {
  "lineno": 170,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks._yield_transformer_checks": {
  "lineno": 193,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_class_weight_balanced_classifiers": {
  "lineno": 2291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_class_weight_balanced_linear_classifier": {
  "lineno": 2311,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.sum",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_class_weight_classifiers": {
  "lineno": 2239,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_classifier_data_not_an_array": {
  "lineno": 2446,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_classifier_multioutput": {
  "lineno": 1527,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.int",
   "numpy.ndarray",
   "scipy.stats.rankdata"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_classifiers_classes": {
  "lineno": 2103,
  "symbols_in_volume": [
   "numpy.take"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_classifiers_multilabel_representation_invariance": {
  "lineno": 1935,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_classifiers_one_label": {
  "lineno": 1682,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.random.RandomState",
   "sys.stdout",
   "traceback.print_exc"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_classifiers_predictions": {
  "lineno": 2048,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.int",
   "numpy.ndarray",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_classifiers_regression_target": {
  "lineno": 2701,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_classifiers_train": {
  "lineno": 1716,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.argsort",
   "numpy.int",
   "numpy.log",
   "numpy.ones",
   "numpy.sum",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_clusterer_compute_labels_predict": {
  "lineno": 1667,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_clustering": {
  "lineno": 1608,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.concatenate",
   "numpy.dtype",
   "numpy.random.RandomState",
   "numpy.unique",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_complex_data": {
  "lineno": 843,
  "symbols_in_volume": [
   "numpy.random.sample"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_decision_proba_consistency": {
  "lineno": 2712,
  "symbols_in_volume": [
   "numpy.random.randn",
   "scipy.stats.rankdata"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_dict_unchanged": {
  "lineno": 853,
  "symbols_in_volume": [
   "numpy.int",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_dont_overwrite_parameters": {
  "lineno": 903,
  "symbols_in_volume": [
   "numpy.int",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_dtype_object": {
  "lineno": 804,
  "symbols_in_volume": [
   "numpy.int",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_estimator": {
  "lineno": 379,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_estimator_sparse_data": {
  "lineno": 644,
  "symbols_in_volume": [
   "numpy.int",
   "numpy.random.RandomState",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_estimators_data_not_an_array": {
  "lineno": 2464,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_estimators_dtypes": {
  "lineno": 1320,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_estimators_empty_data_messages": {
  "lineno": 1345,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_estimators_fit_returns_self": {
  "lineno": 1969,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_estimators_nan_inf": {
  "lineno": 1368,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.nan",
   "numpy.ones",
   "numpy.random.RandomState",
   "sys.stdout",
   "traceback.print_exc"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_estimators_overwrite_params": {
  "lineno": 2350,
  "symbols_in_volume": [
   "copy.deepcopy",
   "joblib.hash"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_estimators_partial_fit_n_features": {
  "lineno": 1501,
  "symbols_in_volume": [
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_estimators_pickle": {
  "lineno": 1452,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.RandomState",
   "pickle.dumps",
   "pickle.loads"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_estimators_unfitted": {
  "lineno": 1992,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_fit1d": {
  "lineno": 1117,
  "symbols_in_volume": [
   "numpy.int",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_fit2d_1feature": {
  "lineno": 1083,
  "symbols_in_volume": [
   "numpy.int",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_fit2d_1sample": {
  "lineno": 1049,
  "symbols_in_volume": [
   "numpy.int",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_fit2d_predict1d": {
  "lineno": 958,
  "symbols_in_volume": [
   "numpy.int",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_fit_idempotent": {
  "lineno": 2792,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float64",
   "numpy.floating",
   "numpy.issubdtype",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_fit_non_negative": {
  "lineno": 2782,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_fit_score_takes_y": {
  "lineno": 1288,
  "symbols_in_volume": [
   "inspect.signature",
   "numpy.arange",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_get_params_invariance": {
  "lineno": 2635,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_methods_subset_invariance": {
  "lineno": 1008,
  "symbols_in_volume": [
   "numpy.int",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_no_attributes_set_in_init": {
  "lineno": 2389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_non_transformer_estimators_n_iter": {
  "lineno": 2575,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_nonsquare_error": {
  "lineno": 1439,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_outlier_corruption": {
  "lineno": 1840,
  "symbols_in_volume": [
   "numpy.sort",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_outliers_fit_predict": {
  "lineno": 2735,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.sum",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_outliers_train": {
  "lineno": 1860,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.int",
   "numpy.sum",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_parameters_default_constructible": {
  "lineno": 2487,
  "symbols_in_volume": [
   "inspect.signature",
   "joblib.Memory",
   "numpy.float64",
   "numpy.int64",
   "numpy.ndarray",
   "types.FunctionType"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_parameters_default_constructible.param_filter": {
  "lineno": 2510,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_pipeline_consistency": {
  "lineno": 1259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_regressor_data_not_an_array": {
  "lineno": 2456,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_regressor_multioutput": {
  "lineno": 1585,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_regressors_int": {
  "lineno": 2140,
  "symbols_in_volume": [
   "numpy.float",
   "numpy.random.RandomState",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_regressors_no_decision_function": {
  "lineno": 2213,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_regressors_train": {
  "lineno": 2168,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_sample_weights_invariance": {
  "lineno": 766,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.ones",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_sample_weights_list": {
  "lineno": 746,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_sample_weights_not_an_array": {
  "lineno": 729,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_sample_weights_pandas_series": {
  "lineno": 702,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_set_params": {
  "lineno": 2647,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.inf",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_sparsify_coefficients": {
  "lineno": 2423,
  "symbols_in_volume": [
   "numpy.array",
   "pickle.dumps",
   "pickle.loads",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_supervised_y_2d": {
  "lineno": 2008,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.newaxis",
   "numpy.random.RandomState",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_supervised_y_no_nan": {
  "lineno": 147,
  "symbols_in_volume": [
   "numpy.full",
   "numpy.inf",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_transformer_data_not_an_array": {
  "lineno": 1153,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_transformer_general": {
  "lineno": 1139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_transformer_n_iter": {
  "lineno": 2609,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.check_transformers_unfitted": {
  "lineno": 1169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.choose_check_classifiers_labels": {
  "lineno": 2093,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.enforce_estimator_tags_y": {
  "lineno": 2555,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.is_public_parameter": {
  "lineno": 893,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.pairwise_estimator_convert_X": {
  "lineno": 595,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.parametrize_with_checks": {
  "lineno": 354,
  "symbols_in_volume": [
   "itertools.chain.from_iterable",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.utils.estimator_checks.set_checking_parameters": {
  "lineno": 445,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.extmath": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.utils.extmath._deterministic_vector_sign_flip": {
  "lineno": 788,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.argmax",
   "numpy.newaxis",
   "numpy.sign"
  ],
  "type": "function"
 },
 "sklearn.utils.extmath._incremental_mean_and_var": {
  "lineno": 710,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.isnan",
   "numpy.nansum",
   "numpy.nanvar",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.utils.extmath._safe_accumulator_op": {
  "lineno": 681,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.floating",
   "numpy.issubdtype"
  ],
  "type": "function"
 },
 "sklearn.utils.extmath.cartesian": {
  "lineno": 447,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.empty_like",
   "numpy.indices"
  ],
  "type": "function"
 },
 "sklearn.utils.extmath.density": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.extmath.fast_logdet": {
  "lineno": 81,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.linalg.slogdet"
  ],
  "type": "function"
 },
 "sklearn.utils.extmath.log_logistic": {
  "lineno": 540,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "numpy.empty_like",
   "numpy.float64",
   "numpy.squeeze"
  ],
  "type": "function"
 },
 "sklearn.utils.extmath.make_nonnegative": {
  "lineno": 647,
  "symbols_in_volume": [
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.utils.extmath.randomized_range_finder": {
  "lineno": 159,
  "symbols_in_volume": [
   "scipy.linalg.lu",
   "scipy.linalg.qr"
  ],
  "type": "function"
 },
 "sklearn.utils.extmath.randomized_svd": {
  "lineno": 244,
  "symbols_in_volume": [
   "numpy.dot",
   "scipy.linalg.svd",
   "scipy.sparse.SparseEfficiencyWarning",
   "scipy.sparse.dok_matrix",
   "scipy.sparse.lil_matrix",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.utils.extmath.row_norms": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.einsum",
   "numpy.sqrt",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.utils.extmath.safe_min": {
  "lineno": 619,
  "symbols_in_volume": [
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.utils.extmath.safe_sparse_dot": {
  "lineno": 118,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.rollaxis",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.utils.extmath.softmax": {
  "lineno": 585,
  "symbols_in_volume": [
   "numpy.copy",
   "numpy.exp",
   "numpy.max",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.utils.extmath.squared_norm": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.integer",
   "numpy.issubdtype",
   "numpy.ravel",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.utils.extmath.stable_cumsum": {
  "lineno": 810,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.cumsum",
   "numpy.float64",
   "numpy.isclose",
   "numpy.sum",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.utils.extmath.svd_flip": {
  "lineno": 496,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.argmax",
   "numpy.newaxis",
   "numpy.sign"
  ],
  "type": "function"
 },
 "sklearn.utils.extmath.weighted_mode": {
  "lineno": 374,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.expand_dims",
   "numpy.full",
   "numpy.maximum",
   "numpy.ravel",
   "numpy.sum",
   "numpy.unique",
   "numpy.where",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.utils.fast_dict": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.utils.fast_dict.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.fixes": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.__version__",
   "scipy.__version__"
  ],
  "type": "module"
 },
 "sklearn.utils.fixes.MaskedArray": {
  "lineno": 159,
  "symbols_in_volume": [
   "numpy.ma.MaskedArray"
  ],
  "type": "class"
 },
 "sklearn.utils.fixes.MaskedArray.__getstate__": {
  "lineno": 163,
  "symbols_in_volume": [
   "numpy.ma.MaskedArray",
   "numpy.ma.getmaskarray"
  ],
  "type": "function"
 },
 "sklearn.utils.fixes._arg_min_or_max": {
  "lineno": 111,
  "symbols_in_volume": [
   "numpy.product"
  ],
  "type": "function"
 },
 "sklearn.utils.fixes._arg_min_or_max_axis": {
  "lineno": 74,
  "symbols_in_volume": [
   "numpy.asmatrix",
   "numpy.diff",
   "numpy.nonzero",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.utils.fixes._argmax": {
  "lineno": 151,
  "symbols_in_volume": [
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.utils.fixes._astype_copy_false": {
  "lineno": 189,
  "symbols_in_volume": [
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.utils.fixes._find_missing_index": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.fixes._joblib_parallel_args": {
  "lineno": 200,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "joblib.__version__"
  ],
  "type": "function"
 },
 "sklearn.utils.fixes._object_dtype_isnan": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.fixes._parse_version": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.fixes._sparse_argmax": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.greater"
  ],
  "type": "function"
 },
 "sklearn.utils.fixes.loguniform": {
  "lineno": 248,
  "symbols_in_volume": [
   "scipy.stats.reciprocal"
  ],
  "type": "class"
 },
 "sklearn.utils.gen_batches": {
  "lineno": 743,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.gen_even_slices": {
  "lineno": 786,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.get_chunk_n_rows": {
  "lineno": 971,
  "symbols_in_volume": [
   "numpy.ceil",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.utils.graph": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.utils.graph.single_source_shortest_path_length": {
  "lineno": 22,
  "symbols_in_volume": [
   "scipy.sparse.isspmatrix",
   "scipy.sparse.lil_matrix"
  ],
  "type": "function"
 },
 "sklearn.utils.indices_to_mask": {
  "lineno": 885,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.max",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.utils.is_scalar_nan": {
  "lineno": 1010,
  "symbols_in_volume": [
   "numbers.Real",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "sklearn.utils.linear_assignment_": {
  "lineno": null,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "module"
 },
 "sklearn.utils.linear_assignment_._HungarianState": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.linear_assignment_._HungarianState.__init__": {
  "lineno": 78,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "numpy.bool",
   "numpy.ones",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.utils.linear_assignment_._HungarianState._clear_covers": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.linear_assignment_._hungarian": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.where",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.utils.linear_assignment_._step1": {
  "lineno": 153,
  "symbols_in_volume": [
   "numpy.newaxis",
   "numpy.where"
  ],
  "type": "function"
 },
 "sklearn.utils.linear_assignment_._step3": {
  "lineno": 172,
  "symbols_in_volume": [
   "numpy.any"
  ],
  "type": "function"
 },
 "sklearn.utils.linear_assignment_._step4": {
  "lineno": 185,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.int",
   "numpy.newaxis",
   "numpy.unravel_index"
  ],
  "type": "function"
 },
 "sklearn.utils.linear_assignment_._step5": {
  "lineno": 222,
  "symbols_in_volume": [
   "numpy.argmax"
  ],
  "type": "function"
 },
 "sklearn.utils.linear_assignment_._step6": {
  "lineno": 272,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.logical_not",
   "numpy.min"
  ],
  "type": "function"
 },
 "sklearn.utils.linear_assignment_.linear_assignment": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.utils.metaestimators": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.utils.metaestimators._BaseComposition": {
  "lineno": 17,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "sklearn.utils.metaestimators._BaseComposition.__init__": {
  "lineno": 20,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sklearn.utils.metaestimators._BaseComposition._get_params": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.metaestimators._BaseComposition._replace_estimator": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.metaestimators._BaseComposition._set_params": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.metaestimators._BaseComposition._validate_names": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.metaestimators._IffHasAttrDescriptor": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.metaestimators._IffHasAttrDescriptor.__get__": {
  "lineno": 99,
  "symbols_in_volume": [
   "functools.update_wrapper",
   "operator.attrgetter"
  ],
  "type": "function"
 },
 "sklearn.utils.metaestimators._IffHasAttrDescriptor.__init__": {
  "lineno": 91,
  "symbols_in_volume": [
   "functools.update_wrapper"
  ],
  "type": "function"
 },
 "sklearn.utils.metaestimators._safe_split": {
  "lineno": 145,
  "symbols_in_volume": [
   "numpy.ix_"
  ],
  "type": "function"
 },
 "sklearn.utils.metaestimators.if_delegate_has_method": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.mocking": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.utils.mocking.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.multiclass": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.utils.multiclass._check_partial_fit_first_call": {
  "lineno": 293,
  "symbols_in_volume": [
   "numpy.array_equal"
  ],
  "type": "function"
 },
 "sklearn.utils.multiclass._is_integral_float": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.all"
  ],
  "type": "function"
 },
 "sklearn.utils.multiclass._ovr_decision_function": {
  "lineno": 404,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.utils.multiclass._unique_indicator": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "sklearn.utils.multiclass._unique_multiclass": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.utils.multiclass.check_classification_targets": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.multiclass.class_distribution": {
  "lineno": 328,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.bincount",
   "numpy.diff",
   "numpy.insert",
   "numpy.sum",
   "numpy.unique",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.utils.multiclass.is_multilabel": {
  "lineno": 109,
  "symbols_in_volume": [
   "collections.abc.Sequence",
   "numpy.asarray",
   "numpy.unique",
   "scipy.sparse.dok_matrix",
   "scipy.sparse.issparse",
   "scipy.sparse.lil_matrix"
  ],
  "type": "function"
 },
 "sklearn.utils.multiclass.type_of_target": {
  "lineno": 172,
  "symbols_in_volume": [
   "collections.abc.Sequence",
   "numpy.any",
   "numpy.asarray",
   "numpy.unique",
   "scipy.sparse.base.spmatrix"
  ],
  "type": "function"
 },
 "sklearn.utils.multiclass.unique_labels": {
  "lineno": 40,
  "symbols_in_volume": [
   "itertools.chain.from_iterable",
   "numpy.array"
  ],
  "type": "function"
 },
 "sklearn.utils.optimize": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.utils.optimize._LineSearchError": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.optimize._cg": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.dot",
   "numpy.finfo",
   "numpy.float64",
   "numpy.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn.utils.optimize._check_optimize_result": {
  "lineno": 216,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.utils.optimize._line_search_wolfe12": {
  "lineno": 28,
  "symbols_in_volume": [
   "scipy.optimize.linesearch.line_search_wolfe1",
   "scipy.optimize.linesearch.line_search_wolfe2"
  ],
  "type": "function"
 },
 "sklearn.utils.optimize._newton_cg": {
  "lineno": 123,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.asarray",
   "numpy.max",
   "numpy.sqrt",
   "numpy.sum",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.utils.optimize.newton_cg": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.random": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.utils.random._random_choice_csc": {
  "lineno": 23,
  "symbols_in_volume": [
   "array.array",
   "numpy.asarray",
   "numpy.empty",
   "numpy.insert",
   "numpy.int64",
   "numpy.isclose",
   "numpy.searchsorted",
   "numpy.sum",
   "scipy.sparse.csc_matrix"
  ],
  "type": "function"
 },
 "sklearn.utils.random.random_choice_csc": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.resample": {
  "lineno": 478,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.argsort",
   "numpy.array",
   "numpy.bincount",
   "numpy.cumsum",
   "numpy.split",
   "numpy.unique",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.utils.safe_indexing": {
  "lineno": 292,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.safe_mask": {
  "lineno": 130,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.issubdtype",
   "numpy.signedinteger"
  ],
  "type": "function"
 },
 "sklearn.utils.safe_sqr": {
  "lineno": 704,
  "symbols_in_volume": [
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.utils.seq_dataset": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.utils.seq_dataset.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.setup": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.distutils.core.setup"
  ],
  "type": "module"
 },
 "sklearn.utils.setup.configuration": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.distutils.misc_util.Configuration",
   "numpy.get_include",
   "os.name",
   "os.path.join",
   "sklearn._build_utils.gen_from_templates"
  ],
  "type": "function"
 },
 "sklearn.utils.shuffle": {
  "lineno": 633,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.sparsefuncs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.utils.sparsefuncs._get_elem_at_rank": {
  "lineno": 508,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.sparsefuncs._get_median": {
  "lineno": 489,
  "symbols_in_volume": [
   "numpy.count_nonzero",
   "numpy.nan"
  ],
  "type": "function"
 },
 "sklearn.utils.sparsefuncs._min_or_max_axis": {
  "lineno": 353,
  "symbols_in_volume": [
   "numpy.compress",
   "numpy.diff",
   "numpy.zeros",
   "scipy.sparse.coo_matrix"
  ],
  "type": "function"
 },
 "sklearn.utils.sparsefuncs._minor_reduce": {
  "lineno": 342,
  "symbols_in_volume": [
   "numpy.diff",
   "numpy.flatnonzero"
  ],
  "type": "function"
 },
 "sklearn.utils.sparsefuncs._raise_error_wrong_axis": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.sparsefuncs._raise_typeerror": {
  "lineno": 15,
  "symbols_in_volume": [
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.utils.sparsefuncs._sparse_min_max": {
  "lineno": 395,
  "symbols_in_volume": [
   "numpy.maximum",
   "numpy.minimum"
  ],
  "type": "function"
 },
 "sklearn.utils.sparsefuncs._sparse_min_or_max": {
  "lineno": 376,
  "symbols_in_volume": [
   "numpy.product"
  ],
  "type": "function"
 },
 "sklearn.utils.sparsefuncs._sparse_nan_min_max": {
  "lineno": 400,
  "symbols_in_volume": [
   "numpy.fmax",
   "numpy.fmin"
  ],
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.count_nonzero": {
  "lineno": 440,
  "symbols_in_volume": [
   "numpy.bincount",
   "numpy.diff",
   "numpy.dot",
   "numpy.repeat"
  ],
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.csc_median_axis_0": {
  "lineno": 517,
  "symbols_in_volume": [
   "numpy.copy",
   "numpy.zeros",
   "scipy.sparse.csc_matrix"
  ],
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.incr_mean_variance_axis": {
  "lineno": 101,
  "symbols_in_volume": [
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.inplace_column_scale": {
  "lineno": 164,
  "symbols_in_volume": [
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.inplace_csr_column_scale": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.inplace_csr_row_scale": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.diff",
   "numpy.repeat"
  ],
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.inplace_row_scale": {
  "lineno": 186,
  "symbols_in_volume": [
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.inplace_swap_column": {
  "lineno": 315,
  "symbols_in_volume": [
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.inplace_swap_row": {
  "lineno": 292,
  "symbols_in_volume": [
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.inplace_swap_row_csc": {
  "lineno": 208,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.inplace_swap_row_csr": {
  "lineno": 237,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.mean_variance_axis": {
  "lineno": 64,
  "symbols_in_volume": [
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "sklearn.utils.sparsefuncs.min_max_axis": {
  "lineno": 405,
  "symbols_in_volume": [
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "sklearn.utils.stats": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.utils.stats._weighted_percentile": {
  "lineno": 6,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.clip",
   "numpy.searchsorted"
  ],
  "type": "function"
 },
 "sklearn.utils.testing": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.utils.testing.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.utils.tests.test_class_weight": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_class_weight": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.bincount",
   "numpy.dot",
   "numpy.unique",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils.class_weight.compute_class_weight"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_class_weight_balanced_negative": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.bincount",
   "numpy.dot",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.class_weight.compute_class_weight"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_class_weight_balanced_unordered": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.bincount",
   "numpy.dot",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.class_weight.compute_class_weight"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_class_weight_default": {
  "lineno": 125,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ones",
   "numpy.unique",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.class_weight.compute_class_weight"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_class_weight_dict": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_raise_message",
   "sklearn.utils.class_weight.compute_class_weight"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_class_weight_invariance": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.hstack",
   "numpy.vstack",
   "sklearn.datasets.make_blobs",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.utils._testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_class_weight_not_present": {
  "lineno": 27,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "sklearn.utils._testing.assert_raise_message",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils.class_weight.compute_class_weight"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_sample_weight": {
  "lineno": 147,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.class_weight.compute_sample_weight"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_sample_weight_errors": {
  "lineno": 230,
  "symbols_in_volume": [
   "numpy.asarray",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils.class_weight.compute_sample_weight"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_sample_weight_more_than_32": {
  "lineno": 251,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ones",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.class_weight.compute_sample_weight"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_class_weight.test_compute_sample_weight_with_subsample": {
  "lineno": 190,
  "symbols_in_volume": [
   "numpy.asarray",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.class_weight.compute_sample_weight"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_cython_blas": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "pytest.importorskip",
   "sklearn.utils._cython_blas.ColMajor",
   "sklearn.utils._cython_blas.RowMajor"
  ],
  "type": "module"
 },
 "sklearn.utils.tests.test_cython_blas._no_op": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_cython_blas.test_asum": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.float32",
   "numpy.float64",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.utils._cython_blas._asum_memview",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_cython_blas.test_axpy": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.utils._cython_blas._axpy_memview",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_cython_blas.test_copy": {
  "lineno": 87,
  "symbols_in_volume": [
   "numpy.empty_like",
   "numpy.float32",
   "numpy.float64",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.utils._cython_blas._copy_memview",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_cython_blas.test_dot": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.utils._cython_blas._dot_memview",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_cython_blas.test_gemm": {
  "lineno": 200,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.float32",
   "numpy.float64",
   "numpy.random.RandomState",
   "numpy.transpose",
   "pytest.mark.parametrize",
   "sklearn.utils._cython_blas.ColMajor",
   "sklearn.utils._cython_blas.NoTrans",
   "sklearn.utils._cython_blas.RowMajor",
   "sklearn.utils._cython_blas.Trans",
   "sklearn.utils._cython_blas._gemm_memview",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_cython_blas.test_gemv": {
  "lineno": 159,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.float32",
   "numpy.float64",
   "numpy.random.RandomState",
   "numpy.transpose",
   "pytest.mark.parametrize",
   "sklearn.utils._cython_blas.ColMajor",
   "sklearn.utils._cython_blas.NoTrans",
   "sklearn.utils._cython_blas.RowMajor",
   "sklearn.utils._cython_blas.Trans",
   "sklearn.utils._cython_blas._gemv_memview",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_cython_blas.test_ger": {
  "lineno": 181,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.float32",
   "numpy.float64",
   "numpy.outer",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.utils._cython_blas.ColMajor",
   "sklearn.utils._cython_blas.RowMajor",
   "sklearn.utils._cython_blas._ger_memview",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_cython_blas.test_nrm2": {
  "lineno": 74,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.linalg.norm",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.utils._cython_blas._nrm2_memview",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_cython_blas.test_rot": {
  "lineno": 140,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.utils._cython_blas._rot_memview",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_cython_blas.test_rotg": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.utils._cython_blas._rotg_memview",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_cython_blas.test_rotg.expected_rotg": {
  "lineno": 124,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_cython_blas.test_scal": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "sklearn.utils._cython_blas._scal_memview",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_deprecated_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.utils.tests.test_deprecated_utils.test_choose_check_classifiers_labels_deprecated": {
  "lineno": 23,
  "symbols_in_volume": [
   "pytest.warns",
   "sklearn.utils.estimator_checks.choose_check_classifiers_labels"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_deprecated_utils.test_dict_learning_no_shadowing": {
  "lineno": 119,
  "symbols_in_volume": [
   "sklearn.decomposition.dict_learning",
   "sklearn.utils.all_estimators",
   "types.FunctionType",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_deprecated_utils.test_enforce_estimator_tags_y": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.warns",
   "sklearn.dummy.DummyClassifier",
   "sklearn.utils.estimator_checks.enforce_estimator_tags_y"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_deprecated_utils.test_is_public_parameter": {
  "lineno": 44,
  "symbols_in_volume": [
   "pytest.warns",
   "sklearn.utils.estimator_checks.is_public_parameter"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_deprecated_utils.test_newton_cg": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.random.RandomState",
   "pytest.warns",
   "sklearn.utils.optimize.newton_cg"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_deprecated_utils.test_newton_cg.func": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_deprecated_utils.test_newton_cg.grad": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_deprecated_utils.test_newton_cg.grad_hess": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_deprecated_utils.test_newton_cg.hess": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_deprecated_utils.test_notanarray": {
  "lineno": 37,
  "symbols_in_volume": [
   "pytest.warns",
   "sklearn.utils.estimator_checks.NotAnArray"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_deprecated_utils.test_pairwise_estimator_convert_X": {
  "lineno": 51,
  "symbols_in_volume": [
   "pytest.warns",
   "sklearn.dummy.DummyClassifier",
   "sklearn.utils.estimator_checks.pairwise_estimator_convert_X"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_deprecated_utils.test_partial_dependence_no_shadowing": {
  "lineno": 103,
  "symbols_in_volume": [
   "sklearn.inspection.partial_dependence",
   "sklearn.utils.all_estimators",
   "types.FunctionType",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_deprecated_utils.test_random_choice_csc": {
  "lineno": 89,
  "symbols_in_volume": [
   "pytest.warns",
   "sklearn.utils.random.random_choice_csc"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_deprecated_utils.test_safe_indexing": {
  "lineno": 96,
  "symbols_in_volume": [
   "pytest.warns",
   "sklearn.utils.safe_indexing"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_deprecated_utils.test_set_checking_parameters": {
  "lineno": 58,
  "symbols_in_volume": [
   "pytest.warns",
   "sklearn.dummy.DummyClassifier",
   "sklearn.utils.estimator_checks.set_checking_parameters"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_deprecation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.utils.tests.test_deprecation.MockClass1": {
  "lineno": 12,
  "symbols_in_volume": [
   "sklearn.utils.deprecation.deprecated"
  ],
  "type": "class"
 },
 "sklearn.utils.tests.test_deprecation.MockClass2": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.tests.test_deprecation.MockClass2.method": {
  "lineno": 18,
  "symbols_in_volume": [
   "sklearn.utils.deprecation.deprecated"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_deprecation.MockClass3": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.tests.test_deprecation.MockClass3.__init__": {
  "lineno": 24,
  "symbols_in_volume": [
   "sklearn.utils.deprecation.deprecated"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_deprecation.MockClass4": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.tests.test_deprecation.mock_function": {
  "lineno": 33,
  "symbols_in_volume": [
   "sklearn.utils.deprecation.deprecated"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_deprecation.test_deprecated": {
  "lineno": 38,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_deprecation.test_is_deprecated": {
  "lineno": 48,
  "symbols_in_volume": [
   "sklearn.utils.deprecation._is_deprecated"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_deprecation.test_pickle": {
  "lineno": 58,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.utils.tests.test_estimator_checks.BadBalancedWeightsClassifier": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.BadBalancedWeightsClassifier.__init__": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.BadBalancedWeightsClassifier.fit": {
  "lineno": 203,
  "symbols_in_volume": [
   "sklearn.preprocessing.LabelEncoder",
   "sklearn.utils.compute_class_weight"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.BadTransformerWithoutMixin": {
  "lineno": 221,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.BadTransformerWithoutMixin.fit": {
  "lineno": 222,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.BadTransformerWithoutMixin.transform": {
  "lineno": 226,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.BaseBadClassifier": {
  "lineno": 48,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.ClassifierMixin"
  ],
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.BaseBadClassifier.fit": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.BaseBadClassifier.predict": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.ChangesDict": {
  "lineno": 56,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.ChangesDict.__init__": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.ChangesDict.fit": {
  "lineno": 60,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_X_y"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.ChangesDict.predict": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.ones",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.ChangesUnderscoreAttribute": {
  "lineno": 90,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.ChangesUnderscoreAttribute.fit": {
  "lineno": 91,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_X_y"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.ChangesWrongAttribute": {
  "lineno": 80,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.ChangesWrongAttribute.__init__": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.ChangesWrongAttribute.fit": {
  "lineno": 84,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_X_y"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.CorrectNotFittedError": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.CorrectNotFittedErrorClassifier": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.CorrectNotFittedErrorClassifier.fit": {
  "lineno": 169,
  "symbols_in_volume": [
   "numpy.ones",
   "sklearn.utils.validation.check_X_y"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.CorrectNotFittedErrorClassifier.predict": {
  "lineno": 174,
  "symbols_in_volume": [
   "numpy.ones",
   "sklearn.utils.validation.check_array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.LargeSparseNotSupportedClassifier": {
  "lineno": 248,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.LargeSparseNotSupportedClassifier.fit": {
  "lineno": 249,
  "symbols_in_volume": [
   "scipy.sparse.issparse",
   "sklearn.utils.validation.check_X_y"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.ModifiesAnotherValue": {
  "lineno": 131,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.ModifiesAnotherValue.__init__": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.ModifiesAnotherValue.fit": {
  "lineno": 145,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_X_y"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.ModifiesAnotherValue.set_params": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.ModifiesValueInsteadOfRaisingError": {
  "lineno": 114,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.ModifiesValueInsteadOfRaisingError.__init__": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.ModifiesValueInsteadOfRaisingError.fit": {
  "lineno": 126,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_X_y"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.ModifiesValueInsteadOfRaisingError.set_params": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.NoCheckinPredict": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.NoCheckinPredict.fit": {
  "lineno": 151,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_X_y"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.NoSampleWeightPandasSeriesType": {
  "lineno": 180,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.NoSampleWeightPandasSeriesType.fit": {
  "lineno": 181,
  "symbols_in_volume": [
   "pandas.Series",
   "sklearn.utils.validation.check_X_y"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.NoSampleWeightPandasSeriesType.predict": {
  "lineno": 194,
  "symbols_in_volume": [
   "numpy.ones",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.NoSparseClassifier": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.NoSparseClassifier.fit": {
  "lineno": 157,
  "symbols_in_volume": [
   "scipy.sparse.issparse",
   "sklearn.utils.validation.check_X_y"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.NoSparseClassifier.predict": {
  "lineno": 163,
  "symbols_in_volume": [
   "numpy.ones",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.NotInvariantPredict": {
  "lineno": 231,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.NotInvariantPredict.fit": {
  "lineno": 232,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_X_y"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.NotInvariantPredict.predict": {
  "lineno": 240,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.zeros",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.RaisesErrorInSetParams": {
  "lineno": 97,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.RaisesErrorInSetParams.__init__": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.RaisesErrorInSetParams.fit": {
  "lineno": 109,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_X_y"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.RaisesErrorInSetParams.set_params": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.RequiresPositiveYRegressor": {
  "lineno": 298,
  "symbols_in_volume": [
   "sklearn.linear_model.LinearRegression"
  ],
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.RequiresPositiveYRegressor._more_tags": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.RequiresPositiveYRegressor.fit": {
  "lineno": 300,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_X_y"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.SetsWrongAttribute": {
  "lineno": 70,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.SetsWrongAttribute.__init__": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.SetsWrongAttribute.fit": {
  "lineno": 74,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_X_y"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.SparseTransformer": {
  "lineno": 268,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.SparseTransformer.fit": {
  "lineno": 269,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.SparseTransformer.fit_transform": {
  "lineno": 273,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.SparseTransformer.transform": {
  "lineno": 276,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "sklearn.utils.validation.check_array"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.TaggedBinaryClassifier": {
  "lineno": 292,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.TaggedBinaryClassifier._more_tags": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.UntaggedBinaryClassifier": {
  "lineno": 283,
  "symbols_in_volume": [
   "sklearn.tree.DecisionTreeClassifier"
  ],
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.UntaggedBinaryClassifier.fit": {
  "lineno": 285,
  "symbols_in_volume": [
   "numpy.all"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.run_tests_without_pytest": {
  "lineno": 553,
  "symbols_in_volume": [
   "sys.modules",
   "unittest.FunctionTestCase",
   "unittest.TestSuite",
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_all_estimators_all_public": {
  "lineno": 576,
  "symbols_in_volume": [
   "sklearn.utils.all_estimators"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_class_weight_balanced_linear_classifier": {
  "lineno": 566,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_raises_regex",
   "sklearn.utils.estimator_checks.check_class_weight_balanced_linear_classifier"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_estimator": {
  "lineno": 334,
  "symbols_in_volume": [
   "io.StringIO",
   "sklearn.base.BaseEstimator",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.linear_model.MultiTaskElasticNet",
   "sklearn.utils._testing.assert_raises_regex",
   "sklearn.utils._testing.assert_warns",
   "sklearn.utils.estimator_checks.check_estimator",
   "sys.stdout"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_estimator_clones": {
  "lineno": 459,
  "symbols_in_volume": [
   "joblib.hash",
   "sklearn.cluster.MiniBatchKMeans",
   "sklearn.datasets.load_iris",
   "sklearn.decomposition.NMF",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.SGDClassifier",
   "sklearn.mixture.GaussianMixture",
   "sklearn.utils._testing.ignore_warnings",
   "sklearn.utils.estimator_checks._set_checking_parameters",
   "sklearn.utils.estimator_checks.check_estimator",
   "sklearn.utils.estimator_checks.set_random_state"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_estimator_pairwise": {
  "lineno": 527,
  "symbols_in_volume": [
   "sklearn.neighbors.KNeighborsRegressor",
   "sklearn.svm.SVC",
   "sklearn.utils.estimator_checks.check_estimator"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_estimator_required_parameters_skip": {
  "lineno": 540,
  "symbols_in_volume": [
   "sklearn.utils._testing.SkipTest",
   "sklearn.utils._testing.assert_raises_regex",
   "sklearn.utils.estimator_checks.check_estimator"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_estimator_required_parameters_skip.MyEstimator": {
  "lineno": 541,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_estimator_required_parameters_skip.MyEstimator.__init__": {
  "lineno": 544,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_estimator_transformer_no_mixin": {
  "lineno": 453,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_raises_regex",
   "sklearn.utils.estimator_checks.check_estimator"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_estimators_unfitted": {
  "lineno": 489,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_raises_regex",
   "sklearn.utils.estimator_checks.check_estimators_unfitted"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_fit_score_takes_y_works_on_deprecated_fit": {
  "lineno": 321,
  "symbols_in_volume": [
   "sklearn.utils.estimator_checks.check_fit_score_takes_y"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_fit_score_takes_y_works_on_deprecated_fit.TestEstimatorWithDeprecatedFitMethod": {
  "lineno": 325,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_fit_score_takes_y_works_on_deprecated_fit.TestEstimatorWithDeprecatedFitMethod.fit": {
  "lineno": 326,
  "symbols_in_volume": [
   "sklearn.utils.deprecated"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_no_attributes_set_in_init": {
  "lineno": 501,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_raises_regex",
   "sklearn.utils.estimator_checks.check_no_attributes_set_in_init"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_no_attributes_set_in_init.NonConformantEstimatorNoParamSet": {
  "lineno": 506,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_no_attributes_set_in_init.NonConformantEstimatorNoParamSet.__init__": {
  "lineno": 507,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_no_attributes_set_in_init.NonConformantEstimatorPrivateSet": {
  "lineno": 502,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_no_attributes_set_in_init.NonConformantEstimatorPrivateSet.__init__": {
  "lineno": 503,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_check_outlier_corruption": {
  "lineno": 444,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils.estimator_checks.check_outlier_corruption"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_estimator_checks.test_not_an_array_array_function": {
  "lineno": 310,
  "symbols_in_volume": [
   "numpy.__version__",
   "numpy.may_share_memory",
   "numpy.ones",
   "numpy.sum",
   "sklearn.utils._testing.SkipTest",
   "sklearn.utils._testing.assert_raises_regex",
   "sklearn.utils.estimator_checks._NotAnArray",
   "sklearn.utils.fixes._parse_version"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.utils.tests.test_extmath.check_randomized_svd_low_rank": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.dtype",
   "numpy.float32",
   "numpy.float64",
   "scipy.linalg.svd",
   "scipy.sparse.csr_matrix",
   "sklearn.datasets.make_low_rank_matrix",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils.extmath.randomized_svd"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_cartesian": {
  "lineno": 418,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.newaxis",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils.extmath.cartesian"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_density": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.lil_matrix",
   "sklearn.utils.extmath.density"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_mean_and_variance_ignore_nan": {
  "lineno": 478,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32",
   "numpy.nan",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils.extmath._incremental_mean_and_var"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_variance_ddof": {
  "lineno": 582,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.full",
   "numpy.hstack",
   "numpy.int32",
   "numpy.mean",
   "numpy.random.RandomState",
   "numpy.var",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils.extmath._incremental_mean_and_var"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_variance_numerical_stability": {
  "lineno": 502,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.float64",
   "numpy.full",
   "numpy.int32",
   "numpy.log",
   "numpy.vstack",
   "numpy.zeros",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.skip_if_32bit",
   "sklearn.utils.extmath._incremental_mean_and_var"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_variance_numerical_stability.naive_mean_variance_update": {
  "lineno": 528,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_variance_numerical_stability.np_var": {
  "lineno": 506,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_variance_numerical_stability.one_pass_var": {
  "lineno": 511,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_variance_numerical_stability.two_pass_var": {
  "lineno": 520,
  "symbols_in_volume": [
   "numpy.mean"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_incremental_variance_update_formulas": {
  "lineno": 456,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.full",
   "numpy.int32",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils.extmath._incremental_mean_and_var"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_logistic_sigmoid": {
  "lineno": 444,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linspace",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.extmath.log_logistic"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_logistic_sigmoid.naive_log_logistic": {
  "lineno": 446,
  "symbols_in_volume": [
   "numpy.log",
   "scipy.special.expit"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_random_weights": {
  "lineno": 68,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils.extmath.weighted_mode"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_randomized_svd_infinite_rank": {
  "lineno": 232,
  "symbols_in_volume": [
   "numpy.abs",
   "scipy.linalg.svd",
   "sklearn.datasets.make_low_rank_matrix",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils.extmath.randomized_svd"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_randomized_svd_low_rank_all_dtypes": {
  "lineno": 158,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_randomized_svd_low_rank_with_noise": {
  "lineno": 195,
  "symbols_in_volume": [
   "numpy.abs",
   "scipy.linalg.svd",
   "sklearn.datasets.make_low_rank_matrix",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils.extmath.randomized_svd"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_randomized_svd_power_iteration_normalizer": {
  "lineno": 300,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.diag",
   "numpy.random.RandomState",
   "scipy.linalg.norm",
   "sklearn.datasets.make_low_rank_matrix",
   "sklearn.utils.extmath.randomized_svd"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_randomized_svd_sign_flip": {
  "lineno": 375,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.eye",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils.extmath.randomized_svd"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_randomized_svd_sign_flip_with_transpose": {
  "lineno": 387,
  "symbols_in_volume": [
   "numpy.arange",
   "sklearn.utils.extmath.randomized_svd"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_randomized_svd_sign_flip_with_transpose.max_loading_is_positive": {
  "lineno": 392,
  "symbols_in_volume": [
   "numpy.abs"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_randomized_svd_sparse_warnings": {
  "lineno": 335,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "scipy.sparse.SparseEfficiencyWarning",
   "scipy.sparse.dok_matrix",
   "scipy.sparse.lil_matrix",
   "sklearn.datasets.make_low_rank_matrix",
   "sklearn.utils._testing.assert_warns_message",
   "sklearn.utils.extmath.randomized_svd"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_randomized_svd_transpose_consistency": {
  "lineno": 267,
  "symbols_in_volume": [
   "numpy.dot",
   "scipy.linalg.svd",
   "sklearn.datasets.make_low_rank_matrix",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils.extmath.randomized_svd"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_row_norms": {
  "lineno": 164,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.RandomState",
   "numpy.sqrt",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.extmath.row_norms"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_safe_min": {
  "lineno": 648,
  "symbols_in_volume": [
   "numpy.ones",
   "pytest.warns",
   "sklearn.utils.extmath.safe_min"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_safe_sparse_dot_2d": {
  "lineno": 655,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils.extmath.safe_sparse_dot"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_safe_sparse_dot_2d_1d": {
  "lineno": 693,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils.extmath.safe_sparse_dot"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_safe_sparse_dot_dense_output": {
  "lineno": 715,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.mark.parametrize",
   "scipy.sparse.issparse",
   "scipy.sparse.random",
   "sklearn.utils._testing.assert_allclose_dense_sparse",
   "sklearn.utils.extmath.safe_sparse_dot"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_safe_sparse_dot_nd": {
  "lineno": 673,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.random.RandomState",
   "scipy.sparse.csr_matrix",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils.extmath.safe_sparse_dot"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_softmax": {
  "lineno": 628,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.random.RandomState",
   "numpy.sum",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.extmath.softmax"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_stable_cumsum": {
  "lineno": 636,
  "symbols_in_volume": [
   "numpy.cumsum",
   "numpy.random.RandomState",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_warns",
   "sklearn.utils.extmath.stable_cumsum"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_svd_flip": {
  "lineno": 350,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.random.RandomState",
   "scipy.linalg.svd",
   "sklearn.utils._testing.assert_almost_equal",
   "sklearn.utils.extmath.svd_flip"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_uniform_weights": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.random.RandomState",
   "scipy.stats.mode",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils.extmath.weighted_mode"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_extmath.test_vector_sign_flip": {
  "lineno": 617,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.argmax",
   "numpy.newaxis",
   "numpy.random.RandomState",
   "numpy.sign",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils.extmath._deterministic_vector_sign_flip"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_fast_dict": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.utils.tests.test_fast_dict.test_int_float_dict": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.intp",
   "numpy.random.RandomState",
   "numpy.unique",
   "sklearn.utils._fast_dict.IntFloatDict"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_fast_dict.test_int_float_dict_argmin": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float64",
   "numpy.intp",
   "sklearn.utils._fast_dict.IntFloatDict",
   "sklearn.utils._fast_dict.argmin"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_fixes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.utils.tests.test_fixes.test_joblib_parallel_args": {
  "lineno": 31,
  "symbols_in_volume": [
   "joblib",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.utils.fixes._joblib_parallel_args"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_fixes.test_loguniform": {
  "lineno": 76,
  "symbols_in_volume": [
   "math.log",
   "numpy.abs",
   "numpy.array",
   "numpy.exp",
   "numpy.histogram",
   "pytest.mark.parametrize",
   "sklearn.utils.fixes.loguniform"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_fixes.test_masked_array_obj_dtype_pickleable": {
  "lineno": 21,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils.fixes.MaskedArray"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_fixes.test_object_dtype_isnan": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils.fixes._object_dtype_isnan"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_linear_assignment": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.utils.tests.test_linear_assignment.test_hungarian": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.filterwarnings",
   "sklearn.utils.linear_assignment_._hungarian"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_metaestimators": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.utils.tests.test_metaestimators.HasNoPredict": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.tests.test_metaestimators.HasPredict": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.tests.test_metaestimators.HasPredict.predict": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_metaestimators.MetaEst": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.tests.test_metaestimators.MetaEst.__init__": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_metaestimators.MetaEst.predict": {
  "lineno": 34,
  "symbols_in_volume": [
   "sklearn.utils.metaestimators.if_delegate_has_method"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_metaestimators.MetaEstTestList": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.tests.test_metaestimators.MetaEstTestList.predict": {
  "lineno": 50,
  "symbols_in_volume": [
   "sklearn.utils.metaestimators.if_delegate_has_method"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_metaestimators.MetaEstTestTuple": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.tests.test_metaestimators.MetaEstTestTuple.predict": {
  "lineno": 42,
  "symbols_in_volume": [
   "sklearn.utils.metaestimators.if_delegate_has_method"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_metaestimators.MockMetaEstimator": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.tests.test_metaestimators.MockMetaEstimator.func": {
  "lineno": 13,
  "symbols_in_volume": [
   "sklearn.utils.metaestimators.if_delegate_has_method"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_metaestimators.Prefix": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.tests.test_metaestimators.Prefix.func": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_metaestimators.test_delegated_docstring": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_metaestimators.test_if_delegate_has_method": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool",
   "numpy.float",
   "numpy.float32",
   "numpy.int8",
   "numpy.random.RandomState",
   "numpy.uint8",
   "scipy.sparse.csr_matrix",
   "sklearn.utils.estimator_checks._NotAnArray"
  ],
  "type": "module"
 },
 "sklearn.utils.tests.test_multiclass.test_check_classification_targets": {
  "lineno": 261,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_raises_regex",
   "sklearn.utils.multiclass.check_classification_targets"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.test_class_distribution": {
  "lineno": 306,
  "symbols_in_volume": [
   "numpy.array",
   "scipy.sparse.csc_matrix",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.multiclass.class_distribution"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.test_is_multilabel": {
  "lineno": 221,
  "symbols_in_volume": [
   "numpy.asarray",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.dok_matrix",
   "scipy.sparse.issparse",
   "scipy.sparse.lil_matrix",
   "sklearn.utils.multiclass.is_multilabel"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.test_ovr_decision_function": {
  "lineno": 384,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.array",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils.multiclass._ovr_decision_function"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.test_safe_split_with_precomputed_kernel": {
  "lineno": 362,
  "symbols_in_volume": [
   "numpy.dot",
   "sklearn.datasets.load_iris",
   "sklearn.model_selection.ShuffleSplit",
   "sklearn.svm.SVC",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.metaestimators._safe_split"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.test_type_of_target": {
  "lineno": 274,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_raises_regex",
   "sklearn.utils.multiclass.type_of_target"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.test_type_of_target_pandas_sparse": {
  "lineno": 292,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "numpy.nan",
   "pytest.importorskip",
   "pytest.raises",
   "sklearn.utils.multiclass.type_of_target"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.test_unique_labels": {
  "lineno": 155,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.ones",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils.multiclass.unique_labels"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.test_unique_labels_mixed_types": {
  "lineno": 205,
  "symbols_in_volume": [
   "itertools.product",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils.multiclass.unique_labels"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_multiclass.test_unique_labels_non_specific": {
  "lineno": 187,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils.multiclass.unique_labels"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_murmurhash": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.utils.tests.test_murmurhash.test_mmhash3_bytes": {
  "lineno": 44,
  "symbols_in_volume": [
   "sklearn.utils.murmurhash.murmurhash3_32"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_murmurhash.test_mmhash3_int": {
  "lineno": 11,
  "symbols_in_volume": [
   "sklearn.utils.murmurhash.murmurhash3_32"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_murmurhash.test_mmhash3_int_array": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32",
   "numpy.random.RandomState",
   "numpy.testing.assert_array_equal",
   "sklearn.utils.murmurhash.murmurhash3_32"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_murmurhash.test_mmhash3_unicode": {
  "lineno": 52,
  "symbols_in_volume": [
   "sklearn.utils.murmurhash.murmurhash3_32"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_murmurhash.test_no_collision_on_byte_range": {
  "lineno": 60,
  "symbols_in_volume": [
   "sklearn.utils.murmurhash.murmurhash3_32"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_murmurhash.test_uniform_distribution": {
  "lineno": 68,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.full",
   "numpy.ones",
   "numpy.testing.assert_array_almost_equal",
   "numpy.zeros",
   "sklearn.utils.murmurhash.murmurhash3_32"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_optimize": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.utils.tests.test_optimize.test_newton_cg": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.random.RandomState",
   "scipy.optimize.fmin_ncg",
   "sklearn.utils._testing.assert_array_almost_equal",
   "sklearn.utils.optimize._newton_cg"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_optimize.test_newton_cg.func": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_optimize.test_newton_cg.grad": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_optimize.test_newton_cg.grad_hess": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_optimize.test_newton_cg.hess": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.utils.tests.test_pprint.CountVectorizer": {
  "lineno": 81,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.utils.tests.test_pprint.CountVectorizer.__init__": {
  "lineno": 82,
  "symbols_in_volume": [
   "numpy.int64"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.GridSearchCV": {
  "lineno": 63,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.utils.tests.test_pprint.GridSearchCV.__init__": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.LogisticRegression": {
  "lineno": 18,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.utils.tests.test_pprint.LogisticRegression.__init__": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.LogisticRegression.fit": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.NMF": {
  "lineno": 149,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.utils.tests.test_pprint.NMF.__init__": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.PCA": {
  "lineno": 136,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.utils.tests.test_pprint.PCA.__init__": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.Pipeline": {
  "lineno": 108,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.utils.tests.test_pprint.Pipeline.__init__": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.RFE": {
  "lineno": 54,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.utils.tests.test_pprint.RFE.__init__": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.SVC": {
  "lineno": 114,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.utils.tests.test_pprint.SVC.__init__": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.SimpleImputer": {
  "lineno": 167,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn.utils.tests.test_pprint.SimpleImputer.__init__": {
  "lineno": 168,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.StandardScaler": {
  "lineno": 44,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "sklearn.utils.tests.test_pprint.StandardScaler.__init__": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.StandardScaler.transform": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.test_basic": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.test_bruteforce_ellipsis": {
  "lineno": 463,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.test_builtin_prettyprinter": {
  "lineno": 536,
  "symbols_in_volume": [
   "pprint.PrettyPrinter"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.test_changed_only": {
  "lineno": 191,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.linear_model.LogisticRegressionCV",
   "sklearn.set_config"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.test_deeply_nested": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.test_gridsearch": {
  "lineno": 280,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.test_gridsearch_pipeline": {
  "lineno": 305,
  "symbols_in_volume": [
   "re.sub",
   "sklearn.feature_selection.SelectKBest",
   "sklearn.feature_selection.chi2",
   "sklearn.utils._pprint._EstimatorPrettyPrinter"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.test_n_max_elements_to_show": {
  "lineno": 374,
  "symbols_in_volume": [
   "sklearn.utils._pprint._EstimatorPrettyPrinter"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_pprint.test_pipeline": {
  "lineno": 222,
  "symbols_in_volume": [
   "sklearn.pipeline.make_pipeline"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_random": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.utils.tests.test_random.check_edge_case_of_sample_int": {
  "lineno": 33,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils.random.sample_without_replacement"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_random.check_sample_int": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.size",
   "numpy.unique",
   "sklearn.utils.random.sample_without_replacement"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_random.check_sample_int_distribution": {
  "lineno": 71,
  "symbols_in_volume": [
   "sklearn.utils.fixes.comb",
   "sklearn.utils.random.sample_without_replacement"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_random.test_invalid_sample_without_replacement_algorithm": {
  "lineno": 14,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils.random.sample_without_replacement"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_random.test_our_rand_r": {
  "lineno": 180,
  "symbols_in_volume": [
   "sklearn.utils._random._our_rand_r_py"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_random.test_random_choice_csc": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bincount",
   "numpy.testing.assert_array_almost_equal",
   "scipy.sparse.issparse",
   "sklearn.utils.random._random_choice_csc"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_random.test_random_choice_csc_errors": {
  "lineno": 154,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils.random._random_choice_csc"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_random.test_sample_without_replacement_algorithms": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_random.test_sample_without_replacement_algorithms.sample_without_replacement_method": {
  "lineno": 22,
  "symbols_in_volume": [
   "sklearn.utils.random.sample_without_replacement"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_seq_dataset": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float32",
   "numpy.float64",
   "scipy.sparse.csr_matrix",
   "sklearn.datasets.load_iris"
  ],
  "type": "module"
 },
 "sklearn.utils.tests.test_seq_dataset.assert_csr_equal_values": {
  "lineno": 28,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_seq_dataset.make_dense_dataset_32": {
  "lineno": 39,
  "symbols_in_volume": [
   "sklearn.utils._seq_dataset.ArrayDataset32"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_seq_dataset.make_dense_dataset_64": {
  "lineno": 43,
  "symbols_in_volume": [
   "sklearn.utils._seq_dataset.ArrayDataset64"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_seq_dataset.make_sparse_dataset_32": {
  "lineno": 47,
  "symbols_in_volume": [
   "sklearn.utils._seq_dataset.CSRDataset32"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_seq_dataset.make_sparse_dataset_64": {
  "lineno": 52,
  "symbols_in_volume": [
   "sklearn.utils._seq_dataset.CSRDataset64"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_seq_dataset.test_buffer_dtype_mismatch_error": {
  "lineno": 140,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.utils._seq_dataset.ArrayDataset32",
   "sklearn.utils._seq_dataset.ArrayDataset64",
   "sklearn.utils._seq_dataset.CSRDataset32",
   "sklearn.utils._seq_dataset.CSRDataset64"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_seq_dataset.test_fused_types_consistency": {
  "lineno": 121,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.assert_allclose"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_seq_dataset.test_seq_dataset_basic_iteration": {
  "lineno": 57,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_seq_dataset.test_seq_dataset_shuffle": {
  "lineno": 84,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_shortest_path": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.utils.tests.test_shortest_path.floyd_warshall_slow": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.isinf",
   "numpy.minimum",
   "numpy.where"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_shortest_path.generate_graph": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_shortest_path.test_dijkstra": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "sklearn.utils.graph.graph_shortest_path"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_shortest_path.test_dijkstra_bug_fix": {
  "lineno": 89,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_almost_equal",
   "sklearn.utils.graph.graph_shortest_path"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_shortest_path.test_floyd_warshall": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "sklearn.utils.graph.graph_shortest_path"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_shortest_path.test_shortest_path": {
  "lineno": 69,
  "symbols_in_volume": [
   "collections.defaultdict",
   "numpy.minimum",
   "numpy.testing.assert_array_almost_equal",
   "sklearn.utils.graph.single_source_shortest_path_length"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_show_versions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.utils.tests.test_show_versions.test_get_deps_info": {
  "lineno": 16,
  "symbols_in_volume": [
   "sklearn.utils._show_versions._get_deps_info",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_show_versions.test_get_sys_info": {
  "lineno": 8,
  "symbols_in_volume": [
   "sklearn.utils._show_versions._get_sys_info"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_show_versions.test_show_versions": {
  "lineno": 31,
  "symbols_in_volume": [
   "sklearn.utils._show_versions.show_versions",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_count_nonzero": {
  "lineno": 427,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.int64",
   "numpy.intp",
   "numpy.testing.assert_array_almost_equal",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils.sparsefuncs.count_nonzero"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_csc_row_median": {
  "lineno": 473,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.median",
   "numpy.random.RandomState",
   "numpy.testing.assert_array_equal",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils.sparsefuncs.csc_median_axis_0"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_densify_rows": {
  "lineno": 209,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.intp",
   "numpy.ones",
   "numpy.ones_like",
   "numpy.testing.assert_array_equal",
   "scipy.sparse.csr_matrix",
   "sklearn.utils.sparsefuncs_fast.assign_rows_csr"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_incr_mean_variance_axis": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.atleast_2d",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.RandomState",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_array_equal",
   "numpy.vstack",
   "numpy.zeros",
   "numpy.zeros_like",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.lil_matrix",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils.sparsefuncs.incr_mean_variance_axis",
   "sklearn.utils.sparsefuncs.mean_variance_axis"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_incr_mean_variance_axis_ignore_nan": {
  "lineno": 153,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.nan",
   "pytest.mark.parametrize",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils.sparsefuncs.incr_mean_variance_axis"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_inplace_column_scale": {
  "lineno": 227,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.random.RandomState",
   "numpy.testing.assert_array_almost_equal",
   "scipy.sparse.rand",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils.sparsefuncs.inplace_column_scale"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_inplace_normalize": {
  "lineno": 506,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.testing.assert_array_almost_equal",
   "scipy.sparse.csr_matrix",
   "sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l1",
   "sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l2"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_inplace_row_scale": {
  "lineno": 257,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.random.RandomState",
   "numpy.testing.assert_array_almost_equal",
   "scipy.sparse.rand",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils.sparsefuncs.inplace_column_scale",
   "sklearn.utils.sparsefuncs.inplace_row_scale"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_inplace_swap_column": {
  "lineno": 337,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.testing.assert_array_equal",
   "scipy.linalg.get_blas_funcs",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils.sparsefuncs.inplace_swap_column"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_inplace_swap_row": {
  "lineno": 287,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.testing.assert_array_equal",
   "scipy.linalg.get_blas_funcs",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils.sparsefuncs.inplace_swap_row"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_mean_variance_axis0": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "numpy.mean",
   "numpy.testing.assert_array_almost_equal",
   "numpy.var",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.lil_matrix",
   "sklearn.datasets.make_classification",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils.sparsefuncs.mean_variance_axis"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_mean_variance_axis1": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "numpy.mean",
   "numpy.testing.assert_array_almost_equal",
   "numpy.var",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.lil_matrix",
   "sklearn.datasets.make_classification",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils.sparsefuncs.mean_variance_axis"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_mean_variance_illegal_axis": {
  "lineno": 190,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "sklearn.datasets.make_classification",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils.sparsefuncs.incr_mean_variance_axis",
   "sklearn.utils.sparsefuncs.mean_variance_axis"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_min_max": {
  "lineno": 387,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.max",
   "numpy.min",
   "numpy.nan",
   "numpy.nanmax",
   "numpy.nanmin",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.utils.sparsefuncs.min_max_axis"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_sparsefuncs.test_min_max_axis_errors": {
  "lineno": 414,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils.sparsefuncs.min_max_axis"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn.utils.tests.test_testing.Klass": {
  "lineno": 395,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.tests.test_testing.Klass.f_bad_sections": {
  "lineno": 399,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.Klass.f_missing": {
  "lineno": 396,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.MockEst": {
  "lineno": 417,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.tests.test_testing.MockEst.__init__": {
  "lineno": 418,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.MockEst.fit": {
  "lineno": 420,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.MockEst.predict": {
  "lineno": 423,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.MockEst.predict_proba": {
  "lineno": 426,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.MockEst.score": {
  "lineno": 429,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.MockMetaEstimator": {
  "lineno": 433,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.tests.test_testing.MockMetaEstimator.__init__": {
  "lineno": 434,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.MockMetaEstimator.fit": {
  "lineno": 477,
  "symbols_in_volume": [
   "sklearn.utils.deprecation.deprecated"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.MockMetaEstimator.predict": {
  "lineno": 444,
  "symbols_in_volume": [
   "sklearn.utils.metaestimators.if_delegate_has_method"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.MockMetaEstimator.predict_proba": {
  "lineno": 466,
  "symbols_in_volume": [
   "sklearn.utils.metaestimators.if_delegate_has_method"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.MockMetaEstimator.score": {
  "lineno": 455,
  "symbols_in_volume": [
   "sklearn.utils.deprecation.deprecated",
   "sklearn.utils.metaestimators.if_delegate_has_method"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.RegistrationCounter": {
  "lineno": 599,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.tests.test_testing.RegistrationCounter.__call__": {
  "lineno": 603,
  "symbols_in_volume": [
   "sklearn.utils._testing._delete_folder"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.RegistrationCounter.__init__": {
  "lineno": 600,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.TestWarns": {
  "lineno": 242,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "sklearn.utils.tests.test_testing.TestWarns.test_warn": {
  "lineno": 243,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_no_warnings",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils._testing.assert_warns",
   "warnings.catch_warnings",
   "warnings.filters",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.TestWarns.test_warn.f": {
  "lineno": 244,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.TestWarns.test_warn_wrong_warning": {
  "lineno": 259,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_warns",
   "sys.modules.filters"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.TestWarns.test_warn_wrong_warning.f": {
  "lineno": 260,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.check_memmap": {
  "lineno": 608,
  "symbols_in_volume": [
   "numpy.memmap",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.f_bad_order": {
  "lineno": 319,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.f_bad_sections": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.f_check_param_definition": {
  "lineno": 376,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.f_missing": {
  "lineno": 359,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.f_ok": {
  "lineno": 281,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.f_too_many_param_docstring": {
  "lineno": 338,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_assert_allclose_dense_sparse": {
  "lineno": 82,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ones",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.diags",
   "sklearn.utils._testing.assert_allclose_dense_sparse",
   "sklearn.utils._testing.assert_raise_message"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_assert_greater": {
  "lineno": 50,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "sklearn.utils._testing.assert_greater",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_assert_greater_equal": {
  "lineno": 65,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "sklearn.utils._testing.assert_greater_equal",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_assert_less": {
  "lineno": 43,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "sklearn.utils._testing.assert_less",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_assert_less_equal": {
  "lineno": 57,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "sklearn.utils._testing.assert_less_equal",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_assert_raise_message": {
  "lineno": 108,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_raise_message",
   "sklearn.utils._testing.assert_raises"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_assert_raise_message._no_raise": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_assert_raise_message._raise_ValueError": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_assert_raises_msg": {
  "lineno": 102,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils._testing.assert_raises_regex"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_check_docstring_parameters": {
  "lineno": 482,
  "symbols_in_volume": [
   "sklearn.utils._testing.SkipTest",
   "sklearn.utils._testing.assert_raise_message",
   "sklearn.utils._testing.check_docstring_parameters"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_convert_container": {
  "lineno": 680,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pytest.importorskip",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "sklearn.utils._testing._convert_container"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_create_memmap_backed_data": {
  "lineno": 636,
  "symbols_in_volume": [
   "atexit",
   "numpy.ones",
   "os.path.dirname",
   "sklearn.utils._testing.create_memmap_backed_data"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_deprecated_helpers": {
  "lineno": 664,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.warns",
   "sklearn.utils._testing.assert_equal",
   "sklearn.utils._testing.assert_greater",
   "sklearn.utils._testing.assert_greater_equal",
   "sklearn.utils._testing.assert_in",
   "sklearn.utils._testing.assert_less",
   "sklearn.utils._testing.assert_less_equal",
   "sklearn.utils._testing.assert_not_equal",
   "sklearn.utils._testing.assert_not_in"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning": {
  "lineno": 136,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.utils._testing.assert_no_warnings",
   "sklearn.utils._testing.assert_warns",
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning._multiple_warning_function": {
  "lineno": 142,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning._warning_function": {
  "lineno": 139,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.context_manager_no_deprecation_multiple_warning": {
  "lineno": 212,
  "symbols_in_volume": [
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.context_manager_no_deprecation_warning": {
  "lineno": 204,
  "symbols_in_volume": [
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.context_manager_no_user_multiple_warning": {
  "lineno": 216,
  "symbols_in_volume": [
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.context_manager_no_user_warning": {
  "lineno": 208,
  "symbols_in_volume": [
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.context_manager_no_warning": {
  "lineno": 196,
  "symbols_in_volume": [
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.context_manager_no_warning_multiple": {
  "lineno": 200,
  "symbols_in_volume": [
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.decorator_no_deprecation_multiple_warning": {
  "lineno": 180,
  "symbols_in_volume": [
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.decorator_no_deprecation_warning": {
  "lineno": 172,
  "symbols_in_volume": [
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.decorator_no_user_multiple_warning": {
  "lineno": 184,
  "symbols_in_volume": [
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.decorator_no_user_warning": {
  "lineno": 176,
  "symbols_in_volume": [
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.decorator_no_warning": {
  "lineno": 163,
  "symbols_in_volume": [
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.decorator_no_warning_multiple": {
  "lineno": 168,
  "symbols_in_volume": [
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_ignore_warning.test": {
  "lineno": 237,
  "symbols_in_volume": [
   "sklearn.utils._testing.ignore_warnings"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_set_random_state": {
  "lineno": 73,
  "symbols_in_volume": [
   "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.utils._testing.set_random_state"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_testing.test_tempmemmap": {
  "lineno": 615,
  "symbols_in_volume": [
   "atexit",
   "numpy.ones",
   "os.name",
   "os.path.dirname",
   "os.path.exists",
   "sklearn.utils._testing.TempMemmap"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "module"
 },
 "sklearn.utils.tests.test_utils.dummy_func": {
  "lineno": 636,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_column_or_1d": {
  "lineno": 180,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ravel",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils.column_or_1d"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_deprecated": {
  "lineno": 56,
  "symbols_in_volume": [
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_deprecated.Ham": {
  "lineno": 80,
  "symbols_in_volume": [
   "sklearn.utils.deprecated"
  ],
  "type": "class"
 },
 "sklearn.utils.tests.test_utils.test_deprecated.ham": {
  "lineno": 64,
  "symbols_in_volume": [
   "sklearn.utils.deprecated"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_deprecation_joblib_api": {
  "lineno": 640,
  "symbols_in_volume": [
   "sklearn.utils.Memory",
   "sklearn.utils.Parallel",
   "sklearn.utils._joblib.Memory",
   "sklearn.utils._joblib.Parallel",
   "sklearn.utils._joblib.cpu_count",
   "sklearn.utils._joblib.delayed",
   "sklearn.utils._joblib.effective_n_jobs",
   "sklearn.utils._joblib.hash",
   "sklearn.utils._joblib.joblib.parallel.BACKENDS",
   "sklearn.utils._joblib.parallel_backend",
   "sklearn.utils._joblib.register_parallel_backend",
   "sklearn.utils._testing.assert_no_warnings",
   "sklearn.utils.cpu_count",
   "sklearn.utils.delayed",
   "sklearn.utils.effective_n_jobs",
   "sklearn.utils.hash",
   "sklearn.utils.parallel_backend",
   "sklearn.utils.register_parallel_backend"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_deprecation_joblib_api.check_warning": {
  "lineno": 641,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_determine_key_type": {
  "lineno": 203,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool_",
   "numpy.int32",
   "numpy.int64",
   "numpy.uint8",
   "pytest.mark.parametrize",
   "sklearn.utils._determine_key_type"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_determine_key_type_error": {
  "lineno": 232,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.utils._determine_key_type"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_determine_key_type_slice_error": {
  "lineno": 237,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.utils._determine_key_type"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_gen_even_slices": {
  "lineno": 516,
  "symbols_in_volume": [
   "itertools.chain",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raises_regex",
   "sklearn.utils.gen_even_slices"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_get_chunk_n_rows": {
  "lineno": 529,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.config_context",
   "sklearn.utils._testing.assert_no_warnings",
   "sklearn.utils.get_chunk_n_rows"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_get_chunk_n_rows.check_warning": {
  "lineno": 545,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_warns_message"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_get_column_indices_error": {
  "lineno": 460,
  "symbols_in_volume": [
   "pytest.importorskip",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.utils._get_column_indices"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_is_scalar_nan": {
  "lineno": 621,
  "symbols_in_volume": [
   "numpy.float",
   "numpy.float32",
   "numpy.float64",
   "numpy.nan",
   "pytest.mark.parametrize",
   "sklearn.utils.is_scalar_nan"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_make_rng": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.random",
   "numpy.random.RandomState",
   "numpy.random.mtrand._rand",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_message_with_time": {
  "lineno": 565,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._message_with_time",
   "string.ascii_lowercase"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_print_elapsed_time": {
  "lineno": 607,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._message_with_time",
   "sklearn.utils._print_elapsed_time",
   "timeit"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_resample": {
  "lineno": 93,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils.resample"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_resample_stratified": {
  "lineno": 106,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.random.RandomState",
   "numpy.sum",
   "sklearn.utils.resample"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_resample_stratified_replace": {
  "lineno": 123,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.unique",
   "sklearn.utils.resample"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_resample_stratify_2dy": {
  "lineno": 145,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.utils.resample"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_resample_stratify_sparse_error": {
  "lineno": 155,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.raises",
   "scipy.sparse.csr_matrix",
   "sklearn.utils.resample"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_indexing_1d_array_error": {
  "lineno": 436,
  "symbols_in_volume": [
   "numpy.asarray",
   "pytest.importorskip",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.utils._safe_indexing"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_indexing_1d_container": {
  "lineno": 260,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._safe_indexing",
   "sklearn.utils._testing._convert_container",
   "sklearn.utils._testing.assert_allclose_dense_sparse"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_indexing_1d_container_mask": {
  "lineno": 331,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._safe_indexing",
   "sklearn.utils._testing._convert_container",
   "sklearn.utils._testing.assert_allclose_dense_sparse"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_indexing_1d_scalar": {
  "lineno": 378,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._safe_indexing",
   "sklearn.utils._testing._convert_container"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_indexing_2d_container_axis_0": {
  "lineno": 242,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._safe_indexing",
   "sklearn.utils._testing._convert_container",
   "sklearn.utils._testing.assert_allclose_dense_sparse"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_indexing_2d_container_axis_1": {
  "lineno": 276,
  "symbols_in_volume": [
   "copy.copy",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.utils._safe_indexing",
   "sklearn.utils._testing._convert_container",
   "sklearn.utils._testing.assert_allclose_dense_sparse"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_indexing_2d_mask": {
  "lineno": 343,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._safe_indexing",
   "sklearn.utils._testing._convert_container",
   "sklearn.utils._testing.assert_allclose_dense_sparse"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_indexing_2d_read_only_axis_1": {
  "lineno": 306,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.mark.parametrize",
   "sklearn.utils._safe_indexing",
   "sklearn.utils._testing._convert_container",
   "sklearn.utils._testing.assert_allclose_dense_sparse"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_indexing_2d_scalar_axis_0": {
  "lineno": 365,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._safe_indexing",
   "sklearn.utils._testing._convert_container",
   "sklearn.utils._testing.assert_allclose_dense_sparse"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_indexing_2d_scalar_axis_1": {
  "lineno": 386,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.utils._safe_indexing",
   "sklearn.utils._testing._convert_container",
   "sklearn.utils._testing.assert_allclose_dense_sparse"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_indexing_None_axis_0": {
  "lineno": 415,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils._safe_indexing",
   "sklearn.utils._testing._convert_container",
   "sklearn.utils._testing.assert_allclose_dense_sparse"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_indexing_container_axis_0_unsupported_type": {
  "lineno": 452,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.utils._safe_indexing"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_indexing_error_axis": {
  "lineno": 430,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.utils._safe_indexing"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_indexing_pandas_no_matching_cols_error": {
  "lineno": 422,
  "symbols_in_volume": [
   "pytest.importorskip",
   "pytest.raises",
   "sklearn.utils._safe_indexing"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_safe_mask": {
  "lineno": 167,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "sklearn.utils.check_random_state",
   "sklearn.utils.safe_mask"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_shuffle_dont_convert_to_array": {
  "lineno": 483,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "scipy.sparse.csc_matrix",
   "sklearn.utils._mocking.MockDataFrame",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils.shuffle"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_shuffle_on_ndim_equals_three": {
  "lineno": 473,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.utils.shuffle"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_shuffle_on_ndim_equals_three.to_tuple": {
  "lineno": 474,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_utils.test_to_object_array": {
  "lineno": 680,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray",
   "pytest.mark.parametrize",
   "sklearn.utils._to_object_array"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "sklearn.exceptions.PositiveSpectrumWarning"
  ],
  "type": "module"
 },
 "sklearn.utils.tests.test_validation.DummyMemory": {
  "lineno": 889,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.tests.test_validation.DummyMemory.cache": {
  "lineno": 890,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.WrongDummyMemory": {
  "lineno": 894,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.tests.test_validation.X_64bit": {
  "lineno": 537,
  "symbols_in_volume": [
   "pytest.fixture",
   "scipy.sparse.rand"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_allclose_dense_sparse_equals": {
  "lineno": 1114,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "pytest.mark.parametrize",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.utils.validation._allclose_dense_sparse"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_allclose_dense_sparse_not_equals": {
  "lineno": 1122,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "pytest.mark.parametrize",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.utils.validation._allclose_dense_sparse"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_allclose_dense_sparse_raise": {
  "lineno": 1130,
  "symbols_in_volume": [
   "numpy.arange",
   "pytest.mark.parametrize",
   "pytest.raises",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.utils.validation._allclose_dense_sparse"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_as_float_array": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asfortranarray",
   "numpy.bool",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.isfortran",
   "numpy.isnan",
   "numpy.matrix",
   "numpy.nan",
   "numpy.ones",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint8",
   "scipy.sparse.csc_matrix",
   "sklearn.random_projection._sparse_random_matrix",
   "sklearn.utils.as_float_array"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_as_float_array_nan": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.random",
   "pytest.mark.parametrize",
   "scipy.sparse.rand",
   "sklearn.utils._testing.assert_allclose_dense_sparse",
   "sklearn.utils.as_float_array"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_X_y_informative_error": {
  "lineno": 945,
  "symbols_in_volume": [
   "numpy.ones",
   "sklearn.utils._testing.assert_raise_message",
   "sklearn.utils.check_X_y"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array": {
  "lineno": 232,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.arange",
   "numpy.array",
   "numpy.bool",
   "numpy.float",
   "numpy.float32",
   "numpy.int",
   "numpy.int32",
   "numpy.ndarray",
   "pytest.warns",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.isspmatrix_dok",
   "sklearn.utils._testing.assert_raise_message",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils._testing.ignore_warnings",
   "sklearn.utils.check_array",
   "sklearn.utils.estimator_checks._NotAnArray",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_accept_large_sparse_no_exception": {
  "lineno": 546,
  "symbols_in_volume": [
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_accept_large_sparse_raise_exception": {
  "lineno": 551,
  "symbols_in_volume": [
   "sklearn.utils._testing.assert_raise_message",
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_accept_sparse_no_exception": {
  "lineno": 527,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_accept_sparse_type_exception": {
  "lineno": 501,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix",
   "sklearn.svm.SVR",
   "sklearn.utils._testing.assert_raise_message",
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_complex_data_error": {
  "lineno": 615,
  "symbols_in_volume": [
   "numpy.array",
   "scipy.sparse.coo_matrix",
   "sklearn.utils._mocking.MockDataFrame",
   "sklearn.utils._testing.assert_raises_regex",
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_dtype_stability": {
  "lineno": 409,
  "symbols_in_volume": [
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_dtype_warning": {
  "lineno": 416,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "pytest.warns",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sklearn.exceptions.DataConversionWarning",
   "sklearn.neighbors.KNeighborsClassifier",
   "sklearn.utils._testing.assert_no_warnings",
   "sklearn.utils._testing.assert_warns",
   "sklearn.utils._testing.assert_warns_message",
   "sklearn.utils.check_X_y",
   "sklearn.utils.check_array",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_force_all_finite_object": {
  "lineno": 199,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pytest.raises",
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_force_all_finite_object_unsafe_casting": {
  "lineno": 212,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "numpy.int",
   "numpy.nan",
   "numpy.object",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_force_all_finite_valid": {
  "lineno": 162,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.float",
   "numpy.inf",
   "numpy.nan",
   "pytest.mark.parametrize",
   "scipy.sparse.csr_matrix",
   "sklearn.utils._testing.assert_allclose_dense_sparse",
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_force_all_finiteinvalid": {
  "lineno": 178,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.float",
   "numpy.inf",
   "numpy.nan",
   "pytest.mark.parametrize",
   "pytest.raises",
   "scipy.sparse.csr_matrix",
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_memmap": {
  "lineno": 917,
  "symbols_in_volume": [
   "numpy.may_share_memory",
   "numpy.ones",
   "pytest.mark.parametrize",
   "sklearn.utils._testing.TempMemmap",
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_min_samples_and_features_messages": {
  "lineno": 561,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.ones",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raise_message",
   "sklearn.utils.check_X_y",
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_on_mock_dataframe": {
  "lineno": 400,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.float32",
   "sklearn.utils._mocking.MockDataFrame",
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_pandas_dtype_casting": {
  "lineno": 361,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int64",
   "pytest.importorskip",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils.check_array",
   "sklearn.utils.validation.FLOAT_DTYPES"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_pandas_dtype_object_conversion": {
  "lineno": 349,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.object",
   "sklearn.utils._mocking.MockDataFrame",
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_series": {
  "lineno": 818,
  "symbols_in_volume": [
   "numpy.array",
   "pandas",
   "pandas.Series",
   "pytest.importorskip",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_array_warn_on_dtype_deprecation": {
  "lineno": 490,
  "symbols_in_volume": [
   "numpy.asarray",
   "pytest.warns",
   "sklearn.utils.check_X_y",
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_consistent_length": {
  "lineno": 778,
  "symbols_in_volume": [
   "numpy.array",
   "scipy.sparse.csr_matrix",
   "sklearn.ensemble.RandomForestRegressor",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils._testing.assert_raises_regex",
   "sklearn.utils.validation.check_consistent_length"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_dataframe_fit_attribute": {
  "lineno": 797,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "sklearn.utils._testing.SkipTest",
   "sklearn.utils.validation.check_consistent_length"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_dataframe_mixed_float_dtypes": {
  "lineno": 868,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "pandas",
   "pandas.DataFrame",
   "pytest.importorskip",
   "sklearn.utils._testing.assert_allclose_dense_sparse",
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_dataframe_warns_on_dtype": {
  "lineno": 830,
  "symbols_in_volume": [
   "numpy.float64",
   "pandas",
   "pandas.DataFrame",
   "pytest.importorskip",
   "pytest.warns",
   "sklearn.exceptions.DataConversionWarning",
   "sklearn.utils._testing.assert_warns",
   "sklearn.utils._testing.assert_warns_message",
   "sklearn.utils.check_array",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_fit_params": {
  "lineno": 1193,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randn",
   "pytest.mark.parametrize",
   "scipy.sparse.csc_matrix",
   "sklearn.utils._safe_indexing",
   "sklearn.utils._testing.assert_allclose_dense_sparse",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils.validation._check_fit_params"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_is_fitted": {
  "lineno": 700,
  "symbols_in_volume": [
   "sklearn.datasets.make_blobs",
   "sklearn.exceptions.NotFittedError",
   "sklearn.linear_model.ARDRegression",
   "sklearn.svm.SVR",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_is_fitted_attributes": {
  "lineno": 732,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.exceptions.NotFittedError",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_is_fitted_attributes.MyEstimator": {
  "lineno": 733,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.tests.test_validation.test_check_is_fitted_attributes.MyEstimator.fit": {
  "lineno": 734,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_is_fitted_with_attributes": {
  "lineno": 760,
  "symbols_in_volume": [
   "operator.itemgetter",
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.datasets.make_blobs",
   "sklearn.exceptions.NotFittedError",
   "sklearn.linear_model.ARDRegression",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_memory": {
  "lineno": 898,
  "symbols_in_volume": [
   "os.path.join",
   "pytest.mark.filterwarnings",
   "sklearn.utils._testing.assert_raises_regex",
   "sklearn.utils.validation.check_memory"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_non_negative": {
  "lineno": 926,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "pytest.mark.parametrize",
   "scipy.sparse.bsr_matrix",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.dia_matrix",
   "scipy.sparse.dok_matrix",
   "scipy.sparse.lil_matrix",
   "sklearn.utils._testing.assert_raises_regex",
   "sklearn.utils.validation.check_non_negative"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_psd_eigenvalues_invalid": {
  "lineno": 1066,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.utils.validation._check_psd_eigenvalues"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_psd_eigenvalues_valid": {
  "lineno": 1028,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.warns",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils.validation._check_psd_eigenvalues"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_sample_weight": {
  "lineno": 1077,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.int",
   "numpy.ones",
   "pytest.raises",
   "sklearn.utils._testing.assert_allclose",
   "sklearn.utils.validation._check_sample_weight"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_scalar_invalid": {
  "lineno": 982,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn.utils.validation.check_scalar"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_scalar_valid": {
  "lineno": 971,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.warns",
   "sklearn.utils.validation.check_scalar"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_check_symmetric": {
  "lineno": 670,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "scipy.sparse.bsr_matrix",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.dok_matrix",
   "scipy.sparse.issparse",
   "scipy.sparse.lil_matrix",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils._testing.assert_warns",
   "sklearn.utils.check_symmetric"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_deprecate_positional_args_warns_for_class": {
  "lineno": 1164,
  "symbols_in_volume": [
   "pytest.warns"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_deprecate_positional_args_warns_for_class.A1": {
  "lineno": 1166,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.tests.test_validation.test_deprecate_positional_args_warns_for_class.A1.__init__": {
  "lineno": 1167,
  "symbols_in_volume": [
   "sklearn.utils.validation._deprecate_positional_args"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_deprecate_positional_args_warns_for_class.A2": {
  "lineno": 1179,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.tests.test_validation.test_deprecate_positional_args_warns_for_class.A2.__init__": {
  "lineno": 1180,
  "symbols_in_volume": [
   "sklearn.utils.validation._deprecate_positional_args"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_deprecate_positional_args_warns_for_function": {
  "lineno": 1141,
  "symbols_in_volume": [
   "pytest.warns"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_deprecate_positional_args_warns_for_function.f1": {
  "lineno": 1143,
  "symbols_in_volume": [
   "sklearn.utils.validation._deprecate_positional_args"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_deprecate_positional_args_warns_for_function.f2": {
  "lineno": 1155,
  "symbols_in_volume": [
   "sklearn.utils.validation._deprecate_positional_args"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_has_fit_parameter": {
  "lineno": 654,
  "symbols_in_volume": [
   "sklearn.ensemble.RandomForestRegressor",
   "sklearn.neighbors.KNeighborsClassifier",
   "sklearn.svm.SVR",
   "sklearn.utils.validation.has_fit_parameter"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_has_fit_parameter.TestClassWithDeprecatedFitMethod": {
  "lineno": 660,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.tests.test_validation.test_has_fit_parameter.TestClassWithDeprecatedFitMethod.fit": {
  "lineno": 661,
  "symbols_in_volume": [
   "sklearn.utils.deprecated"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_memmap": {
  "lineno": 127,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.float32",
   "numpy.memmap",
   "sklearn.utils._testing.assert_array_equal",
   "sklearn.utils.as_float_array",
   "sklearn.utils.check_array",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_np_matrix": {
  "lineno": 118,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.matrix",
   "scipy.sparse.csc_matrix",
   "sklearn.utils.as_float_array"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_ordering": {
  "lineno": 143,
  "symbols_in_volume": [
   "numpy.ones",
   "scipy.sparse.csr_matrix",
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_retrieve_samples_from_non_standard_shape": {
  "lineno": 951,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.utils.validation._num_samples"
  ],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_retrieve_samples_from_non_standard_shape.TestNoLenWeirdShape": {
  "lineno": 963,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.tests.test_validation.test_retrieve_samples_from_non_standard_shape.TestNoLenWeirdShape.__init__": {
  "lineno": 964,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_retrieve_samples_from_non_standard_shape.TestNonNumericShape": {
  "lineno": 952,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sklearn.utils.tests.test_validation.test_retrieve_samples_from_non_standard_shape.TestNonNumericShape.__init__": {
  "lineno": 953,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_retrieve_samples_from_non_standard_shape.TestNonNumericShape.__len__": {
  "lineno": 956,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.tests.test_validation.test_suppress_validation": {
  "lineno": 809,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "sklearn.set_config",
   "sklearn.utils._testing.assert_raises",
   "sklearn.utils.validation.assert_all_finite"
  ],
  "type": "function"
 },
 "sklearn.utils.tosequence": {
  "lineno": 831,
  "symbols_in_volume": [
   "collections.abc.Sequence",
   "numpy.asarray",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "sklearn.utils.validation": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "warnings.simplefilter"
  ],
  "type": "module"
 },
 "sklearn.utils.validation._allclose_dense_sparse": {
  "lineno": 1257,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array_equal",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.utils.validation._assert_all_finite": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.asanyarray",
   "numpy.dtype",
   "numpy.isfinite",
   "numpy.isinf",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn.utils.validation._check_fit_params": {
  "lineno": 1331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.validation._check_large_sparse": {
  "lineno": 617,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.validation._check_psd_eigenvalues": {
  "lineno": 1039,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.float64",
   "numpy.imag",
   "numpy.isreal",
   "numpy.real",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.utils.validation._check_sample_weight": {
  "lineno": 1202,
  "symbols_in_volume": [
   "numbers.Number",
   "numpy.float32",
   "numpy.float64",
   "numpy.full",
   "numpy.ones"
  ],
  "type": "function"
 },
 "sklearn.utils.validation._deprecate_positional_args": {
  "lineno": 1293,
  "symbols_in_volume": [
   "inspect.Parameter.KEYWORD_ONLY",
   "inspect.Parameter.POSITIONAL_OR_KEYWORD",
   "inspect.signature"
  ],
  "type": "function"
 },
 "sklearn.utils.validation._deprecate_positional_args.inner_f": {
  "lineno": 1314,
  "symbols_in_volume": [
   "functools.wraps",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.utils.validation._ensure_no_complex_data": {
  "lineno": 343,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.validation._ensure_sparse_format": {
  "lineno": 252,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.utils.validation._is_arraylike": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.validation._make_indexable": {
  "lineno": 215,
  "symbols_in_volume": [
   "numpy.array",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.utils.validation._num_samples": {
  "lineno": 136,
  "symbols_in_volume": [
   "numbers.Integral",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "sklearn.utils.validation.as_float_array": {
  "lineno": 80,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.matrix",
   "numpy.ndarray",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.utils.validation.assert_all_finite": {
  "lineno": 68,
  "symbols_in_volume": [
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.utils.validation.check_X_y": {
  "lineno": 636,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "sklearn.utils.validation.check_array": {
  "lineno": 350,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "numpy.core.numeric.ComplexWarning",
   "numpy.dtype",
   "numpy.flexible",
   "numpy.float64",
   "numpy.issubdtype",
   "numpy.may_share_memory",
   "numpy.object",
   "numpy.result_type",
   "scipy.sparse.issparse",
   "warnings.catch_warnings",
   "warnings.simplefilter",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.utils.validation.check_consistent_length": {
  "lineno": 197,
  "symbols_in_volume": [
   "numpy.unique"
  ],
  "type": "function"
 },
 "sklearn.utils.validation.check_is_fitted": {
  "lineno": 904,
  "symbols_in_volume": [
   "inspect.isclass"
  ],
  "type": "function"
 },
 "sklearn.utils.validation.check_memory": {
  "lineno": 164,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "joblib.Memory",
   "joblib.__version__"
  ],
  "type": "function"
 },
 "sklearn.utils.validation.check_non_negative": {
  "lineno": 970,
  "symbols_in_volume": [
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "sklearn.utils.validation.check_random_state": {
  "lineno": 800,
  "symbols_in_volume": [
   "numbers.Integral",
   "numpy.random",
   "numpy.random.RandomState",
   "numpy.random.mtrand._rand"
  ],
  "type": "function"
 },
 "sklearn.utils.validation.check_scalar": {
  "lineno": 997,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.validation.check_symmetric": {
  "lineno": 848,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.allclose",
   "scipy.sparse.issparse",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.utils.validation.column_or_1d": {
  "lineno": 770,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ravel",
   "numpy.shape",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn.utils.validation.has_fit_parameter": {
  "lineno": 821,
  "symbols_in_volume": [
   "inspect.signature"
  ],
  "type": "function"
 },
 "sklearn.utils.validation.indexable": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn.utils.weight_vector": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "sklearn.utils.weight_vector.__getattr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 }
}